%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Ver004-figure9.pdf
%%Creator: Adobe Acrobat 17.9.0
%%For: gadis
%%CreationDate: 02-12-2017, 17:40:34
%%BoundingBox: 0 0 613 793
%%HiResBoundingBox: 0 0 613 793
%%CropBox: 0 0 613 793
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 667 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2017-12-02T23:39:28Z"
   xmp:CreatorTool="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36"
   xmp:ModifyDate="2017-12-02T23:39:28Z"
   pdf:Producer="Skia/PDF m62"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -793 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 793 li
613 793 li
613 0 li
cp
clp
0 0 mo
817 0 li
817 1056 li
0 1056 li
0 0 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: LAAAAA+Arial Initial
ct_T42Dict begin
-0.664 -0.324 2 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /LAAAAA+Arial
Type42DictBegin
[<00010000000b000b000b000b63767420adbfdf8e000000bc0000066e6670
676d38a5162b0000072c00000bb0676c796653f995450000cff000003c22
68656164e6643c44000012dc000000366868656112331956000013140000
0024686d7478b40da31200001338000042346c6f636103d3443c0000556c
000042386d617870168309af000097a4000000206e616d6535d34cc20000
97c400002bfa70726570a1b2e8ea0000c3c000000c2f6764697200000000
000000000000000005ba001905ba001a05a70019042600180000ffe70000
ffe80000ffe7fe69ffe805ba0019fe69ffe802ea000000b8000000b80000
000000a800ad016900ad00bf00c201f0001800af00b900b400c800170044
009c007c009400870006005a00c80089005200520005004400940119ffb4
002f00a1000300a100cd00170057007e00ba00160118ffe9007f008503d3
00870085000d002200410050006f008d014cff75005c00df04830037004c
006e00700180ff58ff8eff92ffa400a500b903c8fffd000b001a00630063
00cdffee05d8ffdc002d005c0095009900df019209b500400057008000b9
039d0072009a035d0401ff67fffa00030021007700cd0004004d00cd01c0
022b004c006500e70118017c034305d8ffa3ffb0ffc40003001c005d0068
009a00ba013501470221055cff4dffcd0016002d00780080009900b200b6
00b600b800bd00da010c05f0ffa4fff00019002c0049007f00b400ce01c0
03fefd81fe3f000000050018002900390049006f00be00c700d0012301c1
026f050c05320540057affd4001400310055005700a700b400e601f7027e
027e027f03c60446ff42000e0085009100bf00c200c500e1011a012f014f
01560229026f029e03720008002c00310031006400690089009800c700de
012b01b6020c02cf03a304ab04fb061dfee0ff0e00060026009b009d00c1
010d011801200173018201d601e30243025f029b02e2039404a904d20761
001c005e006d008d00ab00f7011201380151015b0168017c018701910199
01cd01d001e802410254026b02ef0368037103bd04420442045304730483
0586058b06e8fe58fec4fed1fef7ff32ff860051007c008100910095009e
00b400b900cf00d900d900df00e20105010b010e010e012001210155017b
017b017e018d01a201a801a901b401d001d001e201e901f201f501fb0200
02000206021b0221022202220223027202770294029c02cf02cf02d002ec
02f903170322032b0335033c0359036f037103870390039003b503e1041a
04cf04ff053205320596059f05a805ab05c205f0060c0782080008ccfca3
fd2afddefe00fe88fe96feb2feb4ffe100150019001a001c001f003c0051
00610061006a0078009600a500af00d3010c0118011a012a013e014c0151
015f016a0171017801820184019a01a501a801a901ae01bc01cd01d701ef
0200020d021c02210222022e02350242024f024f025e0265027102900292
02b402d602fa0307030b030f0315032a0347035d036503740379039603b0
03cc03dd03e203f603fc03fc03ff040a041f04220426042b0447045f0475
049e04e704e7055c05cb05e5060a066d068606b806f10736073e07500751
075d078f07b607d4086000b600c300b500b7000000000000000000000000
01e00381034503b5008e0233041902ce02ce002d005f0064034d023f0000
02a80188027d01b402240578063b023b014e00f00426029402c6029f02f6
023b034d014b0153006a0231000000000000061404aa0000003c04c300ed
04bc026502ce03b50078060c017e02ef060c00b201000239000001c50330
042b03cb00da03df010704a100db040a011701ed02a70350010b01bd043e
05580021039c00ae0371017d00b5024500000afb088c012b014e01aa0087
0054013201f803ff0003024e00b4003703e30083006b02d800ed00770088
009701640467008e0033017c00e700a6029e0329056e062a061501c90269
048a021301b4000204a9000002390124010305140084015d039a06ef02d9
007500cf040a00de03ac04bc02cf02ae034d04f005520168006d007d0086
0071ff810079055804d2016700030156002504e00094007c033204210094
007f0072005c002f00b6001800ba00b80041034d00720018001f004c016a
01550099009a009a009800b200040078006900140057006e00ce00b40654
02b80067050e016500e7000004cbfe52005affa60099ff67006eff92002d
ffd40087ff7c00b800a800e5008f00a80185fe7b0070001e00d900de014c
054602cf0546ff2d028a02d90253029600b7000000000000000000000000
00000125011800ea00ea00ae0000003e05bb008a04d70053003fff8cffd5
00150028002200990062004a00e4006d00ee00e5004803c00033fe4e02b1
ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a507050061
072b00ed04b001d200b6007b00650252ff740365fe690094008f005c0040
00860075008900890471048304f9008c00910096009b00a000a500aa00af
00b400b90000405b8574737271706f6e6d6c6b6a6968676665625d585756
55544f4e41403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2c2320b000508a8a64b10003
255458b0401bb10103255458b037438b59b04f2b5923b0622b2321235865
592d2cb13a000c215460432d2cb1020042b123018851b1400188535a58b9
10000020885458b202010243604259b12401885158b920000040885458b2
020202436042b12401885458b2022002436042004b014b5258b202080243
6042591bb940000080885458b202040243604259b94000008063b8010088
5458b202080243604259b94000010063b80200885458b202100243604259
b12601885158b94000020063b80400885458b202400243604259b9400004
0063b80800885458b202800243604259b12801885158b94000080063b810
00885458ba00020100000243604259595959595959b10002435458400a37
403a403b403e023f021bb10102435458b237403aba0100003b0100b33e01
3f011bb18002435258b237403ab80180b13b401bb901000002435258b237
403aba0180003b01401bb901800002435258b237403ab80200b13b401bb2
37403aba0100003b0100595959b9400000808855b94000020063b8040088
555a58b33e003f011bb33e003f0159595942424242422d2cb0024354584b
53234b515a58381b2121591b21212121592d2cb0572b580c028a4b53b004
264b515a580a381b0a2121591b21212121592d2c20b0024354b00123b05f
237821b1000243b056237921b0024323b020205c58212121b100471c598a
8a208a208a23b81000635658b81000635658212121b1012c1c591b2159b0
8062205c58212121b1001b1c5923b08062205c58212121b1000c1c598ab0
0161b8ffb31c23212d2c20b0024354b00123b07b237821b1000243b07223
7921b10002438ab020205c58212121b0631c598a8a208a208a23b8100063
5658b81000635658b00426b0015bb00426b00426b004261b21212121b136
00231c591b2159b0042623b08062205c588a5c8a5a23212321b01d1c598a
b08062205c5821212321b00e1c59b00426b00161b8ff981c23212d2c012d
2cb0022563b0206066b00225b82000626023622d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b035435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
3543525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12501885058b94000020063b8040088545cb0124b525b1bb001592d0001
00000006e666fd9ba0915f0f3cf5081b080000000000a2e3272a00000000
d19de3fdfaaffd671000085100000009000100010000000000010000073e
fe4e00431000faaffa7a100000010000000000000000000000000000108d
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009602ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008804d5ffd90180
008002d50080071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
006a05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006a0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c0004a
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b00840415002b060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d00000000000000000000000000000000000000000000000000000000
00000000000000000000ffac00000000000001010000ffce0310007d0000
ff37023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f90046041300280413002803b4ff4903b4ff490448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c0043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000031
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
0011028d00300600010004ee0015034d007901a8001301d6ffd701a80056
01d60011037500320375003201a8002e01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
0242fffe0300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a003104ce0041045a002704ce003a045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003106000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000001300000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000fef30000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ff880000ffaf0000ff3f0000ff640000fe7e0000ff36
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fee002bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00100400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7005702d9
0044029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0054046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fec80000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fe1c0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a007004600000062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7007004000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000104000006072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a08980063072c004406aa002004e6001c0987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000ff980000ff980000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f600880606003e042b002305c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000ff290000ff6a0000ffac0000ff590000ff560000ff73
0000fed70000fe5c0000005e0000ff560000ff56000000500000ff0b0000
fe550000ff430000ff5c0000ff750000ff640000ff560000ff0b0000ff8a
0000ff560000ff430000ff430000ff640000ff75000000500000fddd0000
ff750000ffad0000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf0000077d
00460a660046038300460a2f00460541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000000000000000000000000473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ffac0000ffac02d2009600000000021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c7008805c900a505c7
009c05c900a50000fecd0000ff480000fec90000fece0000fec50000fed0
0000fed10000feee0000fed60000fedc0000fdd90639005804730048078d
001905c70006059f00a40000feb905dc006304c60009084c001906ba0006
023900b9038000720187005a0187005a0400009904000099023900b00239
00b0023900b002aa0019000000460000003b000000310000005600000044
000000560000004a0000004904e30030047300500473005c0312003f0450
00480446003d047300310450003d047d00620427003f0473005604790054
047300550319003b0473003c047300560473003204730055047e0062042f
004b04730053047b005505c5006a05d3006305f800a6094a00a605f8009c
0302003b054100a4063900600472004601c7008903f80087020a00890473
004e0250000e047800850473005c0473005c0302003b020a008901c70088
047100000489009804c3005c04e70098046f009804080098052f005c04f0
009801ea0098037300290489009803bc009805c7009804ec00980531005c
046d00980531005c04db0098046d004a0410002904dd0091046800080659
001e046f0008046c0008040e001f0691000006aa005c03bc003805310031
046f009804e7001404c30090047100000471000004710000047100000471
00000471000004c3005c046f0098046f0098046f0098046f009801eafff4
01ea008e01eaffb601eaffda04ec00980531005c0531005c0531005c0531
005c0531005c04dd009104dd009104dd009104dd0091046c000804710000
047100000471000004c3005c04c3005c04c3005c04c3005c04e7009804e7
0014046f0098046f0098046f0098046f0098046f0098052f005c052f005c
052f005c052f005c04f0009804f2002e01eaff9601eaffbd01eaffd401ea
003e01ea008705430098037300290489009803bc009803bc009803bc0098
03bc009804ec009804ec009804ec009804f500980531005c0531005c0531
005c04db009804db009804db0098046d004a046d004a046d004a046d004a
046d004a041000290410002904100029040e002904dd009104dd009104dd
009104dd009104dd009104dd00910659001e0659001e0659001e0659001e
046c0008046c0008046c0008040e001f040e001f040e001f047100000691
000005310031047100000489009803ae009804710000046f0098040e001f
04f000980531005c01ea009804890098045a000205c7009804ec0098042f
004c0531005c04e60098046d00980425006a04100029046c00080546004c
046f00080543004c0531005204710000046f009804f0009801ea008e0531
005c046c00080531005201eaffda046c0008046f009805af002903ae0098
04c7005c046d004a01ea009801eaffda0373002906f4000f06b6009805da
0029041600980463002304e6009804710000048600980489009803ae0098
0469000f046f009806540023041f004604e5009804e50098041600980469
000f05c7009804f000980531005c04e60098046d009804c3005c04100029
04630023050d004c046f000804dc0098047d004c06280098061e0098057c
003c05e700980455009804c6004606af009804db00120323009802aa0022
02aa006b02aa001902aa002102aa001702aa002202aa002e02aa004902aa
002a02aa003302aa002e02aa003302aa002205c5006a05c5006a05c5006a
05c5006a05c5006a05c5006a05c5006a05c5006a05c5006a05c5006a05c5
006a05d3006305d3006305d3006305d3006305d3006305d3006305d30063
05d3006305d3006305d3006305d3006305f800a605f800a605f800a605f8
00a605f8009c05f8009c05f8009c05f8009c05f8009c05f8009c05f8009c
05f8009c05f8009c0302003b0302003b0302003b0302003b030200320302
003b0302003b0302003b0302003b0416ffac0302003b0302003b0302003b
020a0089020a004e0269008902a50089020a00070302003b0302003b0302
003b0302003b030200320302003b0302003b0302003b054100a404720046
047200460472004604720046047200460472004604720046047200460472
004601c7ffa703f80087020a0089020a004e0269008902a50089020a0007
0250000e0250000e0300000e0250000e0478008504780085047800850478
008504a0005702aa001702aa002202aa004902aa002a04ee001504ed009d
04ed009d060b001a04d5008505e3008502260099022600890226002c0226
001e02260063022600300226001b0226001d0226001d022600290226001e
022600260226001d02260008022600280c9600460e0c00460000ffba0ed2
00460000ff5b0000ff910000ffb70000ff9b0481003604350036043dffba
043dffba0481003604350036043dffba043dffba0692003e0692003e043f
ffba043fffba03e9004a03e9004a0481003604350036043dffba043dffba
01a8ffc301d6ff5f01a8ffe901d6ff85051b003204b5002401f4ffba01f4
ffba051b003204b5002401f4ffba01f4ffba051b003204b5002401f4ffba
01f4ffba03750032037500320375003203750032067f0045067f0045067f
0045067f00450481003604350036043dffba043dffba0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba04cf002d04cf
002d0327ffba0327ffba04b4ffe00500ffe00496ffe804e4ffe8075c0032
05da0032070e0032051300390bb700000000fe2c0000fffc0000006b0000
00730000006b051b003204b5002401f4ffba01f4ffba067f001407760014
0327ffba041effba067f0014077600140327ffba041effba051b003204b5
002401f4ffba01f4ffba051b003204b5002401f4ffba01f4ffba051b0032
04b5002401f4ffba01f4ffba0000fff5049e00a403cd000a04e3003003aa
002605c000a104ac0087055600960473005a0a6600440473007e0556001d
07ae001206150018064e009e05be008707a9000906da001f055600960400
0086088c000d07130018090e00a406ce008805c700a40455008805a300a2
046f0087023900130239001304740048062200bf032f000e04ba005c0474
004905590014049b000a06aa00980556fffd05dc00a50590004b02aaffe5
0473004403eb004c0146ffce029200000556005c04e3002902390069063c
00aa0b56ffc2084aff120b0c00320ed2004401a8ffba01a8ffba01a8ffba
01d6000201a8003201a8004601a8ffba01a8001a0251003a01a8002901a8
004601a8ffba01a8004801a8ffba01a8002901a8ffba01a8004601a8ffba
01a8006e01a8ffba01f4009e01f4001001f4001b01f4001001f4fff9022e
008d01f4006b0199004602bf003202bf00320473000f02ea001302ea0013
0427fff70427fff7051b0032051b0032051b0032051b0032051b0032051b
0032051b0032051b0032048000240480002403e5ffba0480002404800024
03e5ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043d
ffba043dffba04a7ffba04a7ffba04a7ffba04a7ffba064f0027064f0027
0224ffba021affba04a7004604a700460224ffba021affba040d0047040d
004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba051b0032
04b5002401f4ffba01f4ffba051b003204b5002401f4ffba01f4ffba03b7
004a03b7004a0375003203750032036b0046036b00460000ff1e0000ff48
0000ff1e0000fee70000ff4f0000fef90000ffb50000ff520000ff470000
ffb50000ff520000ff470000ff000000fea60000ff000000ff230000ff24
0000ff570000ff570000ff920000ff920000ff920000ff920000ff2f0000
fed70000ff340000ff31045a005304ce004a0000ffac033100190411002d
04d10096052400280000ffac0000ff2a028d00ab028d00a00444003c043d
003c0444003c043d003c0444003c043d003c0445003c0444003c043d003c
04a70046028d00ab0327002202300014017a002e0000ff760658001505ea
00a505cc00a505ba004605be004605cc00a505ac009104c800a505ca00a4
067400a405ba0046054500a5043900a5076500a50622009b0590009b04ed
003c05a6008a05be0046059a009b060900a505bb009105aaffec05990087
05cc00a5059800870657003c05e8009b061d00a505cc00a5059600460547
005c056d00a5056b0069042000a506180050057d00380642006406190046
023100b601c7006c015bff79019affa1021f001f01daffb4041c004206a9
00820468008704a3004804a90087046d00870467004803ef008704680087
0557008704a300480468008701c2008706ad008704570048046d00870468
0087042f0046046d00870478008e0468008201c2ffa3046dffc403a60006
0468008702c6001006a900820423005f04830087046800820468008206a6
008204680087047100420327008706a600820467fff80470004605f3003c
05b40087023900b9029800220802006c0802006c05d0004608d5008208d5
008208d0008208d500820b1500820473001c08000000000000000000ff4d
05b5003a05b5003a01f4ffba01f4ffba015e009302b3005f02b3005f08c9
003e08c9003e06c5ffba06c5ffba067f0014077600140327ffba041effba
0242003a0193003a03e9004a03e9004a0000ffce0400003705c7ffc0046b
ffa30aa30000088e000005550014048500000540001204ab001806a30000
064a004c044600130606001306060013044b001305f2003f065b008700>
<000000000000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c0000006c0000006c0000006c0000006c0000006c0000006c
0000006c0000006c000000c20000011000000190000003f40000052e0000
07b8000007b8000007b8000007b8000007b80000087e0000087e0000087e
000008f0000008f0000008f0000008f0000008f0000008f0000008f00000
08f0000008f0000008f0000008f0000008f0000008f0000008f0000008f0
000008f0000008f0000008f0000008f000000c8600000c8600000c860000
0c8600000c8600000c8600000c8600000c8600000c8600000c8600000c86
00000c8600000c8600000c8600000c8600000c8600000c8600000c860000
0c8600000c860000104e0000104e000013080000157a000017fc000019a2
00001c4c00001e580000208800002088000023d00000256a000029420000
2b7000002dc600002ffc00002ffc00003140000035ee000037a8000039ae
000039ae000039ae00003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200003c2200003c2200003c2200003c2200003c2200003c2200003c22
00003c2200003c2200003c2200003c2200003c2200003c2200003c220000
3c2200010000108d02b5003c00ca000700020010004000860000051705ec
000500020000003a02be0000000300000000021a00000000000300000001
000a021a0000000300000002000e029c00000003000000030044027e0000
000300000004000a021a0000000300000005001802c20000000300000006
000e02da00000003000000070064021a0000000300000008003002f60000
000300000009008a0506000000030000000d0d1805900001000000000000
010d12a80001000000000001000513b50001000000000002000713f50001
000000000003002213e60001000000000004000513b50001000000000005
000c14080001000000000006000714140001000000000007003113b50001
000000000008001812af00010000000000090045141b000100000000000d
068c14600003000104030002000c1aec000300010405000200101afc0003
000104060002000c1b0c000300010407000200101b180003000104080002
00101b280003000104090000021e02e80003000104090001000a021a0003
000104090002000e029c00030001040900030044027e0003000104090004
000a021a0003000104090005001802c20003000104090006000e02da0003
00010409000700621b380003000104090008003002f60003000104090009
008a0506000300010409000d0d2a1b9a00030001040a0002000c1aec0003
0001040b0002001028c400030001040c0002000c1aec00030001040e0002
000c28d40003000104100002000e28e40003000104130002001228f20003
000104140002000c1aec000300010415000200101aec0003000104160002
000c1aec0003000104190002000e290400030001041b0002001028d40003
0001041d0002000c1aec00030001041f0002000c1aec0003000104240002
000e291200030001042a0002000e292000030001042d0002000e292e0003
0001080a0002000c1aec0003000108160002000c1aec000300010c0a0002
000c1aec000300010c0c0002000c1aec00a9002000320030003100350020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e00200041006c006c0020
005200690067006800740073002000520065007300650072007600650064
002e0020000d000d0048006500620072006500770020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200063006f0070007900720069006700680074002000a90020
00320030003000330020002600200032003000300037002c002000520061
006c00700068002000480061006e0063006f0063006b002000260020004a
006f0068006e00200048007500640073006f006e002e0020005400680069
00730020006c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020006900730020006f00700065006e00200073006f
007500720063006500200073006f00660074007700610072006500200075
006e00640065007200200074006800650020004d004900540020004c0069
00630065006e00730065003b002000730065006500200065006d00620065
00640064006500640020006c006900630065006e00730065002000640065
0073006300720069007000740069006f006e00200066006f007200200064
0065007400610069006c0073002e0041007200690061006c002000200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002e004d006f006e
006f0074007900700065003a0041007200690061006c0020005200650067
0075006c0061007200200028004d006900630072006f0073006f00660074
002900560065007200730069006f006e00200036002e0039003000410072
00690061006c004d005400a9002000320030003100350020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e0020000d
000a000d000a0048006500620072006500770020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200063006f0070007900720069006700680074002000a900200032
0030003000330020002600200032003000300037002c002000520061006c
00700068002000480061006e0063006f0063006b002000260020004a006f
0068006e00200048007500640073006f006e002e00200054006800690073
0020006c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020006900730020006f00700065006e00200073006f0075
00720063006500200073006f00660074007700610072006500200075006e
00640065007200200074006800650020004d004900540020004c00690063
0065006e00730065003b002000730065006500200065006d006200650064
0064006500640020006c006900630065006e007300650020006400650073
006300720069007000740069006f006e00200066006f0072002000640065
007400610069006c0073002e004d006f006e006f00740079007000650020
0054007900700065002000440072006100770069006e00670020004f0066
00660069006300650020002d00200052006f00620069006e0020004e0069
00630068006f006c00610073002c00200050006100740072006900630069
00610020005300610075006e006400650072007300200031003900380032
0059006f00750020006d0061007900200075007300650020007400680069
007300200066006f006e00740020006100730020007000650072006d0069
00740074006500640020006200790020007400680065002000450055004c
004100200066006f00720020007400680065002000700072006f00640075
0063007400200069006e0020007700680069006300680020007400680069
007300200066006f006e007400200069007300200069006e0063006c0075
00640065006400200074006f00200064006900730070006c006100790020
0061006e00640020007000720069006e007400200063006f006e00740065
006e0074002e002000200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e000d000d00540068006500200066006f006c006c006f0077
0069006e00670020006c006900630065006e00730065002c002000620061
0073006500640020006f006e00200074006800650020004d004900540020
006c006900630065006e00730065002000280068007400740070003a002f
002f0065006e002e00770069006b006900700065006400690061002e006f
00720067002f00770069006b0069002f004d00490054005f004c00690063
0065006e007300650029002c0020006100700070006c0069006500730020
0074006f00200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020201c004c00610079006f007500740020004c006f0067
00690063201d0020006100730020006a006f0069006e0074006c00790020
0064006500760065006c006f007000650064002000620079002000520061
006c00700068002000480061006e0063006f0063006b00200061006e0064
0020004a006f0068006e00200048007500640073006f006e002e0020000d
000d005000650072006d0069007300730069006f006e0020006900730020
0068006500720065006200790020006700720061006e007400650064002c
002000660072006500650020006f00660020006300680061007200670065
002c00200074006f00200061006e007900200070006500720073006f006e
0020006f0062007400610069006e0069006e00670020006100200063006f
007000790020006f006600200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
00480065006200720065007700200061006e00640020006100730073006f
00630069006100740065006400200064006f00630075006d0065006e0074
006100740069006f006e002000660069006c006500730020002800740068
00650020201c004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065201d0029002c00200074006f
0020006400650061006c00200069006e00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
007700610072006500200077006900740068006f00750074002000720065
0073007400720069006300740069006f006e002c00200069006e0063006c
007500640069006e006700200077006900740068006f007500740020006c
0069006d00690074006100740069006f006e002000740068006500200072
0069006700680074007300200074006f0020007500730065002c00200063
006f00700079002c0020006d006f0064006900660079002c0020006d0065
007200670065002c0020007000750062006c006900730068002c00200064
006900730074007200690062007500740065002c0020007300750062006c
006900630065006e00730065002c00200061006e0064002f006f00720020
00730065006c006c00200063006f00700069006500730020006f00660020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065002c00200061006e0064
00200074006f0020007000650072006d0069007400200070006500720073
006f006e007300200074006f002000770068006f006d0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f0066007400770061007200650020006900730020006600750072006e
0069007300680065006400200074006f00200064006f00200073006f002c
0020007300750062006a00650063007400200074006f0020007400680065
00200066006f006c006c006f00770069006e006700200063006f006e0064
006900740069006f006e0073003a000d000d005400680065002000610062
006f0076006500200063006f00700079007200690067006800740020006e
006f007400690063006500200061006e0064002000740068006900730020
007000650072006d0069007300730069006f006e0020006e006f00740069
006300650020007300680061006c006c00200062006500200069006e0063
006c007500640065006400200069006e00200061006c006c00200063006f
00700069006500730020006f00720020007300750062007300740061006e
007400690061006c00200070006f007200740069006f006e00730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002e000d000d
00540048004500200053004f004600540057004100520045002000490053
002000500052004f00560049004400450044002000270041005300200049
00530027002c00200057004900540048004f005500540020005700410052
00520041004e005400590020004f004600200041004e00590020004b0049
004e0044002c002000450058005000520045005300530020004f00520020
0049004d0050004c004900450044002c00200049004e0043004c00550044
0049004e004700200042005500540020004e004f00540020004c0049004d
004900540045004400200054004f00200054004800450020005700410052
00520041004e00540049004500530020004f00460020004d004500520043
00480041004e0054004100420049004c004900540059002c002000460049
0054004e00450053005300200046004f0052002000410020005000410052
0054004900430055004c0041005200200050005500520050004f00530045
00200041004e00440020004e004f004e0049004e004600520049004e0047
0045004d0045004e0054002e00200049004e0020004e004f002000450056
0045004e00540020005300480041004c004c002000540048004500200041
005500540048004f005200530020004f005200200043004f005000590052
004900470048005400200048004f004c0044004500520053002000420045
0020004c004900410042004c004500200046004f005200200041004e0059
00200043004c00410049004d002c002000440041004d0041004700450053
0020004f00520020004f00540048004500520020004c0049004100420049
004c004900540059002c0020005700480045005400480045005200200049
004e00200041004e00200041004300540049004f004e0020004f00460020
0043004f004e00540052004100430054002c00200054004f005200540020
004f00520020004f00540048004500520057004900530045002c00200041
0052004900530049004e0047002000460052004f004d002c0020004f0055
00540020004f00460020004f005200200049004e00200043004f004e004e
0045004300540049004f004e002000570049005400480020005400480045
00200053004f0046005400570041005200450020004f0052002000540048
004500200055005300450020004f00520020004f00540048004500520020
004400450041004c0049004e0047005300200049004e0020005400480045
00200053004f004600540057004100520045002e000da920323031352054
6865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c2052
69676874732052657365727665642e200d0d486562726577204f70656e54
797065204c61796f7574206c6f67696320636f7079726967687420a92032
303033202620323030372c2052616c70682048616e636f636b2026204a6f
686e20487564736f6e2e2054686973206c61796f7574206c6f6769632066
6f72204269626c6963616c20486562726577206973206f70656e20736f75
72636520736f66747761726520756e64657220746865204d4954204c6963
656e73653b2073656520656d626564646564206c6963656e736520646573
6372697074696f6e20666f722064657461696c732e417269616c20697320
612074726164656d61726b206f6620546865204d6f6e6f7479706520436f
72706f726174696f6e2e4d6f6e6f747970653a417269616c20526567756c
617220284d6963726f736f66742956657273696f6e20362e393041726961
6c4d544d6f6e6f7479706520547970652044726177696e67204f66666963
65202d20526f62696e204e6963686f6c61732c2050617472696369612053
61756e646572732031393832596f75206d61792075736520746869732066
6f6e74206173207065726d6974746564206279207468652045554c412066
6f72207468652070726f6475637420696e20776869636820746869732066
6f6e7420697320696e636c7564656420746f20646973706c617920616e64
207072696e7420636f6e74656e742e2020596f75206d6179206f6e6c7920
28692920656d626564207468697320666f6e7420696e20636f6e74656e74
206173207065726d69747465642062792074686520656d62656464696e67
207265737472696374696f6e7320696e636c7564656420696e2074686973
20666f6e743b20616e6420286969292074656d706f726172696c7920646f
776e6c6f6164207468697320666f6e7420746f2061207072696e74657220
6f72206f74686572206f75747075742064657669636520746f2068656c70
207072696e7420636f6e74656e742e0d0d54686520666f6c6c6f77696e67
206c6963656e73652c206261736564206f6e20746865204d4954206c6963
656e73652028687474703a2f2f656e2e77696b6970656469612e6f72672f
77696b692f4d49545f4c6963656e7365292c206170706c69657320746f20
746865204f70656e54797065204c61796f7574206c6f67696320666f7220
4269626c6963616c2048656272657720d24c61796f7574204c6f676963d3
206173206a6f696e746c7920646576656c6f7065642062792052616c7068
2048616e636f636b20616e64204a6f686e20487564736f6e2e200d0d5065
726d697373696f6e20697320686572656279206772616e7465642c206672
6565206f66206368617267652c20746f20616e7920706572736f6e206f62
7461696e696e67206120636f7079206f6620746865204f70656e54797065
204c61796f7574206c6f67696320666f72204269626c6963616c20486562
72657720616e64206173736f63696174656420646f63756d656e74617469
6f6e2066696c6573202874686520d24c61796f7574204c6f67696320536f
667477617265d3292c20746f206465616c20696e20746865204c61796f75
74204c6f67696320536f66747761726520776974686f7574207265737472
696374696f6e2c20696e636c7564696e6720776974686f7574206c696d69
746174696f6e207468652072696768747320746f207573652c20636f7079
2c206d6f646966792c206d657267652c207075626c6973682c2064697374
7269627574652c207375626c6963656e73652c20616e642f6f722073656c
6c20636f70696573206f6620746865204c61796f7574204c6f6769632053
6f6674776172652c20616e6420746f207065726d697420706572736f6e73
20746f2077686f6d20746865204c61796f7574204c6f67696320536f6674
77617265206973206675726e697368656420746f20646f20736f2c207375
626a65637420746f2074686520666f6c6c6f77696e6720636f6e64697469
6f6e733a0d0d5468652061626f766520636f70797269676874206e6f7469
636520616e642074686973207065726d697373696f6e206e6f7469636520
7368616c6c20626520696e636c7564656420696e20616c6c20636f706965
73206f72207375627374616e7469616c20706f7274696f6e73206f662074
6865204c61796f7574204c6f67696320536f6674776172652e0d0d544845
20534f4654574152452049532050524f564944454420274153204953272c
20574954484f55542057415252414e5459204f4620414e59204b494e442c
2045585052455353204f5220494d504c4945442c20494e434c5544494e47
20425554204e4f54204c494d4954454420544f205448452057415252414e
54494553204f46204d45524348414e544142494c4954592c204649544e45
535320464f52204120504152544943554c415220505552504f534520414e
44204e4f4e494e4652494e47454d454e542e20494e204e4f204556454e54
205348414c4c2054484520415554484f5253204f5220434f505952494748
5420484f4c44455253204245204c4941424c4520464f5220414e5920434c
41494d2c2044414d41474553204f52204f54484552204c494142494c4954
592c205748455448455220494e20414e20414354494f4e204f4620434f4e
54524143542c20544f5254204f52204f54484552574953452c2041524953
494e472046524f4d2c204f5554204f46204f5220494e20434f4e4e454354
494f4e20574954482054484520534f465457415245204f52205448452055
5345204f52204f54484552204445414c494e475320494e2054484520534f
4654574152452e0d004e006f0072006d0061006c006e0079006f00620079
010d0065006a006e00e9006e006f0072006d0061006c005300740061006e
0064006100720064039a03b103bd03bf03bd03b903ba03ac004100720069
0061006c00200069007300200061002000740072006100640065006d0061
0072006b0020006f006600200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
002e0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e002000200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e000d000a000d000a00540068006500200066006f006c
006c006f00770069006e00670020006c006900630065006e00730065002c
0020006200610073006500640020006f006e00200074006800650020004d
004900540020006c006900630065006e0073006500200028006800740074
0070003a002f002f0065006e002e00770069006b00690070006500640069
0061002e006f00720067002f00770069006b0069002f004d00490054005f
004c006900630065006e007300650029002c0020006100700070006c0069
0065007300200074006f00200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020201c004c00610079006f007500740020
004c006f006700690063201d0020006100730020006a006f0069006e0074
006c007900200064006500760065006c006f007000650064002000620079
002000520061006c00700068002000480061006e0063006f0063006b0020
0061006e00640020004a006f0068006e00200048007500640073006f006e
002e0020000d000a000d000a005000650072006d0069007300730069006f
006e00200069007300200068006500720065006200790020006700720061
006e007400650064002c002000660072006500650020006f006600200063
00680061007200670065002c00200074006f00200061006e007900200070
006500720073006f006e0020006f0062007400610069006e0069006e0067
0020006100200063006f007000790020006f006600200074006800650020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c002000480065006200720065007700200061006e0064
0020006100730073006f00630069006100740065006400200064006f0063
0075006d0065006e0074006100740069006f006e002000660069006c0065
0073002000280074006800650020201c004c00610079006f007500740020
004c006f00670069006300200053006f006600740077006100720065201d
0029002c00200074006f0020006400650061006c00200069006e00200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f00660074007700610072006500200077006900740068006f
007500740020007200650073007400720069006300740069006f006e002c
00200069006e0063006c007500640069006e006700200077006900740068
006f007500740020006c0069006d00690074006100740069006f006e0020
007400680065002000720069006700680074007300200074006f00200075
00730065002c00200063006f00700079002c0020006d006f006400690066
0079002c0020006d0065007200670065002c0020007000750062006c0069
00730068002c00200064006900730074007200690062007500740065002c
0020007300750062006c006900630065006e00730065002c00200061006e
0064002f006f0072002000730065006c006c00200063006f007000690065
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002c00200061006e006400200074006f0020007000650072006d00690074
00200070006500720073006f006e007300200074006f002000770068006f
006d00200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002000690073
0020006600750072006e0069007300680065006400200074006f00200064
006f00200073006f002c0020007300750062006a00650063007400200074
006f002000740068006500200066006f006c006c006f00770069006e0067
00200063006f006e0064006900740069006f006e0073003a000d000a000d
000a005400680065002000610062006f0076006500200063006f00700079
007200690067006800740020006e006f007400690063006500200061006e
0064002000740068006900730020007000650072006d0069007300730069
006f006e0020006e006f00740069006300650020007300680061006c006c
00200062006500200069006e0063006c007500640065006400200069006e
00200061006c006c00200063006f00700069006500730020006f00720020
007300750062007300740061006e007400690061006c00200070006f0072
00740069006f006e00730020006f006600200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
0077006100720065002e000d000a000d000a00540048004500200053004f
004600540057004100520045002000490053002000500052004f00560049
00440045004400200027004100530020004900530027002c002000570049
00540048004f00550054002000570041005200520041004e005400590020
004f004600200041004e00590020004b0049004e0044002c002000450058
005000520045005300530020004f005200200049004d0050004c00490045
0044002c00200049004e0043004c005500440049004e0047002000420055
00540020004e004f00540020004c0049004d004900540045004400200054
004f0020005400480045002000570041005200520041004e005400490045
00530020004f00460020004d00450052004300480041004e005400410042
0049004c004900540059002c0020004600490054004e0045005300530020
0046004f00520020004100200050004100520054004900430055004c0041
005200200050005500520050004f0053004500200041004e00440020004e
004f004e0049004e004600520049004e00470045004d0045004e0054002e
00200049004e0020004e004f0020004500560045004e0054002000530048
0041004c004c002000540048004500200041005500540048004f00520053
0020004f005200200043004f005000590052004900470048005400200048
004f004c00440045005200530020004200450020004c004900410042004c
004500200046004f005200200041004e005900200043004c00410049004d
002c002000440041004d00410047004500530020004f00520020004f0054
0048004500520020004c0049004100420049004c004900540059002c0020
005700480045005400480045005200200049004e00200041004e00200041
004300540049004f004e0020004f004600200043004f004e005400520041
00430054002c00200054004f005200540020004f00520020004f00540048
004500520057004900530045002c002000410052004900530049004e0047
002000460052004f004d002c0020004f005500540020004f00460020004f
005200200049004e00200043004f004e004e0045004300540049004f004e
00200057004900540048002000540048004500200053004f004600540057
0041005200450020004f0052002000540048004500200055005300450020
004f00520020004f00540048004500520020004400450041004c0049004e
0047005300200049004e002000540048004500200053004f004600540057
004100520045002e000d000a004e006f0072006d00610061006c0069004e
006f0072006d00e1006c006e0065004e006f0072006d0061006c00650053
00740061006e00640061006100720064041e0431044b0447043d044b0439
004e0061007600610064006e006f0074006801b001a10300006e00670041
007200720075006e007400610000b15485410b032c032c032c0222001d00
1f032b032a003c001f032ab2061d1fb80328b326181fd0bc032900e00329
00020329b22b1d1fb90327031db23b1f40b80323b31215320f412d032000
01002f0320000100200320006f032000af032000bf03200004005f031e00
010010031e007f031e0080031e00af031e00bf031e00d0031e0006000003
1e0010031e0020031e006f031e009f031e00e0031e0006031d031cb2201f
1041270319007f03190002000f031700ef031700ff03170003001f031700
2f0317004f0317005f0317008f0317009f03170006000f0317005f031700
6f0317007f031700bf031700f00317000600400317b2923340b80317b28b
3340b80317b36a6c3240b80317b2613340b80317b35c5d3240b80317b357
593240b80317b34d513240b80317b344493240b80317b23a3340b80317b3
31343240b80317b32e423240b80317b3272c3240b80317b312253280b803
17b30a0d32c04116031600d00316000200700316000102c4000f0101001f
00a0031500b0031500020306000f0101001f00400312b32426329fbf0304
0001030203010064001fffc00301b20d1132410a02ff02ef0012001f02ee
02ed0064001fffc002edb30e11329f414a02e200af02e200bf02e2000302
e202e202e102e1007f02e00001001002e0003f02e0009f02e000bf02e000
cf02e000ef02e0000602e002e002df02df02de02de000f02dd002f02dd00
3f02dd005f02dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc00
01000002dc0001001002dc003f02dc000202dc02dc001002db000102db02
db000f02da000102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ff
c002d3b21f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9
291fb90326031cb23b1f40bb0322003e00330322b225311fb80318b23c69
1fb802e3b3202b1fa0413002d400b002d40002000002d4001002d4002002
d4005002d4006002d4007002d40006006002d6007002d6008002d6009002
d600a002d600b002d60006000002d6001002d6002002ca002002cc002002
d6003002d6004002d6005002d6000802d0b2202b1fb802cfb226421f4116
02ce02c70017001f02cd02c80017001f02cc02c60017001f02cb02c50017
001f02c902c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6
001002c7002f02c5000502c1b324121fff411102bf0001001f02bf002f02
bf003f02bf004f02bf005f02bf008f02bf000602bf0222b2641f12410b02
bb00ca0800001f02b200e90800001f02a600a20800406a1f402643493240
2043493240263a3d3240203a3d329f209f26024026969932402096993240
268e923240208e92324026848c324020848c3240267a813240207a813240
266c763240206c76324026646a324020646a3240265a5f3240205a5f3240
264f543240204f5432b8029eb724271f374f6b0120410f02770030027700
40027700500277000402770277027700f90400001f029bb22a2a1fb8029a
402b292a1f80ba0180bc0180520180a201806501807e01808101803c0180
5e01802b01801c01801e0180400180bb0138000100800140b40180400180
bb013800010080013940180180ca0180ad01807301802601802501802401
8020013740b80221b2493340b80221b2453340b80221b341423240b80221
b33d3e320f410f0221003f0221007f0221000300bf022100cf022100ff02
21000300400221b320223240b80221b3191e3240b80222b32a3f3240b802
21b32e3a326f414a02c3007f02c3008f02c300df02c30004002f02c30060
02c300cf02c30003000f02c3003f02c3005f02c300c002c300ef02c300ff
02c3000600df02220001008f02220001000f0222002f0222003f0222005f
0222007f022200ef0222000600bf022100ef02210002006f0221007f0221
00af02210003000f0221002f0221003f0221004f0221000402c302c30222
022202210221401d101c102b1048038f1c010f1e014f1eff1e0237001616
00000012110811b8010db6f70df8f70d00094109028e028f001d001f0290
028f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401001f01
3900260125001f013800730401001f0135001c0801001f0134001c02ab00
1f0132b21c561fb8010fb2262c1fba010e001e0401b61ff91ce41fe91cb8
0201b61fe81cbb1fd720b80401b21fd51cb802abb61fd41c891fc92fb808
01b21fbc26b80101b21fba20b80201b61fb91c381fadcab80401b21f8126
b8019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f
5e73b80401400f1f52265a1f481c891f441c621f4073b80801b61f3f1c5e
1f3c26b8019ab21f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f
291cb80101b21f231eb80401b41f35555537b80168402c07960758074f07
360732072c0721071f071d071b071408120810080e080c080a0808080608
04080208000814b8ffe0402b000001001406100000010006040000010004
10000001001002000001000200000001000002010802004a00b013034b02
4b5342014bb0c063004b6220b0f65323b8010a515ab005234201b0124b00
4b5442b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb002
88b801005458b801ffb101018e851bb0124358b900010111858d1bb90001
0128858d5959001816763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b182b1d42b0964b5358b235aaaa1d4259b0324b5358
b235ffff1d42594bb09353205c58b901f201f04544b901f101f045445958
b9033e01f2455258b901f2033e4459594bb8015653205c58b9002001f145
44b9002601f145445958b9081e0020455258b90020081e4459594bb8019a
53205c58b9002501f24544b9002401f245445958b909090025455258b900
2509094459594bb8040153205c58b173244544b1242445445958b9172000
73455258b9007317204459594bb8040153205c58b1ca254544b125254544
5958b9168000ca455258b900ca16804459594bb03e53205c58b11c1c4544
b11e1c45445958b9011a001c455258b9001c011a4459594bb05653205c58
b11c1c4544b12f1c45445958b90189001c455258b9001c01894459594bb8
030153205c58b11c1c4544b11c1c45445958b90de0001c455258b9001c0d
e04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c4565234560
23456560234560b08b766818b080622020b163594565234520b003266062
636820b003266165b059236544b063234420b13b5c4565234520b0032660
62636820b003266165b05c236544b03b2344b1005c455458b15c406544b2
3b403b4523614459b347503437456523456023456560234560b089766818
b080622020b134504565234520b003266062636820b003266165b0502365
44b034234420b147374565234520b003266062636820b003266165b03723
6544b0472344b10037455458b137406544b24740474523614459004b5342
014b5058b108004259435c58b108004259b3020b0a124358601b21594216
10703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342
b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b01243
58b9187e3b211bba01a80400000b2b59b0102342b0112342002b74757375
00184569444569444569447373737374757374752b2b2b2b74752b2b2b2b
2b737373737373737373737373737373737373737373737373732b2b2b45
b0406144737400004bb02a534bb03f515a58b1070745b040604459004bb0
3a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a515a58b1
030345b040604459004bb02e534bb03c515a58b1090945b8ffc06044592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b900
8002bbb301401e017400735903b01e4b5402b0124b545ab012435c5a58ba
009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b737373732b
2b2b2b2b002b2b2b2b2b2b00456944734569447345694473747545694473
4569444569444569447374456944456944732b2b2b2b2b732b002b732b74
752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b7374757374752b2b2b74
2b002b2b2b00184569442b5c58410e0336032f0041001f0330032f002d00
1f032d032f0032001f0332032f4012261f0302371f0908371f0b0a441f07
06441f2b2b2b2b2b2b2b2b592b0000>
[15395 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

2 0 3 <> LAAAAA+Arial AddT42Char 
2 108 16 <0001004101b8026a026d0003003db0852b58401970027003024d014d0202
012300021a05700001001904708d182b4e10e45d10e6002f4ded31300071
015d1bb200400100182f1acd3031591335211541022901b8b5b5>LAAAAA+Arial AddT42Char 
2 194 17 <000100ba0000018700cd00030037b0852b584018023c000a023c5f006f00
7f00af0004a0000100a004a198182b10f65d5ded003fed31301bb3014000
0800183f1acd30315933353315bacdcdcd00>LAAAAA+Arial AddT42Char 
2 272 18 <00010000ffe7023905d300030064b0852b58b90003ffdeb2143902b8ffde
4020143997030102039f03af0302037600011400000102010003000a03e8
0002e801b801a9b5000004b37a182b103c10f4ed10ed003f3c3f3c87052e
2b5d7d10c43130015d2b2b1bb30009010100183f3f3031591501330101a9
90fe581905ecfa14>LAAAAA+Arial AddT42Char 
2 400 19 <00020055ffe7041105c00010001d01feb0852b58b10202435458400a1a1e
0405141e0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c
0f0f025500160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3f
ed31301bb10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f0655
09b8ffe6b40d0d065509b8ffee40190b0b0655091100100d0d065500100c
0c065500100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301b404e
04068702880b880fc90e0509070b180245134c154a19431b54135c155c19
521b6b076b0b63136c156b19601b79027706760b7a0f870698079610c918
da02d606d60bdb0f1a1a1e0405141e0d0d174110fff4000c000c01400056
0017fff2000b000b014000560017fff8000d000d01404011561773094021
2334300901000910090209410afff4000b000b014000560009ffe8000d00
0d0140b75609901f110c0c0cb80140b456110e0b0bb80140b45611080d0d
b80140b356117300b8ffc0400c2123342000400002000c0c0cb80140b456
00080b0bb80140b45600080d0db80140b65600901ec78b182b10f62b2b2b
5d2bed2b2b2b10f62b2b5d712bed2b2b2b003fed3fed3130015d71005db0
0243b0405058b4062019101cb8fff0b202200bbeffe00016ffe00012ffe0
000fffe0003838383838013838385959591bb10d14b8032fb46c0d0d041a
b8032fb26c040500183f2b3f2b3031591310123633321616121510020623
22272613101633323611102623220706556bd3a076b274426ad3a1d47991
b9a97c7ca9a97e7c4a5d02d30104013dac5fb3feffdafefefec3ad98b701
9dfe97eff00168016aee6986>LAAAAA+Arial AddT42Char 
2 1012 20 <000100df000002fb05c0000a010eb0852b58b30a0c0c0cb80140b456000c
0c0cb80140b4560a0e0b0bb80140b456000e0b0bb80140b4560a080d0db8
0140b45600080d0db8014040215603400d11346b047f028f02990804ac04
010900060502030905010c0201ca0a00b8ffc0400a212334300001200001
00b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d0d02
5500b8fff040190f0f065500100c0c065500100d0d0655001a0c05400d0f
3405b8ffc0400e212334300501200540050205190bba013c018500182b4e
10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f1739011139
3130015d005d2b012b2b2b2b2b2b1b400c0201090640050509010c090500
183f3f12392f1acd111239303159212311060607353636373302fbb441d3
5497e22f74047b3e7c1fae47ca5f>LAAAAA+Arial AddT42Char 
2 1326 21 <0001003c0000040705c0001e0227b0852b58b10602435458400911100d18
131306550db8fff4b4111106550db8ffee4009101006550d1e14051eb8ff
e84017131306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb40
0c020a1717201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b
2b3fed2b2b2bc43231301bb10202435458400911100d0c121202550db8ff
f440090f1102550d1e14051eb8ffe0400b121302551e140f1102551eb802
bbb2020a17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f101102
02201f1112392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b
40473b053b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a
138912bc12e51ae51bf01a0cbf0bb713021e0a10080606ca1c1a141c1c1a
081c1a030102081a1c030d1e10b802a4b34f110111b80118b50d1e140500
1eb802bbb301020c0a4110fff4000c000c01400056000afff2000b000b01
400056000afff8000d000d0140400d560a7317d30000014021233401bb02
81002000100138400c11b53f025f026f027f020402ba0224001f018fb18b
182b10f65df4ed10f62b3c10f4ed2b2b2b003f3cfd3c3fedfd5de4111217
390111121739870e2e2b0e7d10c4011112393130b00243b040505840091b
101c101d101e1006befff00007ffe00008fff00009fff000383838380138
38383859005d015d7259591b400910100d1b07070d021eb80333b46c020c
140db8032fb26c140500183f2b3f2b1139113312392f3031592515212637
36363736363534262322060727363633321615140606070606070407fc37
021725a39aefa8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c0
7ec4e5666b939c8a13cfd9eaad58aabca4886131>LAAAAA+Arial AddT42Char 
2 1976 26 <000100610000041605a7000d008bb0852b58400ec40d01040d0104020804
09030d00b802bb4030020104090c0d73030302402123344f025f026f0203
021a0f087309eb004f015f015f02033f015f016f017f010401190eb80192
b18b182b4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c3911
3901111239313001715d1bb4090c030100b80333b26c010400183f2b333f
30315913352115060003060723361212376103b58cfeed4b360fb90382f3
8904faad8c95fe12fefbb8dbad01ea01c79c>LAAAAA+Arial AddT42Char 
2 2174 29 <000200b900000186042600030007004eb0852b5840200405000607090206
3c04033c0106040a023c2f003f000220000100a108a198182b10f45d71ed
003f3fed10ed011112393912393931301bb505040800400100182f1acd3f
cd3031591335331503353315b9cdcdcd0359cdcdfca7cdcd>LAAAAA+Arial AddT42Char 
2 2288 48 <000100980000060f05ba00100350b0852b58b3082a0b0db80140b456022a
0b0db901400056b10202435458b90008fff6400b0c0c0255080e0d110255
02b8ffeeb40d11025505b8ffee40280d1102550c120c0c0255050f0c0309
00010208090b0e000809020a0b06101002550b100d0d02550bb8fffab60c
0c02550b1000b8ffe6b41010025500b8fff8b40f0f025500b8fffcb40d0d
0255002f2b2b2bcd2f2b2b2bcd003f3fc0c010d0d0c0111217392b2b3130
012b2b2b001bb10602435458401f07200b0b065506200b0b065503200b0b
065504200b0b065505200b0b065508b8fff240230b0b0655020c0b0b0655
03060c0c0655020e0c0c0655090c0c0c06550a0c0c0c065507b8fff8b40d
0d065508b8fff8401f0d0d06552605010c200a12340f200a12340f050c03
00010e0b00080801020ab8ffeeb40b0b06550ab8ffeeb40c0c06550abb02
56001200100256400d000c0b0b065500060c0c065500b8fff8b40d0d0655
00012f2b2b2bf42ff42b2b003f3c3f3c3c111217392b2b5d3130012b2b2b
2b2b2b2b2b002b2b2b2b2b1b407f00020f0814021b0804760c860cc80c03
090c490c490f032904250d2c0e58035b04760d780e870d080b020508390d
360e4f024b03440740084d0d420e0a9802990396079608a803a707061202
0f0e0e30050214050502080c0d0d300508140505080c520f520140010202
0808090a0b0b0d0d0e0e1000080902601280120212ba02a8000d0131b205
2008b80131b50c090a0a0b0bb80140b4560a0a0c0cb801404009560a2040
0c7f0b010bba0256000e010bb2052002b8010bb20f0100410afff6000b00
0b014000560000fff6000c000c0140b75600200f70100110b80256b72005
600580050305b802a8b3113b59182b1910f45df45d3c18fd2b2b3c10ed1a
1910edf45d3c1a18fd2b2b3c10ed1a1910ede45d00183f3f3c3c103c103c
103c103c103c103c1a10eded87052e2b877dc4872e182b877dc43130004b
b00b534bb01e515a58bd000cfffb0008ffd60002ffd638383859014bb00c
534bb028515ab00243b040505a58b9000dfff8b10e0a38385901435c58b9
000dffd4b621390e2c21390db8ffd4b637390e3237390db8ffd4b52d390e
2c2d392b2b2b2b2b2b5972715d00715d015d5959002b2b1b400d0b080008
050e080c08020f010200183f333f333f333f3f3031593311210116173637
012111231101230111980124015b30161935015f0105bbfe56affe5805ba
fbf29148509b03fcfa4604cbfb3504e0fb20>LAAAAA+Arial AddT42Char 
2 3206 68 <0002004affe8041c043e002800370322b0852b58402c090d092a190d1a2a
290d2a2a390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a16
9b1aa90d1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619
bb28c419cf28d215dd28084416011eb8fff440110c0c065512120c0c0655
050c0c0c065535b8ffe0404f0c0c06551f171f182b2c2a343904392c4904
482c5608592b6608692b760c870cc90cf90df92b1137340e0104102f2434
17322114185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e03
0ebbfffa000b000b0140b7560e0c0f0f02550eb8ffeab4101002550eb8ff
f44014101006550e0c0d0d06550e060f0f06550e260d0db80140b4560e18
0c0cb80140b5560e0e1c0317b802aab3182c0b0bb80140400e56182c0a0a
42551895141c1c0700b8fff440110c0c06550045270a321c030b29611061
004110fff6000b000b014000560000fff8000c000c014000560000fffc00
0d000d0140400b5600060d0d025500252124b8ffecb41010025524b8ffec
400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b0655
24b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b8025b40
0e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b40e0e
025526bbfff4000d000d0140b356263139b8ffc0400d1e23343039c03902
a039013917b8fff4b71010065517080c0cb80140400956172518222f080d
0db80140b4562f0c0c0cb80140b4562f0e0b0bb801404011562f24bf06cf
06021f063f060206140b0bb80140b45606140d0db80140b45606080c0cb8
0140402e56060e0f0f0255060c0d0d025506180c0c0255060c0b0b025506
0c0b0b0655060e0d0d065506100c0c065506313810f62b2b2b2b2b2b2b2b
2b2b5d71ed2b2b2bf4ed2b2b105d712bf62b2b2b5dedf42b2b2b2b2b2b2b
2b3cfd2b2b2b2be5e5003fed3fe42b3fedfd2b2be41112392f2b2b2b2b2b
2b2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d
2b2b00711bb700032b2b0c0c0e29b8032db76c0e0e1c270a0332b8032db7
6c030b1817171c14b8032fb26c1c0700183f2b322f333f2b3f11392f2b39
113311123930315925060623222635343636373637363736353427262322
0607273e02333216161716151514161723260306070e0215141633323637
3635033c64b96aafbc477348356bda67013345887f791db0186ed08988aa
5010091722bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d
1a24250a6e2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d
2f48605b4f3d7700>LAAAAA+Arial AddT42Char 
2 4174 70 <00010050ffe803ed043e001a0261b0852b58bc0017fff0000c000c0140b4
560a080c0cb80140b45609080c0cb80140b4560f080c0cb80140b4561008
0c0cb80140b45611080c0cb901400056b1020243545840340e7f0f010f0b
01400050007000030004121c0b07181c040b010e1507080e0e0255070c0d
0d0255070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10
c45d3210c45d3231301b4047090c011f1c4313431753135317601360179b
029b039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509
b60ab50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa40263000
40005000600070009000a000e000f00009000f0f0b000004121c0b07181c
040b1c0f010f410afff4000c000c01400056000ffff2000b000b0140400f
560f240e080d0d06550e221b000100410afff4000c000c014000560000ff
ee000b000b0140400f5600240b2b1f010100010101400e2bb80140b45601
400d0db80140b45601400c0cb80140b45601360b0bb8014040205601400b
0b065501401010065501480c0c0655011a0d0d065501491c15080d0db801
40b456150c0c0cb80140b456150e0b0bb801404021561524cf07011f073f
0702070e0b0b0655070a1010065507120c0c0655070c0d0db80140b45607
0c0c0cb80140b65607311b34c4182b10f62b2b2b2b2b5d71ed2b2b2b10f6
2b2b2b2b2b2b2b2b5d724b53234b515a58b90001ffc03859ed2b2b72f42b
ed2b2b72003fed3fed12392f11392f105de4105de43130005d71015d7159
012b2b2b2b2b2b1b400a010000120e0f0f120418b8032fb46c040b0b12b8
032fb26c0b0700183f2b3f2b11392f3311392f3330315901170606232200
1134123633321617072626232206151416333236033cb11defaedafef772
e989addc1faf197f5a88aaa4846a8e018517b7cf011d010aac010281afa1
1b6b6cc3d3d6c282>LAAAAA+Arial AddT42Char 
2 4872 71 <00020046ffe803df05ba0011001d0213b0852b58407c0a02040d250d340d
440d053514351c5702540a5214531c6702640565096314601cc01fd405d5
13dd19e513e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f
901f072e02240d2e163a02350d4b02450d4614491c570a560d670de506e7
16fa01f40e100115030e0b100f001b1c0b0711000a151c030b18410afff8
000d000d014000560018fff8000c000c0140b45618330100bbfff2000b00
0b0140b4560025110f4110fff8000d000d01400056000ffff4000c000c01
400056000ffff2000b000b01404024560f251010d0110110114011601180
11041f400b0b02551f400d0d025511121010025511b8fff440110f0f0255
11060e0e025511180d0d025511b8fff2400b0b0b0655110e1010065511b8
ffeeb40c0c065511b8fff8b40d0d065511bbfff8000c000c0140b6561174
12080d0db80140b456120c0c0cb80140b456120e0b0bb80140b656122407
100c0cb80140b45607100d0db80140403b56bf07cf07df07ff07041f073f
074f0703071e0b0b025507180c0c0255071e0d0d0255070c0b0b0655070c
0d0d0655071a0c0c065507191e3450182b4e10f42b2b2b2b2b2b5d712b2b
4ded2b2b2bfd2b2b2b2b2b2b2b2b2b2b2b5d713c10ed2b2b2b10fd2b3ce4
2b2b003fed3f3c3fed3f3c11391112393130005d01715d00711bb10315b8
032f400a6c030b010e0e000a0b1bb8032fb46c0b070f0000183f3f2b3f33
12393f2b3031592135062322262635341236333216171133110114163332
36353426232206033865c47fd5756ad48360962fb3fd20ac7576a5a87b78
a1869e8cfba39f01038a5141020efa460212cccac1c6daccc400>LAAAAA+Arial AddT42Char 
2 5498 72 <0002004bffe8041e043e0015001d0216b0852b5840171f001c150255035d
055d09550b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d
0d06551d1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c
51125c19521c61126d1a611c78067815f602f618100016010f0d17175016
6016701603161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b410
10025501b8ffc0400e101006551001010195131c040b174110fff0000c00
0c014000560017fff2000b000b014000560017fff8000d000d0140b35617
400db8ffdcb40d0d02550db8ffeeb40d0d06550db8ffeab40c0c06550db8
ffc04009272a34b00d010d1a1fb8ffc0b32526341fb8ffc0b71e2334301f
011f16bbfffc000d000d0140b656163310080c0cb80140b456100e0b0bb8
0140b45610080d0db8014040135610240740242a341f073f074f0703070c
0c0cb80140b456070c0d0db80140402b5607200b0b025507180c0c025507
1c0d0d0255070e0b0b0655071c0c0c065507160d0d065507191e3437182b
4e10f42b2b2b2b2b2b2b2b5d2b4dfd2b2b2be42b4e10712b2bf6712b2b2b
2b4ded2b2b2b003fedfd5d2b2be43fed12392f5d3cfd713c011112393912
393130015d005d2b2b2b0171721b401d0000500070008000900005300070
0080009000c000d000060000041016b8032f400d6c100010301002130310
0a0413b8032fb46c040b0a1bb8032fb26c0a0700183f2b3f2b12395f5e5d
2f2b11332f5d713031590117060623220011100033320011140721161633
32360121262726232206035eba2ceeb9e9feef0114dcd5010e01fce80ab2
85638cfdda02510c3856897ca9015617a3b4011f0103010c0128fedefef9
1020afba680195864368a600>LAAAAA+Arial AddT42Char 
2 6140 73 <000100130000028005d30017015eb0852b58401e1409010f192f19301940
1970199b0c9c0da90d081a0d280db019c0190419b8ffc0401f1a1f341d08
0d030c0f1c0a0115022b1413040306000a9f140114ff130e0b0bb80140b7
56134004170e0b0bb80140b45617080d0db80140b456170c0c0cb8014040
0b5617250400030292010100b8ffc0b331383400b8ffc0402b1c1f349000
0119400f0f025519400d0e025500141010025500280f0f025500220e0e02
55002c0d0d025500b8fff2400b0c0c025500140b0b065500b8ffeab41010
065500b8ffe6b40f0f065500b8fffab70c0c065500a31819bc01ba002100
f6010a00182b2bf62b2b2b2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced2b
2b2b10ed2bed5d003f3f3c3c3cfd3c3fed39113931304379401410110609
0706080602061009121b0011060f1b012b012b2a8181012b715d00721bb5
000a16130302b8032db46c03060a0fb80332b26c0a0100183f2b3f2b3332
3f303159331123353335343736363332170726232206151533152311b29f
9f131a83764c5c1b38325244cfcf039a8c716b344657129d0a4660628cfc
6600>LAAAAA+Arial AddT42Char 
2 6562 74 <00020042fe5103ea043e001e002a0229b0852b5840600b0b05142c0b2514
4c0b451406091d191d2c0b26142c23390b36144a0b46145607580b680bfa
0af5150e2e232c273e233e274c27902ca02c07362136293f2c460b462145
2954215429690763216329602c802cda27e821ee23ef271117160615b802
b1b4281c130701b802aa401020003000600070008000c000d0000700b802
7d4010051c1c0f0a45221c0c0a16153325330a4110fff2000b000b014000
56000afff2000c000c01400056000afff8000d000d01404024560a251818
d017011017401760178017042c400b0c02552c400d0d0255171210100255
17b8fff440110f0f025517060e0e025517160d0d025517b8ffea400b0b0b
065517121010065517b8ffeeb40c0c065517b8fffcb40d0d065517410aff
fa000c000c014000560017fffa000d000d0140400c5617740f012500221f
0e0b0bb80140b4561f080d0db80140b4561f0c0c0cb801404017561f24bf
0fcf0fdf0fff0f041f0f3f0f4f0f030f0c0c0cb80140b4560f100d0db801
40402e560f200b0b02550f1a0c0c02550f220d0d02550f1c0b0b06550f0c
0d0d06550f1a0c0c06550f192b2c74213450182b2b4ef42b2b2b2b2b2b2b
2b5d714ded2b2b2bf4ed10fd2b2b2b2b2b2b2b2b2b2b2b2b5d713c10fd2b
2b2be4f63c003fede43fedfd5de43fede43f3c3130015d71005d711b400a
00000116030000131c05b8032fb56c1c0f0a0c22b8032fb76c0c0a160615
1328b8032fb26c130700183f2b323f3f2b393f2b12392f5f5e5d30315917
171617163332363736270623220235341236333217353311140606232226
13141633323635342623220666af0b3243747d88180e0176b0dbf06ed18d
bc7aa665dba0beea99a67d7ca8ad7a78a8581a512532645a37b08b013cdd
9801018c9880fc6af8cf78ab032ad1c0bfccc3c6c300>LAAAAA+Arial AddT42Char 
2 7244 75 <00010087000003e805ba001401c9b0852b58b90016ffc0b315173403b8ff
e0400e0d0d0655250435034503ba0d0403b8ffe040151719341708110c11
14030501000f1c0507140b0a0c4110fff8000d000d01400056000cfff200
0b000b01400056000cfff4000c000c01404027560c250940333634ff0901
c0090116400b0b025516401010025509281010025509140e0e025509b8ff
ec40110d0d025509040c0c0255091a0b0b025509b8fff6400b0b0b065509
141010065509b8fff8400b0d0d0655090a0f0f065509b8fff6b60c0c0655
094e16b8ffc04017343634b016f016027016a016b016ff1604160214080d
0db80140b456140c0c0cb80140b456140e0b0bb80140b45614250100b8ff
c04010333634f0000100002000d000e0000400b8fffab41010025500b8ff
fa40170e0e025500040c0c025500080b0b025500040b0b065500b8fffa40
160f0f065500020c0c065500020d0d0655004e154750182b10f62b2b2b2b
2b2b2b2b5d712b3cfd2b2b2b3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b
5d712bed2b2b2b003f3c3fed3f1139113901123931304379400e060e0725
0e060c1b010d080f1b01002b012b2b81002b5d2b012b1bb60b0a000a0305
0fb80330b46c0507010000183f3f2b393f3f303159331133113633321616
15112311342623220606151187b47ec076ae4bb4756b508d3c05bafdf292
5da49cfd5f02a1877b538e7dfdbb>LAAAAA+Arial AddT42Char 
2 7768 76 <000200880000013c05ba00030007020ab0852b58b3020a0b0bb80140b456
030a0b0bb80140b456060a0b0bb80140b456070a0b0b4119014000560001
fffc000b000b014000560000fffc000b000b014000560005fffc000b000b
014000560004fffc000b000b0140b456020b0c0cb80140b456030b0c0cb8
0140b456060b0c0cb80140b456070b0c0c4119014000560001fffd000c00
0c014000560000fffd000c000c014000560005fffd000c000c0140005600
04fffd000c000c0140b45602040d0db80140b45603040d0db80140b45606
040d0db80140b45607040d0d4119014000560001fffc000d000d01400056
0000fffc000d000d014000560005fffc000d000d014000560004fffc000d
000d014040375609360b0b02554f099009a009b009c009df09f009070009
1f09700980099f09b009c009df09e009ff090a1f09010001070402030906
03bbffc0000d000d0140402a56037e0100060506040a0607250500049f04
a004b004c004e00406c004f0040200042004d004e0040404b8fff8b41010
025504b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b0655
04b8ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e
084750182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed2b0111
123939111239393130015d72712b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b1bb7040a05060040010000183f1acd3f3f3031591335
33150311331188b4b4b404ebcfcffb150426fbda>LAAAAA+Arial AddT42Char 
2 8328 78 <00010088000003f805ba000b0312b0852b58b3030e0b0b41130140005600
09fff2000b000b014000560008fff2000b000b014000560004fff2000b00
0b0140b456070c0c0cb80140b456060c0c0cb80140b456050c0c0cb80140
401c56060c0d0d0655070656065a09030f0df305f60603090c1010025506
b8fff4b40c0c02550ab8fff4b40c0c025509b8fff4b40c0c025503b8ffe8
40100d0d06555503770a0212062013213408b8fff0b312273409b8fff0b4
1227341205b8fff0b312213409b8fff04084122734060404050406370947
040525062d0a580a7703750ada03e30607a6060123062607250839063809
3f0d4f0d59045906580759097d0479059909c606d204d606e406e907f706
f90815120a0a05030304020606070909080a0a0509080825070614070706
03040425050a1405050a0a09060304080102000405060708080b0b000a04
b8010f400905040c0c0655052208b8010f401520073f070207100c0c0655
071a900d010d0b0e0b0bb80140b4560b080d0db80140b4560b0c0c0cb801
40b7560b2500020e0b0bb80140b45602080d0db80140b456020c0c0cb801
40400e56022501019000013f004f000200b8fffe40310e0e025500100d0d
025500100c0c0255000a0b0b025500120b0b065500120c0c065500080d0d
065500190c0de1214766182b2b4ef42b2b2b2b2b2b2b5d713c4d10ed2b2b
2b10ed2b2b2b4e1071f62b5d4dedf42bed003f3c103c103c3f3c3f3c1117
3987052e2b047d10c487052e182b0e7d10c40710083c083c0310083c083c
b10602435458400d4b09011f0984030209180d1134002b5d715931300143
5c58400a092c1d3909081d1d3c06b8ffdeb21d3906b8ffd4b2203906b8ff
d4b121392b2b2b2b2b595d00715d0171002b2b435c58b90006ffc0b22139
03b8ffc0b2163903b8ffdeb2103906b8ffdeb2103903b8ffdeb20c3903b8
ffdeb10b392b2b2b2b2b2b59012b2b2b435c584012dd0401081416390908
14143c090814143c06b8fff6b2183906b8ffecb11b392b2b2b2b2b015d59
005d2b2b2b2b2b015d712b2b2b2b2b2b002b2b1b400f0a03090604000408
0a000a0406010000183f3f3f3f1112173930315933113311013301012301
071188b401aae9fe6a01bfdefea17f05bafcbc01b0fe76fd64021f7afe5b
>LAAAAA+Arial AddT42Char 
2 9168 79 <000100830000013705ba00030181b0852b58b3020a0b0bb80140b456030a
0b0b410d014000560001fffc000b000b014000560000fffc000b000b0140
b456020b0c0cb80140b456030b0c0c410d014000560001fffd000c000c01
4000560000fffd000c000c0140b45602040d0db80140b45603040d0d410d
014000560001fffc000d000d014000560000fffc000d000d0140b7560536
0b0b025505b8ffc0b337383405b8ffc0b334353405b8ffc0b330313405b8
ffc0b322253405b8ffc040251517340f051f059f05df05044f05df05f005
031f0570058005ff05040100000a0203250100b8ffc0b337383400b8ffc0
40153335349f0001c000f0000200002000d000e0000400b8fff8b4101002
5500b8fffa401d0e0e025500040c0c0255000a0b0b025500140b0b065500
081010065500b8fffeb40d0d065500b8ffffb40c0c065500b8fffc400a0c
0c0655004e044750182b10f62b2b2b2b2b2b2b2b2b5d71722b2b3cfd3c00
3f3f3130015d71722b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1bb3000a
010000183f3f3031593311331183b405bafa4600>LAAAAA+Arial AddT42Char 
2 9578 80 <0001008700000626043e0023036fb0852b5841920013fff2000b000b0140
00560010fff2000b000b014000560012fff2000b000b014000560011fff2
000b000b01400056001dfffc000d000d01400056001cfffc000d000d0140
0056001bfffc000d000d01400056001afffc000d000d01400056001dfffc
000c000c01400056001cfffc000c000c01400056001bfffc000c000c0140
0056001afffc000c000c01400056000cfffe000c000c01400056000dfffe
000c000c01400056000efffe000c000c01400056000ffffe000c000c0140
00560013fff2000c000c014000560010fff2000c000c014000560012fff2
000c000c014000560011fff2000c000c014000560013fff8000d000d0140
00560010fff8000d000d014000560012fff8000d000d014000560011fff8
000d000d01400056000dfff4b40d0d065508b8fff4b40d0d065509b8ffd8
404d0b0d342504e404e409e117e52005d505f620021708202309181b2009
0303231e1c06151c0b0b06070106231a19100ad025019025a02502251717
1a0e2590110111041010025511180f0f025511b8ffec400b0e0e02551114
0c0c025511b8ffe840170b0b025511020b0b0655110c1010065511060f0f
065511b8fffab40c0c065511b8fff8b40d0d065511b8015db318080c0cb8
0140b456180e0b0bb80140b45618040d0db80140400d561825901b011b18
0f0f02551bb8ffec400b0e0e02551b140c0c02551bb8ffee40110b0b0255
1b040b0b06551b0a101006551bb8fffe400b0d0d06551b0c0f0f06551bb8
fffcb40c0c06551bb8015db6000233230e0b0bb80140b45623080d0db801
40b456230c0c0cb80140401456232501d000019000a000021f003f004f00
0300b8fffe401d0e0e025500100d0d025500100c0c0255000c0b0b025500
160b0b065500b8fffcb41010065500b8fff440140f0f0655000a0c0c0655
000e0d0d065500192425b80178b3214750182b2b4ef42b2b2b2b2b2b2b2b
2b5d71723c4dfd2b2b2be410f42b2b2b2b2b2b2b2b2b5ded2b2b2bf42b2b
2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f3f3c4d10ed10ed
11173901111239123931304379400e0c141326140c111b01120d151b0100
2b012b2b81015d005d2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b1b400a100a1a0a000a01060b15b80330b66c0b07090306
1eb80330b26c060700183f2b32323f2b3f3f3f3f30315933113315363633
321617363332161511231134262623220615112311342623220606151187
a132a66a76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258
baafb6fd27029d6c5f3a95a4fd9702b27878509a91fdd900>LAAAAA+Arial AddT42Char 
2 10562 81 <00010087000003e6043e001601e6b0852b5840130503061302a810b810e3
03e713f003f6130604b8fff040220b0d347910019810d018e018ff180420
08140e1416121c05070106160d0a0d0e0c0e4110fff8000d000d01400056
000efff2000b000b01400056000efff4000c000c0140401c560e24184010
10025518400b0b02550b28101002550b140e0e02550bb8ffec40110d0d02
550b040c0c02550b220b0b02550bb8fff4400b0b0b06550b14101006550b
b8fff9400b0d0d06550b0a0f0f06550bb8fff640120c0c06550b40333634
ff0b01ff0b010b4e18b8ffc0401a343634b018f018027018a018b018c018
04180302331516080d0db80140b456160e0b0bb80140b456160c0c0cb801
40b45616250100b8fff6b41111025500b8fffab41010025500b8fffa4017
0e0e025500040c0c0255000a0b0b025500040b0b065500b8fffa40110f0f
065500020c0c065500040d0d065500b8ffc04012333634f0000100002000
d000e00004004e1710f65d712b2b2b2b2b2b2b2b2b2b3cfd2b2b2b3cf43c
105d712bf65d712b2b2b2b2b2b2b2b2b2b2b2b2bed2b2b2b3c103c003f3c
3f3fed11390112393130437940160611090a080a070a0306102611060e1b
010f0a121b01002b012b2b2a81015d71002b5d711b40090d0a160a010603
0512b80330b26c050700183f2b323f3f3f30315933113315363332161617
1615112311342626232206151187a275dd60a150100ab42a6b4873a70426
97af45704d327dfd7302866e6d4192ccfdbc>LAAAAA+Arial AddT42Char 
2 11120 82 <00020044ffe80427043e000d001901ffb0852b58b615180d0d065513b8ff
e8b40d0d06550fb8ffe840650d0d065519180d0d065512070a190c470648
0856065908670669080834103a123a16351845104b124b1645185c055c09
52105d125d1652186d056d0964106d126d1664187701150906050d5b0354
05540a5b0c6c036505650a6c0c0a171c0407111c0b0b144110fff2000b00
0b014000560014fff4000c000c014000560014fff8000d000d0140401056
14241b400d0d02551b400b0b025507b8ffea40110f0f025507180d0d0255
07100b0b025507b8fff0b40b0b065507b8fff0b40d0d065507b8fff0b40f
0f065507b8fff0b40c0c065507b8ffc0400e242534300701000710072007
0307bbfff4000d000d0140b6560731df1b011bb8ffc0400b1e2334301b01
1b0e080d0db80140b4560e0c0c0cb80140b4560e0e0b0bb801404041560e
24000c0e0f025500120d0d0255000c0c0c0255001c0b0b0255000e0b0b06
55000e0d0d0655000c1010065500160c0c065500402425341f003f000200
0c0d0db80140b456000c0c0cb80140b456000c0b0bb80140b65600311a34
37182b10f62b2b2b5d2b2b2b2b2b2b2b2b2bed2b2b2b10712b5df62b5d5d
2b2b2b2b2b2b2b2b2b2bed2b2b2b003fed3fed313001715d0071435c5840
09530553096205620904015d59002b2b2b2b1bb10b11b8032fb46c0b0b04
17b8032fb26c040700183f2b3f2b30315913103736333200151406062322
0013141633323635342623220644a489c5db01167beb8bdffeedb9b28786
b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca>LAAAAA+Arial AddT42Char 
2 11718 83 <00020087fe690421043e0012001e01d5b0852b5840740c102d103d104b10
043f20b020021f20290c231d3215321d421d70209020083a173a1b4a174a
1b59085b0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee4
14e41ee020ff201623042b102b1535043a1046044a105a10e50beb1dfe10
0b110e03161c1c06070106161c0e0b000e194110fff2000b000b01400056
0019fff4000c000c014000560019fff8000d000d0140401c561924d00a01
100a400a600a800a0420400b0b025520400d0d02550ab8ffe6400b0f0f02
550a180d0d02550ab8fffab40c0c02550ab8ffeeb40b0b06550ab8fff4b4
0f0f06550ab8ffe8400f0c0c06550a74011333023312080d0db80140b456
120e0b0bb80140b456120c0c0cb8014040195612250000c001019001a001
b001f001041f013f014f010301b8fffc401d0e0e025501100d0d02550110
0c0c025501100b0b0255010c0b0b065501b8fff6b41010065501b8fffc40
160f0f0655010c0c0c065501120d0d065501191f473718012b4e10f42b2b
2b2b2b2b2b2b2b5d71723c4d10fd2b2b2bf4e410fd2b2b2b2b2b2b2b2b5d
71ed2b2b2b003f3fed3f3fed113912393130005d015d717200711bb4000e
110e16b8032fb76c0e0b010603061cb8032db26c060700183f2b323f3f2b
393f30315913113315363633321616151402062322262711031416333236
35342623220687a43a926888d06a75df7b5a8f2e11a67678aba77473b1fe
6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbcad7>LAAAAA+Arial AddT42Char 
2 12284 85 <00010085000002c6043e00110107b0852b58403b2f130110040123043404
4304530466047404060911080908090d1311090d000308010b1c06070106
000a09289008010822201301130222110e0b0bb80140b45611080d0db801
40b456110c0c0cb80140b45611250100b8ffc04010333634f00001000020
00d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c02
5500060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c
065500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfd
2b2b2be4105df472e4003f3f3fed11393911393901111239390010c9870e
7dc43130005d72015d1bb7000a01060903060bb80336b26c060700183f2b
32323f3f30315933113315363633321707262322060706151185a23e693f
5b5e3e42423b5e141e0426a171483aa727473f6072fdd400>LAAAAA+Arial AddT42Char 
2 12608 86 <0001003fffe803b1043e0030041eb0852b58b3170e0b0bb80140b456180e
0b0bb80140b456190e0b0b4137014000560028fff4000c000c0140005600
27fff4000c000c014000560026fff4000c000c014000560025fff4000c00
0c014000560024fff4000c000c014000560023fff4000c000c0140005600
22fff4000c000c014000560021fff4000c000c014000560020fff4000c00
0c0140407c56042214223a094a094424562265227c098e098424a613ab2c
c2030d09171a1817304b2cd617051b025502021032010a185c085c095c0a
5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426b4270f27262427242936
245a0a590b64266428742374248024930a9c0c9228972c9530a40aa90ca3
27a428b326c5261628b8fff4b40d0d065522b8fff4b40d0d065523b8fff4
b40d0d065524b8fff4b40d0d065528b8fff4b40c0c065522b8fff4b40c0c
065523b8fff4b40c0c065524b8fff4b40c0c06551db8ffde40121e395a08
27250c0a041a202615040b2e1d1ab802aa4022192c0b0b02551f193f194f
195f19af19cf19060f191f196f19df19041f198f190219bd025500150000
02aa0001ffc040140b0b025510014001021001d00102000110010201b8ff
c0b314163401b8ffc040100e113401012e5c1d6c1d021d1c150704b8fff4
b40b0b025504b8ffe6b41010065504b8ffe640130f0f0655041c2e0b1f1a
011a24194013183432b8ffc040320f0f025519180f0f025519180d0d0255
19160c0c025519201010065519200f0f065519100c0c065519160d0d0655
19160c0c4109014000560019025b0007fff2000b000b0140b35607242ab8
ffc0b51c39d02a012ab8ffe6b40c0c02552ab8ffe8b40f0f02552ab8ffe8
b40c0c06552ab8ffeab40d0d06552abbfff4000c000c0140b3562a1a32b8
ffc04021272a346032c032023f3280320232100101012400180d0d025500
100d0d06550020b8fff4b40d0d025520b8fff4b41010065520b8fff4b70f
0f0655200e0b0bb8014040165620240f100b0b02550f160c0c02550f200d
0d02550fb8fffa40140f0f02550f0e0c0c06550f0c0d0d06550f060c0cb8
01404011560f22df00013f004f00020019313437182b4e10f45d714df42b
2b2b2b2b2b2bed2b2b2b2b102b2bed724e105d712bf62b2b2b2b2b712b4d
ed2bf42b2b2b2b2b2b2b2b2b2bed72003fed2b2b2b3fed7112392f2b2b5d
71722be410fd5d71722be41112391112390111121739313043794040272d
1e2305142c261110121013100306220d201b000928071b01052d071b011e
14201b00210e231b0022230d0c08290a1b012827090a062b041b001f101d
1b01002b2b103c103c2b103c103c2b012b2b2b2b2a2b818181002b2b2b2b
2b2b2b2b2b5d71015d72715d002b2b2b2b2b2b2b2b2b012b2b2b1b400a00
01011d0b26261d2e04b8032fb76c2e0b191a1a151db8032fb26c15070018
3f2b322f333f2b1139113311392f33303159133716163332363534272627
2e023534363736363332161617072626232206151417161716171e021514
06062322263fb20f897b7c78352593c6994f41382a91537dbd5a11b00c73
697c6a16162f1b84bf975669c67dcfd9013d1c6b7265443d231825324981
4e4779281f2b487b6718525c5237231c1d130a2433417c5c5a9f57ac>LAAAAA+Arial AddT42Char 
2 13806 87 <00010024fff2022a05990017016eb0852b584120000cfffe000c000c0140
0056000bfffe000c000c014000560008fffe000c000c014000560007fffe
000c000c014000560006fffe000c000c01400056000affc0b323263409b8
ffc0402423263480190100010c0d0a0103001610092b0f0a06161c030b0f
10220022010d12080d0db80140b456120e0b0bb80140b456120a0c0cb801
4040225612250c01ff070845094560077007800790070400072007a007b0
07c007d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e
0e025507b8fff8b40d0d025507b8fff8b40c0c025507b8fffab410100655
07b8fff0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00
180136b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd2b2b2b3c
10e4f43c003fed3f3cfd3c1139123911333310c93130015d2b2b2b2b2b2b
2b1bb10316b80332b46c030b0100b8033240096c010a0d0d110e0a09b803
2db26c0a0600183f2b3332322f3f2b3f2b30315925170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>LAAAAA+Arial AddT42Char 
2 14248 88 <00010083ffe803e00426001801b7b0852b58b9001affc040091517340220
1316340fb8fff040191214342b1301240813160c0113160b06000a111c03
0b0033164110fff8000d000d014000560016fff2000b000b014000560016
fff4000c000c0140401c5616251817403336341a40101002551728101002
5517120e0e025517b8ffec400b0d0d025517040c0c025517b8fff4400b0b
0b065517141010065517b8fff8400b0d0d0655170c0f0f065517b8fff640
0d0c0c0655ff1701c01701174e1ab8ffc04016343634b01af01a02701aa0
1ab01aff1a041a0c080d0db80140b4560c0e0b0bb80140b4560c0c0c0cb8
0140b3560c2509b8ffc04010333634f0090100092009d009e0090409b8ff
f8b41010025509b8fff840110e0e025509040c0c0255090a0b0b065509b8
fff640160f0f065509020c0c065509020d0d0655094e194750182b10f62b
2b2b2b2b2b2b5d712bed2b2b2b105d712bf65d712b2b2b2b2b2b2b2b2b2b
2b3cfd2b2b2be4003fed3f3f3c39390111123931304379401a04100e0d0f
0d0206070806080508030610040c1b000d08111b00002b012b2a2a81005d
012b2b2b1bb4000a010311b80330b66c030b16060a0600183f3f3f2b323f
30315921350623222626272635113311141716163332363635113311033f
7cd55ea34f100bb40b116e51518e3bb49cb4486d4f35730292fdb38d3147
51538f880239fbda>LAAAAA+Arial AddT42Char 
2 14766 91 <0001000f000003f104260010022bb0852b58bc000dfff2000b000b0140b4
56100e0b0bbe014000560009fff2000b000b0140b456030e0b0bb9014000
56b1020243545840150f010b060402090602060d0a000a0f180f0f02550f
2f2b003f3f3f3f11173931301bb70f12010f22193906b8ffde405019395a
0f96049608990e9a0fc005c006c007cb0f090f4016391a031309150d1a10
35013a0b81018e0b082f1257045907590b580e9701980a980bb702b80cc8
0bca0ecc10da03d509d10ddb10e50a1212b10602435458400b0c0012110f
180d10065506b8ffe8400e0d1006550f0600020d000a0a0206003f3c3f3c
111239392b2b01111239391b40660606030708090901060609050403030b
0f0f100e0d0d010f0f0d100b010009020d0b030c100a060f020f0a10c600
c60902102500091400000903020dc60d010d250c03140c0c030a09090303
0206100d0d0c0c000a4f120112490d7e0c220a0f6106097e400ab8011bb7
4006500680060306b80243400e20037e02224f00010049117cc4182b10f6
5df4ed1a19fd5dfd1a18ed10e510f4ede65d003f3c103c103c3f3c103c10
3c87052e2b5d877dc4872e182b5d7d10c400111239390f0f8708c4870e10
c408c4870e10c4c408c4070e103c3c083c59313001435c58b40e181d390b
b8ffde400b1d390c221739032217390bb8ffdeb2213910b8ffc0400a1539
0122213909401c392b2b2b2b2b2b2b2b595d71002b5d2b2b015d592b2b2b
2b1b400c0f0600020d0a000a0906020600183f3f3f3f1112393930315933
010133171617363737330101230327010f0184fe99e1a32e1c2c25b3d7fe
91018bddda3afee9022801fef947304233fbfe0cfdce014a59fe5d00>LAAAAA+Arial AddT42Char 
2 0 0 <00020100000005000500000300070042b40201e40607b802994013000504
e403000a0704e4010019080605e40203bc023100090199012e00182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>LAAAAA+Arial AddT42Char 
LAAAAA+Arial /CharStrings get begin
/space 3 def
/hyphen 16 def
/period 17 def
/slash 18 def
/zero 19 def
/one 20 def
/two 21 def
/seven 26 def
/colon 29 def
/M 48 def
/a 68 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/g 74 def
/h 75 def
/i 76 def
/k 78 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/x 91 def
end
LAAAAA+Arial /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 55 /seven put
dup 58 /colon put
dup 77 /M put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/FIPHUW+Arial /LAAAAA+Arial findfont ct_VMDictPut
/FIPHUW+Arial*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash /zero /one 
/two 4{/.notdef}rp /seven 2{/.notdef}rp /colon 18{/.notdef}rp /M 19{/.notdef}rp 
/a /.notdef /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/.notdef /r /s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]
FIPHUW+Arial nf
FIPHUW+Arial*1 [8 0 0 -8 0 0 ]msf
26 22 mo
(02/12/2017)sh
269.313 22 mo
(Multifactorial experiment simulator)sh
26 776 mo
(https://skgadi.com/tools/multifactorial-experiment-simulator/)sh
575.891 776 mo
(1/1)sh
gsave
28.9999 28.9999 mo
583.4 28.9999 li
583.4 763.25 li
28.9999 763.25 li
28.9999 28.9999 li
eclp
28.9999 28.9999 mo
583.4 28.9999 li
583.4 827.6 li
28.9999 827.6 li
28.9999 28.9999 li
0 0 0 0 cmyk
f
4.95 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
31.475 31.475 mo
580.925 31.475 li
580.925 825.125 li
31.475 825.125 li
cp
@
33.95 33.95 mo
578.45 33.95 li
578.45 72.725 li
33.95 72.725 li
cp
.872679 .197696 .561242 .0273136 cmyk
f
.825 lw
34.3625 150.688 mo
578.037 150.688 li
578.037 321.462 li
34.3625 321.462 li
cp
@
34.775 151.1 mo
577.625 151.1 li
577.625 190.7 li
34.775 190.7 li
cp
f
34.775 289.7 mo
577.625 289.7 li
577.625 321.05 li
34.775 321.05 li
cp
f
34.3625 335.487 mo
578.037 335.487 li
578.037 606.912 li
34.3625 606.912 li
cp
@
34.775 335.9 mo
577.625 335.9 li
577.625 396.95 li
34.775 396.95 li
cp
f
34.3625 620.938 mo
578.037 620.938 li
578.037 822.237 li
34.3625 822.237 li
cp
@
34.775 621.35 mo
577.625 621.35 li
577.625 660.125 li
34.775 660.125 li
cp
f
33.95 72.725 mo
578.45 72.725 li
578.45 105.725 li
33.95 105.725 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
34.3625 73.1375 mo
578.037 73.1375 li
578.037 105.313 li
34.3625 105.313 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
grestore
gsave
34.775 73.5501 mo
577.625 73.5501 li
577.625 104.9 li
34.775 104.9 li
34.775 73.5501 li
eclp
.659449 .588495 .574517 .389593 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi Initial
ct_T42Dict begin
-0.543 -0.281 1.398 1.016
 256 array 0 1 255 {1 index exch /.notdef put} for  /QAAAAA+Trocchi
Type42DictBegin
[<00010000000b000b000b000b63767420061252d0000000bc0000006a6670
676d76647e780000012800000d16676c7966ef9d992100001650000024c4
686561641637602300000e4000000036686865610f0308bc00000e780000
0024686d747808d3412300000e9c000003746c6f6361a3b2ad6800001210
000001bc6d617870023a0e4f000013cc000000206e616d65275b40c90000
13ec000001ca70726570463dbb22000015b8000000986764697200000000
000000000000000000000000000000000000000000000000000000000000
0000000000e500e5007b007b05e1000005e104310000fe710825fdc00600
ffe50617044effe5fe290825fdc000e500e5007b007b05e1025205e10431
0000fe6f0825fdc00600ffe50617044effe5fe2d0825fdc00000b0002c20
b0005558455920204bb8000e514bb006535a58b0341bb028596066208a55
58b0022561b908000800636323621b2121b00059b000432344b200010043
60422db0012cb02060662db0022c206420b0c050b004265ab228010a4345
6345b006455821b0032559525b582123211b8a5820b050505821b040591b
20b038505821b038595920b1010a434563456164b028505821b1010a4345
634520b030505821b030591b20b0c050582066208a8a6120b00a5058601b
20b020505821b00a601b20b036505821b036601b605959591bb0012b5959
23b00050586559592db0032c204520b00425616420b005435058b0052342
b00623421b212159b001602db0042c232123212064b105624220b0062342
b00645581bb1010a434563b1010a43b002604563b0032a2120b00643208a
208ab0012bb1300525b00426515860501b615259582359215920b0405358
b0012b1b21b0405923b000505865592db0052cb007432bb2000200436042
2db0062cb00723422320b000234261b0026266b00163b00160b0052a2db0
072c20204520b00b4363b804006220b0005058b040605966b001636044b0
01602db0082cb2070b004345422a21b20001004360422db0092cb0004323
44b20001004360422db00a2c20204520b0012b23b00043b004256020458a
2361206420b020505821b0001bb0305058b0201bb040595923b000505865
59b0032523614444b001602db00b2c20204520b0012b23b00043b0042560
20458a23612064b0245058b0001bb0405923b00050586559b00325236144
44b001602db00c2c20b0002342b20b0a034558211b2321592a212db00d2c
b1020245b06461442db00e2cb001602020b00c434ab000505820b00c2342
59b00d434ab000525820b00d2342592db00f2c20b0106266b0016320b804
00638a2361b00e4360208a6020b00e2342232db0102c4b5458b104644459
24b00d6523782db0112c4b51584b5358b1046444591b215924b013652378
2db0122cb1000f435558b10f0f43b0016142b00f2b59b00043b0022542b1
0c022542b10d022542b001162320b003255058b101004360b00425428a8a
208a2361b00e2a2123b00161208a2361b00e2a211bb101004360b0022542
b0022561b00e2a2159b00c4347b00d434760b0026220b0005058b0406059
66b0016320b00b4363b804006220b0005058b040605966b0016360b10000
132344b00143b0003eb20101014360422db0132c00b10002455458b00f23
422045b00b2342b00a23b00260422060b00161b5111101000e0042428a60
b112062bb0892b1b22592db0142cb100132b2db0152cb101132b2db0162c
b102132b2db0172cb103132b2db0182cb104132b2db0192cb105132b2db0
1a2cb106132b2db01b2cb107132b2db01c2cb108132b2db01d2cb109132b
2db0292c2320b0106266b00163b006604b545823202eb0015d1b2121592d
b02a2c2320b0106266b00163b016604b545823202eb001711b2121592db0
2b2c2320b0106266b00163b026604b545823202eb001721b2121592db01e
2c00b00d2bb10002455458b00f23422045b00b2342b00a23b00260422060
b00161b5111101000e0042428a60b112062bb0892b1b22592db01f2cb100
1e2b2db0202cb1011e2b2db0212cb1021e2b2db0222cb1031e2b2db0232c
b1041e2b2db0242cb1051e2b2db0252cb1061e2b2db0262cb1071e2b2db0
272cb1081e2b2db0282cb1091e2b2db02c2c203cb001602db02d2c2060b0
1160204323b0016043b0022561b00160b02c2a212db02e2cb02d2bb02d2a
2db02f2c2020472020b00b4363b804006220b0005058b040605966b00163
6023613823208a555820472020b00b4363b804006220b0005058b0406059
66b00163602361381b21592db0302c00b10002455458b00116b02f2ab105
0115455830591b22592db0312c00b00d2bb10002455458b00116b02f2ab1
050115455830591b22592db0322c2035b001602db0332c00b0014563b804
006220b0005058b040605966b00163b0012bb00b4363b804006220b00050
58b040605966b00163b0012bb00016b40000000000443e2338b13201152a
212db0342c203c204720b00b4363b804006220b0005058b040605966b001
6360b0004361382db0352c2e173c2db0362c203c204720b00b4363b80400
6220b0005058b040605966b0016360b0004361b0014363382db0372cb102
001625202e2047b0002342b00225498a8a47234723612058621b2159b001
2342b236010115142a2db0382cb00016b0102342b00425b0042547234723
61b009432b658a2e2320203c8a382db0392cb00016b0102342b00425b004
25202e472347236120b0042342b009432b20b060505820b0405158b30220
03201bb30226031a5942422320b00843208a234723472361234660b00443
b0026220b0005058b040605966b001636020b0012b208a8a6120b0024360
6423b0034361645058b00243611bb003436059b00325b0026220b0005058
b040605966b0016361232020b00426234661381b23b0084346b00225b008
4347234723616020b00443b0026220b0005058b040605966b00163602320
b0012b23b0044360b0012bb0052561b00525b0026220b0005058b0406059
66b00163b004266120b00425606423b0032560645058211b232159232020
b0042623466138592db03a2cb00016b0102342202020b00526202e472347
2361233c382db03b2cb00016b010234220b0082342202020462347b0012b
2361382db03c2cb00016b0102342b00325b002254723472361b00054582e
203c23211bb00225b00225472347236120b00525b004254723472361b006
25b0052549b0022561b9080008006363232058621b215963b804006220b0
005058b040605966b0016360232e2320203c8a382321592db03d2cb00016
b010234220b00843202e47234723612060b0206066b0026220b0005058b0
40605966b001632320203c8a382db03e2c23202e46b0022546b010435850
1b525958203c592eb12e01142b2db03f2c23202e46b0022546b010435852
1b505958203c592eb12e01142b2db0402c23202e46b0022546b010435850
1b525958203c5923202e46b0022546b0104358521b505958203c592eb12e
01142b2db0412cb0382b23202e46b0022546b0104358501b525958203c59
2eb12e01142b2db0422cb0392b8a20203cb00423428a3823202e46b00225
46b0104358501b525958203c592eb12e01142bb004432eb02e2b2db0432c
b00016b00425b00426202e4723472361b009432b23203c202e2338b12e01
142b2db0442cb108042542b00016b00425b00425202e472347236120b004
2342b009432b20b060505820b0405158b3022003201bb30226031a594242
232047b00443b0026220b0005058b040605966b001636020b0012b208a8a
6120b00243606423b0034361645058b00243611bb003436059b00325b002
6220b0005058b040605966b0016361b0022546613823203c23381b212020
462347b0012b2361382159b12e01142b2db0452cb100382b2eb12e01142b
2db0462cb100392b212320203cb00423422338b12e01142bb004432eb02e
2b2db0472cb000152047b0002342b20001011514132eb0342a2db0482cb0
00152047b0002342b20001011514132eb0342a2db0492cb100011413b035
2a2db04a2cb0372a2db04b2cb000164523202e20468a236138b12e01142b
2db04c2cb0082342b04b2b2db04d2cb20000442b2db04e2cb20001442b2d
b04f2cb20100442b2db0502cb20101442b2db0512cb20000452b2db0522c
b20001452b2db0532cb20100452b2db0542cb20101452b2db0552cb30000
00412b2db0562cb3000100412b2db0572cb3010000412b2db0582cb30101
00412b2db0592cb3000001412b2db05a2cb3000101412b2db05b2cb30100
01412b2db05c2cb3010101412b2db05d2cb20000432b2db05e2cb2000143
2b2db05f2cb20100432b2db0602cb20101432b2db0612cb20000462b2db0
622cb20001462b2db0632cb20100462b2db0642cb20101462b2db0652cb3
000000422b2db0662cb3000100422b2db0672cb3010000422b2db0682cb3
010100422b2db0692cb3000001422b2db06a2cb3000101422b2db06b2cb3
010001422b2db06c2cb3010101422b2db06d2cb1003a2b2eb12e01142b2d
b06e2cb1003a2bb03e2b2db06f2cb1003a2bb03f2b2db0702cb00016b100
3a2bb0402b2db0712cb1013a2bb03e2b2db0722cb1013a2bb03f2b2db073
2cb00016b1013a2bb0402b2db0742cb1003b2b2eb12e01142b2db0752cb1
003b2bb03e2b2db0762cb1003b2bb03f2b2db0772cb1003b2bb0402b2db0
782cb1013b2bb03e2b2db0792cb1013b2bb03f2b2db07a2cb1013b2bb040
2b2db07b2cb1003c2b2eb12e01142b2db07c2cb1003c2bb03e2b2db07d2c
b1003c2bb03f2b2db07e2cb1003c2bb0402b2db07f2cb1013c2bb03e2b2d
b0802cb1013c2bb03f2b2db0812cb1013c2bb0402b2db0822cb1003d2b2e
b12e01142b2db0832cb1003d2bb03e2b2db0842cb1003d2bb03f2b2db085
2cb1003d2bb0402b2db0862cb1013d2bb03e2b2db0872cb1013d2bb03f2b
2db0882cb1013d2bb0402b2db0892cb3090402034558211b232159422bb0
0865b003245078b1050115455830592d000000010000000119997359727f
5f0f3cf50803080000000000d3fefeb000000000d445fcf9fba6fdc00b35
0825000000070002000000000000000100000825fdc000000b6ffba6feaf
0b350001000000000000000000000000000000dd003d00000000000001e0
000001e00000067e0008067e0008067e0008067e0008067e0008067e0008
067e00080874000005a5002105a7005405a7005406200021064d002105cc
002105cc002105cc002105cc002105cc002105810021063f005406760021
0301001e0301001e0301001e030100090301001e0489002306580021050a
0021050a00210791002106b8002106b80021063500540635005406350054
063500540635005406350054063500540895005405350021056600460651
0054062f00210539003b059b002306430014064300140643001406430014
064300140668fffc08be001d06a300100612001706120017054f006f04f3
004e04f3004e04f3004e04f3004e04f3004e04f3004e04f3004e06c00052
04a1ffb8045e004a045e004a04d4005004dd007b047e004a047e004a047e
004a047e004a047e004a0312003304ae0052054b002102990035029f0033
029f0033029f001b029fffea029fffe00299ff710514001702c400250561
002507890031054f0031054f003104a5004a04a5004a04a5004a04a5004a
04a5004a04a5002f04a5004a07ac004a04c4ffcb04fbfff204ac004a03ba
00310410004f05220044037cffec0506fffc0506fffc0506fffc0506fffc
0506fffc04e7fff206970008050000040500ffe50500ffe50500ffe50445
006d057e004a078d004a07ce004a05020033051e004a058d004a0520008a
0499008f045a004a03350056042200560451003f044b0054043d005604d9
008d0412006204d2005e04d7007902a8008f039c007e032e00700375008a
050a003f0684004605f600450628004305ae007b0333003f029d00ba0398
0090024c00920269008b05e100a7035801230358012305460044024d0092
03f1005203f1005202cd008f01c7008f024e008b0333003f02e3fff8035e
0041035e0047041000970410009102e2004702e100440379009903ca0099
03c6004d03c600540225004e0224005402b7008f03b8008e03ba008b0251
008e0252008b01c7008f01e0000006820046047a004a04ac008f05720058
04d2006a06410017046b00940379009903bc006d0391007d03ed009903af
004903af004603bc00660424002d0470009606f30046066a002507120073
04ba00930493008506a7005606a700560399009101e7009901e70099046c
007f04f5018b0151000804f501ba042000ac04f5018b0379009904a5015e
0424011f0000000000000000000000000000000000000000000000000000
0000007e007e007e007e007e007e007e007e007e00e400e400e4011e011e
011e011e011e011e011e0164016401ca01ca01ca01ca01ca01ca01ca01ca
01ca01ca01ca024602460246030803ba03ba041404140414041404140462
0462046204620462046205020502050205020502050205020502058005e8
05e80682068206e606e606e606e606e6075a075a07ca083e083e083e083e
083e083e083e08d8090e090e09ae0a220a220a740a740a740a740a740a74
0a740a740b140b140b140b840c1e0c1e0c8e0cda0cda0cda0cda0cda0d18
0d6c0dbc0e2c0e2c0e2c0e2c0e2c0e2c0e2c0e2c0e2c0e2c0e2c0e2c0e88
0eb20f120fb00ffc107e107e10d4117c117c117c117c117c117c117c117c
117c117c117c117c117c117c117c117c117c117c117c117c11a411a411a4
11a411a411a411b611b611b611b611b611b611e8121a1236123612361236
123612361236123612361236123612361236123612361236123612361236
123612361236123612621262126212621262126212621262126212621262
126212621262126212621262126212621262126212621262126212620001
000000dd00870005007400040002002a003b008b0000009b0d1600030001
0000000800660003000104090000008a00000003000104090001000e008a
0003000104090002000e00980003000104090003003400a6000300010409
0004001e00da0003000104090005001a00f80003000104090006001e0112
000300010409000e003401300043006f0070007900720069006700680074
002000320030003100320020005400680065002000540072006f00630063
00680069002000500072006f006a00650063007400200041007500740068
006f0072007300200028007600650072006e0040006e0065007700740079
0070006f006700720061007000680079002e0063006f002e0075006b0029
00540072006f00630063006800690052006500670075006c006100720031
002e003100300030003b004e006500570054003b00540072006f00630063
00680069002d0052006500670075006c0061007200540072006f00630063
0068006900200052006500670075006c0061007200560065007200730069
006f006e00200031002e00310030003000540072006f0063006300680069
002d0052006500670075006c006100720068007400740070003a002f002f
0073006300720069007000740073002e00730069006c002e006f00720067
002f004f0046004c0000004bb800c85258b101018e59b001b90800080063
70b1000742b3301c02002ab1000742b523080f0802082ab1000742b52d06
190602082ab1000942bb09000400000200092ab1000b42bb004000400002
00092ab1030044b12401885158b0408858b1036444b12601885158ba0880
0001044088635458b103004459595959b525081108020c2ab801ff85b004
8db1020044b305640600444400>
[9413 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 7524 133 <00010056ff6d03e30452002c0037403414010201014a2c2b020047000201
040102047e000101035f0003031c4b000404005d00000012004c2a292220
1b191311100507152b29012623363f013e01373e01373635342e01232207
1e0115140623222635343e0133321e011514060705211307033ffd501202
42231a50683f52692325406b3d855229385545505681db7f7cb5618588fe
f202162545772d1711354932416d3f403c4273455e0c432e41505f495190
565aaa774fbd63c4fed30a00>QAAAAA+Trocchi AddT42Char 

1 0 0 <> QAAAAA+Trocchi AddT42Char 
QAAAAA+Trocchi /CharStrings get begin
/two 133 def
end
QAAAAA+Trocchi /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
/FIPHUX+Trocchi /QAAAAA+Trocchi findfont ct_VMDictPut
/FIPHUX+Trocchi*1 
[50{/.notdef}rp /two 205{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
41.375 93.35 mo
(2)sh
grestore
33.95 105.725 mo
578.45 105.725 li
578.45 137.075 li
33.95 137.075 li
cp
.872679 .197696 .561242 .0273136 cmyk
f
0 0 0 0 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 1164 48 <00020021ffdf062d05e10040004e009ab52b010009014a4bb03250584036
000700010007017e0c01090000070900650a010404055d000505114b0603
020101025e000202124b060302010108600b0108081a084c1b4034000700
010007017e00050a0104090504670c01090000070900650603020101025e
000202124b060302010108600b0108081a084c59401b424100004d4b414e
424e0040003f3d3c3a3841111111112e0d071a2b0426272e012726272e01
272e0127262b0111331521353311233521333216171e01171e0117161514
070e01071e01171e011716171e01171e0133323d01331510210132363736
353426272e012b011104c56322203412140e092c19183612100eece3fd3e
f3f3023f2f425944536b423f4b1a196d357c573a4e1b191f110d1806180c
0d28196787fed5fd7ba1c8383a3a3f3ea98375212b26237a48525139601a
18220504fde18f8f04c38f0406081c1e1d51413f53af562933120c2a2221
4a3d3171224814161cbd8b93fe9b03652f38395e516a1f1d19fdf200>FIPHUX+Trocchi AddT42Char 
1 3332 75 <0002004affe50432044e0022002b003d403a1e1d020201014a0701050001
02050165000404005f0000001c4b000202035f060103031a034c23230000
232b232b28260022002125152b0807172b0426272e013534363736373633
3216171e0117211514171e0133323e0137170e0223012e0223220e010701
dcca4241452b2a5c9a516266b042434d02fcfd4a257c4f46836115751a7e
bc75010202477748497a4d081b5b504ec4695baa489d3a1f484446d48108
ae773c433b714c256ea35802ae5f935252935f00>FIPHUX+Trocchi AddT42Char 
1 5896 108 <0001004fffe503c3044e00540041403e3b010405014a000405000504007e
0000000102000167000505035f0003031c4b000202065f070106061a064c
0000005400533e3c35332b292215270807172b04272e0135343e01333216
15140e01231e0133323637363534262726272e01272e01353436373e0137
36333216171e0115140e012322263534363f012623220e01151416171617
1e01171e01151406070e01070623016181434e263f243b4c1b2e19278341
5375292b3a316d7e417b2f3239392f2c7337382e489340414e233c223b4e
1a0f23637d4570403a327478407c313239342c2976403d451b3d1f6d452a
4526403921361f1c25202728412f4c163121113420216a42426d23202e09
08201d1f61382b4526463b1a310c1830294e35263e122d20123a24247346
477225232f090900>FIPHUX+Trocchi AddT42Char 
1 6204 110 <0001ffecffe5033b05e10025006cb507010002014a4bb032505840240005
00040005047e000101114b03010000025d000202144b000404065f070106
061a064c1b40240001020183000500040005047e03010000025d00020214
4b000404065f070106061a064c59400f0000002500241323111329150807
1a2b04272e01351123353e01373637363736333216151121152111141633
32363d013315140e0123017b5c3037cc4a7e28251d250d15100c0e018afe
764e44534f783e8c751b4c27804f029a2f167449424455182b1211fe7372
fd62565a6d80907b88ae58000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/R 48 def
/e 75 def
/s 108 def
/t 110 def
end
FIPHUX+Trocchi /Encoding get
dup 82 /R put
dup 101 /e put
dup 115 /s put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[50{/.notdef}rp /two 31{/.notdef}rp /R 18{/.notdef}rp /e 13{/.notdef}rp /s 
/t 139{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
288.63 125.525 mo
(Reset)sh
.825 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
35.1875 191.113 mo
215.037 191.113 li
215.037 223.287 li
35.1875 223.287 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 252 22 <000100210000055e05e1001500844bb03250584032000306050603057e00
0500080705086504010101025d000202114b000707065d000606144b0901
00000a5d0b010a0a120a4c1b4030000306050603057e0002040101060201
650005000807050865000707065d000606144b090100000a5d0b010a0a12
0a4c59401400000015001514131111111111111111110c071d2b33353311
23352111231121112135331123352111211521f3f3053db6fd5801688a8a
fe9801048f04c38ffddb0196fdfad3fdb8fefdba8f000000>FIPHUX+Trocchi AddT42Char 
1 2244 62 <0002004effe504fc044e00440053005340504a01050240010405024a0005
02040205047e0001000205010267000000035f0003031c4b0a0802040406
5f09070206061a064c4545000045534552004400433c3a3433312f25231c
1a151412100b07142b042e01353436373e013736373e0135342623220607
321615140e01232226353436373e01333216171e0115111416171633323d
0133151406070e012322262726270e02233e0137363d010e01070e011514
163301127e46352e2c713b78602e346e67487f233e4d2540263e55363133
ab63538636373b151a1d2a7f6d2a28275e404573282b071c71944e758e2e
2e39a1423b493d381b3b704b3b6322213c162b381b4c2c70712d27433129
4124564c295f2d2f392528299061fe342b451b1db29581638b24231f3638
3b51487240904e3d3b38d539641e1a5539333d00>FIPHUX+Trocchi AddT42Char 
1 2816 71 <0001004affe50427044e0033003640332f2e020401014a00020001040201
67000303005f0000001c4b000404055f060105051a054c00000033003228
2214282a0707192b0426272e01353436373e01333216171e0115140e0123
2226353436332e01232206070e0115141e01333236373e0137170e022301
e6bf464750464243d38049933e414d26482f42585941227a4c558b2a292b
5097693b712926340a711a80c27b1b4c4646cf7874d053545f2b292b8b54
294b2e4e3f3f4a37424b413f9b5280ba643128264d20256ea2590000>FIPHUX+Trocchi AddT42Char 
1 5188 96 <0002004affe5045c044e00130025002c4029000202005f0000001c4b0501
0303015f040101011a014c14140000142514241d1b00130012270607152b
0426023534363736333216171e011514060706233e023534262726232206
070615141e013301b9ee817b7778a076c74342467a7676a05883463c4143
6361881e1e47865a1b910100a3a2fe4a4b564d4ccf77a1fd4a4c7f69c07f
8bc73c3d786864877fc069000000>FIPHUX+Trocchi AddT42Char 
1 5672 107 <00010031000003ad044e00230073b61606020401014a4bb0175058402a00
0502010205017e000101025f03010202144b000404025f03010202144b06
010000075d00070712074c1b4028000502010205017e000101025d000202
144b000404035f0003031c4b06010000075d00070712074c59400b111516
262511111008071c2b3733112335251736373e0133321e0115140e012322
263534363f0122060706151133152131c3c3017b1b194223673b375a3529
462a3b53130b0b3b5c1a33e1fd857003517011ea554b282e294e35324b27
4a3b132c0e0b49407c97fe317000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/F 22 def
/a 62 def
/c 71 def
/o 96 def
/r 107 def
end
FIPHUX+Trocchi /Encoding get
dup 70 /F put
dup 97 /a put
dup 99 /c put
dup 111 /o put
dup 114 /r put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[50{/.notdef}rp /two 19{/.notdef}rp /F 11{/.notdef}rp /R 14{/.notdef}rp /a 
/.notdef /c /.notdef /e 9{/.notdef}rp /o 2{/.notdef}rp /r 
/s /t 139{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
104.939 211.325 mo
(F)sh
113.042 211.325 mo
(acto)sh
139.798 211.325 mo
(r)sh
215.863 191.113 mo
396.538 191.113 li
396.538 223.287 li
215.863 223.287 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if

1 0 3 <> FIPHUX+Trocchi AddT42Char 
1 572 32 <00010021000004f005e1000d005b4bb03250584020000501000105007e03
010101025d000202114b04010000065e0701060612064c1b401e00050100
0105007e00020301010502016504010000065e0701060612064c59400f00
00000d000d11111111111108071a2b333533112335211523112111331121
f3f302c4e50235bb8f04c38f8ffb3d01e2fd8f00>FIPHUX+Trocchi AddT42Char 
1 3988 83 <00020035000002930617000f001900934bb01d5058402207010101005f00
00001b4b000303045d000404144b05010202065d0801060612064c1b4bb0
2c5058402207010101005f000000194b000303045d000404144b05010202
065d0801060612064c1b4020000007010104000167000303045d00040414
4b05010202065d0801060612064c59594018101000001019101918171615
14131211000f000e260907152b002e0135343e0133321e0115140e012301
35331123352111331501284428284428274529294527fee7c1c3019ac404
ee284427294528294528274428fb1270035170fc3f70>FIPHUX+Trocchi AddT42Char 
1 4528 91 <00010025000002b205e1000900474bb03250584017000101025d00020211
4b03010000045d0501040412044c1b401500020001000201650301000004
5d0501040412044c59400d000000090009111111110607182b3335331123
352111331525dfdf01b6d77004f67bfa8f70>FIPHUX+Trocchi AddT42Char 
1 4636 93 <000100310000077b044e00450079b61306020001014a4bb017505840200c
08020101025f0403020202144b0d0b090705050000065d0e0a0206061206
4c1b402b0c08020101035f040103031c4b0c08020101025d000202144b0d
0b090705050000065d0e0a02060612064c594018454443423a3835343332
31302311111b29251111100f071d2b373311233525173e01373633321617
1e011716173e01333216171e01171e011716151133152135331134262322
0e0115113315213533113426232206070e010706151133152131c3c3017b
19144c305c6627362226371a19112fa76a22352024371d1e260d0cb8fdcf
a2645b456636acfdd1ac645b38571a181f0605acfdba7003517011da3b5d
1b33070b0d2c28283a6b6a060a0b221d1f4f3a3a49fda7707002577f7f3c
6a44fd95707002577f7f2b242265353937fe2670>FIPHUX+Trocchi AddT42Char 
1 6704 117 <00010008ffd9069804310020003a40371b0c09030703014a000300070003
077e060402030000015d05010101144b09080207071a074c00000020001f
24111112121111130a071c2b0426270323352115231b01331b0123352115
23030e02232226270b010e022301e23a15e3a80231a1a7eab6d9bba801cd
8ee30f202f25333b15b0cf1325322627414e03597070fd1a02e3fd1702ec
7070fcac3b3f1a404d0286fd833a401c0000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/space 3 def
/L 32 def
/i 83 def
/l 91 def
/m 93 def
/w 117 def
end
FIPHUX+Trocchi /Encoding get
dup 32 /space put
dup 76 /L put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 19{/.notdef}rp /F 5{/.notdef}rp /L 
5{/.notdef}rp /R 14{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /m /.notdef /o 2{/.notdef}rp 
/r /s /t 2{/.notdef}rp /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
271.653 211.325 mo
(Lo)
[7.7948 0 ]xsh
286.016 211.325 mo
(w)sh
295.986 211.325 mo
(e)sh
302.705 211.325 mo
(r limit)sh
397.362 191.113 mo
577.212 191.113 li
577.212 223.287 li
397.362 223.287 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 1908 51 <00010014ffe5062f05e1001f00504bb0325058401a060402030000015d05
010101114b000303075f080107071a074c1b401805010106040203000301
0065000303075f080107071a074c5940100000001f001e11111322111115
09071b2b0426272635112335211523111021323635112335211523111406
070e01070623028bdd4280d802a0dd015eacb2e3027fd121272881646684
1b504c92f1034e8f8ffca4fe7bc7c403568f8ffcd16aa4484c621d1d0000
>FIPHUX+Trocchi AddT42Char 
1 5352 104 <0002ffcbfe6f047b044e0019002c00b74bb0235058400f04010102150602
0701024a050102481b400f040106021506020701024a05010248594bb016
5058402206010101025f0002021c4b08010707035f0003031a4b04010000
055d00050516054c1b4bb0235058401f040100000500056106010101025f
0002021c4b08010707035f0003031a034c1b4026000106070601077e0401
000005000561000606025f0002021c4b08010707035f0003031a034c5959
40101a1a1a2c1a2b2911132725111009071b2b033311233525153e013332
16171615140206232226271133152100363736353426272623220e011514
171e013335ebc2019336a7697cc6373570ce89599b33ddfd6103066a1f3c
3c3d3e524f7b443e1f6d44fee704da701dc962679582819ba6feff8f554b
fe647a01e751468ab072bb3d3e71ca80a685444f>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/U 51 def
/p 104 def
end
FIPHUX+Trocchi /Encoding get
dup 85 /U put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 19{/.notdef}rp /F 5{/.notdef}rp /L 
5{/.notdef}rp /R 2{/.notdef}rp /U 11{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /.notdef 
/o /p /.notdef /r /s /t 2{/.notdef}rp /w 
136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
452.547 211.325 mo
(Uppe)sh
483.696 211.325 mo
(r limit)sh
34.775 223.7 mo
215.45 223.7 li
215.45 256.7 li
34.775 256.7 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
35.1875 224.113 mo
215.037 224.113 li
215.037 256.287 li
35.1875 256.287 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
gsave
42.2001 231.125 mo
208.025 231.125 li
208.025 249.275 li
42.2001 249.275 li
42.2001 231.125 li
eclp
.659449 .588495 .574517 .389593 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 7440 132 <00010056000003250431000a00294026050403030001014a000101144b02
010000035e0401030312034c0000000a000a1114110507172b3335331107
27253311331575f3d53d016f7ae6710310628191fc407100>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/one 132 def
end
FIPHUX+Trocchi /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 19{/.notdef}rp /F 5{/.notdef}rp 
/L 5{/.notdef}rp /R 2{/.notdef}rp /U 11{/.notdef}rp /a /.notdef 
/c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/.notdef /o /p /.notdef /r /s /t 2{/.notdef}rp 
/w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
42.2 244.325 mo
(F)sh
50.303 244.325 mo
(acto)sh
77.0591 244.325 mo
(r 1)sh
grestore
215.45 223.7 mo
396.95 223.7 li
396.95 256.7 li
215.45 256.7 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
215.863 224.113 mo
396.538 224.113 li
396.538 256.287 li
215.863 256.287 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
gsave
216.275 224.525 mo
396.125 224.525 li
396.125 255.875 li
216.275 255.875 li
216.275 224.525 li
eclp
.659449 .588495 .574517 .389593 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 7256 131 <0002004affe50410044e0018002c002c4029000202005f0000001c4b0501
0303015f040101011a014c19190000192c192b2321001800172b0607152b
0426272e0135343637363736333216171e01151406070e01233e01373635
34262726232206070615141617163301bbbe3b3a3e3f3b3c5c5f7271bd3c
3b3e3e3a3bbe724f7c1e1d3e3b3e4f4e7b1f1e3c3c3e501b5f5351c76c6b
c652512f305e5251c76b6cc751535f7f7e65637174c641418067647175c2
3f410000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/zero 131 def
end
FIPHUX+Trocchi /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two 19{/.notdef}rp /F 
5{/.notdef}rp /L 5{/.notdef}rp /R 2{/.notdef}rp /U 11{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/m /.notdef /o /p /.notdef /r /s /t 
2{/.notdef}rp /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
382.512 244.325 mo
(0)sh
grestore
396.95 223.7 mo
577.625 223.7 li
577.625 256.7 li
396.95 256.7 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
397.362 224.113 mo
577.212 224.113 li
577.212 256.287 li
397.362 256.287 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
gsave
397.775 224.525 mo
576.8 224.525 li
576.8 255.875 li
397.775 255.875 li
397.775 224.525 li
eclp
.659449 .588495 .574517 .389593 cmyk
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
551.766 244.325 mo
(100)sh
grestore
34.775 256.7 mo
215.45 256.7 li
215.45 289.7 li
34.775 289.7 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
35.1875 257.112 mo
215.037 257.112 li
215.037 289.288 li
35.1875 289.288 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
gsave
42.2001 264.125 mo
208.025 264.125 li
208.025 282.275 li
42.2001 282.275 li
42.2001 264.125 li
eclp
.659449 .588495 .574517 .389593 cmyk
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
42.2 277.325 mo
(F)sh
50.303 277.325 mo
(acto)sh
77.0591 277.325 mo
(r 2)sh
grestore
215.45 256.7 mo
396.95 256.7 li
396.95 289.7 li
215.45 289.7 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
215.863 257.112 mo
396.538 257.112 li
396.538 289.288 li
215.863 289.288 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
gsave
222.875 264.125 mo
389.525 264.125 li
389.525 282.275 li
222.875 282.275 li
222.875 264.125 li
eclp
.659449 .588495 .574517 .389593 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 9268 173 <00010099022302df02ac0003001e401b000001010055000000015d020101
00014d000000030003110307152b133521159902460223898900>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/hyphen 173 def
end
FIPHUX+Trocchi /Encoding get
dup 45 /hyphen put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
19{/.notdef}rp /F 5{/.notdef}rp /L 5{/.notdef}rp /R 2{/.notdef}rp /U 
11{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r 
/s /t 2{/.notdef}rp /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
378.916 277.325 mo
(-1)
[5.37177 0 ]xsh
grestore
396.95 256.7 mo
577.625 256.7 li
577.625 289.7 li
396.95 289.7 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
397.362 257.112 mo
577.212 257.112 li
577.212 289.288 li
397.362 289.288 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
gsave
404.375 264.125 mo
570.2 264.125 li
570.2 282.275 li
404.375 282.275 li
404.375 264.125 li
eclp
.659449 .588495 .574517 .389593 cmyk
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
565.237 277.325 mo
(1)sh
grestore
35.1875 397.362 mo
305.788 397.362 li
305.788 429.538 li
35.1875 429.538 li
cp
@
.750271 .679713 .654902 .901946 cmyk
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
150.172 417.575 mo
(F)sh
158.275 417.575 mo
(acto)sh
185.031 417.575 mo
(r)sh
306.612 397.362 mo
577.212 397.362 li
577.212 429.538 li
306.612 429.538 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 2088 56 <0001fffcffdd066005e10014004cb509010600014a4bb032505840150503
02030000015d04010101114b070106061a064c1b40130401010503020300
06010065070106061a064c59400f00000014001311111211111308071a2b
04262701233521152309012135211523010e02230300411bfe3de502cdd3
016c0161fef702a6f3fe5113232f2423404d04e88f8ffbd3042d8f8ffb18
363c1b000000>FIPHUX+Trocchi AddT42Char 
1 6428 111 <0001fffcffe305040431001f003340301c000203011e1d020003024a1f01
004704010101025d05010202144b000303005f0000001a004c1115231118
2106071a2b25062322262726272e01351123352111141633323637363511
2335211117150503717eeb2440284a3d1d20bc0193545a408d3030b6018e
c2fe6dc5e00a0d1757298352025970fd3984764c3e3e3f024a70fc40155c
1d00>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/V 56 def
/u 111 def
end
FIPHUX+Trocchi /Encoding get
dup 86 /V put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
19{/.notdef}rp /F 5{/.notdef}rp /L 5{/.notdef}rp /R 2{/.notdef}rp /U 
/V 10{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef 
/r /s /t /u /.notdef /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
424.278 417.575 mo
(V)sh
432.991 417.575 mo
(alu)sh
452.569 417.575 mo
(e)sh
34.775 429.95 mo
306.2 429.95 li
306.2 462.95 li
34.775 462.95 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
35.1875 430.362 mo
305.788 430.362 li
305.788 462.538 li
35.1875 462.538 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
gsave
42.2001 437.375 mo
298.775 437.375 li
298.775 455.525 li
42.2001 455.525 li
42.2001 437.375 li
eclp
.659449 .588495 .574517 .389593 cmyk
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
42.2 450.575 mo
(F)sh
50.303 450.575 mo
(acto)sh
77.0591 450.575 mo
(r 1)sh
grestore
306.2 429.95 mo
577.625 429.95 li
577.625 462.95 li
306.2 462.95 li
cp
0 0 0 0 cmyk
f
306.612 430.362 mo
577.212 430.362 li
577.212 462.538 li
306.612 462.538 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
34.775 462.95 mo
306.2 462.95 li
306.2 495.95 li
34.775 495.95 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
35.1875 463.362 mo
305.788 463.362 li
305.788 495.538 li
35.1875 495.538 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
gsave
42.2001 470.375 mo
298.775 470.375 li
298.775 488.525 li
42.2001 488.525 li
42.2001 470.375 li
eclp
.659449 .588495 .574517 .389593 cmyk
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
42.2 483.575 mo
(F)sh
50.303 483.575 mo
(acto)sh
77.0591 483.575 mo
(r 2)sh
grestore
306.2 462.95 mo
577.625 462.95 li
577.625 495.95 li
306.2 495.95 li
cp
0 0 0 0 cmyk
f
306.612 463.362 mo
577.212 463.362 li
577.212 495.538 li
306.612 495.538 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
34.775 495.95 mo
577.625 495.95 li
577.625 528.95 li
34.775 528.95 li
cp
f
35.1875 496.362 mo
577.212 496.362 li
577.212 528.537 li
35.1875 528.537 li
cp
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 0 13 <00010054ffe5059606000032005eb62f2e020401014a4bb0325058401e00
02000104020167000303005f000000194b000404055f060105051a054c1b
401c00000003020003670002000104020167000404055f060105051a054c
59400e000000320031282215272a0707192b042427260235341237362433
3216171615140e0123222635343e01332e0123220602151416171e013332
36373e0137170604210283fef35e5d676960610113a08bfb5152315a394d
5d36522a33c37987d577463f41c573569b373548118636febbff001b7e6e
6d01239fa4011c676772756a6b852e54345a4c3149264f649cfee1bd6ed5
585a694137357c4341e9fb00>FIPHUX+Trocchi AddT42Char 
1 4956 94 <0001003100000542044e002b0063b506010001014a4bb0175058401b0701
0101025f03010202144b080604030000055d0901050512054c1b40250701
0101035f0003031c4b07010101025d000202144b080604030000055d0901
050512054c59400e2b2a182311111b241111100a071d2b37331123352517
3e02333216171e01171e01171615113315213533113426232206070e0107
06151133152131c3c3017b191f728c4722352024371d1e260d0ccdfda5b7
645b385f201f2b090ab6fdb07003517011da486836060a0b221d1f4f3a3a
49fda7707002577f7f2a25246336323dfe2670000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/C 13 def
/n 94 def
end
FIPHUX+Trocchi /Encoding get
dup 67 /C put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
16{/.notdef}rp /C 2{/.notdef}rp /F 5{/.notdef}rp /L 5{/.notdef}rp /R 
2{/.notdef}rp /U /V 10{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /.notdef /w 
136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
247.844 516.575 mo
(Calcula)sh
294.619 516.575 mo
(te r)sh
315.55 516.575 mo
(espon)sh
351.322 516.575 mo
(se)
[6.28418 0 ]xsh
34.775 528.95 mo
577.625 528.95 li
577.625 561.95 li
34.775 561.95 li
cp
.872679 .197696 .561242 .0273136 cmyk
f
35.1875 529.362 mo
577.212 529.362 li
577.212 561.537 li
35.1875 561.537 li
cp
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 456 25 <0001001e000002e305e1000b004a4bb0325058401803010101025d000202
114b04010000055d0601050512054c1b4016000203010100020165040100
00055d0601050512054c59400e0000000b000b11111111110707192b3335
331123352115231133151ef4f402c5e6e68f04c38f8ffb3d8f00>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/I 25 def
end
FIPHUX+Trocchi /Encoding get
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
16{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
5{/.notdef}rp /R 2{/.notdef}rp /U /V 10{/.notdef}rp /a /.notdef 
/c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/.notdef /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
271.898 549.575 mo
(Is optim)sh
321.066 549.575 mo
(um)
[7.77063 0 ]xsh
34.775 561.95 mo
577.625 561.95 li
577.625 606.5 li
34.775 606.5 li
cp
.0704356 .0448615 .0910048 0 cmyk
f
35.1875 562.362 mo
577.212 562.362 li
577.212 606.087 li
35.1875 606.087 li
cp
.872679 .197696 .561242 .0273136 cmyk
@
.659449 .588495 .574517 .389593 cmyk
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 8952 159 <00010092ffec01bb0114000f00194016000000015f020101011a014c0000
000f000e260307152b162e0135343e0133321e0115140e0123fd43282843
2827462929462714284427294428294428274428>FIPHUX+Trocchi AddT42Char 
1 7716 134 <0001003ffecf040204500042007e400b3b1b0202051a010002024a4bb00a
50584029000205000502007e00000101006e000400050204056700010801
07010764000303065f0006061c034c1b402a000205000502007e00000105
00017c00040005020405670001080107010764000303065f0006061c034c
5940100000004200412626122626282509071b2b12272635343633321e01
151407061516333236373e01351021220727243534262322060732171e01
15140623222e0135343e013332161716151406071e011514060423ed6033
4845283f23110a3e145a962f2d31ff002b4a1801478a7a536738332c191e
514032502d71cc8668a5315e817fb3b190fef9adfecf5a2e43424d274024
2127170208383030743e01020c7f32cc6a7b2e3f190e372341522f4b286a
9c523b3365856b932112b1917ec77100>FIPHUX+Trocchi AddT42Char 
1 8032 135 <00020054fe7d0464043f000e00110053b411070202484bb0165058401906
010202015d03010101124b04010000055d0701050516054c1b4016040100
07010500056106010202015d0301010112014c5940100000100f000e000e
11111411110807192b0135333521270117112107231533150121110193f0
fdea19020afc010a12f8dffcd30177fe7d89fa8703b81efc7596fa890219
0306>FIPHUX+Trocchi AddT42Char 
1 8444 138 <00010062fe3d03cf0431000f006c4bb00a50584018000100030001700000
00025d000202144b040103031e034c1b4bb0165058401900010003000103
7e000000025d000202144b040103031e034c1b4018000100030001037e04
01030382000000025d00020214004c5959400c0000000f000e1111150507
172b002635343701211523112117010e012301314112022bfdeeb9033637
fe0c124326fe3d4134292704a2f4018197fafe2c2f00>FIPHUX+Trocchi AddT42Char 
1 8616 139 <0003005effe5047505e5002a004000520058400948401e0b040302014a4b
b03250584017000202005f000000114b05010303015f040101011a014c1b
4015000000020300026705010303015f040101011a014c59401341410000
415241513533002a002915130607142b042e01353436373e013736372e01
272635343e0133321e01151406070e01071e01171e01171615140e012312
36373e0135342e0123220e0115141716171617161712363534272e012f01
0e01070e011514163301d1ee85382c276c2c232b44612b5b6fcf8d83cf74
332e2d5c3641592f313e14147deca25d4423252a447b504f7c472112481e
6122265bab693361530c30502b2f359e8d1b59a36b478530294d15111129
4c30648d699d5461a76641742c2a3e18253e282b5637393c72aa5d038730
232565383e693f386a462b341d3616371513fd127a7a6b53273c2d061939
282b6b387d83>FIPHUX+Trocchi AddT42Char 
1 9324 196 <0002009901660353035c00030007002f402c000004010102000165000203
030255000202035d05010302034d04040000040704070605000300031106
07152b13352115013521159902bafd4602ba02d38989fe938a8a0000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/period 159 def
/three 134 def
/four 135 def
/seven 138 def
/eight 139 def
/equal 196 def
end
FIPHUX+Trocchi /Encoding get
dup 46 /period put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 56 /eight put
dup 61 /equal put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
5{/.notdef}rp /R 2{/.notdef}rp /U /V 10{/.notdef}rp /a /.notdef 
/c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/.notdef /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [19.8 0 0 -19.8 0 0 ]msf
196.32 590.825 mo
(Respon)sh
268.859 590.825 mo
(se= 320.3734872)sh
34.775 660.125 mo
577.625 660.125 li
577.625 742.625 li
34.775 742.625 li
34.775 660.125 li
0 0 0 0 cmyk
f
34.775 660.125 mo
577.625 660.125 li
577.625 660.95 li
34.775 660.95 li
cp
.367315 .296971 .30219 .000732433 cmyk
f
34.775 741.8 mo
577.625 741.8 li
577.625 742.625 li
34.775 742.625 li
34.775 741.8 li
f
576.8 660.125 mo
577.625 660.125 li
577.625 742.625 li
576.8 742.625 li
576.8 660.125 li
f
34.775 660.125 mo
34.775 742.625 li
38.075 741.8 li
38.075 660.95 li
.751431 .0525826 1 .00131228 cmyk
f
gsave
34.775 660.125 mo
577.625 660.125 li
577.625 742.625 li
34.775 742.625 li
34.775 660.125 li
eclp
572.967 741.267 mo
572.383 740.683 li
575.683 737.383 li
576.267 737.967 li
575.854 738.379 li
575.683 738.208 li
573.208 740.683 li
573.379 740.854 li
572.967 741.267 li
569.667 741.267 mo
569.083 740.683 li
575.683 734.083 li
576.267 734.667 li
575.854 735.079 li
575.683 734.908 li
569.908 740.683 li
570.079 740.854 li
569.667 741.267 li
0 0 0 .6 cmyk
f
573.792 741.267 mo
573.379 740.854 li
575.854 738.379 li
576.267 738.792 li
573.792 741.267 li
570.492 741.267 mo
570.079 740.854 li
575.854 735.079 li
576.267 735.492 li
570.492 741.267 li
0 0 0 0 cmyk
f
573.379 740.854 mo
573.208 740.683 li
575.683 738.208 li
575.854 738.379 li
573.379 740.854 li
570.079 740.854 mo
569.908 740.683 li
575.683 734.908 li
575.854 735.079 li
570.079 740.854 li
0 0 0 .239216 cmyk
f
grestore
gsave
28.9999 28.9999 mo
583.4 28.9999 li
583.4 763.25 li
28.9999 763.25 li
28.9999 28.9999 li
eclp
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: VAAAAA+Consolas Initial
ct_T42Dict begin
-0.43 -0.301 0.676 1.008
 256 array 0 1 255 {1 index exch /.notdef put} for  /VAAAAA+Consolas
Type42DictBegin
[<00010000000b000b000b000b63767420ec4ccc7b000000bc000005466670
676d4f2e51f50000060400000d2a676c7966fed83f2e00008ec80000122c
68656164f00b42be00001330000000366868656109480af7000013680000
0024686d74787933125b0000138c00002b766c6f636100c595f400003f04
00002db86d617870190b1a8200006cbc000000206e616d6516af44110000
6cdc0000094b70726570301acfbe000076280000189f6764697200000000
00000000000000000000076c0337fe5c0000000000000000000000000000
005200660073008a009600a600d501080133014d0073008500a000ae00c1
00ca00f00106011d014c0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000051b00120000ffeefe7ffffb
ff2905f2fee5fe5c0617ff0605d7ff1403ec00120000ffee0585000cfe66
fff6fe7ffed9ff2904c3fe5cff000666ff29fff002400008051b00120000
ffee047b0012ff29fff80566058505a805d10337fe2900000000079e0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000004d0052005f00650066006a
0066006c0070006a005c005d005e00640069007000710073007400760079
007a007b007d006e0077007b007e0082008300860088006e007300770079
007a007b007f0081008300870089008b008c008d008e008f008100820085
00870088008b008d008e008f0089008d008f007f00810082008300850086
00870089008a008b008c008d008e008f00910093009600980099009a009b
0090009100920093009400950096009700980099009a009b009c009d0091
0093009400950096009700980099009a009c009000910092009300940095
0096009700980099009a009b009c009d009e009f00a000a100a200a400a6
00a800aa00ae009e009f00a000a200a400a600a800aa00ab00ac00af00b1
009e00a200a600a800ae00d500d500e100fe00fb00fc00ef00f10108010a
0112011a0133013d014d014e0065006800730074005c005e006e0075006f
0076007300900091007f00800085008a008b007d00870088007f00860088
0089008b0090009100920081008400850086008700880089008a008c008d
008e008f00910092009400950098009e00a400a600930099009c009d00a0
00a100a200a300a400a600940095009600980099009a009b009c009d009e
009f00a000a300a400a500a6009400950096009700980099009a009b009c
009d009e009f00a000a200a300a400a500a600a900ab00b000b200b300b4
00b600b700ac00ae00af00b200b400b500ac00a700a800a900aa00ab00ac
00ad00ae00b000b100b200b300b400b500b600b700a800aa00ab00ac00ad
00ae00af00b000b100b200b300b400b500b600b700b800ba00bb00bc00bd
00c100b800b900bc00b800b900ba00bb00bc00bd00be00c400b800b900ba
00bc00bd00be00c100c300c400c500c600c700cc00cd00d500d700c700c8
00cb00d100d200d300d500d700d900e200ee00fa00df00e700ef00dd00e1
00e500e600e800eb00ec00ee00ef00f000f100f600fc00fc00fe00fc0106
0108010a012d01120119011d012501330139014c00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000960000000000000000000000000000000000000262
01cc02f8fdfe075c000000000000000005850593033d024c0000fff0005c
005c008efe600000000c0630060b05fa05ef000b0535000a051b02cefff6
01d306e4000906140415fff6005700620000000000000000000000000000
000000000000000000000000000000000000051b00120000ffeefe660095
009c03ec001205850000405a8574737271706f6e6d6c6b6a696867666564
625f5e5d5c5b5a59585554535251504f4eb34d4c4b4a4948474645444342
41403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e
01b0282370b10228453ab10200080d2d2c2045b00325456164b050515845
441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b0
4061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c
8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23
442d2c4b525845441b2121592d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b0
06430b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb820
00621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb2
00802f2b59b002602d2c0c6423648bb84000626023212d2c452345602345
6023456023766818b08062202d2cb00426b00426b00425b0042545234520
b003266062636820b0032661658a2344442d2c2045b0005458b040442045
b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b0
2f2370b01423421b2121592d2c4b515820b0032545695358441b2121591b
2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45232045
8a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333003400
5944442d2cb0164358b00326458a586466b01f601b64b020606620581b21
b04059b001615923586559b02923442310b029e01b2121212121592d2cb0
164358b004254564b020606620581b21b04059b0016123586559b0292344
b00425b00725082058021b0359b0052510b004252046b0042523423cb007
2510b006252046b00425b0016023423c2058011b0059b0052510b00425b0
29e0b0072510b00625b029e0b00425b00725082058021b0359b00425b003
254348b00625b00325b0016043481b2159212121212121212d2cb0164358
b004254564b020606620581b21b04059b0016123581b6559b0292344b005
25b00825082058021b0359b0042510b005252046b0042523423cb00425b0
072508b0072510b006252046b00425b0016023423c2058011b0059b00425
10b00525b029e0b02920456544b0072510b00625b029e0b00525b0082508
2058021b0359b00525b003254348b00425b0072508b00625b00325b00160
43481b2159212121212121212d2c02b00425202046b004252342b0052508
b003254548212121212d2c02b0032520b0042508b0022543482121212d2c
452320451820b00050205823652359236820b040505821b0405923586559
8a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60
441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b21
21592d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21
2121592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b
212121592d2c0020b200400325b0062649618b3812342d2c2320b000508a
8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b
2321235865592d2cb108000c215460432d2c014623466023466123201020
468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b
21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a0540084009400c020d021bb10102435458b2054008
ba010000090100b30c010d011bb18002435258b2054008b80180b109401b
b901000002435258b2054008ba0180000901401bb901800002435258b205
4008b80200b109401bb2054008ba010000090100595959b9400000808855
b94000020063b8040088555a58b30c000d011bb30c000d01595959424242
42422d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2cb0022563b0206066b00225b820
00626023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b00343525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b00343525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12501885058b940
00020063b8040088545cb0194b525b1bb001592d0000000100000006f5c3
1890c89e5f0f3cf50009080000000000bbe31b2a00000000d30ee727fc8b
fd95056b08170000000800020001000000000001000005f1fdf1015e0466
fc8bfe51056b000100000000000000000000000000000a4e046600580466
000000000000046600000466000a0466009e0466005c0466006d046600c9
046600cd046600420466006f046600ac046600b60466009c046600e90466
003104660077046600390466009e04660039046600aa0466006f04660056
0466006d046600040466002d04660012046600000466006f046600000466
000004660000046600000466000004660000046600000466000004660000
0466000a0466ffd50466ffd50466003d0466003d0466003d0466003d0466
005c0466ffd9046600000466000004660000046600000466000004660000
04660000046600000466000004660000046600c90466003d0466003d0466
003d04660042046600000466001f04660000046600000466000004660000
04660000046600000466000004660000046600ac0466006f046600000466
009c046600000466ff0c046600e90466002d046600c20466000004660000
046600000466007704660077046600000466000004660000046600000466
0000046600000466000004660000046600390466ff9c0466001f0466009e
0466ffd90466ffd9046600aa0466000004660000046600000466006f0466
006f04660000046600560466005604660000046600000466000004660000
04660000046600000466000004660000046600000466006d046600000466
000004660000046600000466000004660000046600000466000004660000
046600000466000004660085046600a00466009e0466006d046600750466
00000466005e046600a0046600ac04660083046600b6046600ac0466005a
046600a00466005c046600a00466006d046600c9046600b60466003f0466
00a00466004204660025046600460466003b046600a40466000004660000
046600000466000004660000046600000466000004660000046600000466
00850466001f0466000004660029046600290466003d046600290466009e
0466fff20466006404660062046600000466000004660000046600000466
000004660000046600000466000004660075046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600ac046600ac0466006a
0466008304660000046600b6046600b6046600290466ff73046600ac0466
00ac04660070046600000466000004660000046600a004660000046600a0
046600000466000004660000046600000466000004660000046600000466
00000466005c0466ffb004660027046600a00466000004660000046600c9
046600000466000004660000046600b6046600b604660093046601210466
ff4a0466003f0466003f0466000004660000046600000466000004660000
04660000046600000466000004660000046600a004660000046600000466
000004660000046600000466000004660000046600000466000004660000
046600000466005004660050046600890466000004660000046600000466
000004660000046600000466000004660089046600890466008904660000
046600000466000004660000046600000466000004660000046600890466
008904660048046600480466000004660135046600520466ff0704660135
04660050046600e604660089046600520466ff9d04660089046600890466
00080466005e04660000046600000466005e046600c90466000004660000
046600c90466006204660000046600000466006204660039046600390466
000004660000046600000466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
04660000046601b4046602ac046601b00466000004660000046600ee0466
00fa0466019a046601850466003b0466010804660108046601ac046601b2
046601b20466012f046600cb046600cb046600c404660196046600ee0466
006804660039046600ee0466003904660120046601590466012004660159
0466008f0466009c0466008f0466009c04660073046601e1046600850466
00850466fffc0466fffc0466fffc046601020466018d0466018d0466012c
046601040466012c04660104046601590466012004660159046601200466
00a2046600e5046600a2046600e5046600a4046600b4046600b40466008d
0466006d0466000a0466009e046600e904660037046600c90466006f0466
006f04660032046600ac0466009c046600040466003104660077046600ae
04660039046600750466009e0466006f0466005604660000046600000466
00120466003f0466002b0466000a0466ff960466ff6d0466ff8104660000
0466ffaa0466ff3e046600000466ffbf04660050046600a0046600620466
003f0466006d046600810466009e04660089046600620466007304660089
046600b604660042046600a004660046046600910466005c0466002b0466
00a00466005c0466009e0466003f0466008a046600290466002904660037
046600560466002704660000046600290466002904660000046600000466
00000466000004660000046600000466000004660000046600000466ff6d
046600000466018d0466018d046600fa046600e3046600dd0466000a0466
009e0466009e046600e90466000c046600c90466fff60466006d04660077
046600000466009c0466001b046600310466006f04660039046600750466
009e0466005c046600560466003904660000046600120466007f04660065
046600540466004a04660023046600520466009e04660083046600540466
005e04660000046600e9046600040466005a0466006f0466000004660000
046600ac04660000046600b604660000046600000466fff2046600520466
0004046600000466007b046600040466003904660004046600850466007d
046600a0046600f204660017046600750466fffe04660085046600ae0466
0000046600b60466002104660031046600a00466005c046600a0046600a0
0466009e0466005e0466003b046600290466004604660098046600870466
005a0466004c0466002304660052046600a60466009c0466005404660056
04660000046600f2046600000466009e046600b604660000046600000466
00ac04660000046600830466000004660000046600000466005a04660000
04660000046600a0046600230466005c046600420466006d046600000466
00000466007904660040046601e1046600a004660000046601c104660102
04660009046600040466000c0466000c0466006a0466000a046600190466
0056046600330466006f0466007d0466007d0466005c0466002b04660037
046600e1046600dd046600250466002b0466005804660058046600580466
008704660093046600a40466002b046600b20466007b0466007504660077
046600640466005804660058046600580466008704660093046600a40466
002b046600b20466007b046600750466007704660064046600cd046600e3
046600f604660112046600d304660125046600ee04660100046600fc0466
00e9046600a6046600a6046600a604660158046600ee046600cd046600e3
046600f604660112046600d304660125046600ee04660100046600fc0466
00e9046600a6046600a6046600a604660158046600ee046600cd046600e3
046600f604660112046600d304660125046600ee04660100046600fc0466
00e904660014046600140466001404660014046600140466000004660054
0466008504660068046600930466005404660085046600850466007f0466
0089046600d1046600850466008504660075046600d50466003d0466000c
046600710466007b0466003d046600370466002b046600a0046600290466
00750466005204660028046601b0046601b004660118046601180466fff8
0466fff80466011804660118046600c9046600c90466013b046601290466
011a0466011a0466013b04660129046600c9046600c9046601ae0466000a
0466000a0466000a0466fff80466000a0466000a046600000466000a0466
000a0466000a0466000a04660000046600c9046600c904660000046600c9
0466fff8046600c9046600c904660000046600ac046600ac046600390466
0039046600390466fff80466003904660039046600000466003904660000
046600000466003904660000046600390466006d0466006d0466006c0466
ffbf0466ffcf0466006c0466ffbb0466006c046600000466000004660085
04660085046600850466fff8046600850466008504660000046600850466
008504660085046600850466000004660075046600750466000004660075
0466fff8046600750466007504660000046600ac046600ac0466005c0466
005c0466005c0466fff80466005c0466005c04660000046600480466ffed
04660000046600480466000004660048046600a0046600a00466006d0466
ffa60466ffc90466006d0466ffb10466006d0466003b046600000466003b
046600000466006204660038046600000466001404660014046600140466
001404660111046600c40466005c0466006a046600440466009b04660072
04660085046601db0466007b0466002e0466004e0466000e046600640466
001f046600210466002404660029046600a8046600140466003e0466002b
046600690466010804660000046600120466000004660000046600000466
000004660111046600cb046600cb046600fb046600fb0466003204660032
046600a8046600a8046600a8046600a804660014046600140466000a0466
003204660032046600000466000004660000046602330466000004660000
0466000004660000046601e80466000004660000046601e8046600000466
0000046601e80466000004660000046601e8046600000466000004660000
046601e80466000004660000046601e80466000004660000046601e80466
015204660000046600000466015204660000046600000466015204660000
046600000466015204660000046600000466000004660152046600000466
000004660152046600000466000004660152046600320466007704660077
04660077046600560466003f046600ac046600f704660155046601230466
01370466016c0466016c0466010b04660130046601550466014f0466015f
0466018e0466010d046601320466011004660155046601100466015f0466
012d046601280466012f046600fa0466010b046600fb046600f804660132
046600020466000204660000046600000466000004660000046600000466
0000046600cf046600cf04660000046600000466000004660000046601b3
046601b3046601b3046601b30466008e0466ff7204660160046601600466
017604660176046601d00466016004660160046601600466016004660173
04660173046600ec0466016e046601f1046600f1046600f1046600000466
00000466000004660000046600000466012d046600000466000004660000
04660000046600f2046600f204660085046600850466002a0466002a0466
ffa60466ffa6046601d0046600f10466016d046600f30466017104660171
046601b1046601b104660000046600000466008e046600000466ff720466
0000046600f1046600f1046600000466000004660176046600ca046600ca
046600c9046600c90466000004660000046600460466017a046600000466
01a7046601a70466000004660000046600cf046600cf04660171046601a7
046601a7046600e2046600000466000004660000046600000466016c0466
00de04660176046601760466000304660003046600030466002704660027
0466002704660040046600400466000304660003046600060466014b0466
014b0466013c0466013c04660157046601570466012e0466012e04660151
046601510466015704660157046601450466014504660151046601510466
011d0466011d0466014b0466014b0466013b0466013b0466012104660121
0466011e0466011e04660008046600080466000204660002046601dd0466
00000466008d0466008d0466008d0466008d046600b4046600b4046600b4
046600b4046600230466002304660024046600240466014b046600000466
0000046600e2046600000466009e04660020046600830466005c04660000
046600000466005a046600b60466003b0466006d0466ffcb046600420466
0004046601bb046600ac0466009c0466005a0466ffc80466003904660066
0466ffeb046600aa046600830466006f04660006046600560466002b0466
006d046600140466006f046600a7046600a4046600300466004f0466004f
0466007d0466007d0466003c0466003c0466000004660000046600000466
00000466000004660000046600000466000004660000046600000466ffd5
046600420466001e0466fff204660039046600020466fff70466004f0466
004f046600000466005a0466006704660032046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
000004660000046600a70466000004660077046600680466006f04660000
046600c904660000046600000466000004660000046600000466ffa60466
ffbd046600300466ffd0046601220466fffe04660000046600040466ffa6
046600b604660039046600000466ffff0466000a046600000466009e0466
000004660000046600000466006d046600000466006d0466000004660000
046600000466000004660000046600000466000004660032046600000466
006f0466000004660034046600000466000004660000046600000466009c
04660000046600e904660028046600320466003204660000046600000466
003104660000046600770466000004660000046600000466000004660000
04660000046600000466000004660000046600aa04660000046600000466
00000466006f046600000466000004660000046600000466005604660000
046600000466006d04660000046600000466ffff04660000046600000466
0004046600000466002d046600000466000004660000046600000466006f
04660000046600130466ff190466ffbd046600aa0466006f0466009c0466
006f04660083046600b8046600b404660000046600a0046600200466009e
0466006d0466006d0466002b0466005a046600a0046600b6046600ac0466
004a04660089046600420466008904660064046600a0046600cb0466003f
0466003f0466003b046600a4046600a40466009e046600960466002c0466
002a0466003c046600000466000004660000046600000466000004660000
046600000466000004660000046600000466007604660000046600000466
00000466000004660000046600320466005c0466000c046600000466ffcf
0466ffcf0466002c0466ffaf046600340466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
0000046600000466000004660000046600bb046600000466006d04660068
0466009f0466000004660075046600000466000004660000046600000466
0000046600cd046600a00466003f0466003c0466003c0466004e046600b6
046600a40466012f0466002a046600830466004804660083046600480466
006d046600270466004904660027046600440466001e0466004904660093
04660093046601e10466013e046600d1046601ac04660085046600460466
00a004660000046600000466ffbb0466006d046600000466006d04660000
046600000466000004660028046600250466000004660000046600500466
0050046600000466004d046600a004660000046600610466000004660000
046600000466000004660000046600000466000004660000046600000466
00b604660000046600ac04660135046600890466ffe40466001f0466ffee
046600190466001904660019046600160466001604660016046600000466
00000466005a04660000046600a004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
00000466009d0466005e0466009d04660062046600000466000004660000
046600000466feef0466ff780466feef0466000004660000046600b60466
000004660000046600000466ff820466003f0466000004660000046600a0
046600000466000004660000046600000466000004660042046600000466
002504660000046600000466000004660000046600a40466000004660000
0466000004660000046600000466002404660050046600ac046600530466
00890466002a0466002a046600a0046600b6046600a404660065046600ba
046600be046600d204660043046600850466006d046600a0046600a00466
00ba0466009e0466006d0466006d04660076046600760466004104660081
046600850466008504660065046600830466006d0466006d0466009e0466
004204660079046600a0046600a0046600a0046600ac0466008904660089
046600ac046600890466008904660089046600b604660017046600270466
00cd0466ffff0466005a0466005a0466005a0466ffba046600a0046600a0
0466005c0466005c04660043046600290466005e0466005e0466005e0466
00c9046600c9046600c904660061046600aa046600aa046600b60466007b
0466007b0466007b046600370466009d0466003f04660000046600490466
008404660042046600250466003b04660045046600a4046600a4046600bb
046600740466012204660122046601220466009e04660039046600ab0466
00650466009e046600a0046600330466003f046600a00466006d0466008f
046601220466002c0466002c0466002c0466001f0466001f0466001f0466
000d0466001904660037046600a6046600a60466ffc10466ffc104660036
0466fff60466001f046600470466007d046600aa04660048046600d20466
00a3046600ac046600f7046600c00466003904660031046600ae04660048
0466007d0466003f0466003f0466ffdd046600270466008b0466003f0466
003f046600a20466006b0466006b04660077046600910466003404660034
0466004d0466004204660025046600a404660085046600b60466005a0466
00e60466003104660098046600d2046600670466000d046600ce04660089
0466011a046600b00466011a0466013804660136046600dc046600ff0466
012c04660123046601160466015b046600cf0466010604660108046600d6
046601060466012804660128046600f404660102046600cd046601140466
01140466010e046600cc046601290466010e0466010e046601070466012a
0466012a0466011b0466013904660140046600e90466011e046601030466
0127046600f4046600f404660129046600c50466011e046600fa046600e9
046600eb046600f80466011b046600fc04660107046600da046600df0466
012c0466014a0466011e046600eb0466011b046600fc04660129046600da
046600df046600460466fecb0466006d0466ffc204660008046600080466
feca0466ff110466fef3046600240466ffa70466001f0466005e04660104
0466005e0466000a046600ac046600890466ffb60466000f0466000f0466
00a00466006d0466000004660018046600b6046600ac0466005a046600a0
046600a004660081046600b60466007b0466004204660046046600a40466
00850466006d0466006d04660075046600850466008504660076046600ac
046600ba0466007b046600a0046600850466012004660127046601190466
01150466012a04660107046601070466011b046601340466013104660121
04660139046601390466010004660137046601180466015f046600e90466
00e9046600a7046601340466011004660105046600e30466013304660118
046600cc046600d0046600fb0466011004660110046600da0466012d0466
012d0466012d0466014f0466010704660117046601170466012e04660110
0466010c046600bc0466010b046600a6046600d504660153046600910466
0196046600ee04660172046601d0046601d00466012f0466015904660089
046600d10466000204660002046601f10466000004660000046601f10466
00000466000004660000046601ae046601ae046601d0046601d004660160
0466016004660160046601600466015804660171046600da0466013d0466
012d046600e9046601540466014104660141046601410466014104660141
046600960466009604660096046600960466004304660043046600430466
00430466004304660043046600430466002f0466002f0466002f0466002f
0466002f0466002f04660025046600250466002504660025046600250466
001a0466001a0466001a0466001a0466001a0466001a0466004204660042
046600420466004204660042046600420466009604660096046600960466
009604660042046600420466004204660042046600420466004204660042
0466002f0466002f0466002f0466002f0466002f0466002f0466002f0466
002f0466002f0466002f0466002f04660026046600260466002604660026
046600260466002604660042046600420466004204660042046600420466
004204660096046600960466009604660096046600420466004204660042
046600420466004204660042046600260466002604660026046600260466
002604660026046600230466002304660023046600230466002304660023
0466002f0466002f0466002f0466002f0466002f0466002f0466004b0466
004b0466004b0466004b0466004b0466004b046600960466009604660096
046600960466004204660042046600420466004204660042046600420466
001a0466001a0466001a0466001a0466001a0466001a0466002404660024
046600240466002404660024046600240466002f0466002f0466002f0466
002f0466002f0466002f0466004e0466004e0466004e0466004e0466004e
0466004e0466009604660096046600960466009604660140046601400466
000004660000046600390466016404660164046601a7046601a70466016e
046600000466001804660000046600000466019a04660176046601760466
0176046601760466001e0466001e04660148046600000466000004660000
046600000466003c0466003c046601140466010e04660103046600ec0466
010e04660000046600000466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
0000046601b3046601b30466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
017304660173046600390466005c046600830466005c0466008304660053
0466fd1304660000046600cd04660039046600460466005a046600460466
005c0466009e0466006c0466009e0466009c0466000c046600320466ffa6
046600a0046600010466009e046600ba0466006f0466ff96046600430466
00d70466005c04660075046600870466003b0466009e046600830466ffba
046600320466fe6c0466fe120466fdcc0466fe640466fe600466fdf70466
fdcb0466fe5f0466fe720466fe6804660000046600000466000a0466fe6c
0466fe120466fdcc0466fe6e0466fe600466fdf70466fdcb0466fe5f0466
fdbe0466fd3f0466fd370466fdba0466fd370466fd360466fdb30466fdd6
0466fd780466fcdd0466fcdd0466fd770466fd790466fcdd0466fcdd0466
fd770466fd4f0466fd720466006f0466fd780466fcdd0466fcdd0466fd77
0466fd790466fcdd0466fcdd0466fd770466fda90466fd2c0466fd360466
fda90466fda90466fd2c0466fd360466fda80466fd910466fde604660000
046600000466fda90466fd4f0466fceb0466fd9f0466fd4f0466fceb0466
fdd50466fd8b0466fd930466fd360466fc8b0466fcd20466fd2c0466fd07
0466fd6104660000046600000466fd9f0466fd540466fceb0466fd9e0466
fd9f0466fd540466fceb0466fd9e0466fdc70466fd760466002b0466fd9f
0466fd540466fceb0466fd9e0466fd9f0466fd540466fceb0466fd9e0466
ffcf046600000466ffd9046600000466ffcf046600000466ffd904660000
046600000466000004660000046600000466000004660050046600000466
000004660000046600000466000004660000046600000466000004660000
046600000466000004660000046600270466000004660000046600140466
00000466001f046600190466000004660000046600000466000004660000
046600000466000004660000046600000466ffda04660000046600890466
000004660000046600000466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466ffff04660058
0466ffd30466000004660000046600000466000004660000046600000466
00000466000004660000046600000466ffe3046600000466000004660000
0466000004660000046600000466ffed0466000004660000046600000466
00000466000004660000046600320466ffcf046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
0000046600270466ffd90466000004660027046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
00000466000004660000046601b4046601210466008b046600100466009e
046600100466009e0466fff60466006d0466009c0466009c046600240466
00230466006f0466006f04660064046600390466005c0466005604660000
04660000046600120466001e04660065046600650466006e0466ffe70466
ffe7046600ac0466fff60466009c0466001b0466006f0466006f04660065
0466003b04660000046600000466ffd5046600000466003b046600000466
fff604660000046600a70466000004660000046600000466003904660000
0466000004660000046600000466000004660000046600e9046600000466
001004660012046600120466005a046600530466002b0466008f0466ffe8
0466006f04660042046600560466006d0466001b046600ae046600230466
00a004660042046600a60466fffe04660085046600b6046600b604660016
04660023046600a0046600a0046600640466005c0466009e0466005e0466
004204660042046600460466002b04660087046600870466009f0466fff1
0466fff10466fffe046600b604660021046600a0046600a0046600870466
0031046600ac04660000046600580466001f046600000466007604660000
0466fffe04660000046600bb0466000004660000046600000466005c0466
00000466000404660000046600000466003b04660029046600f204660000
0466004204660046046600460466006d0466005f0466003e046600930466
fff8046600a00466009e0466005404660085046600210466000004660000
046600000466000004660000046600000466000004660000046600000466
000004660000046600000000ffdc0000ff2504660085046600850466013e
046600000466019604660039046601530466005304660012046600020466
00a304660031046600520466005c0466002b046600000466004604660000
046600580466000004660056046600000466002d04660000046600420466
0032046600320466005c0466000504660000046600140466001404660014
04660014046600140466001404660014046600140466005a0466006c0466
0086046600840466001e04660043046600590466005a0466006c0466004e
046600be0466001e0466007d0466006e0466000004660000046600000466
01c4046601c4046601c4046601c404660000046600000466003604660009
046600000466000004660046046600540466000a046600500466fff60466
004b0466003c0466003f046600000466004a046600390466004604660000
0466005c046600520466005604660028046600320466fffe0466004b0466
007804660056046600000466005d0466005c04660052046600000466009e
046600630466008e0466ff72046600000466000004660000046600000466
000004660000046600000466ff99046600000466019c046601bc0466018f
046600000466009e0000ffdc0000fe510466000004660185046600000466
012c046600140466005b046601110466007a04660138046600000466fffe
046600000466fffe0000000004660155013e010f015501550155019c019c
00000000000000000000000000000000000000000000000001ea017a0000
0000000000f2ffa6002a00f2000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000089008900ac0089008900890089000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000008b00560080002e
004200360000019d0000000001e8019d0000000001e8019d01e8019d019d
00000000000001e8019d019d00000000000001e8019d019d019d019d019d
019d00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001e8019d01e80000000001e8
000000000000000001e8023301e80000019d0233019d0000019d0000019d
003d01850077008b00550064008b0089008b008b004f0055008b00e90059
0039008b009d00830064004600650046ffff0085008b00890050007a0064
008b0064006d008b003f00b30029000000390046019600ee00fe016800ae
01370057005a00a0004b005a00a0004b00a000a0004d004b00a0013b004d
007400a000a000a0005a0046005a0083000000b600a000b6005a00a000a0
00a0005a005a00a0007700df005a0014005c0041005a019a010800290029
0064005800580058005800580039006d002d002500000000000000000132
000001320000013200000132000001320000013200000132000001320000
013200000132000001320000013200000132000001320000013200000132
000001320000013200000132000001320000013200000132000001320000
018e0000018e0000018e0000018e0000018e0000018e0000018e0000018e
0000018e0000018e0000018e0000018e0000018e0000018e0000018e0000
018e0000018e0000018e0000018e0000018e0000018e0000018e0000018e
0000018e0000018e0000018e0000018e0000018e0000018e0000018e0000
018e0000018e0000018e0000018e0000018e0000018e0000018e0000018e
0000018e0000018e0000018e0000018e0000018e0000018e0000018e0000
018e0000018e0000018e0000018e0000018e0000018e0000018e0000018e
0000018e0000018e0000018e0000018e0000018e0000018e0000018e0000
018e0000018e0000018e0000018e0000018e0000018e0000018e0000018e
0000018e0000018e0000018e0000018e0000018e0000018e0000018e0000
018e0000018e0000018e0000018e0000018e0000018e0000018e0000018e
0000018e0000018e0000018e0000018e0000018e0000018e0000018e0000
018e0000018e0000018e0000018e0000018e0000018e0000018e0000018e
0000018e0000018e0000018e0000018e0000018e0000018e0000018e0000
018e0000018e0000018e0000029a000003680000042c000004f2000005de
0000069a0000069a0000073800000806000008060000089a0000090e0000
0a0600000aa200000b5600000c2c00000c2c00000cc600000dda00000e8a
00000f2000000f2000000f20000010560000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
113600001136000011360000113600001136000011360000113600001136
000011360000113600001136000011360000113600001136000011360000
1136000011360000113600001136000011360000113600001136000011be
000011be000011be0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c0000122c
0000122c0000122c0000122c0000122c0000122c0000122c0000122c0000
122c0000122c0000122c0000122c0000122c0000122c0000122c00010000
0b6d013b004e0076000700020010002f00b400000c81189f000300010000
002a01fe0000000300000000006400000000000300000001001000640000
000300000002000e00740000000300000003002600820000000300000004
001000640000000300000005001800a80000000300000006001000640000
000300000007007800c00000000300000008002a000e0000000300000009
00200138000000030000000b00560158000000030000000c002a01ae0000
00030000000d029a01d8000000030000000e006c04720001000000000000
003204de0001000000000001000805100001000000000002000705180001
0000000000030013051f0001000000000004000805100001000000000005
000c05320001000000000006000805100001000000000007003c053e0001
000000000008001504e500010000000000090010057a000100000000000b
002b058a000100000000000c001505b5000100000000000d014d05ca0001
00000000000e003607170003000104090000006400000003000104090001
001000640003000104090002000e00740003000104090003002600820003
000104090004001000640003000104090005001800a80003000104090006
001000640003000104090007007800c00003000104090008002a000e0003
00010409000900200138000300010409000b00560158000300010409000c
002a01ae000300010409000d029a01d8000300010409000e006c047200a9
002000320030003100360020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020007200690067006800740073002000720065007300650072
007600650064002e0043006f006e0073006f006c00610073005200650067
0075006c00610072004d006900630072006f0073006f00660074003a0020
0043006f006e0073006f006c0061007300560065007200730069006f006e
00200036002e003900360043006f006e0073006f006c0061007300200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002e004c007500630028006100730029002000640065
002000470072006f006f00740068007400740070003a002f002f00770077
0077002e006d006900630072006f0073006f00660074002e0063006f006d
002f007400790070006f006700720061007000680079002f006300740066
006f006e007400730068007400740070003a002f002f0066006f006e0074
00660061006200720069006b002e0063006f006d0059006f00750020006d
0061007900200075007300650020007400680069007300200066006f006e
00740020006100730020007000650072006d006900740074006500640020
006200790020007400680065002000450055004c004100200066006f0072
0020007400680065002000700072006f006400750063007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
007400200069007300200069006e0063006c007500640065006400200074
006f00200064006900730070006c0061007900200061006e006400200070
00720069006e007400200063006f006e00740065006e0074002e00200020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002e00680074
00740070003a002f002f007700770077002e006d006900630072006f0073
006f00660074002e0063006f006d002f007400790070006f006700720061
007000680079002f0066006f006e00740073002f00640065006600610075
006c0074002e0061007300700078a92032303136204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20726967687473207265736572
7665642e436f6e736f6c6173526567756c61724d6963726f736f66743a20
436f6e736f6c617356657273696f6e20362e3936436f6e736f6c61732069
7320612074726164656d61726b206f6620746865204d6963726f736f6674
2067726f7570206f6620636f6d70616e6965732e4c756328617329206465
2047726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d
2f7479706f6772617068792f6374666f6e7473687474703a2f2f666f6e74
66616272696b2e636f6d596f75206d617920757365207468697320666f6e
74206173207065726d6974746564206279207468652045554c4120666f72
207468652070726f6475637420696e207768696368207468697320666f6e
7420697320696e636c7564656420746f20646973706c617920616e642070
72696e7420636f6e74656e742e2020596f75206d6179206f6e6c79202869
2920656d626564207468697320666f6e7420696e20636f6e74656e742061
73207065726d69747465642062792074686520656d62656464696e672072
65737472696374696f6e7320696e636c7564656420696e20746869732066
6f6e743b20616e6420286969292074656d706f726172696c7920646f776e
6c6f6164207468697320666f6e7420746f2061207072696e746572206f72
206f74686572206f75747075742064657669636520746f2068656c702070
72696e7420636f6e74656e742e687474703a2f2f7777772e6d6963726f73
6f66742e636f6d2f7479706f6772617068792f666f6e74732f6465666175
6c742e617370780000>
<412002a1002d02a00055003f02a2000100c002a20001009f02a20001009f
02a20001007002a00001002f02a00001029c002d029b0055029a002d0299
005500200203b40918014a20b80202b40918014a20b80201b40918014a20
b80200b40918014a20b801ffb40918014a20b801feb40918014a20b801fd
b40918014a20b801fbb40918014a20b801fab40918014a20b801f9b40918
014a20b801f8b40918014a20b801f7b40918014a20b801f6b40918014a20
b801f5b40918014a20b801f4b40918014a20b801f3b40918014a20b801f2
b40918014a20b801f1b40918014a20b801f0b40918014a20b801efb40918
014a20b801eeb40918014a20b801edb40918014a20b801ecb40918014a20
b801ebb40918014a20b801eab40918014a20b801e9b40918014a20b801e8
b40918014a20b801e7b40918014a20b801e6b40918014a20b801e5b40918
014a20b801e4b40918014a20b801e3b40918014a20b801e2b40918014a20
b801e1b40918014a20b801e0b40918014a20b801dfb40918014a20b801de
b40918014a20b801ddb40918014a20b801dcb40918014a20b801dbb40918
014a20b801dab40918014a20b801d9b40918014a20b801d8b40918014a20
b801d7b40918014a20b801d6b40918014a20b801d5b40918014a20b801d4
b40918014a20b801d3b40918014a20b801d2b40918014a20b801d1b40918
014a20b801d0b40918014a20b801cfb40918014a20b801ceb40918014a20
b801cdb40918014a20b801ccb40918014a20b801cbb40918014a20b801ca
b40918014a20b801c9b40918014a20b801c8b40918014a20b801c7b40918
014a20b801c6b40918014a20b801c5b40918014a20b801c4b40918014a20
b801c3b40918014a20b801c2b40918014a20b801c1b40918014a20b801c0
b40918014a20b801bfb40918014a20b801beb40918014a20b801bdb40918
014a20b801bcb40918014a20b801bbb40918014a20b801bab40918014a20
b801b9b40918014a20b801b8b40918014a20b801b7b40918014a20b801b6
b40918014a20b801b5b40918014a20b801b4b40918014a20b801b3b40918
014a20b801b2b40918014a20b801b1b40918014a20b801b0b40918014a20
b801afb40918014a20b801adb40918014a20b801acb40918014a20b801ab
b40918014a20b801aab40918014a20b801a9b40918014a20b801a8b40918
014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20
b801a4b40918014a20b801a2b40918014a20b801a1b40918014a20b801a0
b40918014a20b8019fb40918014a20b8019db40918014a20b8019cb40918
014a20b8019bb40918014a20b8019ab40918014a20b80199b40918014a20
b80198b40918014a20b80197b40918014a20b80196b40918014a20b80195
b40918014a20b80194b40918014a20b80193b40918014a20b80192b40918
014a20b80191b40918014a20b80190b40918014a20b8018fb40918014a20
b8018eb40918014a20b8018db40918014a20b8018ab40918014a20b80189
b40918014a20b80188b40918014a20b80187b40918014a20b80186b40918
014a20b80185b40918014a20b80184b40918014a20b80183b40918014a20
b80181b40918014a20b8017fb40918014a20b8017eb40918014a20b8017d
b40918014a20b8017cb40918014a20b8017bb40918014a20b80179b40918
014a20b80178b40918014a20b80177b40918014a20b80176b40918014a20
b80174b40918014a20b80173b40918014a20b80172b40918014a20b8016f
b40918014a20b8016eb40918014a20b8016db40918014a20b8016cb40918
014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a20
b80168b40918014a20b80167b40918014a20b80166b40918014a20b80165
b40918014a20b80164b40918014a20b80163b40918014a20b80162b40918
014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a20
b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b8015b
b40918014a20b80159b40918014a20b80158b40918014a20b80157b40918
014a20b80156b40918014a20b80155b40918014a20b80154b40918014a20
b80152b40918014a20b80151b40918014a20b80150b40918014a20b8014f
b40918014a20b8014eb40918014a20b8014db40918014a20b8014ab40918
014a20b80149b40918014a20b80146b40918014a20b80142b40918014a20
b80141b40918014a20b80140b40918014a20b8013fb40918014a20b8013d
b40918014a20b8013bb40918014a20b80139b40918014a20b80138b40918
014a20b80137b40918014a20b80136b40918014a20b80135b40918014a20
b80134b40918014a20b80133b40918014a20b80132b40918014a20b80131
b40918014a20b80130b40918014a20b8012fb40918014a20b8012eb30918
014a41370286006402850055000002850001028300640284005500d00284
0001002f0284006f028400af0284000300000282000100f002820001002f
028200af0282000200af0281000100700281000102800064027f00550050
027f0080027f00020010027f0040027f0070027f0003027db2644155b802
7eb241ff1fb9027b027cb2641f0f412c027c003f027c006f027c000300af
027c00df027c00020010027c0001005f027a00df027a0002005f027900df
0279000200ef02780001009002780001006f027800010010027800010276
00640277005500100277002002774075027201411f6f03411f6e02411f69
2d6855672d6655652d6455632d6255613260552f603f60025f325e551f5a
bf5a02705ae05a02562d55553f5501542d53553f5301c053019f53019f53
01522d5155502d4f55704f012f4f019f4801704801c048016f4801404801
462d4555442d4355422d415540b8026eb2090f46b9026c026bb2321f40b8
026bb2090f46b9ffc00266b3090c46d0bb0273000100400271b331374640
b80271b21c2146b80203b21e221fb80202b21e221fb80201b21d281fb802
00b21d281fb801ffb21d281fb801feb21d281fb801fdb21d281fb801fcb2
1d281fb801fbb21c2b1fb801fab21c2b1fb801f9b21c2b1fb801f8b21c2b
1fb801f7b21c2b1fb801f6b21c2b1fb801f5b21c2b1fb801f4b21b2f1fb8
01f3b21b2f1fb801f2b21b2f1fb801f1b21b2f1fb801f0b21b2f1fb801ef
b21b2f1fb801eeb21b2f1fb801edb21b2f1fb801ecb21b2f1fb801ebb21b
2f1fb801eab21b2f1fb801e9b21b2f1fb801e8b21b2f1fb801e7b21b2f1f
b801e6b21b2f1fb801e5b21b2f1fb801e4b21b2f1fb801e3b21b2f1fb801
e2b21a381fb801e1b21a381fb801e0b21a381fb801dfb21a381fb801deb2
1a381fb801ddb21a381fb801dcb21a381fb801dbb21a381fb801dab21a38
1fb801d9b21a381fb801d8b21a381fb801d7b21a381fb801d6b21a381fb8
01d5b21a381fb801d4b21a381fb801d3b2193b1fb801d2b2193b1fb801d1
b2193b1fb801d0b2193b1fb801cfb2193b1fb801ceb2193b1fb801cdb219
3b1fb801ccb2193b1fb801cbb2193b1fb801cab2193b1fb801c9b2193b1f
b801c8b2193b1fb801c7b2193b1fb801c6b2193b1fb801c5b2193b1fb801
c4b2193b1fb801c3b2193b1fb801c2b2193b1fb801c1b2193b1fb801c0b2
193b1fb801bfb2193b1fb801beb2193b1fb801bdb2193b1fb801bcb2193b
1fb801bbb2193b1fb801bab2193b1fb801b9b2193b1fb801b8b218411fb8
01b7b218411fb801b6b218411fb801b5b218411fb801b4b218411fb801b3
b218411fb801b2b218411fb801b1b218411fb801b0b218411fb801afb218
411fb801aeb218411fb801adb218411fb801acb218411fb801abb218411f
b801aab218411fb801a9b218411fb801a8b218411fb801a7b218411fb801
a6b218411fb801a5b218411fb801a4b218411fb801a3b218411fb801a2b2
18411fb801a1b218411fb801a0b218411fb8019fb218411fb8019eb21841
1fb8019db218411fb8019cb218411fb8019bb218411fb8019ab218411fb8
0199b218411fb80198b218411fb80197b218411fb80196b218411fb80195
b218411fb80194b218411fb80193b218411fb80192b218411fb80191b218
411fb80190b218411fb8018fb218411fb8018eb218411fb8018db218411f
b8018cb218411fb8018bb218411fb8018ab217471fb80189b217471fb801
88b217471fb80187b217471fb80186b217471fb80185b217471fb80184b2
17471fb80183b217471fb80182b217471fb80181b217471fb80180b21747
1fb8017fb217471fb8017eb217471fb8017db217471fb8017cb217471fb8
017bb217471fb8017ab217471fb80179b217471fb80178b217471fb80177
b217471fb80176b217471fb80175b217471fb80174b217471fb80173b217
471fb80172b217471fb80171b217471fb80170b217471fb8016fb217471f
b8016eb217471fb8016db217471fb8016cb217471fb8016bb217471fb801
6ab217471fb80169b217471fb80168b217471fb80167b217471fb80166b2
17471fb80165b217471fb80164b217471fb80163b217471fb80162b21747
1fb80161b217471fb80160b217471fb8015fb217471fb8015eb217471fb8
015db217471fb8015cb217471fb8015bb217471fb8015ab217471fb80159
b217471fb80158b216551fb80157b216551fb80156b216551fb80155b216
551fb80154b216551fb80153b216551fb80152b216551fb80151b216551f
b80150b216551fb8014fb216551fb8014eb216551fb8014db216551fb801
4cb216551fb8014bb216551fb8014ab216551fb80149b216551fb80148b2
16551fb80147b216551fb80146b216551fb80145b216551fb80144b21655
1fb80143b216551fb80142b216551fb80141b216551fb80140b216551fb8
013fb216551fb8013eb216551fb8013db216551fb8013cb216551fb8013b
b216551fb8013ab216551fb80139b216551fb80138b215621fb80137b215
621fb80136b215621fb80135b215621fb80134b215621fb80133b215501f
b80132b215501fb80131b215621fb80130b215621fb8012fb215621fb801
2eb215621fb8012db214221fb8012cb214221fb8012bb213251fb8012ab2
13251fb80129b2122b1fb80128b2122b1fb80127b2122b1fb80126b2122b
1fb80125b2122b1fb80124b2122b1fb80123b2122b1fb80122b2122b1fb8
0121b2122b1fb80120b211351fb8011fb211351fb8011eb211351fb8011d
b210441fb8011cb210441fb8011bb210441fb8011ab210441fb80119b210
441fb80118b210441fb80117b210441fb80116b210441fb80115b210441f
b80114b210441fb80113b210441fb80112b210441fb80111b210441fb801
10b210441fb8010fb210441fb8010eb210441fb8010db210441fb8010cb2
0f4b1fb8010bb20f4b1fb8010ab20f4b1fb80109b20f4b1fb80108b20f4b
1fb80107b20f4b1fb80106b20f4b1fb80105b20f4b1fb80104b20f4b1fb8
0103b20f4b1fb80102b20f4b1fb80101b20f4b1fb8010040ff0f4b1fff0f
4b1ffe0f4b1ffd0f4b1ffc0f4b1ffb0f4b1ffa0f4b1ff90f4b1ff80f4b1f
f70f4b1ff60f4b1ff50f4b1ff40f4b1ff30f4b1ff20f4b1ff10f4b1ff00f
4b1fef0f4b1fee0f4b1fed0f4b1fec0f4b1feb0f4b1fea0f4b1fe90f4b1f
e80f4b1fe70f4b1fe60f4b1fe50f4b1fe40f4b1fe30f4b1fe20f4b1fe10f
4b1fe00f4b1fdf0f4b1fde0f4b1fdd0f4b1fdc0f4b1fdb0f4b1fda0f4b1f
d90f4b1fd80f4b1fd70f4b1fd60f4b1fd50e521fd40e521fd30e521fd20e
521fd10e521fd00e521fcf0e521fce0e521fcd0e521fcc0e521fcb0e521f
ca0e521fc90e521fc80e521fc70e521fc60e521fc50e521fc40e521fc30e
521fc20e521fc10e521f4098c00e521fbf0e521fbe0e521fbd0e521fbc0e
521fbb0e521fba0e521fb90e521fb80e521fb70e521fb60e521fb50e521f
b40e521fb30e521fb20e521fb10d621fb00d621faf0d621fae0d621fad0d
621fac0d621fab0d501faa0d621fa90d621fa80d621fa70d621fa60d621f
a50d621fa40d621fa30d621fa20d621fa10d621fa00d621f9f0d621f9e0d
621f9d0d621f9c0d621f9b0d621fb8028840660d211f9a0c6f1f990c6f1f
980c6f1f970c6f1f960c6f1f950c6f1f940c6f1f930c6f1f920c6f1f910c
6f1f900c6f1f8f0c6f1f8e0b8a1f8d0b8a1f8c0b8a1f101a01701a801a02
70198019022f183f184f18031f172f173f17039f17af170240171b1f4685
03bd0100010000050001019000542b4bb807ff524bb008505bb00188b025
53b00188b040515ab00688b000555a5b58b101018e59b101024354b0114b
515a58b101018e59858d8d001d424bb01d5358b203a0a01d42594bb08053
58b20340401d42594bb0ff5358b20300001d42592b58400f70148014d014
e01404801301a01001b8ffc0b3102c3046b8ffc04022101f2246700f01bf
0f018f0e9f0eaf0e03af0ebf0e02bf0ecf0edf0e03400e3e42462b737475
73752b2b7373731b59012b737574737374002b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b002b2b732b2b2b2b2b2b2b737373747473732b2b73747475
2b742b73742b732b2b2b2b2b2b2b2b732b7373737373737373742b2b2b73
742b737373737473732b732bb1000243545841ff02030064020200640201
00640200006401ff006401fe006401fd006401fb006401fa006401f90064
01f8006401f7006401f6006401f5006401f4006401f3006401f2006401f1
006401f0006401ef006401ee006401ed006401ec006401eb006401ea0064
01e9006401e8006401e7006401e6006401e5006401e4006401e3006401e2
006401e1006401e0006401df006401de006401dd006401dc006401db0064
01da006401d9006401d8006401d7006401d6006401d5006401d4006401d3
006401d2006401d1006401d0006401cf006401ce006401cd006401cc0064
01cb006401ca006401c9006401c8006401c7006401c6006401c5006401c4
006401c3006401c2006401c1006401c0006401bf006401be006401bd0064
01bc006401bb006401ba006401b9006401b8006401b7006401b6006401b5
006401b4006401b3006401b2006401b1006401b0006401af006401ad0064
01ac006401ab006401aa006401a9006401a8006401a7006401a6006401a5
006401a4006401a2006401a1006401a00064019f0064019d0064019c0064
019b0064019a006401990064019800640197006401960064019500640194
006401930064019200640191006401900064018f0064018e0064018d0064
018a00640189006401880064018700640186006401850064018400640183
006401810064017f0064017e0064017d0064017c417d0064017b00640179
0064017800640177006401760064017400640173006401720064016f0064
016e0064016d0064016c0064016b0064016a006401690064016800640167
006401660064016500640164006401630064016200640161006401600064
015f0064015e0064015d0064015c0064015b006401590064015800640157
0064015600640155006401540064015200640151006401500064014f0064
014e0064014d0064014a0064014900640146006401420064014100640140
0064013f0064013d0064013b006401390064013800640137006401360064
013500640134006401330064013200640131006401300064012f0064012e
00642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7373737474
752b180000>
[4653 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

2 0 3 <> VAAAAA+Consolas AddT42Char 
2 4406 345 <000100eefeaa02d101420019003ab0852b58b900140202b5000a00cf190f
b8012bb10651003fed2fed012fc6e131301bb61900cf6c19060fb8012bb2
6c065100183f2b2f2b30315917163e0235342e0235343e0233321e021514
0e0223ee3360492c1d241d102133232341311d3d79b578cd02162b40292a
342c322a152e26181d3c5a3d53997646>VAAAAA+Consolas AddT42Char 
2 4542 348 <00010185ffee02d1013b0013002cb0852b58bc00050203000f0000012cb1
0a52003fed012fe131301bb10a00b8012cb26c0a5200183f2b3031590132
1e0215140e0223222e0235343e02022b223d2d1a1a2d3d22233c2d1a1a2d
3c013b1a2e3d23223c2d1a1a2d3c22233d2e1a00>VAAAAA+Consolas AddT42Char 
2 306 23 <0001005600000410051b00070036b0852b58b10002b801a6400905030104
e506410343003f3fed32012fc6f1c631301b4009010604e56c0641034300
183f3f2b3230315901211123112135210410fe7db4fe7d03ba0483fb7d04
8398>VAAAAA+Consolas AddT42Char 
2 398 131 <00020085ffee03c103fe0020002f0084b0852b58b4151509011fb801b0b2
0d2127b801ca400f09300ccc012000220122221a205115b8010240091411
f91a502cf60452003fed3ffdd6ed3f12392f5d1239ed0110d6e1d4c4e139
11392f31301b400d220ccc6c012022221a20511415b80102400e6c141a11
f96c1a50042cf66c045200183f2b3f2bc62b3f12392f12392b3031592127
060623222e02353436333335342623220607353e0333321e021511032322
0e0215141e023332363703250452a95d567a4f25e1dcd0727555a5582151
5a62325b926536afdd415e3c1d1228402e3c9b568751482c4d683d97ab58
596b26239d0c17120b28527c54fd4c01c91a30432a1d352918494f00>VAAAAA+Consolas AddT42Char 
2 666 132 <000200a0fff403fa0585001300260056b0852b58b10b1fbb01af00080000
01b340101408270c0519fd0f50095322d3080552003f33ed3f3fed123901
10d6d4e110f1c431301b40110c050f19fd6c0f5009530522d36c08055200
183f332b3f3f2b123930315901140e022322262711331107363633321e02
07342e0223220e020711161633323e0203fa457fb67259ba5bae084bab62
5682582cb217324e36214449512e336a303c6d533102087dc58949222505
4afe7bba65534883b97a4f845e351531513cfe19141726599300>VAAAAA+Consolas AddT42Char 
2 872 133 <0001009efff203ac03fa001d0068b0852b58b20f0017b801b7b2061e0eb8
010940097f0f010f12f90b5000b80107b7701d011d1afa0352003ffdd65d
ed3ffdd65ded0110d6e1d4c431301bb10f0eb80109400a6c0f0b12f96c0b
501d00b80107b76c1d031afa6c035200183f2bc62b3f2bc62b3031592506
0623220035343e023332161715262623220e021514163332363703ac448f
4ceefeff4a86ba704e883e41874843775a34b19d47853e251a190102f877
c28a4b1619a6221f33608a57b6b52020>VAAAAA+Consolas AddT42Char 
2 1068 134 <0002006dffee03c1058500140021005cb0852b58b10c0bb801b0b2081b15
b801b340110022080d0518fa10520b510a531ff50550003fed3f3f3fed12
39390110d6e1d4c4e13931301b4013080d051018fa6c10520b510a53051f
f56c055000183f2b3f3f3f2b12393930315913343e023332161711331123
27060623222e02371416333236371126262322066d4681b56f305d2daf9c
0649aa635683572cb26b624293512b68338e9f01e180c789470c0d01a6fa
7bbe6a664883b87bb6b3767401d21415b800>VAAAAA+Consolas AddT42Char 
2 1266 135 <00020075ffee03f003fe001e0029006eb0852b58b30c0c1500b801b6b31f
152904b801b74015152a1fcd8f040104042a24d11a500dd50c07f6105200
3ffdd6ed3fed12392f5ded0110d6f1c410dde111392f31301b4018041fcd
6c04042a1a24d16c1a500c0dd56c0c1007f66c105200183f2bc62b3f2b12
392f2b3031590114060721141633323e023715060623222e0235343e0233
321e0207362e0223220e020703f00202fd3faca22c58524b2047b36081ba
77393d75aa6c69a26f39b50320436442395e442a05022b2532169aa5070c
0f098f14194685c17a6abd8f544279ad52436f502d2c50704300>VAAAAA+Consolas AddT42Char 
2 1502 136 <000200000000041b0591001300140071b0852b58b10508b801b2401b0e0b
0b0c0700160c150e05f60b0f0808110a13fb0002f611540a51003f3ffdd6
ed1112392f3933ed320110c610d6ce12392fc4f1c531301b40171302110e
0805f66c0b0f1108080a001102f66c11540a5100183f3f2b3212392f1239
332b32111239303159012623221515211521112311213521351021321701
041b8963eb01b8fe48b1febd014301a2687efbe504e31df6b091fd3702c9
91a6019118fe7300>VAAAAA+Consolas AddT42Char 
2 1690 138 <000100a0000003c7058500180050b0852b58b10f0bbb01af000c000001af
400f010c19100b05fb15500e530b510051003f3f3f3fed12390110d6d4e1
10f1c431301b400e100b1505fb6c15500e530b51005100183f3f3f3f2b12
39303159212311342623220e02071123113311073e033332161503c7ae57
51233d424e33aeae06294f4f522c96a402817473132f503cfd660585fe67
9e31432a12b7b800>VAAAAA+Consolas AddT42Char 
2 1848 139 <000200ac000003d105910009001d006eb0852b58bc000f01fd0019000401
b1400e090109010906071e0409f607510ab80128400a14401014481400f5
034f003fedde2bed3fed320110d6cd39392f2f10e1d4e131301b40090407
09f66c0751140ab80128400a6c1403400300f56c034f00183f2b1a10ce2b
3f2b323031590121352111211521352113321e0215140e0223222e023534
3e0201f6fed701d9012bfcdb014a3d1d3225151525321d1d322515152532
035c90fca5919105001526311d1c3226151526321c1d31261500>VAAAAA+Consolas AddT42Char 
2 2054 141 <000100b6000004270585000a0062b0852b58b9000801ecb30909000abe01
de0007000301af0004000001f1401001040b094f020a0703040553045100
51003f3f3f1217393f0110d6d4e110f1c5e012392fe131301b400d094f02
0a07030405530451005100183f3f3f1217393f3031592123011123113311
0133010427effe2caeae01c3e6fe29021afde60585fc9c01cbfe3100>VAAAAA+Consolas AddT42Char 
2 2202 142 <000100ac000003d1058500090048b0852b58b9000401b140110901090109
06070a0409f6075100d50353003fed3fed320110d6cd39392f2f10e13130
1b400d040709f66c07510300d56c035300183f2b3f2b3230315901213521
11211521352101f6fed701d9012bfcdb014a04f68ffb0c919100>VAAAAA+Consolas AddT42Char 
2 2318 143 <0001005a0000040c03fe002d0076b0852b58b11d18b801afb21a0d01b801
afb22d250bb801af40170d0d2e2f06f62a5013f622501d251a1b4f1a510d
510051003f3f3f3f1239393fed3fed111201392ff139d4e110d4e1393130
1b40172a06f66c2a502213f66c22501d251a1b4f1a510d51005100183f3f
3f3f1239393f2b3f2b3031592111342e0223220e0207112311342e022322
0e020711231133173e03333216153e0333321111036c070f17111422272f
209f070f18111220273021a085081a31343b245154182e35402abd02d12f
3c230e18365941fd7b02be3744260e14345a46fd7b03ecbf395031176a6f
3451371dfeddfd25>VAAAAA+Consolas AddT42Char 
2 2566 144 <000100a0000003c703fe00170050b0852b58b10216bb01af0017000b01af
400f0c1718020017510b5110fb0750004f003f3fed3f3f12390110d6d4e1
10e13931301b400e020017510b510710fb6c0750004f00183f3f2b3f3f12
393031591333173e0333321615112311342623220e02071123a09b072c52
4f522c9b9fae5857203d424d30ae03eca234452a11b7b8fd710281767113
2f503cfd6600>VAAAAA+Consolas AddT42Char 
2 2722 145 <0002005cffee040a03fe001300270040b0852b58bc000001b30014001e01
b3400a0a2819f90f5023f80552003fed3fed0110d6e1d4e131301b400c0f
19f96c0f500523f86c055200183f2b3f2b30315901140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e02040a427cb2716cab
773f427cb2716cab773fb2294c6d434e6f4721294c6c444e6f472101fe75
c38b4d4382c07d75c18b4d4381c0845d8b5d2f3d66874a5d8c5d2f3d6687
>VAAAAA+Consolas AddT42Char 
2 2902 146 <000200a0fe6603fa03fe001400250062b0852b58b30d0a2008b801afb20a
2600b801b3401115080d260c1afd10500c4f095523d30552003fed3f3f3f
ed11123939012fe110d6f1c5123931301b4014080d260c101afd6c10500c
4f09550523d36c055200183f2b3f3f3f2b1112393930315901140e022322
26271123113317363633321e0207342e0223220e020711161633323603fa
4b84b469305f31ae9b0b4baa635682582cb217324e36214449512e306a33
8da0020886c884420a0cfe5c0586a867534883b97a4f845e351531513cfe
191417bf>VAAAAA+Consolas AddT42Char 
2 3116 148 <000100c90000040803fe00130056b0852b58b10212bb01b10013000801b1
4010091314021108080013510cfb0550004f003f3fed3f12392f39390110
d6d4e110e13931301b400f02110808001351050cfb6c0550004f00183f3f
2b3f12392f393930315913331736363332160723362623220e02071123c9
9f0559ad589ca106b003535023474b5430b003ecb96b60cac78477193756
3dfd7b00>VAAAAA+Consolas AddT42Char 
2 3270 149 <000100b6ffee03bb03fe0035007db0852b58b9002c01b3b51b241b240a00
b801b5b3110a3623ba01000024ffc0400c1219482427f6112c0720500ab8
0105400a9f0baf0b020b0ef80752003ffdd65ded3f123939fdd62bed0110
d6d4e11139392f2fe131301b401323242027f66c112c0720500a0b070ef8
6c075200183f2b32393f1239392b323930315901140e0423222627351616
33323635342e02272e0335343e023332161715262623220e0215141e0217
1e0303bb243e525d622f66ab5258ae567d781332695b44735430275ea078
3b904e5293364159371815396652597a4c2101123554412e1e0e1214a019
1a443f1b2b272a1b1433465e402a6456390d109b141314232f1b1b2c2929
181a39465800>VAAAAA+Consolas AddT42Char 
2 3546 150 <0001003ffff203c9052d00170060b0852b58b1100db801af40160a070708
170f08180710f70c0a0d4f00fb1714f80352003ffdd6ed3f33cded320110
d6d4c4123910c4f1c531301b4015070d10f76c0c400a0d4f1700fb6c1703
14f86c035200183f2bc62b3f331acd2b3230315925060623222635112135
211137112115211114163332363703c93b7e41bdbafee70119ae01c3fe3d
737030723e0e0f0dabb1020c9201142dfebf92fe026c6b0f1000>VAAAAA+Consolas AddT42Char 
2 3722 151 <000100a0ffee03c703ec0016004eb0852b58b10200bb01af0014000d01af
400e0a170200154f0c4f0ffa07520051003f3fed3f3f12390110d6e1d4e1
3931301b400e0200154f0c4f070ffa6c0752005100183f3f2b3f3f123930
31592123270e03232226351133111433323e0237113303c79c062d515051
2d9b9eaeae203d434d30aea234452a11b6b80290fd7ee7132f503d029a00
>VAAAAA+Consolas AddT42Char 
2 3872 154 <000100460000042903ec000b00f9b0852b58b12308b8ffe8401e23230220
2301000d03040c090a0706090a4f0707064f0303045101010051003f322f
3f332f3f332f3f33012f332f3310c63210c6324b5258b40201060a030f1b
400c0201060a030a020106235201102b870ec4107d8708c45900384b5258
b405010609040f1b400c050106090409050106235201102b870ec4107d87
08c4594b5258b408000709040f1b400c080007090409080007235200102b
870ec4107d8708c45900384b5258b40b00070a030f1b400c0b00070a030a
0b0007235200102b870ec4107d8708c45931301b400f090a4f0707064f03
0304510101005100183f332f3f332f3f332f3f3330315921230101230101
33010133010429e7fef1fef4e10185fe8ddf01080103d7fe87017ffe8101
f801f4fe7e0182fe0800>VAAAAA+Consolas AddT42Char 
2 4182 155 <0001003bfe60041d03ec00180088b0852b58400d14131800201209011616
191a15b8ffe0b5161514125109b80103400f0a0dff013004010656131414
18004f003f32322f333f393938fdd6ed3f1239393811120139192f3318c4
331acd32cd3231301bb616151412510a09b8010340116c0a060dff6c0401
00065613141418004f00183f33332f333f1239392bc62b3f123939303159
01010e032322262735161633323e0237013313173713041dfeaa357186a0
631a2a1916341d30534a4420fe6fc6fe333aeb03ecfc7e89c67f3c02029e
03051c3f644703ecfd689ca00294>VAAAAA+Consolas AddT42Char 
2 0 0 <000400580000040e051b00030007001f00310099b0852b58b900230199b2
2d0f0db80134b41010081a07be0132000200130140000800010133401004
020d9810102819991a069703410f20b8011db42804960143003ffddefdce
3ffddeed12392fed012fdde1d6e110f1c611392fe1c5d4e131301b401510
0d986c1010281a19996c1a0306976c03410f2820b8011d40096c28400104
966c014300183f2b1ace2bce3f2bce2b12392f2b30315901112111011121
1101140e0223072327333235342e0223233533321e0201321615140e0223
222e0235343e02040efc4a0358fd04026b2042674804640672902a4c6b40
232969996531feb825310d172012121f170e0e171f051bfae5051bfb4104
62fb9e02e82d5541279efc832d48331b64335167fdeb3325121f170e0e17
1f121220180e>VAAAAA+Consolas AddT42Char 
VAAAAA+Consolas /CharStrings get begin
/space 3 def
/comma 345 def
/period 348 def
/T 23 def
/a 131 def
/b 132 def
/c 133 def
/d 134 def
/e 135 def
/f 136 def
/h 138 def
/i 139 def
/k 141 def
/l 142 def
/m 143 def
/n 144 def
/o 145 def
/p 146 def
/r 148 def
/s 149 def
/t 150 def
/u 151 def
/x 154 def
/y 155 def
end
VAAAAA+Consolas /Encoding get
dup 32 /space put
dup 44 /comma put
dup 46 /period put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/FIPHUY+Consolas /VAAAAA+Consolas findfont ct_VMDictPut
/FIPHUY+Consolas*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 37{/.notdef}rp /T 
12{/.notdef}rp /a /b /c /d /e /f /.notdef 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u 2{/.notdef}rp /x 
/y 134{/.notdef}rp]
FIPHUY+Consolas nf
FIPHUY+Consolas*1 [13.2 0 0 -13.2 0 0 ]msf
47.975 680.75 mo
(To perform bulk experiments, paste your excel data here.)sh
34.775 742.625 mo
577.625 742.625 li
577.625 788.825 li
34.775 788.825 li
cp
.872679 .197696 .561242 .0273136 cmyk
f
35.1875 743.037 mo
577.212 743.037 li
577.212 788.412 li
35.1875 788.412 li
cp
@
0 0 0 0 cmyk
%ADOBeginSubsetFont: ABAAAA+FontAwesome Initial
ct_T42Dict begin
0 -0.141 1.285 0.855
 256 array 0 1 255 {1 index exch /.notdef put} for  /ABAAAA+FontAwesome
Type42DictBegin
[<000100000008000800080008676c796657b4716200001b6c0000014c6865
61641889e52d0000008c00000036686865610f030ab5000000c400000024
686d747845791885000000e800000af06c6f63610002d90400000bd80000
0b106d617870032c021c000016e8000000206e616d65af7b642c00001708
000004626764697200000000000000000000000000010000000401cb26ed
a2965f0f3cf5080b070000000000d433cd3200000000d433cd32ffffff00
09010600000000080002000100000000000100000600ff0000000900ffff
ffff09010001000000000000000000000000000002b50380007000000000
0255000001c0000007000000070000000700000007000000070000000700
00000700000007000000070000000700005d060000000680000007000000
070000000680000006800000050000000780000006800000070000000700
0000070000790580006e0680000006800000060000000700000006000000
058000000680001a06000000060000000780003206800000060000000600
000006000000060000000600000006000000070000000480000007000040
068000000300000004800000068000000580000007000000060000000780
00000680000a050000000680000007800000068000000580000004000000
070000000600000007000000070000000700000007000000070000000700
000007000000070000000780000006000000040000000600000004000000
0700000006800000068000000700000004000000070000000680007a0580
00000600000006000000068000000700000004000000060200010500009a
0500005a0600000006000000060000000600000006000000060000000600
000006000000060000000600000006000040060000000680003506800035
07000000060000000600000d05800000058000000680007a060000000600
000007000000058000000700000007000000070000100580000006800000
0700000007000000060000000700005a0700005a07800000068000000680
000007800000030000400700000008000000060000000600000007000000
070000000780000007000000060000000600000003800000070000000680
000006000000048000000700000006000000068000000600000006800000
06000000058000000580000005000000060000000680002c0400005f0600
000006800000078000000580000006000000070000000700004006000002
070000000700000006000000060000000600000006000000060000000600
000006000000068000150700000005800005070000000600000007800000
068000100780000006800073070000010700000005800004060000000600
000006000000070000000700000f0700000006000000068000000680001b
070000400600000006000000060000000900000007800000040000000400
000002800040028000000680000004000000040000000400000007000000
060000000600000007000028070000000700000007000000038000010700
000006800000070000000400000007000000078000000780000005800000
058000000700000007000040078000000580000006000000058000000580
00000780004007000000078000000680004006000000060000000400002d
0400000d0480004d0480004d0280002d0280000d0480004d0480004d0780
000007800000048000000300000006000000068000000680000007000040
060000000700000006800000068000000780000007000000070000000600
00000600000006000000078000000780000007000040070000400680000d
0780002d0700000006800002058000020680000004000000068000000400
006002800000028000620600000506000005078000010680000004800000
0580000d0500000006800000058000030680002407000000060000000600
00000600000006000000058000000700000c070000000480000006000000
058000000180000006000000060000000700003606000000058000000400
000304000003060000000600000006000000060000000600000006000000
060000000600000004000000040000000400003403820000040300040500
000007000000050000380600000006000000068000220680002207000022
0700002206000022060000220680000006800000060000000600001b0580
00050600000007000000070000400600000b060000000600000006000000
058000000600000004000044060000000300000303000003070000400700
00000580000006800000058000000600000b06000000060000000500002c
060000000500000004000000060000000700002c06000000070000400680
00200780ffff070000000600000005800000050000150600000006000000
060000000600000006800000060000000480000005800000088000000680
000006000000070000000700000008000000090000000600006d06000000
0700000006000000060000000780000006000000080000000600000007f6
002906000000060000000600000007000000060000000500004006800000
030000400700000009000000080000000600000007000000060000000700
001008000000080000000600002006000000040000000900000006000000
060000000600000006000000060000000600000006000000060000000600
000006000000060000270700000008000000070000000700002007000013
070000000600000007000044060000000500003907000012080000000700
00000700000006000000060000000700003e050000180600000006000000
060000000700000007000000070000000700000007000000070000190700
006406000059080000000800002a07000000060000090700002709000000
09000000090000000900000009000000090000000800000e0800000e0580
000006000000060000000700000007000000070000000800000007000000
080000000700000006000000080000000800000009000000060000000800
00000500000b080000000600000006000000060000000800000006000000
060000000800000008000000060000000800000008000000068000000680
000008000000080000130600000009000000060000000700000005000002
060000000500000006000002070000000700000207800001080000060600
000005000002080000040500000005000000070000000700000006000000
050000000600000007000000080000000800000008000000060000000600
000006000000070000000600000008f80054090000000700000009000000
090000000900000009000000090000000500000004000000080000000900
000006000000060000000900000009000000070000000900000006000000
060000000600000006000000060000000600000007000000070000000800
000008000000070000000600000007b50000070000000700000008000040
0700000009000000050000660600000006b8000009000000070000000700
000007000002070000000700000008000000070000160600000e0700001d
070000000700000007000000070000000700000004000000070000250800
000007000000070000000700000004000000070000520600000006000000
070000000700004509000000070000000700002007000000090000000700
000009000000060000240600000006000000060000000600000007000000
08000000070000210600006b040000280600000007000003070000000600
000007000000070000000600004406000000058000270900000305800000
088000000700000009000003070000000600000005ff0025068000010700
00000500000006000000060000000680000f060000000900000006000000
068000000700000006000000060000250900000007000000070000000600
001506800000068000000800000008000000070000000700000006000000
0500000008000000080000000700001d0900000007000000040000000400
000004000000040000000400000007800000070000000600000107000000
070000000800000007000000070000000700000007020000060000000600
00000880003007000025060000000680002f070000000700000007800026
070000000000000000000000000000000000000000000000000000000000
0000000000000000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000002c0000002c0000002c0000002c
0000002c0000002c0000002c0000002c0000002c0000002c0000002c0000
002c0000002c0000002c0000002c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0000014c0000014c0000014c0000014c
0000014c0000014c0000014c0000014c0000014c0000014c0000014c0000
014c0000014c0000014c0000014c0001000002c302190027000000000002
000000010001000000400000000000000000001801260001000000000000
002f00000001000000000001000b002f00010000000000020007003a0001
000000000003001100410001000000000004000b00520001000000000005
0012005d0001000000000006000b006f00010000000000070051007a0001
000000000008000c00cb0001000000000009000a00d7000100000000000b
001500e1000100000000000e001e00f60003000104090000005e01140003
000104090001001601720003000104090002000e01880003000104090003
002201960003000104090004001601b80003000104090005002401ce0003
000104090006001601f2000300010409000700a202080003000104090008
001802aa0003000104090009001402c2000300010409000b002a02d60003
00010409000e003c0300436f7079726967687420446176652047616e6479
20323031362e20416c6c207269676874732072657365727665642e466f6e
74417765736f6d65526567756c6172464f4e544c41423a4f54464558504f
5254466f6e74417765736f6d6556657273696f6e20342e372e3020323031
36466f6e74417765736f6d65506c6561736520726566657220746f207468
6520436f707972696768742073656374696f6e20666f722074686520666f
6e742074726164656d61726b206174747269627574696f6e206e6f746963
65732e466f727420417765736f6d65446176652047616e6479687474703a
2f2f666f6e74617765736f6d652e696f687474703a2f2f666f6e74617765
736f6d652e696f2f6c6963656e73652f0043006f00700079007200690067
0068007400200044006100760065002000470061006e0064007900200032
003000310036002e00200041006c006c0020007200690067006800740073
002000720065007300650072007600650064002e0046006f006e00740041
007700650073006f006d00650052006500670075006c006100720046004f
004e0054004c00410042003a004f00540046004500580050004f00520054
0046006f006e00740041007700650073006f006d00650056006500720073
0069006f006e00200034002e0037002e0030002000320030003100360046
006f006e00740041007700650073006f006d00650050006c006500610073
006500200072006500660065007200200074006f00200074006800650020
0043006f0070007900720069006700680074002000730065006300740069
006f006e00200066006f0072002000740068006500200066006f006e0074
002000740072006100640065006d00610072006b00200061007400740072
00690062007500740069006f006e0020006e006f00740069006300650073
002e0046006f0072007400200041007700650073006f006d006500440061
00760065002000470061006e006400790068007400740070003a002f002f
0066006f006e00740061007700650073006f006d0065002e0069006f0068
007400740070003a002f002f0066006f006e00740061007700650073006f
006d0065002e0069006f002f006c006900630065006e00730065002f0000
00>
[333 ] AllocGlyphStorage
]def 
76 12 
PrepFor2015
Type42DictEnd
1 44 167 <00030000ff80070005800007003500680000243426220614163201342623
21343e02353426232207060706070607062b011133321e0133323534273e
01342736353426272132363714062b010607161514071606232227262321
2226351134363321323e053736373e043332161514072132160100263426
263405a64e32fdc01e241e59471842180d2848471e4547202048bec551bd
051e231235140f014b344c809769a90421033c01ac8d85bda43bfee0354b
4b3501200a1718151b0e180241230d28222f3f267da31601766898a63426
2634260280334d143935532b433d8b2c154051511939fd804040a71a1e10
494a203245193d114c3569983e391516654d8ba1453b4b350280354b0913
111c0f1c034a3715523e4023867a443c9800>ABAAAA+FontAwesome AddT42Char 
1 0 0 <000200700000031006000003000700003721112103112111e001c0fe4070
02a0700520fa700600fa00000000>ABAAAA+FontAwesome AddT42Char 
ABAAAA+FontAwesome /CharStrings get begin
/uniF0A4 167 def
end
ABAAAA+FontAwesome /Encoding get
dup 127 /uniF0A4 put
pop
end
%ADOEndSubsetFont
/FIPHUZ+FontAwesome /ABAAAA+FontAwesome findfont ct_VMDictPut
/FIPHUZ+FontAwesome*1 
[127{/.notdef}rp /uniF0A4 128{/.notdef}rp]
FIPHUZ+FontAwesome nf
FIPHUZ+FontAwesome*1 [14.85 0 0 -14.85 0 0 ]msf
47.15 58.7 mo
(\177)sh
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 1552 49 <0001003bffe504fe060000520072b510010100014a4bb032505840260000
03010300017e0004000300040367000505025f000202194b000101065f07
0106061a064c1b4024000003010300017e00020005040205670004000300
040367000101065f070106061a064c5940130000005200513b3938373230
282628280807162b0426272e0135343e0133321e01151406071e01333237
363534272e012726272e012726353436243332171e01171615140623222e
0135343633262322060706151416171e0117161704171e01171615140604
23022ed7595b683253302b492b4a4349b385e065363e1c683f484fc9f12f
2f920106a79190527625265b4f2d4d2e4e3b76dc61a133340d15154b4140
5c01208e4252110f8cfef2c01b2c2b2c90583657312f4d2a40480933336c
3b525d3b1a31131514328553527379c26d2e1a4b373b455a6e2341294c50
5d3937384b26341c1e31181914415a2a6c3a374884bf65000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/S 49 def
end
FIPHUX+Trocchi /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
5{/.notdef}rp /R /S /.notdef /U /V 10{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /.notdef /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
65.4805 58.7 mo
(S)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
65.4805 58.7 mo
(S) false chp
.567187 lw
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
75.175 58.7 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
75.175 58.7 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
83.2381 58.7 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
83.2381 58.7 mo
(l) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
88.3718 58.7 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
88.3718 58.7 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
96.7104 58.7 mo
(c)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
96.7104 58.7 mo
(c) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
104.817 58.7 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
104.817 58.7 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
111.285 58.7 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
111.285 58.7 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
114.765 58.7 mo
(n)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
114.765 58.7 mo
(n) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
124.279 58.7 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
124.279 58.7 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
133.603 58.7 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
133.603 58.7 mo
(m) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 2564 70 <0002ffb8ffe5045405e10015002a0075b60902020605014a4bb032505840
26000101025d000202114b000505035f0003031c4b000000124b08010606
045f070104041a044c1b40240002000103020165000505035f0003031c4b
000000124b08010606045f070104041a044c59401516160000162a162920
1e00150014231111130907182b042627072311233521113e013332161215
14020706233e0137363534272e01232206070e01151416171633021ebe2f
4e5ccf01a6339d5989d27271676784267d1e1d3a1f6a44406c1f1f20403c
3d511b736fc705667bfdcd4b558ffeffa59fff004a4b797c64626cb18946
514d403e884289dd41430000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/b 70 def
end
FIPHUX+Trocchi /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
5{/.notdef}rp /R /S /.notdef /U /V 10{/.notdef}rp /a 
/b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /.notdef /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
147.591 58.7 mo
(b)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
147.591 58.7 mo
(b) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
156.183 58.7 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
156.183 58.7 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
164.246 58.7 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
164.246 58.7 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
171.163 58.7 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
171.163 58.7 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
174.644 58.7 mo
(o)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
174.644 58.7 mo
(o) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 3532 80 <00010033000003c5062f00260075b518010405014a4bb01d5058402a0004
05020504027e000505035f0003031b4b07010101025d06010202144b0801
0000095d00090912094c1b4028000405020504027e000300050403056707
010101025d06010202144b08010000095d00090912094c59400e26251111
132826231111100a071d2b373311233533343e0133321e0115140e012322
2e01353436372e012322061d012107211133152133c3c3c34ba688689c52
27452a243e253f30154f265f67014708fec7fafd6c70035170b2e06c3b63
39334f2a243d2626490c14197f81aa70fcaf70000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/f 80 def
end
FIPHUX+Trocchi /Encoding get
dup 102 /f put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
5{/.notdef}rp /R /S /.notdef /U /V 10{/.notdef}rp /a 
/b /c /.notdef /e /f 2{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /.notdef /w 136{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
183.265 58.7 mo
(f)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
183.265 58.7 mo
(f) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
188.965 58.7 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
188.965 58.7 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
192.445 58.7 mo
(f)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
192.445 58.7 mo
(f) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
198.144 58.7 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
198.144 58.7 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
207.331 58.7 mo
(c)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
207.331 58.7 mo
(c) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
215.438 58.7 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
215.438 58.7 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
221.906 58.7 mo
(o)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
221.906 58.7 mo
(o) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
230.252 58.7 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
230.252 58.7 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
237.169 58.7 mo
(s)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
237.169 58.7 mo
(s) false chp
@
FIPHUZ+FontAwesome*1 [14.85 0 0 -14.85 0 0 ]msf
47.975 175.85 mo
(\177)sh
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if

1 0 185 <> FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/nobreakspace 185 def
end
FIPHUX+Trocchi /Encoding get
dup 160 /nobreakspace put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
5{/.notdef}rp /R /S /.notdef /U /V 10{/.notdef}rp /a 
/b /c /.notdef /e /f 2{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /.notdef /w 40{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
62.825 175.85 mo
(\240)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
62.825 175.85 mo
(\240) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
66.3055 175.85 mo
(S)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
66.3055 175.85 mo
(S) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
76 175.85 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
76 175.85 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
84.0631 175.85 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
84.0631 175.85 mo
(l) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
89.1968 175.85 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
89.1968 175.85 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
97.5354 175.85 mo
(c)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
97.5354 175.85 mo
(c) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
105.642 175.85 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
105.642 175.85 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
112.11 175.85 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
112.11 175.85 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
115.59 175.85 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
115.59 175.85 mo
(t) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 3764 82 <000100210000053d05e100270067b506010007014a4bb032505840230001
01025d000202114b000707035f0003031c4b080604030000055d09010505
12054c1b40210002000103020165000707035f0003031c4b080604030000
055d0901050512054c59400e27261623111118251111100a071d2b373311
233521113e013736333216171e0117161511331521353311342623220607
0e0115113315212db8c4019b257a423c4230492d33431718d7fd90c2554a
326d2e2f38c3fdae7004f67bfd924b6815130e15194e464962fd9d707002
6b71753830328948fe1a70000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/h 82 def
end
FIPHUX+Trocchi /Encoding get
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
5{/.notdef}rp /R /S /.notdef /U /V 10{/.notdef}rp /a 
/b /c /.notdef /e /f /.notdef /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /.notdef /w 40{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
122.058 175.85 mo
(h)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
122.058 175.85 mo
(h) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
131.521 175.85 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
131.521 175.85 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
139.859 175.85 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
139.859 175.85 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
143.34 175.85 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
143.34 175.85 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
152.665 175.85 mo
(p)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
152.665 175.85 mo
(p) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
161.511 175.85 mo
(p)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
161.511 175.85 mo
(p) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
170.357 175.85 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
170.357 175.85 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
178.42 175.85 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
178.42 175.85 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
185.337 175.85 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
185.337 175.85 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
188.818 175.85 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
188.818 175.85 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
198.005 175.85 mo
(n)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
198.005 175.85 mo
(n) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 3024 73 <00020050ffe504c905e10016002800b7b6130a020306014a4bb02a505840
2e000101025d000202114b000606005f0000001c4b0907020303045d0004
04124b0907020303055f080105051a054c1b4bb0325058402b000101025d
000202114b000606005f0000001c4b000303045d000404124b0901070705
5f080105051a054c1b40290002000100020165000606005f0000001c4b00
0303045d000404124b09010707055f080105051a054c5959401617170000
17281727201e0016001511111113260a07192b0426023534123633321617
1123352111331521270e01233e023534272e012322060706151417163301
85c86d6fce8a54a032eb01c2b5fe9d2732ab5a7b814840216d4343691f3b
703b531b8c0100a8a901008c564a01b87bfa8f70aa5c697f74cd80a78143
4d4e4585b1f77841>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/d 73 def
end
FIPHUX+Trocchi /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
5{/.notdef}rp /R /S /.notdef /U /V 10{/.notdef}rp /a 
/b /c /d /e /f /.notdef /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /.notdef /w 40{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
207.496 175.85 mo
(d)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
207.496 175.85 mo
(d) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
216.459 175.85 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
216.459 175.85 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
219.939 175.85 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
219.939 175.85 mo
(l) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
225.073 175.85 mo
(o)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
225.073 175.85 mo
(o) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
232.955 175.85 mo
(w)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
232.955 175.85 mo
(w) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
244.919 175.85 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
244.919 175.85 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
252.982 175.85 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
252.982 175.85 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
259.899 175.85 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
259.899 175.85 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
263.38 175.85 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
263.38 175.85 mo
(l) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
268.513 175.85 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
268.513 175.85 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
273.335 175.85 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
273.335 175.85 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
287.322 175.85 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
287.322 175.85 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
292.144 175.85 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
292.144 175.85 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
298.612 175.85 mo
(s)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
298.612 175.85 mo
(s) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 9032 165 <0001003fff5602f4063d00030006b3020001302b17270117b677023e77aa
2506c2240000>FIPHUX+Trocchi AddT42Char 
1 712 34 <000100210000077105e1001c006bb7181106030801014a4bb03250584023
000801000108007e04010101025d03010202114b090705030000065d0a01
060612064c1b4021000801000108007e0301020401010802016509070503
0000065d0a01060612064c5940101c1b1a192311111111121111100b071d
2b3733112335210901211523113315213533110106232226270111331521
33dbed025e0164014c0233e9f8fd4bdcfe7a1c2d172b0cfe4afcfd728f04
c38ffc4c03b48ffb3d8f8f04a2fbd14c271f0454fb3f8f00>FIPHUX+Trocchi AddT42Char 
1 7032 119 <0001ffe5fe2d050e04310023006d400b18110200020c010100024a4bb016
50584022000002010200017e070504030202035d06010303144b00010108
60090108081e084c1b401f000002010200017e0001090108010864070504
030202035d0601030314024c59401100000023002211111211111326250a
071c2b002e01353436333216151406071633323637012335211523011323
35211523010e0223010d8d4f5d4f3c412e2629195a781ffe73c70269b601
22f8a60202acfea83b7c905bfe2d39654147595140233a1216a1b203d870
70fcef03117070fc3babca5a0000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/slash 165 def
/M 34 def
/y 119 def
end
FIPHUX+Trocchi /Encoding get
dup 47 /slash put
dup 77 /M put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
/M 4{/.notdef}rp /R /S /.notdef /U /V 10{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /.notdef /w /.notdef /y 
38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
241.244 309.5 mo
(Modify facto)sh
318.509 309.5 mo
(rs/limits)sh
FIPHUZ+FontAwesome*1 [14.85 0 0 -14.85 0 0 ]msf
47.975 360.65 mo
(\177)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
62.825 360.65 mo
(\240)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
62.825 360.65 mo
(\240) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 916 45 <000200210000052305e10020002f00604bb0325058402008010600030006
036507010101025d000202114b04010000055d00050512054c1b401e0002
0701010602016508010600030006036504010000055d00050512054c5940
1422212e2a212f222f201f1e1d1c183111100907172b3733112335213216
171e01171e011716151406070e01070e0107062b01113315210120113427
262726272627262b011121f3f30266495f454a6d3c3d4d19192c2623733e
359d46405550fafd27026a01a61e163e235a336a173f4f8f04c38f040809
1f1e1f54403f534f822e29411310150203fdeb8f0325011d4f402d241410
090201fdd3000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/P 45 def
end
FIPHUX+Trocchi /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
/M 2{/.notdef}rp /P /.notdef /R /S /.notdef /U 
/V 10{/.notdef}rp /a /b /c /d /e /f 
/.notdef /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /.notdef /w 
/.notdef /y 38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
71.2555 360.65 mo
(P)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
71.2555 360.65 mo
(P) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
80.4497 360.65 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
80.4497 360.65 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
88.5128 360.65 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
88.5128 360.65 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
95.4302 360.65 mo
(f)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
95.4302 360.65 mo
(f) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
101.129 360.65 mo
(o)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
101.129 360.65 mo
(o) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
109.475 360.65 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
109.475 360.65 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
116.393 360.65 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
116.393 360.65 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
130.38 360.65 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
130.38 360.65 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
138.81 360.65 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
138.81 360.65 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
143.632 360.65 mo
(n)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
143.632 360.65 mo
(n) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
153.124 360.65 mo
(d)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
153.124 360.65 mo
(d) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
162.086 360.65 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
162.086 360.65 mo
(i) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 6580 116 <0001fff2ffd904f604310014002d402a09010600014a050302030000015d
04010101144b070106061a064c00000014001211111211111308071a2b04
262701233521152309012335211523010e012b010247481cfec7b8025cb6
01080100aa0200acfed91d4c390626464d03547070fcdd03237070fcb252
48000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/v 116 def
end
FIPHUX+Trocchi /Encoding get
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
/M 2{/.notdef}rp /P /.notdef /R /S /.notdef /U 
/V 10{/.notdef}rp /a /b /c /d /e /f 
/.notdef /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/.notdef /y 38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
166.908 360.65 mo
(v)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
166.908 360.65 mo
(v) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
176.008 360.65 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
176.008 360.65 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
180.83 360.65 mo
(d)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
180.83 360.65 mo
(d) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
189.792 360.65 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
189.792 360.65 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
199.117 360.65 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
199.117 360.65 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
208.304 360.65 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
208.304 360.65 mo
(l) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
213.437 360.65 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
213.437 360.65 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
221.868 360.65 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
221.868 360.65 mo
(e) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 6872 118 <00010004000004fc0431001b0040403d18110a03040001014a0604030301
01025d05010202144b0a0907030000085d0c0b02080812084c0000001b00
1b1a1917161112111112111112110d071d2b333533090123352115231b01
233521152309013315213533030133151b9d0152fe9ea4023795e1e3a101
f8a4fec40175a6fdaeb2eefefcb570019e01b37070fed2012e7070fe7bfe
3470700148feb8700000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/x 118 def
end
FIPHUX+Trocchi /Encoding get
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash /zero /one 
/two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 
5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 
/M 2{/.notdef}rp /P /.notdef /R /S /.notdef /U 
/V 10{/.notdef}rp /a /b /c /d /e /f 
/.notdef /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
230.207 360.65 mo
(x)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
230.207 360.65 mo
(x) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
239.488 360.65 mo
(p)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
239.488 360.65 mo
(p) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
248.334 360.65 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
248.334 360.65 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
256.397 360.65 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
256.397 360.65 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
263.315 360.65 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
263.315 360.65 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
268.136 360.65 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
268.136 360.65 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
281.761 360.65 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
281.761 360.65 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
290.1 360.65 mo
(n)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
290.1 360.65 mo
(n) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
299.954 360.65 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
299.954 360.65 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
306.422 360.65 mo
(/)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
306.422 360.65 mo
(/) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
312.36 360.65 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
312.36 360.65 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
325.985 360.65 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
325.985 360.65 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
334.048 360.65 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
334.048 360.65 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
343.235 360.65 mo
(s)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
343.235 360.65 mo
(s) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
350.776 360.65 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
350.776 360.65 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
360.101 360.65 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
360.101 360.65 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
366.931 360.65 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
366.931 360.65 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
375.27 360.65 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
375.27 360.65 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
383.7 360.65 mo
(d)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
383.7 360.65 mo
(d) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
392.662 360.65 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
392.662 360.65 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
397.484 360.65 mo
(s)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
397.484 360.65 mo
(s) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
405.025 360.65 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
405.025 360.65 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
411.493 360.65 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
411.493 360.65 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
420.68 360.65 mo
(n)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
420.68 360.65 mo
(n) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
430.172 360.65 mo
(c)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
430.172 360.65 mo
(c) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
438.278 360.65 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
438.278 360.65 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
446.617 360.65 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
446.617 360.65 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
455.047 360.65 mo
(f)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
455.047 360.65 mo
(f) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
460.746 360.65 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
460.746 360.65 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
467.577 360.65 mo
(o)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
467.577 360.65 mo
(o) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
476.198 360.65 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
476.198 360.65 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
490.185 360.65 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
490.185 360.65 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
498.616 360.65 mo
(o)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
498.616 360.65 mo
(o) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
507.237 360.65 mo
(p)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
507.237 360.65 mo
(p) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
516.083 360.65 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
516.083 360.65 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
522.551 360.65 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
522.551 360.65 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
527.373 360.65 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
527.373 360.65 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
541.02 360.65 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
541.02 360.65 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
550.344 360.65 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
550.344 360.65 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
47.975 382.925 mo
(v)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
47.975 382.925 mo
(v) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
56.9662 382.925 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
56.9662 382.925 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
66.1532 382.925 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
66.1532 382.925 mo
(l) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
71.2869 382.925 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
71.2869 382.925 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
80.4594 382.925 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
80.4594 382.925 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
88.798 382.925 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
88.798 382.925 mo
( ) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 9068 171 <00010047ff1b029f061d00190006b3190b01302b0426272602353412373e
0137150e01070602151412171e0117150212eb4a494d4d494aeb8d58942e
2d30302d2e9458d7a68380012d9d9c012e8083a60e56119b7573fef38a8b
fef373759a1156000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/parenleft 171 def
end
FIPHUX+Trocchi /Encoding get
dup 40 /parenleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 4{/.notdef}rp /hyphen /period /slash 
/zero /one /two /three /four 2{/.notdef}rp /seven /eight 
4{/.notdef}rp /equal 5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /S 
/.notdef /U /V 10{/.notdef}rp /a /b /c /d 
/e /f /.notdef /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w /x /y 38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
92.2785 382.925 mo
(\()sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
92.2785 382.925 mo
(\() false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
97.6297 382.925 mo
(v)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
97.6297 382.925 mo
(v) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
106.621 382.925 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
106.621 382.925 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
115.808 382.925 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
115.808 382.925 mo
(l) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
120.942 382.925 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
120.942 382.925 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
125.763 382.925 mo
(d)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
125.763 382.925 mo
(d) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
134.726 382.925 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
134.726 382.925 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
143.478 382.925 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
143.478 382.925 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
149.945 382.925 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
149.945 382.925 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
158.284 382.925 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
158.284 382.925 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
161.765 382.925 mo
(o)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
161.765 382.925 mo
(o) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
170.386 382.925 mo
(p)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
170.386 382.925 mo
(p) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
179.232 382.925 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
179.232 382.925 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
185.7 382.925 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
185.7 382.925 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
190.522 382.925 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
190.522 382.925 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
204.168 382.925 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
204.168 382.925 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
213.493 382.925 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
213.493 382.925 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
227.48 382.925 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
227.48 382.925 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
230.961 382.925 mo
(v)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
230.961 382.925 mo
(v) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
239.952 382.925 mo
(a)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
239.952 382.925 mo
(a) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
249.139 382.925 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
249.139 382.925 mo
(l) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
254.273 382.925 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
254.273 382.925 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
263.445 382.925 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
263.445 382.925 mo
(e) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 9168 172 <00010044ff1b029c061d00190006b3190d01302b173e0137361235340227
2e0127351e01171612151402070e01074458942e2d30302d2e94588dec4a
484d4d484aec8d8f119b7573010d8a8b010d73759a11560ea68280fed29d
9cfed28083a60e000000>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/parenright 172 def
end
FIPHUX+Trocchi /Encoding get
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period 
/slash /zero /one /two /three /four 2{/.notdef}rp /seven 
/eight 4{/.notdef}rp /equal 5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp 
/I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R 
/S /.notdef /U /V 10{/.notdef}rp /a /b /c 
/d /e /f /.notdef /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y 38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
271.784 382.925 mo
(\))sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
271.784 382.925 mo
(\)) false chp
@
FIPHUZ+FontAwesome*1 [14.85 0 0 -14.85 0 0 ]msf
47.975 646.1 mo
(\177)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
62.825 646.1 mo
(\240)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
62.825 646.1 mo
(\240) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
66.3055 646.1 mo
(P)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
66.3055 646.1 mo
(P) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
75.4997 646.1 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
75.4997 646.1 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
83.5628 646.1 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
83.5628 646.1 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
90.4802 646.1 mo
(f)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
90.4802 646.1 mo
(f) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
96.1795 646.1 mo
(o)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
96.1795 646.1 mo
(o) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
104.525 646.1 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
104.525 646.1 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
111.443 646.1 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
111.443 646.1 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
125.43 646.1 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
125.43 646.1 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
128.91 646.1 mo
(b)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
128.91 646.1 mo
(b) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
137.365 646.1 mo
(u)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
137.365 646.1 mo
(u) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
146.69 646.1 mo
(l)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
146.69 646.1 mo
(l) false chp
@
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 4220 90 <00010017ffec051d05e1002400be400e20160f040305080521010100024a
4bb0195058402f000303045d000404114b07010505065d000606144b0008
08015f0a09020101124b02010000015f0a0902010112014c1b4bb0325058
402c000303045d000404114b07010505065d000606144b02010000015d00
0101124b000808095f0a0109091a094c1b402a0004000306040365070105
05065d000606144b02010000015d000101124b000808095f0a0109091a09
4c595940120000002400232811111211111111150b071d2b042627030711
331521353311233521110123352115230116171e01171e01333237170e01
2304029a41c9a6aafdb5caca01a101a2bc0258bffea61d3235492c2f6330
3a2e1d2e4c39146c6f015a7ffece707004f67bfc5a01867070feb4285156
6c373b3f15871a11>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/k 90 def
end
FIPHUX+Trocchi /Encoding get
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period 
/slash /zero /one /two /three /four 2{/.notdef}rp /seven 
/eight 4{/.notdef}rp /equal 5{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp 
/I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R 
/S /.notdef /U /V 10{/.notdef}rp /a /b /c 
/d /e /f /.notdef /h /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y 38{/.notdef}rp /nobreakspace 
95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
151.823 646.1 mo
(k)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
151.823 646.1 mo
(k) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
161.25 646.1 mo
( )sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
161.25 646.1 mo
( ) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
164.73 646.1 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
164.73 646.1 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
173.069 646.1 mo
(x)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
173.069 646.1 mo
(x) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
182.35 646.1 mo
(p)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
182.35 646.1 mo
(p) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
191.196 646.1 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
191.196 646.1 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
199.259 646.1 mo
(r)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
199.259 646.1 mo
(r) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
206.177 646.1 mo
(i)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
206.177 646.1 mo
(i) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
210.999 646.1 mo
(m)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
210.999 646.1 mo
(m) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
224.623 646.1 mo
(e)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
224.623 646.1 mo
(e) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
232.962 646.1 mo
(n)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
232.962 646.1 mo
(n) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
242.816 646.1 mo
(t)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
242.816 646.1 mo
(t) false chp
@
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
249.284 646.1 mo
(s)sh
FIPHUX+Trocchi*1 [14.85 0 0 -14.85 0 0 ]msf
249.284 646.1 mo
(s) false chp
@
grestore
gsave
313.625 437.375 mo
570.2 437.375 li
570.2 455.525 li
313.625 455.525 li
313.625 437.375 li
eclp
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QAAAAA+Trocchi AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FIPHUX+Trocchi gcheck setglobal} if
1 8184 136 <00010056fed103f20431002f0073400f221d0202051c0100020d01010003
4a4bb00a5058402200000201010070000500020005026700010701060106
64000404035d00030314044c1b4023000002010200017e00050002000502
670001070106010664000404035d00030314044c59400f0000002f002e22
111329272508071a2b12272635343633321e0115140f0116333236373e01
3534262726232207271321072103363332161716151406070e0123e96033
4845283f230d0e401259902d2c2d47407cb62e533b4b02a83bfe0e2f4b4b
92da407b4a4546dd86fed15a2e43424d2740241b1e21093832307845598b
284e0b480206aafed508423d77c55fa942434b00>FIPHUX+Trocchi AddT42Char 
FIPHUX+Trocchi /CharStrings get begin
/five 136 def
end
FIPHUX+Trocchi /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FIPHUX+Trocchi*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period 
/slash /zero /one /two /three /four /five /.notdef 
/seven /eight 4{/.notdef}rp /equal 5{/.notdef}rp /C 2{/.notdef}rp /F 
2{/.notdef}rp /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef 
/R /S /.notdef /U /V 10{/.notdef}rp /a /b 
/c /d /e /f /.notdef /h /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /x /y 38{/.notdef}rp 
/nobreakspace 95{/.notdef}rp]
FIPHUX+Trocchi nf
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
534.867 450.575 mo
(28.125)sh
grestore
gsave
313.625 470.375 mo
570.2 470.375 li
570.2 488.525 li
313.625 488.525 li
313.625 470.375 li
eclp
1 /0 /CSD get_res sepcs
1 sep
FIPHUX+Trocchi*1 [12.375 0 0 -12.375 0 0 ]msf
528.344 483.575 mo
(-0.4375)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/FIPHUX+Trocchi*1 uf
/FIPHUX+Trocchi uf
/QAAAAA+Trocchi uf
/FIPHUW+Arial*1 uf
/FIPHUW+Arial uf
/LAAAAA+Arial uf
/FIPHUY+Consolas*1 uf
/FIPHUY+Consolas uf
/VAAAAA+Consolas uf
/FIPHUZ+FontAwesome*1 uf
/FIPHUZ+FontAwesome uf
/ABAAAA+FontAwesome uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
