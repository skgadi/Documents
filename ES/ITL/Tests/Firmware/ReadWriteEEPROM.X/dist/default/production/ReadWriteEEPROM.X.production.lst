

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Aug 10 17:28:49 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  000E                     	;# 
    39  000F                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  001D                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0087                     	;# 
    62  0089                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  008F                     	;# 
    67  0090                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0093                     	;# 
    71  0093                     	;# 
    72  0093                     	;# 
    73  0094                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0097                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  0105                     	;# 
    86  0107                     	;# 
    87  0108                     	;# 
    88  0109                     	;# 
    89  010C                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  0185                     	;# 
    95  0187                     	;# 
    96  0188                     	;# 
    97  0189                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  0081                     	;# 
   135  0085                     	;# 
   136  0086                     	;# 
   137  0087                     	;# 
   138  0089                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0096                     	;# 
   152  0097                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  0105                     	;# 
   162  0107                     	;# 
   163  0108                     	;# 
   164  0109                     	;# 
   165  010C                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  0185                     	;# 
   171  0187                     	;# 
   172  0188                     	;# 
   173  0189                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176                           
   177                           	psect	idataBANK1
   178  0442                     __pidataBANK1:	
   179                           
   180                           ;initializer for main@F1622
   181  0442  3431               	retlw	49
   182  0443  3432               	retlw	50
   183  0444  3433               	retlw	51
   184  0445  3434               	retlw	52
   185  0446  3400               	retlw	0
   186  0447  3400               	retlw	0
   187  0448  3400               	retlw	0
   188  0449  3400               	retlw	0
   189  044A  3400               	retlw	0
   190  044B  3400               	retlw	0
   191  044C  3400               	retlw	0
   192  044D  3400               	retlw	0
   193  044E  3400               	retlw	0
   194  044F  3400               	retlw	0
   195  0450  3400               	retlw	0
   196  0451  3400               	retlw	0
   197  0452  3400               	retlw	0
   198  0453  3400               	retlw	0
   199  0454  3400               	retlw	0
   200  0455  3400               	retlw	0
   201  0456  3400               	retlw	0
   202  0457  3400               	retlw	0
   203  0458  3400               	retlw	0
   204  0459  3400               	retlw	0
   205  045A  3400               	retlw	0
   206  045B  3400               	retlw	0
   207  045C  3400               	retlw	0
   208  045D  3400               	retlw	0
   209  045E  3400               	retlw	0
   210  045F  3400               	retlw	0
   211  0460  3400               	retlw	0
   212  0461  3400               	retlw	0
   213  0462  3400               	retlw	0
   214  0463  3400               	retlw	0
   215  0464  3400               	retlw	0
   216  0465  3400               	retlw	0
   217  0466  3400               	retlw	0
   218  0467  3400               	retlw	0
   219  0468  3400               	retlw	0
   220  0469  3400               	retlw	0
   221  046A  3400               	retlw	0
   222  046B  3400               	retlw	0
   223  046C  3400               	retlw	0
   224  046D  3400               	retlw	0
   225  046E  3400               	retlw	0
   226  046F  3400               	retlw	0
   227  0470  3400               	retlw	0
   228  0471  3400               	retlw	0
   229  0472  3400               	retlw	0
   230  0473  3400               	retlw	0
   231  0030                     _RB0	set	48
   232  0031                     _RB1	set	49
   233  0032                     _RB2	set	50
   234  0033                     _RB3	set	51
   235  0034                     _RB4	set	52
   236  0035                     _RB5	set	53
   237  0086                     _TRISBbits	set	134
   238  010D                     _EEADR	set	269
   239  010C                     _EEDATA	set	268
   240  0188                     _ANSEL	set	392
   241  0189                     _ANSELH	set	393
   242  018C                     _EECON1	set	396
   243  0C60                     _RD	set	3168
   244  0C61                     _WR	set	3169
   245                           
   246                           	psect	strings
   247  0003                     __pstrings:	
   248  0003                     stringtab:	
   249  0003                     __stringtab:	
   250  0003                     stringcode:	
   251                           ;	String table - string pointers are 1 byte each
   252                           
   253  0003                     stringdir:	
   254  0003  3000               	movlw	high stringdir
   255  0004  008A               	movwf	10
   256  0005  0804               	movf	4,w
   257  0006  0A84               	incf	4,f
   258  0007  0782               	addwf	2,f
   259  0008                     __stringbase:	
   260  0008  3400               	retlw	0
   261  0009                     __end_of__stringtab:	
   262  0009                     STR_1:	
   263  0009  3445               	retlw	69	;'E'
   264  000A  3445               	retlw	69	;'E'
   265  000B  3450               	retlw	80	;'P'
   266  000C  3452               	retlw	82	;'R'
   267  000D  344F               	retlw	79	;'O'
   268  000E  344D               	retlw	77	;'M'
   269  000F  343A               	retlw	58	;':'
   270  0010  3400               	retlw	0
   271  000F                     
   272                           ; #config settings
   273  0000                     
   274                           	psect	cinit
   275  07F0                     start_initialization:	
   276  07F0                     __initialization:	
   277                           
   278                           ; Initialize objects allocated to BANK1
   279  07F0  1383               	bcf	3,7	;select IRP bank0
   280  07F1  30D2               	movlw	low (__pdataBANK1+50)
   281  07F2  00FD               	movwf	btemp+-1
   282  07F3  3004               	movlw	high __pidataBANK1
   283  07F4  00FE               	movwf	btemp
   284  07F5  3042               	movlw	low __pidataBANK1
   285  07F6  00FF               	movwf	btemp+1
   286  07F7  30A0               	movlw	low __pdataBANK1
   287  07F8  0084               	movwf	4
   288  07F9  120A  118A  23D9   	fcall	init_ram0
   289  07FC                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  07FC                     __end_of__initialization:	
   293  07FC  0183               	clrf	3
   294  07FD  120A  118A  2D6F   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	dataBANK1
   297  00A0                     __pdataBANK1:	
   298  00A0                     main@F1622:	
   299  00A0                     	ds	50
   300                           
   301                           	psect	inittext
   302  03D5                     init_fetch0:	
   303                           ;	Called with low address in FSR and high address in W
   304                           
   305  03D5  087E               	movf	126,w
   306  03D6  008A               	movwf	10
   307  03D7  087F               	movf	127,w
   308  03D8  0082               	movwf	2
   309  03D9                     init_ram0:	
   310                           ;Called with:
   311                           ;	high address of idata address in btemp 
   312                           ;	low address of idata address in btemp+1 
   313                           ;	low address of data in FSR
   314                           ;	high address + 1 of data in btemp-1
   315                           
   316  03D9  23D5  120A  118A   	fcall	init_fetch0
   317  03DC  0080               	movwf	0
   318  03DD  0A84               	incf	4,f
   319  03DE  0804               	movf	4,w
   320  03DF  067D               	xorwf	125,w
   321  03E0  1903               	btfsc	3,2
   322  03E1  3400               	retlw	0
   323  03E2  0AFF               	incf	127,f
   324  03E3  1903               	btfsc	3,2
   325  03E4  0AFE               	incf	126,f
   326  03E5  2BD9               	goto	init_ram0
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:	
   330  0070                     ?_Lcd_Init:	
   331  0070                     ?_Lcd_Command:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_eeprom_read:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_eeprom_read:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_Lcd_Delay5500us:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??_Lcd_Delay5500us:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_Lcd_Delay5us:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ??_Lcd_Delay5us:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_Lcd_CharCP:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?___lldiv:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ___lldiv@divisor:	
   362                           ; 4 bytes @ 0x0
   363                           
   364                           
   365                           ; 4 bytes @ 0x0
   366  0070                     	ds	1
   367  0071                     eeprom_read@addr:	
   368                           
   369                           ; 1 bytes @ 0x1
   370  0071                     	ds	1
   371  0072                     ??_Lcd_Command:	
   372  0072                     ??_Lcd_CharCP:	
   373                           ; 1 bytes @ 0x2
   374                           
   375                           
   376                           ; 1 bytes @ 0x2
   377  0072                     	ds	1
   378  0073                     Lcd_CharCP@c:	
   379  0073                     Lcd_Command@command:	
   380                           ; 1 bytes @ 0x3
   381                           
   382                           
   383                           ; 1 bytes @ 0x3
   384  0073                     	ds	1
   385  0074                     ??_Lcd_Init:	
   386  0074                     ?_Lcd_Text:	
   387                           ; 1 bytes @ 0x4
   388                           
   389  0074                     Lcd_Text@x:	
   390                           ; 1 bytes @ 0x4
   391                           
   392  0074                     ___lldiv@dividend:	
   393                           ; 1 bytes @ 0x4
   394                           
   395                           
   396                           ; 4 bytes @ 0x4
   397  0074                     	ds	1
   398  0075                     Lcd_Init@data:	
   399  0075                     Lcd_Text@buffer:	
   400                           ; 1 bytes @ 0x5
   401                           
   402                           
   403                           ; 1 bytes @ 0x5
   404  0075                     	ds	1
   405  0076                     ??_Lcd_Text:	
   406                           
   407                           ; 1 bytes @ 0x6
   408  0076                     	ds	1
   409  0077                     Lcd_Text@y:	
   410                           
   411                           ; 1 bytes @ 0x7
   412  0077                     	ds	1
   413  0078                     ??___lldiv:	
   414  0078                     Lcd_Text@data:	
   415                           ; 1 bytes @ 0x8
   416                           
   417                           
   418                           ; 1 bytes @ 0x8
   419  0078                     	ds	1
   420  0079                     ___lldiv@quotient:	
   421                           
   422                           ; 4 bytes @ 0x9
   423  0079                     	ds	4
   424  007D                     ___lldiv@counter:	
   425                           
   426                           ; 1 bytes @ 0xD
   427  007D                     	ds	1
   428                           
   429                           	psect	cstackBANK0
   430  0020                     __pcstackBANK0:	
   431  0020                     ?___bmul:	
   432  0020                     ___bmul@multiplicand:	
   433                           ; 1 bytes @ 0x0
   434                           
   435                           
   436                           ; 1 bytes @ 0x0
   437  0020                     	ds	1
   438  0021                     ??___bmul:	
   439                           
   440                           ; 1 bytes @ 0x1
   441  0021                     	ds	1
   442  0022                     ___bmul@product:	
   443                           
   444                           ; 1 bytes @ 0x2
   445  0022                     	ds	1
   446  0023                     ___bmul@multiplier:	
   447                           
   448                           ; 1 bytes @ 0x3
   449  0023                     	ds	1
   450  0024                     ?_Lcd_WriteChar:	
   451  0024                     Lcd_WriteChar@x:	
   452                           ; 1 bytes @ 0x4
   453                           
   454                           
   455                           ; 1 bytes @ 0x4
   456  0024                     	ds	1
   457  0025                     Lcd_WriteChar@c:	
   458                           
   459                           ; 1 bytes @ 0x5
   460  0025                     	ds	1
   461  0026                     ??_Lcd_WriteChar:	
   462                           
   463                           ; 1 bytes @ 0x6
   464  0026                     	ds	1
   465  0027                     Lcd_WriteChar@y:	
   466                           
   467                           ; 1 bytes @ 0x7
   468  0027                     	ds	1
   469  0028                     Lcd_WriteChar@data:	
   470                           
   471                           ; 1 bytes @ 0x8
   472  0028                     	ds	1
   473  0029                     ?_WriteLongInt:	
   474  0029                     WriteLongInt@x:	
   475                           ; 1 bytes @ 0x9
   476                           
   477                           
   478                           ; 1 bytes @ 0x9
   479  0029                     	ds	1
   480  002A                     WriteLongInt@Val:	
   481                           
   482                           ; 4 bytes @ 0xA
   483  002A                     	ds	4
   484  002E                     WriteLongInt@size:	
   485                           
   486                           ; 1 bytes @ 0xE
   487  002E                     	ds	1
   488  002F                     ??_WriteLongInt:	
   489                           
   490                           ; 1 bytes @ 0xF
   491  002F                     	ds	3
   492  0032                     WriteLongInt@y:	
   493                           
   494                           ; 1 bytes @ 0x12
   495  0032                     	ds	1
   496  0033                     ??_main:	
   497                           
   498                           ; 1 bytes @ 0x13
   499  0033                     	ds	6
   500  0039                     main@data:	
   501                           
   502                           ; 50 bytes @ 0x19
   503  0039                     	ds	50
   504  006B                     main@i:	
   505                           
   506                           ; 1 bytes @ 0x4B
   507  006B                     	ds	1
   508                           
   509                           	psect	maintext
   510  056F                     __pmaintext:	
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 10 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  data           50   25[BANK0 ] unsigned char [50]
   521 ;;  i               1   75[BANK0 ] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : B00/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         0       0       0       0       0
   532 ;;      Locals:         0      51       0       0       0
   533 ;;      Temps:          0       6       0       0       0
   534 ;;      Totals:         0      57       0       0       0
   535 ;;Total ram usage:       57 bytes
   536 ;; Hardware stack levels required when called:    4
   537 ;; This function calls:
   538 ;;		_Lcd_Command
   539 ;;		_Lcd_Init
   540 ;;		_Lcd_Text
   541 ;;		_Lcd_WriteChar
   542 ;;		_WriteLongInt
   543 ;;		_eeprom_read
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _main
   551  056F                     _main:	
   552                           
   553                           ;main.c: 11: Lcd_Init();
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   557  056F  120A  118A  25F8  120A  118A  	fcall	_Lcd_Init
   558                           
   559                           ;main.c: 12: Lcd_Command(1);
   560  0574  3001               	movlw	1
   561  0575  120A  118A  269D  120A  118A  	fcall	_Lcd_Command
   562                           
   563                           ;main.c: 29: eeprom char data[50]="1234";
   564  057A  3039               	movlw	main@data& (0+255)
   565  057B  0084               	movwf	4
   566  057C  30A0               	movlw	low main@F1622
   567  057D  1283               	bcf	3,5	;RP0=0, select bank0
   568  057E  1303               	bcf	3,6	;RP1=0, select bank0
   569  057F  00B3               	movwf	??_main
   570  0580  0804               	movf	4,w
   571  0581  00B4               	movwf	??_main+1
   572  0582  3032               	movlw	50
   573  0583  00B5               	movwf	??_main+2
   574  0584                     u1280:	
   575  0584  0833               	movf	??_main,w
   576  0585  0084               	movwf	4
   577  0586  1383               	bcf	3,7	;select IRP bank1
   578  0587  0800               	movf	0,w
   579  0588  00B6               	movwf	??_main+3
   580  0589  0AB3               	incf	??_main,f
   581  058A  0834               	movf	??_main+1,w
   582  058B  0084               	movwf	4
   583  058C  0836               	movf	??_main+3,w
   584  058D  0080               	movwf	0
   585  058E  0AB4               	incf	??_main+1,f
   586  058F  0BB5               	decfsz	??_main+2,f
   587  0590  2D84               	goto	u1280
   588                           
   589                           ;main.c: 30: char i=0;
   590  0591  01EB               	clrf	main@i
   591  0592                     l1150:	
   592                           ;main.c: 31: while (1) {
   593                           
   594                           
   595                           ;main.c: 32: Lcd_Text(1,1,"EEPROM:");
   596  0592  01F4               	clrf	Lcd_Text@x
   597  0593  0AF4               	incf	Lcd_Text@x,f
   598  0594  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   599  0595  1283               	bcf	3,5	;RP0=0, select bank0
   600  0596  1303               	bcf	3,6	;RP1=0, select bank0
   601  0597  00B3               	movwf	??_main
   602  0598  0833               	movf	??_main,w
   603  0599  00F5               	movwf	Lcd_Text@buffer
   604  059A  3001               	movlw	1
   605  059B  120A  118A  2474  120A  118A  	fcall	_Lcd_Text
   606                           
   607                           ;main.c: 33: WriteLongInt(1,8,i,3);
   608  05A0  3008               	movlw	8
   609  05A1  1283               	bcf	3,5	;RP0=0, select bank0
   610  05A2  1303               	bcf	3,6	;RP1=0, select bank0
   611  05A3  00B3               	movwf	??_main
   612  05A4  0833               	movf	??_main,w
   613  05A5  00A9               	movwf	WriteLongInt@x
   614  05A6  086B               	movf	main@i,w
   615  05A7  00B4               	movwf	??_main+1
   616  05A8  01B5               	clrf	??_main+2
   617  05A9  01B6               	clrf	??_main+3
   618  05AA  01B7               	clrf	??_main+4
   619  05AB  0837               	movf	??_main+4,w
   620  05AC  00AD               	movwf	WriteLongInt@Val+3
   621  05AD  0836               	movf	??_main+3,w
   622  05AE  00AC               	movwf	WriteLongInt@Val+2
   623  05AF  0835               	movf	??_main+2,w
   624  05B0  00AB               	movwf	WriteLongInt@Val+1
   625  05B1  0834               	movf	??_main+1,w
   626  05B2  00AA               	movwf	WriteLongInt@Val
   627  05B3  3003               	movlw	3
   628  05B4  00B8               	movwf	??_main+5
   629  05B5  0838               	movf	??_main+5,w
   630  05B6  00AE               	movwf	WriteLongInt@size
   631  05B7  3001               	movlw	1
   632  05B8  120A  118A  24B4  120A  118A  	fcall	_WriteLongInt
   633                           
   634                           ;main.c: 34: Lcd_Text(1,11,":");
   635  05BD  300B               	movlw	11
   636  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   637  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   638  05C0  00B3               	movwf	??_main
   639  05C1  0833               	movf	??_main,w
   640  05C2  00F4               	movwf	Lcd_Text@x
   641  05C3  3007               	movlw	(low (((STR_1+6)-__stringbase)| (0+32768)))& (0+255)
   642  05C4  00B4               	movwf	??_main+1
   643  05C5  0834               	movf	??_main+1,w
   644  05C6  00F5               	movwf	Lcd_Text@buffer
   645  05C7  3001               	movlw	1
   646  05C8  120A  118A  2474  120A  118A  	fcall	_Lcd_Text
   647                           
   648                           ;main.c: 35: Lcd_WriteChar(1,12,eeprom_read(i));
   649  05CD  300C               	movlw	12
   650  05CE  1283               	bcf	3,5	;RP0=0, select bank0
   651  05CF  1303               	bcf	3,6	;RP1=0, select bank0
   652  05D0  00B3               	movwf	??_main
   653  05D1  0833               	movf	??_main,w
   654  05D2  00A4               	movwf	Lcd_WriteChar@x
   655  05D3  086B               	movf	main@i,w
   656  05D4  120A  118A  23F9  120A  118A  	fcall	_eeprom_read
   657  05D9  1283               	bcf	3,5	;RP0=0, select bank0
   658  05DA  1303               	bcf	3,6	;RP1=0, select bank0
   659  05DB  00B4               	movwf	??_main+1
   660  05DC  0834               	movf	??_main+1,w
   661  05DD  00A5               	movwf	Lcd_WriteChar@c
   662  05DE  3001               	movlw	1
   663  05DF  120A  118A  2414  120A  118A  	fcall	_Lcd_WriteChar
   664                           
   665                           ;main.c: 36: i++;
   666  05E4  3001               	movlw	1
   667  05E5  1283               	bcf	3,5	;RP0=0, select bank0
   668  05E6  1303               	bcf	3,6	;RP1=0, select bank0
   669  05E7  00B3               	movwf	??_main
   670  05E8  0833               	movf	??_main,w
   671  05E9  07EB               	addwf	main@i,f
   672                           
   673                           ;main.c: 37: _delay((unsigned long)((100)*(20000000/4000.0)));
   674  05EA  3003               	movlw	3
   675  05EB  00B5               	movwf	??_main+2
   676  05EC  308A               	movlw	138
   677  05ED  00B4               	movwf	??_main+1
   678  05EE  3056               	movlw	86
   679  05EF  00B3               	movwf	??_main
   680  05F0                     u1357:	
   681  05F0  0BB3               	decfsz	??_main,f
   682  05F1  2DF0               	goto	u1357
   683  05F2  0BB4               	decfsz	??_main+1,f
   684  05F3  2DF0               	goto	u1357
   685  05F4  0BB5               	decfsz	??_main+2,f
   686  05F5  2DF0               	goto	u1357
   687  05F6  2DF7               	nop2
   688  05F7  2D92               	goto	l1150
   689  05F8                     __end_of_main:	
   690                           ;main.c: 38: }
   691                           ;main.c: 39: return;
   692                           
   693                           
   694                           	psect	text1
   695  03F9                     __ptext1:	
   696 ;; *************** function _eeprom_read *****************
   697 ;; Defined at:
   698 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eeread.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  addr            1    wreg     unsigned char 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  addr            1    1[COMMON] unsigned char 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      unsigned char 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       0       0       0       0
   713 ;;      Locals:         1       0       0       0       0
   714 ;;      Temps:          1       0       0       0       0
   715 ;;      Totals:         2       0       0       0       0
   716 ;;Total ram usage:        2 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _eeprom_read
   727  03F9                     _eeprom_read:	
   728                           
   729                           ;incstack = 0
   730                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
   731                           ;eeprom_read@addr stored from wreg
   732  03F9  00F1               	movwf	eeprom_read@addr
   733  03FA                     l136:	
   734  03FA  0064               	clrwdt	;# 
   735  03FB  1683               	bsf	3,5	;RP0=1, select bank3
   736  03FC  1703               	bsf	3,6	;RP1=1, select bank3
   737  03FD  188C               	btfsc	12,1	;volsfr
   738  03FE  2BFA               	goto	l136
   739  03FF  0871               	movf	eeprom_read@addr,w
   740  0400  1283               	bcf	3,5	;RP0=0, select bank2
   741  0401  1703               	bsf	3,6	;RP1=1, select bank2
   742  0402  008D               	movwf	13	;volatile
   743  0403  303F               	movlw	63
   744  0404  00F0               	movwf	??_eeprom_read
   745  0405  0870               	movf	??_eeprom_read,w
   746  0406  1683               	bsf	3,5	;RP0=1, select bank3
   747  0407  1703               	bsf	3,6	;RP1=1, select bank3
   748  0408  058C               	andwf	12,f	;volsfr
   749  0409  140C               	bsf	12,0	;volsfr
   750  040A  1003               	clrc
   751  040B  180C               	btfsc	12,0	;volsfr
   752  040C  1403               	setc
   753  040D  3000               	movlw	0
   754  040E  1803               	skipnc
   755  040F  3001               	movlw	1
   756  0410  1283               	bcf	3,5	;RP0=0, select bank2
   757  0411  1703               	bsf	3,6	;RP1=1, select bank2
   758  0412  080C               	movf	12,w	;volatile
   759  0413  0008               	return
   760  0414                     __end_of_eeprom_read:	
   761                           
   762                           	psect	text2
   763  04B4                     __ptext2:	
   764 ;; *************** function _WriteLongInt *****************
   765 ;; Defined at:
   766 ;;		line 182 in file "libs/HD44780.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  y               1    wreg     unsigned char 
   769 ;;  x               1    9[BANK0 ] unsigned char 
   770 ;;  Val             4   10[BANK0 ] unsigned long 
   771 ;;  size            1   14[BANK0 ] unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  y               1   18[BANK0 ] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       6       0       0       0
   784 ;;      Locals:         0       1       0       0       0
   785 ;;      Temps:          0       3       0       0       0
   786 ;;      Totals:         0      10       0       0       0
   787 ;;Total ram usage:       10 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		_Lcd_WriteChar
   792 ;;		___bmul
   793 ;;		___lldiv
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _WriteLongInt
   801  04B4                     _WriteLongInt:	
   802                           
   803                           ;incstack = 0
   804                           ; Regs used in _WriteLongInt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   805                           ;WriteLongInt@y stored from wreg
   806  04B4  1283               	bcf	3,5	;RP0=0, select bank0
   807  04B5  1303               	bcf	3,6	;RP1=0, select bank0
   808  04B6  00B2               	movwf	WriteLongInt@y
   809  04B7                     l1138:	
   810                           ;HD44780.c: 183: while(size) {
   811                           
   812  04B7  082E               	movf	WriteLongInt@size,w
   813  04B8  1903               	btfsc	3,2
   814  04B9  0008               	return
   815                           
   816                           ;HD44780.c: 184: size--;
   817  04BA  3001               	movlw	1
   818  04BB  02AE               	subwf	WriteLongInt@size,f
   819                           
   820                           ;HD44780.c: 185: Lcd_WriteChar (y, x+size, ((Val - ((Val/10)*10))+0x30));
   821  04BC  082E               	movf	WriteLongInt@size,w
   822  04BD  0729               	addwf	WriteLongInt@x,w
   823  04BE  00AF               	movwf	??_WriteLongInt
   824  04BF  082F               	movf	??_WriteLongInt,w
   825  04C0  00A4               	movwf	Lcd_WriteChar@x
   826  04C1  300A               	movlw	10
   827  04C2  00B0               	movwf	??_WriteLongInt+1
   828  04C3  0830               	movf	??_WriteLongInt+1,w
   829  04C4  00A0               	movwf	___bmul@multiplicand
   830  04C5  082D               	movf	WriteLongInt@Val+3,w
   831  04C6  00F7               	movwf	___lldiv@dividend+3
   832  04C7  082C               	movf	WriteLongInt@Val+2,w
   833  04C8  00F6               	movwf	___lldiv@dividend+2
   834  04C9  082B               	movf	WriteLongInt@Val+1,w
   835  04CA  00F5               	movwf	___lldiv@dividend+1
   836  04CB  082A               	movf	WriteLongInt@Val,w
   837  04CC  00F4               	movwf	___lldiv@dividend
   838  04CD  3000               	movlw	0
   839  04CE  00F3               	movwf	___lldiv@divisor+3
   840  04CF  3000               	movlw	0
   841  04D0  00F2               	movwf	___lldiv@divisor+2
   842  04D1  3000               	movlw	0
   843  04D2  00F1               	movwf	___lldiv@divisor+1
   844  04D3  300A               	movlw	10
   845  04D4  00F0               	movwf	___lldiv@divisor
   846  04D5  120A  118A  2511  120A  118A  	fcall	___lldiv
   847  04DA  0870               	movf	?___lldiv,w
   848  04DB  120A  118A  23E6  120A  118A  	fcall	___bmul
   849  04E0  3AFF               	xorlw	255
   850  04E1  3E01               	addlw	1
   851  04E2  1283               	bcf	3,5	;RP0=0, select bank0
   852  04E3  1303               	bcf	3,6	;RP1=0, select bank0
   853  04E4  072A               	addwf	WriteLongInt@Val,w
   854  04E5  3E30               	addlw	48
   855  04E6  00B1               	movwf	??_WriteLongInt+2
   856  04E7  0831               	movf	??_WriteLongInt+2,w
   857  04E8  00A5               	movwf	Lcd_WriteChar@c
   858  04E9  0832               	movf	WriteLongInt@y,w
   859  04EA  120A  118A  2414  120A  118A  	fcall	_Lcd_WriteChar
   860                           
   861                           ;HD44780.c: 186: Val = Val/10;
   862  04EF  3000               	movlw	0
   863  04F0  00F3               	movwf	___lldiv@divisor+3
   864  04F1  3000               	movlw	0
   865  04F2  00F2               	movwf	___lldiv@divisor+2
   866  04F3  3000               	movlw	0
   867  04F4  00F1               	movwf	___lldiv@divisor+1
   868  04F5  300A               	movlw	10
   869  04F6  00F0               	movwf	___lldiv@divisor
   870  04F7  1283               	bcf	3,5	;RP0=0, select bank0
   871  04F8  1303               	bcf	3,6	;RP1=0, select bank0
   872  04F9  082D               	movf	WriteLongInt@Val+3,w
   873  04FA  00F7               	movwf	___lldiv@dividend+3
   874  04FB  082C               	movf	WriteLongInt@Val+2,w
   875  04FC  00F6               	movwf	___lldiv@dividend+2
   876  04FD  082B               	movf	WriteLongInt@Val+1,w
   877  04FE  00F5               	movwf	___lldiv@dividend+1
   878  04FF  082A               	movf	WriteLongInt@Val,w
   879  0500  00F4               	movwf	___lldiv@dividend
   880  0501  120A  118A  2511  120A  118A  	fcall	___lldiv
   881  0506  0873               	movf	?___lldiv+3,w
   882  0507  1283               	bcf	3,5	;RP0=0, select bank0
   883  0508  1303               	bcf	3,6	;RP1=0, select bank0
   884  0509  00AD               	movwf	WriteLongInt@Val+3
   885  050A  0872               	movf	?___lldiv+2,w
   886  050B  00AC               	movwf	WriteLongInt@Val+2
   887  050C  0871               	movf	?___lldiv+1,w
   888  050D  00AB               	movwf	WriteLongInt@Val+1
   889  050E  0870               	movf	?___lldiv,w
   890  050F  00AA               	movwf	WriteLongInt@Val
   891  0510  2CB7               	goto	l1138
   892  0511                     __end_of_WriteLongInt:	
   893                           
   894                           	psect	text3
   895  0511                     __ptext3:	
   896 ;; *************** function ___lldiv *****************
   897 ;; Defined at:
   898 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  divisor         4    0[COMMON] unsigned long 
   901 ;;  dividend        4    4[COMMON] unsigned long 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  quotient        4    9[COMMON] unsigned long 
   904 ;;  counter         1   13[COMMON] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  4    0[COMMON] unsigned long 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         8       0       0       0       0
   915 ;;      Locals:         5       0       0       0       0
   916 ;;      Temps:          1       0       0       0       0
   917 ;;      Totals:        14       0       0       0       0
   918 ;;Total ram usage:       14 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_WriteLongInt
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function ___lldiv
   929  0511                     ___lldiv:	
   930                           
   931                           ;incstack = 0
   932                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   933  0511  3000               	movlw	0
   934  0512  00FC               	movwf	___lldiv@quotient+3
   935  0513  3000               	movlw	0
   936  0514  00FB               	movwf	___lldiv@quotient+2
   937  0515  3000               	movlw	0
   938  0516  00FA               	movwf	___lldiv@quotient+1
   939  0517  3000               	movlw	0
   940  0518  00F9               	movwf	___lldiv@quotient
   941  0519  0873               	movf	___lldiv@divisor+3,w
   942  051A  0472               	iorwf	___lldiv@divisor+2,w
   943  051B  0471               	iorwf	___lldiv@divisor+1,w
   944  051C  0470               	iorwf	___lldiv@divisor,w
   945  051D  1903               	skipnz
   946  051E  2D66               	goto	l1016
   947  051F  01FD               	clrf	___lldiv@counter
   948  0520  0AFD               	incf	___lldiv@counter,f
   949  0521                     l1002:	
   950  0521  1BF3               	btfsc	___lldiv@divisor+3,7
   951  0522  2D31               	goto	l1004
   952  0523  3001               	movlw	1
   953  0524  00F8               	movwf	??___lldiv
   954  0525                     u1175:	
   955  0525  1003               	clrc
   956  0526  0DF0               	rlf	___lldiv@divisor,f
   957  0527  0DF1               	rlf	___lldiv@divisor+1,f
   958  0528  0DF2               	rlf	___lldiv@divisor+2,f
   959  0529  0DF3               	rlf	___lldiv@divisor+3,f
   960  052A  0BF8               	decfsz	??___lldiv,f
   961  052B  2D25               	goto	u1175
   962  052C  3001               	movlw	1
   963  052D  00F8               	movwf	??___lldiv
   964  052E  0878               	movf	??___lldiv,w
   965  052F  07FD               	addwf	___lldiv@counter,f
   966  0530  2D21               	goto	l1002
   967  0531                     l1004:	
   968  0531  3001               	movlw	1
   969  0532  00F8               	movwf	??___lldiv
   970  0533                     u1195:	
   971  0533  1003               	clrc
   972  0534  0DF9               	rlf	___lldiv@quotient,f
   973  0535  0DFA               	rlf	___lldiv@quotient+1,f
   974  0536  0DFB               	rlf	___lldiv@quotient+2,f
   975  0537  0DFC               	rlf	___lldiv@quotient+3,f
   976  0538  0BF8               	decfsz	??___lldiv,f
   977  0539  2D33               	goto	u1195
   978  053A  0873               	movf	___lldiv@divisor+3,w
   979  053B  0277               	subwf	___lldiv@dividend+3,w
   980  053C  1D03               	skipz
   981  053D  2D48               	goto	u1205
   982  053E  0872               	movf	___lldiv@divisor+2,w
   983  053F  0276               	subwf	___lldiv@dividend+2,w
   984  0540  1D03               	skipz
   985  0541  2D48               	goto	u1205
   986  0542  0871               	movf	___lldiv@divisor+1,w
   987  0543  0275               	subwf	___lldiv@dividend+1,w
   988  0544  1D03               	skipz
   989  0545  2D48               	goto	u1205
   990  0546  0870               	movf	___lldiv@divisor,w
   991  0547  0274               	subwf	___lldiv@dividend,w
   992  0548                     u1205:	
   993  0548  1C03               	skipc
   994  0549  2D59               	goto	l1012
   995  054A  0870               	movf	___lldiv@divisor,w
   996  054B  02F4               	subwf	___lldiv@dividend,f
   997  054C  0871               	movf	___lldiv@divisor+1,w
   998  054D  1C03               	skipc
   999  054E  0F71               	incfsz	___lldiv@divisor+1,w
  1000  054F  02F5               	subwf	___lldiv@dividend+1,f
  1001  0550  0872               	movf	___lldiv@divisor+2,w
  1002  0551  1C03               	skipc
  1003  0552  0F72               	incfsz	___lldiv@divisor+2,w
  1004  0553  02F6               	subwf	___lldiv@dividend+2,f
  1005  0554  0873               	movf	___lldiv@divisor+3,w
  1006  0555  1C03               	skipc
  1007  0556  0F73               	incfsz	___lldiv@divisor+3,w
  1008  0557  02F7               	subwf	___lldiv@dividend+3,f
  1009  0558  1479               	bsf	___lldiv@quotient,0
  1010  0559                     l1012:	
  1011  0559  3001               	movlw	1
  1012  055A                     u1215:	
  1013  055A  1003               	clrc
  1014  055B  0CF3               	rrf	___lldiv@divisor+3,f
  1015  055C  0CF2               	rrf	___lldiv@divisor+2,f
  1016  055D  0CF1               	rrf	___lldiv@divisor+1,f
  1017  055E  0CF0               	rrf	___lldiv@divisor,f
  1018  055F  3EFF               	addlw	-1
  1019  0560  1D03               	skipz
  1020  0561  2D5A               	goto	u1215
  1021  0562  3001               	movlw	1
  1022  0563  02FD               	subwf	___lldiv@counter,f
  1023  0564  1D03               	btfss	3,2
  1024  0565  2D31               	goto	l1004
  1025  0566                     l1016:	
  1026  0566  087C               	movf	___lldiv@quotient+3,w
  1027  0567  00F3               	movwf	?___lldiv+3
  1028  0568  087B               	movf	___lldiv@quotient+2,w
  1029  0569  00F2               	movwf	?___lldiv+2
  1030  056A  087A               	movf	___lldiv@quotient+1,w
  1031  056B  00F1               	movwf	?___lldiv+1
  1032  056C  0879               	movf	___lldiv@quotient,w
  1033  056D  00F0               	movwf	?___lldiv
  1034  056E  0008               	return
  1035  056F                     __end_of___lldiv:	
  1036                           
  1037                           	psect	text4
  1038  03E6                     __ptext4:	
  1039 ;; *************** function ___bmul *****************
  1040 ;; Defined at:
  1041 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  multiplier      1    wreg     unsigned char 
  1044 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1047 ;;  product         1    2[BANK0 ] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      unsigned char 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       1       0       0       0
  1058 ;;      Locals:         0       2       0       0       0
  1059 ;;      Temps:          0       1       0       0       0
  1060 ;;      Totals:         0       4       0       0       0
  1061 ;;Total ram usage:        4 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_WriteLongInt
  1067 ;;		_Lcd_Int
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function ___bmul
  1073  03E6                     ___bmul:	
  1074                           
  1075                           ;incstack = 0
  1076                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1077                           ;___bmul@multiplier stored from wreg
  1078  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1079  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1080  03E8  00A3               	movwf	___bmul@multiplier
  1081  03E9  01A2               	clrf	___bmul@product
  1082  03EA                     l984:	
  1083  03EA  1C23               	btfss	___bmul@multiplier,0
  1084  03EB  2BF0               	goto	l988
  1085  03EC  0820               	movf	___bmul@multiplicand,w
  1086  03ED  00A1               	movwf	??___bmul
  1087  03EE  0821               	movf	??___bmul,w
  1088  03EF  07A2               	addwf	___bmul@product,f
  1089  03F0                     l988:	
  1090  03F0  1003               	clrc
  1091  03F1  0DA0               	rlf	___bmul@multiplicand,f
  1092  03F2  1003               	clrc
  1093  03F3  0CA3               	rrf	___bmul@multiplier,f
  1094  03F4  0823               	movf	___bmul@multiplier,w
  1095  03F5  1D03               	btfss	3,2
  1096  03F6  2BEA               	goto	l984
  1097  03F7  0822               	movf	___bmul@product,w
  1098  03F8  0008               	return
  1099  03F9                     __end_of___bmul:	
  1100                           
  1101                           	psect	text5
  1102  0414                     __ptext5:	
  1103 ;; *************** function _Lcd_WriteChar *****************
  1104 ;; Defined at:
  1105 ;;		line 99 in file "libs/HD44780.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  y               1    wreg     unsigned char 
  1108 ;;  x               1    4[BANK0 ] unsigned char 
  1109 ;;  c               1    5[BANK0 ] unsigned char 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  y               1    7[BANK0 ] unsigned char 
  1112 ;;  data            1    8[BANK0 ] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       2       0       0       0
  1123 ;;      Locals:         0       2       0       0       0
  1124 ;;      Temps:          0       1       0       0       0
  1125 ;;      Totals:         0       5       0       0       0
  1126 ;;Total ram usage:        5 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    2
  1129 ;; This function calls:
  1130 ;;		_Lcd_CharCP
  1131 ;;		_Lcd_Command
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;;		_WriteLongInt
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _Lcd_WriteChar
  1140  0414                     _Lcd_WriteChar:	
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1144                           ;Lcd_WriteChar@y stored from wreg
  1145  0414  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0415  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0416  00A7               	movwf	Lcd_WriteChar@y
  1148                           
  1149                           ;HD44780.c: 100: unsigned char data;
  1150                           ;HD44780.c: 101: switch(y){
  1151  0417  2C27               	goto	l978
  1152  0418                     l968:	
  1153                           ;HD44780.c: 102: case 1: data = 127 + x; break;
  1154                           
  1155  0418  0824               	movf	Lcd_WriteChar@x,w
  1156  0419  3E7F               	addlw	127
  1157  041A  2C23               	goto	L3
  1158  041B                     l970:	
  1159                           ;HD44780.c: 103: case 2: data = 191 + x; break;
  1160                           
  1161  041B  0824               	movf	Lcd_WriteChar@x,w
  1162  041C  3EBF               	addlw	191
  1163  041D  2C23               	goto	L3
  1164  041E                     l972:	
  1165                           ;HD44780.c: 104: case 3: data = 147 + x; break;
  1166                           
  1167  041E  0824               	movf	Lcd_WriteChar@x,w
  1168  041F  3E93               	addlw	147
  1169  0420  2C23               	goto	L3
  1170  0421                     l974:	
  1171                           ;HD44780.c: 105: case 4: data = 211 + x; break;
  1172                           
  1173  0421  0824               	movf	Lcd_WriteChar@x,w
  1174  0422  3ED3               	addlw	211
  1175  0423                     L3:	
  1176  0423  00A6               	movwf	??_Lcd_WriteChar
  1177  0424  0826               	movf	??_Lcd_WriteChar,w
  1178  0425  00A8               	movwf	Lcd_WriteChar@data
  1179                           
  1180                           ;HD44780.c: 106: default: break;}
  1181  0426  2C35               	goto	l980
  1182  0427                     l978:	
  1183  0427  0827               	movf	Lcd_WriteChar@y,w
  1184                           
  1185                           ; Switch size 1, requested type "space"
  1186                           ; Number of cases is 4, Range of values is 1 to 4
  1187                           ; switch strategies available:
  1188                           ; Name         Instructions Cycles
  1189                           ; simple_byte           13     7 (average)
  1190                           ; direct_byte           23    11 (fixed)
  1191                           ; jumptable            263     9 (fixed)
  1192                           ;	Chosen strategy is simple_byte
  1193  0428  3A01               	xorlw	1	; case 1
  1194  0429  1903               	skipnz
  1195  042A  2C18               	goto	l968
  1196  042B  3A03               	xorlw	3	; case 2
  1197  042C  1903               	skipnz
  1198  042D  2C1B               	goto	l970
  1199  042E  3A01               	xorlw	1	; case 3
  1200  042F  1903               	skipnz
  1201  0430  2C1E               	goto	l972
  1202  0431  3A07               	xorlw	7	; case 4
  1203  0432  1903               	skipnz
  1204  0433  2C21               	goto	l974
  1205  0434  2C35               	goto	l980
  1206  0435                     l980:	
  1207                           
  1208                           ;HD44780.c: 107: Lcd_Command(data);
  1209  0435  0828               	movf	Lcd_WriteChar@data,w
  1210  0436  120A  118A  269D  120A  118A  	fcall	_Lcd_Command
  1211                           
  1212                           ;HD44780.c: 108: Lcd_CharCP(c);
  1213  043B  1283               	bcf	3,5	;RP0=0, select bank0
  1214  043C  1303               	bcf	3,6	;RP1=0, select bank0
  1215  043D  0825               	movf	Lcd_WriteChar@c,w
  1216  043E  120A  118A  2744   	fcall	_Lcd_CharCP
  1217  0441  0008               	return
  1218  0442                     __end_of_Lcd_WriteChar:	
  1219                           
  1220                           	psect	text6
  1221  0474                     __ptext6:	
  1222 ;; *************** function _Lcd_Text *****************
  1223 ;; Defined at:
  1224 ;;		line 76 in file "libs/HD44780.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  y               1    wreg     unsigned char 
  1227 ;;  x               1    4[COMMON] unsigned char 
  1228 ;;  buffer          1    5[COMMON] PTR unsigned char 
  1229 ;;		 -> STR_2(2), STR_1(8), 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  y               1    7[COMMON] unsigned char 
  1232 ;;  data            1    8[COMMON] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         2       0       0       0       0
  1243 ;;      Locals:         2       0       0       0       0
  1244 ;;      Temps:          1       0       0       0       0
  1245 ;;      Totals:         5       0       0       0       0
  1246 ;;Total ram usage:        5 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    2
  1249 ;; This function calls:
  1250 ;;		_Lcd_CharCP
  1251 ;;		_Lcd_Command
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _Lcd_Text
  1259  0474                     _Lcd_Text:	
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _Lcd_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1263                           ;Lcd_Text@y stored from wreg
  1264  0474  00F7               	movwf	Lcd_Text@y
  1265                           
  1266                           ;HD44780.c: 77: unsigned char data;
  1267                           ;HD44780.c: 78: switch(y){
  1268  0475  2C85               	goto	l1120
  1269  0476                     l1110:	
  1270                           ;HD44780.c: 79: case 1: data = 127 + x; break;
  1271                           
  1272  0476  0874               	movf	Lcd_Text@x,w
  1273  0477  3E7F               	addlw	127
  1274  0478  2C81               	goto	L6
  1275  0479                     l1112:	
  1276                           ;HD44780.c: 80: case 2: data = 191 + x; break;
  1277                           
  1278  0479  0874               	movf	Lcd_Text@x,w
  1279  047A  3EBF               	addlw	191
  1280  047B  2C81               	goto	L6
  1281  047C                     l1114:	
  1282                           ;HD44780.c: 81: case 3: data = 147 + x; break;
  1283                           
  1284  047C  0874               	movf	Lcd_Text@x,w
  1285  047D  3E93               	addlw	147
  1286  047E  2C81               	goto	L6
  1287  047F                     l1116:	
  1288                           ;HD44780.c: 82: case 4: data = 211 + x; break;
  1289                           
  1290  047F  0874               	movf	Lcd_Text@x,w
  1291  0480  3ED3               	addlw	211
  1292  0481                     L6:	
  1293  0481  00F6               	movwf	??_Lcd_Text
  1294  0482  0876               	movf	??_Lcd_Text,w
  1295  0483  00F8               	movwf	Lcd_Text@data
  1296                           
  1297                           ;HD44780.c: 83: default: break;}
  1298  0484  2C93               	goto	l1122
  1299  0485                     l1120:	
  1300  0485  0877               	movf	Lcd_Text@y,w
  1301                           
  1302                           ; Switch size 1, requested type "space"
  1303                           ; Number of cases is 4, Range of values is 1 to 4
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte           13     7 (average)
  1307                           ; direct_byte           23    11 (fixed)
  1308                           ; jumptable            263     9 (fixed)
  1309                           ;	Chosen strategy is simple_byte
  1310  0486  3A01               	xorlw	1	; case 1
  1311  0487  1903               	skipnz
  1312  0488  2C76               	goto	l1110
  1313  0489  3A03               	xorlw	3	; case 2
  1314  048A  1903               	skipnz
  1315  048B  2C79               	goto	l1112
  1316  048C  3A01               	xorlw	1	; case 3
  1317  048D  1903               	skipnz
  1318  048E  2C7C               	goto	l1114
  1319  048F  3A07               	xorlw	7	; case 4
  1320  0490  1903               	skipnz
  1321  0491  2C7F               	goto	l1116
  1322  0492  2C93               	goto	l1122
  1323  0493                     l1122:	
  1324                           
  1325                           ;HD44780.c: 84: Lcd_Command(data);
  1326  0493  0878               	movf	Lcd_Text@data,w
  1327  0494  120A  118A  269D  120A  118A  	fcall	_Lcd_Command
  1328  0499                     l1128:	
  1329                           ;HD44780.c: 85: while(*buffer)
  1330                           
  1331  0499  0875               	movf	Lcd_Text@buffer,w
  1332  049A  0084               	movwf	4
  1333  049B  120A  118A  2003  120A  118A  	fcall	stringdir
  1334  04A0  3A00               	xorlw	0
  1335  04A1  1903               	btfsc	3,2
  1336  04A2  0008               	return
  1337                           
  1338                           ;HD44780.c: 86: {
  1339                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  1340  04A3  0875               	movf	Lcd_Text@buffer,w
  1341  04A4  0084               	movwf	4
  1342  04A5  120A  118A  2003  120A  118A  	fcall	stringdir
  1343  04AA  120A  118A  2744  120A  118A  	fcall	_Lcd_CharCP
  1344                           
  1345                           ;HD44780.c: 88: buffer++;
  1346  04AF  3001               	movlw	1
  1347  04B0  00F6               	movwf	??_Lcd_Text
  1348  04B1  0876               	movf	??_Lcd_Text,w
  1349  04B2  07F5               	addwf	Lcd_Text@buffer,f
  1350  04B3  2C99               	goto	l1128
  1351  04B4                     __end_of_Lcd_Text:	
  1352                           ;HD44780.c: 89: }
  1353                           ;HD44780.c: 90: return;
  1354                           
  1355                           
  1356                           	psect	text7
  1357  0744                     __ptext7:	
  1358 ;; *************** function _Lcd_CharCP *****************
  1359 ;; Defined at:
  1360 ;;		line 115 in file "libs/HD44780.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  c               1    wreg     unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  c               1    3[COMMON] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         1       0       0       0       0
  1376 ;;      Temps:          1       0       0       0       0
  1377 ;;      Totals:         2       0       0       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    1
  1381 ;; This function calls:
  1382 ;;		_Lcd_Delay5500us
  1383 ;;		_Lcd_Delay5us
  1384 ;; This function is called by:
  1385 ;;		_Lcd_Text
  1386 ;;		_Lcd_WriteChar
  1387 ;;		_Lcd_ConstText
  1388 ;;		_Lcd_Int
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function _Lcd_CharCP
  1394  0744                     _Lcd_CharCP:	
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0+pclath+cstack]
  1398                           ;Lcd_CharCP@c stored from wreg
  1399  0744  00F3               	movwf	Lcd_CharCP@c
  1400                           
  1401                           ;HD44780.c: 116: RB4 = 0; RB5 = 1;
  1402  0745  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0746  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0747  1206               	bcf	6,4	;volatile
  1405  0748  1686               	bsf	6,5	;volatile
  1406                           
  1407                           ;HD44780.c: 117: RB3 = (c & 0b10000000)>>7; RB2 = (c & 0b01000000)>>6;
  1408  0749  0873               	movf	Lcd_CharCP@c,w
  1409  074A  00F2               	movwf	??_Lcd_CharCP
  1410  074B  3007               	movlw	7
  1411  074C                     u915:	
  1412  074C  1003               	clrc
  1413  074D  0CF2               	rrf	??_Lcd_CharCP,f
  1414  074E  3EFF               	addlw	-1
  1415  074F  1D03               	skipz
  1416  0750  2F4C               	goto	u915
  1417  0751  1C72               	btfss	??_Lcd_CharCP,0
  1418  0752  2F57               	goto	u920
  1419  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1420  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1421  0755  1586               	bsf	6,3	;volatile
  1422  0756  2F5A               	goto	u934
  1423  0757                     u920:	
  1424  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0759  1186               	bcf	6,3	;volatile
  1427  075A                     u934:	
  1428  075A  0873               	movf	Lcd_CharCP@c,w
  1429  075B  00F2               	movwf	??_Lcd_CharCP
  1430  075C  3006               	movlw	6
  1431  075D                     u945:	
  1432  075D  1003               	clrc
  1433  075E  0CF2               	rrf	??_Lcd_CharCP,f
  1434  075F  3EFF               	addlw	-1
  1435  0760  1D03               	skipz
  1436  0761  2F5D               	goto	u945
  1437  0762  1C72               	btfss	??_Lcd_CharCP,0
  1438  0763  2F68               	goto	u950
  1439  0764  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0765  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0766  1506               	bsf	6,2	;volatile
  1442  0767  2F6B               	goto	u964
  1443  0768                     u950:	
  1444  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1446  076A  1106               	bcf	6,2	;volatile
  1447  076B                     u964:	
  1448                           
  1449                           ;HD44780.c: 118: RB1 = (c & 0b00100000)>>5; RB0 = (c & 0b00010000)>>4;
  1450  076B  0873               	movf	Lcd_CharCP@c,w
  1451  076C  00F2               	movwf	??_Lcd_CharCP
  1452  076D  3005               	movlw	5
  1453  076E                     u975:	
  1454  076E  1003               	clrc
  1455  076F  0CF2               	rrf	??_Lcd_CharCP,f
  1456  0770  3EFF               	addlw	-1
  1457  0771  1D03               	skipz
  1458  0772  2F6E               	goto	u975
  1459  0773  1C72               	btfss	??_Lcd_CharCP,0
  1460  0774  2F79               	goto	u980
  1461  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0777  1486               	bsf	6,1	;volatile
  1464  0778  2F7C               	goto	u994
  1465  0779                     u980:	
  1466  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1467  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1468  077B  1086               	bcf	6,1	;volatile
  1469  077C                     u994:	
  1470  077C  0873               	movf	Lcd_CharCP@c,w
  1471  077D  00F2               	movwf	??_Lcd_CharCP
  1472  077E  3004               	movlw	4
  1473  077F                     u1005:	
  1474  077F  1003               	clrc
  1475  0780  0CF2               	rrf	??_Lcd_CharCP,f
  1476  0781  3EFF               	addlw	-1
  1477  0782  1D03               	skipz
  1478  0783  2F7F               	goto	u1005
  1479  0784  1C72               	btfss	??_Lcd_CharCP,0
  1480  0785  2F8A               	goto	u1010
  1481  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0788  1406               	bsf	6,0	;volatile
  1484  0789  2F8D               	goto	l944
  1485  078A                     u1010:	
  1486  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1487  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1488  078C  1006               	bcf	6,0	;volatile
  1489  078D                     l944:	
  1490                           
  1491                           ;HD44780.c: 119: _delay(10);
  1492  078D  3003               	movlw	3
  1493  078E  00F2               	movwf	??_Lcd_CharCP
  1494  078F                     u1367:	
  1495  078F  0BF2               	decfsz	??_Lcd_CharCP,f
  1496  0790  2F8F               	goto	u1367
  1497                           
  1498                           ;HD44780.c: 120: RB4 = 1; Lcd_Delay5us(); RB4 = 0;
  1499  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0793  1606               	bsf	6,4	;volatile
  1502  0794  120A  118A  23C2  120A  118A  	fcall	_Lcd_Delay5us
  1503  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1504  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1505  079B  1206               	bcf	6,4	;volatile
  1506                           
  1507                           ;HD44780.c: 121: RB3 = (c & 0b00001000)>>3; RB2 = (c & 0b00000100)>>2;
  1508  079C  0873               	movf	Lcd_CharCP@c,w
  1509  079D  00F2               	movwf	??_Lcd_CharCP
  1510  079E  3003               	movlw	3
  1511  079F                     u1035:	
  1512  079F  1003               	clrc
  1513  07A0  0CF2               	rrf	??_Lcd_CharCP,f
  1514  07A1  3EFF               	addlw	-1
  1515  07A2  1D03               	skipz
  1516  07A3  2F9F               	goto	u1035
  1517  07A4  1C72               	btfss	??_Lcd_CharCP,0
  1518  07A5  2FAA               	goto	u1040
  1519  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1520  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1521  07A8  1586               	bsf	6,3	;volatile
  1522  07A9  2FAD               	goto	l954
  1523  07AA                     u1040:	
  1524  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1525  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1526  07AC  1186               	bcf	6,3	;volatile
  1527  07AD                     l954:	
  1528  07AD  0873               	movf	Lcd_CharCP@c,w
  1529  07AE  00F2               	movwf	??_Lcd_CharCP
  1530  07AF  3002               	movlw	2
  1531  07B0                     u1065:	
  1532  07B0  1003               	clrc
  1533  07B1  0CF2               	rrf	??_Lcd_CharCP,f
  1534  07B2  3EFF               	addlw	-1
  1535  07B3  1D03               	skipz
  1536  07B4  2FB0               	goto	u1065
  1537  07B5  1C72               	btfss	??_Lcd_CharCP,0
  1538  07B6  2FBB               	goto	u1070
  1539  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1540  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1541  07B9  1506               	bsf	6,2	;volatile
  1542  07BA  2FBE               	goto	l956
  1543  07BB                     u1070:	
  1544  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1545  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1546  07BD  1106               	bcf	6,2	;volatile
  1547  07BE                     l956:	
  1548                           
  1549                           ;HD44780.c: 122: RB1 = (c & 0b00000010)>>1; RB0 = (c & 0b00000001);
  1550  07BE  0873               	movf	Lcd_CharCP@c,w
  1551  07BF  00F2               	movwf	??_Lcd_CharCP
  1552  07C0  3001               	movlw	1
  1553  07C1                     u1095:	
  1554  07C1  1003               	clrc
  1555  07C2  0CF2               	rrf	??_Lcd_CharCP,f
  1556  07C3  3EFF               	addlw	-1
  1557  07C4  1D03               	skipz
  1558  07C5  2FC1               	goto	u1095
  1559  07C6  1C72               	btfss	??_Lcd_CharCP,0
  1560  07C7  2FCC               	goto	u1100
  1561  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1562  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1563  07CA  1486               	bsf	6,1	;volatile
  1564  07CB  2FCF               	goto	l958
  1565  07CC                     u1100:	
  1566  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1567  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1568  07CE  1086               	bcf	6,1	;volatile
  1569  07CF                     l958:	
  1570  07CF  1C73               	btfss	Lcd_CharCP@c,0
  1571  07D0  2FD5               	goto	u1120
  1572  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1573  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1574  07D3  1406               	bsf	6,0	;volatile
  1575  07D4  2FD8               	goto	l960
  1576  07D5                     u1120:	
  1577  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1578  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1579  07D7  1006               	bcf	6,0	;volatile
  1580  07D8                     l960:	
  1581                           
  1582                           ;HD44780.c: 123: _delay(10);
  1583  07D8  3003               	movlw	3
  1584  07D9  00F2               	movwf	??_Lcd_CharCP
  1585  07DA                     u1377:	
  1586  07DA  0BF2               	decfsz	??_Lcd_CharCP,f
  1587  07DB  2FDA               	goto	u1377
  1588                           
  1589                           ;HD44780.c: 124: RB4 = 1; Lcd_Delay5us(); RB4 = 0;
  1590  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1591  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1592  07DE  1606               	bsf	6,4	;volatile
  1593  07DF  120A  118A  23C2  120A  118A  	fcall	_Lcd_Delay5us
  1594  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  1595  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  1596  07E6  1206               	bcf	6,4	;volatile
  1597                           
  1598                           ;HD44780.c: 125: Lcd_Delay5us(); Lcd_Delay5500us();
  1599  07E7  120A  118A  23C2  120A  118A  	fcall	_Lcd_Delay5us
  1600  07EC  120A  118A  23CB   	fcall	_Lcd_Delay5500us
  1601  07EF  0008               	return
  1602  07F0                     __end_of_Lcd_CharCP:	
  1603                           
  1604                           	psect	text8
  1605  05F8                     __ptext8:	
  1606 ;; *************** function _Lcd_Init *****************
  1607 ;; Defined at:
  1608 ;;		line 17 in file "libs/HD44780.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  data            1    5[COMMON] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, pclath, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         0       0       0       0       0
  1623 ;;      Locals:         1       0       0       0       0
  1624 ;;      Temps:          1       0       0       0       0
  1625 ;;      Totals:         2       0       0       0       0
  1626 ;;Total ram usage:        2 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    2
  1629 ;; This function calls:
  1630 ;;		_Lcd_Command
  1631 ;;		_Lcd_Delay5500us
  1632 ;;		_Lcd_Delay5us
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _Lcd_Init
  1640  05F8                     _Lcd_Init:	
  1641                           
  1642                           ;HD44780.c: 19: ANSEL = 0x00;
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1646  05F8  1683               	bsf	3,5	;RP0=1, select bank3
  1647  05F9  1703               	bsf	3,6	;RP1=1, select bank3
  1648  05FA  0188               	clrf	8	;volatile
  1649                           
  1650                           ;HD44780.c: 20: ANSELH = 0x00;
  1651  05FB  0189               	clrf	9	;volatile
  1652                           
  1653                           ;HD44780.c: 23: unsigned char data;
  1654                           ;HD44780.c: 24: TRISBbits.TRISB3 = 0; TRISBbits.TRISB2 = 0; TRISBbits.TRISB1 = 0; TRISBb
      +                          its.TRISB0 = 0; TRISBbits.TRISB4 = 0; TRISBbits.TRISB5 = 0;
  1655  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  1656  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  1657  05FE  1186               	bcf	6,3	;volatile
  1658  05FF  1106               	bcf	6,2	;volatile
  1659  0600  1086               	bcf	6,1	;volatile
  1660  0601  1006               	bcf	6,0	;volatile
  1661  0602  1206               	bcf	6,4	;volatile
  1662  0603  1286               	bcf	6,5	;volatile
  1663                           
  1664                           ;HD44780.c: 25: RB3 = 0; RB2 = 0; RB1 = 0; RB0 = 0; RB4 = 0; RB5 = 0;
  1665  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0606  1186               	bcf	6,3	;volatile
  1668  0607  1106               	bcf	6,2	;volatile
  1669  0608  1086               	bcf	6,1	;volatile
  1670  0609  1006               	bcf	6,0	;volatile
  1671  060A  1206               	bcf	6,4	;volatile
  1672  060B  1286               	bcf	6,5	;volatile
  1673                           
  1674                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  1675  060C  120A  118A  23CB  120A  118A  	fcall	_Lcd_Delay5500us
  1676  0611  120A  118A  23CB  120A  118A  	fcall	_Lcd_Delay5500us
  1677  0616  120A  118A  23CB  120A  118A  	fcall	_Lcd_Delay5500us
  1678                           
  1679                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  1680  061B  120A  118A  23CB  120A  118A  	fcall	_Lcd_Delay5500us
  1681  0620  120A  118A  23CB  120A  118A  	fcall	_Lcd_Delay5500us
  1682  0625  120A  118A  23CB  120A  118A  	fcall	_Lcd_Delay5500us
  1683                           
  1684                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  1685  062A  01F5               	clrf	Lcd_Init@data
  1686  062B  0AF5               	incf	Lcd_Init@data,f
  1687  062C  3004               	movlw	4
  1688  062D  0275               	subwf	Lcd_Init@data,w
  1689  062E  1803               	btfsc	3,0
  1690  062F  2E58               	goto	l54
  1691  0630                     l53:	
  1692                           
  1693                           ;HD44780.c: 29: {
  1694                           ;HD44780.c: 30: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 1; RB4 = 0; RB5 = 0;
  1695  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0632  1186               	bcf	6,3	;volatile
  1698  0633  1106               	bcf	6,2	;volatile
  1699  0634  1486               	bsf	6,1	;volatile
  1700  0635  1406               	bsf	6,0	;volatile
  1701  0636  1206               	bcf	6,4	;volatile
  1702  0637  1286               	bcf	6,5	;volatile
  1703                           
  1704                           ;HD44780.c: 31: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 1; RB4 = 1; RB5 = 0;
  1705  0638  1186               	bcf	6,3	;volatile
  1706  0639  1106               	bcf	6,2	;volatile
  1707  063A  1486               	bsf	6,1	;volatile
  1708  063B  1406               	bsf	6,0	;volatile
  1709  063C  1606               	bsf	6,4	;volatile
  1710  063D  1286               	bcf	6,5	;volatile
  1711                           
  1712                           ;HD44780.c: 32: Lcd_Delay5us();
  1713  063E  120A  118A  23C2  120A  118A  	fcall	_Lcd_Delay5us
  1714                           
  1715                           ;HD44780.c: 33: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 1; RB4 = 0; RB5 = 0;
  1716  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0645  1186               	bcf	6,3	;volatile
  1719  0646  1106               	bcf	6,2	;volatile
  1720  0647  1486               	bsf	6,1	;volatile
  1721  0648  1406               	bsf	6,0	;volatile
  1722  0649  1206               	bcf	6,4	;volatile
  1723  064A  1286               	bcf	6,5	;volatile
  1724                           
  1725                           ;HD44780.c: 34: Lcd_Delay5500us();
  1726  064B  120A  118A  23CB  120A  118A  	fcall	_Lcd_Delay5500us
  1727  0650  3001               	movlw	1
  1728  0651  00F4               	movwf	??_Lcd_Init
  1729  0652  0874               	movf	??_Lcd_Init,w
  1730  0653  07F5               	addwf	Lcd_Init@data,f
  1731  0654  3004               	movlw	4
  1732  0655  0275               	subwf	Lcd_Init@data,w
  1733  0656  1C03               	skipc
  1734  0657  2E30               	goto	l53
  1735  0658                     l54:	
  1736                           
  1737                           ;HD44780.c: 35: }
  1738                           ;HD44780.c: 36: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 0; RB4 = 0; RB5 = 0;
  1739  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1741  065A  1186               	bcf	6,3	;volatile
  1742  065B  1106               	bcf	6,2	;volatile
  1743  065C  1486               	bsf	6,1	;volatile
  1744  065D  1006               	bcf	6,0	;volatile
  1745  065E  1206               	bcf	6,4	;volatile
  1746  065F  1286               	bcf	6,5	;volatile
  1747                           
  1748                           ;HD44780.c: 37: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 0; RB4 = 1; RB5 = 0;
  1749  0660  1186               	bcf	6,3	;volatile
  1750  0661  1106               	bcf	6,2	;volatile
  1751  0662  1486               	bsf	6,1	;volatile
  1752  0663  1006               	bcf	6,0	;volatile
  1753  0664  1606               	bsf	6,4	;volatile
  1754  0665  1286               	bcf	6,5	;volatile
  1755                           
  1756                           ;HD44780.c: 38: Lcd_Delay5us();
  1757  0666  120A  118A  23C2  120A  118A  	fcall	_Lcd_Delay5us
  1758                           
  1759                           ;HD44780.c: 39: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 0; RB4 = 0; RB5 = 0;
  1760  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1761  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1762  066D  1186               	bcf	6,3	;volatile
  1763  066E  1106               	bcf	6,2	;volatile
  1764  066F  1486               	bsf	6,1	;volatile
  1765  0670  1006               	bcf	6,0	;volatile
  1766  0671  1206               	bcf	6,4	;volatile
  1767  0672  1286               	bcf	6,5	;volatile
  1768                           
  1769                           ;HD44780.c: 40: Lcd_Delay5500us();
  1770  0673  120A  118A  23CB  120A  118A  	fcall	_Lcd_Delay5500us
  1771                           
  1772                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  1773  0678  3028               	movlw	40
  1774  0679  00F4               	movwf	??_Lcd_Init
  1775  067A  0874               	movf	??_Lcd_Init,w
  1776  067B  00F5               	movwf	Lcd_Init@data
  1777  067C  0875               	movf	Lcd_Init@data,w
  1778  067D  120A  118A  269D  120A  118A  	fcall	_Lcd_Command
  1779                           
  1780                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  1781  0682  3010               	movlw	16
  1782  0683  00F4               	movwf	??_Lcd_Init
  1783  0684  0874               	movf	??_Lcd_Init,w
  1784  0685  00F5               	movwf	Lcd_Init@data
  1785  0686  0875               	movf	Lcd_Init@data,w
  1786  0687  120A  118A  269D  120A  118A  	fcall	_Lcd_Command
  1787                           
  1788                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  1789  068C  01F5               	clrf	Lcd_Init@data
  1790  068D  0AF5               	incf	Lcd_Init@data,f
  1791  068E  0875               	movf	Lcd_Init@data,w
  1792  068F  120A  118A  269D  120A  118A  	fcall	_Lcd_Command
  1793                           
  1794                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  1795  0694  300F               	movlw	15
  1796  0695  00F4               	movwf	??_Lcd_Init
  1797  0696  0874               	movf	??_Lcd_Init,w
  1798  0697  00F5               	movwf	Lcd_Init@data
  1799  0698  0875               	movf	Lcd_Init@data,w
  1800  0699  120A  118A  269D   	fcall	_Lcd_Command
  1801  069C  0008               	return
  1802  069D                     __end_of_Lcd_Init:	
  1803                           
  1804                           	psect	text9
  1805  069D                     __ptext9:	
  1806 ;; *************** function _Lcd_Command *****************
  1807 ;; Defined at:
  1808 ;;		line 132 in file "libs/HD44780.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  command         1    wreg     unsigned char 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  command         1    3[COMMON] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0, pclath, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         1       0       0       0       0
  1824 ;;      Temps:          1       0       0       0       0
  1825 ;;      Totals:         2       0       0       0       0
  1826 ;;Total ram usage:        2 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    1
  1829 ;; This function calls:
  1830 ;;		_Lcd_Delay5500us
  1831 ;;		_Lcd_Delay5us
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;;		_Lcd_Init
  1835 ;;		_Lcd_Text
  1836 ;;		_Lcd_WriteChar
  1837 ;;		_Lcd_ConstText
  1838 ;;		_Lcd_Int
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           
  1843                           ;psect for function _Lcd_Command
  1844  069D                     _Lcd_Command:	
  1845                           
  1846                           ;incstack = 0
  1847                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+pclath+cstack]
  1848                           ;Lcd_Command@command stored from wreg
  1849  069D  00F3               	movwf	Lcd_Command@command
  1850                           
  1851                           ;HD44780.c: 133: RB4 = 0; RB5 = 0;
  1852  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1853  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1854  06A0  1206               	bcf	6,4	;volatile
  1855  06A1  1286               	bcf	6,5	;volatile
  1856                           
  1857                           ;HD44780.c: 134: RB3 = (command & 0b10000000)>>7; RB2 = (command & 0b01000000)>>6;
  1858  06A2  0873               	movf	Lcd_Command@command,w
  1859  06A3  00F2               	movwf	??_Lcd_Command
  1860  06A4  3007               	movlw	7
  1861  06A5                     u685:	
  1862  06A5  1003               	clrc
  1863  06A6  0CF2               	rrf	??_Lcd_Command,f
  1864  06A7  3EFF               	addlw	-1
  1865  06A8  1D03               	skipz
  1866  06A9  2EA5               	goto	u685
  1867  06AA  1C72               	btfss	??_Lcd_Command,0
  1868  06AB  2EB0               	goto	u690
  1869  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1870  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1871  06AE  1586               	bsf	6,3	;volatile
  1872  06AF  2EB3               	goto	u704
  1873  06B0                     u690:	
  1874  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1875  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1876  06B2  1186               	bcf	6,3	;volatile
  1877  06B3                     u704:	
  1878  06B3  0873               	movf	Lcd_Command@command,w
  1879  06B4  00F2               	movwf	??_Lcd_Command
  1880  06B5  3006               	movlw	6
  1881  06B6                     u715:	
  1882  06B6  1003               	clrc
  1883  06B7  0CF2               	rrf	??_Lcd_Command,f
  1884  06B8  3EFF               	addlw	-1
  1885  06B9  1D03               	skipz
  1886  06BA  2EB6               	goto	u715
  1887  06BB  1C72               	btfss	??_Lcd_Command,0
  1888  06BC  2EC1               	goto	u720
  1889  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1890  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1891  06BF  1506               	bsf	6,2	;volatile
  1892  06C0  2EC4               	goto	u734
  1893  06C1                     u720:	
  1894  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1895  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1896  06C3  1106               	bcf	6,2	;volatile
  1897  06C4                     u734:	
  1898                           
  1899                           ;HD44780.c: 135: RB1 = (command & 0b00100000)>>5; RB0 = (command & 0b00010000)>>4;
  1900  06C4  0873               	movf	Lcd_Command@command,w
  1901  06C5  00F2               	movwf	??_Lcd_Command
  1902  06C6  3005               	movlw	5
  1903  06C7                     u745:	
  1904  06C7  1003               	clrc
  1905  06C8  0CF2               	rrf	??_Lcd_Command,f
  1906  06C9  3EFF               	addlw	-1
  1907  06CA  1D03               	skipz
  1908  06CB  2EC7               	goto	u745
  1909  06CC  1C72               	btfss	??_Lcd_Command,0
  1910  06CD  2ED2               	goto	u750
  1911  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1912  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1913  06D0  1486               	bsf	6,1	;volatile
  1914  06D1  2ED5               	goto	u764
  1915  06D2                     u750:	
  1916  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1917  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1918  06D4  1086               	bcf	6,1	;volatile
  1919  06D5                     u764:	
  1920  06D5  0873               	movf	Lcd_Command@command,w
  1921  06D6  00F2               	movwf	??_Lcd_Command
  1922  06D7  3004               	movlw	4
  1923  06D8                     u775:	
  1924  06D8  1003               	clrc
  1925  06D9  0CF2               	rrf	??_Lcd_Command,f
  1926  06DA  3EFF               	addlw	-1
  1927  06DB  1D03               	skipz
  1928  06DC  2ED8               	goto	u775
  1929  06DD  1C72               	btfss	??_Lcd_Command,0
  1930  06DE  2EE3               	goto	u780
  1931  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1932  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1933  06E1  1406               	bsf	6,0	;volatile
  1934  06E2  2EE6               	goto	l918
  1935  06E3                     u780:	
  1936  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1937  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1938  06E5  1006               	bcf	6,0	;volatile
  1939  06E6                     l918:	
  1940                           
  1941                           ;HD44780.c: 136: _delay(10);
  1942  06E6  3003               	movlw	3
  1943  06E7  00F2               	movwf	??_Lcd_Command
  1944  06E8                     u1387:	
  1945  06E8  0BF2               	decfsz	??_Lcd_Command,f
  1946  06E9  2EE8               	goto	u1387
  1947                           
  1948                           ;HD44780.c: 137: RB4 = 1; Lcd_Delay5us(); RB4 = 0;
  1949  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1950  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1951  06EC  1606               	bsf	6,4	;volatile
  1952  06ED  120A  118A  23C2  120A  118A  	fcall	_Lcd_Delay5us
  1953  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1954  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1955  06F4  1206               	bcf	6,4	;volatile
  1956                           
  1957                           ;HD44780.c: 138: RB3 = (command & 0b00001000)>>3; RB2 = (command & 0b00000100)>>2;
  1958  06F5  0873               	movf	Lcd_Command@command,w
  1959  06F6  00F2               	movwf	??_Lcd_Command
  1960  06F7  3003               	movlw	3
  1961  06F8                     u805:	
  1962  06F8  1003               	clrc
  1963  06F9  0CF2               	rrf	??_Lcd_Command,f
  1964  06FA  3EFF               	addlw	-1
  1965  06FB  1D03               	skipz
  1966  06FC  2EF8               	goto	u805
  1967  06FD  1C72               	btfss	??_Lcd_Command,0
  1968  06FE  2F03               	goto	u810
  1969  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0701  1586               	bsf	6,3	;volatile
  1972  0702  2F06               	goto	l928
  1973  0703                     u810:	
  1974  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1975  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1976  0705  1186               	bcf	6,3	;volatile
  1977  0706                     l928:	
  1978  0706  0873               	movf	Lcd_Command@command,w
  1979  0707  00F2               	movwf	??_Lcd_Command
  1980  0708  3002               	movlw	2
  1981  0709                     u835:	
  1982  0709  1003               	clrc
  1983  070A  0CF2               	rrf	??_Lcd_Command,f
  1984  070B  3EFF               	addlw	-1
  1985  070C  1D03               	skipz
  1986  070D  2F09               	goto	u835
  1987  070E  1C72               	btfss	??_Lcd_Command,0
  1988  070F  2F14               	goto	u840
  1989  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0712  1506               	bsf	6,2	;volatile
  1992  0713  2F17               	goto	l930
  1993  0714                     u840:	
  1994  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0716  1106               	bcf	6,2	;volatile
  1997  0717                     l930:	
  1998                           
  1999                           ;HD44780.c: 139: RB1 = (command & 0b00000010)>>1; RB0 = (command & 0b00000001);
  2000  0717  0873               	movf	Lcd_Command@command,w
  2001  0718  00F2               	movwf	??_Lcd_Command
  2002  0719  3001               	movlw	1
  2003  071A                     u865:	
  2004  071A  1003               	clrc
  2005  071B  0CF2               	rrf	??_Lcd_Command,f
  2006  071C  3EFF               	addlw	-1
  2007  071D  1D03               	skipz
  2008  071E  2F1A               	goto	u865
  2009  071F  1C72               	btfss	??_Lcd_Command,0
  2010  0720  2F25               	goto	u870
  2011  0721  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0722  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0723  1486               	bsf	6,1	;volatile
  2014  0724  2F28               	goto	l932
  2015  0725                     u870:	
  2016  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0727  1086               	bcf	6,1	;volatile
  2019  0728                     l932:	
  2020  0728  1C73               	btfss	Lcd_Command@command,0
  2021  0729  2F2E               	goto	u890
  2022  072A  1283               	bcf	3,5	;RP0=0, select bank0
  2023  072B  1303               	bcf	3,6	;RP1=0, select bank0
  2024  072C  1406               	bsf	6,0	;volatile
  2025  072D  2F31               	goto	l934
  2026  072E                     u890:	
  2027  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2028  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0730  1006               	bcf	6,0	;volatile
  2030  0731                     l934:	
  2031                           
  2032                           ;HD44780.c: 140: _delay(10);
  2033  0731  3003               	movlw	3
  2034  0732  00F2               	movwf	??_Lcd_Command
  2035  0733                     u1397:	
  2036  0733  0BF2               	decfsz	??_Lcd_Command,f
  2037  0734  2F33               	goto	u1397
  2038                           
  2039                           ;HD44780.c: 141: RB4 = 1; Lcd_Delay5us(); RB4 = 0;
  2040  0735  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0736  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0737  1606               	bsf	6,4	;volatile
  2043  0738  120A  118A  23C2  120A  118A  	fcall	_Lcd_Delay5us
  2044  073D  1283               	bcf	3,5	;RP0=0, select bank0
  2045  073E  1303               	bcf	3,6	;RP1=0, select bank0
  2046  073F  1206               	bcf	6,4	;volatile
  2047                           
  2048                           ;HD44780.c: 142: Lcd_Delay5500us();
  2049  0740  120A  118A  23CB   	fcall	_Lcd_Delay5500us
  2050  0743  0008               	return
  2051  0744                     __end_of_Lcd_Command:	
  2052                           
  2053                           	psect	text10
  2054  03C2                     __ptext10:	
  2055 ;; *************** function _Lcd_Delay5us *****************
  2056 ;; Defined at:
  2057 ;;		line 148 in file "libs/HD44780.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0
  2073 ;;      Temps:          1       0       0       0       0
  2074 ;;      Totals:         1       0       0       0       0
  2075 ;;Total ram usage:        1 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_Lcd_Init
  2081 ;;		_Lcd_CharCP
  2082 ;;		_Lcd_Command
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           
  2087                           ;psect for function _Lcd_Delay5us
  2088  03C2                     _Lcd_Delay5us:	
  2089                           
  2090                           ;HD44780.c: 149: _delay((unsigned long)((5)*(20000000/4000000.0)));
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in _Lcd_Delay5us: [wreg]
  2094  03C2  3008               	movlw	8
  2095  03C3  00F0               	movwf	??_Lcd_Delay5us
  2096  03C4                     u1407:	
  2097  03C4  0BF0               	decfsz	??_Lcd_Delay5us,f
  2098  03C5  2BC4               	goto	u1407
  2099                           
  2100                           ;HD44780.c: 150: _delay((unsigned long)((5)*(20000000/4000000.0)));
  2101  03C6  3008               	movlw	8
  2102  03C7  00F0               	movwf	??_Lcd_Delay5us
  2103  03C8                     u1417:	
  2104  03C8  0BF0               	decfsz	??_Lcd_Delay5us,f
  2105  03C9  2BC8               	goto	u1417
  2106  03CA  0008               	return
  2107  03CB                     __end_of_Lcd_Delay5us:	
  2108                           
  2109                           	psect	text11
  2110  03CB                     __ptext11:	
  2111 ;; *************** function _Lcd_Delay5500us *****************
  2112 ;; Defined at:
  2113 ;;		line 152 in file "libs/HD44780.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2127 ;;      Params:         0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0
  2129 ;;      Temps:          2       0       0       0       0
  2130 ;;      Totals:         2       0       0       0       0
  2131 ;;Total ram usage:        2 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_Lcd_Init
  2137 ;;		_Lcd_CharCP
  2138 ;;		_Lcd_Command
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _Lcd_Delay5500us
  2144  03CB                     _Lcd_Delay5500us:	
  2145                           
  2146                           ;HD44780.c: 153: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _Lcd_Delay5500us: [wreg]
  2150  03CB  3024               	movlw	36
  2151  03CC  00F1               	movwf	??_Lcd_Delay5500us+1
  2152  03CD  30B5               	movlw	181
  2153  03CE  00F0               	movwf	??_Lcd_Delay5500us
  2154  03CF                     u1427:	
  2155  03CF  0BF0               	decfsz	??_Lcd_Delay5500us,f
  2156  03D0  2BCF               	goto	u1427
  2157  03D1  0BF1               	decfsz	??_Lcd_Delay5500us+1,f
  2158  03D2  2BCF               	goto	u1427
  2159  03D3  2BD4               	nop2
  2160  03D4  0008               	return
  2161  03D5                     __end_of_Lcd_Delay5500us:	
  2162  007E                     btemp	set	126	;btemp
  2163  007E                     wtemp	set	126
  2164  007E                     wtemp0	set	126
  2165  0080                     wtemp1	set	128
  2166  0082                     wtemp2	set	130
  2167  0084                     wtemp3	set	132
  2168  0086                     wtemp4	set	134
  2169  0088                     wtemp5	set	136
  2170  007F                     wtemp6	set	127
  2171  007E                     ttemp	set	126
  2172  007E                     ttemp0	set	126
  2173  0081                     ttemp1	set	129
  2174  0084                     ttemp2	set	132
  2175  0087                     ttemp3	set	135
  2176  007F                     ttemp4	set	127
  2177  007E                     ltemp	set	126
  2178  007E                     ltemp0	set	126
  2179  0082                     ltemp1	set	130
  2180  0086                     ltemp2	set	134
  2181  0080                     ltemp3	set	128


Data Sizes:
    Strings     8
    Constant    0
    Data        50
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      76
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Text@buffer	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[2]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _WriteLongInt->___lldiv
    ___bmul->___lldiv
    _Lcd_WriteChar->___lldiv
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_CharCP->_Lcd_Delay5500us
    _Lcd_Init->_Lcd_Command
    _Lcd_Command->_Lcd_Delay5500us

Critical Paths under _main in BANK0

    _main->_WriteLongInt
    _WriteLongInt->_Lcd_WriteChar
    _Lcd_WriteChar->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0    3635
                                             19 BANK0     57    57      0
                        _Lcd_Command
                           _Lcd_Init
                           _Lcd_Text
                      _Lcd_WriteChar
                       _WriteLongInt
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteLongInt                                        10     4      6    1609
                                              9 BANK0     10     4      6
                      _Lcd_WriteChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        5     3      2     722
                                              4 BANK0      5     3      2
                         _Lcd_CharCP
                        _Lcd_Command
                             ___bmul (ARG)
                            ___lldiv (ARG)
                        _eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             5     3      2     745
                                              4 COMMON     5     3      2
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (3) _Lcd_CharCP                                           2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              4 COMMON     2     2      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5us                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5500us                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Command
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
   _Lcd_WriteChar
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     ___bmul (ARG)
       ___lldiv (ARG)
     ___lldiv (ARG)
     _eeprom_read (ARG)
   _WriteLongInt
     _Lcd_WriteChar
       _Lcd_CharCP
         _Lcd_Delay5500us
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5500us
         _Lcd_Delay5us
       ___bmul (ARG)
         ___lldiv (ARG)
       ___lldiv (ARG)
       _eeprom_read (ARG)
     ___bmul
       ___lldiv (ARG)
     ___lldiv
   _eeprom_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8C      12        0.0%
ABS                  0      0      8C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Aug 10 17:28:49 2016

                       pc 0002            ___bmul@product 0022               __CFG_CP$OFF 0000  
                      l53 0630                        l54 0658                        _RD 0C60  
                      _WR 0C61                        fsr 0004                       l136 03FA  
                     l930 0717                       l932 0728                       l934 0731  
                     l918 06E6                       l928 0706                       l960 07D8  
                     l944 078D                       l954 07AD                       l970 041B  
                     l956 07BE                       l972 041E                       l980 0435  
                     l958 07CF                       l974 0421                       l968 0418  
                     l984 03EA                       l978 0427                       l988 03F0  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RB3 0033                       _RB4 0034                       _RB5 0035  
            __CFG_CPD$OFF 0000                       u720 06C1                       u704 06B3  
                     u810 0703                       u715 06B6                       u805 06F8  
                     u750 06D2                       u734 06C4                       u840 0714  
                     u920 0757                       u745 06C7                       u690 06B0  
                     u835 0709                       u915 074C                       u780 06E3  
                     u764 06D5                       u685 06A5                       u870 0725  
                     u950 0768                       u934 075A                       u775 06D8  
                     u865 071A                       u945 075D                       u890 072E  
                     u980 0779                       u964 076B                       u975 076E  
                     u994 077C                       fsr0 0004                       indf 0000  
            __CFG_IESO$ON 0000              __CFG_FOSC$HS 0000       __end_of_Lcd_Command 0744  
            __CFG_LVP$OFF 0000                      l1002 0521                      l1012 0559  
                    l1004 0531                      l1110 0476                      l1112 0479  
                    l1120 0485                      l1016 0566                      l1114 047C  
                    l1122 0493                      l1116 047F                      l1150 0592  
                    l1128 0499                      l1138 04B7                      STR_1 0009  
                    STR_2 000F                      u1010 078A                      u1100 07CC  
                    u1005 077F                      u1120 07D5                      u1040 07AA  
                    u1035 079F                      u1205 0548                      u1070 07BB  
                    u1215 055A                      u1065 07B0                      u1407 03C4  
                    u1095 07C1                      u1175 0525                      u1280 0584  
                    u1417 03C8                      u1427 03CF                      u1195 0533  
                    u1357 05F0                      u1367 078F                      u1377 07DA  
                    u1387 06E8                      u1397 0733     __size_of_WriteLongInt 005D  
       ??_Lcd_Delay5500us 0070              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
                    _main 056F      __end_of_Lcd_Delay5us 03CB                      btemp 007E  
                    ltemp 007E                      start 0000                      ttemp 007E  
                    wtemp 007E         ___bmul@multiplier 0023             __CFG_MCLRE$ON 0000  
              _Lcd_CharCP 0744                     ?_main 0070                     _EEADR 010D  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188           __end_of___lldiv 056F  
            _WriteLongInt 04B4                     main@i 006B            __CFG_BOREN$OFF 0000  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
        __end_of_Lcd_Init 069D          __end_of_Lcd_Text 04B4           __initialization 07F0  
            __end_of_main 05F8               _Lcd_Command 069D                    ??_main 0033  
                  _EEDATA 010C                    _EECON1 018C                    _ANSELH 0189  
          Lcd_Text@buffer 0075          WriteLongInt@size 002E            __CFG_PWRTE$OFF 0000  
    __size_of_eeprom_read 001B                    ___bmul 03E6               ?_Lcd_CharCP 0070  
               ??___lldiv 0078     __end_of_Lcd_WriteChar 0442     __size_of_Lcd_Delay5us 0009  
      Lcd_Command@command 0073   __end_of__initialization 07FC           eeprom_read@addr 0071  
     ___bmul@multiplicand 0020            __pcstackCOMMON 0070              __pidataBANK1 0442  
            _Lcd_Delay5us 03C2           _Lcd_Delay5500us 03CB            Lcd_WriteChar@c 0025  
          Lcd_WriteChar@x 0024            Lcd_WriteChar@y 0027                 ?_Lcd_Init 0070  
               ?_Lcd_Text 0074       __size_of_Lcd_CharCP 00AC                __pmaintext 056F  
                 ?___bmul 0020                ??_Lcd_Init 0074                ??_Lcd_Text 0076  
              __stringtab 0003           __size_of___bmul 0013         Lcd_WriteChar@data 0028  
                 ___lldiv 0511   __end_of_Lcd_Delay5500us 03D5              ?_Lcd_Command 0070  
                 __ptext1 03F9                   __ptext2 04B4                   __ptext3 0511  
                 __ptext4 03E6                   __ptext5 0414                   __ptext6 0474  
                 __ptext7 0744                   __ptext8 05F8                   __ptext9 069D  
    end_of_initialization 07FC           ___lldiv@divisor 0070           ___lldiv@counter 007D  
            ??_Lcd_CharCP 0072                 Lcd_Text@x 0074                 Lcd_Text@y 0077  
               _TRISBbits 0086        __end_of_Lcd_CharCP 07F0             ??_eeprom_read 0070  
          __end_of___bmul 03F9          ?_Lcd_Delay5500us 0070       start_initialization 07F0  
       __size_of_Lcd_Init 00A5         __size_of_Lcd_Text 0040           WriteLongInt@Val 002A  
  __size_of_Lcd_WriteChar 002E                  ??___bmul 0021       __end_of_eeprom_read 0414  
              init_fetch0 03D5               __pdataBANK1 00A0             ?_WriteLongInt 0029  
    __size_of_Lcd_Command 00A7                 ___latbits 0002             __pcstackBANK0 0020  
           WriteLongInt@x 0029             WriteLongInt@y 0032                  ?___lldiv 0070  
               __pstrings 0003            ??_WriteLongInt 002F             _Lcd_WriteChar 0414  
             _eeprom_read 03F9                 main@F1622 00A0              Lcd_Init@data 0075  
             __stringbase 0008            ?_Lcd_WriteChar 0024                  _Lcd_Init 05F8  
                _Lcd_Text 0474              Lcd_Text@data 0078          __size_of___lldiv 005E  
      __end_of__stringtab 0009             ?_Lcd_Delay5us 0070                  __ptext10 03C2  
                __ptext11 03CB         __CFG_BOR4V$BOR21V 0000               Lcd_CharCP@c 0073  
           __size_of_main 0089      __end_of_WriteLongInt 0511                  main@data 0039  
         ??_Lcd_WriteChar 0026            ??_Lcd_Delay5us 0070  __size_of_Lcd_Delay5500us 000A  
                init_ram0 03D9          ___lldiv@dividend 0074                 stringcode 0003  
           ??_Lcd_Command 0072          ___lldiv@quotient 0079                  stringdir 0003  
                stringtab 0003              ?_eeprom_read 0070  
