

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Aug 09 19:28:11 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	psect	text21,local,class=CODE,merge=1,delta=2
    30                           	psect	text22,local,class=CODE,merge=1,delta=2
    31                           	psect	text23,local,class=CODE,merge=1,delta=2
    32                           	psect	text24,local,class=CODE,merge=1,delta=2
    33                           	psect	text25,local,class=CODE,merge=1,delta=2
    34                           	psect	text26,local,class=CODE,merge=1,delta=2
    35                           	psect	text27,local,class=CODE,merge=1,delta=2
    36                           	psect	text28,local,class=CODE,merge=1,delta=2
    37                           	psect	text29,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000E                     	;# 
    54  000F                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  001D                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  0087                     	;# 
    77  0089                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  008F                     	;# 
    82  0090                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0093                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  0105                     	;# 
   101  0107                     	;# 
   102  0108                     	;# 
   103  0109                     	;# 
   104  010C                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  0185                     	;# 
   110  0187                     	;# 
   111  0188                     	;# 
   112  0189                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419                           
   420                           	psect	strings
   421  0800                     __pstrings:	
   422  0800                     stringtab:	
   423  0800                     __stringtab:	
   424                           
   425                           ;	String table - string pointers are 1 byte each
   426  0800  1BFF               	btfsc	btemp+1,7
   427  0801  280A               	ljmp	stringcode
   428  0802  1383               	bcf	3,7
   429  0803  187F               	btfsc	btemp+1,0
   430  0804  1783               	bsf	3,7
   431  0805  0800               	movf	0,w
   432  0806  0A84               	incf	4,f
   433  0807  1903               	skipnz
   434  0808  0AFF               	incf	btemp+1,f
   435  0809  0008               	return
   436  080A                     stringcode:	
   437  080A                     stringdir:	
   438  080A  3008               	movlw	high stringdir
   439  080B  008A               	movwf	10
   440  080C  0804               	movf	4,w
   441  080D  0A84               	incf	4,f
   442  080E  0782               	addwf	2,f
   443  080F                     __stringbase:	
   444  080F  3400               	retlw	0
   445  0810                     __end_of__stringtab:	
   446  0810                     UART_ReadFromGPS@StartCode:	
   447  0810  3424               	retlw	36
   448  0811  3447               	retlw	71
   449  0812  3450               	retlw	80
   450  0813  3452               	retlw	82
   451  0814  344D               	retlw	77
   452  0815  3443               	retlw	67
   453  0816  342C               	retlw	44
   454  0817                     __end_ofUART_ReadFromGPS@StartCode:	
   455  001A                     _RCREG	set	26
   456  0013                     _SSPBUF	set	19
   457  0014                     _SSPCON	set	20
   458  0019                     _TXREG	set	25
   459  00C4                     _CREN	set	196
   460  002B                     _RA3	set	43
   461  002C                     _RA4	set	44
   462  0030                     _RB0	set	48
   463  0031                     _RB1	set	49
   464  0032                     _RB2	set	50
   465  0033                     _RB3	set	51
   466  0034                     _RB4	set	52
   467  0035                     _RB5	set	53
   468  0065                     _RCIF	set	101
   469  00C7                     _SPEN	set	199
   470  0099                     _SPBRG	set	153
   471  0093                     _SSPADD	set	147
   472  0091                     _SSPCON2	set	145
   473  0094                     _SSPSTAT	set	148
   474  0085                     _TRISA	set	133
   475  0086                     _TRISB	set	134
   476  0086                     _TRISBbits	set	134
   477  048D                     _ACKDT	set	1165
   478  048C                     _ACKEN	set	1164
   479  04C2                     _BRGH	set	1218
   480  048A                     _PEN	set	1162
   481  048B                     _RCEN	set	1163
   482  0489                     _RSEN	set	1161
   483  0488                     _SEN	set	1160
   484  04C4                     _SYNC	set	1220
   485  043B                     _TRISC3	set	1083
   486  043C                     _TRISC4	set	1084
   487  043E                     _TRISC6	set	1086
   488  043F                     _TRISC7	set	1087
   489  04C1                     _TRMT	set	1217
   490  04C5                     _TXEN	set	1221
   491  0188                     _ANSEL	set	392
   492  0189                     _ANSELH	set	393
   493  0817                     STR_4:	
   494  0817  3430               	retlw	48	;'0'
   495  0818  3430               	retlw	48	;'0'
   496  0819  3430               	retlw	48	;'0'
   497  081A  3430               	retlw	48	;'0'
   498  081B  3430               	retlw	48	;'0'
   499  081C  3430               	retlw	48	;'0'
   500  081D  3400               	retlw	0
   501  081E                     STR_2:	
   502  081E  3452               	retlw	82	;'R'
   503  081F  3454               	retlw	84	;'T'
   504  0820  3443               	retlw	67	;'C'
   505  0821  343A               	retlw	58	;':'
   506  0822  3400               	retlw	0
   507  0823                     STR_1:	
   508  0823  3447               	retlw	71	;'G'
   509  0824  3450               	retlw	80	;'P'
   510  0825  3453               	retlw	83	;'S'
   511  0826  343A               	retlw	58	;':'
   512  0827  3400               	retlw	0
   513  0828                     STR_3:	
   514  0828  342D               	retlw	45	;'-'
   515  0829  3400               	retlw	0
   516                           
   517                           ; #config settings
   518  0000                     
   519                           	psect	cinit
   520  07FC                     start_initialization:	
   521  07FC                     __initialization:	
   522  07FC                     end_of_initialization:	
   523                           ;End of C runtime variable initialization code
   524                           
   525  07FC                     __end_of__initialization:	
   526  07FC  0183               	clrf	3
   527  07FD  120A  118A  2E75   	ljmp	_main	;jump to C main() function
   528                           
   529                           	psect	cstackCOMMON
   530  0070                     __pcstackCOMMON:	
   531  0070                     ?_Lcd_Init:	
   532  0070                     ?_Lcd_Command:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_UART_ReadFromGPS:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ??_UART_ReadFromGPS:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_Lcd_Delay5500us:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ??_Lcd_Delay5500us:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_Lcd_Delay5us:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_Lcd_Delay5us:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_Lcd_CharCP:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_main:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_UART_Read:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ??_UART_Read:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_I2C_Master_Wait:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_I2C_Master_Wait:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_I2C_Master_Start:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_I2C_Master_Start:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_I2C_Master_Stop:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_I2C_Master_Stop:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_I2C_Master_Write:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_I2C_Master_Read:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?___wmul:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ?___awdiv:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?___lmul:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0070                     ?___aldiv:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0070                     ?___lldiv:	
   602                           ; 4 bytes @ 0x0
   603                           
   604  0070                     I2C_Master_Write@d:	
   605                           ; 4 bytes @ 0x0
   606                           
   607  0070                     I2C_Master_Read@a:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ___wmul@multiplier:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ___awdiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     ___lmul@multiplier:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     ___aldiv@divisor:	
   620                           ; 4 bytes @ 0x0
   621                           
   622  0070                     ___lldiv@divisor:	
   623                           ; 4 bytes @ 0x0
   624                           
   625                           
   626                           ; 4 bytes @ 0x0
   627  0070                     	ds	2
   628  0072                     ??_Lcd_Command:	
   629  0072                     ??_Lcd_CharCP:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0072                     ??_I2C_Master_Write:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0072                     ??_I2C_Master_Read:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     ?_I2C_WriteAtAddress:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0072                     UART_ReadFromGPS@Output:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     I2C_WriteAtAddress@IntAdd:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0072                     ___wmul@multiplicand:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ___awdiv@dividend:	
   651                           ; 2 bytes @ 0x2
   652                           
   653                           
   654                           ; 2 bytes @ 0x2
   655  0072                     	ds	1
   656  0073                     UART_ReadFromGPS@TempChar:	
   657  0073                     Lcd_CharCP@c:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     Lcd_Command@command:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     I2C_WriteAtAddress@data:	
   664                           ; 1 bytes @ 0x3
   665                           
   666                           
   667                           ; 1 bytes @ 0x3
   668  0073                     	ds	1
   669  0074                     ??_Lcd_Init:	
   670  0074                     ?_Lcd_Text:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     ??_I2C_WriteAtAddress:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ??___wmul:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ??___awdiv:	
   680                           ; 1 bytes @ 0x4
   681                           
   682  0074                     UART_ReadFromGPS@i:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0074                     Lcd_Text@x:	
   686                           ; 1 bytes @ 0x4
   687                           
   688  0074                     I2C_Master_Read@temp:	
   689                           ; 1 bytes @ 0x4
   690                           
   691  0074                     ___wmul@product:	
   692                           ; 2 bytes @ 0x4
   693                           
   694  0074                     ___lmul@multiplicand:	
   695                           ; 2 bytes @ 0x4
   696                           
   697  0074                     ___aldiv@dividend:	
   698                           ; 4 bytes @ 0x4
   699                           
   700  0074                     ___lldiv@dividend:	
   701                           ; 4 bytes @ 0x4
   702                           
   703                           
   704                           ; 4 bytes @ 0x4
   705  0074                     	ds	1
   706  0075                     UART_ReadFromGPS@Pos:	
   707  0075                     Lcd_Init@data:	
   708                           ; 1 bytes @ 0x5
   709                           
   710  0075                     Lcd_Text@buffer:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     ___awdiv@counter:	
   714                           ; 1 bytes @ 0x5
   715                           
   716                           
   717                           ; 1 bytes @ 0x5
   718  0075                     	ds	1
   719  0076                     ??_Lcd_Text:	
   720  0076                     ?_I2C_ReadAtAddress:	
   721                           ; 1 bytes @ 0x6
   722                           
   723  0076                     ?___lwdiv:	
   724                           ; 1 bytes @ 0x6
   725                           
   726  0076                     I2C_ReadAtAddress@IntAdd:	
   727                           ; 2 bytes @ 0x6
   728                           
   729  0076                     I2C_WriteAtAddress@DevID:	
   730                           ; 1 bytes @ 0x6
   731                           
   732  0076                     ___awdiv@sign:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     ___lwdiv@divisor:	
   736                           ; 1 bytes @ 0x6
   737                           
   738                           
   739                           ; 2 bytes @ 0x6
   740  0076                     	ds	1
   741  0077                     ??_I2C_ReadAtAddress:	
   742  0077                     ?_WriteToRTC:	
   743                           ; 1 bytes @ 0x7
   744                           
   745  0077                     Lcd_Text@y:	
   746                           ; 1 bytes @ 0x7
   747                           
   748  0077                     WriteToRTC@Time:	
   749                           ; 1 bytes @ 0x7
   750                           
   751  0077                     ___awdiv@quotient:	
   752                           ; 2 bytes @ 0x7
   753                           
   754                           
   755                           ; 2 bytes @ 0x7
   756  0077                     	ds	1
   757  0078                     ??___lmul:	
   758  0078                     ??___aldiv:	
   759                           ; 1 bytes @ 0x8
   760                           
   761  0078                     ??___lldiv:	
   762                           ; 1 bytes @ 0x8
   763                           
   764  0078                     Lcd_Text@data:	
   765                           ; 1 bytes @ 0x8
   766                           
   767  0078                     ___lwdiv@dividend:	
   768                           ; 1 bytes @ 0x8
   769                           
   770                           
   771                           ; 2 bytes @ 0x8
   772  0078                     	ds	1
   773  0079                     ??_WriteToRTC:	
   774  0079                     I2C_ReadAtAddress@data:	
   775                           ; 1 bytes @ 0x9
   776                           
   777  0079                     UART_Init@x:	
   778                           ; 1 bytes @ 0x9
   779                           
   780  0079                     ___lmul@product:	
   781                           ; 2 bytes @ 0x9
   782                           
   783  0079                     ___lldiv@quotient:	
   784                           ; 4 bytes @ 0x9
   785                           
   786                           
   787                           ; 4 bytes @ 0x9
   788  0079                     	ds	1
   789  007A                     ??___lwdiv:	
   790  007A                     I2C_ReadAtAddress@DevID:	
   791                           ; 1 bytes @ 0xA
   792                           
   793                           
   794                           ; 1 bytes @ 0xA
   795  007A                     	ds	1
   796  007B                     ___lwdiv@quotient:	
   797                           
   798                           ; 2 bytes @ 0xB
   799  007B                     	ds	2
   800  007D                     ___lldiv@counter:	
   801  007D                     ___lwdiv@counter:	
   802                           ; 1 bytes @ 0xD
   803                           
   804                           
   805                           ; 1 bytes @ 0xD
   806  007D                     	ds	1
   807                           
   808                           	psect	cstackBANK0
   809  0020                     __pcstackBANK0:	
   810  0020                     ?_I2C_Master_Init:	
   811  0020                     ?___bmul:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0020                     ?_ReadRTCAsSec:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0020                     WriteToRTC@TempVar000:	
   818                           ; 4 bytes @ 0x0
   819                           
   820  0020                     ___bmul@multiplicand:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0020                     ___aldiv@counter:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0020                     I2C_Master_Init@c:	
   827                           ; 1 bytes @ 0x0
   828                           
   829                           
   830                           ; 4 bytes @ 0x0
   831  0020                     	ds	1
   832  0021                     ??___bmul:	
   833  0021                     ___aldiv@sign:	
   834                           ; 1 bytes @ 0x1
   835                           
   836                           
   837                           ; 1 bytes @ 0x1
   838  0021                     	ds	1
   839  0022                     ___bmul@product:	
   840  0022                     ___aldiv@quotient:	
   841                           ; 1 bytes @ 0x2
   842                           
   843                           
   844                           ; 4 bytes @ 0x2
   845  0022                     	ds	1
   846  0023                     ___bmul@multiplier:	
   847                           
   848                           ; 1 bytes @ 0x3
   849  0023                     	ds	1
   850  0024                     ??_I2C_Master_Init:	
   851  0024                     ?_Lcd_WriteChar:	
   852                           ; 1 bytes @ 0x4
   853                           
   854  0024                     ??_ReadRTCAsSec:	
   855                           ; 1 bytes @ 0x4
   856                           
   857  0024                     ?_Lcd_Int:	
   858                           ; 1 bytes @ 0x4
   859                           
   860  0024                     Lcd_WriteChar@x:	
   861                           ; 1 bytes @ 0x4
   862                           
   863  0024                     Lcd_Int@x:	
   864                           ; 1 bytes @ 0x4
   865                           
   866                           
   867                           ; 1 bytes @ 0x4
   868  0024                     	ds	1
   869  0025                     Lcd_WriteChar@c:	
   870  0025                     Lcd_Int@val:	
   871                           ; 1 bytes @ 0x5
   872                           
   873                           
   874                           ; 1 bytes @ 0x5
   875  0025                     	ds	1
   876  0026                     ?_UART_Init:	
   877  0026                     ??_Lcd_WriteChar:	
   878                           ; 1 bytes @ 0x6
   879                           
   880  0026                     Lcd_Int@size:	
   881                           ; 1 bytes @ 0x6
   882                           
   883  0026                     UART_Init@baudrate:	
   884                           ; 1 bytes @ 0x6
   885                           
   886                           
   887                           ; 4 bytes @ 0x6
   888  0026                     	ds	1
   889  0027                     ??_Lcd_Int:	
   890  0027                     Lcd_WriteChar@y:	
   891                           ; 1 bytes @ 0x7
   892                           
   893                           
   894                           ; 1 bytes @ 0x7
   895  0027                     	ds	1
   896  0028                     Lcd_WriteChar@data:	
   897                           
   898                           ; 1 bytes @ 0x8
   899  0028                     	ds	1
   900  0029                     ?_WriteLongInt:	
   901  0029                     Lcd_Int@y:	
   902                           ; 1 bytes @ 0x9
   903                           
   904  0029                     WriteLongInt@x:	
   905                           ; 1 bytes @ 0x9
   906                           
   907                           
   908                           ; 1 bytes @ 0x9
   909  0029                     	ds	1
   910  002A                     ??_UART_Init:	
   911  002A                     Lcd_Int@data:	
   912                           ; 1 bytes @ 0xA
   913                           
   914  002A                     WriteLongInt@Val:	
   915                           ; 1 bytes @ 0xA
   916                           
   917                           
   918                           ; 4 bytes @ 0xA
   919  002A                     	ds	1
   920  002B                     Lcd_Int@tempVal:	
   921                           
   922                           ; 2 bytes @ 0xB
   923  002B                     	ds	3
   924  002E                     WriteLongInt@size:	
   925                           
   926                           ; 1 bytes @ 0xE
   927  002E                     	ds	1
   928  002F                     ??_WriteLongInt:	
   929                           
   930                           ; 1 bytes @ 0xF
   931  002F                     	ds	2
   932  0031                     _ReadRTCAsSec$695:	
   933                           
   934                           ; 2 bytes @ 0x11
   935  0031                     	ds	1
   936  0032                     WriteLongInt@y:	
   937                           
   938                           ; 1 bytes @ 0x12
   939  0032                     	ds	1
   940  0033                     ReadRTCAsSec@Out:	
   941                           
   942                           ; 4 bytes @ 0x13
   943  0033                     	ds	4
   944  0037                     ReadRTCAsSec@TempVar000:	
   945                           
   946                           ; 1 bytes @ 0x17
   947  0037                     	ds	1
   948  0038                     ??_main:	
   949                           
   950                           ; 1 bytes @ 0x18
   951  0038                     	ds	3
   952  003B                     main@Data:	
   953                           
   954                           ; 6 bytes @ 0x1B
   955  003B                     	ds	6
   956  0041                     main@Second:	
   957                           
   958                           ; 4 bytes @ 0x21
   959  0041                     	ds	4
   960  0045                     main@TempVar000:	
   961                           
   962                           ; 1 bytes @ 0x25
   963  0045                     	ds	1
   964                           
   965                           	psect	maintext
   966  0675                     __pmaintext:	
   967 ;;
   968 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   969 ;;
   970 ;; *************** function _main *****************
   971 ;; Defined at:
   972 ;;		line 10 in file "main.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  Data            6   27[BANK0 ] unsigned char [6]
   977 ;;  Second          4   33[BANK0 ] unsigned long 
   978 ;;  TempVar000      1   37[BANK0 ] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : B00/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0      11       0       0       0
   990 ;;      Temps:          0       3       0       0       0
   991 ;;      Totals:         0      14       0       0       0
   992 ;;Total ram usage:       14 bytes
   993 ;; Hardware stack levels required when called:    4
   994 ;; This function calls:
   995 ;;		_I2C_Master_Init
   996 ;;		_I2C_ReadAtAddress
   997 ;;		_Lcd_Command
   998 ;;		_Lcd_Init
   999 ;;		_Lcd_Int
  1000 ;;		_Lcd_Text
  1001 ;;		_Lcd_WriteChar
  1002 ;;		_ReadRTCAsSec
  1003 ;;		_UART_Init
  1004 ;;		_UART_ReadFromGPS
  1005 ;;		_WriteLongInt
  1006 ;;		_WriteToRTC
  1007 ;; This function is called by:
  1008 ;;		Startup code after reset
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _main
  1014  0675                     _main:	
  1015                           
  1016                           ;main.c: 11: ANSEL=0x00;
  1017                           
  1018                           ;incstack = 0
  1019                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1020  0675  1683               	bsf	3,5	;RP0=1, select bank3
  1021  0676  1703               	bsf	3,6	;RP1=1, select bank3
  1022  0677  0188               	clrf	8	;volatile
  1023                           
  1024                           ;main.c: 12: ANSELH=0x00;
  1025  0678  0189               	clrf	9	;volatile
  1026                           
  1027                           ;main.c: 13: TRISB = 0X00;
  1028  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1029  067A  1303               	bcf	3,6	;RP1=0, select bank1
  1030  067B  0186               	clrf	6	;volatile
  1031                           
  1032                           ;main.c: 14: Lcd_Init();
  1033  067C  120A  118A  20B2  120A  118A  	fcall	_Lcd_Init
  1034                           
  1035                           ;main.c: 15: UART_Init(9600);
  1036  0681  3000               	movlw	0
  1037  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0684  00A9               	movwf	UART_Init@baudrate+3
  1040  0685  3000               	movlw	0
  1041  0686  00A8               	movwf	UART_Init@baudrate+2
  1042  0687  3025               	movlw	37
  1043  0688  00A7               	movwf	UART_Init@baudrate+1
  1044  0689  3080               	movlw	128
  1045  068A  00A6               	movwf	UART_Init@baudrate
  1046  068B  120A  118A  236A  120A  118A  	fcall	_UART_Init
  1047                           
  1048                           ;main.c: 16: I2C_Master_Init(400000);
  1049  0690  3000               	movlw	0
  1050  0691  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0692  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0693  00A3               	movwf	I2C_Master_Init@c+3
  1053  0694  3006               	movlw	6
  1054  0695  00A2               	movwf	I2C_Master_Init@c+2
  1055  0696  301A               	movlw	26
  1056  0697  00A1               	movwf	I2C_Master_Init@c+1
  1057  0698  3080               	movlw	128
  1058  0699  00A0               	movwf	I2C_Master_Init@c
  1059  069A  120A  158A  2571  120A  118A  	fcall	_I2C_Master_Init
  1060                           
  1061                           ;main.c: 19: Lcd_Command(1);
  1062  069F  3001               	movlw	1
  1063  06A0  120A  118A  2157  120A  118A  	fcall	_Lcd_Command
  1064                           
  1065                           ;main.c: 20: Lcd_Text(1,1,"GPS:");
  1066  06A5  01F4               	clrf	Lcd_Text@x
  1067  06A6  0AF4               	incf	Lcd_Text@x,f
  1068  06A7  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1069  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1070  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1071  06AA  00B8               	movwf	??_main
  1072  06AB  0838               	movf	??_main,w
  1073  06AC  00F5               	movwf	Lcd_Text@buffer
  1074  06AD  3001               	movlw	1
  1075  06AE  120A  158A  2622  120A  118A  	fcall	_Lcd_Text
  1076                           
  1077                           ;main.c: 21: Lcd_Text(2,1,"RTC:");
  1078  06B3  01F4               	clrf	Lcd_Text@x
  1079  06B4  0AF4               	incf	Lcd_Text@x,f
  1080  06B5  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1081  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1082  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1083  06B8  00B8               	movwf	??_main
  1084  06B9  0838               	movf	??_main,w
  1085  06BA  00F5               	movwf	Lcd_Text@buffer
  1086  06BB  3002               	movlw	2
  1087  06BC  120A  158A  2622  120A  118A  	fcall	_Lcd_Text
  1088                           
  1089                           ;main.c: 22: Lcd_Text(2,11,"-");
  1090  06C1  300B               	movlw	11
  1091  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1092  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1093  06C4  00B8               	movwf	??_main
  1094  06C5  0838               	movf	??_main,w
  1095  06C6  00F4               	movwf	Lcd_Text@x
  1096  06C7  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1097  06C8  00B9               	movwf	??_main+1
  1098  06C9  0839               	movf	??_main+1,w
  1099  06CA  00F5               	movwf	Lcd_Text@buffer
  1100  06CB  3002               	movlw	2
  1101  06CC  120A  158A  2622  120A  118A  	fcall	_Lcd_Text
  1102                           
  1103                           ;main.c: 23: unsigned char Data[6];
  1104                           ;main.c: 24: uint32_t Second;
  1105                           ;main.c: 25: char TempVar000;
  1106                           ;main.c: 26: TRISA = 0XFF;
  1107  06D1  30FF               	movlw	255
  1108  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  1109  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  1110  06D4  0085               	movwf	5	;volatile
  1111  06D5                     l2029:	
  1112                           ;main.c: 27: while (1) {
  1113                           
  1114                           
  1115                           ;main.c: 28: UART_ReadFromGPS(Data);
  1116  06D5  303B               	movlw	(low (main@Data| 0))& (0+255)
  1117  06D6  120A  158A  26A7  120A  118A  	fcall	_UART_ReadFromGPS
  1118                           
  1119                           ;main.c: 29: for (TempVar000=0; TempVar000<6; TempVar000++)
  1120  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1121  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1122  06DD  01C5               	clrf	main@TempVar000
  1123  06DE  3006               	movlw	6
  1124  06DF  0245               	subwf	main@TempVar000,w
  1125  06E0  1803               	btfsc	3,0
  1126  06E1  2EFF               	goto	l2041
  1127  06E2                     l2035:	
  1128                           
  1129                           ;main.c: 30: Lcd_WriteChar(1,TempVar000+5,Data[TempVar000]);
  1130  06E2  0845               	movf	main@TempVar000,w
  1131  06E3  3E05               	addlw	5
  1132  06E4  00B8               	movwf	??_main
  1133  06E5  0838               	movf	??_main,w
  1134  06E6  00A4               	movwf	Lcd_WriteChar@x
  1135  06E7  0845               	movf	main@TempVar000,w
  1136  06E8  3E3B               	addlw	(low (main@Data| 0))& (0+255)
  1137  06E9  0084               	movwf	4
  1138  06EA  1383               	bcf	3,7	;select IRP bank0
  1139  06EB  0800               	movf	0,w
  1140  06EC  00B9               	movwf	??_main+1
  1141  06ED  0839               	movf	??_main+1,w
  1142  06EE  00A5               	movwf	Lcd_WriteChar@c
  1143  06EF  3001               	movlw	1
  1144  06F0  120A  158A  2515  120A  118A  	fcall	_Lcd_WriteChar
  1145  06F5  3001               	movlw	1
  1146  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1147  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1148  06F8  00B8               	movwf	??_main
  1149  06F9  0838               	movf	??_main,w
  1150  06FA  07C5               	addwf	main@TempVar000,f
  1151  06FB  3006               	movlw	6
  1152  06FC  0245               	subwf	main@TempVar000,w
  1153  06FD  1C03               	skipc
  1154  06FE  2EE2               	goto	l2035
  1155  06FF                     l2041:	
  1156                           
  1157                           ;main.c: 32: Second = ReadRTCAsSec();
  1158  06FF  120A  118A  2548  120A  118A  	fcall	_ReadRTCAsSec
  1159  0704  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0705  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0706  0823               	movf	?_ReadRTCAsSec+3,w
  1162  0707  00C4               	movwf	main@Second+3
  1163  0708  0822               	movf	?_ReadRTCAsSec+2,w
  1164  0709  00C3               	movwf	main@Second+2
  1165  070A  0821               	movf	?_ReadRTCAsSec+1,w
  1166  070B  00C2               	movwf	main@Second+1
  1167  070C  0820               	movf	?_ReadRTCAsSec,w
  1168  070D  00C1               	movwf	main@Second
  1169                           
  1170                           ;main.c: 33: WriteLongInt(2,12,Second,5);
  1171  070E  300C               	movlw	12
  1172  070F  00B8               	movwf	??_main
  1173  0710  0838               	movf	??_main,w
  1174  0711  00A9               	movwf	WriteLongInt@x
  1175  0712  0844               	movf	main@Second+3,w
  1176  0713  00AD               	movwf	WriteLongInt@Val+3
  1177  0714  0843               	movf	main@Second+2,w
  1178  0715  00AC               	movwf	WriteLongInt@Val+2
  1179  0716  0842               	movf	main@Second+1,w
  1180  0717  00AB               	movwf	WriteLongInt@Val+1
  1181  0718  0841               	movf	main@Second,w
  1182  0719  00AA               	movwf	WriteLongInt@Val
  1183  071A  3005               	movlw	5
  1184  071B  00B9               	movwf	??_main+1
  1185  071C  0839               	movf	??_main+1,w
  1186  071D  00AE               	movwf	WriteLongInt@size
  1187  071E  3002               	movlw	2
  1188  071F  120A  158A  2745  120A  118A  	fcall	_WriteLongInt
  1189                           
  1190                           ;main.c: 34: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
  1191  0724  3002               	movlw	2
  1192  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0727  00B8               	movwf	??_main
  1195  0728  0838               	movf	??_main,w
  1196  0729  00F6               	movwf	I2C_ReadAtAddress@IntAdd
  1197  072A  30DE               	movlw	222
  1198  072B  120A  158A  2662  120A  118A  	fcall	_I2C_ReadAtAddress
  1199  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0732  00B9               	movwf	??_main+1
  1202  0733  0839               	movf	??_main+1,w
  1203  0734  00C5               	movwf	main@TempVar000
  1204                           
  1205                           ;main.c: 35: Lcd_Int(2,5,(TempVar000>>4) & 0x03 ,1);
  1206  0735  3005               	movlw	5
  1207  0736  00B8               	movwf	??_main
  1208  0737  0838               	movf	??_main,w
  1209  0738  00A4               	movwf	Lcd_Int@x
  1210  0739  0845               	movf	main@TempVar000,w
  1211  073A  00B9               	movwf	??_main+1
  1212  073B  3004               	movlw	4
  1213  073C                     u2725:	
  1214  073C  1003               	clrc
  1215  073D  0CB9               	rrf	??_main+1,f
  1216  073E  3EFF               	addlw	-1
  1217  073F  1D03               	skipz
  1218  0740  2F3C               	goto	u2725
  1219  0741  0839               	movf	??_main+1,w
  1220  0742  3903               	andlw	3
  1221  0743  00BA               	movwf	??_main+2
  1222  0744  083A               	movf	??_main+2,w
  1223  0745  00A5               	movwf	Lcd_Int@val
  1224  0746  01A6               	clrf	Lcd_Int@size
  1225  0747  0AA6               	incf	Lcd_Int@size,f
  1226  0748  3002               	movlw	2
  1227  0749  120A  118A  22AA  120A  118A  	fcall	_Lcd_Int
  1228                           
  1229                           ;main.c: 36: Lcd_Int(2,6,TempVar000 & 0x0f ,1);
  1230  074E  3006               	movlw	6
  1231  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0751  00B8               	movwf	??_main
  1234  0752  0838               	movf	??_main,w
  1235  0753  00A4               	movwf	Lcd_Int@x
  1236  0754  0845               	movf	main@TempVar000,w
  1237  0755  390F               	andlw	15
  1238  0756  00B9               	movwf	??_main+1
  1239  0757  0839               	movf	??_main+1,w
  1240  0758  00A5               	movwf	Lcd_Int@val
  1241  0759  01A6               	clrf	Lcd_Int@size
  1242  075A  0AA6               	incf	Lcd_Int@size,f
  1243  075B  3002               	movlw	2
  1244  075C  120A  118A  22AA  120A  118A  	fcall	_Lcd_Int
  1245                           
  1246                           ;main.c: 37: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
  1247  0761  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  1248  0762  0AF6               	incf	I2C_ReadAtAddress@IntAdd,f
  1249  0763  30DE               	movlw	222
  1250  0764  120A  158A  2662  120A  118A  	fcall	_I2C_ReadAtAddress
  1251  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1252  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1253  076B  00B8               	movwf	??_main
  1254  076C  0838               	movf	??_main,w
  1255  076D  00C5               	movwf	main@TempVar000
  1256                           
  1257                           ;main.c: 38: Lcd_Int(2,7,(TempVar000>>4) & 0x07 ,1);
  1258  076E  3007               	movlw	7
  1259  076F  00B8               	movwf	??_main
  1260  0770  0838               	movf	??_main,w
  1261  0771  00A4               	movwf	Lcd_Int@x
  1262  0772  0845               	movf	main@TempVar000,w
  1263  0773  00B9               	movwf	??_main+1
  1264  0774  3004               	movlw	4
  1265  0775                     u2735:	
  1266  0775  1003               	clrc
  1267  0776  0CB9               	rrf	??_main+1,f
  1268  0777  3EFF               	addlw	-1
  1269  0778  1D03               	skipz
  1270  0779  2F75               	goto	u2735
  1271  077A  0839               	movf	??_main+1,w
  1272  077B  3907               	andlw	7
  1273  077C  00BA               	movwf	??_main+2
  1274  077D  083A               	movf	??_main+2,w
  1275  077E  00A5               	movwf	Lcd_Int@val
  1276  077F  01A6               	clrf	Lcd_Int@size
  1277  0780  0AA6               	incf	Lcd_Int@size,f
  1278  0781  3002               	movlw	2
  1279  0782  120A  118A  22AA  120A  118A  	fcall	_Lcd_Int
  1280                           
  1281                           ;main.c: 39: Lcd_Int(2,8,TempVar000 & 0x0f ,1);
  1282  0787  3008               	movlw	8
  1283  0788  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0789  1303               	bcf	3,6	;RP1=0, select bank0
  1285  078A  00B8               	movwf	??_main
  1286  078B  0838               	movf	??_main,w
  1287  078C  00A4               	movwf	Lcd_Int@x
  1288  078D  0845               	movf	main@TempVar000,w
  1289  078E  390F               	andlw	15
  1290  078F  00B9               	movwf	??_main+1
  1291  0790  0839               	movf	??_main+1,w
  1292  0791  00A5               	movwf	Lcd_Int@val
  1293  0792  01A6               	clrf	Lcd_Int@size
  1294  0793  0AA6               	incf	Lcd_Int@size,f
  1295  0794  3002               	movlw	2
  1296  0795  120A  118A  22AA  120A  118A  	fcall	_Lcd_Int
  1297                           
  1298                           ;main.c: 40: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
  1299  079A  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  1300  079B  30DE               	movlw	222
  1301  079C  120A  158A  2662  120A  118A  	fcall	_I2C_ReadAtAddress
  1302  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1303  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1304  07A3  00B8               	movwf	??_main
  1305  07A4  0838               	movf	??_main,w
  1306  07A5  00C5               	movwf	main@TempVar000
  1307                           
  1308                           ;main.c: 41: Lcd_Int(2,9,(TempVar000>>4) & 0x07 ,1);
  1309  07A6  3009               	movlw	9
  1310  07A7  00B8               	movwf	??_main
  1311  07A8  0838               	movf	??_main,w
  1312  07A9  00A4               	movwf	Lcd_Int@x
  1313  07AA  0845               	movf	main@TempVar000,w
  1314  07AB  00B9               	movwf	??_main+1
  1315  07AC  3004               	movlw	4
  1316  07AD                     u2745:	
  1317  07AD  1003               	clrc
  1318  07AE  0CB9               	rrf	??_main+1,f
  1319  07AF  3EFF               	addlw	-1
  1320  07B0  1D03               	skipz
  1321  07B1  2FAD               	goto	u2745
  1322  07B2  0839               	movf	??_main+1,w
  1323  07B3  3907               	andlw	7
  1324  07B4  00BA               	movwf	??_main+2
  1325  07B5  083A               	movf	??_main+2,w
  1326  07B6  00A5               	movwf	Lcd_Int@val
  1327  07B7  01A6               	clrf	Lcd_Int@size
  1328  07B8  0AA6               	incf	Lcd_Int@size,f
  1329  07B9  3002               	movlw	2
  1330  07BA  120A  118A  22AA  120A  118A  	fcall	_Lcd_Int
  1331                           
  1332                           ;main.c: 42: Lcd_Int(2,10,TempVar000 & 0x0f ,1);
  1333  07BF  300A               	movlw	10
  1334  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1335  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1336  07C2  00B8               	movwf	??_main
  1337  07C3  0838               	movf	??_main,w
  1338  07C4  00A4               	movwf	Lcd_Int@x
  1339  07C5  0845               	movf	main@TempVar000,w
  1340  07C6  390F               	andlw	15
  1341  07C7  00B9               	movwf	??_main+1
  1342  07C8  0839               	movf	??_main+1,w
  1343  07C9  00A5               	movwf	Lcd_Int@val
  1344  07CA  01A6               	clrf	Lcd_Int@size
  1345  07CB  0AA6               	incf	Lcd_Int@size,f
  1346  07CC  3002               	movlw	2
  1347  07CD  120A  118A  22AA  120A  118A  	fcall	_Lcd_Int
  1348                           
  1349                           ;main.c: 43: if (RA3 == 1)
  1350  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1351  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1352  07D4  1D85               	btfss	5,3	;volatile
  1353  07D5  2FDF               	goto	l2059
  1354                           
  1355                           ;main.c: 44: WriteToRTC(Data);
  1356  07D6  303B               	movlw	(low (main@Data| 0))& (0+255)
  1357  07D7  00F7               	movwf	WriteToRTC@Time
  1358  07D8  3000               	movlw	0
  1359  07D9  00F8               	movwf	WriteToRTC@Time+1
  1360  07DA  120A  118A  2452  120A  118A  	fcall	_WriteToRTC
  1361  07DF                     l2059:	
  1362                           
  1363                           ;main.c: 45: if (RA4 == 1)
  1364  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1365  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1366  07E1  1E05               	btfss	5,4	;volatile
  1367  07E2  2FEC               	goto	l2063
  1368                           
  1369                           ;main.c: 46: WriteToRTC("000000");
  1370  07E3  3008               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1371  07E4  00F7               	movwf	WriteToRTC@Time
  1372  07E5  3080               	movlw	128
  1373  07E6  00F8               	movwf	WriteToRTC@Time+1
  1374  07E7  120A  118A  2452  120A  118A  	fcall	_WriteToRTC
  1375  07EC                     l2063:	
  1376                           
  1377                           ;main.c: 47: _delay((unsigned long)((500)*(20000000/4000.0)));
  1378  07EC  300D               	movlw	13
  1379  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  1380  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  1381  07EF  00BA               	movwf	??_main+2
  1382  07F0  30AF               	movlw	175
  1383  07F1  00B9               	movwf	??_main+1
  1384  07F2  30C1               	movlw	193
  1385  07F3  00B8               	movwf	??_main
  1386  07F4                     u2797:	
  1387  07F4  0BB8               	decfsz	??_main,f
  1388  07F5  2FF4               	goto	u2797
  1389  07F6  0BB9               	decfsz	??_main+1,f
  1390  07F7  2FF4               	goto	u2797
  1391  07F8  0BBA               	decfsz	??_main+2,f
  1392  07F9  2FF4               	goto	u2797
  1393  07FA  0000               	nop
  1394  07FB  2ED5               	goto	l2029
  1395  07FC                     __end_of_main:	
  1396                           
  1397                           	psect	text1
  1398  0452                     __ptext1:	
  1399 ;; *************** function _WriteToRTC *****************
  1400 ;; Defined at:
  1401 ;;		line 3 in file "libs/gsk_funs.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  Time            2    7[COMMON] PTR unsigned char 
  1404 ;;		 -> STR_4(7), main@Data(6), 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  TempVar000      1    0[BANK0 ] unsigned char 
  1407 ;;  TempVar001      1    0        unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1417 ;;      Params:         2       0       0       0       0
  1418 ;;      Locals:         0       1       0       0       0
  1419 ;;      Temps:          5       0       0       0       0
  1420 ;;      Totals:         7       1       0       0       0
  1421 ;;Total ram usage:        8 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    3
  1424 ;; This function calls:
  1425 ;;		_I2C_WriteAtAddress
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           
  1432                           ;psect for function _WriteToRTC
  1433  0452                     _WriteToRTC:	
  1434                           
  1435                           ;gsk_funs.c: 4: char TempVar000, TempVar001;
  1436                           ;gsk_funs.c: 6: TempVar000 = 0x00;
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _WriteToRTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1440  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0454  01A0               	clrf	WriteToRTC@TempVar000
  1443                           
  1444                           ;gsk_funs.c: 7: TempVar000 = 0x03 & (Time[0]-0x30);
  1445  0455  0878               	movf	WriteToRTC@Time+1,w
  1446  0456  00FF               	movwf	127
  1447  0457  0877               	movf	WriteToRTC@Time,w
  1448  0458  0084               	movwf	4
  1449  0459  120A  158A  2000  120A  118A  	fcall	stringtab
  1450  045E  3ED0               	addlw	208
  1451  045F  3903               	andlw	3
  1452  0460  00F9               	movwf	??_WriteToRTC
  1453  0461  0879               	movf	??_WriteToRTC,w
  1454  0462  00A0               	movwf	WriteToRTC@TempVar000
  1455                           
  1456                           ;gsk_funs.c: 8: TempVar000 = TempVar000<<4;
  1457  0463  0820               	movf	WriteToRTC@TempVar000,w
  1458  0464  00F9               	movwf	??_WriteToRTC
  1459  0465  3003               	movlw	3
  1460  0466                     u2675:	
  1461  0466  1003               	clrc
  1462  0467  0DF9               	rlf	??_WriteToRTC,f
  1463  0468  3EFF               	addlw	-1
  1464  0469  1D03               	skipz
  1465  046A  2C66               	goto	u2675
  1466  046B  1003               	clrc
  1467  046C  0D79               	rlf	??_WriteToRTC,w
  1468  046D  00FA               	movwf	??_WriteToRTC+1
  1469  046E  087A               	movf	??_WriteToRTC+1,w
  1470  046F  00A0               	movwf	WriteToRTC@TempVar000
  1471                           
  1472                           ;gsk_funs.c: 9: TempVar000 = TempVar000 | (0x0f & (Time[1]-0x30));
  1473  0470  3001               	movlw	1
  1474  0471  00F9               	movwf	??_WriteToRTC
  1475  0472  0879               	movf	??_WriteToRTC,w
  1476  0473  0777               	addwf	WriteToRTC@Time,w
  1477  0474  00FB               	movwf	??_WriteToRTC+2
  1478  0475  0878               	movf	WriteToRTC@Time+1,w
  1479  0476  00FA               	movwf	??_WriteToRTC+1
  1480  0477  1803               	skipnc
  1481  0478  0AFA               	incf	??_WriteToRTC+1,f
  1482  0479  1BF9               	btfsc	??_WriteToRTC,7
  1483  047A  03FA               	decf	??_WriteToRTC+1,f
  1484  047B  087A               	movf	??_WriteToRTC+1,w
  1485  047C  00FC               	movwf	??_WriteToRTC+3
  1486  047D  087C               	movf	??_WriteToRTC+3,w
  1487  047E  00FF               	movwf	127
  1488  047F  087B               	movf	??_WriteToRTC+2,w
  1489  0480  0084               	movwf	4
  1490  0481  120A  158A  2000  120A  118A  	fcall	stringtab
  1491  0486  3ED0               	addlw	208
  1492  0487  390F               	andlw	15
  1493  0488  0420               	iorwf	WriteToRTC@TempVar000,w
  1494  0489  00FD               	movwf	??_WriteToRTC+4
  1495  048A  087D               	movf	??_WriteToRTC+4,w
  1496  048B  00A0               	movwf	WriteToRTC@TempVar000
  1497                           
  1498                           ;gsk_funs.c: 10: I2C_WriteAtAddress(0xde, 0x02, TempVar000);
  1499  048C  3002               	movlw	2
  1500  048D  00F9               	movwf	??_WriteToRTC
  1501  048E  0879               	movf	??_WriteToRTC,w
  1502  048F  00F2               	movwf	I2C_WriteAtAddress@IntAdd
  1503  0490  0820               	movf	WriteToRTC@TempVar000,w
  1504  0491  00FA               	movwf	??_WriteToRTC+1
  1505  0492  087A               	movf	??_WriteToRTC+1,w
  1506  0493  00F3               	movwf	I2C_WriteAtAddress@data
  1507  0494  30DE               	movlw	222
  1508  0495  120A  158A  2543  120A  118A  	fcall	_I2C_WriteAtAddress
  1509                           
  1510                           ;gsk_funs.c: 12: TempVar000 = 0x00;
  1511  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1512  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1513  049C  01A0               	clrf	WriteToRTC@TempVar000
  1514                           
  1515                           ;gsk_funs.c: 13: TempVar000 = 0x07 & (Time[2]-0x30);
  1516  049D  3002               	movlw	2
  1517  049E  00F9               	movwf	??_WriteToRTC
  1518  049F  0879               	movf	??_WriteToRTC,w
  1519  04A0  0777               	addwf	WriteToRTC@Time,w
  1520  04A1  00FB               	movwf	??_WriteToRTC+2
  1521  04A2  0878               	movf	WriteToRTC@Time+1,w
  1522  04A3  00FA               	movwf	??_WriteToRTC+1
  1523  04A4  1803               	skipnc
  1524  04A5  0AFA               	incf	??_WriteToRTC+1,f
  1525  04A6  1BF9               	btfsc	??_WriteToRTC,7
  1526  04A7  03FA               	decf	??_WriteToRTC+1,f
  1527  04A8  087A               	movf	??_WriteToRTC+1,w
  1528  04A9  00FC               	movwf	??_WriteToRTC+3
  1529  04AA  087C               	movf	??_WriteToRTC+3,w
  1530  04AB  00FF               	movwf	127
  1531  04AC  087B               	movf	??_WriteToRTC+2,w
  1532  04AD  0084               	movwf	4
  1533  04AE  120A  158A  2000  120A  118A  	fcall	stringtab
  1534  04B3  3ED0               	addlw	208
  1535  04B4  3907               	andlw	7
  1536  04B5  00FD               	movwf	??_WriteToRTC+4
  1537  04B6  087D               	movf	??_WriteToRTC+4,w
  1538  04B7  00A0               	movwf	WriteToRTC@TempVar000
  1539                           
  1540                           ;gsk_funs.c: 14: TempVar000 = TempVar000<<4;
  1541  04B8  0820               	movf	WriteToRTC@TempVar000,w
  1542  04B9  00F9               	movwf	??_WriteToRTC
  1543  04BA  3003               	movlw	3
  1544  04BB                     u2685:	
  1545  04BB  1003               	clrc
  1546  04BC  0DF9               	rlf	??_WriteToRTC,f
  1547  04BD  3EFF               	addlw	-1
  1548  04BE  1D03               	skipz
  1549  04BF  2CBB               	goto	u2685
  1550  04C0  1003               	clrc
  1551  04C1  0D79               	rlf	??_WriteToRTC,w
  1552  04C2  00FA               	movwf	??_WriteToRTC+1
  1553  04C3  087A               	movf	??_WriteToRTC+1,w
  1554  04C4  00A0               	movwf	WriteToRTC@TempVar000
  1555                           
  1556                           ;gsk_funs.c: 15: TempVar000 = TempVar000 | (0x0f & (Time[3]-0x30));
  1557  04C5  3003               	movlw	3
  1558  04C6  00F9               	movwf	??_WriteToRTC
  1559  04C7  0879               	movf	??_WriteToRTC,w
  1560  04C8  0777               	addwf	WriteToRTC@Time,w
  1561  04C9  00FB               	movwf	??_WriteToRTC+2
  1562  04CA  0878               	movf	WriteToRTC@Time+1,w
  1563  04CB  00FA               	movwf	??_WriteToRTC+1
  1564  04CC  1803               	skipnc
  1565  04CD  0AFA               	incf	??_WriteToRTC+1,f
  1566  04CE  1BF9               	btfsc	??_WriteToRTC,7
  1567  04CF  03FA               	decf	??_WriteToRTC+1,f
  1568  04D0  087A               	movf	??_WriteToRTC+1,w
  1569  04D1  00FC               	movwf	??_WriteToRTC+3
  1570  04D2  087C               	movf	??_WriteToRTC+3,w
  1571  04D3  00FF               	movwf	127
  1572  04D4  087B               	movf	??_WriteToRTC+2,w
  1573  04D5  0084               	movwf	4
  1574  04D6  120A  158A  2000  120A  118A  	fcall	stringtab
  1575  04DB  3ED0               	addlw	208
  1576  04DC  390F               	andlw	15
  1577  04DD  0420               	iorwf	WriteToRTC@TempVar000,w
  1578  04DE  00FD               	movwf	??_WriteToRTC+4
  1579  04DF  087D               	movf	??_WriteToRTC+4,w
  1580  04E0  00A0               	movwf	WriteToRTC@TempVar000
  1581                           
  1582                           ;gsk_funs.c: 16: TempVar000 = TempVar000|0x80;
  1583  04E1  0820               	movf	WriteToRTC@TempVar000,w
  1584  04E2  3880               	iorlw	128
  1585  04E3  00F9               	movwf	??_WriteToRTC
  1586  04E4  0879               	movf	??_WriteToRTC,w
  1587  04E5  00A0               	movwf	WriteToRTC@TempVar000
  1588                           
  1589                           ;gsk_funs.c: 17: I2C_WriteAtAddress(0xde, 0x01, TempVar000);
  1590  04E6  01F2               	clrf	I2C_WriteAtAddress@IntAdd
  1591  04E7  0AF2               	incf	I2C_WriteAtAddress@IntAdd,f
  1592  04E8  0820               	movf	WriteToRTC@TempVar000,w
  1593  04E9  00F9               	movwf	??_WriteToRTC
  1594  04EA  0879               	movf	??_WriteToRTC,w
  1595  04EB  00F3               	movwf	I2C_WriteAtAddress@data
  1596  04EC  30DE               	movlw	222
  1597  04ED  120A  158A  2543  120A  118A  	fcall	_I2C_WriteAtAddress
  1598                           
  1599                           ;gsk_funs.c: 19: TempVar000 = 0x00;
  1600  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1601  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1602  04F4  01A0               	clrf	WriteToRTC@TempVar000
  1603                           
  1604                           ;gsk_funs.c: 20: TempVar000 = 0x07 & (Time[4]-0x30);
  1605  04F5  3004               	movlw	4
  1606  04F6  00F9               	movwf	??_WriteToRTC
  1607  04F7  0879               	movf	??_WriteToRTC,w
  1608  04F8  0777               	addwf	WriteToRTC@Time,w
  1609  04F9  00FB               	movwf	??_WriteToRTC+2
  1610  04FA  0878               	movf	WriteToRTC@Time+1,w
  1611  04FB  00FA               	movwf	??_WriteToRTC+1
  1612  04FC  1803               	skipnc
  1613  04FD  0AFA               	incf	??_WriteToRTC+1,f
  1614  04FE  1BF9               	btfsc	??_WriteToRTC,7
  1615  04FF  03FA               	decf	??_WriteToRTC+1,f
  1616  0500  087A               	movf	??_WriteToRTC+1,w
  1617  0501  00FC               	movwf	??_WriteToRTC+3
  1618  0502  087C               	movf	??_WriteToRTC+3,w
  1619  0503  00FF               	movwf	127
  1620  0504  087B               	movf	??_WriteToRTC+2,w
  1621  0505  0084               	movwf	4
  1622  0506  120A  158A  2000  120A  118A  	fcall	stringtab
  1623  050B  3ED0               	addlw	208
  1624  050C  3907               	andlw	7
  1625  050D  00FD               	movwf	??_WriteToRTC+4
  1626  050E  087D               	movf	??_WriteToRTC+4,w
  1627  050F  00A0               	movwf	WriteToRTC@TempVar000
  1628                           
  1629                           ;gsk_funs.c: 21: TempVar000 = TempVar000<<4;
  1630  0510  0820               	movf	WriteToRTC@TempVar000,w
  1631  0511  00F9               	movwf	??_WriteToRTC
  1632  0512  3003               	movlw	3
  1633  0513                     u2695:	
  1634  0513  1003               	clrc
  1635  0514  0DF9               	rlf	??_WriteToRTC,f
  1636  0515  3EFF               	addlw	-1
  1637  0516  1D03               	skipz
  1638  0517  2D13               	goto	u2695
  1639  0518  1003               	clrc
  1640  0519  0D79               	rlf	??_WriteToRTC,w
  1641  051A  00FA               	movwf	??_WriteToRTC+1
  1642  051B  087A               	movf	??_WriteToRTC+1,w
  1643  051C  00A0               	movwf	WriteToRTC@TempVar000
  1644                           
  1645                           ;gsk_funs.c: 22: TempVar000 = TempVar000 | (0x0f & (Time[5]-0x30));
  1646  051D  3005               	movlw	5
  1647  051E  00F9               	movwf	??_WriteToRTC
  1648  051F  0879               	movf	??_WriteToRTC,w
  1649  0520  0777               	addwf	WriteToRTC@Time,w
  1650  0521  00FB               	movwf	??_WriteToRTC+2
  1651  0522  0878               	movf	WriteToRTC@Time+1,w
  1652  0523  00FA               	movwf	??_WriteToRTC+1
  1653  0524  1803               	skipnc
  1654  0525  0AFA               	incf	??_WriteToRTC+1,f
  1655  0526  1BF9               	btfsc	??_WriteToRTC,7
  1656  0527  03FA               	decf	??_WriteToRTC+1,f
  1657  0528  087A               	movf	??_WriteToRTC+1,w
  1658  0529  00FC               	movwf	??_WriteToRTC+3
  1659  052A  087C               	movf	??_WriteToRTC+3,w
  1660  052B  00FF               	movwf	127
  1661  052C  087B               	movf	??_WriteToRTC+2,w
  1662  052D  0084               	movwf	4
  1663  052E  120A  158A  2000  120A  118A  	fcall	stringtab
  1664  0533  3ED0               	addlw	208
  1665  0534  390F               	andlw	15
  1666  0535  0420               	iorwf	WriteToRTC@TempVar000,w
  1667  0536  00FD               	movwf	??_WriteToRTC+4
  1668  0537  087D               	movf	??_WriteToRTC+4,w
  1669  0538  00A0               	movwf	WriteToRTC@TempVar000
  1670                           
  1671                           ;gsk_funs.c: 23: TempVar000 = TempVar000|0x80;
  1672  0539  0820               	movf	WriteToRTC@TempVar000,w
  1673  053A  3880               	iorlw	128
  1674  053B  00F9               	movwf	??_WriteToRTC
  1675  053C  0879               	movf	??_WriteToRTC,w
  1676  053D  00A0               	movwf	WriteToRTC@TempVar000
  1677                           
  1678                           ;gsk_funs.c: 24: I2C_WriteAtAddress(0xde, 0x00, TempVar000);
  1679  053E  01F2               	clrf	I2C_WriteAtAddress@IntAdd
  1680  053F  0820               	movf	WriteToRTC@TempVar000,w
  1681  0540  00F9               	movwf	??_WriteToRTC
  1682  0541  0879               	movf	??_WriteToRTC,w
  1683  0542  00F3               	movwf	I2C_WriteAtAddress@data
  1684  0543  30DE               	movlw	222
  1685  0544  120A  158A  2543   	fcall	_I2C_WriteAtAddress
  1686  0547  0008               	return
  1687  0548                     __end_of_WriteToRTC:	
  1688                           
  1689                           	psect	text2
  1690  0D43                     __ptext2:	
  1691 ;; *************** function _I2C_WriteAtAddress *****************
  1692 ;; Defined at:
  1693 ;;		line 69 in file "libs/gsk_i2c.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  DevID           1    wreg     unsigned char 
  1696 ;;  IntAdd          1    2[COMMON] unsigned char 
  1697 ;;  data            1    3[COMMON] unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  DevID           1    6[COMMON] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         2       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0
  1711 ;;      Temps:          2       0       0       0       0
  1712 ;;      Totals:         5       0       0       0       0
  1713 ;;Total ram usage:        5 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    2
  1716 ;; This function calls:
  1717 ;;		_I2C_Master_Start
  1718 ;;		_I2C_Master_Stop
  1719 ;;		_I2C_Master_Write
  1720 ;; This function is called by:
  1721 ;;		_WriteToRTC
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _I2C_WriteAtAddress
  1727  0D43                     _I2C_WriteAtAddress:	
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _I2C_WriteAtAddress: [wreg+status,2+status,0+pclath+cstack]
  1731                           ;I2C_WriteAtAddress@DevID stored from wreg
  1732  0D43  00F6               	movwf	I2C_WriteAtAddress@DevID
  1733                           
  1734                           ;gsk_i2c.c: 71: I2C_Master_Start();
  1735  0D44  120A  158A  24A0  120A  158A  	fcall	_I2C_Master_Start
  1736                           
  1737                           ;gsk_i2c.c: 72: I2C_Master_Write(DevID);
  1738  0D49  0876               	movf	I2C_WriteAtAddress@DevID,w
  1739  0D4A  00F4               	movwf	??_I2C_WriteAtAddress
  1740  0D4B  01F5               	clrf	??_I2C_WriteAtAddress+1
  1741  0D4C  0874               	movf	??_I2C_WriteAtAddress,w
  1742  0D4D  00F0               	movwf	I2C_Master_Write@d
  1743  0D4E  0875               	movf	??_I2C_WriteAtAddress+1,w
  1744  0D4F  00F1               	movwf	I2C_Master_Write@d+1
  1745  0D50  120A  158A  24AE  120A  158A  	fcall	_I2C_Master_Write
  1746                           
  1747                           ;gsk_i2c.c: 73: I2C_Master_Write(IntAdd);
  1748  0D55  0872               	movf	I2C_WriteAtAddress@IntAdd,w
  1749  0D56  00F4               	movwf	??_I2C_WriteAtAddress
  1750  0D57  01F5               	clrf	??_I2C_WriteAtAddress+1
  1751  0D58  0874               	movf	??_I2C_WriteAtAddress,w
  1752  0D59  00F0               	movwf	I2C_Master_Write@d
  1753  0D5A  0875               	movf	??_I2C_WriteAtAddress+1,w
  1754  0D5B  00F1               	movwf	I2C_Master_Write@d+1
  1755  0D5C  120A  158A  24AE  120A  158A  	fcall	_I2C_Master_Write
  1756                           
  1757                           ;gsk_i2c.c: 74: I2C_Master_Write(data);
  1758  0D61  0873               	movf	I2C_WriteAtAddress@data,w
  1759  0D62  00F4               	movwf	??_I2C_WriteAtAddress
  1760  0D63  01F5               	clrf	??_I2C_WriteAtAddress+1
  1761  0D64  0874               	movf	??_I2C_WriteAtAddress,w
  1762  0D65  00F0               	movwf	I2C_Master_Write@d
  1763  0D66  0875               	movf	??_I2C_WriteAtAddress+1,w
  1764  0D67  00F1               	movwf	I2C_Master_Write@d+1
  1765  0D68  120A  158A  24AE  120A  158A  	fcall	_I2C_Master_Write
  1766                           
  1767                           ;gsk_i2c.c: 75: I2C_Master_Stop();
  1768  0D6D  120A  158A  24A7   	fcall	_I2C_Master_Stop
  1769  0D70  0008               	return
  1770  0D71                     __end_of_I2C_WriteAtAddress:	
  1771                           
  1772                           	psect	text3
  1773  0F45                     __ptext3:	
  1774 ;; *************** function _WriteLongInt *****************
  1775 ;; Defined at:
  1776 ;;		line 182 in file "libs/HD44780.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  y               1    wreg     unsigned char 
  1779 ;;  x               1    9[BANK0 ] unsigned char 
  1780 ;;  Val             4   10[BANK0 ] unsigned long 
  1781 ;;  size            1   14[BANK0 ] unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  y               1   18[BANK0 ] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         0       6       0       0       0
  1794 ;;      Locals:         0       1       0       0       0
  1795 ;;      Temps:          0       3       0       0       0
  1796 ;;      Totals:         0      10       0       0       0
  1797 ;;Total ram usage:       10 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    3
  1800 ;; This function calls:
  1801 ;;		_Lcd_WriteChar
  1802 ;;		___bmul
  1803 ;;		___lldiv
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _WriteLongInt
  1811  0F45                     _WriteLongInt:	
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _WriteLongInt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1815                           ;WriteLongInt@y stored from wreg
  1816  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0F47  00B2               	movwf	WriteLongInt@y
  1819  0F48                     l1943:	
  1820                           ;HD44780.c: 183: while(size) {
  1821                           
  1822  0F48  082E               	movf	WriteLongInt@size,w
  1823  0F49  1903               	btfsc	3,2
  1824  0F4A  0008               	return
  1825                           
  1826                           ;HD44780.c: 184: size--;
  1827  0F4B  3001               	movlw	1
  1828  0F4C  02AE               	subwf	WriteLongInt@size,f
  1829                           
  1830                           ;HD44780.c: 185: Lcd_WriteChar (y, x+size, ((Val - ((Val/10)*10))+0x30));
  1831  0F4D  082E               	movf	WriteLongInt@size,w
  1832  0F4E  0729               	addwf	WriteLongInt@x,w
  1833  0F4F  00AF               	movwf	??_WriteLongInt
  1834  0F50  082F               	movf	??_WriteLongInt,w
  1835  0F51  00A4               	movwf	Lcd_WriteChar@x
  1836  0F52  300A               	movlw	10
  1837  0F53  00B0               	movwf	??_WriteLongInt+1
  1838  0F54  0830               	movf	??_WriteLongInt+1,w
  1839  0F55  00A0               	movwf	___bmul@multiplicand
  1840  0F56  082D               	movf	WriteLongInt@Val+3,w
  1841  0F57  00F7               	movwf	___lldiv@dividend+3
  1842  0F58  082C               	movf	WriteLongInt@Val+2,w
  1843  0F59  00F6               	movwf	___lldiv@dividend+2
  1844  0F5A  082B               	movf	WriteLongInt@Val+1,w
  1845  0F5B  00F5               	movwf	___lldiv@dividend+1
  1846  0F5C  082A               	movf	WriteLongInt@Val,w
  1847  0F5D  00F4               	movwf	___lldiv@dividend
  1848  0F5E  3000               	movlw	0
  1849  0F5F  00F3               	movwf	___lldiv@divisor+3
  1850  0F60  3000               	movlw	0
  1851  0F61  00F2               	movwf	___lldiv@divisor+2
  1852  0F62  3000               	movlw	0
  1853  0F63  00F1               	movwf	___lldiv@divisor+1
  1854  0F64  300A               	movlw	10
  1855  0F65  00F0               	movwf	___lldiv@divisor
  1856  0F66  120A  158A  27A2  120A  158A  	fcall	___lldiv
  1857  0F6B  0870               	movf	?___lldiv,w
  1858  0F6C  120A  118A  2010  120A  158A  	fcall	___bmul
  1859  0F71  3AFF               	xorlw	255
  1860  0F72  3E01               	addlw	1
  1861  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0F75  072A               	addwf	WriteLongInt@Val,w
  1864  0F76  3E30               	addlw	48
  1865  0F77  00B1               	movwf	??_WriteLongInt+2
  1866  0F78  0831               	movf	??_WriteLongInt+2,w
  1867  0F79  00A5               	movwf	Lcd_WriteChar@c
  1868  0F7A  0832               	movf	WriteLongInt@y,w
  1869  0F7B  120A  158A  2515  120A  158A  	fcall	_Lcd_WriteChar
  1870                           
  1871                           ;HD44780.c: 186: Val = Val/10;
  1872  0F80  3000               	movlw	0
  1873  0F81  00F3               	movwf	___lldiv@divisor+3
  1874  0F82  3000               	movlw	0
  1875  0F83  00F2               	movwf	___lldiv@divisor+2
  1876  0F84  3000               	movlw	0
  1877  0F85  00F1               	movwf	___lldiv@divisor+1
  1878  0F86  300A               	movlw	10
  1879  0F87  00F0               	movwf	___lldiv@divisor
  1880  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0F8A  082D               	movf	WriteLongInt@Val+3,w
  1883  0F8B  00F7               	movwf	___lldiv@dividend+3
  1884  0F8C  082C               	movf	WriteLongInt@Val+2,w
  1885  0F8D  00F6               	movwf	___lldiv@dividend+2
  1886  0F8E  082B               	movf	WriteLongInt@Val+1,w
  1887  0F8F  00F5               	movwf	___lldiv@dividend+1
  1888  0F90  082A               	movf	WriteLongInt@Val,w
  1889  0F91  00F4               	movwf	___lldiv@dividend
  1890  0F92  120A  158A  27A2  120A  158A  	fcall	___lldiv
  1891  0F97  0873               	movf	?___lldiv+3,w
  1892  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0F9A  00AD               	movwf	WriteLongInt@Val+3
  1895  0F9B  0872               	movf	?___lldiv+2,w
  1896  0F9C  00AC               	movwf	WriteLongInt@Val+2
  1897  0F9D  0871               	movf	?___lldiv+1,w
  1898  0F9E  00AB               	movwf	WriteLongInt@Val+1
  1899  0F9F  0870               	movf	?___lldiv,w
  1900  0FA0  00AA               	movwf	WriteLongInt@Val
  1901  0FA1  2F48               	goto	l1943
  1902  0FA2                     __end_of_WriteLongInt:	
  1903                           
  1904                           	psect	text4
  1905  0D15                     __ptext4:	
  1906 ;; *************** function _Lcd_WriteChar *****************
  1907 ;; Defined at:
  1908 ;;		line 99 in file "libs/HD44780.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  y               1    wreg     unsigned char 
  1911 ;;  x               1    4[BANK0 ] unsigned char 
  1912 ;;  c               1    5[BANK0 ] unsigned char 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  y               1    7[BANK0 ] unsigned char 
  1915 ;;  data            1    8[BANK0 ] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         0       2       0       0       0
  1926 ;;      Locals:         0       2       0       0       0
  1927 ;;      Temps:          0       1       0       0       0
  1928 ;;      Totals:         0       5       0       0       0
  1929 ;;Total ram usage:        5 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    2
  1932 ;; This function calls:
  1933 ;;		_Lcd_CharCP
  1934 ;;		_Lcd_Command
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;;		_WriteLongInt
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           
  1942                           ;psect for function _Lcd_WriteChar
  1943  0D15                     _Lcd_WriteChar:	
  1944                           
  1945                           ;incstack = 0
  1946                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1947                           ;Lcd_WriteChar@y stored from wreg
  1948  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0D17  00A7               	movwf	Lcd_WriteChar@y
  1951                           
  1952                           ;HD44780.c: 100: unsigned char data;
  1953                           ;HD44780.c: 101: switch(y){
  1954  0D18  2D28               	goto	l1535
  1955  0D19                     l1525:	
  1956                           ;HD44780.c: 102: case 1: data = 127 + x; break;
  1957                           
  1958  0D19  0824               	movf	Lcd_WriteChar@x,w
  1959  0D1A  3E7F               	addlw	127
  1960  0D1B  2D24               	goto	L3
  1961  0D1C                     l1527:	
  1962                           ;HD44780.c: 103: case 2: data = 191 + x; break;
  1963                           
  1964  0D1C  0824               	movf	Lcd_WriteChar@x,w
  1965  0D1D  3EBF               	addlw	191
  1966  0D1E  2D24               	goto	L3
  1967  0D1F                     l1529:	
  1968                           ;HD44780.c: 104: case 3: data = 147 + x; break;
  1969                           
  1970  0D1F  0824               	movf	Lcd_WriteChar@x,w
  1971  0D20  3E93               	addlw	147
  1972  0D21  2D24               	goto	L3
  1973  0D22                     l1531:	
  1974                           ;HD44780.c: 105: case 4: data = 211 + x; break;
  1975                           
  1976  0D22  0824               	movf	Lcd_WriteChar@x,w
  1977  0D23  3ED3               	addlw	211
  1978  0D24                     L3:	
  1979  0D24  00A6               	movwf	??_Lcd_WriteChar
  1980  0D25  0826               	movf	??_Lcd_WriteChar,w
  1981  0D26  00A8               	movwf	Lcd_WriteChar@data
  1982                           
  1983                           ;HD44780.c: 106: default: break;}
  1984  0D27  2D36               	goto	l1537
  1985  0D28                     l1535:	
  1986  0D28  0827               	movf	Lcd_WriteChar@y,w
  1987                           
  1988                           ; Switch size 1, requested type "space"
  1989                           ; Number of cases is 4, Range of values is 1 to 4
  1990                           ; switch strategies available:
  1991                           ; Name         Instructions Cycles
  1992                           ; simple_byte           13     7 (average)
  1993                           ; direct_byte           23    11 (fixed)
  1994                           ; jumptable            263     9 (fixed)
  1995                           ;	Chosen strategy is simple_byte
  1996  0D29  3A01               	xorlw	1	; case 1
  1997  0D2A  1903               	skipnz
  1998  0D2B  2D19               	goto	l1525
  1999  0D2C  3A03               	xorlw	3	; case 2
  2000  0D2D  1903               	skipnz
  2001  0D2E  2D1C               	goto	l1527
  2002  0D2F  3A01               	xorlw	1	; case 3
  2003  0D30  1903               	skipnz
  2004  0D31  2D1F               	goto	l1529
  2005  0D32  3A07               	xorlw	7	; case 4
  2006  0D33  1903               	skipnz
  2007  0D34  2D22               	goto	l1531
  2008  0D35  2D36               	goto	l1537
  2009  0D36                     l1537:	
  2010                           
  2011                           ;HD44780.c: 107: Lcd_Command(data);
  2012  0D36  0828               	movf	Lcd_WriteChar@data,w
  2013  0D37  120A  118A  2157  120A  158A  	fcall	_Lcd_Command
  2014                           
  2015                           ;HD44780.c: 108: Lcd_CharCP(c);
  2016  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0D3E  0825               	movf	Lcd_WriteChar@c,w
  2019  0D3F  120A  118A  21FE   	fcall	_Lcd_CharCP
  2020  0D42  0008               	return
  2021  0D43                     __end_of_Lcd_WriteChar:	
  2022                           
  2023                           	psect	text5
  2024  0EA7                     __ptext5:	
  2025 ;; *************** function _UART_ReadFromGPS *****************
  2026 ;; Defined at:
  2027 ;;		line 65 in file "libs/gsk_usart.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  Output          1    wreg     PTR unsigned char 
  2030 ;;		 -> main@Data(6), 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  Output          1    2[COMMON] PTR unsigned char 
  2033 ;;		 -> main@Data(6), 
  2034 ;;  i               1    4[COMMON] unsigned char 
  2035 ;;  Pos             1    5[COMMON] unsigned char 
  2036 ;;  TempChar        1    3[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         4       0       0       0       0
  2048 ;;      Temps:          2       0       0       0       0
  2049 ;;      Totals:         6       0       0       0       0
  2050 ;;Total ram usage:        6 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    1
  2053 ;; This function calls:
  2054 ;;		_UART_Read
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _UART_ReadFromGPS
  2062  0EA7                     _UART_ReadFromGPS:	
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _UART_ReadFromGPS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2066                           ;UART_ReadFromGPS@Output stored from wreg
  2067  0EA7  00F2               	movwf	UART_ReadFromGPS@Output
  2068                           
  2069                           ;gsk_usart.c: 70: const char StartCode[7]="$GPRMC,";
  2070                           ;gsk_usart.c: 71: char Pos=0x00;
  2071  0EA8  01F5               	clrf	UART_ReadFromGPS@Pos
  2072                           
  2073                           ;gsk_usart.c: 72: char TempChar = 0x00;
  2074  0EA9  01F3               	clrf	UART_ReadFromGPS@TempChar
  2075                           
  2076                           ;gsk_usart.c: 73: CREN = 0;
  2077  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0EAC  1218               	bcf	24,4	;volatile
  2080                           
  2081                           ;gsk_usart.c: 74: CREN = 1;
  2082  0EAD  1618               	bsf	24,4	;volatile
  2083                           
  2084                           ;gsk_usart.c: 75: for(char i=0; i<255; i++) {
  2085  0EAE  01F4               	clrf	UART_ReadFromGPS@i
  2086  0EAF                     L4:	
  2087  0EAF  0A74               	incf	UART_ReadFromGPS@i,w
  2088  0EB0  1903               	btfsc	3,2
  2089  0EB1  0008               	return
  2090                           
  2091                           ;gsk_usart.c: 77: TempChar = UART_Read();
  2092  0EB2  120A  158A  249A  120A  158A  	fcall	_UART_Read
  2093  0EB7  00F0               	movwf	??_UART_ReadFromGPS
  2094  0EB8  0870               	movf	??_UART_ReadFromGPS,w
  2095  0EB9  00F3               	movwf	UART_ReadFromGPS@TempChar
  2096                           
  2097                           ;gsk_usart.c: 78: if ((Pos>=0x07) & (Pos<=0x0c)) {
  2098  0EBA  3007               	movlw	7
  2099  0EBB  0275               	subwf	UART_ReadFromGPS@Pos,w
  2100  0EBC  1C03               	skipc
  2101  0EBD  2ECE               	goto	l1897
  2102  0EBE  300D               	movlw	13
  2103  0EBF  0275               	subwf	UART_ReadFromGPS@Pos,w
  2104  0EC0  1803               	skipnc
  2105  0EC1  2ECE               	goto	l1897
  2106                           
  2107                           ;gsk_usart.c: 79: Output[Pos-0x07]= TempChar;
  2108  0EC2  0873               	movf	UART_ReadFromGPS@TempChar,w
  2109  0EC3  00F0               	movwf	??_UART_ReadFromGPS
  2110  0EC4  0875               	movf	UART_ReadFromGPS@Pos,w
  2111  0EC5  3EF9               	addlw	-7
  2112  0EC6  0772               	addwf	UART_ReadFromGPS@Output,w
  2113  0EC7  00F1               	movwf	??_UART_ReadFromGPS+1
  2114  0EC8  0871               	movf	??_UART_ReadFromGPS+1,w
  2115  0EC9  0084               	movwf	4
  2116  0ECA  0870               	movf	??_UART_ReadFromGPS,w
  2117  0ECB  1383               	bcf	3,7	;select IRP bank0
  2118  0ECC  0080               	movwf	0
  2119  0ECD  2EDD               	goto	l1901
  2120  0ECE                     l1897:	
  2121                           ;gsk_usart.c: 81: } else if ((StartCode[Pos] == TempChar) && (Pos<0x07)) {
  2122                           
  2123                           ;gsk_usart.c: 80: Pos++;
  2124                           
  2125  0ECE  0875               	movf	UART_ReadFromGPS@Pos,w
  2126  0ECF  3E01               	addlw	low ((UART_ReadFromGPS@StartCode-__stringbase)| (0+32768))
  2127  0ED0  0084               	movwf	4
  2128  0ED1  120A  158A  200A  120A  158A  	fcall	stringdir
  2129  0ED6  0673               	xorwf	UART_ReadFromGPS@TempChar,w
  2130  0ED7  1D03               	skipz
  2131  0ED8  2EE2               	goto	l1903
  2132  0ED9  3007               	movlw	7
  2133  0EDA  0275               	subwf	UART_ReadFromGPS@Pos,w
  2134  0EDB  1803               	skipnc
  2135  0EDC  2EE2               	goto	l1903
  2136  0EDD                     l1901:	
  2137                           
  2138                           ;gsk_usart.c: 82: Pos++;
  2139  0EDD  3001               	movlw	1
  2140  0EDE  00F0               	movwf	??_UART_ReadFromGPS
  2141  0EDF  0870               	movf	??_UART_ReadFromGPS,w
  2142  0EE0  07F5               	addwf	UART_ReadFromGPS@Pos,f
  2143                           
  2144                           ;gsk_usart.c: 83: } else if (Pos>0x0c)
  2145  0EE1  2EE7               	goto	l1911
  2146  0EE2                     l1903:	
  2147  0EE2  300D               	movlw	13
  2148  0EE3  0275               	subwf	UART_ReadFromGPS@Pos,w
  2149  0EE4  1803               	btfsc	3,0
  2150  0EE5  0008               	return
  2151                           
  2152                           ;gsk_usart.c: 85: else
  2153                           ;gsk_usart.c: 86: Pos=0;
  2154                           
  2155                           ;gsk_usart.c: 84: return;
  2156  0EE6  01F5               	clrf	UART_ReadFromGPS@Pos
  2157  0EE7                     l1911:	
  2158  0EE7  3001               	movlw	1
  2159  0EE8  00F0               	movwf	??_UART_ReadFromGPS
  2160  0EE9  0870               	movf	??_UART_ReadFromGPS,w
  2161  0EEA  07F4               	addwf	UART_ReadFromGPS@i,f
  2162  0EEB  2EAF               	goto	L4
  2163  0EEC                     __end_of_UART_ReadFromGPS:	
  2164                           
  2165                           	psect	text6
  2166  0C9A                     __ptext6:	
  2167 ;; *************** function _UART_Read *****************
  2168 ;; Defined at:
  2169 ;;		line 44 in file "libs/gsk_usart.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      unsigned char 
  2176 ;; Registers used:
  2177 ;;		wreg
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_UART_ReadFromGPS
  2193 ;;		_UART_Read_Text
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _UART_Read
  2199  0C9A                     _UART_Read:	
  2200  0C9A                     l100:	
  2201                           ;gsk_usart.c: 45: while(!RCIF);
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in _UART_Read: [wreg]
  2205                           
  2206  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0C9C  1E8C               	btfss	12,5	;volatile
  2209  0C9D  2C9A               	goto	l100
  2210                           
  2211                           ;gsk_usart.c: 51: return RCREG;
  2212  0C9E  081A               	movf	26,w	;volatile
  2213  0C9F  0008               	return
  2214  0CA0                     __end_of_UART_Read:	
  2215                           
  2216                           	psect	text7
  2217  036A                     __ptext7:	
  2218 ;; *************** function _UART_Init *****************
  2219 ;; Defined at:
  2220 ;;		line 3 in file "libs/gsk_usart.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  baudrate        4    6[BANK0 ] const long 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  x               2    9[COMMON] unsigned int 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      unsigned char 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       4       0       0       0
  2235 ;;      Locals:         2       0       0       0       0
  2236 ;;      Temps:          0      12       0       0       0
  2237 ;;      Totals:         2      16       0       0       0
  2238 ;;Total ram usage:       18 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    1
  2241 ;; This function calls:
  2242 ;;		___aldiv
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           
  2249                           ;psect for function _UART_Init
  2250  036A                     _UART_Init:	
  2251                           
  2252                           ;gsk_usart.c: 4: unsigned int x;
  2253                           ;gsk_usart.c: 5: x = (20000000 - baudrate*64)/(baudrate*64);
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2257  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2258  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2259  036C  0826               	movf	UART_Init@baudrate,w
  2260  036D  00AA               	movwf	??_UART_Init
  2261  036E  0827               	movf	UART_Init@baudrate+1,w
  2262  036F  00AB               	movwf	??_UART_Init+1
  2263  0370  0828               	movf	UART_Init@baudrate+2,w
  2264  0371  00AC               	movwf	??_UART_Init+2
  2265  0372  0829               	movf	UART_Init@baudrate+3,w
  2266  0373  00AD               	movwf	??_UART_Init+3
  2267  0374  3006               	movlw	6
  2268  0375                     u2395:	
  2269  0375  1003               	clrc
  2270  0376  0DAA               	rlf	??_UART_Init,f
  2271  0377  0DAB               	rlf	??_UART_Init+1,f
  2272  0378  0DAC               	rlf	??_UART_Init+2,f
  2273  0379  0DAD               	rlf	??_UART_Init+3,f
  2274  037A  3EFF               	addlw	-1
  2275  037B  1D03               	skipz
  2276  037C  2B75               	goto	u2395
  2277  037D  082D               	movf	??_UART_Init+3,w
  2278  037E  00F3               	movwf	___aldiv@divisor+3
  2279  037F  082C               	movf	??_UART_Init+2,w
  2280  0380  00F2               	movwf	___aldiv@divisor+2
  2281  0381  082B               	movf	??_UART_Init+1,w
  2282  0382  00F1               	movwf	___aldiv@divisor+1
  2283  0383  082A               	movf	??_UART_Init,w
  2284  0384  00F0               	movwf	___aldiv@divisor
  2285  0385  3000               	movlw	0
  2286  0386  00AE               	movwf	??_UART_Init+4
  2287  0387  302D               	movlw	45
  2288  0388  00AF               	movwf	??_UART_Init+5
  2289  0389  3031               	movlw	49
  2290  038A  00B0               	movwf	??_UART_Init+6
  2291  038B  3001               	movlw	1
  2292  038C  00B1               	movwf	??_UART_Init+7
  2293  038D  0826               	movf	UART_Init@baudrate,w
  2294  038E  00B2               	movwf	??_UART_Init+8
  2295  038F  0827               	movf	UART_Init@baudrate+1,w
  2296  0390  00B3               	movwf	??_UART_Init+9
  2297  0391  0828               	movf	UART_Init@baudrate+2,w
  2298  0392  00B4               	movwf	??_UART_Init+10
  2299  0393  0829               	movf	UART_Init@baudrate+3,w
  2300  0394  00B5               	movwf	??_UART_Init+11
  2301  0395  3006               	movlw	6
  2302  0396                     u2405:	
  2303  0396  1003               	clrc
  2304  0397  0DB2               	rlf	??_UART_Init+8,f
  2305  0398  0DB3               	rlf	??_UART_Init+9,f
  2306  0399  0DB4               	rlf	??_UART_Init+10,f
  2307  039A  0DB5               	rlf	??_UART_Init+11,f
  2308  039B  3EFF               	addlw	-1
  2309  039C  1D03               	skipz
  2310  039D  2B96               	goto	u2405
  2311  039E  09B2               	comf	??_UART_Init+8,f
  2312  039F  09B3               	comf	??_UART_Init+9,f
  2313  03A0  09B4               	comf	??_UART_Init+10,f
  2314  03A1  09B5               	comf	??_UART_Init+11,f
  2315  03A2  0AB2               	incf	??_UART_Init+8,f
  2316  03A3  1903               	skipnz
  2317  03A4  0AB3               	incf	??_UART_Init+9,f
  2318  03A5  1903               	skipnz
  2319  03A6  0AB4               	incf	??_UART_Init+10,f
  2320  03A7  1903               	skipnz
  2321  03A8  0AB5               	incf	??_UART_Init+11,f
  2322  03A9  0832               	movf	??_UART_Init+8,w
  2323  03AA  07AE               	addwf	??_UART_Init+4,f
  2324  03AB  0833               	movf	??_UART_Init+9,w
  2325  03AC  1803               	skipnc
  2326  03AD  0F33               	incfsz	??_UART_Init+9,w
  2327  03AE  2BB0               	goto	u2410
  2328  03AF  2BB1               	goto	u2411
  2329  03B0                     u2410:	
  2330  03B0  07AF               	addwf	??_UART_Init+5,f
  2331  03B1                     u2411:	
  2332  03B1  0834               	movf	??_UART_Init+10,w
  2333  03B2  1803               	skipnc
  2334  03B3  0F34               	incfsz	??_UART_Init+10,w
  2335  03B4  2BB6               	goto	u2412
  2336  03B5  2BB7               	goto	u2413
  2337  03B6                     u2412:	
  2338  03B6  07B0               	addwf	??_UART_Init+6,f
  2339  03B7                     u2413:	
  2340  03B7  0835               	movf	??_UART_Init+11,w
  2341  03B8  1803               	skipnc
  2342  03B9  0A35               	incf	??_UART_Init+11,w
  2343  03BA  07B1               	addwf	??_UART_Init+7,f
  2344  03BB  0831               	movf	??_UART_Init+7,w
  2345  03BC  00F7               	movwf	___aldiv@dividend+3
  2346  03BD  0830               	movf	??_UART_Init+6,w
  2347  03BE  00F6               	movwf	___aldiv@dividend+2
  2348  03BF  082F               	movf	??_UART_Init+5,w
  2349  03C0  00F5               	movwf	___aldiv@dividend+1
  2350  03C1  082E               	movf	??_UART_Init+4,w
  2351  03C2  00F4               	movwf	___aldiv@dividend
  2352  03C3  120A  118A  2023  120A  118A  	fcall	___aldiv
  2353  03C8  0871               	movf	?___aldiv+1,w
  2354  03C9  00FA               	movwf	UART_Init@x+1
  2355  03CA  0870               	movf	?___aldiv,w
  2356  03CB  00F9               	movwf	UART_Init@x
  2357                           
  2358                           ;gsk_usart.c: 6: if(x>255)
  2359  03CC  3001               	movlw	1
  2360  03CD  027A               	subwf	UART_Init@x+1,w
  2361  03CE  3000               	movlw	0
  2362  03CF  1903               	skipnz
  2363  03D0  0279               	subwf	UART_Init@x,w
  2364  03D1  1C03               	skipc
  2365  03D2  2C38               	goto	l1825
  2366                           
  2367                           ;gsk_usart.c: 7: {
  2368                           ;gsk_usart.c: 8: x = (20000000 - baudrate*16)/(baudrate*16);
  2369  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2370  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2371  03D5  0826               	movf	UART_Init@baudrate,w
  2372  03D6  00AA               	movwf	??_UART_Init
  2373  03D7  0827               	movf	UART_Init@baudrate+1,w
  2374  03D8  00AB               	movwf	??_UART_Init+1
  2375  03D9  0828               	movf	UART_Init@baudrate+2,w
  2376  03DA  00AC               	movwf	??_UART_Init+2
  2377  03DB  0829               	movf	UART_Init@baudrate+3,w
  2378  03DC  00AD               	movwf	??_UART_Init+3
  2379  03DD  3004               	movlw	4
  2380  03DE                     u2435:	
  2381  03DE  1003               	clrc
  2382  03DF  0DAA               	rlf	??_UART_Init,f
  2383  03E0  0DAB               	rlf	??_UART_Init+1,f
  2384  03E1  0DAC               	rlf	??_UART_Init+2,f
  2385  03E2  0DAD               	rlf	??_UART_Init+3,f
  2386  03E3  3EFF               	addlw	-1
  2387  03E4  1D03               	skipz
  2388  03E5  2BDE               	goto	u2435
  2389  03E6  082D               	movf	??_UART_Init+3,w
  2390  03E7  00F3               	movwf	___aldiv@divisor+3
  2391  03E8  082C               	movf	??_UART_Init+2,w
  2392  03E9  00F2               	movwf	___aldiv@divisor+2
  2393  03EA  082B               	movf	??_UART_Init+1,w
  2394  03EB  00F1               	movwf	___aldiv@divisor+1
  2395  03EC  082A               	movf	??_UART_Init,w
  2396  03ED  00F0               	movwf	___aldiv@divisor
  2397  03EE  3000               	movlw	0
  2398  03EF  00AE               	movwf	??_UART_Init+4
  2399  03F0  302D               	movlw	45
  2400  03F1  00AF               	movwf	??_UART_Init+5
  2401  03F2  3031               	movlw	49
  2402  03F3  00B0               	movwf	??_UART_Init+6
  2403  03F4  3001               	movlw	1
  2404  03F5  00B1               	movwf	??_UART_Init+7
  2405  03F6  0826               	movf	UART_Init@baudrate,w
  2406  03F7  00B2               	movwf	??_UART_Init+8
  2407  03F8  0827               	movf	UART_Init@baudrate+1,w
  2408  03F9  00B3               	movwf	??_UART_Init+9
  2409  03FA  0828               	movf	UART_Init@baudrate+2,w
  2410  03FB  00B4               	movwf	??_UART_Init+10
  2411  03FC  0829               	movf	UART_Init@baudrate+3,w
  2412  03FD  00B5               	movwf	??_UART_Init+11
  2413  03FE  3004               	movlw	4
  2414  03FF                     u2445:	
  2415  03FF  1003               	clrc
  2416  0400  0DB2               	rlf	??_UART_Init+8,f
  2417  0401  0DB3               	rlf	??_UART_Init+9,f
  2418  0402  0DB4               	rlf	??_UART_Init+10,f
  2419  0403  0DB5               	rlf	??_UART_Init+11,f
  2420  0404  3EFF               	addlw	-1
  2421  0405  1D03               	skipz
  2422  0406  2BFF               	goto	u2445
  2423  0407  09B2               	comf	??_UART_Init+8,f
  2424  0408  09B3               	comf	??_UART_Init+9,f
  2425  0409  09B4               	comf	??_UART_Init+10,f
  2426  040A  09B5               	comf	??_UART_Init+11,f
  2427  040B  0AB2               	incf	??_UART_Init+8,f
  2428  040C  1903               	skipnz
  2429  040D  0AB3               	incf	??_UART_Init+9,f
  2430  040E  1903               	skipnz
  2431  040F  0AB4               	incf	??_UART_Init+10,f
  2432  0410  1903               	skipnz
  2433  0411  0AB5               	incf	??_UART_Init+11,f
  2434  0412  0832               	movf	??_UART_Init+8,w
  2435  0413  07AE               	addwf	??_UART_Init+4,f
  2436  0414  0833               	movf	??_UART_Init+9,w
  2437  0415  1803               	skipnc
  2438  0416  0F33               	incfsz	??_UART_Init+9,w
  2439  0417  2C19               	goto	u2450
  2440  0418  2C1A               	goto	u2451
  2441  0419                     u2450:	
  2442  0419  07AF               	addwf	??_UART_Init+5,f
  2443  041A                     u2451:	
  2444  041A  0834               	movf	??_UART_Init+10,w
  2445  041B  1803               	skipnc
  2446  041C  0F34               	incfsz	??_UART_Init+10,w
  2447  041D  2C1F               	goto	u2452
  2448  041E  2C20               	goto	u2453
  2449  041F                     u2452:	
  2450  041F  07B0               	addwf	??_UART_Init+6,f
  2451  0420                     u2453:	
  2452  0420  0835               	movf	??_UART_Init+11,w
  2453  0421  1803               	skipnc
  2454  0422  0A35               	incf	??_UART_Init+11,w
  2455  0423  07B1               	addwf	??_UART_Init+7,f
  2456  0424  0831               	movf	??_UART_Init+7,w
  2457  0425  00F7               	movwf	___aldiv@dividend+3
  2458  0426  0830               	movf	??_UART_Init+6,w
  2459  0427  00F6               	movwf	___aldiv@dividend+2
  2460  0428  082F               	movf	??_UART_Init+5,w
  2461  0429  00F5               	movwf	___aldiv@dividend+1
  2462  042A  082E               	movf	??_UART_Init+4,w
  2463  042B  00F4               	movwf	___aldiv@dividend
  2464  042C  120A  118A  2023  120A  118A  	fcall	___aldiv
  2465  0431  0871               	movf	?___aldiv+1,w
  2466  0432  00FA               	movwf	UART_Init@x+1
  2467  0433  0870               	movf	?___aldiv,w
  2468  0434  00F9               	movwf	UART_Init@x
  2469                           
  2470                           ;gsk_usart.c: 9: BRGH = 1;
  2471  0435  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0436  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0437  1518               	bsf	24,2	;volatile
  2474  0438                     l1825:	
  2475                           
  2476                           ;gsk_usart.c: 10: }
  2477                           ;gsk_usart.c: 11: if(x<256)
  2478  0438  3001               	movlw	1
  2479  0439  027A               	subwf	UART_Init@x+1,w
  2480  043A  3000               	movlw	0
  2481  043B  1903               	skipnz
  2482  043C  0279               	subwf	UART_Init@x,w
  2483  043D  1803               	skipnc
  2484  043E  0008               	return
  2485                           
  2486                           ;gsk_usart.c: 12: {
  2487                           ;gsk_usart.c: 13: SPBRG = x;
  2488  043F  0879               	movf	UART_Init@x,w
  2489  0440  1683               	bsf	3,5	;RP0=1, select bank1
  2490  0441  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0442  0099               	movwf	25	;volatile
  2492                           
  2493                           ;gsk_usart.c: 14: SYNC = 0;
  2494  0443  1218               	bcf	24,4	;volatile
  2495                           
  2496                           ;gsk_usart.c: 15: SPEN = 1;
  2497  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0446  1798               	bsf	24,7	;volatile
  2500                           
  2501                           ;gsk_usart.c: 16: TRISC7 = 1;
  2502  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0449  1787               	bsf	7,7	;volatile
  2505                           
  2506                           ;gsk_usart.c: 17: TRISC6 = 1;
  2507  044A  1707               	bsf	7,6	;volatile
  2508                           
  2509                           ;gsk_usart.c: 18: CREN = 1;
  2510  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2511  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2512  044D  1618               	bsf	24,4	;volatile
  2513                           
  2514                           ;gsk_usart.c: 19: TXEN = 1;
  2515  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2516  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2517  0450  1698               	bsf	24,5	;volatile
  2518                           
  2519                           ;gsk_usart.c: 20: return 1;
  2520                           ;	Return value of _UART_Init is never used
  2521  0451  0008               	return
  2522  0452                     __end_of_UART_Init:	
  2523                           ;gsk_usart.c: 21: }
  2524                           ;gsk_usart.c: 22: return 0;
  2525                           ;	Return value of _UART_Init is never used
  2526                           
  2527                           
  2528                           	psect	text8
  2529  0023                     __ptext8:	
  2530 ;; *************** function ___aldiv *****************
  2531 ;; Defined at:
  2532 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  divisor         4    0[COMMON] long 
  2535 ;;  dividend        4    4[COMMON] long 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  quotient        4    2[BANK0 ] long 
  2538 ;;  sign            1    1[BANK0 ] unsigned char 
  2539 ;;  counter         1    0[BANK0 ] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  4    0[COMMON] long 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         8       0       0       0       0
  2550 ;;      Locals:         0       6       0       0       0
  2551 ;;      Temps:          1       0       0       0       0
  2552 ;;      Totals:         9       6       0       0       0
  2553 ;;Total ram usage:       15 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_UART_Init
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function ___aldiv
  2564  0023                     ___aldiv:	
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2568  0023  1283               	bcf	3,5	;RP0=0, select bank0
  2569  0024  1303               	bcf	3,6	;RP1=0, select bank0
  2570  0025  01A1               	clrf	___aldiv@sign
  2571  0026  1FF3               	btfss	___aldiv@divisor+3,7
  2572  0027  2835               	goto	l428
  2573  0028  09F0               	comf	___aldiv@divisor,f
  2574  0029  09F1               	comf	___aldiv@divisor+1,f
  2575  002A  09F2               	comf	___aldiv@divisor+2,f
  2576  002B  09F3               	comf	___aldiv@divisor+3,f
  2577  002C  0AF0               	incf	___aldiv@divisor,f
  2578  002D  1903               	skipnz
  2579  002E  0AF1               	incf	___aldiv@divisor+1,f
  2580  002F  1903               	skipnz
  2581  0030  0AF2               	incf	___aldiv@divisor+2,f
  2582  0031  1903               	skipnz
  2583  0032  0AF3               	incf	___aldiv@divisor+3,f
  2584  0033  01A1               	clrf	___aldiv@sign
  2585  0034  0AA1               	incf	___aldiv@sign,f
  2586  0035                     l428:	
  2587  0035  1FF7               	btfss	___aldiv@dividend+3,7
  2588  0036  2846               	goto	l1605
  2589  0037  09F4               	comf	___aldiv@dividend,f
  2590  0038  09F5               	comf	___aldiv@dividend+1,f
  2591  0039  09F6               	comf	___aldiv@dividend+2,f
  2592  003A  09F7               	comf	___aldiv@dividend+3,f
  2593  003B  0AF4               	incf	___aldiv@dividend,f
  2594  003C  1903               	skipnz
  2595  003D  0AF5               	incf	___aldiv@dividend+1,f
  2596  003E  1903               	skipnz
  2597  003F  0AF6               	incf	___aldiv@dividend+2,f
  2598  0040  1903               	skipnz
  2599  0041  0AF7               	incf	___aldiv@dividend+3,f
  2600  0042  3001               	movlw	1
  2601  0043  00F8               	movwf	??___aldiv
  2602  0044  0878               	movf	??___aldiv,w
  2603  0045  06A1               	xorwf	___aldiv@sign,f
  2604  0046                     l1605:	
  2605  0046  3000               	movlw	0
  2606  0047  00A5               	movwf	___aldiv@quotient+3
  2607  0048  3000               	movlw	0
  2608  0049  00A4               	movwf	___aldiv@quotient+2
  2609  004A  3000               	movlw	0
  2610  004B  00A3               	movwf	___aldiv@quotient+1
  2611  004C  3000               	movlw	0
  2612  004D  00A2               	movwf	___aldiv@quotient
  2613  004E  0873               	movf	___aldiv@divisor+3,w
  2614  004F  0472               	iorwf	___aldiv@divisor+2,w
  2615  0050  0471               	iorwf	___aldiv@divisor+1,w
  2616  0051  0470               	iorwf	___aldiv@divisor,w
  2617  0052  1903               	skipnz
  2618  0053  289B               	goto	l1627
  2619  0054  01A0               	clrf	___aldiv@counter
  2620  0055  0AA0               	incf	___aldiv@counter,f
  2621  0056                     l1613:	
  2622  0056  1BF3               	btfsc	___aldiv@divisor+3,7
  2623  0057  2866               	goto	l1615
  2624  0058  3001               	movlw	1
  2625  0059  00F8               	movwf	??___aldiv
  2626  005A                     u2065:	
  2627  005A  1003               	clrc
  2628  005B  0DF0               	rlf	___aldiv@divisor,f
  2629  005C  0DF1               	rlf	___aldiv@divisor+1,f
  2630  005D  0DF2               	rlf	___aldiv@divisor+2,f
  2631  005E  0DF3               	rlf	___aldiv@divisor+3,f
  2632  005F  0BF8               	decfsz	??___aldiv,f
  2633  0060  285A               	goto	u2065
  2634  0061  3001               	movlw	1
  2635  0062  00F8               	movwf	??___aldiv
  2636  0063  0878               	movf	??___aldiv,w
  2637  0064  07A0               	addwf	___aldiv@counter,f
  2638  0065  2856               	goto	l1613
  2639  0066                     l1615:	
  2640  0066  3001               	movlw	1
  2641  0067  00F8               	movwf	??___aldiv
  2642  0068                     u2085:	
  2643  0068  1003               	clrc
  2644  0069  0DA2               	rlf	___aldiv@quotient,f
  2645  006A  0DA3               	rlf	___aldiv@quotient+1,f
  2646  006B  0DA4               	rlf	___aldiv@quotient+2,f
  2647  006C  0DA5               	rlf	___aldiv@quotient+3,f
  2648  006D  0BF8               	decfsz	??___aldiv,f
  2649  006E  2868               	goto	u2085
  2650  006F  0873               	movf	___aldiv@divisor+3,w
  2651  0070  0277               	subwf	___aldiv@dividend+3,w
  2652  0071  1D03               	skipz
  2653  0072  287D               	goto	u2095
  2654  0073  0872               	movf	___aldiv@divisor+2,w
  2655  0074  0276               	subwf	___aldiv@dividend+2,w
  2656  0075  1D03               	skipz
  2657  0076  287D               	goto	u2095
  2658  0077  0871               	movf	___aldiv@divisor+1,w
  2659  0078  0275               	subwf	___aldiv@dividend+1,w
  2660  0079  1D03               	skipz
  2661  007A  287D               	goto	u2095
  2662  007B  0870               	movf	___aldiv@divisor,w
  2663  007C  0274               	subwf	___aldiv@dividend,w
  2664  007D                     u2095:	
  2665  007D  1C03               	skipc
  2666  007E  288E               	goto	l1623
  2667  007F  0870               	movf	___aldiv@divisor,w
  2668  0080  02F4               	subwf	___aldiv@dividend,f
  2669  0081  0871               	movf	___aldiv@divisor+1,w
  2670  0082  1C03               	skipc
  2671  0083  0F71               	incfsz	___aldiv@divisor+1,w
  2672  0084  02F5               	subwf	___aldiv@dividend+1,f
  2673  0085  0872               	movf	___aldiv@divisor+2,w
  2674  0086  1C03               	skipc
  2675  0087  0F72               	incfsz	___aldiv@divisor+2,w
  2676  0088  02F6               	subwf	___aldiv@dividend+2,f
  2677  0089  0873               	movf	___aldiv@divisor+3,w
  2678  008A  1C03               	skipc
  2679  008B  0F73               	incfsz	___aldiv@divisor+3,w
  2680  008C  02F7               	subwf	___aldiv@dividend+3,f
  2681  008D  1422               	bsf	___aldiv@quotient,0
  2682  008E                     l1623:	
  2683  008E  3001               	movlw	1
  2684  008F                     u2105:	
  2685  008F  1003               	clrc
  2686  0090  0CF3               	rrf	___aldiv@divisor+3,f
  2687  0091  0CF2               	rrf	___aldiv@divisor+2,f
  2688  0092  0CF1               	rrf	___aldiv@divisor+1,f
  2689  0093  0CF0               	rrf	___aldiv@divisor,f
  2690  0094  3EFF               	addlw	-1
  2691  0095  1D03               	skipz
  2692  0096  288F               	goto	u2105
  2693  0097  3001               	movlw	1
  2694  0098  02A0               	subwf	___aldiv@counter,f
  2695  0099  1D03               	btfss	3,2
  2696  009A  2866               	goto	l1615
  2697  009B                     l1627:	
  2698  009B  0821               	movf	___aldiv@sign,w
  2699  009C  1903               	btfsc	3,2
  2700  009D  28A9               	goto	l1631
  2701  009E  09A2               	comf	___aldiv@quotient,f
  2702  009F  09A3               	comf	___aldiv@quotient+1,f
  2703  00A0  09A4               	comf	___aldiv@quotient+2,f
  2704  00A1  09A5               	comf	___aldiv@quotient+3,f
  2705  00A2  0AA2               	incf	___aldiv@quotient,f
  2706  00A3  1903               	skipnz
  2707  00A4  0AA3               	incf	___aldiv@quotient+1,f
  2708  00A5  1903               	skipnz
  2709  00A6  0AA4               	incf	___aldiv@quotient+2,f
  2710  00A7  1903               	skipnz
  2711  00A8  0AA5               	incf	___aldiv@quotient+3,f
  2712  00A9                     l1631:	
  2713  00A9  0825               	movf	___aldiv@quotient+3,w
  2714  00AA  00F3               	movwf	?___aldiv+3
  2715  00AB  0824               	movf	___aldiv@quotient+2,w
  2716  00AC  00F2               	movwf	?___aldiv+2
  2717  00AD  0823               	movf	___aldiv@quotient+1,w
  2718  00AE  00F1               	movwf	?___aldiv+1
  2719  00AF  0822               	movf	___aldiv@quotient,w
  2720  00B0  00F0               	movwf	?___aldiv
  2721  00B1  0008               	return
  2722  00B2                     __end_of___aldiv:	
  2723                           
  2724                           	psect	text9
  2725  0548                     __ptext9:	
  2726 ;; *************** function _ReadRTCAsSec *****************
  2727 ;; Defined at:
  2728 ;;		line 27 in file "libs/gsk_funs.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  Out             4   19[BANK0 ] unsigned long 
  2733 ;;  TempVar000      1   23[BANK0 ] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  4    0[BANK0 ] unsigned long 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         0       4       0       0       0
  2744 ;;      Locals:         0       7       0       0       0
  2745 ;;      Temps:          0      13       0       0       0
  2746 ;;      Totals:         0      24       0       0       0
  2747 ;;Total ram usage:       24 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    3
  2750 ;; This function calls:
  2751 ;;		_I2C_ReadAtAddress
  2752 ;;		___lmul
  2753 ;;		___wmul
  2754 ;; This function is called by:
  2755 ;;		_main
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function _ReadRTCAsSec
  2761  0548                     _ReadRTCAsSec:	
  2762                           
  2763                           ;gsk_funs.c: 28: char TempVar000;
  2764                           ;gsk_funs.c: 29: uint32_t Out = 0;
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _ReadRTCAsSec: [wreg+status,2+status,0+pclath+cstack]
  2768  0548  3000               	movlw	0
  2769  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2770  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2771  054B  00B6               	movwf	ReadRTCAsSec@Out+3
  2772  054C  3000               	movlw	0
  2773  054D  00B5               	movwf	ReadRTCAsSec@Out+2
  2774  054E  3000               	movlw	0
  2775  054F  00B4               	movwf	ReadRTCAsSec@Out+1
  2776  0550  3000               	movlw	0
  2777  0551  00B3               	movwf	ReadRTCAsSec@Out
  2778                           
  2779                           ;gsk_funs.c: 30: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
  2780  0552  3002               	movlw	2
  2781  0553  00A4               	movwf	??_ReadRTCAsSec
  2782  0554  0824               	movf	??_ReadRTCAsSec,w
  2783  0555  00F6               	movwf	I2C_ReadAtAddress@IntAdd
  2784  0556  30DE               	movlw	222
  2785  0557  120A  158A  2662  120A  118A  	fcall	_I2C_ReadAtAddress
  2786  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2787  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2788  055E  00A5               	movwf	??_ReadRTCAsSec+1
  2789  055F  0825               	movf	??_ReadRTCAsSec+1,w
  2790  0560  00B7               	movwf	ReadRTCAsSec@TempVar000
  2791                           
  2792                           ;gsk_funs.c: 31: Out = ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x03)*10);
  2793  0561  0837               	movf	ReadRTCAsSec@TempVar000,w
  2794  0562  00A4               	movwf	??_ReadRTCAsSec
  2795  0563  3004               	movlw	4
  2796  0564                     u2565:	
  2797  0564  1003               	clrc
  2798  0565  0CA4               	rrf	??_ReadRTCAsSec,f
  2799  0566  3EFF               	addlw	-1
  2800  0567  1D03               	skipz
  2801  0568  2D64               	goto	u2565
  2802  0569  0824               	movf	??_ReadRTCAsSec,w
  2803  056A  3903               	andlw	3
  2804  056B  00A5               	movwf	??_ReadRTCAsSec+1
  2805  056C  01A6               	clrf	??_ReadRTCAsSec+2
  2806  056D  0825               	movf	??_ReadRTCAsSec+1,w
  2807  056E  00F0               	movwf	___wmul@multiplier
  2808  056F  0826               	movf	??_ReadRTCAsSec+2,w
  2809  0570  00F1               	movwf	___wmul@multiplier+1
  2810  0571  300A               	movlw	10
  2811  0572  00F2               	movwf	___wmul@multiplicand
  2812  0573  3000               	movlw	0
  2813  0574  00F3               	movwf	___wmul@multiplicand+1
  2814  0575  120A  158A  24C8  120A  118A  	fcall	___wmul
  2815  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2816  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2817  057C  0837               	movf	ReadRTCAsSec@TempVar000,w
  2818  057D  390F               	andlw	15
  2819  057E  0770               	addwf	?___wmul,w
  2820  057F  00B3               	movwf	ReadRTCAsSec@Out
  2821  0580  0871               	movf	?___wmul+1,w
  2822  0581  1803               	skipnc
  2823  0582  0A71               	incf	?___wmul+1,w
  2824  0583  00B4               	movwf	ReadRTCAsSec@Out+1
  2825  0584  01B5               	clrf	ReadRTCAsSec@Out+2
  2826  0585  1BB4               	btfsc	ReadRTCAsSec@Out+1,7
  2827  0586  03B5               	decf	ReadRTCAsSec@Out+2,f
  2828  0587  0835               	movf	ReadRTCAsSec@Out+2,w
  2829  0588  00B6               	movwf	ReadRTCAsSec@Out+3
  2830                           
  2831                           ;gsk_funs.c: 32: Out = Out*3600;
  2832  0589  0836               	movf	ReadRTCAsSec@Out+3,w
  2833  058A  00F3               	movwf	___lmul@multiplier+3
  2834  058B  0835               	movf	ReadRTCAsSec@Out+2,w
  2835  058C  00F2               	movwf	___lmul@multiplier+2
  2836  058D  0834               	movf	ReadRTCAsSec@Out+1,w
  2837  058E  00F1               	movwf	___lmul@multiplier+1
  2838  058F  0833               	movf	ReadRTCAsSec@Out,w
  2839  0590  00F0               	movwf	___lmul@multiplier
  2840  0591  3000               	movlw	0
  2841  0592  00F7               	movwf	___lmul@multiplicand+3
  2842  0593  3000               	movlw	0
  2843  0594  00F6               	movwf	___lmul@multiplicand+2
  2844  0595  300E               	movlw	14
  2845  0596  00F5               	movwf	___lmul@multiplicand+1
  2846  0597  3010               	movlw	16
  2847  0598  00F4               	movwf	___lmul@multiplicand
  2848  0599  120A  158A  25E3  120A  118A  	fcall	___lmul
  2849  059E  0873               	movf	?___lmul+3,w
  2850  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2851  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2852  05A1  00B6               	movwf	ReadRTCAsSec@Out+3
  2853  05A2  0872               	movf	?___lmul+2,w
  2854  05A3  00B5               	movwf	ReadRTCAsSec@Out+2
  2855  05A4  0871               	movf	?___lmul+1,w
  2856  05A5  00B4               	movwf	ReadRTCAsSec@Out+1
  2857  05A6  0870               	movf	?___lmul,w
  2858  05A7  00B3               	movwf	ReadRTCAsSec@Out
  2859                           
  2860                           ;gsk_funs.c: 34: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
  2861  05A8  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  2862  05A9  0AF6               	incf	I2C_ReadAtAddress@IntAdd,f
  2863  05AA  30DE               	movlw	222
  2864  05AB  120A  158A  2662  120A  118A  	fcall	_I2C_ReadAtAddress
  2865  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2866  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2867  05B2  00A4               	movwf	??_ReadRTCAsSec
  2868  05B3  0824               	movf	??_ReadRTCAsSec,w
  2869  05B4  00B7               	movwf	ReadRTCAsSec@TempVar000
  2870                           
  2871                           ;gsk_funs.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  2872  05B5  0837               	movf	ReadRTCAsSec@TempVar000,w
  2873  05B6  00A4               	movwf	??_ReadRTCAsSec
  2874  05B7  3004               	movlw	4
  2875  05B8                     u2575:	
  2876  05B8  1003               	clrc
  2877  05B9  0CA4               	rrf	??_ReadRTCAsSec,f
  2878  05BA  3EFF               	addlw	-1
  2879  05BB  1D03               	skipz
  2880  05BC  2DB8               	goto	u2575
  2881  05BD  0824               	movf	??_ReadRTCAsSec,w
  2882  05BE  3907               	andlw	7
  2883  05BF  00A5               	movwf	??_ReadRTCAsSec+1
  2884  05C0  01A6               	clrf	??_ReadRTCAsSec+2
  2885  05C1  0825               	movf	??_ReadRTCAsSec+1,w
  2886  05C2  00F0               	movwf	___wmul@multiplier
  2887  05C3  0826               	movf	??_ReadRTCAsSec+2,w
  2888  05C4  00F1               	movwf	___wmul@multiplier+1
  2889  05C5  300A               	movlw	10
  2890  05C6  00F2               	movwf	___wmul@multiplicand
  2891  05C7  3000               	movlw	0
  2892  05C8  00F3               	movwf	___wmul@multiplicand+1
  2893  05C9  120A  158A  24C8  120A  118A  	fcall	___wmul
  2894  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2895  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2896  05D0  0837               	movf	ReadRTCAsSec@TempVar000,w
  2897  05D1  390F               	andlw	15
  2898  05D2  0770               	addwf	?___wmul,w
  2899  05D3  00B1               	movwf	_ReadRTCAsSec$695
  2900  05D4  0871               	movf	?___wmul+1,w
  2901  05D5  1803               	skipnc
  2902  05D6  0A71               	incf	?___wmul+1,w
  2903  05D7  00B2               	movwf	_ReadRTCAsSec$695+1
  2904                           
  2905                           ;gsk_funs.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  2906  05D8  0833               	movf	ReadRTCAsSec@Out,w
  2907  05D9  00A4               	movwf	??_ReadRTCAsSec
  2908  05DA  0834               	movf	ReadRTCAsSec@Out+1,w
  2909  05DB  00A5               	movwf	??_ReadRTCAsSec+1
  2910  05DC  0835               	movf	ReadRTCAsSec@Out+2,w
  2911  05DD  00A6               	movwf	??_ReadRTCAsSec+2
  2912  05DE  0836               	movf	ReadRTCAsSec@Out+3,w
  2913  05DF  00A7               	movwf	??_ReadRTCAsSec+3
  2914  05E0  0832               	movf	_ReadRTCAsSec$695+1,w
  2915  05E1  00F1               	movwf	___wmul@multiplier+1
  2916  05E2  0831               	movf	_ReadRTCAsSec$695,w
  2917  05E3  00F0               	movwf	___wmul@multiplier
  2918  05E4  303C               	movlw	60
  2919  05E5  00F2               	movwf	___wmul@multiplicand
  2920  05E6  3000               	movlw	0
  2921  05E7  00F3               	movwf	___wmul@multiplicand+1
  2922  05E8  120A  158A  24C8  120A  118A  	fcall	___wmul
  2923  05ED  0870               	movf	?___wmul,w
  2924  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2925  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2926  05F0  00A8               	movwf	??_ReadRTCAsSec+4
  2927  05F1  0871               	movf	?___wmul+1,w
  2928  05F2  00A9               	movwf	??_ReadRTCAsSec+5
  2929  05F3  3000               	movlw	0
  2930  05F4  1BA9               	btfsc	??_ReadRTCAsSec+5,7
  2931  05F5  30FF               	movlw	255
  2932  05F6  00AA               	movwf	??_ReadRTCAsSec+6
  2933  05F7  00AB               	movwf	??_ReadRTCAsSec+7
  2934  05F8  0828               	movf	??_ReadRTCAsSec+4,w
  2935  05F9  07A4               	addwf	??_ReadRTCAsSec,f
  2936  05FA  0829               	movf	??_ReadRTCAsSec+5,w
  2937  05FB  1803               	skipnc
  2938  05FC  0F29               	incfsz	??_ReadRTCAsSec+5,w
  2939  05FD  2DFF               	goto	u2580
  2940  05FE  2E00               	goto	u2581
  2941  05FF                     u2580:	
  2942  05FF  07A5               	addwf	??_ReadRTCAsSec+1,f
  2943  0600                     u2581:	
  2944  0600  082A               	movf	??_ReadRTCAsSec+6,w
  2945  0601  1803               	skipnc
  2946  0602  0F2A               	incfsz	??_ReadRTCAsSec+6,w
  2947  0603  2E05               	goto	u2582
  2948  0604  2E06               	goto	u2583
  2949  0605                     u2582:	
  2950  0605  07A6               	addwf	??_ReadRTCAsSec+2,f
  2951  0606                     u2583:	
  2952  0606  082B               	movf	??_ReadRTCAsSec+7,w
  2953  0607  1803               	skipnc
  2954  0608  0A2B               	incf	??_ReadRTCAsSec+7,w
  2955  0609  07A7               	addwf	??_ReadRTCAsSec+3,f
  2956  060A  0827               	movf	??_ReadRTCAsSec+3,w
  2957  060B  00B6               	movwf	ReadRTCAsSec@Out+3
  2958  060C  0826               	movf	??_ReadRTCAsSec+2,w
  2959  060D  00B5               	movwf	ReadRTCAsSec@Out+2
  2960  060E  0825               	movf	??_ReadRTCAsSec+1,w
  2961  060F  00B4               	movwf	ReadRTCAsSec@Out+1
  2962  0610  0824               	movf	??_ReadRTCAsSec,w
  2963  0611  00B3               	movwf	ReadRTCAsSec@Out
  2964                           
  2965                           ;gsk_funs.c: 37: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
  2966  0612  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  2967  0613  30DE               	movlw	222
  2968  0614  120A  158A  2662  120A  118A  	fcall	_I2C_ReadAtAddress
  2969  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2970  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2971  061B  00A4               	movwf	??_ReadRTCAsSec
  2972  061C  0824               	movf	??_ReadRTCAsSec,w
  2973  061D  00B7               	movwf	ReadRTCAsSec@TempVar000
  2974                           
  2975                           ;gsk_funs.c: 38: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10);
  2976  061E  0833               	movf	ReadRTCAsSec@Out,w
  2977  061F  00A4               	movwf	??_ReadRTCAsSec
  2978  0620  0834               	movf	ReadRTCAsSec@Out+1,w
  2979  0621  00A5               	movwf	??_ReadRTCAsSec+1
  2980  0622  0835               	movf	ReadRTCAsSec@Out+2,w
  2981  0623  00A6               	movwf	??_ReadRTCAsSec+2
  2982  0624  0836               	movf	ReadRTCAsSec@Out+3,w
  2983  0625  00A7               	movwf	??_ReadRTCAsSec+3
  2984  0626  0837               	movf	ReadRTCAsSec@TempVar000,w
  2985  0627  00A8               	movwf	??_ReadRTCAsSec+4
  2986  0628  3004               	movlw	4
  2987  0629                     u2595:	
  2988  0629  1003               	clrc
  2989  062A  0CA8               	rrf	??_ReadRTCAsSec+4,f
  2990  062B  3EFF               	addlw	-1
  2991  062C  1D03               	skipz
  2992  062D  2E29               	goto	u2595
  2993  062E  0828               	movf	??_ReadRTCAsSec+4,w
  2994  062F  3907               	andlw	7
  2995  0630  00A9               	movwf	??_ReadRTCAsSec+5
  2996  0631  01AA               	clrf	??_ReadRTCAsSec+6
  2997  0632  0829               	movf	??_ReadRTCAsSec+5,w
  2998  0633  00F0               	movwf	___wmul@multiplier
  2999  0634  082A               	movf	??_ReadRTCAsSec+6,w
  3000  0635  00F1               	movwf	___wmul@multiplier+1
  3001  0636  300A               	movlw	10
  3002  0637  00F2               	movwf	___wmul@multiplicand
  3003  0638  3000               	movlw	0
  3004  0639  00F3               	movwf	___wmul@multiplicand+1
  3005  063A  120A  158A  24C8  120A  118A  	fcall	___wmul
  3006  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0641  0837               	movf	ReadRTCAsSec@TempVar000,w
  3009  0642  390F               	andlw	15
  3010  0643  0770               	addwf	?___wmul,w
  3011  0644  00AB               	movwf	??_ReadRTCAsSec+7
  3012  0645  0871               	movf	?___wmul+1,w
  3013  0646  1803               	skipnc
  3014  0647  0A71               	incf	?___wmul+1,w
  3015  0648  00AC               	movwf	??_ReadRTCAsSec+8
  3016  0649  082B               	movf	??_ReadRTCAsSec+7,w
  3017  064A  00AD               	movwf	??_ReadRTCAsSec+9
  3018  064B  082C               	movf	??_ReadRTCAsSec+8,w
  3019  064C  00AE               	movwf	??_ReadRTCAsSec+10
  3020  064D  3000               	movlw	0
  3021  064E  1BAE               	btfsc	??_ReadRTCAsSec+10,7
  3022  064F  30FF               	movlw	255
  3023  0650  00AF               	movwf	??_ReadRTCAsSec+11
  3024  0651  00B0               	movwf	??_ReadRTCAsSec+12
  3025  0652  082D               	movf	??_ReadRTCAsSec+9,w
  3026  0653  07A4               	addwf	??_ReadRTCAsSec,f
  3027  0654  082E               	movf	??_ReadRTCAsSec+10,w
  3028  0655  1803               	skipnc
  3029  0656  0F2E               	incfsz	??_ReadRTCAsSec+10,w
  3030  0657  2E59               	goto	u2600
  3031  0658  2E5A               	goto	u2601
  3032  0659                     u2600:	
  3033  0659  07A5               	addwf	??_ReadRTCAsSec+1,f
  3034  065A                     u2601:	
  3035  065A  082F               	movf	??_ReadRTCAsSec+11,w
  3036  065B  1803               	skipnc
  3037  065C  0F2F               	incfsz	??_ReadRTCAsSec+11,w
  3038  065D  2E5F               	goto	u2602
  3039  065E  2E60               	goto	u2603
  3040  065F                     u2602:	
  3041  065F  07A6               	addwf	??_ReadRTCAsSec+2,f
  3042  0660                     u2603:	
  3043  0660  0830               	movf	??_ReadRTCAsSec+12,w
  3044  0661  1803               	skipnc
  3045  0662  0A30               	incf	??_ReadRTCAsSec+12,w
  3046  0663  07A7               	addwf	??_ReadRTCAsSec+3,f
  3047  0664  0827               	movf	??_ReadRTCAsSec+3,w
  3048  0665  00B6               	movwf	ReadRTCAsSec@Out+3
  3049  0666  0826               	movf	??_ReadRTCAsSec+2,w
  3050  0667  00B5               	movwf	ReadRTCAsSec@Out+2
  3051  0668  0825               	movf	??_ReadRTCAsSec+1,w
  3052  0669  00B4               	movwf	ReadRTCAsSec@Out+1
  3053  066A  0824               	movf	??_ReadRTCAsSec,w
  3054  066B  00B3               	movwf	ReadRTCAsSec@Out
  3055                           
  3056                           ;gsk_funs.c: 39: return Out;
  3057  066C  0836               	movf	ReadRTCAsSec@Out+3,w
  3058  066D  00A3               	movwf	?_ReadRTCAsSec+3
  3059  066E  0835               	movf	ReadRTCAsSec@Out+2,w
  3060  066F  00A2               	movwf	?_ReadRTCAsSec+2
  3061  0670  0834               	movf	ReadRTCAsSec@Out+1,w
  3062  0671  00A1               	movwf	?_ReadRTCAsSec+1
  3063  0672  0833               	movf	ReadRTCAsSec@Out,w
  3064  0673  00A0               	movwf	?_ReadRTCAsSec
  3065  0674  0008               	return
  3066  0675                     __end_of_ReadRTCAsSec:	
  3067                           
  3068                           	psect	text10
  3069  0DE3                     __ptext10:	
  3070 ;; *************** function ___lmul *****************
  3071 ;; Defined at:
  3072 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  multiplier      4    0[COMMON] unsigned long 
  3075 ;;  multiplicand    4    4[COMMON] unsigned long 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  product         4    9[COMMON] unsigned long 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  4    0[COMMON] unsigned long 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3087 ;;      Params:         8       0       0       0       0
  3088 ;;      Locals:         4       0       0       0       0
  3089 ;;      Temps:          1       0       0       0       0
  3090 ;;      Totals:        13       0       0       0       0
  3091 ;;Total ram usage:       13 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_ReadRTCAsSec
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function ___lmul
  3102  0DE3                     ___lmul:	
  3103                           
  3104                           ;incstack = 0
  3105                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3106  0DE3  3000               	movlw	0
  3107  0DE4  00FC               	movwf	___lmul@product+3
  3108  0DE5  3000               	movlw	0
  3109  0DE6  00FB               	movwf	___lmul@product+2
  3110  0DE7  3000               	movlw	0
  3111  0DE8  00FA               	movwf	___lmul@product+1
  3112  0DE9  3000               	movlw	0
  3113  0DEA  00F9               	movwf	___lmul@product
  3114  0DEB                     l1569:	
  3115  0DEB  1C70               	btfss	___lmul@multiplier,0
  3116  0DEC  2E01               	goto	l1573
  3117  0DED  0874               	movf	___lmul@multiplicand,w
  3118  0DEE  07F9               	addwf	___lmul@product,f
  3119  0DEF  0875               	movf	___lmul@multiplicand+1,w
  3120  0DF0  1103               	clrz
  3121  0DF1  1803               	skipnc
  3122  0DF2  3E01               	addlw	1
  3123  0DF3  1D03               	btfss	3,2
  3124  0DF4  07FA               	addwf	___lmul@product+1,f
  3125  0DF5  0876               	movf	___lmul@multiplicand+2,w
  3126  0DF6  1103               	clrz
  3127  0DF7  1803               	skipnc
  3128  0DF8  3E01               	addlw	1
  3129  0DF9  1D03               	btfss	3,2
  3130  0DFA  07FB               	addwf	___lmul@product+2,f
  3131  0DFB  0877               	movf	___lmul@multiplicand+3,w
  3132  0DFC  1103               	clrz
  3133  0DFD  1803               	skipnc
  3134  0DFE  3E01               	addlw	1
  3135  0DFF  1D03               	btfss	3,2
  3136  0E00  07FC               	addwf	___lmul@product+3,f
  3137  0E01                     l1573:	
  3138  0E01  3001               	movlw	1
  3139  0E02  00F8               	movwf	??___lmul
  3140  0E03                     u1985:	
  3141  0E03  1003               	clrc
  3142  0E04  0DF4               	rlf	___lmul@multiplicand,f
  3143  0E05  0DF5               	rlf	___lmul@multiplicand+1,f
  3144  0E06  0DF6               	rlf	___lmul@multiplicand+2,f
  3145  0E07  0DF7               	rlf	___lmul@multiplicand+3,f
  3146  0E08  0BF8               	decfsz	??___lmul,f
  3147  0E09  2E03               	goto	u1985
  3148  0E0A  3001               	movlw	1
  3149  0E0B                     u1995:	
  3150  0E0B  1003               	clrc
  3151  0E0C  0CF3               	rrf	___lmul@multiplier+3,f
  3152  0E0D  0CF2               	rrf	___lmul@multiplier+2,f
  3153  0E0E  0CF1               	rrf	___lmul@multiplier+1,f
  3154  0E0F  0CF0               	rrf	___lmul@multiplier,f
  3155  0E10  3EFF               	addlw	-1
  3156  0E11  1D03               	skipz
  3157  0E12  2E0B               	goto	u1995
  3158  0E13  0873               	movf	___lmul@multiplier+3,w
  3159  0E14  0472               	iorwf	___lmul@multiplier+2,w
  3160  0E15  0471               	iorwf	___lmul@multiplier+1,w
  3161  0E16  0470               	iorwf	___lmul@multiplier,w
  3162  0E17  1D03               	skipz
  3163  0E18  2DEB               	goto	l1569
  3164  0E19  087C               	movf	___lmul@product+3,w
  3165  0E1A  00F3               	movwf	?___lmul+3
  3166  0E1B  087B               	movf	___lmul@product+2,w
  3167  0E1C  00F2               	movwf	?___lmul+2
  3168  0E1D  087A               	movf	___lmul@product+1,w
  3169  0E1E  00F1               	movwf	?___lmul+1
  3170  0E1F  0879               	movf	___lmul@product,w
  3171  0E20  00F0               	movwf	?___lmul
  3172  0E21  0008               	return
  3173  0E22                     __end_of___lmul:	
  3174                           
  3175                           	psect	text11
  3176  0E62                     __ptext11:	
  3177 ;; *************** function _I2C_ReadAtAddress *****************
  3178 ;; Defined at:
  3179 ;;		line 55 in file "libs/gsk_i2c.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  DevID           1    wreg     unsigned char 
  3182 ;;  IntAdd          1    6[COMMON] unsigned char 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  DevID           1   10[COMMON] unsigned char 
  3185 ;;  data            1    9[COMMON] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      unsigned char 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, pclath, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         1       0       0       0       0
  3196 ;;      Locals:         2       0       0       0       0
  3197 ;;      Temps:          2       0       0       0       0
  3198 ;;      Totals:         5       0       0       0       0
  3199 ;;Total ram usage:        5 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    2
  3202 ;; This function calls:
  3203 ;;		_I2C_Master_Read
  3204 ;;		_I2C_Master_Start
  3205 ;;		_I2C_Master_Stop
  3206 ;;		_I2C_Master_Write
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;;		_ReadRTCAsSec
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _I2C_ReadAtAddress
  3215  0E62                     _I2C_ReadAtAddress:	
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _I2C_ReadAtAddress: [wreg+status,2+status,0+pclath+cstack]
  3219                           ;I2C_ReadAtAddress@DevID stored from wreg
  3220  0E62  00FA               	movwf	I2C_ReadAtAddress@DevID
  3221                           
  3222                           ;gsk_i2c.c: 57: I2C_Master_Start();
  3223  0E63  120A  158A  24A0  120A  158A  	fcall	_I2C_Master_Start
  3224                           
  3225                           ;gsk_i2c.c: 58: I2C_Master_Write(DevID);
  3226  0E68  087A               	movf	I2C_ReadAtAddress@DevID,w
  3227  0E69  00F7               	movwf	??_I2C_ReadAtAddress
  3228  0E6A  01F8               	clrf	??_I2C_ReadAtAddress+1
  3229  0E6B  0877               	movf	??_I2C_ReadAtAddress,w
  3230  0E6C  00F0               	movwf	I2C_Master_Write@d
  3231  0E6D  0878               	movf	??_I2C_ReadAtAddress+1,w
  3232  0E6E  00F1               	movwf	I2C_Master_Write@d+1
  3233  0E6F  120A  158A  24AE  120A  158A  	fcall	_I2C_Master_Write
  3234                           
  3235                           ;gsk_i2c.c: 59: I2C_Master_Write(IntAdd);
  3236  0E74  0876               	movf	I2C_ReadAtAddress@IntAdd,w
  3237  0E75  00F7               	movwf	??_I2C_ReadAtAddress
  3238  0E76  01F8               	clrf	??_I2C_ReadAtAddress+1
  3239  0E77  0877               	movf	??_I2C_ReadAtAddress,w
  3240  0E78  00F0               	movwf	I2C_Master_Write@d
  3241  0E79  0878               	movf	??_I2C_ReadAtAddress+1,w
  3242  0E7A  00F1               	movwf	I2C_Master_Write@d+1
  3243  0E7B  120A  158A  24AE  120A  158A  	fcall	_I2C_Master_Write
  3244                           
  3245                           ;gsk_i2c.c: 60: I2C_Master_Stop();
  3246  0E80  120A  158A  24A7  120A  158A  	fcall	_I2C_Master_Stop
  3247                           
  3248                           ;gsk_i2c.c: 62: I2C_Master_Start();
  3249  0E85  120A  158A  24A0  120A  158A  	fcall	_I2C_Master_Start
  3250                           
  3251                           ;gsk_i2c.c: 63: I2C_Master_Write(DevID+1);
  3252  0E8A  087A               	movf	I2C_ReadAtAddress@DevID,w
  3253  0E8B  3E01               	addlw	1
  3254  0E8C  00F0               	movwf	I2C_Master_Write@d
  3255  0E8D  3000               	movlw	0
  3256  0E8E  1803               	skipnc
  3257  0E8F  3001               	movlw	1
  3258  0E90  00F1               	movwf	I2C_Master_Write@d+1
  3259  0E91  120A  158A  24AE  120A  158A  	fcall	_I2C_Master_Write
  3260                           
  3261                           ;gsk_i2c.c: 64: char data = I2C_Master_Read(0);
  3262  0E96  3000               	movlw	0
  3263  0E97  00F0               	movwf	I2C_Master_Read@a
  3264  0E98  00F1               	movwf	I2C_Master_Read@a+1
  3265  0E99  120A  158A  24E9  120A  158A  	fcall	_I2C_Master_Read
  3266  0E9E  0870               	movf	?_I2C_Master_Read,w
  3267  0E9F  00F7               	movwf	??_I2C_ReadAtAddress
  3268  0EA0  0877               	movf	??_I2C_ReadAtAddress,w
  3269  0EA1  00F9               	movwf	I2C_ReadAtAddress@data
  3270                           
  3271                           ;gsk_i2c.c: 65: I2C_Master_Stop();
  3272  0EA2  120A  158A  24A7   	fcall	_I2C_Master_Stop
  3273                           
  3274                           ;gsk_i2c.c: 66: return data;
  3275  0EA5  0879               	movf	I2C_ReadAtAddress@data,w
  3276  0EA6  0008               	return
  3277  0EA7                     __end_of_I2C_ReadAtAddress:	
  3278                           
  3279                           	psect	text12
  3280  0CAE                     __ptext12:	
  3281 ;; *************** function _I2C_Master_Write *****************
  3282 ;; Defined at:
  3283 ;;		line 36 in file "libs/gsk_i2c.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  d               2    0[COMMON] unsigned int 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         2       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         2       0       0       0       0
  3301 ;;Total ram usage:        2 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    1
  3304 ;; This function calls:
  3305 ;;		_I2C_Master_Wait
  3306 ;; This function is called by:
  3307 ;;		_I2C_ReadAtAddress
  3308 ;;		_I2C_WriteAtAddress
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _I2C_Master_Write
  3314  0CAE                     _I2C_Master_Write:	
  3315                           
  3316                           ;gsk_i2c.c: 38: I2C_Master_Wait();
  3317                           
  3318                           ;incstack = 0
  3319                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3320  0CAE  120A  158A  24BF   	fcall	_I2C_Master_Wait
  3321                           
  3322                           ;gsk_i2c.c: 39: SSPBUF = d;
  3323  0CB1  0870               	movf	I2C_Master_Write@d,w
  3324  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0CB4  0093               	movwf	19	;volatile
  3327  0CB5  0008               	return
  3328  0CB6                     __end_of_I2C_Master_Write:	
  3329                           
  3330                           	psect	text13
  3331  0CA7                     __ptext13:	
  3332 ;; *************** function _I2C_Master_Stop *****************
  3333 ;; Defined at:
  3334 ;;		line 30 in file "libs/gsk_i2c.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0, pclath, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3348 ;;      Params:         0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0
  3351 ;;      Totals:         0       0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    1
  3355 ;; This function calls:
  3356 ;;		_I2C_Master_Wait
  3357 ;; This function is called by:
  3358 ;;		_I2C_ReadAtAddress
  3359 ;;		_I2C_WriteAtAddress
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _I2C_Master_Stop
  3365  0CA7                     _I2C_Master_Stop:	
  3366                           
  3367                           ;gsk_i2c.c: 32: I2C_Master_Wait();
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3371  0CA7  120A  158A  24BF   	fcall	_I2C_Master_Wait
  3372                           
  3373                           ;gsk_i2c.c: 33: PEN = 1;
  3374  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  3375  0CAB  1303               	bcf	3,6	;RP1=0, select bank1
  3376  0CAC  1511               	bsf	17,2	;volatile
  3377  0CAD  0008               	return
  3378  0CAE                     __end_of_I2C_Master_Stop:	
  3379                           
  3380                           	psect	text14
  3381  0CA0                     __ptext14:	
  3382 ;; *************** function _I2C_Master_Start *****************
  3383 ;; Defined at:
  3384 ;;		line 18 in file "libs/gsk_i2c.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, pclath, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    1
  3405 ;; This function calls:
  3406 ;;		_I2C_Master_Wait
  3407 ;; This function is called by:
  3408 ;;		_I2C_ReadAtAddress
  3409 ;;		_I2C_WriteAtAddress
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function _I2C_Master_Start
  3415  0CA0                     _I2C_Master_Start:	
  3416                           
  3417                           ;gsk_i2c.c: 20: I2C_Master_Wait();
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3421  0CA0  120A  158A  24BF   	fcall	_I2C_Master_Wait
  3422                           
  3423                           ;gsk_i2c.c: 21: SEN = 1;
  3424  0CA3  1683               	bsf	3,5	;RP0=1, select bank1
  3425  0CA4  1303               	bcf	3,6	;RP1=0, select bank1
  3426  0CA5  1411               	bsf	17,0	;volatile
  3427  0CA6  0008               	return
  3428  0CA7                     __end_of_I2C_Master_Start:	
  3429                           
  3430                           	psect	text15
  3431  0CE9                     __ptext15:	
  3432 ;; *************** function _I2C_Master_Read *****************
  3433 ;; Defined at:
  3434 ;;		line 42 in file "libs/gsk_i2c.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  a               2    0[COMMON] unsigned short 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  temp            2    4[COMMON] unsigned short 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  2    0[COMMON] unsigned short 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, pclath, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3448 ;;      Params:         2       0       0       0       0
  3449 ;;      Locals:         2       0       0       0       0
  3450 ;;      Temps:          2       0       0       0       0
  3451 ;;      Totals:         6       0       0       0       0
  3452 ;;Total ram usage:        6 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    1
  3455 ;; This function calls:
  3456 ;;		_I2C_Master_Wait
  3457 ;; This function is called by:
  3458 ;;		_I2C_ReadAtAddress
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           
  3463                           ;psect for function _I2C_Master_Read
  3464  0CE9                     _I2C_Master_Read:	
  3465                           
  3466                           ;gsk_i2c.c: 44: unsigned short temp;
  3467                           ;gsk_i2c.c: 45: I2C_Master_Wait();
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3471  0CE9  120A  158A  24BF  120A  158A  	fcall	_I2C_Master_Wait
  3472                           
  3473                           ;gsk_i2c.c: 46: RCEN = 1;
  3474  0CEE  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0CEF  1303               	bcf	3,6	;RP1=0, select bank1
  3476  0CF0  1591               	bsf	17,3	;volatile
  3477                           
  3478                           ;gsk_i2c.c: 47: I2C_Master_Wait();
  3479  0CF1  120A  158A  24BF  120A  158A  	fcall	_I2C_Master_Wait
  3480                           
  3481                           ;gsk_i2c.c: 48: temp = SSPBUF;
  3482  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0CF8  0813               	movf	19,w	;volatile
  3485  0CF9  00F2               	movwf	??_I2C_Master_Read
  3486  0CFA  01F3               	clrf	??_I2C_Master_Read+1
  3487  0CFB  0872               	movf	??_I2C_Master_Read,w
  3488  0CFC  00F4               	movwf	I2C_Master_Read@temp
  3489  0CFD  0873               	movf	??_I2C_Master_Read+1,w
  3490  0CFE  00F5               	movwf	I2C_Master_Read@temp+1
  3491                           
  3492                           ;gsk_i2c.c: 49: I2C_Master_Wait();
  3493  0CFF  120A  158A  24BF  120A  158A  	fcall	_I2C_Master_Wait
  3494                           
  3495                           ;gsk_i2c.c: 50: ACKDT = (a)?0:1;
  3496  0D04  0870               	movf	I2C_Master_Read@a,w
  3497  0D05  0471               	iorwf	I2C_Master_Read@a+1,w
  3498  0D06  1D03               	btfss	3,2
  3499  0D07  2D0C               	goto	u1890
  3500  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  3502  0D0A  1691               	bsf	17,5	;volatile
  3503  0D0B  2D0F               	goto	l1517
  3504  0D0C                     u1890:	
  3505  0D0C  1683               	bsf	3,5	;RP0=1, select bank1
  3506  0D0D  1303               	bcf	3,6	;RP1=0, select bank1
  3507  0D0E  1291               	bcf	17,5	;volatile
  3508  0D0F                     l1517:	
  3509                           
  3510                           ;gsk_i2c.c: 51: ACKEN = 1;
  3511  0D0F  1611               	bsf	17,4	;volatile
  3512                           
  3513                           ;gsk_i2c.c: 52: return temp;
  3514  0D10  0875               	movf	I2C_Master_Read@temp+1,w
  3515  0D11  00F1               	movwf	?_I2C_Master_Read+1
  3516  0D12  0874               	movf	I2C_Master_Read@temp,w
  3517  0D13  00F0               	movwf	?_I2C_Master_Read
  3518  0D14  0008               	return
  3519  0D15                     __end_of_I2C_Master_Read:	
  3520                           
  3521                           	psect	text16
  3522  0CBF                     __ptext16:	
  3523 ;; *************** function _I2C_Master_Wait *****************
  3524 ;; Defined at:
  3525 ;;		line 13 in file "libs/gsk_i2c.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_I2C_Master_Start
  3549 ;;		_I2C_Master_Stop
  3550 ;;		_I2C_Master_Write
  3551 ;;		_I2C_Master_Read
  3552 ;;		_I2C_Master_RepeatedStart
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _I2C_Master_Wait
  3558  0CBF                     _I2C_Master_Wait:	
  3559  0CBF                     l255:	
  3560                           ;gsk_i2c.c: 15: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3564                           
  3565  0CBF  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0CC0  1303               	bcf	3,6	;RP1=0, select bank1
  3567  0CC1  1914               	btfsc	20,2	;volatile
  3568  0CC2  2CBF               	goto	l255
  3569  0CC3  0811               	movf	17,w	;volatile
  3570  0CC4  391F               	andlw	31
  3571  0CC5  1903               	btfsc	3,2
  3572  0CC6  0008               	return
  3573  0CC7  2CBF               	goto	l255
  3574  0CC8                     __end_of_I2C_Master_Wait:	
  3575                           
  3576                           	psect	text17
  3577  0E22                     __ptext17:	
  3578 ;; *************** function _Lcd_Text *****************
  3579 ;; Defined at:
  3580 ;;		line 76 in file "libs/HD44780.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  y               1    wreg     unsigned char 
  3583 ;;  x               1    4[COMMON] unsigned char 
  3584 ;;  buffer          1    5[COMMON] PTR unsigned char 
  3585 ;;		 -> STR_3(2), STR_2(5), STR_1(5), 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  y               1    7[COMMON] unsigned char 
  3588 ;;  data            1    8[COMMON] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         2       0       0       0       0
  3599 ;;      Locals:         2       0       0       0       0
  3600 ;;      Temps:          1       0       0       0       0
  3601 ;;      Totals:         5       0       0       0       0
  3602 ;;Total ram usage:        5 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    2
  3605 ;; This function calls:
  3606 ;;		_Lcd_CharCP
  3607 ;;		_Lcd_Command
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _Lcd_Text
  3615  0E22                     _Lcd_Text:	
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _Lcd_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3619                           ;Lcd_Text@y stored from wreg
  3620  0E22  00F7               	movwf	Lcd_Text@y
  3621                           
  3622                           ;HD44780.c: 77: unsigned char data;
  3623                           ;HD44780.c: 78: switch(y){
  3624  0E23  2E33               	goto	l1867
  3625  0E24                     l1857:	
  3626                           ;HD44780.c: 79: case 1: data = 127 + x; break;
  3627                           
  3628  0E24  0874               	movf	Lcd_Text@x,w
  3629  0E25  3E7F               	addlw	127
  3630  0E26  2E2F               	goto	L7
  3631  0E27                     l1859:	
  3632                           ;HD44780.c: 80: case 2: data = 191 + x; break;
  3633                           
  3634  0E27  0874               	movf	Lcd_Text@x,w
  3635  0E28  3EBF               	addlw	191
  3636  0E29  2E2F               	goto	L7
  3637  0E2A                     l1861:	
  3638                           ;HD44780.c: 81: case 3: data = 147 + x; break;
  3639                           
  3640  0E2A  0874               	movf	Lcd_Text@x,w
  3641  0E2B  3E93               	addlw	147
  3642  0E2C  2E2F               	goto	L7
  3643  0E2D                     l1863:	
  3644                           ;HD44780.c: 82: case 4: data = 211 + x; break;
  3645                           
  3646  0E2D  0874               	movf	Lcd_Text@x,w
  3647  0E2E  3ED3               	addlw	211
  3648  0E2F                     L7:	
  3649  0E2F  00F6               	movwf	??_Lcd_Text
  3650  0E30  0876               	movf	??_Lcd_Text,w
  3651  0E31  00F8               	movwf	Lcd_Text@data
  3652                           
  3653                           ;HD44780.c: 83: default: break;}
  3654  0E32  2E41               	goto	l1869
  3655  0E33                     l1867:	
  3656  0E33  0877               	movf	Lcd_Text@y,w
  3657                           
  3658                           ; Switch size 1, requested type "space"
  3659                           ; Number of cases is 4, Range of values is 1 to 4
  3660                           ; switch strategies available:
  3661                           ; Name         Instructions Cycles
  3662                           ; simple_byte           13     7 (average)
  3663                           ; direct_byte           23    11 (fixed)
  3664                           ; jumptable            263     9 (fixed)
  3665                           ;	Chosen strategy is simple_byte
  3666  0E34  3A01               	xorlw	1	; case 1
  3667  0E35  1903               	skipnz
  3668  0E36  2E24               	goto	l1857
  3669  0E37  3A03               	xorlw	3	; case 2
  3670  0E38  1903               	skipnz
  3671  0E39  2E27               	goto	l1859
  3672  0E3A  3A01               	xorlw	1	; case 3
  3673  0E3B  1903               	skipnz
  3674  0E3C  2E2A               	goto	l1861
  3675  0E3D  3A07               	xorlw	7	; case 4
  3676  0E3E  1903               	skipnz
  3677  0E3F  2E2D               	goto	l1863
  3678  0E40  2E41               	goto	l1869
  3679  0E41                     l1869:	
  3680                           
  3681                           ;HD44780.c: 84: Lcd_Command(data);
  3682  0E41  0878               	movf	Lcd_Text@data,w
  3683  0E42  120A  118A  2157  120A  158A  	fcall	_Lcd_Command
  3684  0E47                     l1875:	
  3685                           ;HD44780.c: 85: while(*buffer)
  3686                           
  3687  0E47  0875               	movf	Lcd_Text@buffer,w
  3688  0E48  0084               	movwf	4
  3689  0E49  120A  158A  200A  120A  158A  	fcall	stringdir
  3690  0E4E  3A00               	xorlw	0
  3691  0E4F  1903               	btfsc	3,2
  3692  0E50  0008               	return
  3693                           
  3694                           ;HD44780.c: 86: {
  3695                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  3696  0E51  0875               	movf	Lcd_Text@buffer,w
  3697  0E52  0084               	movwf	4
  3698  0E53  120A  158A  200A  120A  158A  	fcall	stringdir
  3699  0E58  120A  118A  21FE  120A  158A  	fcall	_Lcd_CharCP
  3700                           
  3701                           ;HD44780.c: 88: buffer++;
  3702  0E5D  3001               	movlw	1
  3703  0E5E  00F6               	movwf	??_Lcd_Text
  3704  0E5F  0876               	movf	??_Lcd_Text,w
  3705  0E60  07F5               	addwf	Lcd_Text@buffer,f
  3706  0E61  2E47               	goto	l1875
  3707  0E62                     __end_of_Lcd_Text:	
  3708                           ;HD44780.c: 89: }
  3709                           ;HD44780.c: 90: return;
  3710                           
  3711                           
  3712                           	psect	text18
  3713  02AA                     __ptext18:	
  3714 ;; *************** function _Lcd_Int *****************
  3715 ;; Defined at:
  3716 ;;		line 156 in file "libs/HD44780.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  y               1    wreg     unsigned char 
  3719 ;;  x               1    4[BANK0 ] unsigned char 
  3720 ;;  val             1    5[BANK0 ] unsigned char 
  3721 ;;  size            1    6[BANK0 ] unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  y               1    9[BANK0 ] unsigned char 
  3724 ;;  tempVal         2   11[BANK0 ] unsigned int 
  3725 ;;  data            1   10[BANK0 ] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3735 ;;      Params:         0       3       0       0       0
  3736 ;;      Locals:         0       4       0       0       0
  3737 ;;      Temps:          0       2       0       0       0
  3738 ;;      Totals:         0       9       0       0       0
  3739 ;;Total ram usage:        9 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    2
  3742 ;; This function calls:
  3743 ;;		_Lcd_CharCP
  3744 ;;		_Lcd_Command
  3745 ;;		___awdiv
  3746 ;;		___bmul
  3747 ;;		___lwdiv
  3748 ;;		___wmul
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _Lcd_Int
  3756  02AA                     _Lcd_Int:	
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _Lcd_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3760                           ;Lcd_Int@y stored from wreg
  3761  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3762  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  3763  02AC  00A9               	movwf	Lcd_Int@y
  3764                           
  3765                           ;HD44780.c: 157: if ((size>0) && (size<=3)) {
  3766  02AD  0826               	movf	Lcd_Int@size,w
  3767  02AE  1903               	btfsc	3,2
  3768  02AF  0008               	return
  3769  02B0  3004               	movlw	4
  3770  02B1  0226               	subwf	Lcd_Int@size,w
  3771  02B2  1803               	skipnc
  3772  02B3  0008               	return
  3773                           
  3774                           ;HD44780.c: 158: unsigned int tempVal=val;
  3775  02B4  0825               	movf	Lcd_Int@val,w
  3776  02B5  00A7               	movwf	??_Lcd_Int
  3777  02B6  01A8               	clrf	??_Lcd_Int+1
  3778  02B7  0827               	movf	??_Lcd_Int,w
  3779  02B8  00AB               	movwf	Lcd_Int@tempVal
  3780  02B9  0828               	movf	??_Lcd_Int+1,w
  3781  02BA  00AC               	movwf	Lcd_Int@tempVal+1
  3782                           
  3783                           ;HD44780.c: 159: unsigned char data;
  3784                           ;HD44780.c: 160: switch(y){
  3785  02BB  2ACB               	goto	l1961
  3786  02BC                     l1951:	
  3787                           ;HD44780.c: 161: case 1: data = 127 + x; break;
  3788                           
  3789  02BC  0824               	movf	Lcd_Int@x,w
  3790  02BD  3E7F               	addlw	127
  3791  02BE  2AC7               	goto	L10
  3792  02BF                     l1953:	
  3793                           ;HD44780.c: 162: case 2: data = 191 + x; break;
  3794                           
  3795  02BF  0824               	movf	Lcd_Int@x,w
  3796  02C0  3EBF               	addlw	191
  3797  02C1  2AC7               	goto	L10
  3798  02C2                     l1955:	
  3799                           ;HD44780.c: 163: case 3: data = 147 + x; break;
  3800                           
  3801  02C2  0824               	movf	Lcd_Int@x,w
  3802  02C3  3E93               	addlw	147
  3803  02C4  2AC7               	goto	L10
  3804  02C5                     l1957:	
  3805                           ;HD44780.c: 164: case 4: data = 211 + x; break;
  3806                           
  3807  02C5  0824               	movf	Lcd_Int@x,w
  3808  02C6  3ED3               	addlw	211
  3809  02C7                     L10:	
  3810  02C7  00A7               	movwf	??_Lcd_Int
  3811  02C8  0827               	movf	??_Lcd_Int,w
  3812  02C9  00AA               	movwf	Lcd_Int@data
  3813                           
  3814                           ;HD44780.c: 165: default: break;}
  3815  02CA  2AD9               	goto	l1963
  3816  02CB                     l1961:	
  3817  02CB  0829               	movf	Lcd_Int@y,w
  3818                           
  3819                           ; Switch size 1, requested type "space"
  3820                           ; Number of cases is 4, Range of values is 1 to 4
  3821                           ; switch strategies available:
  3822                           ; Name         Instructions Cycles
  3823                           ; simple_byte           13     7 (average)
  3824                           ; direct_byte           23    11 (fixed)
  3825                           ; jumptable            263     9 (fixed)
  3826                           ;	Chosen strategy is simple_byte
  3827  02CC  3A01               	xorlw	1	; case 1
  3828  02CD  1903               	skipnz
  3829  02CE  2ABC               	goto	l1951
  3830  02CF  3A03               	xorlw	3	; case 2
  3831  02D0  1903               	skipnz
  3832  02D1  2ABF               	goto	l1953
  3833  02D2  3A01               	xorlw	1	; case 3
  3834  02D3  1903               	skipnz
  3835  02D4  2AC2               	goto	l1955
  3836  02D5  3A07               	xorlw	7	; case 4
  3837  02D6  1903               	skipnz
  3838  02D7  2AC5               	goto	l1957
  3839  02D8  2AD9               	goto	l1963
  3840  02D9                     l1963:	
  3841                           
  3842                           ;HD44780.c: 166: Lcd_Command(data);
  3843  02D9  082A               	movf	Lcd_Int@data,w
  3844  02DA  120A  118A  2157  120A  118A  	fcall	_Lcd_Command
  3845                           
  3846                           ;HD44780.c: 167: if (size>=3){
  3847  02DF  3003               	movlw	3
  3848  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  3849  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  3850  02E2  0226               	subwf	Lcd_Int@size,w
  3851  02E3  1C03               	skipc
  3852  02E4  2B02               	goto	l1969
  3853                           
  3854                           ;HD44780.c: 168: tempVal = val/100;
  3855  02E5  3064               	movlw	100
  3856  02E6  00F0               	movwf	___awdiv@divisor
  3857  02E7  3000               	movlw	0
  3858  02E8  00F1               	movwf	___awdiv@divisor+1
  3859  02E9  0825               	movf	Lcd_Int@val,w
  3860  02EA  00A7               	movwf	??_Lcd_Int
  3861  02EB  01A8               	clrf	??_Lcd_Int+1
  3862  02EC  0827               	movf	??_Lcd_Int,w
  3863  02ED  00F2               	movwf	___awdiv@dividend
  3864  02EE  0828               	movf	??_Lcd_Int+1,w
  3865  02EF  00F3               	movwf	___awdiv@dividend+1
  3866  02F0  120A  158A  26EC  120A  118A  	fcall	___awdiv
  3867  02F5  0871               	movf	?___awdiv+1,w
  3868  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  3869  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  3870  02F8  00AC               	movwf	Lcd_Int@tempVal+1
  3871  02F9  0870               	movf	?___awdiv,w
  3872  02FA  00AB               	movwf	Lcd_Int@tempVal
  3873                           
  3874                           ;HD44780.c: 169: Lcd_CharCP(0x30+(tempVal));
  3875  02FB  082B               	movf	Lcd_Int@tempVal,w
  3876  02FC  3E30               	addlw	48
  3877  02FD  120A  118A  21FE  120A  118A  	fcall	_Lcd_CharCP
  3878  0302                     l1969:	
  3879                           
  3880                           ;HD44780.c: 170: }
  3881                           ;HD44780.c: 171: if (size>=2){
  3882  0302  3002               	movlw	2
  3883  0303  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0304  1303               	bcf	3,6	;RP1=0, select bank0
  3885  0305  0226               	subwf	Lcd_Int@size,w
  3886  0306  1C03               	skipc
  3887  0307  2B3B               	goto	l1973
  3888                           
  3889                           ;HD44780.c: 172: tempVal = (val-tempVal*100)/10;
  3890  0308  300A               	movlw	10
  3891  0309  00F6               	movwf	___lwdiv@divisor
  3892  030A  3000               	movlw	0
  3893  030B  00F7               	movwf	___lwdiv@divisor+1
  3894  030C  082C               	movf	Lcd_Int@tempVal+1,w
  3895  030D  00F1               	movwf	___wmul@multiplier+1
  3896  030E  082B               	movf	Lcd_Int@tempVal,w
  3897  030F  00F0               	movwf	___wmul@multiplier
  3898  0310  3064               	movlw	100
  3899  0311  00F2               	movwf	___wmul@multiplicand
  3900  0312  3000               	movlw	0
  3901  0313  00F3               	movwf	___wmul@multiplicand+1
  3902  0314  120A  158A  24C8  120A  118A  	fcall	___wmul
  3903  0319  0970               	comf	?___wmul,w
  3904  031A  1283               	bcf	3,5	;RP0=0, select bank0
  3905  031B  1303               	bcf	3,6	;RP1=0, select bank0
  3906  031C  00A7               	movwf	??_Lcd_Int
  3907  031D  0971               	comf	?___wmul+1,w
  3908  031E  00A8               	movwf	??_Lcd_Int+1
  3909  031F  0AA7               	incf	??_Lcd_Int,f
  3910  0320  1903               	skipnz
  3911  0321  0AA8               	incf	??_Lcd_Int+1,f
  3912  0322  0825               	movf	Lcd_Int@val,w
  3913  0323  0727               	addwf	??_Lcd_Int,w
  3914  0324  00F8               	movwf	___lwdiv@dividend
  3915  0325  0828               	movf	??_Lcd_Int+1,w
  3916  0326  1803               	skipnc
  3917  0327  0A28               	incf	??_Lcd_Int+1,w
  3918  0328  00F9               	movwf	___lwdiv@dividend+1
  3919  0329  120A  158A  25A7  120A  118A  	fcall	___lwdiv
  3920  032E  0877               	movf	?___lwdiv+1,w
  3921  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3922  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3923  0331  00AC               	movwf	Lcd_Int@tempVal+1
  3924  0332  0876               	movf	?___lwdiv,w
  3925  0333  00AB               	movwf	Lcd_Int@tempVal
  3926                           
  3927                           ;HD44780.c: 173: Lcd_CharCP(0x30+(tempVal));
  3928  0334  082B               	movf	Lcd_Int@tempVal,w
  3929  0335  3E30               	addlw	48
  3930  0336  120A  118A  21FE  120A  118A  	fcall	_Lcd_CharCP
  3931  033B                     l1973:	
  3932                           
  3933                           ;HD44780.c: 174: }
  3934                           ;HD44780.c: 175: if (size>=1){
  3935  033B  1283               	bcf	3,5	;RP0=0, select bank0
  3936  033C  1303               	bcf	3,6	;RP1=0, select bank0
  3937  033D  0826               	movf	Lcd_Int@size,w
  3938  033E  1903               	btfsc	3,2
  3939  033F  0008               	return
  3940                           
  3941                           ;HD44780.c: 176: tempVal = val/10;
  3942  0340  300A               	movlw	10
  3943  0341  00F0               	movwf	___awdiv@divisor
  3944  0342  3000               	movlw	0
  3945  0343  00F1               	movwf	___awdiv@divisor+1
  3946  0344  0825               	movf	Lcd_Int@val,w
  3947  0345  00A7               	movwf	??_Lcd_Int
  3948  0346  01A8               	clrf	??_Lcd_Int+1
  3949  0347  0827               	movf	??_Lcd_Int,w
  3950  0348  00F2               	movwf	___awdiv@dividend
  3951  0349  0828               	movf	??_Lcd_Int+1,w
  3952  034A  00F3               	movwf	___awdiv@dividend+1
  3953  034B  120A  158A  26EC  120A  118A  	fcall	___awdiv
  3954  0350  0871               	movf	?___awdiv+1,w
  3955  0351  1283               	bcf	3,5	;RP0=0, select bank0
  3956  0352  1303               	bcf	3,6	;RP1=0, select bank0
  3957  0353  00AC               	movwf	Lcd_Int@tempVal+1
  3958  0354  0870               	movf	?___awdiv,w
  3959  0355  00AB               	movwf	Lcd_Int@tempVal
  3960                           
  3961                           ;HD44780.c: 177: Lcd_CharCP(0x30+(val - tempVal*10));
  3962  0356  300A               	movlw	10
  3963  0357  00A7               	movwf	??_Lcd_Int
  3964  0358  0827               	movf	??_Lcd_Int,w
  3965  0359  00A0               	movwf	___bmul@multiplicand
  3966  035A  082B               	movf	Lcd_Int@tempVal,w
  3967  035B  120A  118A  2010  120A  118A  	fcall	___bmul
  3968  0360  3AFF               	xorlw	255
  3969  0361  3E01               	addlw	1
  3970  0362  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0363  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0364  0725               	addwf	Lcd_Int@val,w
  3973  0365  3E30               	addlw	48
  3974  0366  120A  118A  21FE   	fcall	_Lcd_CharCP
  3975  0369  0008               	return
  3976  036A                     __end_of_Lcd_Int:	
  3977                           
  3978                           	psect	text19
  3979  0CC8                     __ptext19:	
  3980 ;; *************** function ___wmul *****************
  3981 ;; Defined at:
  3982 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  multiplier      2    0[COMMON] unsigned int 
  3985 ;;  multiplicand    2    2[COMMON] unsigned int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  product         2    4[COMMON] unsigned int 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  2    0[COMMON] unsigned int 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3997 ;;      Params:         4       0       0       0       0
  3998 ;;      Locals:         2       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0
  4000 ;;      Totals:         6       0       0       0       0
  4001 ;;Total ram usage:        6 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_Lcd_Int
  4007 ;;		_ReadRTCAsSec
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function ___wmul
  4013  0CC8                     ___wmul:	
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4017  0CC8  01F4               	clrf	___wmul@product
  4018  0CC9  01F5               	clrf	___wmul@product+1
  4019  0CCA                     l1555:	
  4020  0CCA  1C70               	btfss	___wmul@multiplier,0
  4021  0CCB  2CD2               	goto	l373
  4022  0CCC  0872               	movf	___wmul@multiplicand,w
  4023  0CCD  07F4               	addwf	___wmul@product,f
  4024  0CCE  1803               	skipnc
  4025  0CCF  0AF5               	incf	___wmul@product+1,f
  4026  0CD0  0873               	movf	___wmul@multiplicand+1,w
  4027  0CD1  07F5               	addwf	___wmul@product+1,f
  4028  0CD2                     l373:	
  4029  0CD2  3001               	movlw	1
  4030  0CD3                     u1935:	
  4031  0CD3  1003               	clrc
  4032  0CD4  0DF2               	rlf	___wmul@multiplicand,f
  4033  0CD5  0DF3               	rlf	___wmul@multiplicand+1,f
  4034  0CD6  3EFF               	addlw	-1
  4035  0CD7  1D03               	skipz
  4036  0CD8  2CD3               	goto	u1935
  4037  0CD9  3001               	movlw	1
  4038  0CDA                     u1945:	
  4039  0CDA  1003               	clrc
  4040  0CDB  0CF1               	rrf	___wmul@multiplier+1,f
  4041  0CDC  0CF0               	rrf	___wmul@multiplier,f
  4042  0CDD  3EFF               	addlw	-1
  4043  0CDE  1D03               	skipz
  4044  0CDF  2CDA               	goto	u1945
  4045  0CE0  0870               	movf	___wmul@multiplier,w
  4046  0CE1  0471               	iorwf	___wmul@multiplier+1,w
  4047  0CE2  1D03               	btfss	3,2
  4048  0CE3  2CCA               	goto	l1555
  4049  0CE4  0875               	movf	___wmul@product+1,w
  4050  0CE5  00F1               	movwf	?___wmul+1
  4051  0CE6  0874               	movf	___wmul@product,w
  4052  0CE7  00F0               	movwf	?___wmul
  4053  0CE8  0008               	return
  4054  0CE9                     __end_of___wmul:	
  4055                           
  4056                           	psect	text20
  4057  0DA7                     __ptext20:	
  4058 ;; *************** function ___lwdiv *****************
  4059 ;; Defined at:
  4060 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  divisor         2    6[COMMON] unsigned int 
  4063 ;;  dividend        2    8[COMMON] unsigned int 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  quotient        2   11[COMMON] unsigned int 
  4066 ;;  counter         1   13[COMMON] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2    6[COMMON] unsigned int 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4076 ;;      Params:         4       0       0       0       0
  4077 ;;      Locals:         3       0       0       0       0
  4078 ;;      Temps:          1       0       0       0       0
  4079 ;;      Totals:         8       0       0       0       0
  4080 ;;Total ram usage:        8 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_Lcd_Int
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function ___lwdiv
  4091  0DA7                     ___lwdiv:	
  4092                           
  4093                           ;incstack = 0
  4094                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4095  0DA7  01FB               	clrf	___lwdiv@quotient
  4096  0DA8  01FC               	clrf	___lwdiv@quotient+1
  4097  0DA9  0876               	movf	___lwdiv@divisor,w
  4098  0DAA  0477               	iorwf	___lwdiv@divisor+1,w
  4099  0DAB  1903               	btfsc	3,2
  4100  0DAC  2DDE               	goto	l1725
  4101  0DAD  01FD               	clrf	___lwdiv@counter
  4102  0DAE  0AFD               	incf	___lwdiv@counter,f
  4103  0DAF                     l1713:	
  4104  0DAF  1BF7               	btfsc	___lwdiv@divisor+1,7
  4105  0DB0  2DBD               	goto	l1715
  4106  0DB1  3001               	movlw	1
  4107  0DB2                     u2315:	
  4108  0DB2  1003               	clrc
  4109  0DB3  0DF6               	rlf	___lwdiv@divisor,f
  4110  0DB4  0DF7               	rlf	___lwdiv@divisor+1,f
  4111  0DB5  3EFF               	addlw	-1
  4112  0DB6  1D03               	skipz
  4113  0DB7  2DB2               	goto	u2315
  4114  0DB8  3001               	movlw	1
  4115  0DB9  00FA               	movwf	??___lwdiv
  4116  0DBA  087A               	movf	??___lwdiv,w
  4117  0DBB  07FD               	addwf	___lwdiv@counter,f
  4118  0DBC  2DAF               	goto	l1713
  4119  0DBD                     l1715:	
  4120  0DBD  3001               	movlw	1
  4121  0DBE                     u2335:	
  4122  0DBE  1003               	clrc
  4123  0DBF  0DFB               	rlf	___lwdiv@quotient,f
  4124  0DC0  0DFC               	rlf	___lwdiv@quotient+1,f
  4125  0DC1  3EFF               	addlw	-1
  4126  0DC2  1D03               	skipz
  4127  0DC3  2DBE               	goto	u2335
  4128  0DC4  0877               	movf	___lwdiv@divisor+1,w
  4129  0DC5  0279               	subwf	___lwdiv@dividend+1,w
  4130  0DC6  1D03               	skipz
  4131  0DC7  2DCA               	goto	u2345
  4132  0DC8  0876               	movf	___lwdiv@divisor,w
  4133  0DC9  0278               	subwf	___lwdiv@dividend,w
  4134  0DCA                     u2345:	
  4135  0DCA  1C03               	skipc
  4136  0DCB  2DD3               	goto	l1721
  4137  0DCC  0876               	movf	___lwdiv@divisor,w
  4138  0DCD  02F8               	subwf	___lwdiv@dividend,f
  4139  0DCE  0877               	movf	___lwdiv@divisor+1,w
  4140  0DCF  1C03               	skipc
  4141  0DD0  03F9               	decf	___lwdiv@dividend+1,f
  4142  0DD1  02F9               	subwf	___lwdiv@dividend+1,f
  4143  0DD2  147B               	bsf	___lwdiv@quotient,0
  4144  0DD3                     l1721:	
  4145  0DD3  3001               	movlw	1
  4146  0DD4                     u2355:	
  4147  0DD4  1003               	clrc
  4148  0DD5  0CF7               	rrf	___lwdiv@divisor+1,f
  4149  0DD6  0CF6               	rrf	___lwdiv@divisor,f
  4150  0DD7  3EFF               	addlw	-1
  4151  0DD8  1D03               	skipz
  4152  0DD9  2DD4               	goto	u2355
  4153  0DDA  3001               	movlw	1
  4154  0DDB  02FD               	subwf	___lwdiv@counter,f
  4155  0DDC  1D03               	btfss	3,2
  4156  0DDD  2DBD               	goto	l1715
  4157  0DDE                     l1725:	
  4158  0DDE  087C               	movf	___lwdiv@quotient+1,w
  4159  0DDF  00F7               	movwf	?___lwdiv+1
  4160  0DE0  087B               	movf	___lwdiv@quotient,w
  4161  0DE1  00F6               	movwf	?___lwdiv
  4162  0DE2  0008               	return
  4163  0DE3                     __end_of___lwdiv:	
  4164                           
  4165                           	psect	text21
  4166  0010                     __ptext21:	
  4167 ;; *************** function ___bmul *****************
  4168 ;; Defined at:
  4169 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  multiplier      1    wreg     unsigned char 
  4172 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4175 ;;  product         1    2[BANK0 ] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      unsigned char 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         0       1       0       0       0
  4186 ;;      Locals:         0       2       0       0       0
  4187 ;;      Temps:          0       1       0       0       0
  4188 ;;      Totals:         0       4       0       0       0
  4189 ;;Total ram usage:        4 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_Lcd_Int
  4195 ;;		_WriteLongInt
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function ___bmul
  4201  0010                     ___bmul:	
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4205                           ;___bmul@multiplier stored from wreg
  4206  0010  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0011  1303               	bcf	3,6	;RP1=0, select bank0
  4208  0012  00A3               	movwf	___bmul@multiplier
  4209  0013  01A2               	clrf	___bmul@product
  4210  0014                     l1583:	
  4211  0014  1C23               	btfss	___bmul@multiplier,0
  4212  0015  281A               	goto	l1587
  4213  0016  0820               	movf	___bmul@multiplicand,w
  4214  0017  00A1               	movwf	??___bmul
  4215  0018  0821               	movf	??___bmul,w
  4216  0019  07A2               	addwf	___bmul@product,f
  4217  001A                     l1587:	
  4218  001A  1003               	clrc
  4219  001B  0DA0               	rlf	___bmul@multiplicand,f
  4220  001C  1003               	clrc
  4221  001D  0CA3               	rrf	___bmul@multiplier,f
  4222  001E  0823               	movf	___bmul@multiplier,w
  4223  001F  1D03               	btfss	3,2
  4224  0020  2814               	goto	l1583
  4225  0021  0822               	movf	___bmul@product,w
  4226  0022  0008               	return
  4227  0023                     __end_of___bmul:	
  4228                           
  4229                           	psect	text22
  4230  0EEC                     __ptext22:	
  4231 ;; *************** function ___awdiv *****************
  4232 ;; Defined at:
  4233 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  divisor         2    0[COMMON] int 
  4236 ;;  dividend        2    2[COMMON] int 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  quotient        2    7[COMMON] int 
  4239 ;;  sign            1    6[COMMON] unsigned char 
  4240 ;;  counter         1    5[COMMON] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  2    0[COMMON] int 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4250 ;;      Params:         4       0       0       0       0
  4251 ;;      Locals:         4       0       0       0       0
  4252 ;;      Temps:          1       0       0       0       0
  4253 ;;      Totals:         9       0       0       0       0
  4254 ;;Total ram usage:        9 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_Lcd_Int
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           
  4264                           ;psect for function ___awdiv
  4265  0EEC                     ___awdiv:	
  4266                           
  4267                           ;incstack = 0
  4268                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4269  0EEC  01F6               	clrf	___awdiv@sign
  4270  0EED  1FF1               	btfss	___awdiv@divisor+1,7
  4271  0EEE  2EF6               	goto	l1643
  4272  0EEF  09F0               	comf	___awdiv@divisor,f
  4273  0EF0  09F1               	comf	___awdiv@divisor+1,f
  4274  0EF1  0AF0               	incf	___awdiv@divisor,f
  4275  0EF2  1903               	skipnz
  4276  0EF3  0AF1               	incf	___awdiv@divisor+1,f
  4277  0EF4  01F6               	clrf	___awdiv@sign
  4278  0EF5  0AF6               	incf	___awdiv@sign,f
  4279  0EF6                     l1643:	
  4280  0EF6  1FF3               	btfss	___awdiv@dividend+1,7
  4281  0EF7  2F01               	goto	l1649
  4282  0EF8  09F2               	comf	___awdiv@dividend,f
  4283  0EF9  09F3               	comf	___awdiv@dividend+1,f
  4284  0EFA  0AF2               	incf	___awdiv@dividend,f
  4285  0EFB  1903               	skipnz
  4286  0EFC  0AF3               	incf	___awdiv@dividend+1,f
  4287  0EFD  3001               	movlw	1
  4288  0EFE  00F4               	movwf	??___awdiv
  4289  0EFF  0874               	movf	??___awdiv,w
  4290  0F00  06F6               	xorwf	___awdiv@sign,f
  4291  0F01                     l1649:	
  4292  0F01  01F7               	clrf	___awdiv@quotient
  4293  0F02  01F8               	clrf	___awdiv@quotient+1
  4294  0F03  0870               	movf	___awdiv@divisor,w
  4295  0F04  0471               	iorwf	___awdiv@divisor+1,w
  4296  0F05  1903               	btfsc	3,2
  4297  0F06  2F38               	goto	l1671
  4298  0F07  01F5               	clrf	___awdiv@counter
  4299  0F08  0AF5               	incf	___awdiv@counter,f
  4300  0F09                     l1659:	
  4301  0F09  1BF1               	btfsc	___awdiv@divisor+1,7
  4302  0F0A  2F17               	goto	l1661
  4303  0F0B  3001               	movlw	1
  4304  0F0C                     u2165:	
  4305  0F0C  1003               	clrc
  4306  0F0D  0DF0               	rlf	___awdiv@divisor,f
  4307  0F0E  0DF1               	rlf	___awdiv@divisor+1,f
  4308  0F0F  3EFF               	addlw	-1
  4309  0F10  1D03               	skipz
  4310  0F11  2F0C               	goto	u2165
  4311  0F12  3001               	movlw	1
  4312  0F13  00F4               	movwf	??___awdiv
  4313  0F14  0874               	movf	??___awdiv,w
  4314  0F15  07F5               	addwf	___awdiv@counter,f
  4315  0F16  2F09               	goto	l1659
  4316  0F17                     l1661:	
  4317  0F17  3001               	movlw	1
  4318  0F18                     u2185:	
  4319  0F18  1003               	clrc
  4320  0F19  0DF7               	rlf	___awdiv@quotient,f
  4321  0F1A  0DF8               	rlf	___awdiv@quotient+1,f
  4322  0F1B  3EFF               	addlw	-1
  4323  0F1C  1D03               	skipz
  4324  0F1D  2F18               	goto	u2185
  4325  0F1E  0871               	movf	___awdiv@divisor+1,w
  4326  0F1F  0273               	subwf	___awdiv@dividend+1,w
  4327  0F20  1D03               	skipz
  4328  0F21  2F24               	goto	u2195
  4329  0F22  0870               	movf	___awdiv@divisor,w
  4330  0F23  0272               	subwf	___awdiv@dividend,w
  4331  0F24                     u2195:	
  4332  0F24  1C03               	skipc
  4333  0F25  2F2D               	goto	l1667
  4334  0F26  0870               	movf	___awdiv@divisor,w
  4335  0F27  02F2               	subwf	___awdiv@dividend,f
  4336  0F28  0871               	movf	___awdiv@divisor+1,w
  4337  0F29  1C03               	skipc
  4338  0F2A  03F3               	decf	___awdiv@dividend+1,f
  4339  0F2B  02F3               	subwf	___awdiv@dividend+1,f
  4340  0F2C  1477               	bsf	___awdiv@quotient,0
  4341  0F2D                     l1667:	
  4342  0F2D  3001               	movlw	1
  4343  0F2E                     u2205:	
  4344  0F2E  1003               	clrc
  4345  0F2F  0CF1               	rrf	___awdiv@divisor+1,f
  4346  0F30  0CF0               	rrf	___awdiv@divisor,f
  4347  0F31  3EFF               	addlw	-1
  4348  0F32  1D03               	skipz
  4349  0F33  2F2E               	goto	u2205
  4350  0F34  3001               	movlw	1
  4351  0F35  02F5               	subwf	___awdiv@counter,f
  4352  0F36  1D03               	btfss	3,2
  4353  0F37  2F17               	goto	l1661
  4354  0F38                     l1671:	
  4355  0F38  0876               	movf	___awdiv@sign,w
  4356  0F39  1903               	btfsc	3,2
  4357  0F3A  2F40               	goto	l1675
  4358  0F3B  09F7               	comf	___awdiv@quotient,f
  4359  0F3C  09F8               	comf	___awdiv@quotient+1,f
  4360  0F3D  0AF7               	incf	___awdiv@quotient,f
  4361  0F3E  1903               	skipnz
  4362  0F3F  0AF8               	incf	___awdiv@quotient+1,f
  4363  0F40                     l1675:	
  4364  0F40  0878               	movf	___awdiv@quotient+1,w
  4365  0F41  00F1               	movwf	?___awdiv+1
  4366  0F42  0877               	movf	___awdiv@quotient,w
  4367  0F43  00F0               	movwf	?___awdiv
  4368  0F44  0008               	return
  4369  0F45                     __end_of___awdiv:	
  4370                           
  4371                           	psect	text23
  4372  01FE                     __ptext23:	
  4373 ;; *************** function _Lcd_CharCP *****************
  4374 ;; Defined at:
  4375 ;;		line 115 in file "libs/HD44780.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  c               1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  c               1    3[COMMON] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4389 ;;      Params:         0       0       0       0       0
  4390 ;;      Locals:         1       0       0       0       0
  4391 ;;      Temps:          1       0       0       0       0
  4392 ;;      Totals:         2       0       0       0       0
  4393 ;;Total ram usage:        2 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    1
  4396 ;; This function calls:
  4397 ;;		_Lcd_Delay5500us
  4398 ;;		_Lcd_Delay5us
  4399 ;; This function is called by:
  4400 ;;		_Lcd_Text
  4401 ;;		_Lcd_WriteChar
  4402 ;;		_Lcd_Int
  4403 ;;		_Lcd_ConstText
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           
  4408                           ;psect for function _Lcd_CharCP
  4409  01FE                     _Lcd_CharCP:	
  4410                           
  4411                           ;incstack = 0
  4412                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0+pclath+cstack]
  4413                           ;Lcd_CharCP@c stored from wreg
  4414  01FE  00F3               	movwf	Lcd_CharCP@c
  4415                           
  4416                           ;HD44780.c: 116: RB4 = 0; RB5 = 1;
  4417  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  4418  0200  1303               	bcf	3,6	;RP1=0, select bank0
  4419  0201  1206               	bcf	6,4	;volatile
  4420  0202  1686               	bsf	6,5	;volatile
  4421                           
  4422                           ;HD44780.c: 117: RB3 = (c & 0b10000000)>>7; RB2 = (c & 0b01000000)>>6;
  4423  0203  0873               	movf	Lcd_CharCP@c,w
  4424  0204  00F2               	movwf	??_Lcd_CharCP
  4425  0205  3007               	movlw	7
  4426  0206                     u1665:	
  4427  0206  1003               	clrc
  4428  0207  0CF2               	rrf	??_Lcd_CharCP,f
  4429  0208  3EFF               	addlw	-1
  4430  0209  1D03               	skipz
  4431  020A  2A06               	goto	u1665
  4432  020B  1C72               	btfss	??_Lcd_CharCP,0
  4433  020C  2A11               	goto	u1670
  4434  020D  1283               	bcf	3,5	;RP0=0, select bank0
  4435  020E  1303               	bcf	3,6	;RP1=0, select bank0
  4436  020F  1586               	bsf	6,3	;volatile
  4437  0210  2A14               	goto	u1684
  4438  0211                     u1670:	
  4439  0211  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0212  1303               	bcf	3,6	;RP1=0, select bank0
  4441  0213  1186               	bcf	6,3	;volatile
  4442  0214                     u1684:	
  4443  0214  0873               	movf	Lcd_CharCP@c,w
  4444  0215  00F2               	movwf	??_Lcd_CharCP
  4445  0216  3006               	movlw	6
  4446  0217                     u1695:	
  4447  0217  1003               	clrc
  4448  0218  0CF2               	rrf	??_Lcd_CharCP,f
  4449  0219  3EFF               	addlw	-1
  4450  021A  1D03               	skipz
  4451  021B  2A17               	goto	u1695
  4452  021C  1C72               	btfss	??_Lcd_CharCP,0
  4453  021D  2A22               	goto	u1700
  4454  021E  1283               	bcf	3,5	;RP0=0, select bank0
  4455  021F  1303               	bcf	3,6	;RP1=0, select bank0
  4456  0220  1506               	bsf	6,2	;volatile
  4457  0221  2A25               	goto	u1714
  4458  0222                     u1700:	
  4459  0222  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0223  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0224  1106               	bcf	6,2	;volatile
  4462  0225                     u1714:	
  4463                           
  4464                           ;HD44780.c: 118: RB1 = (c & 0b00100000)>>5; RB0 = (c & 0b00010000)>>4;
  4465  0225  0873               	movf	Lcd_CharCP@c,w
  4466  0226  00F2               	movwf	??_Lcd_CharCP
  4467  0227  3005               	movlw	5
  4468  0228                     u1725:	
  4469  0228  1003               	clrc
  4470  0229  0CF2               	rrf	??_Lcd_CharCP,f
  4471  022A  3EFF               	addlw	-1
  4472  022B  1D03               	skipz
  4473  022C  2A28               	goto	u1725
  4474  022D  1C72               	btfss	??_Lcd_CharCP,0
  4475  022E  2A33               	goto	u1730
  4476  022F  1283               	bcf	3,5	;RP0=0, select bank0
  4477  0230  1303               	bcf	3,6	;RP1=0, select bank0
  4478  0231  1486               	bsf	6,1	;volatile
  4479  0232  2A36               	goto	u1744
  4480  0233                     u1730:	
  4481  0233  1283               	bcf	3,5	;RP0=0, select bank0
  4482  0234  1303               	bcf	3,6	;RP1=0, select bank0
  4483  0235  1086               	bcf	6,1	;volatile
  4484  0236                     u1744:	
  4485  0236  0873               	movf	Lcd_CharCP@c,w
  4486  0237  00F2               	movwf	??_Lcd_CharCP
  4487  0238  3004               	movlw	4
  4488  0239                     u1755:	
  4489  0239  1003               	clrc
  4490  023A  0CF2               	rrf	??_Lcd_CharCP,f
  4491  023B  3EFF               	addlw	-1
  4492  023C  1D03               	skipz
  4493  023D  2A39               	goto	u1755
  4494  023E  1C72               	btfss	??_Lcd_CharCP,0
  4495  023F  2A44               	goto	u1760
  4496  0240  1283               	bcf	3,5	;RP0=0, select bank0
  4497  0241  1303               	bcf	3,6	;RP1=0, select bank0
  4498  0242  1406               	bsf	6,0	;volatile
  4499  0243  2A47               	goto	l1473
  4500  0244                     u1760:	
  4501  0244  1283               	bcf	3,5	;RP0=0, select bank0
  4502  0245  1303               	bcf	3,6	;RP1=0, select bank0
  4503  0246  1006               	bcf	6,0	;volatile
  4504  0247                     l1473:	
  4505                           
  4506                           ;HD44780.c: 119: _delay(10);
  4507  0247  3003               	movlw	3
  4508  0248  00F2               	movwf	??_Lcd_CharCP
  4509  0249                     u2807:	
  4510  0249  0BF2               	decfsz	??_Lcd_CharCP,f
  4511  024A  2A49               	goto	u2807
  4512                           
  4513                           ;HD44780.c: 120: RB4 = 1; Lcd_Delay5us(); RB4 = 0;
  4514  024B  1283               	bcf	3,5	;RP0=0, select bank0
  4515  024C  1303               	bcf	3,6	;RP1=0, select bank0
  4516  024D  1606               	bsf	6,4	;volatile
  4517  024E  120A  158A  24B6  120A  118A  	fcall	_Lcd_Delay5us
  4518  0253  1283               	bcf	3,5	;RP0=0, select bank0
  4519  0254  1303               	bcf	3,6	;RP1=0, select bank0
  4520  0255  1206               	bcf	6,4	;volatile
  4521                           
  4522                           ;HD44780.c: 121: RB3 = (c & 0b00001000)>>3; RB2 = (c & 0b00000100)>>2;
  4523  0256  0873               	movf	Lcd_CharCP@c,w
  4524  0257  00F2               	movwf	??_Lcd_CharCP
  4525  0258  3003               	movlw	3
  4526  0259                     u1785:	
  4527  0259  1003               	clrc
  4528  025A  0CF2               	rrf	??_Lcd_CharCP,f
  4529  025B  3EFF               	addlw	-1
  4530  025C  1D03               	skipz
  4531  025D  2A59               	goto	u1785
  4532  025E  1C72               	btfss	??_Lcd_CharCP,0
  4533  025F  2A64               	goto	u1790
  4534  0260  1283               	bcf	3,5	;RP0=0, select bank0
  4535  0261  1303               	bcf	3,6	;RP1=0, select bank0
  4536  0262  1586               	bsf	6,3	;volatile
  4537  0263  2A67               	goto	l1483
  4538  0264                     u1790:	
  4539  0264  1283               	bcf	3,5	;RP0=0, select bank0
  4540  0265  1303               	bcf	3,6	;RP1=0, select bank0
  4541  0266  1186               	bcf	6,3	;volatile
  4542  0267                     l1483:	
  4543  0267  0873               	movf	Lcd_CharCP@c,w
  4544  0268  00F2               	movwf	??_Lcd_CharCP
  4545  0269  3002               	movlw	2
  4546  026A                     u1815:	
  4547  026A  1003               	clrc
  4548  026B  0CF2               	rrf	??_Lcd_CharCP,f
  4549  026C  3EFF               	addlw	-1
  4550  026D  1D03               	skipz
  4551  026E  2A6A               	goto	u1815
  4552  026F  1C72               	btfss	??_Lcd_CharCP,0
  4553  0270  2A75               	goto	u1820
  4554  0271  1283               	bcf	3,5	;RP0=0, select bank0
  4555  0272  1303               	bcf	3,6	;RP1=0, select bank0
  4556  0273  1506               	bsf	6,2	;volatile
  4557  0274  2A78               	goto	l1485
  4558  0275                     u1820:	
  4559  0275  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0276  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0277  1106               	bcf	6,2	;volatile
  4562  0278                     l1485:	
  4563                           
  4564                           ;HD44780.c: 122: RB1 = (c & 0b00000010)>>1; RB0 = (c & 0b00000001);
  4565  0278  0873               	movf	Lcd_CharCP@c,w
  4566  0279  00F2               	movwf	??_Lcd_CharCP
  4567  027A  3001               	movlw	1
  4568  027B                     u1845:	
  4569  027B  1003               	clrc
  4570  027C  0CF2               	rrf	??_Lcd_CharCP,f
  4571  027D  3EFF               	addlw	-1
  4572  027E  1D03               	skipz
  4573  027F  2A7B               	goto	u1845
  4574  0280  1C72               	btfss	??_Lcd_CharCP,0
  4575  0281  2A86               	goto	u1850
  4576  0282  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0283  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0284  1486               	bsf	6,1	;volatile
  4579  0285  2A89               	goto	l1487
  4580  0286                     u1850:	
  4581  0286  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0287  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0288  1086               	bcf	6,1	;volatile
  4584  0289                     l1487:	
  4585  0289  1C73               	btfss	Lcd_CharCP@c,0
  4586  028A  2A8F               	goto	u1870
  4587  028B  1283               	bcf	3,5	;RP0=0, select bank0
  4588  028C  1303               	bcf	3,6	;RP1=0, select bank0
  4589  028D  1406               	bsf	6,0	;volatile
  4590  028E  2A92               	goto	l1489
  4591  028F                     u1870:	
  4592  028F  1283               	bcf	3,5	;RP0=0, select bank0
  4593  0290  1303               	bcf	3,6	;RP1=0, select bank0
  4594  0291  1006               	bcf	6,0	;volatile
  4595  0292                     l1489:	
  4596                           
  4597                           ;HD44780.c: 123: _delay(10);
  4598  0292  3003               	movlw	3
  4599  0293  00F2               	movwf	??_Lcd_CharCP
  4600  0294                     u2817:	
  4601  0294  0BF2               	decfsz	??_Lcd_CharCP,f
  4602  0295  2A94               	goto	u2817
  4603                           
  4604                           ;HD44780.c: 124: RB4 = 1; Lcd_Delay5us(); RB4 = 0;
  4605  0296  1283               	bcf	3,5	;RP0=0, select bank0
  4606  0297  1303               	bcf	3,6	;RP1=0, select bank0
  4607  0298  1606               	bsf	6,4	;volatile
  4608  0299  120A  158A  24B6  120A  118A  	fcall	_Lcd_Delay5us
  4609  029E  1283               	bcf	3,5	;RP0=0, select bank0
  4610  029F  1303               	bcf	3,6	;RP1=0, select bank0
  4611  02A0  1206               	bcf	6,4	;volatile
  4612                           
  4613                           ;HD44780.c: 125: Lcd_Delay5us(); Lcd_Delay5500us();
  4614  02A1  120A  158A  24B6  120A  118A  	fcall	_Lcd_Delay5us
  4615  02A6  120A  118A  2006   	fcall	_Lcd_Delay5500us
  4616  02A9  0008               	return
  4617  02AA                     __end_of_Lcd_CharCP:	
  4618                           
  4619                           	psect	text24
  4620  00B2                     __ptext24:	
  4621 ;; *************** function _Lcd_Init *****************
  4622 ;; Defined at:
  4623 ;;		line 17 in file "libs/HD44780.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  data            1    5[COMMON] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2, status,0, pclath, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4637 ;;      Params:         0       0       0       0       0
  4638 ;;      Locals:         1       0       0       0       0
  4639 ;;      Temps:          1       0       0       0       0
  4640 ;;      Totals:         2       0       0       0       0
  4641 ;;Total ram usage:        2 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    2
  4644 ;; This function calls:
  4645 ;;		_Lcd_Command
  4646 ;;		_Lcd_Delay5500us
  4647 ;;		_Lcd_Delay5us
  4648 ;; This function is called by:
  4649 ;;		_main
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           
  4654                           ;psect for function _Lcd_Init
  4655  00B2                     _Lcd_Init:	
  4656                           
  4657                           ;HD44780.c: 19: ANSEL = 0x00;
  4658                           
  4659                           ;incstack = 0
  4660                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4661  00B2  1683               	bsf	3,5	;RP0=1, select bank3
  4662  00B3  1703               	bsf	3,6	;RP1=1, select bank3
  4663  00B4  0188               	clrf	8	;volatile
  4664                           
  4665                           ;HD44780.c: 20: ANSELH = 0x00;
  4666  00B5  0189               	clrf	9	;volatile
  4667                           
  4668                           ;HD44780.c: 23: unsigned char data;
  4669                           ;HD44780.c: 24: TRISBbits.TRISB3 = 0; TRISBbits.TRISB2 = 0; TRISBbits.TRISB1 = 0; TRISBb
      +                          its.TRISB0 = 0; TRISBbits.TRISB4 = 0; TRISBbits.TRISB5 = 0;
  4670  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  4671  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  4672  00B8  1186               	bcf	6,3	;volatile
  4673  00B9  1106               	bcf	6,2	;volatile
  4674  00BA  1086               	bcf	6,1	;volatile
  4675  00BB  1006               	bcf	6,0	;volatile
  4676  00BC  1206               	bcf	6,4	;volatile
  4677  00BD  1286               	bcf	6,5	;volatile
  4678                           
  4679                           ;HD44780.c: 25: RB3 = 0; RB2 = 0; RB1 = 0; RB0 = 0; RB4 = 0; RB5 = 0;
  4680  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  4681  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  4682  00C0  1186               	bcf	6,3	;volatile
  4683  00C1  1106               	bcf	6,2	;volatile
  4684  00C2  1086               	bcf	6,1	;volatile
  4685  00C3  1006               	bcf	6,0	;volatile
  4686  00C4  1206               	bcf	6,4	;volatile
  4687  00C5  1286               	bcf	6,5	;volatile
  4688                           
  4689                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  4690  00C6  120A  118A  2006  120A  118A  	fcall	_Lcd_Delay5500us
  4691  00CB  120A  118A  2006  120A  118A  	fcall	_Lcd_Delay5500us
  4692  00D0  120A  118A  2006  120A  118A  	fcall	_Lcd_Delay5500us
  4693                           
  4694                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  4695  00D5  120A  118A  2006  120A  118A  	fcall	_Lcd_Delay5500us
  4696  00DA  120A  118A  2006  120A  118A  	fcall	_Lcd_Delay5500us
  4697  00DF  120A  118A  2006  120A  118A  	fcall	_Lcd_Delay5500us
  4698                           
  4699                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  4700  00E4  01F5               	clrf	Lcd_Init@data
  4701  00E5  0AF5               	incf	Lcd_Init@data,f
  4702  00E6  3004               	movlw	4
  4703  00E7  0275               	subwf	Lcd_Init@data,w
  4704  00E8  1803               	btfsc	3,0
  4705  00E9  2912               	goto	l154
  4706  00EA                     l153:	
  4707                           
  4708                           ;HD44780.c: 29: {
  4709                           ;HD44780.c: 30: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 1; RB4 = 0; RB5 = 0;
  4710  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  4711  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  4712  00EC  1186               	bcf	6,3	;volatile
  4713  00ED  1106               	bcf	6,2	;volatile
  4714  00EE  1486               	bsf	6,1	;volatile
  4715  00EF  1406               	bsf	6,0	;volatile
  4716  00F0  1206               	bcf	6,4	;volatile
  4717  00F1  1286               	bcf	6,5	;volatile
  4718                           
  4719                           ;HD44780.c: 31: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 1; RB4 = 1; RB5 = 0;
  4720  00F2  1186               	bcf	6,3	;volatile
  4721  00F3  1106               	bcf	6,2	;volatile
  4722  00F4  1486               	bsf	6,1	;volatile
  4723  00F5  1406               	bsf	6,0	;volatile
  4724  00F6  1606               	bsf	6,4	;volatile
  4725  00F7  1286               	bcf	6,5	;volatile
  4726                           
  4727                           ;HD44780.c: 32: Lcd_Delay5us();
  4728  00F8  120A  158A  24B6  120A  118A  	fcall	_Lcd_Delay5us
  4729                           
  4730                           ;HD44780.c: 33: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 1; RB4 = 0; RB5 = 0;
  4731  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  4732  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  4733  00FF  1186               	bcf	6,3	;volatile
  4734  0100  1106               	bcf	6,2	;volatile
  4735  0101  1486               	bsf	6,1	;volatile
  4736  0102  1406               	bsf	6,0	;volatile
  4737  0103  1206               	bcf	6,4	;volatile
  4738  0104  1286               	bcf	6,5	;volatile
  4739                           
  4740                           ;HD44780.c: 34: Lcd_Delay5500us();
  4741  0105  120A  118A  2006  120A  118A  	fcall	_Lcd_Delay5500us
  4742  010A  3001               	movlw	1
  4743  010B  00F4               	movwf	??_Lcd_Init
  4744  010C  0874               	movf	??_Lcd_Init,w
  4745  010D  07F5               	addwf	Lcd_Init@data,f
  4746  010E  3004               	movlw	4
  4747  010F  0275               	subwf	Lcd_Init@data,w
  4748  0110  1C03               	skipc
  4749  0111  28EA               	goto	l153
  4750  0112                     l154:	
  4751                           
  4752                           ;HD44780.c: 35: }
  4753                           ;HD44780.c: 36: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 0; RB4 = 0; RB5 = 0;
  4754  0112  1283               	bcf	3,5	;RP0=0, select bank0
  4755  0113  1303               	bcf	3,6	;RP1=0, select bank0
  4756  0114  1186               	bcf	6,3	;volatile
  4757  0115  1106               	bcf	6,2	;volatile
  4758  0116  1486               	bsf	6,1	;volatile
  4759  0117  1006               	bcf	6,0	;volatile
  4760  0118  1206               	bcf	6,4	;volatile
  4761  0119  1286               	bcf	6,5	;volatile
  4762                           
  4763                           ;HD44780.c: 37: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 0; RB4 = 1; RB5 = 0;
  4764  011A  1186               	bcf	6,3	;volatile
  4765  011B  1106               	bcf	6,2	;volatile
  4766  011C  1486               	bsf	6,1	;volatile
  4767  011D  1006               	bcf	6,0	;volatile
  4768  011E  1606               	bsf	6,4	;volatile
  4769  011F  1286               	bcf	6,5	;volatile
  4770                           
  4771                           ;HD44780.c: 38: Lcd_Delay5us();
  4772  0120  120A  158A  24B6  120A  118A  	fcall	_Lcd_Delay5us
  4773                           
  4774                           ;HD44780.c: 39: RB3 = 0; RB2 = 0; RB1 = 1; RB0 = 0; RB4 = 0; RB5 = 0;
  4775  0125  1283               	bcf	3,5	;RP0=0, select bank0
  4776  0126  1303               	bcf	3,6	;RP1=0, select bank0
  4777  0127  1186               	bcf	6,3	;volatile
  4778  0128  1106               	bcf	6,2	;volatile
  4779  0129  1486               	bsf	6,1	;volatile
  4780  012A  1006               	bcf	6,0	;volatile
  4781  012B  1206               	bcf	6,4	;volatile
  4782  012C  1286               	bcf	6,5	;volatile
  4783                           
  4784                           ;HD44780.c: 40: Lcd_Delay5500us();
  4785  012D  120A  118A  2006  120A  118A  	fcall	_Lcd_Delay5500us
  4786                           
  4787                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  4788  0132  3028               	movlw	40
  4789  0133  00F4               	movwf	??_Lcd_Init
  4790  0134  0874               	movf	??_Lcd_Init,w
  4791  0135  00F5               	movwf	Lcd_Init@data
  4792  0136  0875               	movf	Lcd_Init@data,w
  4793  0137  120A  118A  2157  120A  118A  	fcall	_Lcd_Command
  4794                           
  4795                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  4796  013C  3010               	movlw	16
  4797  013D  00F4               	movwf	??_Lcd_Init
  4798  013E  0874               	movf	??_Lcd_Init,w
  4799  013F  00F5               	movwf	Lcd_Init@data
  4800  0140  0875               	movf	Lcd_Init@data,w
  4801  0141  120A  118A  2157  120A  118A  	fcall	_Lcd_Command
  4802                           
  4803                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  4804  0146  01F5               	clrf	Lcd_Init@data
  4805  0147  0AF5               	incf	Lcd_Init@data,f
  4806  0148  0875               	movf	Lcd_Init@data,w
  4807  0149  120A  118A  2157  120A  118A  	fcall	_Lcd_Command
  4808                           
  4809                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  4810  014E  300F               	movlw	15
  4811  014F  00F4               	movwf	??_Lcd_Init
  4812  0150  0874               	movf	??_Lcd_Init,w
  4813  0151  00F5               	movwf	Lcd_Init@data
  4814  0152  0875               	movf	Lcd_Init@data,w
  4815  0153  120A  118A  2157   	fcall	_Lcd_Command
  4816  0156  0008               	return
  4817  0157                     __end_of_Lcd_Init:	
  4818                           
  4819                           	psect	text25
  4820  0157                     __ptext25:	
  4821 ;; *************** function _Lcd_Command *****************
  4822 ;; Defined at:
  4823 ;;		line 132 in file "libs/HD44780.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  command         1    wreg     unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  command         1    3[COMMON] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4837 ;;      Params:         0       0       0       0       0
  4838 ;;      Locals:         1       0       0       0       0
  4839 ;;      Temps:          1       0       0       0       0
  4840 ;;      Totals:         2       0       0       0       0
  4841 ;;Total ram usage:        2 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    1
  4844 ;; This function calls:
  4845 ;;		_Lcd_Delay5500us
  4846 ;;		_Lcd_Delay5us
  4847 ;; This function is called by:
  4848 ;;		_main
  4849 ;;		_Lcd_Init
  4850 ;;		_Lcd_Text
  4851 ;;		_Lcd_WriteChar
  4852 ;;		_Lcd_Int
  4853 ;;		_Lcd_ConstText
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           
  4858                           ;psect for function _Lcd_Command
  4859  0157                     _Lcd_Command:	
  4860                           
  4861                           ;incstack = 0
  4862                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+pclath+cstack]
  4863                           ;Lcd_Command@command stored from wreg
  4864  0157  00F3               	movwf	Lcd_Command@command
  4865                           
  4866                           ;HD44780.c: 133: RB4 = 0; RB5 = 0;
  4867  0158  1283               	bcf	3,5	;RP0=0, select bank0
  4868  0159  1303               	bcf	3,6	;RP1=0, select bank0
  4869  015A  1206               	bcf	6,4	;volatile
  4870  015B  1286               	bcf	6,5	;volatile
  4871                           
  4872                           ;HD44780.c: 134: RB3 = (command & 0b10000000)>>7; RB2 = (command & 0b01000000)>>6;
  4873  015C  0873               	movf	Lcd_Command@command,w
  4874  015D  00F2               	movwf	??_Lcd_Command
  4875  015E  3007               	movlw	7
  4876  015F                     u1435:	
  4877  015F  1003               	clrc
  4878  0160  0CF2               	rrf	??_Lcd_Command,f
  4879  0161  3EFF               	addlw	-1
  4880  0162  1D03               	skipz
  4881  0163  295F               	goto	u1435
  4882  0164  1C72               	btfss	??_Lcd_Command,0
  4883  0165  296A               	goto	u1440
  4884  0166  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0167  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0168  1586               	bsf	6,3	;volatile
  4887  0169  296D               	goto	u1454
  4888  016A                     u1440:	
  4889  016A  1283               	bcf	3,5	;RP0=0, select bank0
  4890  016B  1303               	bcf	3,6	;RP1=0, select bank0
  4891  016C  1186               	bcf	6,3	;volatile
  4892  016D                     u1454:	
  4893  016D  0873               	movf	Lcd_Command@command,w
  4894  016E  00F2               	movwf	??_Lcd_Command
  4895  016F  3006               	movlw	6
  4896  0170                     u1465:	
  4897  0170  1003               	clrc
  4898  0171  0CF2               	rrf	??_Lcd_Command,f
  4899  0172  3EFF               	addlw	-1
  4900  0173  1D03               	skipz
  4901  0174  2970               	goto	u1465
  4902  0175  1C72               	btfss	??_Lcd_Command,0
  4903  0176  297B               	goto	u1470
  4904  0177  1283               	bcf	3,5	;RP0=0, select bank0
  4905  0178  1303               	bcf	3,6	;RP1=0, select bank0
  4906  0179  1506               	bsf	6,2	;volatile
  4907  017A  297E               	goto	u1484
  4908  017B                     u1470:	
  4909  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4910  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4911  017D  1106               	bcf	6,2	;volatile
  4912  017E                     u1484:	
  4913                           
  4914                           ;HD44780.c: 135: RB1 = (command & 0b00100000)>>5; RB0 = (command & 0b00010000)>>4;
  4915  017E  0873               	movf	Lcd_Command@command,w
  4916  017F  00F2               	movwf	??_Lcd_Command
  4917  0180  3005               	movlw	5
  4918  0181                     u1495:	
  4919  0181  1003               	clrc
  4920  0182  0CF2               	rrf	??_Lcd_Command,f
  4921  0183  3EFF               	addlw	-1
  4922  0184  1D03               	skipz
  4923  0185  2981               	goto	u1495
  4924  0186  1C72               	btfss	??_Lcd_Command,0
  4925  0187  298C               	goto	u1500
  4926  0188  1283               	bcf	3,5	;RP0=0, select bank0
  4927  0189  1303               	bcf	3,6	;RP1=0, select bank0
  4928  018A  1486               	bsf	6,1	;volatile
  4929  018B  298F               	goto	u1514
  4930  018C                     u1500:	
  4931  018C  1283               	bcf	3,5	;RP0=0, select bank0
  4932  018D  1303               	bcf	3,6	;RP1=0, select bank0
  4933  018E  1086               	bcf	6,1	;volatile
  4934  018F                     u1514:	
  4935  018F  0873               	movf	Lcd_Command@command,w
  4936  0190  00F2               	movwf	??_Lcd_Command
  4937  0191  3004               	movlw	4
  4938  0192                     u1525:	
  4939  0192  1003               	clrc
  4940  0193  0CF2               	rrf	??_Lcd_Command,f
  4941  0194  3EFF               	addlw	-1
  4942  0195  1D03               	skipz
  4943  0196  2992               	goto	u1525
  4944  0197  1C72               	btfss	??_Lcd_Command,0
  4945  0198  299D               	goto	u1530
  4946  0199  1283               	bcf	3,5	;RP0=0, select bank0
  4947  019A  1303               	bcf	3,6	;RP1=0, select bank0
  4948  019B  1406               	bsf	6,0	;volatile
  4949  019C  29A0               	goto	l1447
  4950  019D                     u1530:	
  4951  019D  1283               	bcf	3,5	;RP0=0, select bank0
  4952  019E  1303               	bcf	3,6	;RP1=0, select bank0
  4953  019F  1006               	bcf	6,0	;volatile
  4954  01A0                     l1447:	
  4955                           
  4956                           ;HD44780.c: 136: _delay(10);
  4957  01A0  3003               	movlw	3
  4958  01A1  00F2               	movwf	??_Lcd_Command
  4959  01A2                     u2827:	
  4960  01A2  0BF2               	decfsz	??_Lcd_Command,f
  4961  01A3  29A2               	goto	u2827
  4962                           
  4963                           ;HD44780.c: 137: RB4 = 1; Lcd_Delay5us(); RB4 = 0;
  4964  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  4965  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  4966  01A6  1606               	bsf	6,4	;volatile
  4967  01A7  120A  158A  24B6  120A  118A  	fcall	_Lcd_Delay5us
  4968  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  4969  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  4970  01AE  1206               	bcf	6,4	;volatile
  4971                           
  4972                           ;HD44780.c: 138: RB3 = (command & 0b00001000)>>3; RB2 = (command & 0b00000100)>>2;
  4973  01AF  0873               	movf	Lcd_Command@command,w
  4974  01B0  00F2               	movwf	??_Lcd_Command
  4975  01B1  3003               	movlw	3
  4976  01B2                     u1555:	
  4977  01B2  1003               	clrc
  4978  01B3  0CF2               	rrf	??_Lcd_Command,f
  4979  01B4  3EFF               	addlw	-1
  4980  01B5  1D03               	skipz
  4981  01B6  29B2               	goto	u1555
  4982  01B7  1C72               	btfss	??_Lcd_Command,0
  4983  01B8  29BD               	goto	u1560
  4984  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  4985  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  4986  01BB  1586               	bsf	6,3	;volatile
  4987  01BC  29C0               	goto	l1457
  4988  01BD                     u1560:	
  4989  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  4990  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  4991  01BF  1186               	bcf	6,3	;volatile
  4992  01C0                     l1457:	
  4993  01C0  0873               	movf	Lcd_Command@command,w
  4994  01C1  00F2               	movwf	??_Lcd_Command
  4995  01C2  3002               	movlw	2
  4996  01C3                     u1585:	
  4997  01C3  1003               	clrc
  4998  01C4  0CF2               	rrf	??_Lcd_Command,f
  4999  01C5  3EFF               	addlw	-1
  5000  01C6  1D03               	skipz
  5001  01C7  29C3               	goto	u1585
  5002  01C8  1C72               	btfss	??_Lcd_Command,0
  5003  01C9  29CE               	goto	u1590
  5004  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  5005  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  5006  01CC  1506               	bsf	6,2	;volatile
  5007  01CD  29D1               	goto	l1459
  5008  01CE                     u1590:	
  5009  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  5010  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  5011  01D0  1106               	bcf	6,2	;volatile
  5012  01D1                     l1459:	
  5013                           
  5014                           ;HD44780.c: 139: RB1 = (command & 0b00000010)>>1; RB0 = (command & 0b00000001);
  5015  01D1  0873               	movf	Lcd_Command@command,w
  5016  01D2  00F2               	movwf	??_Lcd_Command
  5017  01D3  3001               	movlw	1
  5018  01D4                     u1615:	
  5019  01D4  1003               	clrc
  5020  01D5  0CF2               	rrf	??_Lcd_Command,f
  5021  01D6  3EFF               	addlw	-1
  5022  01D7  1D03               	skipz
  5023  01D8  29D4               	goto	u1615
  5024  01D9  1C72               	btfss	??_Lcd_Command,0
  5025  01DA  29DF               	goto	u1620
  5026  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  5027  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  5028  01DD  1486               	bsf	6,1	;volatile
  5029  01DE  29E2               	goto	l1461
  5030  01DF                     u1620:	
  5031  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  5032  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  5033  01E1  1086               	bcf	6,1	;volatile
  5034  01E2                     l1461:	
  5035  01E2  1C73               	btfss	Lcd_Command@command,0
  5036  01E3  29E8               	goto	u1640
  5037  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  5038  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  5039  01E6  1406               	bsf	6,0	;volatile
  5040  01E7  29EB               	goto	l1463
  5041  01E8                     u1640:	
  5042  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  5043  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  5044  01EA  1006               	bcf	6,0	;volatile
  5045  01EB                     l1463:	
  5046                           
  5047                           ;HD44780.c: 140: _delay(10);
  5048  01EB  3003               	movlw	3
  5049  01EC  00F2               	movwf	??_Lcd_Command
  5050  01ED                     u2837:	
  5051  01ED  0BF2               	decfsz	??_Lcd_Command,f
  5052  01EE  29ED               	goto	u2837
  5053                           
  5054                           ;HD44780.c: 141: RB4 = 1; Lcd_Delay5us(); RB4 = 0;
  5055  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  5056  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  5057  01F1  1606               	bsf	6,4	;volatile
  5058  01F2  120A  158A  24B6  120A  118A  	fcall	_Lcd_Delay5us
  5059  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  5060  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  5061  01F9  1206               	bcf	6,4	;volatile
  5062                           
  5063                           ;HD44780.c: 142: Lcd_Delay5500us();
  5064  01FA  120A  118A  2006   	fcall	_Lcd_Delay5500us
  5065  01FD  0008               	return
  5066  01FE                     __end_of_Lcd_Command:	
  5067                           
  5068                           	psect	text26
  5069  0CB6                     __ptext26:	
  5070 ;; *************** function _Lcd_Delay5us *****************
  5071 ;; Defined at:
  5072 ;;		line 148 in file "libs/HD44780.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;		None
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       0       0       0       0
  5087 ;;      Locals:         0       0       0       0       0
  5088 ;;      Temps:          1       0       0       0       0
  5089 ;;      Totals:         1       0       0       0       0
  5090 ;;Total ram usage:        1 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_Lcd_Init
  5096 ;;		_Lcd_CharCP
  5097 ;;		_Lcd_Command
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _Lcd_Delay5us
  5103  0CB6                     _Lcd_Delay5us:	
  5104                           
  5105                           ;HD44780.c: 149: _delay((unsigned long)((5)*(20000000/4000000.0)));
  5106                           
  5107                           ;incstack = 0
  5108                           ; Regs used in _Lcd_Delay5us: [wreg]
  5109  0CB6  3008               	movlw	8
  5110  0CB7  00F0               	movwf	??_Lcd_Delay5us
  5111  0CB8                     u2847:	
  5112  0CB8  0BF0               	decfsz	??_Lcd_Delay5us,f
  5113  0CB9  2CB8               	goto	u2847
  5114                           
  5115                           ;HD44780.c: 150: _delay((unsigned long)((5)*(20000000/4000000.0)));
  5116  0CBA  3008               	movlw	8
  5117  0CBB  00F0               	movwf	??_Lcd_Delay5us
  5118  0CBC                     u2857:	
  5119  0CBC  0BF0               	decfsz	??_Lcd_Delay5us,f
  5120  0CBD  2CBC               	goto	u2857
  5121  0CBE  0008               	return
  5122  0CBF                     __end_of_Lcd_Delay5us:	
  5123                           
  5124                           	psect	text27
  5125  0006                     __ptext27:	
  5126 ;; *************** function _Lcd_Delay5500us *****************
  5127 ;; Defined at:
  5128 ;;		line 152 in file "libs/HD44780.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;		None
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		wreg
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5142 ;;      Params:         0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0
  5144 ;;      Temps:          2       0       0       0       0
  5145 ;;      Totals:         2       0       0       0       0
  5146 ;;Total ram usage:        2 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_Lcd_Init
  5152 ;;		_Lcd_CharCP
  5153 ;;		_Lcd_Command
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           
  5158                           ;psect for function _Lcd_Delay5500us
  5159  0006                     _Lcd_Delay5500us:	
  5160                           
  5161                           ;HD44780.c: 153: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in _Lcd_Delay5500us: [wreg]
  5165  0006  3024               	movlw	36
  5166  0007  00F1               	movwf	??_Lcd_Delay5500us+1
  5167  0008  30B5               	movlw	181
  5168  0009  00F0               	movwf	??_Lcd_Delay5500us
  5169  000A                     u2867:	
  5170  000A  0BF0               	decfsz	??_Lcd_Delay5500us,f
  5171  000B  280A               	goto	u2867
  5172  000C  0BF1               	decfsz	??_Lcd_Delay5500us+1,f
  5173  000D  280A               	goto	u2867
  5174  000E  280F               	nop2
  5175  000F  0008               	return
  5176  0010                     __end_of_Lcd_Delay5500us:	
  5177                           
  5178                           	psect	text28
  5179  0D71                     __ptext28:	
  5180 ;; *************** function _I2C_Master_Init *****************
  5181 ;; Defined at:
  5182 ;;		line 3 in file "libs/gsk_i2c.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  c               4    0[BANK0 ] const unsigned long 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0, pclath, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5196 ;;      Params:         0       4       0       0       0
  5197 ;;      Locals:         0       0       0       0       0
  5198 ;;      Temps:          0       4       0       0       0
  5199 ;;      Totals:         0       8       0       0       0
  5200 ;;Total ram usage:        8 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    1
  5203 ;; This function calls:
  5204 ;;		___lldiv
  5205 ;; This function is called by:
  5206 ;;		_main
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           
  5211                           ;psect for function _I2C_Master_Init
  5212  0D71                     _I2C_Master_Init:	
  5213                           
  5214                           ;gsk_i2c.c: 5: SSPCON = 0b00101000;
  5215                           
  5216                           ;incstack = 0
  5217                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5218  0D71  3028               	movlw	40
  5219  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  5220  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  5221  0D74  0094               	movwf	20	;volatile
  5222                           
  5223                           ;gsk_i2c.c: 6: SSPCON2 = 0;
  5224  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  5225  0D76  1303               	bcf	3,6	;RP1=0, select bank1
  5226  0D77  0191               	clrf	17	;volatile
  5227                           
  5228                           ;gsk_i2c.c: 7: SSPADD = (20000000/(4*c))-1;
  5229  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5230  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5231  0D7A  0820               	movf	I2C_Master_Init@c,w
  5232  0D7B  00A4               	movwf	??_I2C_Master_Init
  5233  0D7C  0821               	movf	I2C_Master_Init@c+1,w
  5234  0D7D  00A5               	movwf	??_I2C_Master_Init+1
  5235  0D7E  0822               	movf	I2C_Master_Init@c+2,w
  5236  0D7F  00A6               	movwf	??_I2C_Master_Init+2
  5237  0D80  0823               	movf	I2C_Master_Init@c+3,w
  5238  0D81  00A7               	movwf	??_I2C_Master_Init+3
  5239  0D82  3002               	movlw	2
  5240  0D83                     u2475:	
  5241  0D83  1003               	clrc
  5242  0D84  0DA4               	rlf	??_I2C_Master_Init,f
  5243  0D85  0DA5               	rlf	??_I2C_Master_Init+1,f
  5244  0D86  0DA6               	rlf	??_I2C_Master_Init+2,f
  5245  0D87  0DA7               	rlf	??_I2C_Master_Init+3,f
  5246  0D88  3EFF               	addlw	-1
  5247  0D89  1D03               	skipz
  5248  0D8A  2D83               	goto	u2475
  5249  0D8B  0827               	movf	??_I2C_Master_Init+3,w
  5250  0D8C  00F3               	movwf	___lldiv@divisor+3
  5251  0D8D  0826               	movf	??_I2C_Master_Init+2,w
  5252  0D8E  00F2               	movwf	___lldiv@divisor+2
  5253  0D8F  0825               	movf	??_I2C_Master_Init+1,w
  5254  0D90  00F1               	movwf	___lldiv@divisor+1
  5255  0D91  0824               	movf	??_I2C_Master_Init,w
  5256  0D92  00F0               	movwf	___lldiv@divisor
  5257  0D93  3001               	movlw	1
  5258  0D94  00F7               	movwf	___lldiv@dividend+3
  5259  0D95  3031               	movlw	49
  5260  0D96  00F6               	movwf	___lldiv@dividend+2
  5261  0D97  302D               	movlw	45
  5262  0D98  00F5               	movwf	___lldiv@dividend+1
  5263  0D99  3000               	movlw	0
  5264  0D9A  00F4               	movwf	___lldiv@dividend
  5265  0D9B  120A  158A  27A2   	fcall	___lldiv
  5266  0D9E  0870               	movf	?___lldiv,w
  5267  0D9F  3EFF               	addlw	255
  5268  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  5269  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  5270  0DA2  0093               	movwf	19	;volatile
  5271                           
  5272                           ;gsk_i2c.c: 8: SSPSTAT = 0;
  5273  0DA3  0194               	clrf	20	;volatile
  5274                           
  5275                           ;gsk_i2c.c: 9: TRISC3 = 1;
  5276  0DA4  1587               	bsf	7,3	;volatile
  5277                           
  5278                           ;gsk_i2c.c: 10: TRISC4 = 1;
  5279  0DA5  1607               	bsf	7,4	;volatile
  5280  0DA6  0008               	return
  5281  0DA7                     __end_of_I2C_Master_Init:	
  5282                           
  5283                           	psect	text29
  5284  0FA2                     __ptext29:	
  5285 ;; *************** function ___lldiv *****************
  5286 ;; Defined at:
  5287 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  divisor         4    0[COMMON] unsigned long 
  5290 ;;  dividend        4    4[COMMON] unsigned long 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  quotient        4    9[COMMON] unsigned long 
  5293 ;;  counter         1   13[COMMON] unsigned char 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  4    0[COMMON] unsigned long 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5303 ;;      Params:         8       0       0       0       0
  5304 ;;      Locals:         5       0       0       0       0
  5305 ;;      Temps:          1       0       0       0       0
  5306 ;;      Totals:        14       0       0       0       0
  5307 ;;Total ram usage:       14 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; This function calls:
  5310 ;;		Nothing
  5311 ;; This function is called by:
  5312 ;;		_WriteLongInt
  5313 ;;		_I2C_Master_Init
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           
  5318                           ;psect for function ___lldiv
  5319  0FA2                     ___lldiv:	
  5320                           
  5321                           ;incstack = 0
  5322                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5323  0FA2  3000               	movlw	0
  5324  0FA3  00FC               	movwf	___lldiv@quotient+3
  5325  0FA4  3000               	movlw	0
  5326  0FA5  00FB               	movwf	___lldiv@quotient+2
  5327  0FA6  3000               	movlw	0
  5328  0FA7  00FA               	movwf	___lldiv@quotient+1
  5329  0FA8  3000               	movlw	0
  5330  0FA9  00F9               	movwf	___lldiv@quotient
  5331  0FAA  0873               	movf	___lldiv@divisor+3,w
  5332  0FAB  0472               	iorwf	___lldiv@divisor+2,w
  5333  0FAC  0471               	iorwf	___lldiv@divisor+1,w
  5334  0FAD  0470               	iorwf	___lldiv@divisor,w
  5335  0FAE  1903               	skipnz
  5336  0FAF  2FF7               	goto	l1699
  5337  0FB0  01FD               	clrf	___lldiv@counter
  5338  0FB1  0AFD               	incf	___lldiv@counter,f
  5339  0FB2                     l1685:	
  5340  0FB2  1BF3               	btfsc	___lldiv@divisor+3,7
  5341  0FB3  2FC2               	goto	l1687
  5342  0FB4  3001               	movlw	1
  5343  0FB5  00F8               	movwf	??___lldiv
  5344  0FB6                     u2245:	
  5345  0FB6  1003               	clrc
  5346  0FB7  0DF0               	rlf	___lldiv@divisor,f
  5347  0FB8  0DF1               	rlf	___lldiv@divisor+1,f
  5348  0FB9  0DF2               	rlf	___lldiv@divisor+2,f
  5349  0FBA  0DF3               	rlf	___lldiv@divisor+3,f
  5350  0FBB  0BF8               	decfsz	??___lldiv,f
  5351  0FBC  2FB6               	goto	u2245
  5352  0FBD  3001               	movlw	1
  5353  0FBE  00F8               	movwf	??___lldiv
  5354  0FBF  0878               	movf	??___lldiv,w
  5355  0FC0  07FD               	addwf	___lldiv@counter,f
  5356  0FC1  2FB2               	goto	l1685
  5357  0FC2                     l1687:	
  5358  0FC2  3001               	movlw	1
  5359  0FC3  00F8               	movwf	??___lldiv
  5360  0FC4                     u2265:	
  5361  0FC4  1003               	clrc
  5362  0FC5  0DF9               	rlf	___lldiv@quotient,f
  5363  0FC6  0DFA               	rlf	___lldiv@quotient+1,f
  5364  0FC7  0DFB               	rlf	___lldiv@quotient+2,f
  5365  0FC8  0DFC               	rlf	___lldiv@quotient+3,f
  5366  0FC9  0BF8               	decfsz	??___lldiv,f
  5367  0FCA  2FC4               	goto	u2265
  5368  0FCB  0873               	movf	___lldiv@divisor+3,w
  5369  0FCC  0277               	subwf	___lldiv@dividend+3,w
  5370  0FCD  1D03               	skipz
  5371  0FCE  2FD9               	goto	u2275
  5372  0FCF  0872               	movf	___lldiv@divisor+2,w
  5373  0FD0  0276               	subwf	___lldiv@dividend+2,w
  5374  0FD1  1D03               	skipz
  5375  0FD2  2FD9               	goto	u2275
  5376  0FD3  0871               	movf	___lldiv@divisor+1,w
  5377  0FD4  0275               	subwf	___lldiv@dividend+1,w
  5378  0FD5  1D03               	skipz
  5379  0FD6  2FD9               	goto	u2275
  5380  0FD7  0870               	movf	___lldiv@divisor,w
  5381  0FD8  0274               	subwf	___lldiv@dividend,w
  5382  0FD9                     u2275:	
  5383  0FD9  1C03               	skipc
  5384  0FDA  2FEA               	goto	l1695
  5385  0FDB  0870               	movf	___lldiv@divisor,w
  5386  0FDC  02F4               	subwf	___lldiv@dividend,f
  5387  0FDD  0871               	movf	___lldiv@divisor+1,w
  5388  0FDE  1C03               	skipc
  5389  0FDF  0F71               	incfsz	___lldiv@divisor+1,w
  5390  0FE0  02F5               	subwf	___lldiv@dividend+1,f
  5391  0FE1  0872               	movf	___lldiv@divisor+2,w
  5392  0FE2  1C03               	skipc
  5393  0FE3  0F72               	incfsz	___lldiv@divisor+2,w
  5394  0FE4  02F6               	subwf	___lldiv@dividend+2,f
  5395  0FE5  0873               	movf	___lldiv@divisor+3,w
  5396  0FE6  1C03               	skipc
  5397  0FE7  0F73               	incfsz	___lldiv@divisor+3,w
  5398  0FE8  02F7               	subwf	___lldiv@dividend+3,f
  5399  0FE9  1479               	bsf	___lldiv@quotient,0
  5400  0FEA                     l1695:	
  5401  0FEA  3001               	movlw	1
  5402  0FEB                     u2285:	
  5403  0FEB  1003               	clrc
  5404  0FEC  0CF3               	rrf	___lldiv@divisor+3,f
  5405  0FED  0CF2               	rrf	___lldiv@divisor+2,f
  5406  0FEE  0CF1               	rrf	___lldiv@divisor+1,f
  5407  0FEF  0CF0               	rrf	___lldiv@divisor,f
  5408  0FF0  3EFF               	addlw	-1
  5409  0FF1  1D03               	skipz
  5410  0FF2  2FEB               	goto	u2285
  5411  0FF3  3001               	movlw	1
  5412  0FF4  02FD               	subwf	___lldiv@counter,f
  5413  0FF5  1D03               	btfss	3,2
  5414  0FF6  2FC2               	goto	l1687
  5415  0FF7                     l1699:	
  5416  0FF7  087C               	movf	___lldiv@quotient+3,w
  5417  0FF8  00F3               	movwf	?___lldiv+3
  5418  0FF9  087B               	movf	___lldiv@quotient+2,w
  5419  0FFA  00F2               	movwf	?___lldiv+2
  5420  0FFB  087A               	movf	___lldiv@quotient+1,w
  5421  0FFC  00F1               	movwf	?___lldiv+1
  5422  0FFD  0879               	movf	___lldiv@quotient,w
  5423  0FFE  00F0               	movwf	?___lldiv
  5424  0FFF  0008               	return
  5425  1000                     __end_of___lldiv:	
  5426  007E                     btemp	set	126	;btemp
  5427  007E                     wtemp	set	126
  5428  007E                     wtemp0	set	126
  5429  0080                     wtemp1	set	128
  5430  0082                     wtemp2	set	130
  5431  0084                     wtemp3	set	132
  5432  0086                     wtemp4	set	134
  5433  0088                     wtemp5	set	136
  5434  007F                     wtemp6	set	127
  5435  007E                     ttemp	set	126
  5436  007E                     ttemp0	set	126
  5437  0081                     ttemp1	set	129
  5438  0084                     ttemp2	set	132
  5439  0087                     ttemp3	set	135
  5440  007F                     ttemp4	set	127
  5441  007E                     ltemp	set	126
  5442  007E                     ltemp0	set	126
  5443  0082                     ltemp1	set	130
  5444  0086                     ltemp2	set	134
  5445  0080                     ltemp3	set	128


Data Sizes:
    Strings     19
    Constant    7
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    WriteToRTC@Time	PTR unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[7]), main@Data(BANK0[6]), 

    Lcd_Text@buffer	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[2]), STR_2(CODE[5]), STR_1(CODE[5]), 

    UART_ReadFromGPS@Output	PTR unsigned char  size(1) Largest target is 6
		 -> main@Data(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_WriteToRTC
    _WriteToRTC->_I2C_WriteAtAddress
    _I2C_WriteAtAddress->_I2C_Master_Write
    _WriteLongInt->___lldiv
    _Lcd_WriteChar->___lldiv
    _UART_Init->___aldiv
    _ReadRTCAsSec->___lmul
    _I2C_ReadAtAddress->_I2C_Master_Read
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_Int->___lwdiv
    ___lwdiv->___wmul
    ___bmul->___lldiv
    _Lcd_CharCP->_Lcd_Delay5500us
    _Lcd_Init->_Lcd_Command
    _Lcd_Command->_Lcd_Delay5500us
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_ReadRTCAsSec
    _WriteLongInt->_Lcd_WriteChar
    _Lcd_WriteChar->___bmul
    _UART_Init->___aldiv
    _Lcd_Int->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   12987
                                             24 BANK0     14    14      0
                    _I2C_Master_Init
                  _I2C_ReadAtAddress
                        _Lcd_Command
                           _Lcd_Init
                            _Lcd_Int
                           _Lcd_Text
                      _Lcd_WriteChar
                       _ReadRTCAsSec
                          _UART_Init
                   _UART_ReadFromGPS
                       _WriteLongInt
                         _WriteToRTC
 ---------------------------------------------------------------------------------
 (1) _WriteToRTC                                           9     7      2    1218
                                              7 COMMON     7     5      2
                                              0 BANK0      1     1      0
                 _I2C_WriteAtAddress
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteAtAddress                                   5     3      2     724
                                              2 COMMON     5     3      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _WriteLongInt                                        10     4      6    1715
                                              9 BANK0     10     4      6
                      _Lcd_WriteChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        5     3      2     722
                                              4 BANK0      5     3      2
                         _Lcd_CharCP
                        _Lcd_Command
                             ___bmul (ARG)
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_ReadFromGPS                                     6     6      0     277
                                              0 COMMON     6     6      0
                          _UART_Read
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     721
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _ReadRTCAsSec                                        24    20      4    1916
                                              0 BANK0     24    20      4
                  _I2C_ReadAtAddress
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     198
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadAtAddress                                    5     4      1     845
                                              6 COMMON     5     4      1
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     340
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2      98
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             5     3      2     851
                                              4 COMMON     5     3      2
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Int                                              9     6      3    3354
                                              4 BANK0      9     6      3
                         _Lcd_CharCP
                        _Lcd_Command
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_CharCP                                           2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              4 COMMON     2     2      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5us                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5500us                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     555
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_ReadAtAddress
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Lcd_Command
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Int
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     ___awdiv
     ___bmul
       ___lldiv (ARG)
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
   _Lcd_WriteChar
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     ___bmul (ARG)
       ___lldiv (ARG)
     ___lldiv (ARG)
   _ReadRTCAsSec
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___lmul
     ___wmul
   _UART_Init
     ___aldiv
   _UART_ReadFromGPS
     _UART_Read
   _WriteLongInt
     _Lcd_WriteChar
       _Lcd_CharCP
         _Lcd_Delay5500us
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5500us
         _Lcd_Delay5us
       ___bmul (ARG)
         ___lldiv (ARG)
       ___lldiv (ARG)
     ___bmul
       ___lldiv (ARG)
     ___lldiv
   _WriteToRTC
     _I2C_WriteAtAddress
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Aug 09 19:28:11 2016

                   Lcd_Int@tempVal 002B                                  pc 0002  
                   ___bmul@product 0022                        __CFG_CP$OFF 0000  
                     ___awdiv@sign 0076                                 fsr 0004  
              ___wmul@multiplicand 0072                                l100 0C9A  
                              l153 00EA                                l154 0112  
                              l255 0CBF                                l428 0035  
                              l373 0CD2                                _RB0 0030  
                              _RB1 0031                                _RA3 002B  
                              _RB2 0032                                _RA4 002C  
                              _RB3 0033                                _RB4 0034  
                              _RB5 0035                                _PEN 048A  
                     __CFG_CPD$OFF 0000                                _SEN 0488  
                              fsr0 0004                                indf 0000  
                     __CFG_IESO$ON 0000                       __CFG_FOSC$HS 0000  
              __end_of_Lcd_Command 01FE                      ?_ReadRTCAsSec 0020  
                     __CFG_LVP$OFF 0000                               l2041 06FF  
                             l2035 06E2                               l2029 06D5  
                             l2063 07EC                               l1531 0D22  
                             l2059 07DF                               l1461 01E2  
                             l1517 0D0F                               l1613 0056  
                             l1605 0046                               l1525 0D19  
                             l1463 01EB                               l1447 01A0  
                             l1631 00A9                               l1623 008E  
                             l1615 0066                               l1527 0D1C  
                             l1535 0D28                               l1457 01C0  
                             l1473 0247                               l1721 0DD3  
                             l1713 0DAF                               l1529 0D1F  
                             l1537 0D36                               l1459 01D1  
                             l1483 0267                               l1643 0EF6  
                             l1715 0DBD                               l1555 0CCA  
                             l1627 009B                               l1485 0278  
                             l1661 0F17                               l1725 0DDE  
                             l1573 0E01                               l1901 0EDD  
                             l1487 0289                               l1671 0F38  
                             l1583 0014                               l1903 0EE2  
                             l1911 0EE7                               l1489 0292  
                             l1649 0F01                               l1569 0DEB  
                             l1825 0438                               l1675 0F40  
                             l1667 0F2D                               l1659 0F09  
                             l1587 001A                               l1685 0FB2  
                             l1861 0E2A                               l1695 0FEA  
                             l1687 0FC2                               l1951 02BC  
                             l1863 0E2D                               l1943 0F48  
                             l1953 02BF                               l1961 02CB  
                             l1857 0E24                               l1699 0FF7  
                             l1955 02C2                               l1963 02D9  
                             l1875 0E47                               l1859 0E27  
                             l1867 0E33                               l1973 033B  
                             l1957 02C5                               l1869 0E41  
                             l1969 0302                               l1897 0ECE  
                             STR_1 0823                               STR_2 081E  
                             STR_3 0828                               STR_4 0817  
                             _BRGH 04C2                               _CREN 00C4  
                             u2105 008F                               u1500 018C  
                             u2205 0F2E                               u1440 016A  
                             u2065 005A                               u1530 019D  
                             u1514 018F                               u2410 03B0  
                             u1435 015F                               u2315 0DB2  
                             u2411 03B1                               u1620 01DF  
                             u1700 0222                               u2412 03B6  
                             u2245 0FB6                               u1525 0192  
                             u2165 0F0C                               u2085 0068  
                             u2413 03B7                               u2405 0396  
                             u1470 017B                               u1454 016D  
                             u1615 01D4                               u2335 0DBE  
                             u2095 007D                               u1640 01E8  
                             u1560 01BD                               u2600 0659  
                             u2265 0FC4                               u1465 0170  
                             u2185 0F18                               u2345 0DCA  
                             u2601 065A                               u1730 0233  
                             u1714 0225                               u2602 065F  
                             u2450 0419                               u2275 0FD9  
                             u1555 01B2                               u2195 0F24  
                             u2355 0DD4                               u2603 0660  
                             u2451 041A                               u2435 03DE  
                             u1484 017E                               u1820 0275  
                             u2452 041F                               u2285 0FEB  
                             u1725 0228                               u2453 0420  
                             u2445 03FF                               u1590 01CE  
                             u1670 0211                               u1495 0181  
                             u1815 026A                               u1760 0244  
                             u1744 0236                               u1585 01C3  
                             u1665 0206                               u1850 0286  
                             u2475 0D83                               u1755 0239  
                             u2395 0375                               u1684 0214  
                             u2580 05FF                               u1845 027B  
                             u2581 0600                               u2565 0564  
                             u2725 073C                               u1870 028F  
                             u1790 0264                               u2582 0605  
                             u2807 0249                               u1695 0217  
                             u1935 0CD3                               u2583 0606  
                             u2575 05B8                               u2735 0775  
                             u2817 0294                               u1785 0259  
                             u1945 0CDA                               u2745 07AD  
                             u1890 0D0C              __size_of_WriteLongInt 005D  
                             u2827 01A2                               u2595 0629  
                             u2675 0466                               u2837 01ED  
                             u2685 04BB                               u2847 0CB8  
                             u2695 0513                               u2857 0CBC  
                             u1985 0E03                               u2867 000A  
                             u1995 0E0B                               _RCEN 048B  
                             _RCIF 0065                               u2797 07F4  
                             _SPEN 00C7                               _RSEN 0489  
                             _TRMT 04C1                               _TXEN 04C5  
                             _SYNC 04C4                  ??_Lcd_Delay5500us 0070  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 0675               __end_of_Lcd_Delay5us 0CBF  
                             btemp 007E                               ltemp 007E  
                             start 0000                               ttemp 007E  
                             wtemp 007E                   _ReadRTCAsSec$695 0031  
                  __end_of_Lcd_Int 036A                  ___bmul@multiplier 0023  
                    __CFG_MCLRE$ON 0000                         _Lcd_CharCP 01FE  
                 ?_I2C_Master_Init 0020                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                  __end_of___aldiv 00B2                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                  __end_of___awdiv 0F45                      __CFG_WDTE$OFF 0000  
                            _ANSEL 0188                    __end_of___lldiv 1000  
                  ___awdiv@divisor 0070                    __end_of___lwdiv 0DE3  
                  ___awdiv@counter 0075                              _RCREG 001A  
                            _SPBRG 0099                              _TRISA 0085  
                            _TRISB 0086                              _TXREG 0019  
                     _WriteLongInt 0F45                ___lmul@multiplicand 0074  
                   ??_ReadRTCAsSec 0024                 __size_of_UART_Init 00E8  
               __size_of_UART_Read 0006                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
         UART_ReadFromGPS@TempChar 0073                   __end_of_Lcd_Init 0157  
                 __end_of_Lcd_Text 0E62                  ?_UART_ReadFromGPS 0070  
                  __initialization 07FC               WriteToRTC@TempVar000 0020  
                     __end_of_main 07FC                 ??_UART_ReadFromGPS 0070  
                      _Lcd_Command 0157                    ReadRTCAsSec@Out 0033  
                           ??_main 0038                     main@TempVar000 0045  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0070                 ??_I2C_Master_Write 0072  
                 ___awdiv@dividend 0072                             _ANSELH 0189  
                _I2C_ReadAtAddress 0E62                          ??_Lcd_Int 0027  
                   Lcd_Text@buffer 0075                 ?_I2C_ReadAtAddress 0076  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _TRISC6 043E  
                           _TRISC7 043F                             _SSPCON 0014  
                           _SSPBUF 0013                   WriteLongInt@size 002E  
                   __CFG_PWRTE$OFF 0000                ??_I2C_ReadAtAddress 0077  
                __end_of_UART_Init 0452                  __end_of_UART_Read 0CA0  
                           ___bmul 0010                        ?_Lcd_CharCP 0070  
                           ___lmul 0DE3                          ??___aldiv 0078  
                           ___wmul 0CC8                          ??___awdiv 0074  
                        ??___lldiv 0078                          ??___lwdiv 007A  
                 ___awdiv@quotient 0077              __end_of_Lcd_WriteChar 0D43  
        __end_of_I2C_ReadAtAddress 0EA7              __size_of_Lcd_Delay5us 0009  
               Lcd_Command@command 0073            __end_of__initialization 07FC  
              ___bmul@multiplicand 0020                     WriteToRTC@Time 0077  
                   __pcstackCOMMON 0070               __end_of_ReadRTCAsSec 0675  
                       _WriteToRTC 0452                       _Lcd_Delay5us 0CB6  
                  _Lcd_Delay5500us 0006                     Lcd_WriteChar@c 0025  
                   Lcd_WriteChar@x 0024                     Lcd_WriteChar@y 0027  
                        ?_Lcd_Init 0070                          ?_Lcd_Text 0074  
              __size_of_Lcd_CharCP 00AC            I2C_ReadAtAddress@IntAdd 0076  
       __end_of_I2C_WriteAtAddress 0D71                         __pmaintext 0675  
                          ?___bmul 0020                            ?___lmul 0070  
                          ?___wmul 0070                     ___lmul@product 0079  
              UART_ReadFromGPS@Pos 0075                         ??_Lcd_Init 0074  
       __size_of_I2C_ReadAtAddress 0045                         ??_Lcd_Text 0076  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0800                            _Lcd_Int 02AA  
           ReadRTCAsSec@TempVar000 0037                            ___aldiv 0023  
                  __size_of___bmul 0013                        ?_WriteToRTC 0077  
                Lcd_WriteChar@data 0028                            ___awdiv 0EEC  
                  __size_of___lmul 003F                            ___lldiv 0FA2  
                  __size_of___wmul 0021                            ___lwdiv 0DA7  
          __end_of_Lcd_Delay5500us 0010                       ?_Lcd_Command 0070  
                          __ptext1 0452                            __ptext2 0D43  
                          __ptext3 0F45                            __ptext4 0D15  
                          __ptext5 0EA7                            __ptext6 0C9A  
                          __ptext7 036A                            __ptext8 0023  
                          __ptext9 0548          __size_of_UART_ReadFromGPS 0045  
                 ___aldiv@dividend 0074           __size_of_I2C_Master_Init 0036  
         __size_of_I2C_Master_Read 002C           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007               end_of_initialization 07FC  
            __size_of_ReadRTCAsSec 012D          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D           I2C_WriteAtAddress@IntAdd 0072  
                     ??_Lcd_CharCP 0072                   ___aldiv@quotient 0022  
                 I2C_Master_Init@c 0020                   I2C_Master_Read@a 0070  
                        Lcd_Text@x 0074                          Lcd_Text@y 0077  
                        _UART_Init 036A                          _UART_Read 0C9A  
                        _TRISBbits 0086                       _ReadRTCAsSec 0548  
                       main@Second 0041                __size_of_WriteToRTC 00F6  
               __end_of_Lcd_CharCP 02AA                     __end_of___bmul 0023  
                   __end_of___lmul 0E22                   ?_Lcd_Delay5500us 0070  
                   __end_of___wmul 0CE9                         ?_UART_Init 0026  
                       ?_UART_Read 0070                start_initialization 07FC  
__end_ofUART_ReadFromGPS@StartCode 0817                  __size_of_Lcd_Init 00A5  
                __size_of_Lcd_Text 0040                  ??_I2C_Master_Init 0024  
                ??_I2C_Master_Read 0072                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070                    WriteLongInt@Val 002A  
           __size_of_Lcd_WriteChar 002E                           ??___bmul 0021  
                         ??___lmul 0078                           ??___wmul 0074  
               _I2C_WriteAtAddress 0D43                      ?_WriteLongInt 0029  
             __size_of_Lcd_Command 00A7                ?_I2C_WriteAtAddress 0072  
                 _UART_ReadFromGPS 0EA7                          ___latbits 0002  
                    __pcstackBANK0 0020                      WriteLongInt@x 0029  
                    WriteLongInt@y 0032                           ?_Lcd_Int 0024  
           I2C_ReadAtAddress@DevID 007A                   _I2C_Master_Start 0CA0  
                 _I2C_Master_Write 0CAE               ??_I2C_WriteAtAddress 0074  
                 ___lwdiv@dividend 0078                       ??_WriteToRTC 0079  
                         ?___aldiv 0070                           ?___awdiv 0070  
                         ?___lldiv 0070                           ?___lwdiv 0076  
                      ??_UART_Init 002A                        ??_UART_Read 0070  
                        __pstrings 0800                     ??_WriteLongInt 002F  
                    _Lcd_WriteChar 0D15                   ___lwdiv@quotient 007B  
                       UART_Init@x 0079                 __end_of_WriteToRTC 0548  
                  ___aldiv@divisor 0070                    ___aldiv@counter 0020  
                   ___wmul@product 0074            I2C_WriteAtAddress@DevID 0076  
                         Lcd_Int@x 0024                           Lcd_Int@y 0029  
                UART_Init@baudrate 0026                       Lcd_Init@data 0075  
                      __stringbase 080F                     ?_Lcd_WriteChar 0024  
                ___wmul@multiplier 0070                           _Lcd_Init 00B2  
                         _Lcd_Text 0E22                I2C_Master_Read@temp 0074  
                ___lmul@multiplier 0070             UART_ReadFromGPS@Output 0072  
                 __size_of_Lcd_Int 00C0                       Lcd_Text@data 0078  
                 __size_of___aldiv 008F                   __size_of___awdiv 0059  
                 __size_of___lldiv 005E                   __size_of___lwdiv 003C  
               __end_of__stringtab 0810                      ?_Lcd_Delay5us 0070  
                  _I2C_Master_Init 0D71                    _I2C_Master_Read 0CE9  
                  _I2C_Master_Wait 0CBF                    _I2C_Master_Stop 0CA7  
            I2C_ReadAtAddress@data 0079                    ___lwdiv@divisor 0076  
                  ___lwdiv@counter 007D                           __ptext10 0DE3  
                         __ptext11 0E62                  UART_ReadFromGPS@i 0074  
                         __ptext20 0DA7                           __ptext12 0CAE  
                         __ptext21 0010                           __ptext13 0CA7  
                         __ptext22 0EEC                           __ptext14 0CA0  
                         __ptext23 01FE                           __ptext15 0CE9  
                         __ptext24 00B2                           __ptext16 0CBF  
                         __ptext25 0157                           __ptext17 0E22  
                         __ptext26 0CB6                           __ptext18 02AA  
                         __ptext27 0006                           __ptext19 0CC8  
                         __ptext28 0D71                           __ptext29 0FA2  
                __CFG_BOR4V$BOR21V 0000                        Lcd_CharCP@c 0073  
                    __size_of_main 0187               __end_of_WriteLongInt 0FA2  
         __end_of_UART_ReadFromGPS 0EEC          UART_ReadFromGPS@StartCode 0810  
           I2C_WriteAtAddress@data 0073                        Lcd_Int@data 002A  
                         main@Data 003B                        Lcd_Int@size 0026  
                  ??_Lcd_WriteChar 0026                     ??_Lcd_Delay5us 0070  
         __end_of_I2C_Master_Start 0CA7           __end_of_I2C_Master_Write 0CB6  
         __size_of_Lcd_Delay5500us 000A                   ___lldiv@dividend 0074  
                        stringcode 080A                         Lcd_Int@val 0025  
          __end_of_I2C_Master_Init 0DA7            __end_of_I2C_Master_Read 0D15  
          __end_of_I2C_Master_Wait 0CC8            __end_of_I2C_Master_Stop 0CAE  
                    ??_Lcd_Command 0072                   ___lldiv@quotient 0079  
                I2C_Master_Write@d 0070                           stringdir 080A  
                         stringtab 0800                       ___aldiv@sign 0021  
      __size_of_I2C_WriteAtAddress 002E  
