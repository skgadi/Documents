

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Sep 15 13:41:58 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0009                     	;# 
    49  000A                     	;# 
    50  000B                     	;# 
    51  000C                     	;# 
    52  000D                     	;# 
    53  000E                     	;# 
    54  000E                     	;# 
    55  000F                     	;# 
    56  0010                     	;# 
    57  0011                     	;# 
    58  0012                     	;# 
    59  0013                     	;# 
    60  0014                     	;# 
    61  0015                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001B                     	;# 
    70  001C                     	;# 
    71  001D                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  0087                     	;# 
    78  0089                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  008F                     	;# 
    83  0090                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0093                     	;# 
    88  0093                     	;# 
    89  0094                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  0105                     	;# 
   102  0107                     	;# 
   103  0108                     	;# 
   104  0109                     	;# 
   105  010C                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  0185                     	;# 
   111  0187                     	;# 
   112  0188                     	;# 
   113  0189                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  008F                     	;# 
   159  0090                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0097                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009A                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  0105                     	;# 
   178  0107                     	;# 
   179  0108                     	;# 
   180  0109                     	;# 
   181  010C                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  0185                     	;# 
   187  0187                     	;# 
   188  0188                     	;# 
   189  0189                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  000E                     	;# 
   207  000F                     	;# 
   208  0010                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001D                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  0087                     	;# 
   230  0089                     	;# 
   231  008C                     	;# 
   232  008D                     	;# 
   233  008E                     	;# 
   234  008F                     	;# 
   235  0090                     	;# 
   236  0091                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  009F                     	;# 
   253  0105                     	;# 
   254  0107                     	;# 
   255  0108                     	;# 
   256  0109                     	;# 
   257  010C                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  0185                     	;# 
   263  0187                     	;# 
   264  0188                     	;# 
   265  0189                     	;# 
   266  018C                     	;# 
   267  018D                     	;# 
   268  0000                     	;# 
   269  0001                     	;# 
   270  0002                     	;# 
   271  0003                     	;# 
   272  0004                     	;# 
   273  0005                     	;# 
   274  0006                     	;# 
   275  0007                     	;# 
   276  0009                     	;# 
   277  000A                     	;# 
   278  000B                     	;# 
   279  000C                     	;# 
   280  000D                     	;# 
   281  000E                     	;# 
   282  000E                     	;# 
   283  000F                     	;# 
   284  0010                     	;# 
   285  0011                     	;# 
   286  0012                     	;# 
   287  0013                     	;# 
   288  0014                     	;# 
   289  0015                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0017                     	;# 
   293  0018                     	;# 
   294  0019                     	;# 
   295  001A                     	;# 
   296  001B                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001D                     	;# 
   300  001E                     	;# 
   301  001F                     	;# 
   302  0081                     	;# 
   303  0085                     	;# 
   304  0086                     	;# 
   305  0087                     	;# 
   306  0089                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  008F                     	;# 
   311  0090                     	;# 
   312  0091                     	;# 
   313  0092                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0093                     	;# 
   317  0094                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009C                     	;# 
   326  009D                     	;# 
   327  009E                     	;# 
   328  009F                     	;# 
   329  0105                     	;# 
   330  0107                     	;# 
   331  0108                     	;# 
   332  0109                     	;# 
   333  010C                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  0185                     	;# 
   339  0187                     	;# 
   340  0188                     	;# 
   341  0189                     	;# 
   342  018C                     	;# 
   343  018D                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000D                     	;# 
   357  000E                     	;# 
   358  000E                     	;# 
   359  000F                     	;# 
   360  0010                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0014                     	;# 
   365  0015                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  001D                     	;# 
   376  001E                     	;# 
   377  001F                     	;# 
   378  0081                     	;# 
   379  0085                     	;# 
   380  0086                     	;# 
   381  0087                     	;# 
   382  0089                     	;# 
   383  008C                     	;# 
   384  008D                     	;# 
   385  008E                     	;# 
   386  008F                     	;# 
   387  0090                     	;# 
   388  0091                     	;# 
   389  0092                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0093                     	;# 
   393  0094                     	;# 
   394  0095                     	;# 
   395  0096                     	;# 
   396  0097                     	;# 
   397  0098                     	;# 
   398  0099                     	;# 
   399  009A                     	;# 
   400  009B                     	;# 
   401  009C                     	;# 
   402  009D                     	;# 
   403  009E                     	;# 
   404  009F                     	;# 
   405  0105                     	;# 
   406  0107                     	;# 
   407  0108                     	;# 
   408  0109                     	;# 
   409  010C                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010E                     	;# 
   413  010F                     	;# 
   414  0185                     	;# 
   415  0187                     	;# 
   416  0188                     	;# 
   417  0189                     	;# 
   418  018C                     	;# 
   419  018D                     	;# 
   420                           
   421                           	psect	strings
   422  0800                     __pstrings:	
   423  0800                     stringtab:	
   424  0800                     __stringtab:	
   425  0800                     stringcode:	
   426                           ;	String table - string pointers are 1 byte each
   427                           
   428  0800                     stringdir:	
   429  0800  3008               	movlw	high stringdir
   430  0801  008A               	movwf	10
   431  0802  0804               	movf	4,w
   432  0803  0A84               	incf	4,f
   433  0804  0782               	addwf	2,f
   434  0805                     __stringbase:	
   435  0805  3400               	retlw	0
   436  0806                     __end_of__stringtab:	
   437  0806                     UART_ReadFromGPS@StartCode:	
   438  0806  3424               	retlw	36
   439  0807  3447               	retlw	71
   440  0808  3450               	retlw	80
   441  0809  3452               	retlw	82
   442  080A  344D               	retlw	77
   443  080B  3443               	retlw	67
   444  080C  342C               	retlw	44
   445  080D                     __end_ofUART_ReadFromGPS@StartCode:	
   446  080D                     UART_ReadFromGPS_TO@StartCode:	
   447  080D  3424               	retlw	36
   448  080E  3447               	retlw	71
   449  080F  3450               	retlw	80
   450  0810  3452               	retlw	82
   451  0811  344D               	retlw	77
   452  0812  3443               	retlw	67
   453  0813  342C               	retlw	44
   454  0814                     __end_ofUART_ReadFromGPS_TO@StartCode:	
   455  001A                     _RCREG	set	26
   456  0013                     _SSPBUF	set	19
   457  0014                     _SSPCON	set	20
   458  000F                     _TMR1H	set	15
   459  000E                     _TMR1L	set	14
   460  0019                     _TXREG	set	25
   461  00C4                     _CREN	set	196
   462  0028                     _RA0	set	40
   463  0029                     _RA1	set	41
   464  002A                     _RA2	set	42
   465  002B                     _RA3	set	43
   466  002C                     _RA4	set	44
   467  002D                     _RA5	set	45
   468  0039                     _RC1	set	57
   469  003A                     _RC2	set	58
   470  0065                     _RCIF	set	101
   471  00C7                     _SPEN	set	199
   472  0081                     _TMR1CS	set	129
   473  0060                     _TMR1IF	set	96
   474  0080                     _TMR1ON	set	128
   475  0099                     _SPBRG	set	153
   476  009A                     _SPBRGH	set	154
   477  0093                     _SSPADD	set	147
   478  0091                     _SSPCON2	set	145
   479  0094                     _SSPSTAT	set	148
   480  0085                     _TRISA	set	133
   481  0085                     _TRISAbits	set	133
   482  0086                     _TRISB	set	134
   483  0087                     _TRISCbits	set	135
   484  048D                     _ACKDT	set	1165
   485  048C                     _ACKEN	set	1164
   486  04C2                     _BRGH	set	1218
   487  048A                     _PEN	set	1162
   488  048B                     _RCEN	set	1163
   489  0489                     _RSEN	set	1161
   490  0488                     _SEN	set	1160
   491  04C4                     _SYNC	set	1220
   492  043B                     _TRISC3	set	1083
   493  043C                     _TRISC4	set	1084
   494  04C1                     _TRMT	set	1217
   495  04C5                     _TXEN	set	1221
   496  0188                     _ANSEL	set	392
   497  0189                     _ANSELH	set	393
   498  0C3B                     _BRG16	set	3131
   499  0814                     STR_2:	
   500  0814  3450               	retlw	80	;'P'
   501  0815  3449               	retlw	73	;'I'
   502  0816  3443               	retlw	67	;'C'
   503  0817  343A               	retlw	58	;':'
   504  0818  3400               	retlw	0
   505  0819                     STR_1:	
   506  0819  3447               	retlw	71	;'G'
   507  081A  3450               	retlw	80	;'P'
   508  081B  3453               	retlw	83	;'S'
   509  081C  343A               	retlw	58	;':'
   510  081D  3400               	retlw	0
   511  0817                     
   512                           ; #config settings
   513  0000                     
   514                           	psect	cinit
   515  07F8                     start_initialization:	
   516  07F8                     __initialization:	
   517                           
   518                           ; Clear objects allocated to BANK1
   519  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   520  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   521  07FA  01CE               	clrf	__pbssBANK1& (0+127)
   522  07FB  01CF               	clrf	(__pbssBANK1+1)& (0+127)
   523  07FC                     end_of_initialization:	
   524                           ;End of C runtime variable initialization code
   525                           
   526  07FC                     __end_of__initialization:	
   527  07FC  0183               	clrf	3
   528  07FD  120A  118A  2DA3   	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	bssBANK1
   531  00CE                     __pbssBANK1:	
   532  00CE                     _errno:	
   533  00CE                     	ds	2
   534                           
   535                           	psect	cstackBANK1
   536  00A0                     __pcstackBANK1:	
   537  00A0                     ?_UART_Init:	
   538  00A0                     UART_Init@baudrate:	
   539                           ; 1 bytes @ 0x0
   540                           
   541                           
   542                           ; 4 bytes @ 0x0
   543  00A0                     	ds	4
   544  00A4                     _UART_Init$845:	
   545                           
   546                           ; 3 bytes @ 0x4
   547  00A4                     	ds	3
   548  00A7                     _UART_Init$846:	
   549                           
   550                           ; 3 bytes @ 0x7
   551  00A7                     	ds	3
   552  00AA                     UART_Init@x:	
   553                           
   554                           ; 2 bytes @ 0xA
   555  00AA                     	ds	2
   556  00AC                     ??_main:	
   557                           
   558                           ; 1 bytes @ 0xC
   559  00AC                     	ds	8
   560  00B4                     main@PSec:	
   561                           
   562                           ; 4 bytes @ 0x14
   563  00B4                     	ds	4
   564  00B8                     main@Synced:	
   565                           
   566                           ; 1 bytes @ 0x18
   567  00B8                     	ds	1
   568  00B9                     main@Itr:	
   569                           
   570                           ; 1 bytes @ 0x19
   571  00B9                     	ds	1
   572  00BA                     main@GPSDate:	
   573                           
   574                           ; 6 bytes @ 0x1A
   575  00BA                     	ds	6
   576  00C0                     main@CounterSec:	
   577                           
   578                           ; 4 bytes @ 0x20
   579  00C0                     	ds	4
   580  00C4                     main@InitSec:	
   581                           
   582                           ; 4 bytes @ 0x24
   583  00C4                     	ds	4
   584  00C8                     main@ValidGPS:	
   585                           
   586                           ; 1 bytes @ 0x28
   587  00C8                     	ds	1
   588  00C9                     main@PICSec:	
   589                           
   590                           ; 4 bytes @ 0x29
   591  00C9                     	ds	4
   592  00CD                     main@TempVar000:	
   593                           
   594                           ; 1 bytes @ 0x2D
   595  00CD                     	ds	1
   596                           
   597                           	psect	cstackCOMMON
   598  0070                     __pcstackCOMMON:	
   599  0070                     ?_Lcd_Init:	
   600  0070                     ?_Lcd_Command:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_UART_Read_TO:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ??_UART_Read_TO:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_IsValidGPS:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_IsValidGPS:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_Lcd_Delay5500us:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_Lcd_Delay5500us:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Lcd_Delay5us:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_Lcd_Delay5us:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_Lcd_CharCP:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_main:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?___wmul:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?___ftpack:	
   637                           ; 2 bytes @ 0x0
   638                           
   639  0070                     ?_frexp:	
   640                           ; 3 bytes @ 0x0
   641                           
   642  0070                     ?___lmul:	
   643                           ; 3 bytes @ 0x0
   644                           
   645  0070                     ?___aldiv:	
   646                           ; 4 bytes @ 0x0
   647                           
   648  0070                     UART_Read_TO@TimeOut:	
   649                           ; 4 bytes @ 0x0
   650                           
   651  0070                     IsValidGPS@Result:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ___wmul@multiplier:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ___ftpack@arg:	
   658                           ; 2 bytes @ 0x0
   659                           
   660  0070                     frexp@value:	
   661                           ; 3 bytes @ 0x0
   662                           
   663  0070                     ___lmul@multiplier:	
   664                           ; 3 bytes @ 0x0
   665                           
   666  0070                     ___aldiv@divisor:	
   667                           ; 4 bytes @ 0x0
   668                           
   669                           
   670                           ; 4 bytes @ 0x0
   671  0070                     	ds	1
   672  0071                     ?_UART_ReadFromGPS_TO:	
   673  0071                     UART_ReadFromGPS_TO@TimeOut:	
   674                           ; 1 bytes @ 0x1
   675                           
   676  0071                     IsValidGPS@GPSData:	
   677                           ; 1 bytes @ 0x1
   678                           
   679                           
   680                           ; 1 bytes @ 0x1
   681  0071                     	ds	1
   682  0072                     ??_Lcd_Command:	
   683  0072                     ??_Lcd_CharCP:	
   684                           ; 1 bytes @ 0x2
   685                           
   686  0072                     ??_UART_ReadFromGPS_TO:	
   687                           ; 1 bytes @ 0x2
   688                           
   689  0072                     ___wmul@multiplicand:	
   690                           ; 1 bytes @ 0x2
   691                           
   692                           
   693                           ; 2 bytes @ 0x2
   694  0072                     	ds	1
   695  0073                     Lcd_CharCP@c:	
   696  0073                     Lcd_Command@command:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     ___ftpack@exp:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     frexp@eptr:	
   703                           ; 1 bytes @ 0x3
   704                           
   705                           
   706                           ; 1 bytes @ 0x3
   707  0073                     	ds	1
   708  0074                     ??_Lcd_Init:	
   709  0074                     ?_Lcd_Text:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0074                     ??_frexp:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     ??___wmul:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     Lcd_Text@x:	
   719                           ; 1 bytes @ 0x4
   720                           
   721  0074                     ___ftpack@sign:	
   722                           ; 1 bytes @ 0x4
   723                           
   724  0074                     UART_ReadFromGPS_TO@i:	
   725                           ; 1 bytes @ 0x4
   726                           
   727  0074                     ___wmul@product:	
   728                           ; 2 bytes @ 0x4
   729                           
   730  0074                     ___lmul@multiplicand:	
   731                           ; 2 bytes @ 0x4
   732                           
   733  0074                     ___aldiv@dividend:	
   734                           ; 4 bytes @ 0x4
   735                           
   736                           
   737                           ; 4 bytes @ 0x4
   738  0074                     	ds	1
   739  0075                     ??___ftpack:	
   740  0075                     Lcd_Init@data:	
   741                           ; 1 bytes @ 0x5
   742                           
   743  0075                     Lcd_Text@buffer:	
   744                           ; 1 bytes @ 0x5
   745                           
   746                           
   747                           ; 1 bytes @ 0x5
   748  0075                     	ds	1
   749  0076                     ??_Lcd_Text:	
   750  0076                     UART_ReadFromGPS_TO@Output:	
   751                           ; 1 bytes @ 0x6
   752                           
   753                           
   754                           ; 1 bytes @ 0x6
   755  0076                     	ds	1
   756  0077                     UART_ReadFromGPS_TO@TempChar:	
   757  0077                     Lcd_Text@y:	
   758                           ; 1 bytes @ 0x7
   759                           
   760                           
   761                           ; 1 bytes @ 0x7
   762  0077                     	ds	1
   763  0078                     ??___lmul:	
   764  0078                     ??___aldiv:	
   765                           ; 1 bytes @ 0x8
   766                           
   767  0078                     ?___altoft:	
   768                           ; 1 bytes @ 0x8
   769                           
   770  0078                     UART_ReadFromGPS_TO@Pos:	
   771                           ; 3 bytes @ 0x8
   772                           
   773  0078                     Lcd_Text@data:	
   774                           ; 1 bytes @ 0x8
   775                           
   776  0078                     ___altoft@c:	
   777                           ; 1 bytes @ 0x8
   778                           
   779                           
   780                           ; 4 bytes @ 0x8
   781  0078                     	ds	1
   782  0079                     ?_UART_ReadValidTimeFromGPS_TO:	
   783  0079                     ??___bmul:	
   784                           ; 1 bytes @ 0x9
   785                           
   786  0079                     UART_ReadValidTimeFromGPS_TO@TimeOut:	
   787                           ; 1 bytes @ 0x9
   788                           
   789  0079                     ___lmul@product:	
   790                           ; 1 bytes @ 0x9
   791                           
   792                           
   793                           ; 4 bytes @ 0x9
   794  0079                     	ds	1
   795  007A                     ??_UART_ReadValidTimeFromGPS_TO:	
   796  007A                     ___bmul@product:	
   797                           ; 1 bytes @ 0xA
   798                           
   799                           
   800                           ; 1 bytes @ 0xA
   801  007A                     	ds	1
   802  007B                     UART_ReadValidTimeFromGPS_TO@Output:	
   803  007B                     ___bmul@multiplier:	
   804                           ; 1 bytes @ 0xB
   805                           
   806                           
   807                           ; 1 bytes @ 0xB
   808  007B                     	ds	1
   809  007C                     ??_Lcd_WriteChar:	
   810  007C                     ??___altoft:	
   811                           ; 1 bytes @ 0xC
   812                           
   813                           
   814                           ; 1 bytes @ 0xC
   815  007C                     	ds	2
   816  007E                     ??_UART_Init:	
   817  007E                     ??_round:	
   818                           ; 1 bytes @ 0xE
   819                           
   820  007E                     ??___ftneg:	
   821                           ; 1 bytes @ 0xE
   822                           
   823                           
   824                           	psect	cstackBANK0
   825  0020                     __pcstackBANK0:	
   826                           ; 1 bytes @ 0xE
   827                           
   828  0020                     ?_GPS2Sec:	
   829  0020                     ___aldiv@counter:	
   830                           ; 4 bytes @ 0x0
   831                           
   832  0020                     ___altoft@exp:	
   833                           ; 1 bytes @ 0x0
   834                           
   835                           
   836                           ; 1 bytes @ 0x0
   837  0020                     	ds	1
   838  0021                     ___aldiv@sign:	
   839  0021                     ___altoft@sign:	
   840                           ; 1 bytes @ 0x1
   841                           
   842                           
   843                           ; 1 bytes @ 0x1
   844  0021                     	ds	1
   845  0022                     ?___ftmul:	
   846  0022                     ___ftmul@f1:	
   847                           ; 3 bytes @ 0x2
   848                           
   849  0022                     ___aldiv@quotient:	
   850                           ; 3 bytes @ 0x2
   851                           
   852                           
   853                           ; 4 bytes @ 0x2
   854  0022                     	ds	2
   855  0024                     ??_GPS2Sec:	
   856                           
   857                           ; 1 bytes @ 0x4
   858  0024                     	ds	1
   859  0025                     ___ftmul@f2:	
   860                           
   861                           ; 3 bytes @ 0x5
   862  0025                     	ds	1
   863  0026                     ?___bmul:	
   864  0026                     ___bmul@multiplicand:	
   865                           ; 1 bytes @ 0x6
   866                           
   867                           
   868                           ; 1 bytes @ 0x6
   869  0026                     	ds	1
   870  0027                     ?_Lcd_WriteChar:	
   871  0027                     Lcd_WriteChar@x:	
   872                           ; 1 bytes @ 0x7
   873                           
   874                           
   875                           ; 1 bytes @ 0x7
   876  0027                     	ds	1
   877  0028                     ??___ftmul:	
   878  0028                     Lcd_WriteChar@c:	
   879                           ; 1 bytes @ 0x8
   880                           
   881                           
   882                           ; 1 bytes @ 0x8
   883  0028                     	ds	1
   884  0029                     Lcd_WriteChar@y:	
   885                           
   886                           ; 1 bytes @ 0x9
   887  0029                     	ds	1
   888  002A                     Lcd_WriteChar@data:	
   889                           
   890                           ; 1 bytes @ 0xA
   891  002A                     	ds	2
   892  002C                     GPS2Sec@GPSTime:	
   893  002C                     ___ftmul@exp:	
   894                           ; 1 bytes @ 0xC
   895                           
   896                           
   897                           ; 1 bytes @ 0xC
   898  002C                     	ds	1
   899  002D                     ___ftmul@f3_as_product:	
   900  002D                     GPS2Sec@TimeInSec:	
   901                           ; 3 bytes @ 0xD
   902                           
   903                           
   904                           ; 4 bytes @ 0xD
   905  002D                     	ds	3
   906  0030                     ___ftmul@cntr:	
   907                           
   908                           ; 1 bytes @ 0x10
   909  0030                     	ds	1
   910  0031                     ?_WriteLongInt:	
   911  0031                     WriteLongInt@x:	
   912                           ; 1 bytes @ 0x11
   913                           
   914  0031                     ___ftmul@sign:	
   915                           ; 1 bytes @ 0x11
   916                           
   917                           
   918                           ; 1 bytes @ 0x11
   919  0031                     	ds	1
   920  0032                     ?___ftdiv:	
   921  0032                     ___ftdiv@f2:	
   922                           ; 3 bytes @ 0x12
   923                           
   924  0032                     WriteLongInt@Val:	
   925                           ; 3 bytes @ 0x12
   926                           
   927                           
   928                           ; 4 bytes @ 0x12
   929  0032                     	ds	3
   930  0035                     ___ftdiv@f1:	
   931                           
   932                           ; 3 bytes @ 0x15
   933  0035                     	ds	1
   934  0036                     WriteLongInt@size:	
   935                           
   936                           ; 1 bytes @ 0x16
   937  0036                     	ds	1
   938  0037                     WriteLongInt@Sign:	
   939                           
   940                           ; 1 bytes @ 0x17
   941  0037                     	ds	1
   942  0038                     ??_WriteLongInt:	
   943  0038                     ??___ftdiv:	
   944                           ; 1 bytes @ 0x18
   945                           
   946                           
   947                           ; 1 bytes @ 0x18
   948  0038                     	ds	4
   949  003C                     WriteLongInt@POS:	
   950  003C                     ___ftdiv@cntr:	
   951                           ; 1 bytes @ 0x1C
   952                           
   953                           
   954                           ; 1 bytes @ 0x1C
   955  003C                     	ds	1
   956  003D                     WriteLongInt@y:	
   957  003D                     ___ftdiv@f3:	
   958                           ; 1 bytes @ 0x1D
   959                           
   960                           
   961                           ; 3 bytes @ 0x1D
   962  003D                     	ds	3
   963  0040                     ___ftdiv@exp:	
   964                           
   965                           ; 1 bytes @ 0x20
   966  0040                     	ds	1
   967  0041                     ___ftdiv@sign:	
   968                           
   969                           ; 1 bytes @ 0x21
   970  0041                     	ds	1
   971  0042                     ?___ftadd:	
   972  0042                     ___ftadd@f1:	
   973                           ; 3 bytes @ 0x22
   974                           
   975                           
   976                           ; 3 bytes @ 0x22
   977  0042                     	ds	3
   978  0045                     ___ftadd@f2:	
   979                           
   980                           ; 3 bytes @ 0x25
   981  0045                     	ds	3
   982  0048                     ??___ftadd:	
   983                           
   984                           ; 1 bytes @ 0x28
   985  0048                     	ds	4
   986  004C                     ___ftadd@sign:	
   987                           
   988                           ; 1 bytes @ 0x2C
   989  004C                     	ds	1
   990  004D                     ___ftadd@exp2:	
   991                           
   992                           ; 1 bytes @ 0x2D
   993  004D                     	ds	1
   994  004E                     ___ftadd@exp1:	
   995                           
   996                           ; 1 bytes @ 0x2E
   997  004E                     	ds	1
   998  004F                     ?___fttol:	
   999  004F                     ___fttol@f1:	
  1000                           ; 4 bytes @ 0x2F
  1001                           
  1002                           
  1003                           ; 3 bytes @ 0x2F
  1004  004F                     	ds	4
  1005  0053                     ??___fttol:	
  1006                           
  1007                           ; 1 bytes @ 0x33
  1008  0053                     	ds	4
  1009  0057                     ___fttol@sign1:	
  1010                           
  1011                           ; 1 bytes @ 0x37
  1012  0057                     	ds	1
  1013  0058                     ___fttol@lval:	
  1014                           
  1015                           ; 4 bytes @ 0x38
  1016  0058                     	ds	4
  1017  005C                     ___fttol@exp1:	
  1018                           
  1019                           ; 1 bytes @ 0x3C
  1020  005C                     	ds	1
  1021  005D                     ?_trunc:	
  1022  005D                     trunc@x:	
  1023                           ; 3 bytes @ 0x3D
  1024                           
  1025                           
  1026                           ; 3 bytes @ 0x3D
  1027  005D                     	ds	3
  1028  0060                     ??_trunc:	
  1029                           
  1030                           ; 1 bytes @ 0x40
  1031  0060                     	ds	1
  1032  0061                     trunc@i:	
  1033                           
  1034                           ; 3 bytes @ 0x41
  1035  0061                     	ds	3
  1036  0064                     trunc@expon:	
  1037                           
  1038                           ; 2 bytes @ 0x44
  1039  0064                     	ds	2
  1040  0066                     ?___ftneg:	
  1041  0066                     ___ftneg@f1:	
  1042                           ; 3 bytes @ 0x46
  1043                           
  1044                           
  1045                           ; 3 bytes @ 0x46
  1046  0066                     	ds	3
  1047  0069                     ?_round:	
  1048  0069                     round@x:	
  1049                           ; 3 bytes @ 0x49
  1050                           
  1051                           
  1052                           ; 3 bytes @ 0x49
  1053  0069                     	ds	3
  1054  006C                     round@f:	
  1055                           
  1056                           ; 3 bytes @ 0x4C
  1057  006C                     	ds	3
  1058                           
  1059                           	psect	maintext
  1060  05A3                     __pmaintext:	
  1061 ;;
  1062 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1063 ;;
  1064 ;; *************** function _main *****************
  1065 ;; Defined at:
  1066 ;;		line 10 in file "main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  GPSDate         6   26[BANK1 ] unsigned char [6]
  1071 ;;  PICSec          4   41[BANK1 ] long 
  1072 ;;  InitSec         4   36[BANK1 ] long 
  1073 ;;  CounterSec      4   32[BANK1 ] long 
  1074 ;;  PSec            4   20[BANK1 ] long 
  1075 ;;  TempInt         4    0        long 
  1076 ;;  TempVar000      1   45[BANK1 ] unsigned char 
  1077 ;;  ValidGPS        1   40[BANK1 ] unsigned char 
  1078 ;;  Itr             1   25[BANK1 ] unsigned char 
  1079 ;;  Synced          1   24[BANK1 ] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : B00/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0      26       0       0
  1091 ;;      Temps:          0       0       8       0       0
  1092 ;;      Totals:         0       0      34       0       0
  1093 ;;Total ram usage:       34 bytes
  1094 ;; Hardware stack levels required when called:    5
  1095 ;; This function calls:
  1096 ;;		_GPS2Sec
  1097 ;;		_Lcd_Command
  1098 ;;		_Lcd_Init
  1099 ;;		_Lcd_Text
  1100 ;;		_Lcd_WriteChar
  1101 ;;		_UART_Init
  1102 ;;		_UART_ReadValidTimeFromGPS_TO
  1103 ;;		_WriteLongInt
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _main
  1111  05A3                     _main:	
  1112                           
  1113                           ;main.c: 11: ANSEL=0x00;
  1114                           
  1115                           ;incstack = 0
  1116                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1117  05A3  1683               	bsf	3,5	;RP0=1, select bank3
  1118  05A4  1703               	bsf	3,6	;RP1=1, select bank3
  1119  05A5  0188               	clrf	8	;volatile
  1120                           
  1121                           ;main.c: 12: ANSELH=0x00;
  1122  05A6  0189               	clrf	9	;volatile
  1123                           
  1124                           ;main.c: 13: TRISA = 0X00;
  1125  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  1126  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  1127  05A9  0185               	clrf	5	;volatile
  1128                           
  1129                           ;main.c: 14: TRISB = 0X00;
  1130  05AA  0186               	clrf	6	;volatile
  1131                           
  1132                           ;main.c: 15: Lcd_Init();
  1133  05AB  120A  158A  26B4  120A  118A  	fcall	_Lcd_Init
  1134                           
  1135                           ;main.c: 16: UART_Init(9600);
  1136  05B0  3000               	movlw	0
  1137  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  1138  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  1139  05B3  00A3               	movwf	(UART_Init@baudrate+3)^(0+128)
  1140  05B4  3000               	movlw	0
  1141  05B5  00A2               	movwf	(UART_Init@baudrate+2)^(0+128)
  1142  05B6  3025               	movlw	37
  1143  05B7  00A1               	movwf	(UART_Init@baudrate+1)^(0+128)
  1144  05B8  3080               	movlw	128
  1145  05B9  00A0               	movwf	UART_Init@baudrate^(0+128)
  1146  05BA  120A  118A  20F9  120A  118A  	fcall	_UART_Init
  1147                           
  1148                           ;main.c: 18: Lcd_Command(1);
  1149  05BF  3001               	movlw	1
  1150  05C0  120A  158A  2759  120A  118A  	fcall	_Lcd_Command
  1151                           
  1152                           ;main.c: 19: Lcd_Text(1,1,"GPS:");
  1153  05C5  01F4               	clrf	Lcd_Text@x
  1154  05C6  0AF4               	incf	Lcd_Text@x,f
  1155  05C7  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1156  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  1157  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  1158  05CA  00AC               	movwf	??_main^(0+128)
  1159  05CB  082C               	movf	??_main^(0+128),w
  1160  05CC  00F5               	movwf	Lcd_Text@buffer
  1161  05CD  3001               	movlw	1
  1162  05CE  120A  158A  2302  120A  118A  	fcall	_Lcd_Text
  1163                           
  1164                           ;main.c: 20: Lcd_Text(2,1,"PIC:");
  1165  05D3  01F4               	clrf	Lcd_Text@x
  1166  05D4  0AF4               	incf	Lcd_Text@x,f
  1167  05D5  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1168  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  1169  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  1170  05D8  00AC               	movwf	??_main^(0+128)
  1171  05D9  082C               	movf	??_main^(0+128),w
  1172  05DA  00F5               	movwf	Lcd_Text@buffer
  1173  05DB  3002               	movlw	2
  1174  05DC  120A  158A  2302  120A  118A  	fcall	_Lcd_Text
  1175                           
  1176                           ;main.c: 21: Lcd_Text(2,11,":");
  1177  05E1  300B               	movlw	11
  1178  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  1179  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  1180  05E4  00AC               	movwf	??_main^(0+128)
  1181  05E5  082C               	movf	??_main^(0+128),w
  1182  05E6  00F4               	movwf	Lcd_Text@x
  1183  05E7  3012               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  1184  05E8  00AD               	movwf	(??_main+1)^(0+128)
  1185  05E9  082D               	movf	(??_main+1)^(0+128),w
  1186  05EA  00F5               	movwf	Lcd_Text@buffer
  1187  05EB  3002               	movlw	2
  1188  05EC  120A  158A  2302  120A  118A  	fcall	_Lcd_Text
  1189                           
  1190                           ;main.c: 22: Lcd_Text(1,11,":");
  1191  05F1  300B               	movlw	11
  1192  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  1193  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  1194  05F4  00AC               	movwf	??_main^(0+128)
  1195  05F5  082C               	movf	??_main^(0+128),w
  1196  05F6  00F4               	movwf	Lcd_Text@x
  1197  05F7  3012               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  1198  05F8  00AD               	movwf	(??_main+1)^(0+128)
  1199  05F9  082D               	movf	(??_main+1)^(0+128),w
  1200  05FA  00F5               	movwf	Lcd_Text@buffer
  1201  05FB  3001               	movlw	1
  1202  05FC  120A  158A  2302  120A  118A  	fcall	_Lcd_Text
  1203                           
  1204                           ;main.c: 23: unsigned char GPSDate[6];
  1205                           ;main.c: 24: int32_t PICSec, InitSec, CounterSec;
  1206                           ;main.c: 25: int32_t PSec=1920;
  1207  0601  3000               	movlw	0
  1208  0602  1683               	bsf	3,5	;RP0=1, select bank1
  1209  0603  1303               	bcf	3,6	;RP1=0, select bank1
  1210  0604  00B7               	movwf	(main@PSec+3)^(0+128)
  1211  0605  3000               	movlw	0
  1212  0606  00B6               	movwf	(main@PSec+2)^(0+128)
  1213  0607  3007               	movlw	7
  1214  0608  00B5               	movwf	(main@PSec+1)^(0+128)
  1215  0609  3080               	movlw	128
  1216  060A  00B4               	movwf	main@PSec^(0+128)
  1217                           
  1218                           ;main.c: 27: char TempVar000;
  1219                           ;main.c: 28: TRISCbits.TRISC2 = 0;
  1220  060B  1107               	bcf	7,2	;volatile
  1221                           
  1222                           ;main.c: 29: RC2=1;
  1223  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1224  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1225  060E  1507               	bsf	7,2	;volatile
  1226                           
  1227                           ;main.c: 30: bool Synced=0;
  1228  060F  1683               	bsf	3,5	;RP0=1, select bank1
  1229  0610  1303               	bcf	3,6	;RP1=0, select bank1
  1230  0611  01B8               	clrf	main@Synced^(0+128)
  1231                           
  1232                           ;main.c: 34: TRISCbits.TRISC1= 0;
  1233  0612  1087               	bcf	7,1	;volatile
  1234                           
  1235                           ;main.c: 35: RC1=1;
  1236  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0615  1487               	bsf	7,1	;volatile
  1239                           
  1240                           ;main.c: 37: int32_t TempInt;
  1241                           ;main.c: 38: char Itr=0x00;
  1242  0616  1683               	bsf	3,5	;RP0=1, select bank1
  1243  0617  1303               	bcf	3,6	;RP1=0, select bank1
  1244  0618  01B9               	clrf	main@Itr^(0+128)
  1245                           
  1246                           ;main.c: 39: bool ValidGPS;
  1247                           ;main.c: 42: ValidGPS = UART_ReadValidTimeFromGPS_TO(GPSDate,100);
  1248  0619  3064               	movlw	100
  1249  061A  00AC               	movwf	??_main^(0+128)
  1250  061B  082C               	movf	??_main^(0+128),w
  1251  061C  00F9               	movwf	UART_ReadValidTimeFromGPS_TO@TimeOut
  1252  061D  30BA               	movlw	(low (main@GPSDate| 0))& (0+255)
  1253  061E  120A  158A  2203  120A  118A  	fcall	_UART_ReadValidTimeFromGPS_TO
  1254  0623  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0624  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0625  00AD               	movwf	(??_main+1)^(0+128)
  1257  0626  082D               	movf	(??_main+1)^(0+128),w
  1258  0627  00C8               	movwf	main@ValidGPS^(0+128)
  1259                           
  1260                           ;main.c: 43: if (ValidGPS) {
  1261  0628  0848               	movf	main@ValidGPS^(0+128),w
  1262  0629  1903               	btfsc	3,2
  1263  062A  2E71               	goto	l2827
  1264                           
  1265                           ;main.c: 44: for (TempVar000=0; TempVar000<6; TempVar000++)
  1266  062B  01CD               	clrf	main@TempVar000^(0+128)
  1267  062C  3006               	movlw	6
  1268  062D  024D               	subwf	main@TempVar000^(0+128),w
  1269  062E  1803               	btfsc	3,0
  1270  062F  2E53               	goto	l2825
  1271  0630                     l2819:	
  1272                           
  1273                           ;main.c: 45: Lcd_WriteChar(2,TempVar000+5,GPSDate[TempVar000]);
  1274  0630  084D               	movf	main@TempVar000^(0+128),w
  1275  0631  3E05               	addlw	5
  1276  0632  00AC               	movwf	??_main^(0+128)
  1277  0633  082C               	movf	??_main^(0+128),w
  1278  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0636  00A7               	movwf	Lcd_WriteChar@x
  1281  0637  1683               	bsf	3,5	;RP0=1, select bank1
  1282  0638  1303               	bcf	3,6	;RP1=0, select bank1
  1283  0639  084D               	movf	main@TempVar000^(0+128),w
  1284  063A  3EBA               	addlw	(low (main@GPSDate| 0))& (0+255)
  1285  063B  0084               	movwf	4
  1286  063C  1383               	bcf	3,7	;select IRP bank1
  1287  063D  0800               	movf	0,w
  1288  063E  00AD               	movwf	(??_main+1)^(0+128)
  1289  063F  082D               	movf	(??_main+1)^(0+128),w
  1290  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0642  00A8               	movwf	Lcd_WriteChar@c
  1293  0643  3002               	movlw	2
  1294  0644  120A  158A  225B  120A  118A  	fcall	_Lcd_WriteChar
  1295  0649  3001               	movlw	1
  1296  064A  1683               	bsf	3,5	;RP0=1, select bank1
  1297  064B  1303               	bcf	3,6	;RP1=0, select bank1
  1298  064C  00AC               	movwf	??_main^(0+128)
  1299  064D  082C               	movf	??_main^(0+128),w
  1300  064E  07CD               	addwf	main@TempVar000^(0+128),f
  1301  064F  3006               	movlw	6
  1302  0650  024D               	subwf	main@TempVar000^(0+128),w
  1303  0651  1C03               	skipc
  1304  0652  2E30               	goto	l2819
  1305  0653                     l2825:	
  1306                           
  1307                           ;main.c: 46: InitSec = GPS2Sec(GPSDate);
  1308  0653  30BA               	movlw	(low (main@GPSDate| 0))& (0+255)
  1309  0654  120A  118A  2444  120A  118A  	fcall	_GPS2Sec
  1310  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1311  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1312  065B  0823               	movf	?_GPS2Sec+3,w
  1313  065C  1683               	bsf	3,5	;RP0=1, select bank1
  1314  065D  1303               	bcf	3,6	;RP1=0, select bank1
  1315  065E  00C7               	movwf	(main@InitSec+3)^(0+128)
  1316  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0661  0822               	movf	?_GPS2Sec+2,w
  1319  0662  1683               	bsf	3,5	;RP0=1, select bank1
  1320  0663  1303               	bcf	3,6	;RP1=0, select bank1
  1321  0664  00C6               	movwf	(main@InitSec+2)^(0+128)
  1322  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0667  0821               	movf	?_GPS2Sec+1,w
  1325  0668  1683               	bsf	3,5	;RP0=1, select bank1
  1326  0669  1303               	bcf	3,6	;RP1=0, select bank1
  1327  066A  00C5               	movwf	(main@InitSec+1)^(0+128)
  1328  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1329  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1330  066D  0820               	movf	?_GPS2Sec,w
  1331  066E  1683               	bsf	3,5	;RP0=1, select bank1
  1332  066F  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0670  00C4               	movwf	main@InitSec^(0+128)
  1334  0671                     l2827:	
  1335                           
  1336                           ;main.c: 47: }
  1337                           ;main.c: 49: TMR1CS = 1;
  1338  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0673  1490               	bsf	16,1	;volatile
  1341                           
  1342                           ;main.c: 50: TMR1ON = 1;
  1343  0674  1410               	bsf	16,0	;volatile
  1344                           
  1345                           ;main.c: 51: _delay((unsigned long)((10)*(4000000/4000.0)));
  1346  0675  300D               	movlw	13
  1347  0676  1683               	bsf	3,5	;RP0=1, select bank1
  1348  0677  1303               	bcf	3,6	;RP1=0, select bank1
  1349  0678  00AD               	movwf	(??_main^(0+128)+1)
  1350  0679  30FB               	movlw	251
  1351  067A  00AC               	movwf	??_main^(0+128)
  1352  067B                     u4237:	
  1353  067B  0BAC               	decfsz	??_main^(0+128),f
  1354  067C  2E7B               	goto	u4237
  1355  067D  0BAD               	decfsz	(??_main^(0+128)+1),f
  1356  067E  2E7B               	goto	u4237
  1357  067F  2E80               	nop2
  1358                           
  1359                           ;main.c: 52: TMR1H = 0x00;
  1360  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0682  018F               	clrf	15	;volatile
  1363                           
  1364                           ;main.c: 53: TMR1L = 0x00;
  1365  0683  018E               	clrf	14	;volatile
  1366                           
  1367                           ;main.c: 54: _delay((unsigned long)((10)*(4000000/4000.0)));
  1368  0684  300D               	movlw	13
  1369  0685  1683               	bsf	3,5	;RP0=1, select bank1
  1370  0686  1303               	bcf	3,6	;RP1=0, select bank1
  1371  0687  00AD               	movwf	(??_main^(0+128)+1)
  1372  0688  30FB               	movlw	251
  1373  0689  00AC               	movwf	??_main^(0+128)
  1374  068A                     u4247:	
  1375  068A  0BAC               	decfsz	??_main^(0+128),f
  1376  068B  2E8A               	goto	u4247
  1377  068C  0BAD               	decfsz	(??_main^(0+128)+1),f
  1378  068D  2E8A               	goto	u4247
  1379  068E  2E8F               	nop2
  1380                           
  1381                           ;main.c: 55: TMR1CS = 1;
  1382  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0691  1490               	bsf	16,1	;volatile
  1385                           
  1386                           ;main.c: 56: TMR1ON = 1;
  1387  0692  1410               	bsf	16,0	;volatile
  1388  0693                     l48:	
  1389                           ;main.c: 58: while (1) {
  1390                           
  1391                           
  1392                           ;main.c: 59: ValidGPS = UART_ReadValidTimeFromGPS_TO(GPSDate,100);
  1393  0693  3064               	movlw	100
  1394  0694  1683               	bsf	3,5	;RP0=1, select bank1
  1395  0695  1303               	bcf	3,6	;RP1=0, select bank1
  1396  0696  00AC               	movwf	??_main^(0+128)
  1397  0697  082C               	movf	??_main^(0+128),w
  1398  0698  00F9               	movwf	UART_ReadValidTimeFromGPS_TO@TimeOut
  1399  0699  30BA               	movlw	(low (main@GPSDate| 0))& (0+255)
  1400  069A  120A  158A  2203  120A  118A  	fcall	_UART_ReadValidTimeFromGPS_TO
  1401  069F  1683               	bsf	3,5	;RP0=1, select bank1
  1402  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  1403  06A1  00AD               	movwf	(??_main+1)^(0+128)
  1404  06A2  082D               	movf	(??_main+1)^(0+128),w
  1405  06A3  00C8               	movwf	main@ValidGPS^(0+128)
  1406                           
  1407                           ;main.c: 60: if (ValidGPS) {
  1408  06A4  0848               	movf	main@ValidGPS^(0+128),w
  1409  06A5  1903               	btfsc	3,2
  1410  06A6  2EF4               	goto	l2859
  1411                           
  1412                           ;main.c: 61: for (TempVar000=0; TempVar000<6; TempVar000++)
  1413  06A7  01CD               	clrf	main@TempVar000^(0+128)
  1414  06A8  3006               	movlw	6
  1415  06A9  024D               	subwf	main@TempVar000^(0+128),w
  1416  06AA  1803               	btfsc	3,0
  1417  06AB  2ECF               	goto	l2857
  1418  06AC                     l2851:	
  1419                           
  1420                           ;main.c: 62: Lcd_WriteChar(1,TempVar000+5,GPSDate[TempVar000]);
  1421  06AC  084D               	movf	main@TempVar000^(0+128),w
  1422  06AD  3E05               	addlw	5
  1423  06AE  00AC               	movwf	??_main^(0+128)
  1424  06AF  082C               	movf	??_main^(0+128),w
  1425  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1426  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1427  06B2  00A7               	movwf	Lcd_WriteChar@x
  1428  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  1429  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  1430  06B5  084D               	movf	main@TempVar000^(0+128),w
  1431  06B6  3EBA               	addlw	(low (main@GPSDate| 0))& (0+255)
  1432  06B7  0084               	movwf	4
  1433  06B8  1383               	bcf	3,7	;select IRP bank1
  1434  06B9  0800               	movf	0,w
  1435  06BA  00AD               	movwf	(??_main+1)^(0+128)
  1436  06BB  082D               	movf	(??_main+1)^(0+128),w
  1437  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1438  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1439  06BE  00A8               	movwf	Lcd_WriteChar@c
  1440  06BF  3001               	movlw	1
  1441  06C0  120A  158A  225B  120A  118A  	fcall	_Lcd_WriteChar
  1442  06C5  3001               	movlw	1
  1443  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  1444  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  1445  06C8  00AC               	movwf	??_main^(0+128)
  1446  06C9  082C               	movf	??_main^(0+128),w
  1447  06CA  07CD               	addwf	main@TempVar000^(0+128),f
  1448  06CB  3006               	movlw	6
  1449  06CC  024D               	subwf	main@TempVar000^(0+128),w
  1450  06CD  1C03               	skipc
  1451  06CE  2EAC               	goto	l2851
  1452  06CF                     l2857:	
  1453                           
  1454                           ;main.c: 63: WriteLongInt(1,12,GPS2Sec(GPSDate),5,0);
  1455  06CF  300C               	movlw	12
  1456  06D0  00AC               	movwf	??_main^(0+128)
  1457  06D1  082C               	movf	??_main^(0+128),w
  1458  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1459  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1460  06D4  00B1               	movwf	WriteLongInt@x
  1461  06D5  30BA               	movlw	(low (main@GPSDate| 0))& (0+255)
  1462  06D6  120A  118A  2444  120A  118A  	fcall	_GPS2Sec
  1463  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1464  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1465  06DD  0823               	movf	?_GPS2Sec+3,w
  1466  06DE  00B5               	movwf	WriteLongInt@Val+3
  1467  06DF  0822               	movf	?_GPS2Sec+2,w
  1468  06E0  00B4               	movwf	WriteLongInt@Val+2
  1469  06E1  0821               	movf	?_GPS2Sec+1,w
  1470  06E2  00B3               	movwf	WriteLongInt@Val+1
  1471  06E3  0820               	movf	?_GPS2Sec,w
  1472  06E4  00B2               	movwf	WriteLongInt@Val
  1473  06E5  3005               	movlw	5
  1474  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  1475  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  1476  06E8  00AD               	movwf	(??_main+1)^(0+128)
  1477  06E9  082D               	movf	(??_main+1)^(0+128),w
  1478  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1479  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1480  06EC  00B6               	movwf	WriteLongInt@size
  1481  06ED  01B7               	clrf	WriteLongInt@Sign
  1482  06EE  3001               	movlw	1
  1483  06EF  120A  158A  261A  120A  118A  	fcall	_WriteLongInt
  1484  06F4                     l2859:	
  1485                           
  1486                           ;main.c: 64: }
  1487                           ;main.c: 75: CounterSec = TMR1H;
  1488  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1489  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1490  06F6  080F               	movf	15,w	;volatile
  1491  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  1492  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  1493  06F9  00AC               	movwf	??_main^(0+128)
  1494  06FA  01AD               	clrf	(??_main^(0+128)+1)
  1495  06FB  01AE               	clrf	(??_main^(0+128)+2)
  1496  06FC  01AF               	clrf	(??_main^(0+128)+3)
  1497  06FD  082F               	movf	(??_main+3)^(0+128),w
  1498  06FE  00C3               	movwf	(main@CounterSec+3)^(0+128)
  1499  06FF  082E               	movf	(??_main+2)^(0+128),w
  1500  0700  00C2               	movwf	(main@CounterSec+2)^(0+128)
  1501  0701  082D               	movf	(??_main+1)^(0+128),w
  1502  0702  00C1               	movwf	(main@CounterSec+1)^(0+128)
  1503  0703  082C               	movf	??_main^(0+128),w
  1504  0704  00C0               	movwf	main@CounterSec^(0+128)
  1505                           
  1506                           ;main.c: 76: CounterSec = 256*CounterSec + TMR1L;
  1507  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0707  080E               	movf	14,w	;volatile
  1510  0708  1683               	bsf	3,5	;RP0=1, select bank1
  1511  0709  1303               	bcf	3,6	;RP1=0, select bank1
  1512  070A  00AC               	movwf	??_main^(0+128)
  1513  070B  01AD               	clrf	(??_main^(0+128)+1)
  1514  070C  01AE               	clrf	(??_main^(0+128)+2)
  1515  070D  01AF               	clrf	(??_main^(0+128)+3)
  1516  070E  0840               	movf	main@CounterSec^(0+128),w
  1517  070F  00B0               	movwf	(??_main+4)^(0+128)
  1518  0710  0841               	movf	(main@CounterSec+1)^(0+128),w
  1519  0711  00B1               	movwf	((??_main+4)^(0+128)+1)
  1520  0712  0842               	movf	(main@CounterSec+2)^(0+128),w
  1521  0713  00B2               	movwf	((??_main+4)^(0+128)+2)
  1522  0714  0843               	movf	(main@CounterSec+3)^(0+128),w
  1523  0715  00B3               	movwf	((??_main+4)^(0+128)+3)
  1524  0716  3008               	movlw	8
  1525  0717                     u4085:	
  1526  0717  1003               	clrc
  1527  0718  0DB0               	rlf	(??_main+4)^(0+128),f
  1528  0719  0DB1               	rlf	((??_main+4)^(0+128)+1),f
  1529  071A  0DB2               	rlf	((??_main+4)^(0+128)+2),f
  1530  071B  0DB3               	rlf	((??_main+4)^(0+128)+3),f
  1531  071C  3EFF               	addlw	-1
  1532  071D  1D03               	skipz
  1533  071E  2F17               	goto	u4085
  1534  071F  0830               	movf	(??_main+4)^(0+128),w
  1535  0720  07AC               	addwf	??_main^(0+128),f
  1536  0721  0831               	movf	(??_main+5)^(0+128),w
  1537  0722  1803               	skipnc
  1538  0723  0F31               	incfsz	(??_main+5)^(0+128),w
  1539  0724  2F26               	goto	u4090
  1540  0725  2F27               	goto	u4091
  1541  0726                     u4090:	
  1542  0726  07AD               	addwf	(??_main^(0+128)+1),f
  1543  0727                     u4091:	
  1544  0727  0832               	movf	(??_main+6)^(0+128),w
  1545  0728  1803               	skipnc
  1546  0729  0F32               	incfsz	(??_main+6)^(0+128),w
  1547  072A  2F2C               	goto	u4092
  1548  072B  2F2D               	goto	u4093
  1549  072C                     u4092:	
  1550  072C  07AE               	addwf	(??_main^(0+128)+2),f
  1551  072D                     u4093:	
  1552  072D  0833               	movf	(??_main+7)^(0+128),w
  1553  072E  1803               	skipnc
  1554  072F  0A33               	incf	(??_main+7)^(0+128),w
  1555  0730  07AF               	addwf	(??_main^(0+128)+3),f
  1556  0731  082F               	movf	(??_main+3)^(0+128),w
  1557  0732  00C3               	movwf	(main@CounterSec+3)^(0+128)
  1558  0733  082E               	movf	(??_main+2)^(0+128),w
  1559  0734  00C2               	movwf	(main@CounterSec+2)^(0+128)
  1560  0735  082D               	movf	(??_main+1)^(0+128),w
  1561  0736  00C1               	movwf	(main@CounterSec+1)^(0+128)
  1562  0737  082C               	movf	??_main^(0+128),w
  1563  0738  00C0               	movwf	main@CounterSec^(0+128)
  1564                           
  1565                           ;main.c: 78: if (TMR1IF) {
  1566  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1567  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1568  073B  1C0C               	btfss	12,0	;volatile
  1569  073C  2F50               	goto	l2869
  1570                           
  1571                           ;main.c: 79: InitSec+=65536;
  1572  073D  3000               	movlw	0
  1573  073E  1683               	bsf	3,5	;RP0=1, select bank1
  1574  073F  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0740  07C4               	addwf	main@InitSec^(0+128),f
  1576  0741  3000               	movlw	0
  1577  0742  1803               	skipnc
  1578  0743  3001               	movlw	1
  1579  0744  07C5               	addwf	(main@InitSec+1)^(0+128),f
  1580  0745  3001               	movlw	1
  1581  0746  1803               	skipnc
  1582  0747  3002               	movlw	2
  1583  0748  07C6               	addwf	(main@InitSec+2)^(0+128),f
  1584  0749  3000               	movlw	0
  1585  074A  1803               	skipnc
  1586  074B  3001               	movlw	1
  1587  074C  07C7               	addwf	(main@InitSec+3)^(0+128),f
  1588                           
  1589                           ;main.c: 80: TMR1IF = 0;
  1590  074D  1283               	bcf	3,5	;RP0=0, select bank0
  1591  074E  1303               	bcf	3,6	;RP1=0, select bank0
  1592  074F  100C               	bcf	12,0	;volatile
  1593  0750                     l2869:	
  1594                           
  1595                           ;main.c: 82: }
  1596                           ;main.c: 83: if (InitSec>86400)
  1597  0750  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0751  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0752  1BC7               	btfsc	(main@InitSec+3)^(0+128),7
  1600  0753  2F72               	goto	l53
  1601  0754  0847               	movf	(main@InitSec+3)^(0+128),w
  1602  0755  1D03               	btfss	3,2
  1603  0756  2F65               	goto	l2871
  1604  0757  3001               	movlw	1
  1605  0758  0246               	subwf	(main@InitSec+2)^(0+128),w
  1606  0759  1D03               	skipz
  1607  075A  2F63               	goto	u4113
  1608  075B  3051               	movlw	81
  1609  075C  0245               	subwf	(main@InitSec+1)^(0+128),w
  1610  075D  1D03               	skipz
  1611  075E  2F63               	goto	u4113
  1612  075F  3081               	movlw	129
  1613  0760  0244               	subwf	main@InitSec^(0+128),w
  1614  0761  1D03               	skipz
  1615  0762  2F63               	goto	u4113
  1616  0763                     u4113:	
  1617  0763  1C03               	btfss	3,0
  1618  0764  2F72               	goto	l53
  1619  0765                     l2871:	
  1620                           
  1621                           ;main.c: 84: InitSec-=86400;
  1622  0765  3080               	movlw	128
  1623  0766  07C4               	addwf	main@InitSec^(0+128),f
  1624  0767  30AE               	movlw	174
  1625  0768  1803               	skipnc
  1626  0769  30AF               	movlw	175
  1627  076A  07C5               	addwf	(main@InitSec+1)^(0+128),f
  1628  076B  30FE               	movlw	254
  1629  076C  1803               	skipnc
  1630  076D  30FF               	movlw	255
  1631  076E  07C6               	addwf	(main@InitSec+2)^(0+128),f
  1632  076F  30FF               	movlw	255
  1633  0770  1C03               	skipc
  1634  0771  07C7               	addwf	(main@InitSec+3)^(0+128),f
  1635  0772                     l53:	
  1636                           
  1637                           ;main.c: 86: PICSec = InitSec + CounterSec;
  1638  0772  0844               	movf	main@InitSec^(0+128),w
  1639  0773  0740               	addwf	main@CounterSec^(0+128),w
  1640  0774  00AC               	movwf	??_main^(0+128)
  1641  0775  3000               	movlw	0
  1642  0776  1803               	skipnc
  1643  0777  3001               	movlw	1
  1644  0778  0745               	addwf	(main@InitSec+1)^(0+128),w
  1645  0779  01AE               	clrf	(??_main^(0+128)+2)
  1646  077A  1803               	skipnc
  1647  077B  0AAE               	incf	(??_main^(0+128)+2),f
  1648  077C  0741               	addwf	(main@CounterSec+1)^(0+128),w
  1649  077D  00AD               	movwf	(??_main^(0+128)+1)
  1650  077E  1803               	skipnc
  1651  077F  0AAE               	incf	(??_main^(0+128)+2),f
  1652  0780  0846               	movf	(main@InitSec+2)^(0+128),w
  1653  0781  072E               	addwf	(??_main^(0+128)+2),w
  1654  0782  01AF               	clrf	(??_main^(0+128)+3)
  1655  0783  1803               	skipnc
  1656  0784  0AAF               	incf	(??_main^(0+128)+3),f
  1657  0785  0742               	addwf	(main@CounterSec+2)^(0+128),w
  1658  0786  00AE               	movwf	(??_main^(0+128)+2)
  1659  0787  1803               	skipnc
  1660  0788  0AAF               	incf	(??_main^(0+128)+3),f
  1661  0789  0847               	movf	(main@InitSec+3)^(0+128),w
  1662  078A  072F               	addwf	(??_main^(0+128)+3),w
  1663  078B  0743               	addwf	(main@CounterSec+3)^(0+128),w
  1664  078C  00AF               	movwf	(??_main^(0+128)+3)
  1665  078D  082F               	movf	(??_main+3)^(0+128),w
  1666  078E  00CC               	movwf	(main@PICSec+3)^(0+128)
  1667  078F  082E               	movf	(??_main+2)^(0+128),w
  1668  0790  00CB               	movwf	(main@PICSec+2)^(0+128)
  1669  0791  082D               	movf	(??_main+1)^(0+128),w
  1670  0792  00CA               	movwf	(main@PICSec+1)^(0+128)
  1671  0793  082C               	movf	??_main^(0+128),w
  1672  0794  00C9               	movwf	main@PICSec^(0+128)
  1673                           
  1674                           ;main.c: 87: if (PICSec>86400)
  1675  0795  1BCC               	btfsc	(main@PICSec+3)^(0+128),7
  1676  0796  2FCA               	goto	l2877
  1677  0797  084C               	movf	(main@PICSec+3)^(0+128),w
  1678  0798  1D03               	btfss	3,2
  1679  0799  2FA8               	goto	l2875
  1680  079A  3001               	movlw	1
  1681  079B  024B               	subwf	(main@PICSec+2)^(0+128),w
  1682  079C  1D03               	skipz
  1683  079D  2FA6               	goto	u4123
  1684  079E  3051               	movlw	81
  1685  079F  024A               	subwf	(main@PICSec+1)^(0+128),w
  1686  07A0  1D03               	skipz
  1687  07A1  2FA6               	goto	u4123
  1688  07A2  3081               	movlw	129
  1689  07A3  0249               	subwf	main@PICSec^(0+128),w
  1690  07A4  1D03               	skipz
  1691  07A5  2FA6               	goto	u4123
  1692  07A6                     u4123:	
  1693  07A6  1C03               	btfss	3,0
  1694  07A7  2FCA               	goto	l2877
  1695  07A8                     l2875:	
  1696                           
  1697                           ;main.c: 88: PICSec = PICSec-86400;
  1698  07A8  3080               	movlw	128
  1699  07A9  00AC               	movwf	??_main^(0+128)
  1700  07AA  30AE               	movlw	174
  1701  07AB  00AD               	movwf	(??_main^(0+128)+1)
  1702  07AC  30FE               	movlw	254
  1703  07AD  00AE               	movwf	(??_main^(0+128)+2)
  1704  07AE  30FF               	movlw	255
  1705  07AF  00AF               	movwf	(??_main^(0+128)+3)
  1706  07B0  0849               	movf	main@PICSec^(0+128),w
  1707  07B1  07AC               	addwf	??_main^(0+128),f
  1708  07B2  084A               	movf	(main@PICSec+1)^(0+128),w
  1709  07B3  1803               	skipnc
  1710  07B4  0F4A               	incfsz	(main@PICSec+1)^(0+128),w
  1711  07B5  2FB7               	goto	u4130
  1712  07B6  2FB8               	goto	u4131
  1713  07B7                     u4130:	
  1714  07B7  07AD               	addwf	(??_main^(0+128)+1),f
  1715  07B8                     u4131:	
  1716  07B8  084B               	movf	(main@PICSec+2)^(0+128),w
  1717  07B9  1803               	skipnc
  1718  07BA  0F4B               	incfsz	(main@PICSec+2)^(0+128),w
  1719  07BB  2FBD               	goto	u4132
  1720  07BC  2FBE               	goto	u4133
  1721  07BD                     u4132:	
  1722  07BD  07AE               	addwf	(??_main^(0+128)+2),f
  1723  07BE                     u4133:	
  1724  07BE  084C               	movf	(main@PICSec+3)^(0+128),w
  1725  07BF  1803               	skipnc
  1726  07C0  0A4C               	incf	(main@PICSec+3)^(0+128),w
  1727  07C1  07AF               	addwf	(??_main^(0+128)+3),f
  1728  07C2  082F               	movf	(??_main+3)^(0+128),w
  1729  07C3  00CC               	movwf	(main@PICSec+3)^(0+128)
  1730  07C4  082E               	movf	(??_main+2)^(0+128),w
  1731  07C5  00CB               	movwf	(main@PICSec+2)^(0+128)
  1732  07C6  082D               	movf	(??_main+1)^(0+128),w
  1733  07C7  00CA               	movwf	(main@PICSec+1)^(0+128)
  1734  07C8  082C               	movf	??_main^(0+128),w
  1735  07C9  00C9               	movwf	main@PICSec^(0+128)
  1736  07CA                     l2877:	
  1737                           
  1738                           ;main.c: 90: WriteLongInt(2,12,PICSec,5,0);
  1739  07CA  300C               	movlw	12
  1740  07CB  00AC               	movwf	??_main^(0+128)
  1741  07CC  082C               	movf	??_main^(0+128),w
  1742  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1743  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1744  07CF  00B1               	movwf	WriteLongInt@x
  1745  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1746  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1747  07D2  084C               	movf	(main@PICSec+3)^(0+128),w
  1748  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1749  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1750  07D5  00B5               	movwf	WriteLongInt@Val+3
  1751  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  1752  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  1753  07D8  084B               	movf	(main@PICSec+2)^(0+128),w
  1754  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1755  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1756  07DB  00B4               	movwf	WriteLongInt@Val+2
  1757  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1758  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  1759  07DE  084A               	movf	(main@PICSec+1)^(0+128),w
  1760  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1761  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1762  07E1  00B3               	movwf	WriteLongInt@Val+1
  1763  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  1764  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  1765  07E4  0849               	movf	main@PICSec^(0+128),w
  1766  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1767  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1768  07E7  00B2               	movwf	WriteLongInt@Val
  1769  07E8  3005               	movlw	5
  1770  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  1771  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  1772  07EB  00AD               	movwf	(??_main+1)^(0+128)
  1773  07EC  082D               	movf	(??_main+1)^(0+128),w
  1774  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  1775  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  1776  07EF  00B6               	movwf	WriteLongInt@size
  1777  07F0  01B7               	clrf	WriteLongInt@Sign
  1778  07F1  3002               	movlw	2
  1779  07F2  120A  158A  261A  120A  118A  	fcall	_WriteLongInt
  1780  07F7  2E93               	goto	l48
  1781  07F8                     __end_of_main:	
  1782                           
  1783                           	psect	text1
  1784  0E1A                     __ptext1:	
  1785 ;; *************** function _WriteLongInt *****************
  1786 ;; Defined at:
  1787 ;;		line 182 in file "libs/HD44780.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  y               1    wreg     unsigned char 
  1790 ;;  x               1   17[BANK0 ] unsigned char 
  1791 ;;  Val             4   18[BANK0 ] long 
  1792 ;;  size            1   22[BANK0 ] char 
  1793 ;;  Sign            1   23[BANK0 ] unsigned char 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  y               1   29[BANK0 ] unsigned char 
  1796 ;;  POS             1   28[BANK0 ] char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       7       0       0       0
  1807 ;;      Locals:         0       2       0       0       0
  1808 ;;      Temps:          0       4       0       0       0
  1809 ;;      Totals:         0      13       0       0       0
  1810 ;;Total ram usage:       13 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    3
  1813 ;; This function calls:
  1814 ;;		_Lcd_WriteChar
  1815 ;;		___aldiv
  1816 ;;		___bmul
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _WriteLongInt
  1824  0E1A                     _WriteLongInt:	
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _WriteLongInt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1828                           ;WriteLongInt@y stored from wreg
  1829  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0E1C  00BD               	movwf	WriteLongInt@y
  1832                           
  1833                           ;HD44780.c: 183: int8_t POS = 0;
  1834  0E1D  01BC               	clrf	WriteLongInt@POS
  1835                           
  1836                           ;HD44780.c: 184: if (Sign) {
  1837  0E1E  0837               	movf	WriteLongInt@Sign,w
  1838  0E1F  1903               	btfsc	3,2
  1839  0E20  2E51               	goto	l2733
  1840                           
  1841                           ;HD44780.c: 185: POS++;
  1842  0E21  3001               	movlw	1
  1843  0E22  00B8               	movwf	??_WriteLongInt
  1844  0E23  0838               	movf	??_WriteLongInt,w
  1845  0E24  07BC               	addwf	WriteLongInt@POS,f
  1846                           
  1847                           ;HD44780.c: 186: if (Val<0) {
  1848  0E25  1FB5               	btfss	WriteLongInt@Val+3,7
  1849  0E26  2E43               	goto	l2725
  1850                           
  1851                           ;HD44780.c: 187: Lcd_WriteChar (y, x, 0x2D);
  1852  0E27  0831               	movf	WriteLongInt@x,w
  1853  0E28  00B8               	movwf	??_WriteLongInt
  1854  0E29  0838               	movf	??_WriteLongInt,w
  1855  0E2A  00A7               	movwf	Lcd_WriteChar@x
  1856  0E2B  302D               	movlw	45
  1857  0E2C  00B9               	movwf	??_WriteLongInt+1
  1858  0E2D  0839               	movf	??_WriteLongInt+1,w
  1859  0E2E  00A8               	movwf	Lcd_WriteChar@c
  1860  0E2F  083D               	movf	WriteLongInt@y,w
  1861  0E30  120A  158A  225B  120A  158A  	fcall	_Lcd_WriteChar
  1862                           
  1863                           ;HD44780.c: 188: Val=-1*Val;
  1864  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0E37  09B2               	comf	WriteLongInt@Val,f
  1867  0E38  09B3               	comf	WriteLongInt@Val+1,f
  1868  0E39  09B4               	comf	WriteLongInt@Val+2,f
  1869  0E3A  09B5               	comf	WriteLongInt@Val+3,f
  1870  0E3B  0AB2               	incf	WriteLongInt@Val,f
  1871  0E3C  1903               	skipnz
  1872  0E3D  0AB3               	incf	WriteLongInt@Val+1,f
  1873  0E3E  1903               	skipnz
  1874  0E3F  0AB4               	incf	WriteLongInt@Val+2,f
  1875  0E40  1903               	skipnz
  1876  0E41  0AB5               	incf	WriteLongInt@Val+3,f
  1877                           
  1878                           ;HD44780.c: 189: } else
  1879  0E42  2E51               	goto	l2733
  1880  0E43                     l2725:	
  1881                           
  1882                           ;HD44780.c: 190: Lcd_WriteChar (y, x, 0x2B);
  1883  0E43  0831               	movf	WriteLongInt@x,w
  1884  0E44  00B8               	movwf	??_WriteLongInt
  1885  0E45  0838               	movf	??_WriteLongInt,w
  1886  0E46  00A7               	movwf	Lcd_WriteChar@x
  1887  0E47  302B               	movlw	43
  1888  0E48  00B9               	movwf	??_WriteLongInt+1
  1889  0E49  0839               	movf	??_WriteLongInt+1,w
  1890  0E4A  00A8               	movwf	Lcd_WriteChar@c
  1891  0E4B  083D               	movf	WriteLongInt@y,w
  1892  0E4C  120A  158A  225B  120A  158A  	fcall	_Lcd_WriteChar
  1893  0E51                     l2733:	
  1894                           ;HD44780.c: 191: }
  1895                           ;HD44780.c: 192: while(size) {
  1896                           
  1897  0E51  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0E52  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0E53  0836               	movf	WriteLongInt@size,w
  1900  0E54  1903               	btfsc	3,2
  1901  0E55  0008               	return
  1902                           
  1903                           ;HD44780.c: 193: size--;
  1904  0E56  30FF               	movlw	255
  1905  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0E59  00B8               	movwf	??_WriteLongInt
  1908  0E5A  0838               	movf	??_WriteLongInt,w
  1909  0E5B  07B6               	addwf	WriteLongInt@size,f
  1910                           
  1911                           ;HD44780.c: 194: Lcd_WriteChar (y, x+size+POS, ((Val - ((Val/10)*10))+0x30));
  1912  0E5C  0836               	movf	WriteLongInt@size,w
  1913  0E5D  0731               	addwf	WriteLongInt@x,w
  1914  0E5E  00B8               	movwf	??_WriteLongInt
  1915  0E5F  083C               	movf	WriteLongInt@POS,w
  1916  0E60  0738               	addwf	??_WriteLongInt,w
  1917  0E61  00B9               	movwf	??_WriteLongInt+1
  1918  0E62  0839               	movf	??_WriteLongInt+1,w
  1919  0E63  00A7               	movwf	Lcd_WriteChar@x
  1920  0E64  300A               	movlw	10
  1921  0E65  00BA               	movwf	??_WriteLongInt+2
  1922  0E66  083A               	movf	??_WriteLongInt+2,w
  1923  0E67  00A6               	movwf	___bmul@multiplicand
  1924  0E68  0835               	movf	WriteLongInt@Val+3,w
  1925  0E69  00F7               	movwf	___aldiv@dividend+3
  1926  0E6A  0834               	movf	WriteLongInt@Val+2,w
  1927  0E6B  00F6               	movwf	___aldiv@dividend+2
  1928  0E6C  0833               	movf	WriteLongInt@Val+1,w
  1929  0E6D  00F5               	movwf	___aldiv@dividend+1
  1930  0E6E  0832               	movf	WriteLongInt@Val,w
  1931  0E6F  00F4               	movwf	___aldiv@dividend
  1932  0E70  3000               	movlw	0
  1933  0E71  00F3               	movwf	___aldiv@divisor+3
  1934  0E72  3000               	movlw	0
  1935  0E73  00F2               	movwf	___aldiv@divisor+2
  1936  0E74  3000               	movlw	0
  1937  0E75  00F1               	movwf	___aldiv@divisor+1
  1938  0E76  300A               	movlw	10
  1939  0E77  00F0               	movwf	___aldiv@divisor
  1940  0E78  120A  158A  258B  120A  158A  	fcall	___aldiv
  1941  0E7D  0870               	movf	?___aldiv,w
  1942  0E7E  120A  158A  2225  120A  158A  	fcall	___bmul
  1943  0E83  3AFF               	xorlw	255
  1944  0E84  3E01               	addlw	1
  1945  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0E87  0732               	addwf	WriteLongInt@Val,w
  1948  0E88  3E30               	addlw	48
  1949  0E89  00BB               	movwf	??_WriteLongInt+3
  1950  0E8A  083B               	movf	??_WriteLongInt+3,w
  1951  0E8B  00A8               	movwf	Lcd_WriteChar@c
  1952  0E8C  083D               	movf	WriteLongInt@y,w
  1953  0E8D  120A  158A  225B  120A  158A  	fcall	_Lcd_WriteChar
  1954                           
  1955                           ;HD44780.c: 195: Val = Val/10;
  1956  0E92  3000               	movlw	0
  1957  0E93  00F3               	movwf	___aldiv@divisor+3
  1958  0E94  3000               	movlw	0
  1959  0E95  00F2               	movwf	___aldiv@divisor+2
  1960  0E96  3000               	movlw	0
  1961  0E97  00F1               	movwf	___aldiv@divisor+1
  1962  0E98  300A               	movlw	10
  1963  0E99  00F0               	movwf	___aldiv@divisor
  1964  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0E9C  0835               	movf	WriteLongInt@Val+3,w
  1967  0E9D  00F7               	movwf	___aldiv@dividend+3
  1968  0E9E  0834               	movf	WriteLongInt@Val+2,w
  1969  0E9F  00F6               	movwf	___aldiv@dividend+2
  1970  0EA0  0833               	movf	WriteLongInt@Val+1,w
  1971  0EA1  00F5               	movwf	___aldiv@dividend+1
  1972  0EA2  0832               	movf	WriteLongInt@Val,w
  1973  0EA3  00F4               	movwf	___aldiv@dividend
  1974  0EA4  120A  158A  258B  120A  158A  	fcall	___aldiv
  1975  0EA9  0873               	movf	?___aldiv+3,w
  1976  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0EAC  00B5               	movwf	WriteLongInt@Val+3
  1979  0EAD  0872               	movf	?___aldiv+2,w
  1980  0EAE  00B4               	movwf	WriteLongInt@Val+2
  1981  0EAF  0871               	movf	?___aldiv+1,w
  1982  0EB0  00B3               	movwf	WriteLongInt@Val+1
  1983  0EB1  0870               	movf	?___aldiv,w
  1984  0EB2  00B2               	movwf	WriteLongInt@Val
  1985  0EB3  2E51               	goto	l2733
  1986  0EB4                     __end_of_WriteLongInt:	
  1987                           
  1988                           	psect	text2
  1989  0A25                     __ptext2:	
  1990 ;; *************** function ___bmul *****************
  1991 ;; Defined at:
  1992 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  multiplier      1    wreg     unsigned char 
  1995 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  multiplier      1   11[COMMON] unsigned char 
  1998 ;;  product         1   10[COMMON] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      unsigned char 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       1       0       0       0
  2009 ;;      Locals:         2       0       0       0       0
  2010 ;;      Temps:          1       0       0       0       0
  2011 ;;      Totals:         3       1       0       0       0
  2012 ;;Total ram usage:        4 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_WriteLongInt
  2018 ;;		_Lcd_Int
  2019 ;;		_SetOSCTRIM
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function ___bmul
  2025  0A25                     ___bmul:	
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2029                           ;___bmul@multiplier stored from wreg
  2030  0A25  00FB               	movwf	___bmul@multiplier
  2031  0A26  01FA               	clrf	___bmul@product
  2032  0A27                     l2413:	
  2033  0A27  1C7B               	btfss	___bmul@multiplier,0
  2034  0A28  2A2F               	goto	l2417
  2035  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0A2B  0826               	movf	___bmul@multiplicand,w
  2038  0A2C  00F9               	movwf	??___bmul
  2039  0A2D  0879               	movf	??___bmul,w
  2040  0A2E  07FA               	addwf	___bmul@product,f
  2041  0A2F                     l2417:	
  2042  0A2F  1003               	clrc
  2043  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0A32  0DA6               	rlf	___bmul@multiplicand,f
  2046  0A33  1003               	clrc
  2047  0A34  0CFB               	rrf	___bmul@multiplier,f
  2048  0A35  087B               	movf	___bmul@multiplier,w
  2049  0A36  1D03               	btfss	3,2
  2050  0A37  2A27               	goto	l2413
  2051  0A38  087A               	movf	___bmul@product,w
  2052  0A39  0008               	return
  2053  0A3A                     __end_of___bmul:	
  2054                           
  2055                           	psect	text3
  2056  0D8B                     __ptext3:	
  2057 ;; *************** function ___aldiv *****************
  2058 ;; Defined at:
  2059 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  divisor         4    0[COMMON] long 
  2062 ;;  dividend        4    4[COMMON] long 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  quotient        4    2[BANK0 ] long 
  2065 ;;  sign            1    1[BANK0 ] unsigned char 
  2066 ;;  counter         1    0[BANK0 ] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  4    0[COMMON] long 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         8       0       0       0       0
  2077 ;;      Locals:         0       6       0       0       0
  2078 ;;      Temps:          1       0       0       0       0
  2079 ;;      Totals:         9       6       0       0       0
  2080 ;;Total ram usage:       15 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_WriteLongInt
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           
  2090                           ;psect for function ___aldiv
  2091  0D8B                     ___aldiv:	
  2092                           
  2093                           ;incstack = 0
  2094                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2095  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0D8D  01A1               	clrf	___aldiv@sign
  2098  0D8E  1FF3               	btfss	___aldiv@divisor+3,7
  2099  0D8F  2D9D               	goto	l514
  2100  0D90  09F0               	comf	___aldiv@divisor,f
  2101  0D91  09F1               	comf	___aldiv@divisor+1,f
  2102  0D92  09F2               	comf	___aldiv@divisor+2,f
  2103  0D93  09F3               	comf	___aldiv@divisor+3,f
  2104  0D94  0AF0               	incf	___aldiv@divisor,f
  2105  0D95  1903               	skipnz
  2106  0D96  0AF1               	incf	___aldiv@divisor+1,f
  2107  0D97  1903               	skipnz
  2108  0D98  0AF2               	incf	___aldiv@divisor+2,f
  2109  0D99  1903               	skipnz
  2110  0D9A  0AF3               	incf	___aldiv@divisor+3,f
  2111  0D9B  01A1               	clrf	___aldiv@sign
  2112  0D9C  0AA1               	incf	___aldiv@sign,f
  2113  0D9D                     l514:	
  2114  0D9D  1FF7               	btfss	___aldiv@dividend+3,7
  2115  0D9E  2DAE               	goto	l2435
  2116  0D9F  09F4               	comf	___aldiv@dividend,f
  2117  0DA0  09F5               	comf	___aldiv@dividend+1,f
  2118  0DA1  09F6               	comf	___aldiv@dividend+2,f
  2119  0DA2  09F7               	comf	___aldiv@dividend+3,f
  2120  0DA3  0AF4               	incf	___aldiv@dividend,f
  2121  0DA4  1903               	skipnz
  2122  0DA5  0AF5               	incf	___aldiv@dividend+1,f
  2123  0DA6  1903               	skipnz
  2124  0DA7  0AF6               	incf	___aldiv@dividend+2,f
  2125  0DA8  1903               	skipnz
  2126  0DA9  0AF7               	incf	___aldiv@dividend+3,f
  2127  0DAA  3001               	movlw	1
  2128  0DAB  00F8               	movwf	??___aldiv
  2129  0DAC  0878               	movf	??___aldiv,w
  2130  0DAD  06A1               	xorwf	___aldiv@sign,f
  2131  0DAE                     l2435:	
  2132  0DAE  3000               	movlw	0
  2133  0DAF  00A5               	movwf	___aldiv@quotient+3
  2134  0DB0  3000               	movlw	0
  2135  0DB1  00A4               	movwf	___aldiv@quotient+2
  2136  0DB2  3000               	movlw	0
  2137  0DB3  00A3               	movwf	___aldiv@quotient+1
  2138  0DB4  3000               	movlw	0
  2139  0DB5  00A2               	movwf	___aldiv@quotient
  2140  0DB6  0873               	movf	___aldiv@divisor+3,w
  2141  0DB7  0472               	iorwf	___aldiv@divisor+2,w
  2142  0DB8  0471               	iorwf	___aldiv@divisor+1,w
  2143  0DB9  0470               	iorwf	___aldiv@divisor,w
  2144  0DBA  1903               	skipnz
  2145  0DBB  2E03               	goto	l2457
  2146  0DBC  01A0               	clrf	___aldiv@counter
  2147  0DBD  0AA0               	incf	___aldiv@counter,f
  2148  0DBE                     l2443:	
  2149  0DBE  1BF3               	btfsc	___aldiv@divisor+3,7
  2150  0DBF  2DCE               	goto	l2445
  2151  0DC0  3001               	movlw	1
  2152  0DC1  00F8               	movwf	??___aldiv
  2153  0DC2                     u3575:	
  2154  0DC2  1003               	clrc
  2155  0DC3  0DF0               	rlf	___aldiv@divisor,f
  2156  0DC4  0DF1               	rlf	___aldiv@divisor+1,f
  2157  0DC5  0DF2               	rlf	___aldiv@divisor+2,f
  2158  0DC6  0DF3               	rlf	___aldiv@divisor+3,f
  2159  0DC7  0BF8               	decfsz	??___aldiv,f
  2160  0DC8  2DC2               	goto	u3575
  2161  0DC9  3001               	movlw	1
  2162  0DCA  00F8               	movwf	??___aldiv
  2163  0DCB  0878               	movf	??___aldiv,w
  2164  0DCC  07A0               	addwf	___aldiv@counter,f
  2165  0DCD  2DBE               	goto	l2443
  2166  0DCE                     l2445:	
  2167  0DCE  3001               	movlw	1
  2168  0DCF  00F8               	movwf	??___aldiv
  2169  0DD0                     u3595:	
  2170  0DD0  1003               	clrc
  2171  0DD1  0DA2               	rlf	___aldiv@quotient,f
  2172  0DD2  0DA3               	rlf	___aldiv@quotient+1,f
  2173  0DD3  0DA4               	rlf	___aldiv@quotient+2,f
  2174  0DD4  0DA5               	rlf	___aldiv@quotient+3,f
  2175  0DD5  0BF8               	decfsz	??___aldiv,f
  2176  0DD6  2DD0               	goto	u3595
  2177  0DD7  0873               	movf	___aldiv@divisor+3,w
  2178  0DD8  0277               	subwf	___aldiv@dividend+3,w
  2179  0DD9  1D03               	skipz
  2180  0DDA  2DE5               	goto	u3605
  2181  0DDB  0872               	movf	___aldiv@divisor+2,w
  2182  0DDC  0276               	subwf	___aldiv@dividend+2,w
  2183  0DDD  1D03               	skipz
  2184  0DDE  2DE5               	goto	u3605
  2185  0DDF  0871               	movf	___aldiv@divisor+1,w
  2186  0DE0  0275               	subwf	___aldiv@dividend+1,w
  2187  0DE1  1D03               	skipz
  2188  0DE2  2DE5               	goto	u3605
  2189  0DE3  0870               	movf	___aldiv@divisor,w
  2190  0DE4  0274               	subwf	___aldiv@dividend,w
  2191  0DE5                     u3605:	
  2192  0DE5  1C03               	skipc
  2193  0DE6  2DF6               	goto	l2453
  2194  0DE7  0870               	movf	___aldiv@divisor,w
  2195  0DE8  02F4               	subwf	___aldiv@dividend,f
  2196  0DE9  0871               	movf	___aldiv@divisor+1,w
  2197  0DEA  1C03               	skipc
  2198  0DEB  0F71               	incfsz	___aldiv@divisor+1,w
  2199  0DEC  02F5               	subwf	___aldiv@dividend+1,f
  2200  0DED  0872               	movf	___aldiv@divisor+2,w
  2201  0DEE  1C03               	skipc
  2202  0DEF  0F72               	incfsz	___aldiv@divisor+2,w
  2203  0DF0  02F6               	subwf	___aldiv@dividend+2,f
  2204  0DF1  0873               	movf	___aldiv@divisor+3,w
  2205  0DF2  1C03               	skipc
  2206  0DF3  0F73               	incfsz	___aldiv@divisor+3,w
  2207  0DF4  02F7               	subwf	___aldiv@dividend+3,f
  2208  0DF5  1422               	bsf	___aldiv@quotient,0
  2209  0DF6                     l2453:	
  2210  0DF6  3001               	movlw	1
  2211  0DF7                     u3615:	
  2212  0DF7  1003               	clrc
  2213  0DF8  0CF3               	rrf	___aldiv@divisor+3,f
  2214  0DF9  0CF2               	rrf	___aldiv@divisor+2,f
  2215  0DFA  0CF1               	rrf	___aldiv@divisor+1,f
  2216  0DFB  0CF0               	rrf	___aldiv@divisor,f
  2217  0DFC  3EFF               	addlw	-1
  2218  0DFD  1D03               	skipz
  2219  0DFE  2DF7               	goto	u3615
  2220  0DFF  3001               	movlw	1
  2221  0E00  02A0               	subwf	___aldiv@counter,f
  2222  0E01  1D03               	btfss	3,2
  2223  0E02  2DCE               	goto	l2445
  2224  0E03                     l2457:	
  2225  0E03  0821               	movf	___aldiv@sign,w
  2226  0E04  1903               	btfsc	3,2
  2227  0E05  2E11               	goto	l2461
  2228  0E06  09A2               	comf	___aldiv@quotient,f
  2229  0E07  09A3               	comf	___aldiv@quotient+1,f
  2230  0E08  09A4               	comf	___aldiv@quotient+2,f
  2231  0E09  09A5               	comf	___aldiv@quotient+3,f
  2232  0E0A  0AA2               	incf	___aldiv@quotient,f
  2233  0E0B  1903               	skipnz
  2234  0E0C  0AA3               	incf	___aldiv@quotient+1,f
  2235  0E0D  1903               	skipnz
  2236  0E0E  0AA4               	incf	___aldiv@quotient+2,f
  2237  0E0F  1903               	skipnz
  2238  0E10  0AA5               	incf	___aldiv@quotient+3,f
  2239  0E11                     l2461:	
  2240  0E11  0825               	movf	___aldiv@quotient+3,w
  2241  0E12  00F3               	movwf	?___aldiv+3
  2242  0E13  0824               	movf	___aldiv@quotient+2,w
  2243  0E14  00F2               	movwf	?___aldiv+2
  2244  0E15  0823               	movf	___aldiv@quotient+1,w
  2245  0E16  00F1               	movwf	?___aldiv+1
  2246  0E17  0822               	movf	___aldiv@quotient,w
  2247  0E18  00F0               	movwf	?___aldiv
  2248  0E19  0008               	return
  2249  0E1A                     __end_of___aldiv:	
  2250                           
  2251                           	psect	text4
  2252  0A5B                     __ptext4:	
  2253 ;; *************** function _Lcd_WriteChar *****************
  2254 ;; Defined at:
  2255 ;;		line 99 in file "libs/HD44780.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  y               1    wreg     unsigned char 
  2258 ;;  x               1    7[BANK0 ] unsigned char 
  2259 ;;  c               1    8[BANK0 ] unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  y               1    9[BANK0 ] unsigned char 
  2262 ;;  data            1   10[BANK0 ] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       2       0       0       0
  2273 ;;      Locals:         0       2       0       0       0
  2274 ;;      Temps:          1       0       0       0       0
  2275 ;;      Totals:         1       4       0       0       0
  2276 ;;Total ram usage:        5 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    2
  2279 ;; This function calls:
  2280 ;;		_Lcd_CharCP
  2281 ;;		_Lcd_Command
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;;		_WriteLongInt
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _Lcd_WriteChar
  2290  0A5B                     _Lcd_WriteChar:	
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2294                           ;Lcd_WriteChar@y stored from wreg
  2295  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0A5D  00A9               	movwf	Lcd_WriteChar@y
  2298                           
  2299                           ;HD44780.c: 100: unsigned char data;
  2300                           ;HD44780.c: 101: switch(y){
  2301  0A5E  2A6E               	goto	l2287
  2302  0A5F                     l2277:	
  2303                           ;HD44780.c: 102: case 1: data = 127 + x; break;
  2304                           
  2305  0A5F  0827               	movf	Lcd_WriteChar@x,w
  2306  0A60  3E7F               	addlw	127
  2307  0A61  2A6A               	goto	L3
  2308  0A62                     l2279:	
  2309                           ;HD44780.c: 103: case 2: data = 191 + x; break;
  2310                           
  2311  0A62  0827               	movf	Lcd_WriteChar@x,w
  2312  0A63  3EBF               	addlw	191
  2313  0A64  2A6A               	goto	L3
  2314  0A65                     l2281:	
  2315                           ;HD44780.c: 104: case 3: data = 147 + x; break;
  2316                           
  2317  0A65  0827               	movf	Lcd_WriteChar@x,w
  2318  0A66  3E93               	addlw	147
  2319  0A67  2A6A               	goto	L3
  2320  0A68                     l2283:	
  2321                           ;HD44780.c: 105: case 4: data = 211 + x; break;
  2322                           
  2323  0A68  0827               	movf	Lcd_WriteChar@x,w
  2324  0A69  3ED3               	addlw	211
  2325  0A6A                     L3:	
  2326  0A6A  00FC               	movwf	??_Lcd_WriteChar
  2327  0A6B  087C               	movf	??_Lcd_WriteChar,w
  2328  0A6C  00AA               	movwf	Lcd_WriteChar@data
  2329                           
  2330                           ;HD44780.c: 106: default: break;}
  2331  0A6D  2A7C               	goto	l2289
  2332  0A6E                     l2287:	
  2333  0A6E  0829               	movf	Lcd_WriteChar@y,w
  2334                           
  2335                           ; Switch size 1, requested type "space"
  2336                           ; Number of cases is 4, Range of values is 1 to 4
  2337                           ; switch strategies available:
  2338                           ; Name         Instructions Cycles
  2339                           ; simple_byte           13     7 (average)
  2340                           ; direct_byte           23    11 (fixed)
  2341                           ; jumptable            263     9 (fixed)
  2342                           ;	Chosen strategy is simple_byte
  2343  0A6F  3A01               	xorlw	1	; case 1
  2344  0A70  1903               	skipnz
  2345  0A71  2A5F               	goto	l2277
  2346  0A72  3A03               	xorlw	3	; case 2
  2347  0A73  1903               	skipnz
  2348  0A74  2A62               	goto	l2279
  2349  0A75  3A01               	xorlw	1	; case 3
  2350  0A76  1903               	skipnz
  2351  0A77  2A65               	goto	l2281
  2352  0A78  3A07               	xorlw	7	; case 4
  2353  0A79  1903               	skipnz
  2354  0A7A  2A68               	goto	l2283
  2355  0A7B  2A7C               	goto	l2289
  2356  0A7C                     l2289:	
  2357                           
  2358                           ;HD44780.c: 107: Lcd_Command(data);
  2359  0A7C  082A               	movf	Lcd_WriteChar@data,w
  2360  0A7D  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  2361                           
  2362                           ;HD44780.c: 108: Lcd_CharCP(c);
  2363  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0A84  0828               	movf	Lcd_WriteChar@c,w
  2366  0A85  120A  118A  204D   	fcall	_Lcd_CharCP
  2367  0A88  0008               	return
  2368  0A89                     __end_of_Lcd_WriteChar:	
  2369                           
  2370                           	psect	text5
  2371  0A03                     __ptext5:	
  2372 ;; *************** function _UART_ReadValidTimeFromGPS_TO *****************
  2373 ;; Defined at:
  2374 ;;		line 114 in file "libs/gsk_usart.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  Output          1    wreg     PTR unsigned char 
  2377 ;;		 -> main@GPSDate(6), 
  2378 ;;  TimeOut         1    9[COMMON] unsigned char 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  Output          1   11[COMMON] PTR unsigned char 
  2381 ;;		 -> main@GPSDate(6), 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      unsigned char 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         1       0       0       0       0
  2392 ;;      Locals:         1       0       0       0       0
  2393 ;;      Temps:          1       0       0       0       0
  2394 ;;      Totals:         3       0       0       0       0
  2395 ;;Total ram usage:        3 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    2
  2398 ;; This function calls:
  2399 ;;		_IsValidGPS
  2400 ;;		_UART_ReadFromGPS_TO
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _UART_ReadValidTimeFromGPS_TO
  2408  0A03                     _UART_ReadValidTimeFromGPS_TO:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _UART_ReadValidTimeFromGPS_TO: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
  2412                           ;UART_ReadValidTimeFromGPS_TO@Output stored from wreg
  2413  0A03  00FB               	movwf	UART_ReadValidTimeFromGPS_TO@Output
  2414                           
  2415                           ;gsk_usart.c: 115: UART_ReadFromGPS_TO (Output, TimeOut);
  2416  0A04  0879               	movf	UART_ReadValidTimeFromGPS_TO@TimeOut,w
  2417  0A05  00FA               	movwf	??_UART_ReadValidTimeFromGPS_TO
  2418  0A06  087A               	movf	??_UART_ReadValidTimeFromGPS_TO,w
  2419  0A07  00F1               	movwf	UART_ReadFromGPS_TO@TimeOut
  2420  0A08  087B               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  2421  0A09  120A  158A  23D6  120A  158A  	fcall	_UART_ReadFromGPS_TO
  2422                           
  2423                           ;gsk_usart.c: 116: return IsValidGPS(Output);
  2424  0A0E  087B               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  2425  0A0F  120A  158A  2382   	fcall	_IsValidGPS
  2426  0A12  0008               	return
  2427  0A13                     __end_of_UART_ReadValidTimeFromGPS_TO:	
  2428                           
  2429                           	psect	text6
  2430  0BD6                     __ptext6:	
  2431 ;; *************** function _UART_ReadFromGPS_TO *****************
  2432 ;; Defined at:
  2433 ;;		line 80 in file "libs/gsk_usart.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  Output          1    wreg     PTR unsigned char 
  2436 ;;		 -> main@GPSDate(6), 
  2437 ;;  TimeOut         1    1[COMMON] unsigned char 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  Output          1    6[COMMON] PTR unsigned char 
  2440 ;;		 -> main@GPSDate(6), 
  2441 ;;  i               2    4[COMMON] unsigned int 
  2442 ;;  Pos             1    8[COMMON] unsigned char 
  2443 ;;  TempChar        1    7[COMMON] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         1       0       0       0       0
  2454 ;;      Locals:         5       0       0       0       0
  2455 ;;      Temps:          2       0       0       0       0
  2456 ;;      Totals:         8       0       0       0       0
  2457 ;;Total ram usage:        8 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		_UART_Read_TO
  2462 ;; This function is called by:
  2463 ;;		_UART_ReadValidTimeFromGPS_TO
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _UART_ReadFromGPS_TO
  2469  0BD6                     _UART_ReadFromGPS_TO:	
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in _UART_ReadFromGPS_TO: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2473                           ;UART_ReadFromGPS_TO@Output stored from wreg
  2474  0BD6  00F6               	movwf	UART_ReadFromGPS_TO@Output
  2475                           
  2476                           ;gsk_usart.c: 81: Output[0]=0x00;
  2477  0BD7  0876               	movf	UART_ReadFromGPS_TO@Output,w
  2478  0BD8  0084               	movwf	4
  2479  0BD9  1383               	bcf	3,7	;select IRP bank0
  2480  0BDA  0180               	clrf	0
  2481                           
  2482                           ;gsk_usart.c: 82: const char StartCode[7]="$GPRMC,";
  2483                           ;gsk_usart.c: 83: char Pos=0x00;
  2484  0BDB  01F8               	clrf	UART_ReadFromGPS_TO@Pos
  2485                           
  2486                           ;gsk_usart.c: 84: char TempChar = 0x00;
  2487  0BDC  01F7               	clrf	UART_ReadFromGPS_TO@TempChar
  2488                           
  2489                           ;gsk_usart.c: 85: CREN = 0;
  2490  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0BDF  1218               	bcf	24,4	;volatile
  2493                           
  2494                           ;gsk_usart.c: 86: CREN = 1;
  2495  0BE0  1618               	bsf	24,4	;volatile
  2496                           
  2497                           ;gsk_usart.c: 87: for(uint16_t i=0; i<=768; i++) {
  2498  0BE1  01F4               	clrf	UART_ReadFromGPS_TO@i
  2499  0BE2  01F5               	clrf	UART_ReadFromGPS_TO@i+1
  2500  0BE3  3003               	movlw	3
  2501  0BE4  0275               	subwf	UART_ReadFromGPS_TO@i+1,w
  2502  0BE5  3001               	movlw	1
  2503  0BE6  1903               	skipnz
  2504  0BE7  0274               	subwf	UART_ReadFromGPS_TO@i,w
  2505  0BE8  1803               	btfsc	3,0
  2506  0BE9  2C2D               	goto	l141
  2507  0BEA                     l2315:	
  2508                           
  2509                           ;gsk_usart.c: 89: TempChar = UART_Read_TO(TimeOut);
  2510  0BEA  0871               	movf	UART_ReadFromGPS_TO@TimeOut,w
  2511  0BEB  120A  158A  2213  120A  158A  	fcall	_UART_Read_TO
  2512  0BF0  00F2               	movwf	??_UART_ReadFromGPS_TO
  2513  0BF1  0872               	movf	??_UART_ReadFromGPS_TO,w
  2514  0BF2  00F7               	movwf	UART_ReadFromGPS_TO@TempChar
  2515                           
  2516                           ;gsk_usart.c: 90: if ((Pos>=0x07) & (Pos<=0x0c)) {
  2517  0BF3  3007               	movlw	7
  2518  0BF4  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2519  0BF5  1C03               	skipc
  2520  0BF6  2C07               	goto	l2325
  2521  0BF7  300D               	movlw	13
  2522  0BF8  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2523  0BF9  1803               	skipnc
  2524  0BFA  2C07               	goto	l2325
  2525                           
  2526                           ;gsk_usart.c: 91: Output[Pos-0x07]= TempChar;
  2527  0BFB  0877               	movf	UART_ReadFromGPS_TO@TempChar,w
  2528  0BFC  00F2               	movwf	??_UART_ReadFromGPS_TO
  2529  0BFD  0878               	movf	UART_ReadFromGPS_TO@Pos,w
  2530  0BFE  3EF9               	addlw	-7
  2531  0BFF  0776               	addwf	UART_ReadFromGPS_TO@Output,w
  2532  0C00  00F3               	movwf	??_UART_ReadFromGPS_TO+1
  2533  0C01  0873               	movf	??_UART_ReadFromGPS_TO+1,w
  2534  0C02  0084               	movwf	4
  2535  0C03  0872               	movf	??_UART_ReadFromGPS_TO,w
  2536  0C04  1383               	bcf	3,7	;select IRP bank0
  2537  0C05  0080               	movwf	0
  2538  0C06  2C16               	goto	l2329
  2539  0C07                     l2325:	
  2540                           ;gsk_usart.c: 93: } else if ((StartCode[Pos] == TempChar) && (Pos<0x07)) {
  2541                           
  2542                           ;gsk_usart.c: 92: Pos++;
  2543                           
  2544  0C07  0878               	movf	UART_ReadFromGPS_TO@Pos,w
  2545  0C08  3E08               	addlw	low ((UART_ReadFromGPS_TO@StartCode-__stringbase)| (0+32768))
  2546  0C09  0084               	movwf	4
  2547  0C0A  120A  158A  2000  120A  158A  	fcall	stringdir
  2548  0C0F  0677               	xorwf	UART_ReadFromGPS_TO@TempChar,w
  2549  0C10  1D03               	skipz
  2550  0C11  2C1B               	goto	l2331
  2551  0C12  3007               	movlw	7
  2552  0C13  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2553  0C14  1803               	skipnc
  2554  0C15  2C1B               	goto	l2331
  2555  0C16                     l2329:	
  2556                           
  2557                           ;gsk_usart.c: 94: Pos++;
  2558  0C16  3001               	movlw	1
  2559  0C17  00F2               	movwf	??_UART_ReadFromGPS_TO
  2560  0C18  0872               	movf	??_UART_ReadFromGPS_TO,w
  2561  0C19  07F8               	addwf	UART_ReadFromGPS_TO@Pos,f
  2562                           
  2563                           ;gsk_usart.c: 95: } else if (Pos>0x0c)
  2564  0C1A  2C20               	goto	l2339
  2565  0C1B                     l2331:	
  2566  0C1B  300D               	movlw	13
  2567  0C1C  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2568  0C1D  1803               	btfsc	3,0
  2569  0C1E  0008               	return
  2570                           
  2571                           ;gsk_usart.c: 97: else
  2572                           ;gsk_usart.c: 98: Pos=0;
  2573                           
  2574                           ;gsk_usart.c: 96: return;
  2575  0C1F  01F8               	clrf	UART_ReadFromGPS_TO@Pos
  2576  0C20                     l2339:	
  2577  0C20  3001               	movlw	1
  2578  0C21  07F4               	addwf	UART_ReadFromGPS_TO@i,f
  2579  0C22  1803               	skipnc
  2580  0C23  0AF5               	incf	UART_ReadFromGPS_TO@i+1,f
  2581  0C24  3000               	movlw	0
  2582  0C25  07F5               	addwf	UART_ReadFromGPS_TO@i+1,f
  2583  0C26  3003               	movlw	3
  2584  0C27  0275               	subwf	UART_ReadFromGPS_TO@i+1,w
  2585  0C28  3001               	movlw	1
  2586  0C29  1903               	skipnz
  2587  0C2A  0274               	subwf	UART_ReadFromGPS_TO@i,w
  2588  0C2B  1C03               	skipc
  2589  0C2C  2BEA               	goto	l2315
  2590  0C2D                     l141:	
  2591                           
  2592                           ;gsk_usart.c: 99: }
  2593                           ;gsk_usart.c: 100: CREN = 0;
  2594  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0C2F  1218               	bcf	24,4	;volatile
  2597  0C30  0008               	return
  2598  0C31                     __end_of_UART_ReadFromGPS_TO:	
  2599                           
  2600                           	psect	text7
  2601  0A13                     __ptext7:	
  2602 ;; *************** function _UART_Read_TO *****************
  2603 ;; Defined at:
  2604 ;;		line 103 in file "libs/gsk_usart.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  TimeOut         1    wreg     unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  TimeOut         1    0[COMMON] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      unsigned char 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       0       0       0       0
  2619 ;;      Locals:         1       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0
  2621 ;;      Totals:         1       0       0       0       0
  2622 ;;Total ram usage:        1 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_UART_ReadFromGPS_TO
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function _UART_Read_TO
  2633  0A13                     _UART_Read_TO:	
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in _UART_Read_TO: [wreg+status,2+status,0]
  2637                           ;UART_Read_TO@TimeOut stored from wreg
  2638  0A13  00F0               	movwf	UART_Read_TO@TimeOut
  2639                           
  2640                           ;gsk_usart.c: 104: while(!RCIF && TimeOut !=0) {
  2641  0A14  2A18               	goto	l2137
  2642  0A15                     l152:	
  2643                           
  2644                           ;gsk_usart.c: 105: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2645  0A15  0000               	nop
  2646                           
  2647                           ;gsk_usart.c: 106: TimeOut--;
  2648  0A16  3001               	movlw	1
  2649  0A17  02F0               	subwf	UART_Read_TO@TimeOut,f
  2650  0A18                     l2137:	
  2651  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0A19  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0A1A  1A8C               	btfsc	12,5	;volatile
  2654  0A1B  2A1F               	goto	l155
  2655  0A1C  0870               	movf	UART_Read_TO@TimeOut,w
  2656  0A1D  1D03               	btfss	3,2
  2657  0A1E  2A15               	goto	l152
  2658  0A1F                     l155:	
  2659                           
  2660                           ;gsk_usart.c: 107: }
  2661                           ;gsk_usart.c: 108: if (RCIF)
  2662  0A1F  1E8C               	btfss	12,5	;volatile
  2663  0A20  2A23               	goto	l2147
  2664                           
  2665                           ;gsk_usart.c: 109: return RCREG;
  2666  0A21  081A               	movf	26,w	;volatile
  2667  0A22  0008               	return
  2668  0A23                     l2147:	
  2669                           
  2670                           ;gsk_usart.c: 110: else
  2671                           ;gsk_usart.c: 111: return 0x41;
  2672  0A23  3041               	movlw	65
  2673  0A24  0008               	return
  2674  0A25                     __end_of_UART_Read_TO:	
  2675                           
  2676                           	psect	text8
  2677  0B82                     __ptext8:	
  2678 ;; *************** function _IsValidGPS *****************
  2679 ;; Defined at:
  2680 ;;		line 120 in file "libs/gsk_usart.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  GPSData         1    wreg     PTR unsigned char 
  2683 ;;		 -> main@GPSDate(6), 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  GPSData         1    1[COMMON] PTR unsigned char 
  2686 ;;		 -> main@GPSDate(6), 
  2687 ;;  Result          1    0[COMMON] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      unsigned char 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2697 ;;      Params:         0       0       0       0       0
  2698 ;;      Locals:         2       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0
  2700 ;;      Totals:         2       0       0       0       0
  2701 ;;Total ram usage:        2 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_UART_ReadValidTimeFromGPS_TO
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _IsValidGPS
  2712  0B82                     _IsValidGPS:	
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _IsValidGPS: [wreg-fsr0h+status,2+status,0]
  2716                           ;IsValidGPS@GPSData stored from wreg
  2717  0B82  00F1               	movwf	IsValidGPS@GPSData
  2718                           
  2719                           ;gsk_usart.c: 121: bool Result;
  2720                           ;gsk_usart.c: 122: if (GPSData[0]<0x30 || GPSData[0]>0x32)
  2721  0B83  0871               	movf	IsValidGPS@GPSData,w
  2722  0B84  0084               	movwf	4
  2723  0B85  3030               	movlw	48
  2724  0B86  1383               	bcf	3,7	;select IRP bank0
  2725  0B87  0200               	subwf	0,w
  2726  0B88  1C03               	skipc
  2727  0B89  2B8F               	goto	l2347
  2728  0B8A  0871               	movf	IsValidGPS@GPSData,w
  2729  0B8B  0084               	movwf	4
  2730  0B8C  3033               	movlw	51
  2731  0B8D  0200               	subwf	0,w
  2732  0B8E  1803               	btfsc	3,0
  2733  0B8F                     l2347:	
  2734                           
  2735                           ;gsk_usart.c: 123: Result = 0;
  2736  0B8F  01F0               	clrf	IsValidGPS@Result
  2737                           
  2738                           ;gsk_usart.c: 124: if (GPSData[1]<0x30 || GPSData[1]>0x39)
  2739  0B90  0A71               	incf	IsValidGPS@GPSData,w
  2740  0B91  0084               	movwf	4
  2741  0B92  3030               	movlw	48
  2742  0B93  0200               	subwf	0,w
  2743  0B94  1C03               	skipc
  2744  0B95  2B9B               	goto	l2353
  2745  0B96  0A71               	incf	IsValidGPS@GPSData,w
  2746  0B97  0084               	movwf	4
  2747  0B98  303A               	movlw	58
  2748  0B99  0200               	subwf	0,w
  2749  0B9A  1803               	btfsc	3,0
  2750  0B9B                     l2353:	
  2751                           
  2752                           ;gsk_usart.c: 125: Result = 0;
  2753  0B9B  01F0               	clrf	IsValidGPS@Result
  2754                           
  2755                           ;gsk_usart.c: 126: if (GPSData[2]<0x30 || GPSData[2]>0x36)
  2756  0B9C  0871               	movf	IsValidGPS@GPSData,w
  2757  0B9D  3E02               	addlw	2
  2758  0B9E  0084               	movwf	4
  2759  0B9F  3030               	movlw	48
  2760  0BA0  0200               	subwf	0,w
  2761  0BA1  1C03               	skipc
  2762  0BA2  2BA9               	goto	l2359
  2763  0BA3  0871               	movf	IsValidGPS@GPSData,w
  2764  0BA4  3E02               	addlw	2
  2765  0BA5  0084               	movwf	4
  2766  0BA6  3037               	movlw	55
  2767  0BA7  0200               	subwf	0,w
  2768  0BA8  1803               	btfsc	3,0
  2769  0BA9                     l2359:	
  2770                           
  2771                           ;gsk_usart.c: 127: Result = 0;
  2772  0BA9  01F0               	clrf	IsValidGPS@Result
  2773                           
  2774                           ;gsk_usart.c: 128: if (GPSData[3]<0x30 || GPSData[3]>0x39)
  2775  0BAA  0871               	movf	IsValidGPS@GPSData,w
  2776  0BAB  3E03               	addlw	3
  2777  0BAC  0084               	movwf	4
  2778  0BAD  3030               	movlw	48
  2779  0BAE  0200               	subwf	0,w
  2780  0BAF  1C03               	skipc
  2781  0BB0  2BB7               	goto	l2365
  2782  0BB1  0871               	movf	IsValidGPS@GPSData,w
  2783  0BB2  3E03               	addlw	3
  2784  0BB3  0084               	movwf	4
  2785  0BB4  303A               	movlw	58
  2786  0BB5  0200               	subwf	0,w
  2787  0BB6  1803               	btfsc	3,0
  2788  0BB7                     l2365:	
  2789                           
  2790                           ;gsk_usart.c: 129: Result = 0;
  2791  0BB7  01F0               	clrf	IsValidGPS@Result
  2792                           
  2793                           ;gsk_usart.c: 130: if (GPSData[4]<0x30 || GPSData[4]>0x36)
  2794  0BB8  0871               	movf	IsValidGPS@GPSData,w
  2795  0BB9  3E04               	addlw	4
  2796  0BBA  0084               	movwf	4
  2797  0BBB  3030               	movlw	48
  2798  0BBC  0200               	subwf	0,w
  2799  0BBD  1C03               	skipc
  2800  0BBE  2BC5               	goto	l2371
  2801  0BBF  0871               	movf	IsValidGPS@GPSData,w
  2802  0BC0  3E04               	addlw	4
  2803  0BC1  0084               	movwf	4
  2804  0BC2  3037               	movlw	55
  2805  0BC3  0200               	subwf	0,w
  2806  0BC4  1803               	btfsc	3,0
  2807  0BC5                     l2371:	
  2808                           
  2809                           ;gsk_usart.c: 131: Result = 0;
  2810  0BC5  01F0               	clrf	IsValidGPS@Result
  2811                           
  2812                           ;gsk_usart.c: 132: if (GPSData[5]<0x30 || GPSData[5]>0x39)
  2813  0BC6  0871               	movf	IsValidGPS@GPSData,w
  2814  0BC7  3E05               	addlw	5
  2815  0BC8  0084               	movwf	4
  2816  0BC9  3030               	movlw	48
  2817  0BCA  0200               	subwf	0,w
  2818  0BCB  1C03               	skipc
  2819  0BCC  2BD3               	goto	l2377
  2820  0BCD  0871               	movf	IsValidGPS@GPSData,w
  2821  0BCE  3E05               	addlw	5
  2822  0BCF  0084               	movwf	4
  2823  0BD0  303A               	movlw	58
  2824  0BD1  0200               	subwf	0,w
  2825  0BD2  1803               	btfsc	3,0
  2826  0BD3                     l2377:	
  2827                           
  2828                           ;gsk_usart.c: 133: Result = 0;
  2829  0BD3  01F0               	clrf	IsValidGPS@Result
  2830                           
  2831                           ;gsk_usart.c: 134: return Result;
  2832  0BD4  0870               	movf	IsValidGPS@Result,w
  2833  0BD5  0008               	return
  2834  0BD6                     __end_of_IsValidGPS:	
  2835                           
  2836                           	psect	text9
  2837  00F9                     __ptext9:	
  2838 ;; *************** function _UART_Init *****************
  2839 ;; Defined at:
  2840 ;;		line 3 in file "libs/gsk_usart.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  baudrate        4    0[BANK1 ] const long 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  x               2   10[BANK1 ] unsigned int 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      unsigned char 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       0       4       0       0
  2855 ;;      Locals:         0       0       8       0       0
  2856 ;;      Temps:          0       0       0       0       0
  2857 ;;      Totals:         0       0      12       0       0
  2858 ;;Total ram usage:       12 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    4
  2861 ;; This function calls:
  2862 ;;		___altoft
  2863 ;;		___ftadd
  2864 ;;		___ftdiv
  2865 ;;		___ftmul
  2866 ;;		___fttol
  2867 ;;		_round
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function _UART_Init
  2875  00F9                     _UART_Init:	
  2876                           
  2877                           ;gsk_usart.c: 4: uint16_t x;
  2878                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2882  00F9  3024               	movlw	36
  2883  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  2884  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  2885  00FC  00B5               	movwf	___ftdiv@f1
  2886  00FD  3074               	movlw	116
  2887  00FE  00B6               	movwf	___ftdiv@f1+1
  2888  00FF  304A               	movlw	74
  2889  0100  00B7               	movwf	___ftdiv@f1+2
  2890  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2891  0102  1303               	bcf	3,6	;RP1=0, select bank1
  2892  0103  0823               	movf	(UART_Init@baudrate+3)^(0+128),w
  2893  0104  00FB               	movwf	___altoft@c+3
  2894  0105  0822               	movf	(UART_Init@baudrate+2)^(0+128),w
  2895  0106  00FA               	movwf	___altoft@c+2
  2896  0107  0821               	movf	(UART_Init@baudrate+1)^(0+128),w
  2897  0108  00F9               	movwf	___altoft@c+1
  2898  0109  0820               	movf	UART_Init@baudrate^(0+128),w
  2899  010A  00F8               	movwf	___altoft@c
  2900  010B  120A  158A  2342  120A  118A  	fcall	___altoft
  2901  0110  0878               	movf	?___altoft,w
  2902  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0113  00A5               	movwf	___ftmul@f2
  2905  0114  0879               	movf	?___altoft+1,w
  2906  0115  00A6               	movwf	___ftmul@f2+1
  2907  0116  087A               	movf	?___altoft+2,w
  2908  0117  00A7               	movwf	___ftmul@f2+2
  2909  0118  3000               	movlw	0
  2910  0119  00A2               	movwf	___ftmul@f1
  2911  011A  3080               	movlw	128
  2912  011B  00A3               	movwf	___ftmul@f1+1
  2913  011C  3040               	movlw	64
  2914  011D  00A4               	movwf	___ftmul@f1+2
  2915  011E  120A  118A  2268  120A  118A  	fcall	___ftmul
  2916  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0125  0822               	movf	?___ftmul,w
  2919  0126  00B2               	movwf	___ftdiv@f2
  2920  0127  0823               	movf	?___ftmul+1,w
  2921  0128  00B3               	movwf	___ftdiv@f2+1
  2922  0129  0824               	movf	?___ftmul+2,w
  2923  012A  00B4               	movwf	___ftdiv@f2+2
  2924  012B  120A  118A  21B0  120A  118A  	fcall	___ftdiv
  2925  0130  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0131  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0132  0832               	movf	?___ftdiv,w
  2928  0133  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0134  1303               	bcf	3,6	;RP1=0, select bank1
  2930  0135  00A4               	movwf	_UART_Init$845^(0+128)
  2931  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0138  0833               	movf	?___ftdiv+1,w
  2934  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2935  013A  1303               	bcf	3,6	;RP1=0, select bank1
  2936  013B  00A5               	movwf	(_UART_Init$845+1)^(0+128)
  2937  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2938  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2939  013E  0834               	movf	?___ftdiv+2,w
  2940  013F  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0140  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0141  00A6               	movwf	(_UART_Init$845+2)^(0+128)
  2943                           
  2944                           ;gsk_usart.c: 4: uint16_t x;
  2945                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  2946  0142  0824               	movf	_UART_Init$845^(0+128),w
  2947  0143  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0144  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0145  00E9               	movwf	round@x
  2950  0146  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0147  1303               	bcf	3,6	;RP1=0, select bank1
  2952  0148  0825               	movf	(_UART_Init$845+1)^(0+128),w
  2953  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2954  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2955  014B  00EA               	movwf	round@x+1
  2956  014C  1683               	bsf	3,5	;RP0=1, select bank1
  2957  014D  1303               	bcf	3,6	;RP1=0, select bank1
  2958  014E  0826               	movf	(_UART_Init$845+2)^(0+128),w
  2959  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0151  00EB               	movwf	round@x+2
  2962  0152  120A  158A  2431  120A  118A  	fcall	_round
  2963  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0159  0869               	movf	?_round,w
  2966  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2967  015B  1303               	bcf	3,6	;RP1=0, select bank1
  2968  015C  00A7               	movwf	_UART_Init$846^(0+128)
  2969  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2970  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2971  015F  086A               	movf	?_round+1,w
  2972  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2973  0161  1303               	bcf	3,6	;RP1=0, select bank1
  2974  0162  00A8               	movwf	(_UART_Init$846+1)^(0+128)
  2975  0163  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0164  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0165  086B               	movf	?_round+2,w
  2978  0166  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0167  1303               	bcf	3,6	;RP1=0, select bank1
  2980  0168  00A9               	movwf	(_UART_Init$846+2)^(0+128)
  2981                           
  2982                           ;gsk_usart.c: 4: uint16_t x;
  2983                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  2984  0169  0827               	movf	_UART_Init$846^(0+128),w
  2985  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2986  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2987  016C  00C5               	movwf	___ftadd@f2
  2988  016D  1683               	bsf	3,5	;RP0=1, select bank1
  2989  016E  1303               	bcf	3,6	;RP1=0, select bank1
  2990  016F  0828               	movf	(_UART_Init$846+1)^(0+128),w
  2991  0170  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0171  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0172  00C6               	movwf	___ftadd@f2+1
  2994  0173  1683               	bsf	3,5	;RP0=1, select bank1
  2995  0174  1303               	bcf	3,6	;RP1=0, select bank1
  2996  0175  0829               	movf	(_UART_Init$846+2)^(0+128),w
  2997  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0178  00C7               	movwf	___ftadd@f2+2
  3000  0179  3000               	movlw	0
  3001  017A  00C2               	movwf	___ftadd@f1
  3002  017B  3080               	movlw	128
  3003  017C  00C3               	movwf	___ftadd@f1+1
  3004  017D  30BF               	movlw	191
  3005  017E  00C4               	movwf	___ftadd@f1+2
  3006  017F  120A  118A  233B  120A  118A  	fcall	___ftadd
  3007  0184  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0185  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0186  0842               	movf	?___ftadd,w
  3010  0187  00CF               	movwf	___fttol@f1
  3011  0188  0843               	movf	?___ftadd+1,w
  3012  0189  00D0               	movwf	___fttol@f1+1
  3013  018A  0844               	movf	?___ftadd+2,w
  3014  018B  00D1               	movwf	___fttol@f1+2
  3015  018C  120A  158A  24FD   	fcall	___fttol
  3016  018F  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0190  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0191  0850               	movf	?___fttol+1,w
  3019  0192  1683               	bsf	3,5	;RP0=1, select bank1
  3020  0193  1303               	bcf	3,6	;RP1=0, select bank1
  3021  0194  00AB               	movwf	(UART_Init@x+1)^(0+128)
  3022  0195  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0196  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0197  084F               	movf	?___fttol,w
  3025  0198  1683               	bsf	3,5	;RP0=1, select bank1
  3026  0199  1303               	bcf	3,6	;RP1=0, select bank1
  3027  019A  00AA               	movwf	UART_Init@x^(0+128)
  3028                           
  3029                           ;gsk_usart.c: 6: SPBRG = x;
  3030  019B  082A               	movf	UART_Init@x^(0+128),w
  3031  019C  0099               	movwf	25	;volatile
  3032                           
  3033                           ;gsk_usart.c: 7: SPBRGH = (x>>8);
  3034  019D  082B               	movf	(UART_Init@x+1)^(0+128),w
  3035  019E  009A               	movwf	26	;volatile
  3036                           
  3037                           ;gsk_usart.c: 8: BRGH = 1;
  3038  019F  1518               	bsf	24,2	;volatile
  3039                           
  3040                           ;gsk_usart.c: 9: BRG16 = 1;
  3041  01A0  1683               	bsf	3,5	;RP0=1, select bank3
  3042  01A1  1703               	bsf	3,6	;RP1=1, select bank3
  3043  01A2  1587               	bsf	7,3	;volatile
  3044                           
  3045                           ;gsk_usart.c: 10: CREN = 1;
  3046  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  3047  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  3048  01A5  1618               	bsf	24,4	;volatile
  3049                           
  3050                           ;gsk_usart.c: 11: SYNC = 0;
  3051  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  3052  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  3053  01A8  1218               	bcf	24,4	;volatile
  3054                           
  3055                           ;gsk_usart.c: 12: SPEN = 1;
  3056  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3057  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3058  01AB  1798               	bsf	24,7	;volatile
  3059                           
  3060                           ;gsk_usart.c: 15: TXEN = 1;
  3061  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  3062  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  3063  01AE  1698               	bsf	24,5	;volatile
  3064  01AF  0008               	return
  3065  01B0                     __end_of_UART_Init:	
  3066                           ;gsk_usart.c: 16: return 1;
  3067                           ;	Return value of _UART_Init is never used
  3068                           
  3069                           
  3070                           	psect	text10
  3071  0C31                     __ptext10:	
  3072 ;; *************** function _round *****************
  3073 ;; Defined at:
  3074 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\round.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  x               3   73[BANK0 ] unsigned char 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  f               3   76[BANK0 ] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  3   73[BANK0 ] unsigned char 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         0       3       0       0       0
  3089 ;;      Locals:         0       3       0       0       0
  3090 ;;      Temps:          0       0       0       0       0
  3091 ;;      Totals:         0       6       0       0       0
  3092 ;;Total ram usage:        6 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    3
  3095 ;; This function calls:
  3096 ;;		___ftadd
  3097 ;;		___ftneg
  3098 ;;		_trunc
  3099 ;; This function is called by:
  3100 ;;		_UART_Init
  3101 ;;		_AdjustSec
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _round
  3107  0C31                     _round:	
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3111  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0C33  0869               	movf	round@x,w
  3114  0C34  00C2               	movwf	___ftadd@f1
  3115  0C35  086A               	movf	round@x+1,w
  3116  0C36  00C3               	movwf	___ftadd@f1+1
  3117  0C37  086B               	movf	round@x+2,w
  3118  0C38  00C4               	movwf	___ftadd@f1+2
  3119  0C39  0869               	movf	round@x,w
  3120  0C3A  00DD               	movwf	trunc@x
  3121  0C3B  086A               	movf	round@x+1,w
  3122  0C3C  00DE               	movwf	trunc@x+1
  3123  0C3D  086B               	movf	round@x+2,w
  3124  0C3E  00DF               	movwf	trunc@x+2
  3125  0C3F  120A  118A  2003  120A  158A  	fcall	_trunc
  3126  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0C46  085D               	movf	?_trunc,w
  3129  0C47  00E6               	movwf	___ftneg@f1
  3130  0C48  085E               	movf	?_trunc+1,w
  3131  0C49  00E7               	movwf	___ftneg@f1+1
  3132  0C4A  085F               	movf	?_trunc+2,w
  3133  0C4B  00E8               	movwf	___ftneg@f1+2
  3134  0C4C  120A  158A  21F9  120A  158A  	fcall	___ftneg
  3135  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0C53  0866               	movf	?___ftneg,w
  3138  0C54  00C5               	movwf	___ftadd@f2
  3139  0C55  0867               	movf	?___ftneg+1,w
  3140  0C56  00C6               	movwf	___ftadd@f2+1
  3141  0C57  0868               	movf	?___ftneg+2,w
  3142  0C58  00C7               	movwf	___ftadd@f2+2
  3143  0C59  120A  118A  233B  120A  158A  	fcall	___ftadd
  3144  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0C60  0842               	movf	?___ftadd,w
  3147  0C61  00EC               	movwf	round@f
  3148  0C62  0843               	movf	?___ftadd+1,w
  3149  0C63  00ED               	movwf	round@f+1
  3150  0C64  0844               	movf	?___ftadd+2,w
  3151  0C65  00EE               	movwf	round@f+2
  3152  0C66  086C               	movf	round@f,w
  3153  0C67  00C2               	movwf	___ftadd@f1
  3154  0C68  086D               	movf	round@f+1,w
  3155  0C69  00C3               	movwf	___ftadd@f1+1
  3156  0C6A  086E               	movf	round@f+2,w
  3157  0C6B  00C4               	movwf	___ftadd@f1+2
  3158  0C6C  0869               	movf	round@x,w
  3159  0C6D  00C5               	movwf	___ftadd@f2
  3160  0C6E  086A               	movf	round@x+1,w
  3161  0C6F  00C6               	movwf	___ftadd@f2+1
  3162  0C70  086B               	movf	round@x+2,w
  3163  0C71  00C7               	movwf	___ftadd@f2+2
  3164  0C72  120A  118A  233B  120A  158A  	fcall	___ftadd
  3165  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0C79  0842               	movf	?___ftadd,w
  3168  0C7A  00E9               	movwf	round@x
  3169  0C7B  0843               	movf	?___ftadd+1,w
  3170  0C7C  00EA               	movwf	round@x+1
  3171  0C7D  0844               	movf	?___ftadd+2,w
  3172  0C7E  00EB               	movwf	round@x+2
  3173  0C7F  0869               	movf	round@x,w
  3174  0C80  00DD               	movwf	trunc@x
  3175  0C81  086A               	movf	round@x+1,w
  3176  0C82  00DE               	movwf	trunc@x+1
  3177  0C83  086B               	movf	round@x+2,w
  3178  0C84  00DF               	movwf	trunc@x+2
  3179  0C85  120A  118A  2003   	fcall	_trunc
  3180  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0C8A  085D               	movf	?_trunc,w
  3183  0C8B  00E9               	movwf	?_round
  3184  0C8C  085E               	movf	?_trunc+1,w
  3185  0C8D  00EA               	movwf	?_round+1
  3186  0C8E  085F               	movf	?_trunc+2,w
  3187  0C8F  00EB               	movwf	?_round+2
  3188  0C90  0008               	return
  3189  0C91                     __end_of_round:	
  3190                           
  3191                           	psect	text11
  3192  0003                     __ptext11:	
  3193 ;; *************** function _trunc *****************
  3194 ;; Defined at:
  3195 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\trunc.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  x               3   61[BANK0 ] unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  i               3   65[BANK0 ] unsigned char 
  3200 ;;  expon           2   68[BANK0 ] int 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  3   61[BANK0 ] int 
  3203 ;; Registers used:
  3204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         0       3       0       0       0
  3211 ;;      Locals:         0       5       0       0       0
  3212 ;;      Temps:          0       1       0       0       0
  3213 ;;      Totals:         0       9       0       0       0
  3214 ;;Total ram usage:        9 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    2
  3217 ;; This function calls:
  3218 ;;		___altoft
  3219 ;;		___fttol
  3220 ;;		_frexp
  3221 ;; This function is called by:
  3222 ;;		_round
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function _trunc
  3228  0003                     _trunc:	
  3229                           
  3230                           ;incstack = 0
  3231                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3232  0003  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0004  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0005  085D               	movf	trunc@x,w
  3235  0006  00F0               	movwf	frexp@value
  3236  0007  085E               	movf	trunc@x+1,w
  3237  0008  00F1               	movwf	frexp@value+1
  3238  0009  085F               	movf	trunc@x+2,w
  3239  000A  00F2               	movwf	frexp@value+2
  3240  000B  3064               	movlw	(low (trunc@expon| 0))& (0+255)
  3241  000C  00E0               	movwf	??_trunc
  3242  000D  0860               	movf	??_trunc,w
  3243  000E  00F3               	movwf	frexp@eptr
  3244  000F  120A  158A  2289  120A  118A  	fcall	_frexp
  3245  0014  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0015  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0016  1FE5               	btfss	trunc@expon+1,7
  3248  0017  281F               	goto	l2265
  3249  0018  3000               	movlw	0
  3250  0019  00DD               	movwf	?_trunc
  3251  001A  3000               	movlw	0
  3252  001B  00DE               	movwf	?_trunc+1
  3253  001C  3000               	movlw	0
  3254  001D  00DF               	movwf	?_trunc+2
  3255  001E  0008               	return
  3256  001F                     l2265:	
  3257  001F  3000               	movlw	0
  3258  0020  0265               	subwf	trunc@expon+1,w
  3259  0021  3015               	movlw	21
  3260  0022  1903               	skipnz
  3261  0023  0264               	subwf	trunc@expon,w
  3262  0024  1803               	btfsc	3,0
  3263  0025  0008               	return
  3264  0026  085D               	movf	trunc@x,w
  3265  0027  00CF               	movwf	___fttol@f1
  3266  0028  085E               	movf	trunc@x+1,w
  3267  0029  00D0               	movwf	___fttol@f1+1
  3268  002A  085F               	movf	trunc@x+2,w
  3269  002B  00D1               	movwf	___fttol@f1+2
  3270  002C  120A  158A  24FD  120A  118A  	fcall	___fttol
  3271  0031  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0032  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0033  0852               	movf	?___fttol+3,w
  3274  0034  00FB               	movwf	___altoft@c+3
  3275  0035  0851               	movf	?___fttol+2,w
  3276  0036  00FA               	movwf	___altoft@c+2
  3277  0037  0850               	movf	?___fttol+1,w
  3278  0038  00F9               	movwf	___altoft@c+1
  3279  0039  084F               	movf	?___fttol,w
  3280  003A  00F8               	movwf	___altoft@c
  3281  003B  120A  158A  2342   	fcall	___altoft
  3282  003E  0878               	movf	?___altoft,w
  3283  003F  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0040  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0041  00E1               	movwf	trunc@i
  3286  0042  0879               	movf	?___altoft+1,w
  3287  0043  00E2               	movwf	trunc@i+1
  3288  0044  087A               	movf	?___altoft+2,w
  3289  0045  00E3               	movwf	trunc@i+2
  3290  0046  0861               	movf	trunc@i,w
  3291  0047  00DD               	movwf	?_trunc
  3292  0048  0862               	movf	trunc@i+1,w
  3293  0049  00DE               	movwf	?_trunc+1
  3294  004A  0863               	movf	trunc@i+2,w
  3295  004B  00DF               	movwf	?_trunc+2
  3296  004C  0008               	return
  3297  004D                     __end_of_trunc:	
  3298                           
  3299                           	psect	text12
  3300  0A89                     __ptext12:	
  3301 ;; *************** function _frexp *****************
  3302 ;; Defined at:
  3303 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  value           3    0[COMMON] int 
  3306 ;;  eptr            1    3[COMMON] PTR int 
  3307 ;;		 -> trunc@expon(2), 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  3    0[COMMON] PTR int 
  3312 ;; Registers used:
  3313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         4       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0
  3321 ;;      Temps:          2       0       0       0       0
  3322 ;;      Totals:         6       0       0       0       0
  3323 ;;Total ram usage:        6 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_trunc
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function _frexp
  3334  0A89                     _frexp:	
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3338  0A89  0872               	movf	frexp@value+2,w
  3339  0A8A  0471               	iorwf	frexp@value+1,w
  3340  0A8B  0470               	iorwf	frexp@value,w
  3341  0A8C  1D03               	skipz
  3342  0A8D  2A95               	goto	l2095
  3343  0A8E  0873               	movf	frexp@eptr,w
  3344  0A8F  0084               	movwf	4
  3345  0A90  1383               	bcf	3,7	;select IRP bank0
  3346  0A91  0180               	clrf	0
  3347  0A92  0A84               	incf	4,f
  3348  0A93  0180               	clrf	0
  3349                           
  3350                           ;	Return value of _frexp is never used
  3351  0A94  0008               	return
  3352  0A95                     l2095:	
  3353  0A95  0872               	movf	frexp@value+2,w
  3354  0A96  397F               	andlw	127
  3355  0A97  00F4               	movwf	??_frexp
  3356  0A98  01F5               	clrf	??_frexp+1
  3357  0A99  1003               	clrc
  3358  0A9A  0DF4               	rlf	??_frexp,f
  3359  0A9B  0DF5               	rlf	??_frexp+1,f
  3360  0A9C  0873               	movf	frexp@eptr,w
  3361  0A9D  0084               	movwf	4
  3362  0A9E  0874               	movf	??_frexp,w
  3363  0A9F  1383               	bcf	3,7	;select IRP bank0
  3364  0AA0  0080               	movwf	0
  3365  0AA1  0A84               	incf	4,f
  3366  0AA2  0875               	movf	??_frexp+1,w
  3367  0AA3  0080               	movwf	0
  3368  0AA4  0D71               	rlf	frexp@value+1,w
  3369  0AA5  0D71               	rlf	frexp@value+1,w
  3370  0AA6  3901               	andlw	1
  3371  0AA7  00F4               	movwf	??_frexp
  3372  0AA8  01F5               	clrf	??_frexp+1
  3373  0AA9  0873               	movf	frexp@eptr,w
  3374  0AAA  0084               	movwf	4
  3375  0AAB  0874               	movf	??_frexp,w
  3376  0AAC  0480               	iorwf	0,f
  3377  0AAD  0A84               	incf	4,f
  3378  0AAE  0875               	movf	??_frexp+1,w
  3379  0AAF  0480               	iorwf	0,f
  3380  0AB0  0873               	movf	frexp@eptr,w
  3381  0AB1  0084               	movwf	4
  3382  0AB2  3082               	movlw	130
  3383  0AB3  0780               	addwf	0,f
  3384  0AB4  0F84               	incfsz	4,f
  3385  0AB5  0800               	movf	0,w
  3386  0AB6  1803               	skipnc
  3387  0AB7  0A00               	incf	0,w
  3388  0AB8  00FF               	movwf	127
  3389  0AB9  30FF               	movlw	255
  3390  0ABA  077F               	addwf	127,w
  3391  0ABB  0080               	movwf	0
  3392  0ABC  0384               	decf	4,f
  3393  0ABD  0872               	movf	frexp@value+2,w
  3394  0ABE  3980               	andlw	-128
  3395  0ABF  383F               	iorlw	63
  3396  0AC0  00F2               	movwf	frexp@value+2
  3397  0AC1  13F1               	bcf	frexp@value+1,7
  3398  0AC2  0008               	return
  3399  0AC3                     __end_of_frexp:	
  3400                           ;	Return value of _frexp is never used
  3401                           
  3402                           
  3403                           	psect	text13
  3404  0CFD                     __ptext13:	
  3405 ;; *************** function ___fttol *****************
  3406 ;; Defined at:
  3407 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  f1              3   47[BANK0 ] float 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  lval            4   56[BANK0 ] unsigned long 
  3412 ;;  exp1            1   60[BANK0 ] unsigned char 
  3413 ;;  sign1           1   55[BANK0 ] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  4   47[BANK0 ] long 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3423 ;;      Params:         0       4       0       0       0
  3424 ;;      Locals:         0       6       0       0       0
  3425 ;;      Temps:          0       4       0       0       0
  3426 ;;      Totals:         0      14       0       0       0
  3427 ;;Total ram usage:       14 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_UART_Init
  3433 ;;		_trunc
  3434 ;;		_AdjustSec
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function ___fttol
  3440  0CFD                     ___fttol:	
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3444  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0CFF  084F               	movf	___fttol@f1,w
  3447  0D00  00D3               	movwf	??___fttol
  3448  0D01  0850               	movf	___fttol@f1+1,w
  3449  0D02  00D4               	movwf	??___fttol+1
  3450  0D03  0851               	movf	___fttol@f1+2,w
  3451  0D04  00D5               	movwf	??___fttol+2
  3452  0D05  1003               	clrc
  3453  0D06  0D54               	rlf	??___fttol+1,w
  3454  0D07  0D55               	rlf	??___fttol+2,w
  3455  0D08  00D6               	movwf	??___fttol+3
  3456  0D09  0856               	movf	??___fttol+3,w
  3457  0D0A  00DC               	movwf	___fttol@exp1
  3458  0D0B  085C               	movf	___fttol@exp1,w
  3459  0D0C  1D03               	btfss	3,2
  3460  0D0D  2D17               	goto	l2053
  3461  0D0E  3000               	movlw	0
  3462  0D0F  00D2               	movwf	?___fttol+3
  3463  0D10  3000               	movlw	0
  3464  0D11  00D1               	movwf	?___fttol+2
  3465  0D12  3000               	movlw	0
  3466  0D13  00D0               	movwf	?___fttol+1
  3467  0D14  3000               	movlw	0
  3468  0D15  00CF               	movwf	?___fttol
  3469  0D16  0008               	return
  3470  0D17                     l2053:	
  3471  0D17  084F               	movf	___fttol@f1,w
  3472  0D18  00D3               	movwf	??___fttol
  3473  0D19  0850               	movf	___fttol@f1+1,w
  3474  0D1A  00D4               	movwf	??___fttol+1
  3475  0D1B  0851               	movf	___fttol@f1+2,w
  3476  0D1C  00D5               	movwf	??___fttol+2
  3477  0D1D  3017               	movlw	23
  3478  0D1E                     u2385:	
  3479  0D1E  1003               	clrc
  3480  0D1F  0CD5               	rrf	??___fttol+2,f
  3481  0D20  0CD4               	rrf	??___fttol+1,f
  3482  0D21  0CD3               	rrf	??___fttol,f
  3483  0D22  3EFF               	addlw	-1
  3484  0D23  1D03               	skipz
  3485  0D24  2D1E               	goto	u2385
  3486  0D25  0853               	movf	??___fttol,w
  3487  0D26  00D6               	movwf	??___fttol+3
  3488  0D27  0856               	movf	??___fttol+3,w
  3489  0D28  00D7               	movwf	___fttol@sign1
  3490  0D29  17D0               	bsf	___fttol@f1+1,7
  3491  0D2A  30FF               	movlw	255
  3492  0D2B  05CF               	andwf	___fttol@f1,f
  3493  0D2C  30FF               	movlw	255
  3494  0D2D  05D0               	andwf	___fttol@f1+1,f
  3495  0D2E  3000               	movlw	0
  3496  0D2F  05D1               	andwf	___fttol@f1+2,f
  3497  0D30  084F               	movf	___fttol@f1,w
  3498  0D31  00D8               	movwf	___fttol@lval
  3499  0D32  0850               	movf	___fttol@f1+1,w
  3500  0D33  00D9               	movwf	___fttol@lval+1
  3501  0D34  0851               	movf	___fttol@f1+2,w
  3502  0D35  00DA               	movwf	___fttol@lval+2
  3503  0D36  01DB               	clrf	___fttol@lval+3
  3504  0D37  308E               	movlw	142
  3505  0D38  02DC               	subwf	___fttol@exp1,f
  3506  0D39  1FDC               	btfss	___fttol@exp1,7
  3507  0D3A  2D59               	goto	l2073
  3508  0D3B  085C               	movf	___fttol@exp1,w
  3509  0D3C  3A80               	xorlw	128
  3510  0D3D  3E8F               	addlw	143
  3511  0D3E  1803               	skipnc
  3512  0D3F  2D49               	goto	l2071
  3513  0D40  3000               	movlw	0
  3514  0D41  00D2               	movwf	?___fttol+3
  3515  0D42  3000               	movlw	0
  3516  0D43  00D1               	movwf	?___fttol+2
  3517  0D44  3000               	movlw	0
  3518  0D45  00D0               	movwf	?___fttol+1
  3519  0D46  3000               	movlw	0
  3520  0D47  00CF               	movwf	?___fttol
  3521  0D48  0008               	return
  3522  0D49                     l2071:	
  3523  0D49  3001               	movlw	1
  3524  0D4A                     u2415:	
  3525  0D4A  1003               	clrc
  3526  0D4B  0CDB               	rrf	___fttol@lval+3,f
  3527  0D4C  0CDA               	rrf	___fttol@lval+2,f
  3528  0D4D  0CD9               	rrf	___fttol@lval+1,f
  3529  0D4E  0CD8               	rrf	___fttol@lval,f
  3530  0D4F  3EFF               	addlw	-1
  3531  0D50  1D03               	skipz
  3532  0D51  2D4A               	goto	u2415
  3533  0D52  3001               	movlw	1
  3534  0D53  00D3               	movwf	??___fttol
  3535  0D54  0853               	movf	??___fttol,w
  3536  0D55  07DC               	addwf	___fttol@exp1,f
  3537  0D56  1903               	btfsc	3,2
  3538  0D57  2D74               	goto	l2081
  3539  0D58  2D49               	goto	l2071
  3540  0D59                     l2073:	
  3541  0D59  3018               	movlw	24
  3542  0D5A  025C               	subwf	___fttol@exp1,w
  3543  0D5B  1C03               	skipc
  3544  0D5C  2D71               	goto	l711
  3545  0D5D  3000               	movlw	0
  3546  0D5E  00D2               	movwf	?___fttol+3
  3547  0D5F  3000               	movlw	0
  3548  0D60  00D1               	movwf	?___fttol+2
  3549  0D61  3000               	movlw	0
  3550  0D62  00D0               	movwf	?___fttol+1
  3551  0D63  3000               	movlw	0
  3552  0D64  00CF               	movwf	?___fttol
  3553  0D65  0008               	return
  3554  0D66                     l2079:	
  3555  0D66  3001               	movlw	1
  3556  0D67  00D3               	movwf	??___fttol
  3557  0D68                     u2445:	
  3558  0D68  1003               	clrc
  3559  0D69  0DD8               	rlf	___fttol@lval,f
  3560  0D6A  0DD9               	rlf	___fttol@lval+1,f
  3561  0D6B  0DDA               	rlf	___fttol@lval+2,f
  3562  0D6C  0DDB               	rlf	___fttol@lval+3,f
  3563  0D6D  0BD3               	decfsz	??___fttol,f
  3564  0D6E  2D68               	goto	u2445
  3565  0D6F  3001               	movlw	1
  3566  0D70  02DC               	subwf	___fttol@exp1,f
  3567  0D71                     l711:	
  3568  0D71  085C               	movf	___fttol@exp1,w
  3569  0D72  1D03               	btfss	3,2
  3570  0D73  2D66               	goto	l2079
  3571  0D74                     l2081:	
  3572  0D74  0857               	movf	___fttol@sign1,w
  3573  0D75  1903               	btfsc	3,2
  3574  0D76  2D82               	goto	l2085
  3575  0D77  09D8               	comf	___fttol@lval,f
  3576  0D78  09D9               	comf	___fttol@lval+1,f
  3577  0D79  09DA               	comf	___fttol@lval+2,f
  3578  0D7A  09DB               	comf	___fttol@lval+3,f
  3579  0D7B  0AD8               	incf	___fttol@lval,f
  3580  0D7C  1903               	skipnz
  3581  0D7D  0AD9               	incf	___fttol@lval+1,f
  3582  0D7E  1903               	skipnz
  3583  0D7F  0ADA               	incf	___fttol@lval+2,f
  3584  0D80  1903               	skipnz
  3585  0D81  0ADB               	incf	___fttol@lval+3,f
  3586  0D82                     l2085:	
  3587  0D82  085B               	movf	___fttol@lval+3,w
  3588  0D83  00D2               	movwf	?___fttol+3
  3589  0D84  085A               	movf	___fttol@lval+2,w
  3590  0D85  00D1               	movwf	?___fttol+2
  3591  0D86  0859               	movf	___fttol@lval+1,w
  3592  0D87  00D0               	movwf	?___fttol+1
  3593  0D88  0858               	movf	___fttol@lval,w
  3594  0D89  00CF               	movwf	?___fttol
  3595  0D8A  0008               	return
  3596  0D8B                     __end_of___fttol:	
  3597                           
  3598                           	psect	text14
  3599  0B42                     __ptext14:	
  3600 ;; *************** function ___altoft *****************
  3601 ;; Defined at:
  3602 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  c               4    8[COMMON] long 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  sign            1    1[BANK0 ] unsigned char 
  3607 ;;  exp             1    0[BANK0 ] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  3    8[COMMON] float 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, pclath, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3617 ;;      Params:         4       0       0       0       0
  3618 ;;      Locals:         0       2       0       0       0
  3619 ;;      Temps:          2       0       0       0       0
  3620 ;;      Totals:         6       2       0       0       0
  3621 ;;Total ram usage:        8 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    1
  3624 ;; This function calls:
  3625 ;;		___ftpack
  3626 ;; This function is called by:
  3627 ;;		_UART_Init
  3628 ;;		_trunc
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function ___altoft
  3634  0B42                     ___altoft:	
  3635                           
  3636                           ;incstack = 0
  3637                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3638  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  3640  0B44  01A1               	clrf	___altoft@sign
  3641  0B45  308E               	movlw	142
  3642  0B46  00FC               	movwf	??___altoft
  3643  0B47  087C               	movf	??___altoft,w
  3644  0B48  00A0               	movwf	___altoft@exp
  3645  0B49  1FFB               	btfss	___altoft@c+3,7
  3646  0B4A  2B58               	goto	l2041
  3647  0B4B  09F8               	comf	___altoft@c,f
  3648  0B4C  09F9               	comf	___altoft@c+1,f
  3649  0B4D  09FA               	comf	___altoft@c+2,f
  3650  0B4E  09FB               	comf	___altoft@c+3,f
  3651  0B4F  0AF8               	incf	___altoft@c,f
  3652  0B50  1903               	skipnz
  3653  0B51  0AF9               	incf	___altoft@c+1,f
  3654  0B52  1903               	skipnz
  3655  0B53  0AFA               	incf	___altoft@c+2,f
  3656  0B54  1903               	skipnz
  3657  0B55  0AFB               	incf	___altoft@c+3,f
  3658  0B56  01A1               	clrf	___altoft@sign
  3659  0B57  0AA1               	incf	___altoft@sign,f
  3660  0B58                     l2041:	
  3661  0B58  30FF               	movlw	255
  3662  0B59  057B               	andwf	___altoft@c+3,w
  3663  0B5A  1903               	btfsc	3,2
  3664  0B5B  2B6A               	goto	l2043
  3665  0B5C  3001               	movlw	1
  3666  0B5D                     u2355:	
  3667  0B5D  1003               	clrc
  3668  0B5E  0CFB               	rrf	___altoft@c+3,f
  3669  0B5F  0CFA               	rrf	___altoft@c+2,f
  3670  0B60  0CF9               	rrf	___altoft@c+1,f
  3671  0B61  0CF8               	rrf	___altoft@c,f
  3672  0B62  3EFF               	addlw	-1
  3673  0B63  1D03               	skipz
  3674  0B64  2B5D               	goto	u2355
  3675  0B65  3001               	movlw	1
  3676  0B66  00FC               	movwf	??___altoft
  3677  0B67  087C               	movf	??___altoft,w
  3678  0B68  07A0               	addwf	___altoft@exp,f
  3679  0B69  2B58               	goto	l2041
  3680  0B6A                     l2043:	
  3681  0B6A  0878               	movf	___altoft@c,w
  3682  0B6B  00F0               	movwf	___ftpack@arg
  3683  0B6C  0879               	movf	___altoft@c+1,w
  3684  0B6D  00F1               	movwf	___ftpack@arg+1
  3685  0B6E  087A               	movf	___altoft@c+2,w
  3686  0B6F  00F2               	movwf	___ftpack@arg+2
  3687  0B70  0820               	movf	___altoft@exp,w
  3688  0B71  00FC               	movwf	??___altoft
  3689  0B72  087C               	movf	??___altoft,w
  3690  0B73  00F3               	movwf	___ftpack@exp
  3691  0B74  0821               	movf	___altoft@sign,w
  3692  0B75  00FD               	movwf	??___altoft+1
  3693  0B76  087D               	movf	??___altoft+1,w
  3694  0B77  00F4               	movwf	___ftpack@sign
  3695  0B78  120A  158A  2491   	fcall	___ftpack
  3696  0B7B  0870               	movf	?___ftpack,w
  3697  0B7C  00F8               	movwf	?___altoft
  3698  0B7D  0871               	movf	?___ftpack+1,w
  3699  0B7E  00F9               	movwf	?___altoft+1
  3700  0B7F  0872               	movf	?___ftpack+2,w
  3701  0B80  00FA               	movwf	?___altoft+2
  3702  0B81  0008               	return
  3703  0B82                     __end_of___altoft:	
  3704                           
  3705                           	psect	text15
  3706  09F9                     __ptext15:	
  3707 ;; *************** function ___ftneg *****************
  3708 ;; Defined at:
  3709 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  f1              3   70[BANK0 ] float 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  3   70[BANK0 ] float 
  3716 ;; Registers used:
  3717 ;;		wreg
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         0       3       0       0       0
  3724 ;;      Locals:         0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0
  3726 ;;      Totals:         0       3       0       0       0
  3727 ;;Total ram usage:        3 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_round
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function ___ftneg
  3738  09F9                     ___ftneg:	
  3739                           
  3740                           ;incstack = 0
  3741                           ; Regs used in ___ftneg: [wreg]
  3742  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  3743  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  3744  09FB  0868               	movf	___ftneg@f1+2,w
  3745  09FC  0467               	iorwf	___ftneg@f1+1,w
  3746  09FD  0466               	iorwf	___ftneg@f1,w
  3747  09FE  1903               	skipnz
  3748  09FF  0008               	return
  3749  0A00  3080               	movlw	128
  3750  0A01  06E8               	xorwf	___ftneg@f1+2,f
  3751  0A02  0008               	return
  3752  0A03                     __end_of___ftneg:	
  3753                           
  3754                           	psect	text16
  3755  033B                     __ptext16:	
  3756 ;; *************** function ___ftadd *****************
  3757 ;; Defined at:
  3758 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  f1              3   34[BANK0 ] float 
  3761 ;;  f2              3   37[BANK0 ] float 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  exp1            1   46[BANK0 ] unsigned char 
  3764 ;;  exp2            1   45[BANK0 ] unsigned char 
  3765 ;;  sign            1   44[BANK0 ] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  3   34[BANK0 ] float 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, pclath, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3775 ;;      Params:         0       6       0       0       0
  3776 ;;      Locals:         0       3       0       0       0
  3777 ;;      Temps:          0       4       0       0       0
  3778 ;;      Totals:         0      13       0       0       0
  3779 ;;Total ram usage:       13 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    1
  3782 ;; This function calls:
  3783 ;;		___ftpack
  3784 ;; This function is called by:
  3785 ;;		_UART_Init
  3786 ;;		_round
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function ___ftadd
  3792  033B                     ___ftadd:	
  3793                           
  3794                           ;incstack = 0
  3795                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3796  033B  1283               	bcf	3,5	;RP0=0, select bank0
  3797  033C  1303               	bcf	3,6	;RP1=0, select bank0
  3798  033D  0842               	movf	___ftadd@f1,w
  3799  033E  00C8               	movwf	??___ftadd
  3800  033F  0843               	movf	___ftadd@f1+1,w
  3801  0340  00C9               	movwf	??___ftadd+1
  3802  0341  0844               	movf	___ftadd@f1+2,w
  3803  0342  00CA               	movwf	??___ftadd+2
  3804  0343  1003               	clrc
  3805  0344  0D49               	rlf	??___ftadd+1,w
  3806  0345  0D4A               	rlf	??___ftadd+2,w
  3807  0346  00CB               	movwf	??___ftadd+3
  3808  0347  084B               	movf	??___ftadd+3,w
  3809  0348  00CE               	movwf	___ftadd@exp1
  3810  0349  0845               	movf	___ftadd@f2,w
  3811  034A  00C8               	movwf	??___ftadd
  3812  034B  0846               	movf	___ftadd@f2+1,w
  3813  034C  00C9               	movwf	??___ftadd+1
  3814  034D  0847               	movf	___ftadd@f2+2,w
  3815  034E  00CA               	movwf	??___ftadd+2
  3816  034F  1003               	clrc
  3817  0350  0D49               	rlf	??___ftadd+1,w
  3818  0351  0D4A               	rlf	??___ftadd+2,w
  3819  0352  00CB               	movwf	??___ftadd+3
  3820  0353  084B               	movf	??___ftadd+3,w
  3821  0354  00CD               	movwf	___ftadd@exp2
  3822  0355  084E               	movf	___ftadd@exp1,w
  3823  0356  1903               	btfsc	3,2
  3824  0357  2B64               	goto	l2185
  3825  0358  084D               	movf	___ftadd@exp2,w
  3826  0359  024E               	subwf	___ftadd@exp1,w
  3827  035A  1803               	skipnc
  3828  035B  2B6B               	goto	l2189
  3829  035C  034E               	decf	___ftadd@exp1,w
  3830  035D  3AFF               	xorlw	255
  3831  035E  074D               	addwf	___ftadd@exp2,w
  3832  035F  00C8               	movwf	??___ftadd
  3833  0360  3019               	movlw	25
  3834  0361  0248               	subwf	??___ftadd,w
  3835  0362  1C03               	skipc
  3836  0363  2B6B               	goto	l2189
  3837  0364                     l2185:	
  3838  0364  0845               	movf	___ftadd@f2,w
  3839  0365  00C2               	movwf	?___ftadd
  3840  0366  0846               	movf	___ftadd@f2+1,w
  3841  0367  00C3               	movwf	?___ftadd+1
  3842  0368  0847               	movf	___ftadd@f2+2,w
  3843  0369  00C4               	movwf	?___ftadd+2
  3844  036A  0008               	return
  3845  036B                     l2189:	
  3846  036B  084D               	movf	___ftadd@exp2,w
  3847  036C  1903               	btfsc	3,2
  3848  036D  0008               	return
  3849  036E  084E               	movf	___ftadd@exp1,w
  3850  036F  024D               	subwf	___ftadd@exp2,w
  3851  0370  1803               	skipnc
  3852  0371  2B7A               	goto	l2195
  3853  0372  034D               	decf	___ftadd@exp2,w
  3854  0373  3AFF               	xorlw	255
  3855  0374  074E               	addwf	___ftadd@exp1,w
  3856  0375  00C8               	movwf	??___ftadd
  3857  0376  3019               	movlw	25
  3858  0377  0248               	subwf	??___ftadd,w
  3859  0378  1803               	btfsc	3,0
  3860  0379  0008               	return
  3861  037A                     l2195:	
  3862  037A  3006               	movlw	6
  3863  037B  00C8               	movwf	??___ftadd
  3864  037C  0848               	movf	??___ftadd,w
  3865  037D  00CC               	movwf	___ftadd@sign
  3866  037E  1BC4               	btfsc	___ftadd@f1+2,7
  3867  037F  17CC               	bsf	___ftadd@sign,7
  3868  0380  1BC7               	btfsc	___ftadd@f2+2,7
  3869  0381  174C               	bsf	___ftadd@sign,6
  3870  0382  17C3               	bsf	___ftadd@f1+1,7
  3871  0383  30FF               	movlw	255
  3872  0384  05C2               	andwf	___ftadd@f1,f
  3873  0385  30FF               	movlw	255
  3874  0386  05C3               	andwf	___ftadd@f1+1,f
  3875  0387  3000               	movlw	0
  3876  0388  05C4               	andwf	___ftadd@f1+2,f
  3877  0389  17C6               	bsf	___ftadd@f2+1,7
  3878  038A  30FF               	movlw	255
  3879  038B  05C5               	andwf	___ftadd@f2,f
  3880  038C  30FF               	movlw	255
  3881  038D  05C6               	andwf	___ftadd@f2+1,f
  3882  038E  3000               	movlw	0
  3883  038F  05C7               	andwf	___ftadd@f2+2,f
  3884  0390  084D               	movf	___ftadd@exp2,w
  3885  0391  024E               	subwf	___ftadd@exp1,w
  3886  0392  1803               	skipnc
  3887  0393  2BBA               	goto	l2217
  3888  0394                     l2207:	
  3889  0394  3001               	movlw	1
  3890  0395                     u3065:	
  3891  0395  1003               	clrc
  3892  0396  0DC5               	rlf	___ftadd@f2,f
  3893  0397  0DC6               	rlf	___ftadd@f2+1,f
  3894  0398  0DC7               	rlf	___ftadd@f2+2,f
  3895  0399  3EFF               	addlw	-1
  3896  039A  1D03               	skipz
  3897  039B  2B95               	goto	u3065
  3898  039C  3001               	movlw	1
  3899  039D  02CD               	subwf	___ftadd@exp2,f
  3900  039E  084D               	movf	___ftadd@exp2,w
  3901  039F  064E               	xorwf	___ftadd@exp1,w
  3902  03A0  1903               	skipnz
  3903  03A1  2BB5               	goto	l2215
  3904  03A2  3001               	movlw	1
  3905  03A3  02CC               	subwf	___ftadd@sign,f
  3906  03A4  084C               	movf	___ftadd@sign,w
  3907  03A5  3907               	andlw	7
  3908  03A6  1903               	btfsc	3,2
  3909  03A7  2BB5               	goto	l2215
  3910  03A8  2B94               	goto	l2207
  3911  03A9                     l2213:	
  3912  03A9  3001               	movlw	1
  3913  03AA                     u3095:	
  3914  03AA  1003               	clrc
  3915  03AB  0CC4               	rrf	___ftadd@f1+2,f
  3916  03AC  0CC3               	rrf	___ftadd@f1+1,f
  3917  03AD  0CC2               	rrf	___ftadd@f1,f
  3918  03AE  3EFF               	addlw	-1
  3919  03AF  1D03               	skipz
  3920  03B0  2BAA               	goto	u3095
  3921  03B1  3001               	movlw	1
  3922  03B2  00C8               	movwf	??___ftadd
  3923  03B3  0848               	movf	??___ftadd,w
  3924  03B4  07CE               	addwf	___ftadd@exp1,f
  3925  03B5                     l2215:	
  3926  03B5  084E               	movf	___ftadd@exp1,w
  3927  03B6  064D               	xorwf	___ftadd@exp2,w
  3928  03B7  1903               	btfsc	3,2
  3929  03B8  2BE3               	goto	l651
  3930  03B9  2BA9               	goto	l2213
  3931  03BA                     l2217:	
  3932  03BA  084E               	movf	___ftadd@exp1,w
  3933  03BB  024D               	subwf	___ftadd@exp2,w
  3934  03BC  1803               	skipnc
  3935  03BD  2BE3               	goto	l651
  3936  03BE                     l2219:	
  3937  03BE  3001               	movlw	1
  3938  03BF                     u3125:	
  3939  03BF  1003               	clrc
  3940  03C0  0DC2               	rlf	___ftadd@f1,f
  3941  03C1  0DC3               	rlf	___ftadd@f1+1,f
  3942  03C2  0DC4               	rlf	___ftadd@f1+2,f
  3943  03C3  3EFF               	addlw	-1
  3944  03C4  1D03               	skipz
  3945  03C5  2BBF               	goto	u3125
  3946  03C6  3001               	movlw	1
  3947  03C7  02CE               	subwf	___ftadd@exp1,f
  3948  03C8  084D               	movf	___ftadd@exp2,w
  3949  03C9  064E               	xorwf	___ftadd@exp1,w
  3950  03CA  1903               	skipnz
  3951  03CB  2BDF               	goto	l2227
  3952  03CC  3001               	movlw	1
  3953  03CD  02CC               	subwf	___ftadd@sign,f
  3954  03CE  084C               	movf	___ftadd@sign,w
  3955  03CF  3907               	andlw	7
  3956  03D0  1903               	btfsc	3,2
  3957  03D1  2BDF               	goto	l2227
  3958  03D2  2BBE               	goto	l2219
  3959  03D3                     l2225:	
  3960  03D3  3001               	movlw	1
  3961  03D4                     u3155:	
  3962  03D4  1003               	clrc
  3963  03D5  0CC7               	rrf	___ftadd@f2+2,f
  3964  03D6  0CC6               	rrf	___ftadd@f2+1,f
  3965  03D7  0CC5               	rrf	___ftadd@f2,f
  3966  03D8  3EFF               	addlw	-1
  3967  03D9  1D03               	skipz
  3968  03DA  2BD4               	goto	u3155
  3969  03DB  3001               	movlw	1
  3970  03DC  00C8               	movwf	??___ftadd
  3971  03DD  0848               	movf	??___ftadd,w
  3972  03DE  07CD               	addwf	___ftadd@exp2,f
  3973  03DF                     l2227:	
  3974  03DF  084E               	movf	___ftadd@exp1,w
  3975  03E0  064D               	xorwf	___ftadd@exp2,w
  3976  03E1  1D03               	skipz
  3977  03E2  2BD3               	goto	l2225
  3978  03E3                     l651:	
  3979  03E3  1FCC               	btfss	___ftadd@sign,7
  3980  03E4  2BF5               	goto	l2231
  3981  03E5  30FF               	movlw	255
  3982  03E6  06C2               	xorwf	___ftadd@f1,f
  3983  03E7  30FF               	movlw	255
  3984  03E8  06C3               	xorwf	___ftadd@f1+1,f
  3985  03E9  30FF               	movlw	255
  3986  03EA  06C4               	xorwf	___ftadd@f1+2,f
  3987  03EB  3001               	movlw	1
  3988  03EC  07C2               	addwf	___ftadd@f1,f
  3989  03ED  3000               	movlw	0
  3990  03EE  1803               	skipnc
  3991  03EF  3001               	movlw	1
  3992  03F0  07C3               	addwf	___ftadd@f1+1,f
  3993  03F1  3000               	movlw	0
  3994  03F2  1803               	skipnc
  3995  03F3  3001               	movlw	1
  3996  03F4  07C4               	addwf	___ftadd@f1+2,f
  3997  03F5                     l2231:	
  3998  03F5  1F4C               	btfss	___ftadd@sign,6
  3999  03F6  2C07               	goto	l2235
  4000  03F7  30FF               	movlw	255
  4001  03F8  06C5               	xorwf	___ftadd@f2,f
  4002  03F9  30FF               	movlw	255
  4003  03FA  06C6               	xorwf	___ftadd@f2+1,f
  4004  03FB  30FF               	movlw	255
  4005  03FC  06C7               	xorwf	___ftadd@f2+2,f
  4006  03FD  3001               	movlw	1
  4007  03FE  07C5               	addwf	___ftadd@f2,f
  4008  03FF  3000               	movlw	0
  4009  0400  1803               	skipnc
  4010  0401  3001               	movlw	1
  4011  0402  07C6               	addwf	___ftadd@f2+1,f
  4012  0403  3000               	movlw	0
  4013  0404  1803               	skipnc
  4014  0405  3001               	movlw	1
  4015  0406  07C7               	addwf	___ftadd@f2+2,f
  4016  0407                     l2235:	
  4017  0407  01CC               	clrf	___ftadd@sign
  4018  0408  0842               	movf	___ftadd@f1,w
  4019  0409  07C5               	addwf	___ftadd@f2,f
  4020  040A  0843               	movf	___ftadd@f1+1,w
  4021  040B  1103               	clrz
  4022  040C  1803               	skipnc
  4023  040D  0A43               	incf	___ftadd@f1+1,w
  4024  040E  1D03               	btfss	3,2
  4025  040F  07C6               	addwf	___ftadd@f2+1,f
  4026  0410  0844               	movf	___ftadd@f1+2,w
  4027  0411  1103               	clrz
  4028  0412  1803               	skipnc
  4029  0413  0A44               	incf	___ftadd@f1+2,w
  4030  0414  1D03               	btfss	3,2
  4031  0415  07C7               	addwf	___ftadd@f2+2,f
  4032  0416  1FC7               	btfss	___ftadd@f2+2,7
  4033  0417  2C2A               	goto	l2245
  4034  0418  30FF               	movlw	255
  4035  0419  06C5               	xorwf	___ftadd@f2,f
  4036  041A  30FF               	movlw	255
  4037  041B  06C6               	xorwf	___ftadd@f2+1,f
  4038  041C  30FF               	movlw	255
  4039  041D  06C7               	xorwf	___ftadd@f2+2,f
  4040  041E  3001               	movlw	1
  4041  041F  07C5               	addwf	___ftadd@f2,f
  4042  0420  3000               	movlw	0
  4043  0421  1803               	skipnc
  4044  0422  3001               	movlw	1
  4045  0423  07C6               	addwf	___ftadd@f2+1,f
  4046  0424  3000               	movlw	0
  4047  0425  1803               	skipnc
  4048  0426  3001               	movlw	1
  4049  0427  07C7               	addwf	___ftadd@f2+2,f
  4050  0428  01CC               	clrf	___ftadd@sign
  4051  0429  0ACC               	incf	___ftadd@sign,f
  4052  042A                     l2245:	
  4053  042A  0845               	movf	___ftadd@f2,w
  4054  042B  00F0               	movwf	___ftpack@arg
  4055  042C  0846               	movf	___ftadd@f2+1,w
  4056  042D  00F1               	movwf	___ftpack@arg+1
  4057  042E  0847               	movf	___ftadd@f2+2,w
  4058  042F  00F2               	movwf	___ftpack@arg+2
  4059  0430  084E               	movf	___ftadd@exp1,w
  4060  0431  00C8               	movwf	??___ftadd
  4061  0432  0848               	movf	??___ftadd,w
  4062  0433  00F3               	movwf	___ftpack@exp
  4063  0434  084C               	movf	___ftadd@sign,w
  4064  0435  00C9               	movwf	??___ftadd+1
  4065  0436  0849               	movf	??___ftadd+1,w
  4066  0437  00F4               	movwf	___ftpack@sign
  4067  0438  120A  158A  2491   	fcall	___ftpack
  4068  043B  0870               	movf	?___ftpack,w
  4069  043C  1283               	bcf	3,5	;RP0=0, select bank0
  4070  043D  1303               	bcf	3,6	;RP1=0, select bank0
  4071  043E  00C2               	movwf	?___ftadd
  4072  043F  0871               	movf	?___ftpack+1,w
  4073  0440  00C3               	movwf	?___ftadd+1
  4074  0441  0872               	movf	?___ftpack+2,w
  4075  0442  00C4               	movwf	?___ftadd+2
  4076  0443  0008               	return
  4077  0444                     __end_of___ftadd:	
  4078                           
  4079                           	psect	text17
  4080  0268                     __ptext17:	
  4081 ;; *************** function ___ftmul *****************
  4082 ;; Defined at:
  4083 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  f1              3    2[BANK0 ] float 
  4086 ;;  f2              3    5[BANK0 ] float 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  f3_as_produc    3   13[BANK0 ] unsigned um
  4089 ;;  sign            1   17[BANK0 ] unsigned char 
  4090 ;;  cntr            1   16[BANK0 ] unsigned char 
  4091 ;;  exp             1   12[BANK0 ] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  3    2[BANK0 ] float 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0, pclath, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4101 ;;      Params:         0       6       0       0       0
  4102 ;;      Locals:         0       6       0       0       0
  4103 ;;      Temps:          0       4       0       0       0
  4104 ;;      Totals:         0      16       0       0       0
  4105 ;;Total ram usage:       16 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    1
  4108 ;; This function calls:
  4109 ;;		___ftpack
  4110 ;; This function is called by:
  4111 ;;		_UART_Init
  4112 ;;		_AdjustSec
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function ___ftmul
  4118  0268                     ___ftmul:	
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4122  0268  1283               	bcf	3,5	;RP0=0, select bank0
  4123  0269  1303               	bcf	3,6	;RP1=0, select bank0
  4124  026A  0822               	movf	___ftmul@f1,w
  4125  026B  00A8               	movwf	??___ftmul
  4126  026C  0823               	movf	___ftmul@f1+1,w
  4127  026D  00A9               	movwf	??___ftmul+1
  4128  026E  0824               	movf	___ftmul@f1+2,w
  4129  026F  00AA               	movwf	??___ftmul+2
  4130  0270  1003               	clrc
  4131  0271  0D29               	rlf	??___ftmul+1,w
  4132  0272  0D2A               	rlf	??___ftmul+2,w
  4133  0273  00AB               	movwf	??___ftmul+3
  4134  0274  082B               	movf	??___ftmul+3,w
  4135  0275  00AC               	movwf	___ftmul@exp
  4136  0276  082C               	movf	___ftmul@exp,w
  4137  0277  1D03               	btfss	3,2
  4138  0278  2A80               	goto	l2513
  4139  0279  3000               	movlw	0
  4140  027A  00A2               	movwf	?___ftmul
  4141  027B  3000               	movlw	0
  4142  027C  00A3               	movwf	?___ftmul+1
  4143  027D  3000               	movlw	0
  4144  027E  00A4               	movwf	?___ftmul+2
  4145  027F  0008               	return
  4146  0280                     l2513:	
  4147  0280  0825               	movf	___ftmul@f2,w
  4148  0281  00A8               	movwf	??___ftmul
  4149  0282  0826               	movf	___ftmul@f2+1,w
  4150  0283  00A9               	movwf	??___ftmul+1
  4151  0284  0827               	movf	___ftmul@f2+2,w
  4152  0285  00AA               	movwf	??___ftmul+2
  4153  0286  1003               	clrc
  4154  0287  0D29               	rlf	??___ftmul+1,w
  4155  0288  0D2A               	rlf	??___ftmul+2,w
  4156  0289  00AB               	movwf	??___ftmul+3
  4157  028A  082B               	movf	??___ftmul+3,w
  4158  028B  00B1               	movwf	___ftmul@sign
  4159  028C  0831               	movf	___ftmul@sign,w
  4160  028D  1D03               	btfss	3,2
  4161  028E  2A96               	goto	l2519
  4162  028F  3000               	movlw	0
  4163  0290  00A2               	movwf	?___ftmul
  4164  0291  3000               	movlw	0
  4165  0292  00A3               	movwf	?___ftmul+1
  4166  0293  3000               	movlw	0
  4167  0294  00A4               	movwf	?___ftmul+2
  4168  0295  0008               	return
  4169  0296                     l2519:	
  4170  0296  0831               	movf	___ftmul@sign,w
  4171  0297  3E7B               	addlw	123
  4172  0298  00A8               	movwf	??___ftmul
  4173  0299  0828               	movf	??___ftmul,w
  4174  029A  07AC               	addwf	___ftmul@exp,f
  4175  029B  0822               	movf	___ftmul@f1,w
  4176  029C  00A8               	movwf	??___ftmul
  4177  029D  0823               	movf	___ftmul@f1+1,w
  4178  029E  00A9               	movwf	??___ftmul+1
  4179  029F  0824               	movf	___ftmul@f1+2,w
  4180  02A0  00AA               	movwf	??___ftmul+2
  4181  02A1  3010               	movlw	16
  4182  02A2                     u3745:	
  4183  02A2  1003               	clrc
  4184  02A3  0CAA               	rrf	??___ftmul+2,f
  4185  02A4  0CA9               	rrf	??___ftmul+1,f
  4186  02A5  0CA8               	rrf	??___ftmul,f
  4187  02A6  3EFF               	addlw	-1
  4188  02A7  1D03               	skipz
  4189  02A8  2AA2               	goto	u3745
  4190  02A9  0828               	movf	??___ftmul,w
  4191  02AA  00AB               	movwf	??___ftmul+3
  4192  02AB  082B               	movf	??___ftmul+3,w
  4193  02AC  00B1               	movwf	___ftmul@sign
  4194  02AD  0825               	movf	___ftmul@f2,w
  4195  02AE  00A8               	movwf	??___ftmul
  4196  02AF  0826               	movf	___ftmul@f2+1,w
  4197  02B0  00A9               	movwf	??___ftmul+1
  4198  02B1  0827               	movf	___ftmul@f2+2,w
  4199  02B2  00AA               	movwf	??___ftmul+2
  4200  02B3  3010               	movlw	16
  4201  02B4                     u3755:	
  4202  02B4  1003               	clrc
  4203  02B5  0CAA               	rrf	??___ftmul+2,f
  4204  02B6  0CA9               	rrf	??___ftmul+1,f
  4205  02B7  0CA8               	rrf	??___ftmul,f
  4206  02B8  3EFF               	addlw	-1
  4207  02B9  1D03               	skipz
  4208  02BA  2AB4               	goto	u3755
  4209  02BB  0828               	movf	??___ftmul,w
  4210  02BC  00AB               	movwf	??___ftmul+3
  4211  02BD  082B               	movf	??___ftmul+3,w
  4212  02BE  06B1               	xorwf	___ftmul@sign,f
  4213  02BF  3080               	movlw	128
  4214  02C0  00A8               	movwf	??___ftmul
  4215  02C1  0828               	movf	??___ftmul,w
  4216  02C2  05B1               	andwf	___ftmul@sign,f
  4217  02C3  17A3               	bsf	___ftmul@f1+1,7
  4218  02C4  17A6               	bsf	___ftmul@f2+1,7
  4219  02C5  30FF               	movlw	255
  4220  02C6  05A5               	andwf	___ftmul@f2,f
  4221  02C7  30FF               	movlw	255
  4222  02C8  05A6               	andwf	___ftmul@f2+1,f
  4223  02C9  3000               	movlw	0
  4224  02CA  05A7               	andwf	___ftmul@f2+2,f
  4225  02CB  3000               	movlw	0
  4226  02CC  00AD               	movwf	___ftmul@f3_as_product
  4227  02CD  3000               	movlw	0
  4228  02CE  00AE               	movwf	___ftmul@f3_as_product+1
  4229  02CF  3000               	movlw	0
  4230  02D0  00AF               	movwf	___ftmul@f3_as_product+2
  4231  02D1  3007               	movlw	7
  4232  02D2  00A8               	movwf	??___ftmul
  4233  02D3  0828               	movf	??___ftmul,w
  4234  02D4  00B0               	movwf	___ftmul@cntr
  4235  02D5                     l2531:	
  4236  02D5  1C22               	btfss	___ftmul@f1,0
  4237  02D6  2AE5               	goto	l2535
  4238  02D7  0825               	movf	___ftmul@f2,w
  4239  02D8  07AD               	addwf	___ftmul@f3_as_product,f
  4240  02D9  0826               	movf	___ftmul@f2+1,w
  4241  02DA  1103               	clrz
  4242  02DB  1803               	skipnc
  4243  02DC  0A26               	incf	___ftmul@f2+1,w
  4244  02DD  1D03               	btfss	3,2
  4245  02DE  07AE               	addwf	___ftmul@f3_as_product+1,f
  4246  02DF  0827               	movf	___ftmul@f2+2,w
  4247  02E0  1103               	clrz
  4248  02E1  1803               	skipnc
  4249  02E2  0A27               	incf	___ftmul@f2+2,w
  4250  02E3  1D03               	btfss	3,2
  4251  02E4  07AF               	addwf	___ftmul@f3_as_product+2,f
  4252  02E5                     l2535:	
  4253  02E5  3001               	movlw	1
  4254  02E6                     u3785:	
  4255  02E6  1003               	clrc
  4256  02E7  0CA4               	rrf	___ftmul@f1+2,f
  4257  02E8  0CA3               	rrf	___ftmul@f1+1,f
  4258  02E9  0CA2               	rrf	___ftmul@f1,f
  4259  02EA  3EFF               	addlw	-1
  4260  02EB  1D03               	skipz
  4261  02EC  2AE6               	goto	u3785
  4262  02ED  3001               	movlw	1
  4263  02EE                     u3795:	
  4264  02EE  1003               	clrc
  4265  02EF  0DA5               	rlf	___ftmul@f2,f
  4266  02F0  0DA6               	rlf	___ftmul@f2+1,f
  4267  02F1  0DA7               	rlf	___ftmul@f2+2,f
  4268  02F2  3EFF               	addlw	-1
  4269  02F3  1D03               	skipz
  4270  02F4  2AEE               	goto	u3795
  4271  02F5  3001               	movlw	1
  4272  02F6  02B0               	subwf	___ftmul@cntr,f
  4273  02F7  1D03               	btfss	3,2
  4274  02F8  2AD5               	goto	l2531
  4275  02F9  3009               	movlw	9
  4276  02FA  00A8               	movwf	??___ftmul
  4277  02FB  0828               	movf	??___ftmul,w
  4278  02FC  00B0               	movwf	___ftmul@cntr
  4279  02FD                     l2543:	
  4280  02FD  1C22               	btfss	___ftmul@f1,0
  4281  02FE  2B0D               	goto	l2547
  4282  02FF  0825               	movf	___ftmul@f2,w
  4283  0300  07AD               	addwf	___ftmul@f3_as_product,f
  4284  0301  0826               	movf	___ftmul@f2+1,w
  4285  0302  1103               	clrz
  4286  0303  1803               	skipnc
  4287  0304  0A26               	incf	___ftmul@f2+1,w
  4288  0305  1D03               	btfss	3,2
  4289  0306  07AE               	addwf	___ftmul@f3_as_product+1,f
  4290  0307  0827               	movf	___ftmul@f2+2,w
  4291  0308  1103               	clrz
  4292  0309  1803               	skipnc
  4293  030A  0A27               	incf	___ftmul@f2+2,w
  4294  030B  1D03               	btfss	3,2
  4295  030C  07AF               	addwf	___ftmul@f3_as_product+2,f
  4296  030D                     l2547:	
  4297  030D  3001               	movlw	1
  4298  030E                     u3835:	
  4299  030E  1003               	clrc
  4300  030F  0CA4               	rrf	___ftmul@f1+2,f
  4301  0310  0CA3               	rrf	___ftmul@f1+1,f
  4302  0311  0CA2               	rrf	___ftmul@f1,f
  4303  0312  3EFF               	addlw	-1
  4304  0313  1D03               	skipz
  4305  0314  2B0E               	goto	u3835
  4306  0315  3001               	movlw	1
  4307  0316                     u3845:	
  4308  0316  1003               	clrc
  4309  0317  0CAF               	rrf	___ftmul@f3_as_product+2,f
  4310  0318  0CAE               	rrf	___ftmul@f3_as_product+1,f
  4311  0319  0CAD               	rrf	___ftmul@f3_as_product,f
  4312  031A  3EFF               	addlw	-1
  4313  031B  1D03               	skipz
  4314  031C  2B16               	goto	u3845
  4315  031D  3001               	movlw	1
  4316  031E  02B0               	subwf	___ftmul@cntr,f
  4317  031F  1D03               	btfss	3,2
  4318  0320  2AFD               	goto	l2543
  4319  0321  082D               	movf	___ftmul@f3_as_product,w
  4320  0322  00F0               	movwf	___ftpack@arg
  4321  0323  082E               	movf	___ftmul@f3_as_product+1,w
  4322  0324  00F1               	movwf	___ftpack@arg+1
  4323  0325  082F               	movf	___ftmul@f3_as_product+2,w
  4324  0326  00F2               	movwf	___ftpack@arg+2
  4325  0327  082C               	movf	___ftmul@exp,w
  4326  0328  00A8               	movwf	??___ftmul
  4327  0329  0828               	movf	??___ftmul,w
  4328  032A  00F3               	movwf	___ftpack@exp
  4329  032B  0831               	movf	___ftmul@sign,w
  4330  032C  00A9               	movwf	??___ftmul+1
  4331  032D  0829               	movf	??___ftmul+1,w
  4332  032E  00F4               	movwf	___ftpack@sign
  4333  032F  120A  158A  2491   	fcall	___ftpack
  4334  0332  0870               	movf	?___ftpack,w
  4335  0333  1283               	bcf	3,5	;RP0=0, select bank0
  4336  0334  1303               	bcf	3,6	;RP1=0, select bank0
  4337  0335  00A2               	movwf	?___ftmul
  4338  0336  0871               	movf	?___ftpack+1,w
  4339  0337  00A3               	movwf	?___ftmul+1
  4340  0338  0872               	movf	?___ftpack+2,w
  4341  0339  00A4               	movwf	?___ftmul+2
  4342  033A  0008               	return
  4343  033B                     __end_of___ftmul:	
  4344                           
  4345                           	psect	text18
  4346  01B0                     __ptext18:	
  4347 ;; *************** function ___ftdiv *****************
  4348 ;; Defined at:
  4349 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  f2              3   18[BANK0 ] float 
  4352 ;;  f1              3   21[BANK0 ] float 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  f3              3   29[BANK0 ] float 
  4355 ;;  sign            1   33[BANK0 ] unsigned char 
  4356 ;;  exp             1   32[BANK0 ] unsigned char 
  4357 ;;  cntr            1   28[BANK0 ] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  3   18[BANK0 ] float 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         0       6       0       0       0
  4368 ;;      Locals:         0       6       0       0       0
  4369 ;;      Temps:          0       4       0       0       0
  4370 ;;      Totals:         0      16       0       0       0
  4371 ;;Total ram usage:       16 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    1
  4374 ;; This function calls:
  4375 ;;		___ftpack
  4376 ;; This function is called by:
  4377 ;;		_UART_Init
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           
  4382                           ;psect for function ___ftdiv
  4383  01B0                     ___ftdiv:	
  4384                           
  4385                           ;incstack = 0
  4386                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4387  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  4388  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  4389  01B2  0835               	movf	___ftdiv@f1,w
  4390  01B3  00B8               	movwf	??___ftdiv
  4391  01B4  0836               	movf	___ftdiv@f1+1,w
  4392  01B5  00B9               	movwf	??___ftdiv+1
  4393  01B6  0837               	movf	___ftdiv@f1+2,w
  4394  01B7  00BA               	movwf	??___ftdiv+2
  4395  01B8  1003               	clrc
  4396  01B9  0D39               	rlf	??___ftdiv+1,w
  4397  01BA  0D3A               	rlf	??___ftdiv+2,w
  4398  01BB  00BB               	movwf	??___ftdiv+3
  4399  01BC  083B               	movf	??___ftdiv+3,w
  4400  01BD  00C0               	movwf	___ftdiv@exp
  4401  01BE  0840               	movf	___ftdiv@exp,w
  4402  01BF  1D03               	btfss	3,2
  4403  01C0  29C8               	goto	l2471
  4404  01C1  3000               	movlw	0
  4405  01C2  00B2               	movwf	?___ftdiv
  4406  01C3  3000               	movlw	0
  4407  01C4  00B3               	movwf	?___ftdiv+1
  4408  01C5  3000               	movlw	0
  4409  01C6  00B4               	movwf	?___ftdiv+2
  4410  01C7  0008               	return
  4411  01C8                     l2471:	
  4412  01C8  0832               	movf	___ftdiv@f2,w
  4413  01C9  00B8               	movwf	??___ftdiv
  4414  01CA  0833               	movf	___ftdiv@f2+1,w
  4415  01CB  00B9               	movwf	??___ftdiv+1
  4416  01CC  0834               	movf	___ftdiv@f2+2,w
  4417  01CD  00BA               	movwf	??___ftdiv+2
  4418  01CE  1003               	clrc
  4419  01CF  0D39               	rlf	??___ftdiv+1,w
  4420  01D0  0D3A               	rlf	??___ftdiv+2,w
  4421  01D1  00BB               	movwf	??___ftdiv+3
  4422  01D2  083B               	movf	??___ftdiv+3,w
  4423  01D3  00C1               	movwf	___ftdiv@sign
  4424  01D4  0841               	movf	___ftdiv@sign,w
  4425  01D5  1D03               	btfss	3,2
  4426  01D6  29DE               	goto	l2477
  4427  01D7  3000               	movlw	0
  4428  01D8  00B2               	movwf	?___ftdiv
  4429  01D9  3000               	movlw	0
  4430  01DA  00B3               	movwf	?___ftdiv+1
  4431  01DB  3000               	movlw	0
  4432  01DC  00B4               	movwf	?___ftdiv+2
  4433  01DD  0008               	return
  4434  01DE                     l2477:	
  4435  01DE  3000               	movlw	0
  4436  01DF  00BD               	movwf	___ftdiv@f3
  4437  01E0  3000               	movlw	0
  4438  01E1  00BE               	movwf	___ftdiv@f3+1
  4439  01E2  3000               	movlw	0
  4440  01E3  00BF               	movwf	___ftdiv@f3+2
  4441  01E4  3089               	movlw	137
  4442  01E5  0741               	addwf	___ftdiv@sign,w
  4443  01E6  00B8               	movwf	??___ftdiv
  4444  01E7  0838               	movf	??___ftdiv,w
  4445  01E8  02C0               	subwf	___ftdiv@exp,f
  4446  01E9  0835               	movf	___ftdiv@f1,w
  4447  01EA  00B8               	movwf	??___ftdiv
  4448  01EB  0836               	movf	___ftdiv@f1+1,w
  4449  01EC  00B9               	movwf	??___ftdiv+1
  4450  01ED  0837               	movf	___ftdiv@f1+2,w
  4451  01EE  00BA               	movwf	??___ftdiv+2
  4452  01EF  3010               	movlw	16
  4453  01F0                     u3665:	
  4454  01F0  1003               	clrc
  4455  01F1  0CBA               	rrf	??___ftdiv+2,f
  4456  01F2  0CB9               	rrf	??___ftdiv+1,f
  4457  01F3  0CB8               	rrf	??___ftdiv,f
  4458  01F4  3EFF               	addlw	-1
  4459  01F5  1D03               	skipz
  4460  01F6  29F0               	goto	u3665
  4461  01F7  0838               	movf	??___ftdiv,w
  4462  01F8  00BB               	movwf	??___ftdiv+3
  4463  01F9  083B               	movf	??___ftdiv+3,w
  4464  01FA  00C1               	movwf	___ftdiv@sign
  4465  01FB  0832               	movf	___ftdiv@f2,w
  4466  01FC  00B8               	movwf	??___ftdiv
  4467  01FD  0833               	movf	___ftdiv@f2+1,w
  4468  01FE  00B9               	movwf	??___ftdiv+1
  4469  01FF  0834               	movf	___ftdiv@f2+2,w
  4470  0200  00BA               	movwf	??___ftdiv+2
  4471  0201  3010               	movlw	16
  4472  0202                     u3675:	
  4473  0202  1003               	clrc
  4474  0203  0CBA               	rrf	??___ftdiv+2,f
  4475  0204  0CB9               	rrf	??___ftdiv+1,f
  4476  0205  0CB8               	rrf	??___ftdiv,f
  4477  0206  3EFF               	addlw	-1
  4478  0207  1D03               	skipz
  4479  0208  2A02               	goto	u3675
  4480  0209  0838               	movf	??___ftdiv,w
  4481  020A  00BB               	movwf	??___ftdiv+3
  4482  020B  083B               	movf	??___ftdiv+3,w
  4483  020C  06C1               	xorwf	___ftdiv@sign,f
  4484  020D  3080               	movlw	128
  4485  020E  00B8               	movwf	??___ftdiv
  4486  020F  0838               	movf	??___ftdiv,w
  4487  0210  05C1               	andwf	___ftdiv@sign,f
  4488  0211  17B6               	bsf	___ftdiv@f1+1,7
  4489  0212  30FF               	movlw	255
  4490  0213  05B5               	andwf	___ftdiv@f1,f
  4491  0214  30FF               	movlw	255
  4492  0215  05B6               	andwf	___ftdiv@f1+1,f
  4493  0216  3000               	movlw	0
  4494  0217  05B7               	andwf	___ftdiv@f1+2,f
  4495  0218  17B3               	bsf	___ftdiv@f2+1,7
  4496  0219  30FF               	movlw	255
  4497  021A  05B2               	andwf	___ftdiv@f2,f
  4498  021B  30FF               	movlw	255
  4499  021C  05B3               	andwf	___ftdiv@f2+1,f
  4500  021D  3000               	movlw	0
  4501  021E  05B4               	andwf	___ftdiv@f2+2,f
  4502  021F  3018               	movlw	24
  4503  0220  00B8               	movwf	??___ftdiv
  4504  0221  0838               	movf	??___ftdiv,w
  4505  0222  00BC               	movwf	___ftdiv@cntr
  4506  0223                     l2491:	
  4507  0223  3001               	movlw	1
  4508  0224                     u3685:	
  4509  0224  1003               	clrc
  4510  0225  0DBD               	rlf	___ftdiv@f3,f
  4511  0226  0DBE               	rlf	___ftdiv@f3+1,f
  4512  0227  0DBF               	rlf	___ftdiv@f3+2,f
  4513  0228  3EFF               	addlw	-1
  4514  0229  1D03               	skipz
  4515  022A  2A24               	goto	u3685
  4516  022B  0834               	movf	___ftdiv@f2+2,w
  4517  022C  0237               	subwf	___ftdiv@f1+2,w
  4518  022D  1D03               	skipz
  4519  022E  2A35               	goto	u3695
  4520  022F  0833               	movf	___ftdiv@f2+1,w
  4521  0230  0236               	subwf	___ftdiv@f1+1,w
  4522  0231  1D03               	skipz
  4523  0232  2A35               	goto	u3695
  4524  0233  0832               	movf	___ftdiv@f2,w
  4525  0234  0235               	subwf	___ftdiv@f1,w
  4526  0235                     u3695:	
  4527  0235  1C03               	skipc
  4528  0236  2A42               	goto	l2499
  4529  0237  0832               	movf	___ftdiv@f2,w
  4530  0238  02B5               	subwf	___ftdiv@f1,f
  4531  0239  0833               	movf	___ftdiv@f2+1,w
  4532  023A  1C03               	skipc
  4533  023B  0F33               	incfsz	___ftdiv@f2+1,w
  4534  023C  02B6               	subwf	___ftdiv@f1+1,f
  4535  023D  0834               	movf	___ftdiv@f2+2,w
  4536  023E  1C03               	skipc
  4537  023F  0A34               	incf	___ftdiv@f2+2,w
  4538  0240  02B7               	subwf	___ftdiv@f1+2,f
  4539  0241  143D               	bsf	___ftdiv@f3,0
  4540  0242                     l2499:	
  4541  0242  3001               	movlw	1
  4542  0243                     u3705:	
  4543  0243  1003               	clrc
  4544  0244  0DB5               	rlf	___ftdiv@f1,f
  4545  0245  0DB6               	rlf	___ftdiv@f1+1,f
  4546  0246  0DB7               	rlf	___ftdiv@f1+2,f
  4547  0247  3EFF               	addlw	-1
  4548  0248  1D03               	skipz
  4549  0249  2A43               	goto	u3705
  4550  024A  3001               	movlw	1
  4551  024B  02BC               	subwf	___ftdiv@cntr,f
  4552  024C  1D03               	btfss	3,2
  4553  024D  2A23               	goto	l2491
  4554  024E  083D               	movf	___ftdiv@f3,w
  4555  024F  00F0               	movwf	___ftpack@arg
  4556  0250  083E               	movf	___ftdiv@f3+1,w
  4557  0251  00F1               	movwf	___ftpack@arg+1
  4558  0252  083F               	movf	___ftdiv@f3+2,w
  4559  0253  00F2               	movwf	___ftpack@arg+2
  4560  0254  0840               	movf	___ftdiv@exp,w
  4561  0255  00B8               	movwf	??___ftdiv
  4562  0256  0838               	movf	??___ftdiv,w
  4563  0257  00F3               	movwf	___ftpack@exp
  4564  0258  0841               	movf	___ftdiv@sign,w
  4565  0259  00B9               	movwf	??___ftdiv+1
  4566  025A  0839               	movf	??___ftdiv+1,w
  4567  025B  00F4               	movwf	___ftpack@sign
  4568  025C  120A  158A  2491   	fcall	___ftpack
  4569  025F  0870               	movf	?___ftpack,w
  4570  0260  1283               	bcf	3,5	;RP0=0, select bank0
  4571  0261  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0262  00B2               	movwf	?___ftdiv
  4573  0263  0871               	movf	?___ftpack+1,w
  4574  0264  00B3               	movwf	?___ftdiv+1
  4575  0265  0872               	movf	?___ftpack+2,w
  4576  0266  00B4               	movwf	?___ftdiv+2
  4577  0267  0008               	return
  4578  0268                     __end_of___ftdiv:	
  4579                           
  4580                           	psect	text19
  4581  0C91                     __ptext19:	
  4582 ;; *************** function ___ftpack *****************
  4583 ;; Defined at:
  4584 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  arg             3    0[COMMON] unsigned um
  4587 ;;  exp             1    3[COMMON] unsigned char 
  4588 ;;  sign            1    4[COMMON] unsigned char 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  3    0[COMMON] float 
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4600 ;;      Params:         5       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0
  4602 ;;      Temps:          3       0       0       0       0
  4603 ;;      Totals:         8       0       0       0       0
  4604 ;;Total ram usage:        8 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		___altoft
  4610 ;;		___ftadd
  4611 ;;		___ftdiv
  4612 ;;		___ftmul
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function ___ftpack
  4618  0C91                     ___ftpack:	
  4619                           
  4620                           ;incstack = 0
  4621                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4622  0C91  0873               	movf	___ftpack@exp,w
  4623  0C92  1903               	btfsc	3,2
  4624  0C93  2C99               	goto	l1999
  4625  0C94  0872               	movf	___ftpack@arg+2,w
  4626  0C95  0471               	iorwf	___ftpack@arg+1,w
  4627  0C96  0470               	iorwf	___ftpack@arg,w
  4628  0C97  1D03               	skipz
  4629  0C98  2CAC               	goto	l2005
  4630  0C99                     l1999:	
  4631  0C99  3000               	movlw	0
  4632  0C9A  00F0               	movwf	?___ftpack
  4633  0C9B  3000               	movlw	0
  4634  0C9C  00F1               	movwf	?___ftpack+1
  4635  0C9D  3000               	movlw	0
  4636  0C9E  00F2               	movwf	?___ftpack+2
  4637  0C9F  0008               	return
  4638  0CA0                     l2003:	
  4639  0CA0  3001               	movlw	1
  4640  0CA1  00F5               	movwf	??___ftpack
  4641  0CA2  0875               	movf	??___ftpack,w
  4642  0CA3  07F3               	addwf	___ftpack@exp,f
  4643  0CA4  3001               	movlw	1
  4644  0CA5                     u2245:	
  4645  0CA5  1003               	clrc
  4646  0CA6  0CF2               	rrf	___ftpack@arg+2,f
  4647  0CA7  0CF1               	rrf	___ftpack@arg+1,f
  4648  0CA8  0CF0               	rrf	___ftpack@arg,f
  4649  0CA9  3EFF               	addlw	-1
  4650  0CAA  1D03               	skipz
  4651  0CAB  2CA5               	goto	u2245
  4652  0CAC                     l2005:	
  4653  0CAC  30FE               	movlw	254
  4654  0CAD  0572               	andwf	___ftpack@arg+2,w
  4655  0CAE  1903               	btfsc	3,2
  4656  0CAF  2CC7               	goto	l620
  4657  0CB0  2CA0               	goto	l2003
  4658  0CB1                     l2007:	
  4659  0CB1  3001               	movlw	1
  4660  0CB2  00F5               	movwf	??___ftpack
  4661  0CB3  0875               	movf	??___ftpack,w
  4662  0CB4  07F3               	addwf	___ftpack@exp,f
  4663  0CB5  3001               	movlw	1
  4664  0CB6  07F0               	addwf	___ftpack@arg,f
  4665  0CB7  3000               	movlw	0
  4666  0CB8  1803               	skipnc
  4667  0CB9  3001               	movlw	1
  4668  0CBA  07F1               	addwf	___ftpack@arg+1,f
  4669  0CBB  3000               	movlw	0
  4670  0CBC  1803               	skipnc
  4671  0CBD  3001               	movlw	1
  4672  0CBE  07F2               	addwf	___ftpack@arg+2,f
  4673  0CBF  3001               	movlw	1
  4674  0CC0                     u2265:	
  4675  0CC0  1003               	clrc
  4676  0CC1  0CF2               	rrf	___ftpack@arg+2,f
  4677  0CC2  0CF1               	rrf	___ftpack@arg+1,f
  4678  0CC3  0CF0               	rrf	___ftpack@arg,f
  4679  0CC4  3EFF               	addlw	-1
  4680  0CC5  1D03               	skipz
  4681  0CC6  2CC0               	goto	u2265
  4682  0CC7                     l620:	
  4683  0CC7  30FF               	movlw	255
  4684  0CC8  0572               	andwf	___ftpack@arg+2,w
  4685  0CC9  1903               	btfsc	3,2
  4686  0CCA  2CD6               	goto	l2015
  4687  0CCB  2CB1               	goto	l2007
  4688  0CCC                     l2013:	
  4689  0CCC  3001               	movlw	1
  4690  0CCD  02F3               	subwf	___ftpack@exp,f
  4691  0CCE  3001               	movlw	1
  4692  0CCF                     u2285:	
  4693  0CCF  1003               	clrc
  4694  0CD0  0DF0               	rlf	___ftpack@arg,f
  4695  0CD1  0DF1               	rlf	___ftpack@arg+1,f
  4696  0CD2  0DF2               	rlf	___ftpack@arg+2,f
  4697  0CD3  3EFF               	addlw	-1
  4698  0CD4  1D03               	skipz
  4699  0CD5  2CCF               	goto	u2285
  4700  0CD6                     l2015:	
  4701  0CD6  1BF1               	btfsc	___ftpack@arg+1,7
  4702  0CD7  2CDC               	goto	l627
  4703  0CD8  3002               	movlw	2
  4704  0CD9  0273               	subwf	___ftpack@exp,w
  4705  0CDA  1803               	skipnc
  4706  0CDB  2CCC               	goto	l2013
  4707  0CDC                     l627:	
  4708  0CDC  1873               	btfsc	___ftpack@exp,0
  4709  0CDD  2CE4               	goto	l628
  4710  0CDE  30FF               	movlw	255
  4711  0CDF  05F0               	andwf	___ftpack@arg,f
  4712  0CE0  307F               	movlw	127
  4713  0CE1  05F1               	andwf	___ftpack@arg+1,f
  4714  0CE2  30FF               	movlw	255
  4715  0CE3  05F2               	andwf	___ftpack@arg+2,f
  4716  0CE4                     l628:	
  4717  0CE4  1003               	clrc
  4718  0CE5  0CF3               	rrf	___ftpack@exp,f
  4719  0CE6  0873               	movf	___ftpack@exp,w
  4720  0CE7  00F5               	movwf	??___ftpack
  4721  0CE8  01F6               	clrf	??___ftpack+1
  4722  0CE9  01F7               	clrf	??___ftpack+2
  4723  0CEA  3010               	movlw	16
  4724  0CEB                     u2325:	
  4725  0CEB  1003               	clrc
  4726  0CEC  0DF5               	rlf	??___ftpack,f
  4727  0CED  0DF6               	rlf	??___ftpack+1,f
  4728  0CEE  0DF7               	rlf	??___ftpack+2,f
  4729  0CEF  3EFF               	addlw	-1
  4730  0CF0  1D03               	skipz
  4731  0CF1  2CEB               	goto	u2325
  4732  0CF2  0875               	movf	??___ftpack,w
  4733  0CF3  04F0               	iorwf	___ftpack@arg,f
  4734  0CF4  0876               	movf	??___ftpack+1,w
  4735  0CF5  04F1               	iorwf	___ftpack@arg+1,f
  4736  0CF6  0877               	movf	??___ftpack+2,w
  4737  0CF7  04F2               	iorwf	___ftpack@arg+2,f
  4738  0CF8  0874               	movf	___ftpack@sign,w
  4739  0CF9  1903               	btfsc	3,2
  4740  0CFA  0008               	return
  4741  0CFB  17F2               	bsf	___ftpack@arg+2,7
  4742  0CFC  0008               	return
  4743  0CFD                     __end_of___ftpack:	
  4744                           
  4745                           	psect	text20
  4746  0B02                     __ptext20:	
  4747 ;; *************** function _Lcd_Text *****************
  4748 ;; Defined at:
  4749 ;;		line 76 in file "libs/HD44780.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  y               1    wreg     unsigned char 
  4752 ;;  x               1    4[COMMON] unsigned char 
  4753 ;;  buffer          1    5[COMMON] PTR unsigned char 
  4754 ;;		 -> STR_4(2), STR_3(2), STR_2(5), STR_1(5), 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  y               1    7[COMMON] unsigned char 
  4757 ;;  data            1    8[COMMON] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4767 ;;      Params:         2       0       0       0       0
  4768 ;;      Locals:         2       0       0       0       0
  4769 ;;      Temps:          1       0       0       0       0
  4770 ;;      Totals:         5       0       0       0       0
  4771 ;;Total ram usage:        5 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    2
  4774 ;; This function calls:
  4775 ;;		_Lcd_CharCP
  4776 ;;		_Lcd_Command
  4777 ;; This function is called by:
  4778 ;;		_main
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _Lcd_Text
  4784  0B02                     _Lcd_Text:	
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _Lcd_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4788                           ;Lcd_Text@y stored from wreg
  4789  0B02  00F7               	movwf	Lcd_Text@y
  4790                           
  4791                           ;HD44780.c: 77: unsigned char data;
  4792                           ;HD44780.c: 78: switch(y){
  4793  0B03  2B13               	goto	l2683
  4794  0B04                     l2673:	
  4795                           ;HD44780.c: 79: case 1: data = 127 + x; break;
  4796                           
  4797  0B04  0874               	movf	Lcd_Text@x,w
  4798  0B05  3E7F               	addlw	127
  4799  0B06  2B0F               	goto	L6
  4800  0B07                     l2675:	
  4801                           ;HD44780.c: 80: case 2: data = 191 + x; break;
  4802                           
  4803  0B07  0874               	movf	Lcd_Text@x,w
  4804  0B08  3EBF               	addlw	191
  4805  0B09  2B0F               	goto	L6
  4806  0B0A                     l2677:	
  4807                           ;HD44780.c: 81: case 3: data = 147 + x; break;
  4808                           
  4809  0B0A  0874               	movf	Lcd_Text@x,w
  4810  0B0B  3E93               	addlw	147
  4811  0B0C  2B0F               	goto	L6
  4812  0B0D                     l2679:	
  4813                           ;HD44780.c: 82: case 4: data = 211 + x; break;
  4814                           
  4815  0B0D  0874               	movf	Lcd_Text@x,w
  4816  0B0E  3ED3               	addlw	211
  4817  0B0F                     L6:	
  4818  0B0F  00F6               	movwf	??_Lcd_Text
  4819  0B10  0876               	movf	??_Lcd_Text,w
  4820  0B11  00F8               	movwf	Lcd_Text@data
  4821                           
  4822                           ;HD44780.c: 83: default: break;}
  4823  0B12  2B21               	goto	l2685
  4824  0B13                     l2683:	
  4825  0B13  0877               	movf	Lcd_Text@y,w
  4826                           
  4827                           ; Switch size 1, requested type "space"
  4828                           ; Number of cases is 4, Range of values is 1 to 4
  4829                           ; switch strategies available:
  4830                           ; Name         Instructions Cycles
  4831                           ; simple_byte           13     7 (average)
  4832                           ; direct_byte           23    11 (fixed)
  4833                           ; jumptable            263     9 (fixed)
  4834                           ;	Chosen strategy is simple_byte
  4835  0B14  3A01               	xorlw	1	; case 1
  4836  0B15  1903               	skipnz
  4837  0B16  2B04               	goto	l2673
  4838  0B17  3A03               	xorlw	3	; case 2
  4839  0B18  1903               	skipnz
  4840  0B19  2B07               	goto	l2675
  4841  0B1A  3A01               	xorlw	1	; case 3
  4842  0B1B  1903               	skipnz
  4843  0B1C  2B0A               	goto	l2677
  4844  0B1D  3A07               	xorlw	7	; case 4
  4845  0B1E  1903               	skipnz
  4846  0B1F  2B0D               	goto	l2679
  4847  0B20  2B21               	goto	l2685
  4848  0B21                     l2685:	
  4849                           
  4850                           ;HD44780.c: 84: Lcd_Command(data);
  4851  0B21  0878               	movf	Lcd_Text@data,w
  4852  0B22  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  4853  0B27                     l2691:	
  4854                           ;HD44780.c: 85: while(*buffer)
  4855                           
  4856  0B27  0875               	movf	Lcd_Text@buffer,w
  4857  0B28  0084               	movwf	4
  4858  0B29  120A  158A  2000  120A  158A  	fcall	stringdir
  4859  0B2E  3A00               	xorlw	0
  4860  0B2F  1903               	btfsc	3,2
  4861  0B30  0008               	return
  4862                           
  4863                           ;HD44780.c: 86: {
  4864                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  4865  0B31  0875               	movf	Lcd_Text@buffer,w
  4866  0B32  0084               	movwf	4
  4867  0B33  120A  158A  2000  120A  158A  	fcall	stringdir
  4868  0B38  120A  118A  204D  120A  158A  	fcall	_Lcd_CharCP
  4869                           
  4870                           ;HD44780.c: 88: buffer++;
  4871  0B3D  3001               	movlw	1
  4872  0B3E  00F6               	movwf	??_Lcd_Text
  4873  0B3F  0876               	movf	??_Lcd_Text,w
  4874  0B40  07F5               	addwf	Lcd_Text@buffer,f
  4875  0B41  2B27               	goto	l2691
  4876  0B42                     __end_of_Lcd_Text:	
  4877                           ;HD44780.c: 89: }
  4878                           ;HD44780.c: 90: return;
  4879                           
  4880                           
  4881                           	psect	text21
  4882  004D                     __ptext21:	
  4883 ;; *************** function _Lcd_CharCP *****************
  4884 ;; Defined at:
  4885 ;;		line 115 in file "libs/HD44780.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  c               1    wreg     unsigned char 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  c               1    3[COMMON] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, pclath, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4899 ;;      Params:         0       0       0       0       0
  4900 ;;      Locals:         1       0       0       0       0
  4901 ;;      Temps:          1       0       0       0       0
  4902 ;;      Totals:         2       0       0       0       0
  4903 ;;Total ram usage:        2 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    1
  4906 ;; This function calls:
  4907 ;;		_Lcd_Delay5500us
  4908 ;;		_Lcd_Delay5us
  4909 ;; This function is called by:
  4910 ;;		_Lcd_Text
  4911 ;;		_Lcd_WriteChar
  4912 ;;		_Lcd_ConstText
  4913 ;;		_Lcd_Int
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           
  4918                           ;psect for function _Lcd_CharCP
  4919  004D                     _Lcd_CharCP:	
  4920                           
  4921                           ;incstack = 0
  4922                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0+pclath+cstack]
  4923                           ;Lcd_CharCP@c stored from wreg
  4924  004D  00F3               	movwf	Lcd_CharCP@c
  4925                           
  4926                           ;HD44780.c: 116: RA1 = 0; RA0 = 1;
  4927  004E  1283               	bcf	3,5	;RP0=0, select bank0
  4928  004F  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0050  1085               	bcf	5,1	;volatile
  4930  0051  1405               	bsf	5,0	;volatile
  4931                           
  4932                           ;HD44780.c: 117: RA5 = (c & 0b10000000)>>7; RA4 = (c & 0b01000000)>>6;
  4933  0052  0873               	movf	Lcd_CharCP@c,w
  4934  0053  00F2               	movwf	??_Lcd_CharCP
  4935  0054  3007               	movlw	7
  4936  0055                     u2745:	
  4937  0055  1003               	clrc
  4938  0056  0CF2               	rrf	??_Lcd_CharCP,f
  4939  0057  3EFF               	addlw	-1
  4940  0058  1D03               	skipz
  4941  0059  2855               	goto	u2745
  4942  005A  1C72               	btfss	??_Lcd_CharCP,0
  4943  005B  2860               	goto	u2750
  4944  005C  1283               	bcf	3,5	;RP0=0, select bank0
  4945  005D  1303               	bcf	3,6	;RP1=0, select bank0
  4946  005E  1685               	bsf	5,5	;volatile
  4947  005F  2863               	goto	u2764
  4948  0060                     u2750:	
  4949  0060  1283               	bcf	3,5	;RP0=0, select bank0
  4950  0061  1303               	bcf	3,6	;RP1=0, select bank0
  4951  0062  1285               	bcf	5,5	;volatile
  4952  0063                     u2764:	
  4953  0063  0873               	movf	Lcd_CharCP@c,w
  4954  0064  00F2               	movwf	??_Lcd_CharCP
  4955  0065  3006               	movlw	6
  4956  0066                     u2775:	
  4957  0066  1003               	clrc
  4958  0067  0CF2               	rrf	??_Lcd_CharCP,f
  4959  0068  3EFF               	addlw	-1
  4960  0069  1D03               	skipz
  4961  006A  2866               	goto	u2775
  4962  006B  1C72               	btfss	??_Lcd_CharCP,0
  4963  006C  2871               	goto	u2780
  4964  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4965  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4966  006F  1605               	bsf	5,4	;volatile
  4967  0070  2874               	goto	u2794
  4968  0071                     u2780:	
  4969  0071  1283               	bcf	3,5	;RP0=0, select bank0
  4970  0072  1303               	bcf	3,6	;RP1=0, select bank0
  4971  0073  1205               	bcf	5,4	;volatile
  4972  0074                     u2794:	
  4973                           
  4974                           ;HD44780.c: 118: RA3 = (c & 0b00100000)>>5; RA2 = (c & 0b00010000)>>4;
  4975  0074  0873               	movf	Lcd_CharCP@c,w
  4976  0075  00F2               	movwf	??_Lcd_CharCP
  4977  0076  3005               	movlw	5
  4978  0077                     u2805:	
  4979  0077  1003               	clrc
  4980  0078  0CF2               	rrf	??_Lcd_CharCP,f
  4981  0079  3EFF               	addlw	-1
  4982  007A  1D03               	skipz
  4983  007B  2877               	goto	u2805
  4984  007C  1C72               	btfss	??_Lcd_CharCP,0
  4985  007D  2882               	goto	u2810
  4986  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4987  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4988  0080  1585               	bsf	5,3	;volatile
  4989  0081  2885               	goto	u2824
  4990  0082                     u2810:	
  4991  0082  1283               	bcf	3,5	;RP0=0, select bank0
  4992  0083  1303               	bcf	3,6	;RP1=0, select bank0
  4993  0084  1185               	bcf	5,3	;volatile
  4994  0085                     u2824:	
  4995  0085  0873               	movf	Lcd_CharCP@c,w
  4996  0086  00F2               	movwf	??_Lcd_CharCP
  4997  0087  3004               	movlw	4
  4998  0088                     u2835:	
  4999  0088  1003               	clrc
  5000  0089  0CF2               	rrf	??_Lcd_CharCP,f
  5001  008A  3EFF               	addlw	-1
  5002  008B  1D03               	skipz
  5003  008C  2888               	goto	u2835
  5004  008D  1C72               	btfss	??_Lcd_CharCP,0
  5005  008E  2893               	goto	u2840
  5006  008F  1283               	bcf	3,5	;RP0=0, select bank0
  5007  0090  1303               	bcf	3,6	;RP1=0, select bank0
  5008  0091  1505               	bsf	5,2	;volatile
  5009  0092  2896               	goto	l2155
  5010  0093                     u2840:	
  5011  0093  1283               	bcf	3,5	;RP0=0, select bank0
  5012  0094  1303               	bcf	3,6	;RP1=0, select bank0
  5013  0095  1105               	bcf	5,2	;volatile
  5014  0096                     l2155:	
  5015                           
  5016                           ;HD44780.c: 119: _delay(10);
  5017  0096  3003               	movlw	3
  5018  0097  00F2               	movwf	??_Lcd_CharCP
  5019  0098                     u4257:	
  5020  0098  0BF2               	decfsz	??_Lcd_CharCP,f
  5021  0099  2898               	goto	u4257
  5022                           
  5023                           ;HD44780.c: 120: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  5024  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5025  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5026  009C  1485               	bsf	5,1	;volatile
  5027  009D  120A  158A  21E9  120A  118A  	fcall	_Lcd_Delay5us
  5028  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  5029  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  5030  00A4  1085               	bcf	5,1	;volatile
  5031                           
  5032                           ;HD44780.c: 121: RA5 = (c & 0b00001000)>>3; RA4 = (c & 0b00000100)>>2;
  5033  00A5  0873               	movf	Lcd_CharCP@c,w
  5034  00A6  00F2               	movwf	??_Lcd_CharCP
  5035  00A7  3003               	movlw	3
  5036  00A8                     u2865:	
  5037  00A8  1003               	clrc
  5038  00A9  0CF2               	rrf	??_Lcd_CharCP,f
  5039  00AA  3EFF               	addlw	-1
  5040  00AB  1D03               	skipz
  5041  00AC  28A8               	goto	u2865
  5042  00AD  1C72               	btfss	??_Lcd_CharCP,0
  5043  00AE  28B3               	goto	u2870
  5044  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  5045  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  5046  00B1  1685               	bsf	5,5	;volatile
  5047  00B2  28B6               	goto	l2165
  5048  00B3                     u2870:	
  5049  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  5050  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  5051  00B5  1285               	bcf	5,5	;volatile
  5052  00B6                     l2165:	
  5053  00B6  0873               	movf	Lcd_CharCP@c,w
  5054  00B7  00F2               	movwf	??_Lcd_CharCP
  5055  00B8  3002               	movlw	2
  5056  00B9                     u2895:	
  5057  00B9  1003               	clrc
  5058  00BA  0CF2               	rrf	??_Lcd_CharCP,f
  5059  00BB  3EFF               	addlw	-1
  5060  00BC  1D03               	skipz
  5061  00BD  28B9               	goto	u2895
  5062  00BE  1C72               	btfss	??_Lcd_CharCP,0
  5063  00BF  28C4               	goto	u2900
  5064  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  5065  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  5066  00C2  1605               	bsf	5,4	;volatile
  5067  00C3  28C7               	goto	l2167
  5068  00C4                     u2900:	
  5069  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  5070  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  5071  00C6  1205               	bcf	5,4	;volatile
  5072  00C7                     l2167:	
  5073                           
  5074                           ;HD44780.c: 122: RA3 = (c & 0b00000010)>>1; RA2 = (c & 0b00000001);
  5075  00C7  0873               	movf	Lcd_CharCP@c,w
  5076  00C8  00F2               	movwf	??_Lcd_CharCP
  5077  00C9  3001               	movlw	1
  5078  00CA                     u2925:	
  5079  00CA  1003               	clrc
  5080  00CB  0CF2               	rrf	??_Lcd_CharCP,f
  5081  00CC  3EFF               	addlw	-1
  5082  00CD  1D03               	skipz
  5083  00CE  28CA               	goto	u2925
  5084  00CF  1C72               	btfss	??_Lcd_CharCP,0
  5085  00D0  28D5               	goto	u2930
  5086  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  5087  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  5088  00D3  1585               	bsf	5,3	;volatile
  5089  00D4  28D8               	goto	l2169
  5090  00D5                     u2930:	
  5091  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  5092  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  5093  00D7  1185               	bcf	5,3	;volatile
  5094  00D8                     l2169:	
  5095  00D8  1C73               	btfss	Lcd_CharCP@c,0
  5096  00D9  28DE               	goto	u2950
  5097  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  5098  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  5099  00DC  1505               	bsf	5,2	;volatile
  5100  00DD  28E1               	goto	l2171
  5101  00DE                     u2950:	
  5102  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  5103  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  5104  00E0  1105               	bcf	5,2	;volatile
  5105  00E1                     l2171:	
  5106                           
  5107                           ;HD44780.c: 123: _delay(10);
  5108  00E1  3003               	movlw	3
  5109  00E2  00F2               	movwf	??_Lcd_CharCP
  5110  00E3                     u4267:	
  5111  00E3  0BF2               	decfsz	??_Lcd_CharCP,f
  5112  00E4  28E3               	goto	u4267
  5113                           
  5114                           ;HD44780.c: 124: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  5115  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  5116  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  5117  00E7  1485               	bsf	5,1	;volatile
  5118  00E8  120A  158A  21E9  120A  118A  	fcall	_Lcd_Delay5us
  5119  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  5120  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  5121  00EF  1085               	bcf	5,1	;volatile
  5122                           
  5123                           ;HD44780.c: 125: Lcd_Delay5us(); Lcd_Delay5500us();
  5124  00F0  120A  158A  21E9  120A  118A  	fcall	_Lcd_Delay5us
  5125  00F5  120A  158A  21F0   	fcall	_Lcd_Delay5500us
  5126  00F8  0008               	return
  5127  00F9                     __end_of_Lcd_CharCP:	
  5128                           
  5129                           	psect	text22
  5130  0EB4                     __ptext22:	
  5131 ;; *************** function _Lcd_Init *****************
  5132 ;; Defined at:
  5133 ;;		line 17 in file "libs/HD44780.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  data            1    5[COMMON] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0, pclath, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5147 ;;      Params:         0       0       0       0       0
  5148 ;;      Locals:         1       0       0       0       0
  5149 ;;      Temps:          1       0       0       0       0
  5150 ;;      Totals:         2       0       0       0       0
  5151 ;;Total ram usage:        2 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    2
  5154 ;; This function calls:
  5155 ;;		_Lcd_Command
  5156 ;;		_Lcd_Delay5500us
  5157 ;;		_Lcd_Delay5us
  5158 ;; This function is called by:
  5159 ;;		_main
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           
  5164                           ;psect for function _Lcd_Init
  5165  0EB4                     _Lcd_Init:	
  5166                           
  5167                           ;HD44780.c: 19: ANSEL = 0x00;
  5168                           
  5169                           ;incstack = 0
  5170                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5171  0EB4  1683               	bsf	3,5	;RP0=1, select bank3
  5172  0EB5  1703               	bsf	3,6	;RP1=1, select bank3
  5173  0EB6  0188               	clrf	8	;volatile
  5174                           
  5175                           ;HD44780.c: 20: ANSELH = 0x00;
  5176  0EB7  0189               	clrf	9	;volatile
  5177                           
  5178                           ;HD44780.c: 23: unsigned char data;
  5179                           ;HD44780.c: 24: TRISAbits.TRISA5 = 0; TRISAbits.TRISA4 = 0; TRISAbits.TRISA3 = 0; TRISAb
      +                          its.TRISA2 = 0; TRISAbits.TRISA1 = 0; TRISAbits.TRISA0 = 0;
  5180  0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  5181  0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  5182  0EBA  1285               	bcf	5,5	;volatile
  5183  0EBB  1205               	bcf	5,4	;volatile
  5184  0EBC  1185               	bcf	5,3	;volatile
  5185  0EBD  1105               	bcf	5,2	;volatile
  5186  0EBE  1085               	bcf	5,1	;volatile
  5187  0EBF  1005               	bcf	5,0	;volatile
  5188                           
  5189                           ;HD44780.c: 25: RA5 = 0; RA4 = 0; RA3 = 0; RA2 = 0; RA1 = 0; RA0 = 0;
  5190  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  5191  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  5192  0EC2  1285               	bcf	5,5	;volatile
  5193  0EC3  1205               	bcf	5,4	;volatile
  5194  0EC4  1185               	bcf	5,3	;volatile
  5195  0EC5  1105               	bcf	5,2	;volatile
  5196  0EC6  1085               	bcf	5,1	;volatile
  5197  0EC7  1005               	bcf	5,0	;volatile
  5198                           
  5199                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  5200  0EC8  120A  158A  21F0  120A  158A  	fcall	_Lcd_Delay5500us
  5201  0ECD  120A  158A  21F0  120A  158A  	fcall	_Lcd_Delay5500us
  5202  0ED2  120A  158A  21F0  120A  158A  	fcall	_Lcd_Delay5500us
  5203                           
  5204                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  5205  0ED7  120A  158A  21F0  120A  158A  	fcall	_Lcd_Delay5500us
  5206  0EDC  120A  158A  21F0  120A  158A  	fcall	_Lcd_Delay5500us
  5207  0EE1  120A  158A  21F0  120A  158A  	fcall	_Lcd_Delay5500us
  5208                           
  5209                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  5210  0EE6  01F5               	clrf	Lcd_Init@data
  5211  0EE7  0AF5               	incf	Lcd_Init@data,f
  5212  0EE8  3004               	movlw	4
  5213  0EE9  0275               	subwf	Lcd_Init@data,w
  5214  0EEA  1803               	btfsc	3,0
  5215  0EEB  2F14               	goto	l214
  5216  0EEC                     l213:	
  5217                           
  5218                           ;HD44780.c: 29: {
  5219                           ;HD44780.c: 30: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 0; RA0 = 0;
  5220  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  5221  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  5222  0EEE  1285               	bcf	5,5	;volatile
  5223  0EEF  1205               	bcf	5,4	;volatile
  5224  0EF0  1585               	bsf	5,3	;volatile
  5225  0EF1  1505               	bsf	5,2	;volatile
  5226  0EF2  1085               	bcf	5,1	;volatile
  5227  0EF3  1005               	bcf	5,0	;volatile
  5228                           
  5229                           ;HD44780.c: 31: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 1; RA0 = 0;
  5230  0EF4  1285               	bcf	5,5	;volatile
  5231  0EF5  1205               	bcf	5,4	;volatile
  5232  0EF6  1585               	bsf	5,3	;volatile
  5233  0EF7  1505               	bsf	5,2	;volatile
  5234  0EF8  1485               	bsf	5,1	;volatile
  5235  0EF9  1005               	bcf	5,0	;volatile
  5236                           
  5237                           ;HD44780.c: 32: Lcd_Delay5us();
  5238  0EFA  120A  158A  21E9  120A  158A  	fcall	_Lcd_Delay5us
  5239                           
  5240                           ;HD44780.c: 33: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 0; RA0 = 0;
  5241  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5242  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5243  0F01  1285               	bcf	5,5	;volatile
  5244  0F02  1205               	bcf	5,4	;volatile
  5245  0F03  1585               	bsf	5,3	;volatile
  5246  0F04  1505               	bsf	5,2	;volatile
  5247  0F05  1085               	bcf	5,1	;volatile
  5248  0F06  1005               	bcf	5,0	;volatile
  5249                           
  5250                           ;HD44780.c: 34: Lcd_Delay5500us();
  5251  0F07  120A  158A  21F0  120A  158A  	fcall	_Lcd_Delay5500us
  5252  0F0C  3001               	movlw	1
  5253  0F0D  00F4               	movwf	??_Lcd_Init
  5254  0F0E  0874               	movf	??_Lcd_Init,w
  5255  0F0F  07F5               	addwf	Lcd_Init@data,f
  5256  0F10  3004               	movlw	4
  5257  0F11  0275               	subwf	Lcd_Init@data,w
  5258  0F12  1C03               	skipc
  5259  0F13  2EEC               	goto	l213
  5260  0F14                     l214:	
  5261                           
  5262                           ;HD44780.c: 35: }
  5263                           ;HD44780.c: 36: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 0; RA0 = 0;
  5264  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0F16  1285               	bcf	5,5	;volatile
  5267  0F17  1205               	bcf	5,4	;volatile
  5268  0F18  1585               	bsf	5,3	;volatile
  5269  0F19  1105               	bcf	5,2	;volatile
  5270  0F1A  1085               	bcf	5,1	;volatile
  5271  0F1B  1005               	bcf	5,0	;volatile
  5272                           
  5273                           ;HD44780.c: 37: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 1; RA0 = 0;
  5274  0F1C  1285               	bcf	5,5	;volatile
  5275  0F1D  1205               	bcf	5,4	;volatile
  5276  0F1E  1585               	bsf	5,3	;volatile
  5277  0F1F  1105               	bcf	5,2	;volatile
  5278  0F20  1485               	bsf	5,1	;volatile
  5279  0F21  1005               	bcf	5,0	;volatile
  5280                           
  5281                           ;HD44780.c: 38: Lcd_Delay5us();
  5282  0F22  120A  158A  21E9  120A  158A  	fcall	_Lcd_Delay5us
  5283                           
  5284                           ;HD44780.c: 39: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 0; RA0 = 0;
  5285  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  5286  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  5287  0F29  1285               	bcf	5,5	;volatile
  5288  0F2A  1205               	bcf	5,4	;volatile
  5289  0F2B  1585               	bsf	5,3	;volatile
  5290  0F2C  1105               	bcf	5,2	;volatile
  5291  0F2D  1085               	bcf	5,1	;volatile
  5292  0F2E  1005               	bcf	5,0	;volatile
  5293                           
  5294                           ;HD44780.c: 40: Lcd_Delay5500us();
  5295  0F2F  120A  158A  21F0  120A  158A  	fcall	_Lcd_Delay5500us
  5296                           
  5297                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  5298  0F34  3028               	movlw	40
  5299  0F35  00F4               	movwf	??_Lcd_Init
  5300  0F36  0874               	movf	??_Lcd_Init,w
  5301  0F37  00F5               	movwf	Lcd_Init@data
  5302  0F38  0875               	movf	Lcd_Init@data,w
  5303  0F39  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  5304                           
  5305                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  5306  0F3E  3010               	movlw	16
  5307  0F3F  00F4               	movwf	??_Lcd_Init
  5308  0F40  0874               	movf	??_Lcd_Init,w
  5309  0F41  00F5               	movwf	Lcd_Init@data
  5310  0F42  0875               	movf	Lcd_Init@data,w
  5311  0F43  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  5312                           
  5313                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  5314  0F48  01F5               	clrf	Lcd_Init@data
  5315  0F49  0AF5               	incf	Lcd_Init@data,f
  5316  0F4A  0875               	movf	Lcd_Init@data,w
  5317  0F4B  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  5318                           
  5319                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  5320  0F50  300F               	movlw	15
  5321  0F51  00F4               	movwf	??_Lcd_Init
  5322  0F52  0874               	movf	??_Lcd_Init,w
  5323  0F53  00F5               	movwf	Lcd_Init@data
  5324  0F54  0875               	movf	Lcd_Init@data,w
  5325  0F55  120A  158A  2759   	fcall	_Lcd_Command
  5326  0F58  0008               	return
  5327  0F59                     __end_of_Lcd_Init:	
  5328                           
  5329                           	psect	text23
  5330  0F59                     __ptext23:	
  5331 ;; *************** function _Lcd_Command *****************
  5332 ;; Defined at:
  5333 ;;		line 132 in file "libs/HD44780.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  command         1    wreg     unsigned char 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  command         1    3[COMMON] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      void 
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, pclath, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5347 ;;      Params:         0       0       0       0       0
  5348 ;;      Locals:         1       0       0       0       0
  5349 ;;      Temps:          1       0       0       0       0
  5350 ;;      Totals:         2       0       0       0       0
  5351 ;;Total ram usage:        2 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    1
  5354 ;; This function calls:
  5355 ;;		_Lcd_Delay5500us
  5356 ;;		_Lcd_Delay5us
  5357 ;; This function is called by:
  5358 ;;		_main
  5359 ;;		_Lcd_Init
  5360 ;;		_Lcd_Text
  5361 ;;		_Lcd_WriteChar
  5362 ;;		_Lcd_ConstText
  5363 ;;		_Lcd_Int
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           
  5368                           ;psect for function _Lcd_Command
  5369  0F59                     _Lcd_Command:	
  5370                           
  5371                           ;incstack = 0
  5372                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+pclath+cstack]
  5373                           ;Lcd_Command@command stored from wreg
  5374  0F59  00F3               	movwf	Lcd_Command@command
  5375                           
  5376                           ;HD44780.c: 133: RA1 = 0; RA0 = 0;
  5377  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5378  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  5379  0F5C  1085               	bcf	5,1	;volatile
  5380  0F5D  1005               	bcf	5,0	;volatile
  5381                           
  5382                           ;HD44780.c: 134: RA5 = (command & 0b10000000)>>7; RA4 = (command & 0b01000000)>>6;
  5383  0F5E  0873               	movf	Lcd_Command@command,w
  5384  0F5F  00F2               	movwf	??_Lcd_Command
  5385  0F60  3007               	movlw	7
  5386  0F61                     u2485:	
  5387  0F61  1003               	clrc
  5388  0F62  0CF2               	rrf	??_Lcd_Command,f
  5389  0F63  3EFF               	addlw	-1
  5390  0F64  1D03               	skipz
  5391  0F65  2F61               	goto	u2485
  5392  0F66  1C72               	btfss	??_Lcd_Command,0
  5393  0F67  2F6C               	goto	u2490
  5394  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  5396  0F6A  1685               	bsf	5,5	;volatile
  5397  0F6B  2F6F               	goto	u2504
  5398  0F6C                     u2490:	
  5399  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  5400  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  5401  0F6E  1285               	bcf	5,5	;volatile
  5402  0F6F                     u2504:	
  5403  0F6F  0873               	movf	Lcd_Command@command,w
  5404  0F70  00F2               	movwf	??_Lcd_Command
  5405  0F71  3006               	movlw	6
  5406  0F72                     u2515:	
  5407  0F72  1003               	clrc
  5408  0F73  0CF2               	rrf	??_Lcd_Command,f
  5409  0F74  3EFF               	addlw	-1
  5410  0F75  1D03               	skipz
  5411  0F76  2F72               	goto	u2515
  5412  0F77  1C72               	btfss	??_Lcd_Command,0
  5413  0F78  2F7D               	goto	u2520
  5414  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  5415  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  5416  0F7B  1605               	bsf	5,4	;volatile
  5417  0F7C  2F80               	goto	u2534
  5418  0F7D                     u2520:	
  5419  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5420  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  5421  0F7F  1205               	bcf	5,4	;volatile
  5422  0F80                     u2534:	
  5423                           
  5424                           ;HD44780.c: 135: RA3 = (command & 0b00100000)>>5; RA2 = (command & 0b00010000)>>4;
  5425  0F80  0873               	movf	Lcd_Command@command,w
  5426  0F81  00F2               	movwf	??_Lcd_Command
  5427  0F82  3005               	movlw	5
  5428  0F83                     u2545:	
  5429  0F83  1003               	clrc
  5430  0F84  0CF2               	rrf	??_Lcd_Command,f
  5431  0F85  3EFF               	addlw	-1
  5432  0F86  1D03               	skipz
  5433  0F87  2F83               	goto	u2545
  5434  0F88  1C72               	btfss	??_Lcd_Command,0
  5435  0F89  2F8E               	goto	u2550
  5436  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  5437  0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  5438  0F8C  1585               	bsf	5,3	;volatile
  5439  0F8D  2F91               	goto	u2564
  5440  0F8E                     u2550:	
  5441  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  5442  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  5443  0F90  1185               	bcf	5,3	;volatile
  5444  0F91                     u2564:	
  5445  0F91  0873               	movf	Lcd_Command@command,w
  5446  0F92  00F2               	movwf	??_Lcd_Command
  5447  0F93  3004               	movlw	4
  5448  0F94                     u2575:	
  5449  0F94  1003               	clrc
  5450  0F95  0CF2               	rrf	??_Lcd_Command,f
  5451  0F96  3EFF               	addlw	-1
  5452  0F97  1D03               	skipz
  5453  0F98  2F94               	goto	u2575
  5454  0F99  1C72               	btfss	??_Lcd_Command,0
  5455  0F9A  2F9F               	goto	u2580
  5456  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  5457  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  5458  0F9D  1505               	bsf	5,2	;volatile
  5459  0F9E  2FA2               	goto	l2109
  5460  0F9F                     u2580:	
  5461  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  5462  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  5463  0FA1  1105               	bcf	5,2	;volatile
  5464  0FA2                     l2109:	
  5465                           
  5466                           ;HD44780.c: 136: _delay(10);
  5467  0FA2  3003               	movlw	3
  5468  0FA3  00F2               	movwf	??_Lcd_Command
  5469  0FA4                     u4277:	
  5470  0FA4  0BF2               	decfsz	??_Lcd_Command,f
  5471  0FA5  2FA4               	goto	u4277
  5472                           
  5473                           ;HD44780.c: 137: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  5474  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  5475  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  5476  0FA8  1485               	bsf	5,1	;volatile
  5477  0FA9  120A  158A  21E9  120A  158A  	fcall	_Lcd_Delay5us
  5478  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  5479  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  5480  0FB0  1085               	bcf	5,1	;volatile
  5481                           
  5482                           ;HD44780.c: 138: RA5 = (command & 0b00001000)>>3; RA4 = (command & 0b00000100)>>2;
  5483  0FB1  0873               	movf	Lcd_Command@command,w
  5484  0FB2  00F2               	movwf	??_Lcd_Command
  5485  0FB3  3003               	movlw	3
  5486  0FB4                     u2605:	
  5487  0FB4  1003               	clrc
  5488  0FB5  0CF2               	rrf	??_Lcd_Command,f
  5489  0FB6  3EFF               	addlw	-1
  5490  0FB7  1D03               	skipz
  5491  0FB8  2FB4               	goto	u2605
  5492  0FB9  1C72               	btfss	??_Lcd_Command,0
  5493  0FBA  2FBF               	goto	u2610
  5494  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  5495  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  5496  0FBD  1685               	bsf	5,5	;volatile
  5497  0FBE  2FC2               	goto	l2119
  5498  0FBF                     u2610:	
  5499  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  5500  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  5501  0FC1  1285               	bcf	5,5	;volatile
  5502  0FC2                     l2119:	
  5503  0FC2  0873               	movf	Lcd_Command@command,w
  5504  0FC3  00F2               	movwf	??_Lcd_Command
  5505  0FC4  3002               	movlw	2
  5506  0FC5                     u2635:	
  5507  0FC5  1003               	clrc
  5508  0FC6  0CF2               	rrf	??_Lcd_Command,f
  5509  0FC7  3EFF               	addlw	-1
  5510  0FC8  1D03               	skipz
  5511  0FC9  2FC5               	goto	u2635
  5512  0FCA  1C72               	btfss	??_Lcd_Command,0
  5513  0FCB  2FD0               	goto	u2640
  5514  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  5515  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  5516  0FCE  1605               	bsf	5,4	;volatile
  5517  0FCF  2FD3               	goto	l2121
  5518  0FD0                     u2640:	
  5519  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0FD2  1205               	bcf	5,4	;volatile
  5522  0FD3                     l2121:	
  5523                           
  5524                           ;HD44780.c: 139: RA3 = (command & 0b00000010)>>1; RA2 = (command & 0b00000001);
  5525  0FD3  0873               	movf	Lcd_Command@command,w
  5526  0FD4  00F2               	movwf	??_Lcd_Command
  5527  0FD5  3001               	movlw	1
  5528  0FD6                     u2665:	
  5529  0FD6  1003               	clrc
  5530  0FD7  0CF2               	rrf	??_Lcd_Command,f
  5531  0FD8  3EFF               	addlw	-1
  5532  0FD9  1D03               	skipz
  5533  0FDA  2FD6               	goto	u2665
  5534  0FDB  1C72               	btfss	??_Lcd_Command,0
  5535  0FDC  2FE1               	goto	u2670
  5536  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  5537  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  5538  0FDF  1585               	bsf	5,3	;volatile
  5539  0FE0  2FE4               	goto	l2123
  5540  0FE1                     u2670:	
  5541  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  5542  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  5543  0FE3  1185               	bcf	5,3	;volatile
  5544  0FE4                     l2123:	
  5545  0FE4  1C73               	btfss	Lcd_Command@command,0
  5546  0FE5  2FEA               	goto	u2690
  5547  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  5548  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  5549  0FE8  1505               	bsf	5,2	;volatile
  5550  0FE9  2FED               	goto	l2125
  5551  0FEA                     u2690:	
  5552  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  5553  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  5554  0FEC  1105               	bcf	5,2	;volatile
  5555  0FED                     l2125:	
  5556                           
  5557                           ;HD44780.c: 140: _delay(10);
  5558  0FED  3003               	movlw	3
  5559  0FEE  00F2               	movwf	??_Lcd_Command
  5560  0FEF                     u4287:	
  5561  0FEF  0BF2               	decfsz	??_Lcd_Command,f
  5562  0FF0  2FEF               	goto	u4287
  5563                           
  5564                           ;HD44780.c: 141: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  5565  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  5566  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  5567  0FF3  1485               	bsf	5,1	;volatile
  5568  0FF4  120A  158A  21E9  120A  158A  	fcall	_Lcd_Delay5us
  5569  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  5570  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  5571  0FFB  1085               	bcf	5,1	;volatile
  5572                           
  5573                           ;HD44780.c: 142: Lcd_Delay5500us();
  5574  0FFC  120A  158A  21F0   	fcall	_Lcd_Delay5500us
  5575  0FFF  0008               	return
  5576  1000                     __end_of_Lcd_Command:	
  5577                           
  5578                           	psect	text24
  5579  09E9                     __ptext24:	
  5580 ;; *************** function _Lcd_Delay5us *****************
  5581 ;; Defined at:
  5582 ;;		line 148 in file "libs/HD44780.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		None
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5596 ;;      Params:         0       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0
  5599 ;;      Totals:         0       0       0       0       0
  5600 ;;Total ram usage:        0 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_Lcd_Init
  5606 ;;		_Lcd_CharCP
  5607 ;;		_Lcd_Command
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           
  5612                           ;psect for function _Lcd_Delay5us
  5613  09E9                     _Lcd_Delay5us:	
  5614                           
  5615                           ;HD44780.c: 149: _delay((unsigned long)((5)*(4000000/4000000.0)));
  5616                           
  5617                           ;incstack = 0
  5618                           ; Regs used in _Lcd_Delay5us: []
  5619  09E9  29EA               	nop2	;2 cycle nop
  5620  09EA  29EB               	nop2	;2 cycle nop
  5621  09EB  0000               	nop
  5622                           
  5623                           ;HD44780.c: 150: _delay((unsigned long)((5)*(4000000/4000000.0)));
  5624  09EC  29ED               	nop2	;2 cycle nop
  5625  09ED  29EE               	nop2	;2 cycle nop
  5626  09EE  0000               	nop
  5627  09EF  0008               	return
  5628  09F0                     __end_of_Lcd_Delay5us:	
  5629                           
  5630                           	psect	text25
  5631  09F0                     __ptext25:	
  5632 ;; *************** function _Lcd_Delay5500us *****************
  5633 ;; Defined at:
  5634 ;;		line 152 in file "libs/HD44780.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5648 ;;      Params:         0       0       0       0       0
  5649 ;;      Locals:         0       0       0       0       0
  5650 ;;      Temps:          2       0       0       0       0
  5651 ;;      Totals:         2       0       0       0       0
  5652 ;;Total ram usage:        2 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_Lcd_Init
  5658 ;;		_Lcd_CharCP
  5659 ;;		_Lcd_Command
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function _Lcd_Delay5500us
  5665  09F0                     _Lcd_Delay5500us:	
  5666                           
  5667                           ;HD44780.c: 153: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5668                           
  5669                           ;incstack = 0
  5670                           ; Regs used in _Lcd_Delay5500us: [wreg]
  5671  09F0  3008               	movlw	8
  5672  09F1  00F1               	movwf	??_Lcd_Delay5500us+1
  5673  09F2  3023               	movlw	35
  5674  09F3  00F0               	movwf	??_Lcd_Delay5500us
  5675  09F4                     u4297:	
  5676  09F4  0BF0               	decfsz	??_Lcd_Delay5500us,f
  5677  09F5  29F4               	goto	u4297
  5678  09F6  0BF1               	decfsz	??_Lcd_Delay5500us+1,f
  5679  09F7  29F4               	goto	u4297
  5680  09F8  0008               	return
  5681  09F9                     __end_of_Lcd_Delay5500us:	
  5682                           
  5683                           	psect	text26
  5684  0444                     __ptext26:	
  5685 ;; *************** function _GPS2Sec *****************
  5686 ;; Defined at:
  5687 ;;		line 64 in file "libs/gsk_funs.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  GPSTime         1    wreg     PTR unsigned char 
  5690 ;;		 -> main@GPSDate(6), 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  GPSTime         1   12[BANK0 ] PTR unsigned char 
  5693 ;;		 -> main@GPSDate(6), 
  5694 ;;  TimeInSec       4   13[BANK0 ] unsigned long 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  4    0[BANK0 ] unsigned long 
  5697 ;; Registers used:
  5698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5704 ;;      Params:         0       4       0       0       0
  5705 ;;      Locals:         0       5       0       0       0
  5706 ;;      Temps:          0       8       0       0       0
  5707 ;;      Totals:         0      17       0       0       0
  5708 ;;Total ram usage:       17 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    1
  5711 ;; This function calls:
  5712 ;;		___lmul
  5713 ;;		___wmul
  5714 ;; This function is called by:
  5715 ;;		_main
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           
  5720                           ;psect for function _GPS2Sec
  5721  0444                     _GPS2Sec:	
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in _GPS2Sec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5725                           ;GPS2Sec@GPSTime stored from wreg
  5726  0444  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0445  1303               	bcf	3,6	;RP1=0, select bank0
  5728  0446  00AC               	movwf	GPS2Sec@GPSTime
  5729                           
  5730                           ;gsk_funs.c: 65: uint32_t TimeInSec;
  5731                           ;gsk_funs.c: 66: TimeInSec = (GPSTime[5]-0x30);
  5732  0447  082C               	movf	GPS2Sec@GPSTime,w
  5733  0448  3E05               	addlw	5
  5734  0449  0084               	movwf	4
  5735  044A  1383               	bcf	3,7	;select IRP bank0
  5736  044B  0800               	movf	0,w
  5737  044C  3ED0               	addlw	208
  5738  044D  00AD               	movwf	GPS2Sec@TimeInSec
  5739  044E  30FF               	movlw	255
  5740  044F  1803               	skipnc
  5741  0450  3000               	movlw	0
  5742  0451  00AE               	movwf	GPS2Sec@TimeInSec+1
  5743  0452  01AF               	clrf	GPS2Sec@TimeInSec+2
  5744  0453  1BAE               	btfsc	GPS2Sec@TimeInSec+1,7
  5745  0454  03AF               	decf	GPS2Sec@TimeInSec+2,f
  5746  0455  082F               	movf	GPS2Sec@TimeInSec+2,w
  5747  0456  00B0               	movwf	GPS2Sec@TimeInSec+3
  5748                           
  5749                           ;gsk_funs.c: 67: TimeInSec = TimeInSec + (GPSTime[4]-0x30)*10;
  5750  0457  082D               	movf	GPS2Sec@TimeInSec,w
  5751  0458  00A4               	movwf	??_GPS2Sec
  5752  0459  082E               	movf	GPS2Sec@TimeInSec+1,w
  5753  045A  00A5               	movwf	??_GPS2Sec+1
  5754  045B  082F               	movf	GPS2Sec@TimeInSec+2,w
  5755  045C  00A6               	movwf	??_GPS2Sec+2
  5756  045D  0830               	movf	GPS2Sec@TimeInSec+3,w
  5757  045E  00A7               	movwf	??_GPS2Sec+3
  5758  045F  082C               	movf	GPS2Sec@GPSTime,w
  5759  0460  3E04               	addlw	4
  5760  0461  0084               	movwf	4
  5761  0462  0800               	movf	0,w
  5762  0463  3ED0               	addlw	208
  5763  0464  00F0               	movwf	___wmul@multiplier
  5764  0465  30FF               	movlw	255
  5765  0466  1803               	skipnc
  5766  0467  3000               	movlw	0
  5767  0468  00F1               	movwf	___wmul@multiplier+1
  5768  0469  300A               	movlw	10
  5769  046A  00F2               	movwf	___wmul@multiplicand
  5770  046B  3000               	movlw	0
  5771  046C  00F3               	movwf	___wmul@multiplicand+1
  5772  046D  120A  158A  223A  120A  118A  	fcall	___wmul
  5773  0472  0870               	movf	?___wmul,w
  5774  0473  1283               	bcf	3,5	;RP0=0, select bank0
  5775  0474  1303               	bcf	3,6	;RP1=0, select bank0
  5776  0475  00A8               	movwf	??_GPS2Sec+4
  5777  0476  0871               	movf	?___wmul+1,w
  5778  0477  00A9               	movwf	??_GPS2Sec+5
  5779  0478  3000               	movlw	0
  5780  0479  1BA9               	btfsc	??_GPS2Sec+5,7
  5781  047A  30FF               	movlw	255
  5782  047B  00AA               	movwf	??_GPS2Sec+6
  5783  047C  00AB               	movwf	??_GPS2Sec+7
  5784  047D  0828               	movf	??_GPS2Sec+4,w
  5785  047E  07A4               	addwf	??_GPS2Sec,f
  5786  047F  0829               	movf	??_GPS2Sec+5,w
  5787  0480  1803               	skipnc
  5788  0481  0F29               	incfsz	??_GPS2Sec+5,w
  5789  0482  2C84               	goto	u3890
  5790  0483  2C85               	goto	u3891
  5791  0484                     u3890:	
  5792  0484  07A5               	addwf	??_GPS2Sec+1,f
  5793  0485                     u3891:	
  5794  0485  082A               	movf	??_GPS2Sec+6,w
  5795  0486  1803               	skipnc
  5796  0487  0F2A               	incfsz	??_GPS2Sec+6,w
  5797  0488  2C8A               	goto	u3892
  5798  0489  2C8B               	goto	u3893
  5799  048A                     u3892:	
  5800  048A  07A6               	addwf	??_GPS2Sec+2,f
  5801  048B                     u3893:	
  5802  048B  082B               	movf	??_GPS2Sec+7,w
  5803  048C  1803               	skipnc
  5804  048D  0A2B               	incf	??_GPS2Sec+7,w
  5805  048E  07A7               	addwf	??_GPS2Sec+3,f
  5806  048F  0827               	movf	??_GPS2Sec+3,w
  5807  0490  00B0               	movwf	GPS2Sec@TimeInSec+3
  5808  0491  0826               	movf	??_GPS2Sec+2,w
  5809  0492  00AF               	movwf	GPS2Sec@TimeInSec+2
  5810  0493  0825               	movf	??_GPS2Sec+1,w
  5811  0494  00AE               	movwf	GPS2Sec@TimeInSec+1
  5812  0495  0824               	movf	??_GPS2Sec,w
  5813  0496  00AD               	movwf	GPS2Sec@TimeInSec
  5814                           
  5815                           ;gsk_funs.c: 68: TimeInSec = TimeInSec + (GPSTime[3]-0x30)*60;
  5816  0497  082D               	movf	GPS2Sec@TimeInSec,w
  5817  0498  00A4               	movwf	??_GPS2Sec
  5818  0499  082E               	movf	GPS2Sec@TimeInSec+1,w
  5819  049A  00A5               	movwf	??_GPS2Sec+1
  5820  049B  082F               	movf	GPS2Sec@TimeInSec+2,w
  5821  049C  00A6               	movwf	??_GPS2Sec+2
  5822  049D  0830               	movf	GPS2Sec@TimeInSec+3,w
  5823  049E  00A7               	movwf	??_GPS2Sec+3
  5824  049F  082C               	movf	GPS2Sec@GPSTime,w
  5825  04A0  3E03               	addlw	3
  5826  04A1  0084               	movwf	4
  5827  04A2  1383               	bcf	3,7	;select IRP bank0
  5828  04A3  0800               	movf	0,w
  5829  04A4  3ED0               	addlw	208
  5830  04A5  00F0               	movwf	___wmul@multiplier
  5831  04A6  30FF               	movlw	255
  5832  04A7  1803               	skipnc
  5833  04A8  3000               	movlw	0
  5834  04A9  00F1               	movwf	___wmul@multiplier+1
  5835  04AA  303C               	movlw	60
  5836  04AB  00F2               	movwf	___wmul@multiplicand
  5837  04AC  3000               	movlw	0
  5838  04AD  00F3               	movwf	___wmul@multiplicand+1
  5839  04AE  120A  158A  223A  120A  118A  	fcall	___wmul
  5840  04B3  0870               	movf	?___wmul,w
  5841  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  5842  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  5843  04B6  00A8               	movwf	??_GPS2Sec+4
  5844  04B7  0871               	movf	?___wmul+1,w
  5845  04B8  00A9               	movwf	??_GPS2Sec+5
  5846  04B9  3000               	movlw	0
  5847  04BA  1BA9               	btfsc	??_GPS2Sec+5,7
  5848  04BB  30FF               	movlw	255
  5849  04BC  00AA               	movwf	??_GPS2Sec+6
  5850  04BD  00AB               	movwf	??_GPS2Sec+7
  5851  04BE  0828               	movf	??_GPS2Sec+4,w
  5852  04BF  07A4               	addwf	??_GPS2Sec,f
  5853  04C0  0829               	movf	??_GPS2Sec+5,w
  5854  04C1  1803               	skipnc
  5855  04C2  0F29               	incfsz	??_GPS2Sec+5,w
  5856  04C3  2CC5               	goto	u3900
  5857  04C4  2CC6               	goto	u3901
  5858  04C5                     u3900:	
  5859  04C5  07A5               	addwf	??_GPS2Sec+1,f
  5860  04C6                     u3901:	
  5861  04C6  082A               	movf	??_GPS2Sec+6,w
  5862  04C7  1803               	skipnc
  5863  04C8  0F2A               	incfsz	??_GPS2Sec+6,w
  5864  04C9  2CCB               	goto	u3902
  5865  04CA  2CCC               	goto	u3903
  5866  04CB                     u3902:	
  5867  04CB  07A6               	addwf	??_GPS2Sec+2,f
  5868  04CC                     u3903:	
  5869  04CC  082B               	movf	??_GPS2Sec+7,w
  5870  04CD  1803               	skipnc
  5871  04CE  0A2B               	incf	??_GPS2Sec+7,w
  5872  04CF  07A7               	addwf	??_GPS2Sec+3,f
  5873  04D0  0827               	movf	??_GPS2Sec+3,w
  5874  04D1  00B0               	movwf	GPS2Sec@TimeInSec+3
  5875  04D2  0826               	movf	??_GPS2Sec+2,w
  5876  04D3  00AF               	movwf	GPS2Sec@TimeInSec+2
  5877  04D4  0825               	movf	??_GPS2Sec+1,w
  5878  04D5  00AE               	movwf	GPS2Sec@TimeInSec+1
  5879  04D6  0824               	movf	??_GPS2Sec,w
  5880  04D7  00AD               	movwf	GPS2Sec@TimeInSec
  5881                           
  5882                           ;gsk_funs.c: 69: TimeInSec = TimeInSec + (GPSTime[2]-0x30)*60*10;
  5883  04D8  082D               	movf	GPS2Sec@TimeInSec,w
  5884  04D9  00A4               	movwf	??_GPS2Sec
  5885  04DA  082E               	movf	GPS2Sec@TimeInSec+1,w
  5886  04DB  00A5               	movwf	??_GPS2Sec+1
  5887  04DC  082F               	movf	GPS2Sec@TimeInSec+2,w
  5888  04DD  00A6               	movwf	??_GPS2Sec+2
  5889  04DE  0830               	movf	GPS2Sec@TimeInSec+3,w
  5890  04DF  00A7               	movwf	??_GPS2Sec+3
  5891  04E0  082C               	movf	GPS2Sec@GPSTime,w
  5892  04E1  3E02               	addlw	2
  5893  04E2  0084               	movwf	4
  5894  04E3  1383               	bcf	3,7	;select IRP bank0
  5895  04E4  0800               	movf	0,w
  5896  04E5  3ED0               	addlw	208
  5897  04E6  00F0               	movwf	___wmul@multiplier
  5898  04E7  30FF               	movlw	255
  5899  04E8  1803               	skipnc
  5900  04E9  3000               	movlw	0
  5901  04EA  00F1               	movwf	___wmul@multiplier+1
  5902  04EB  3058               	movlw	88
  5903  04EC  00F2               	movwf	___wmul@multiplicand
  5904  04ED  3002               	movlw	2
  5905  04EE  00F3               	movwf	___wmul@multiplicand+1
  5906  04EF  120A  158A  223A  120A  118A  	fcall	___wmul
  5907  04F4  0870               	movf	?___wmul,w
  5908  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  5909  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  5910  04F7  00A8               	movwf	??_GPS2Sec+4
  5911  04F8  0871               	movf	?___wmul+1,w
  5912  04F9  00A9               	movwf	??_GPS2Sec+5
  5913  04FA  3000               	movlw	0
  5914  04FB  1BA9               	btfsc	??_GPS2Sec+5,7
  5915  04FC  30FF               	movlw	255
  5916  04FD  00AA               	movwf	??_GPS2Sec+6
  5917  04FE  00AB               	movwf	??_GPS2Sec+7
  5918  04FF  0828               	movf	??_GPS2Sec+4,w
  5919  0500  07A4               	addwf	??_GPS2Sec,f
  5920  0501  0829               	movf	??_GPS2Sec+5,w
  5921  0502  1803               	skipnc
  5922  0503  0F29               	incfsz	??_GPS2Sec+5,w
  5923  0504  2D06               	goto	u3910
  5924  0505  2D07               	goto	u3911
  5925  0506                     u3910:	
  5926  0506  07A5               	addwf	??_GPS2Sec+1,f
  5927  0507                     u3911:	
  5928  0507  082A               	movf	??_GPS2Sec+6,w
  5929  0508  1803               	skipnc
  5930  0509  0F2A               	incfsz	??_GPS2Sec+6,w
  5931  050A  2D0C               	goto	u3912
  5932  050B  2D0D               	goto	u3913
  5933  050C                     u3912:	
  5934  050C  07A6               	addwf	??_GPS2Sec+2,f
  5935  050D                     u3913:	
  5936  050D  082B               	movf	??_GPS2Sec+7,w
  5937  050E  1803               	skipnc
  5938  050F  0A2B               	incf	??_GPS2Sec+7,w
  5939  0510  07A7               	addwf	??_GPS2Sec+3,f
  5940  0511  0827               	movf	??_GPS2Sec+3,w
  5941  0512  00B0               	movwf	GPS2Sec@TimeInSec+3
  5942  0513  0826               	movf	??_GPS2Sec+2,w
  5943  0514  00AF               	movwf	GPS2Sec@TimeInSec+2
  5944  0515  0825               	movf	??_GPS2Sec+1,w
  5945  0516  00AE               	movwf	GPS2Sec@TimeInSec+1
  5946  0517  0824               	movf	??_GPS2Sec,w
  5947  0518  00AD               	movwf	GPS2Sec@TimeInSec
  5948                           
  5949                           ;gsk_funs.c: 70: TimeInSec = TimeInSec + (GPSTime[1]-0x30)*60*60;
  5950  0519  082D               	movf	GPS2Sec@TimeInSec,w
  5951  051A  00A4               	movwf	??_GPS2Sec
  5952  051B  082E               	movf	GPS2Sec@TimeInSec+1,w
  5953  051C  00A5               	movwf	??_GPS2Sec+1
  5954  051D  082F               	movf	GPS2Sec@TimeInSec+2,w
  5955  051E  00A6               	movwf	??_GPS2Sec+2
  5956  051F  0830               	movf	GPS2Sec@TimeInSec+3,w
  5957  0520  00A7               	movwf	??_GPS2Sec+3
  5958  0521  0A2C               	incf	GPS2Sec@GPSTime,w
  5959  0522  0084               	movwf	4
  5960  0523  1383               	bcf	3,7	;select IRP bank0
  5961  0524  0800               	movf	0,w
  5962  0525  3ED0               	addlw	208
  5963  0526  00F0               	movwf	___wmul@multiplier
  5964  0527  30FF               	movlw	255
  5965  0528  1803               	skipnc
  5966  0529  3000               	movlw	0
  5967  052A  00F1               	movwf	___wmul@multiplier+1
  5968  052B  3010               	movlw	16
  5969  052C  00F2               	movwf	___wmul@multiplicand
  5970  052D  300E               	movlw	14
  5971  052E  00F3               	movwf	___wmul@multiplicand+1
  5972  052F  120A  158A  223A  120A  118A  	fcall	___wmul
  5973  0534  0870               	movf	?___wmul,w
  5974  0535  1283               	bcf	3,5	;RP0=0, select bank0
  5975  0536  1303               	bcf	3,6	;RP1=0, select bank0
  5976  0537  00A8               	movwf	??_GPS2Sec+4
  5977  0538  0871               	movf	?___wmul+1,w
  5978  0539  00A9               	movwf	??_GPS2Sec+5
  5979  053A  3000               	movlw	0
  5980  053B  1BA9               	btfsc	??_GPS2Sec+5,7
  5981  053C  30FF               	movlw	255
  5982  053D  00AA               	movwf	??_GPS2Sec+6
  5983  053E  00AB               	movwf	??_GPS2Sec+7
  5984  053F  0828               	movf	??_GPS2Sec+4,w
  5985  0540  07A4               	addwf	??_GPS2Sec,f
  5986  0541  0829               	movf	??_GPS2Sec+5,w
  5987  0542  1803               	skipnc
  5988  0543  0F29               	incfsz	??_GPS2Sec+5,w
  5989  0544  2D46               	goto	u3920
  5990  0545  2D47               	goto	u3921
  5991  0546                     u3920:	
  5992  0546  07A5               	addwf	??_GPS2Sec+1,f
  5993  0547                     u3921:	
  5994  0547  082A               	movf	??_GPS2Sec+6,w
  5995  0548  1803               	skipnc
  5996  0549  0F2A               	incfsz	??_GPS2Sec+6,w
  5997  054A  2D4C               	goto	u3922
  5998  054B  2D4D               	goto	u3923
  5999  054C                     u3922:	
  6000  054C  07A6               	addwf	??_GPS2Sec+2,f
  6001  054D                     u3923:	
  6002  054D  082B               	movf	??_GPS2Sec+7,w
  6003  054E  1803               	skipnc
  6004  054F  0A2B               	incf	??_GPS2Sec+7,w
  6005  0550  07A7               	addwf	??_GPS2Sec+3,f
  6006  0551  0827               	movf	??_GPS2Sec+3,w
  6007  0552  00B0               	movwf	GPS2Sec@TimeInSec+3
  6008  0553  0826               	movf	??_GPS2Sec+2,w
  6009  0554  00AF               	movwf	GPS2Sec@TimeInSec+2
  6010  0555  0825               	movf	??_GPS2Sec+1,w
  6011  0556  00AE               	movwf	GPS2Sec@TimeInSec+1
  6012  0557  0824               	movf	??_GPS2Sec,w
  6013  0558  00AD               	movwf	GPS2Sec@TimeInSec
  6014                           
  6015                           ;gsk_funs.c: 71: TimeInSec = TimeInSec + (GPSTime[0]-0x30)*36000;
  6016  0559  082C               	movf	GPS2Sec@GPSTime,w
  6017  055A  0084               	movwf	4
  6018  055B  1383               	bcf	3,7	;select IRP bank0
  6019  055C  0800               	movf	0,w
  6020  055D  3ED0               	addlw	208
  6021  055E  00F0               	movwf	___lmul@multiplier
  6022  055F  30FF               	movlw	255
  6023  0560  1803               	skipnc
  6024  0561  3000               	movlw	0
  6025  0562  00F1               	movwf	___lmul@multiplier+1
  6026  0563  01F2               	clrf	___lmul@multiplier+2
  6027  0564  1BF1               	btfsc	___lmul@multiplier+1,7
  6028  0565  03F2               	decf	___lmul@multiplier+2,f
  6029  0566  0872               	movf	___lmul@multiplier+2,w
  6030  0567  00F3               	movwf	___lmul@multiplier+3
  6031  0568  3000               	movlw	0
  6032  0569  00F7               	movwf	___lmul@multiplicand+3
  6033  056A  3000               	movlw	0
  6034  056B  00F6               	movwf	___lmul@multiplicand+2
  6035  056C  308C               	movlw	140
  6036  056D  00F5               	movwf	___lmul@multiplicand+1
  6037  056E  30A0               	movlw	160
  6038  056F  00F4               	movwf	___lmul@multiplicand
  6039  0570  120A  158A  22C3  120A  118A  	fcall	___lmul
  6040  0575  0870               	movf	?___lmul,w
  6041  0576  1283               	bcf	3,5	;RP0=0, select bank0
  6042  0577  1303               	bcf	3,6	;RP1=0, select bank0
  6043  0578  072D               	addwf	GPS2Sec@TimeInSec,w
  6044  0579  00A4               	movwf	??_GPS2Sec
  6045  057A  3000               	movlw	0
  6046  057B  1803               	skipnc
  6047  057C  3001               	movlw	1
  6048  057D  0771               	addwf	?___lmul+1,w
  6049  057E  01A6               	clrf	??_GPS2Sec+2
  6050  057F  1803               	skipnc
  6051  0580  0AA6               	incf	??_GPS2Sec+2,f
  6052  0581  072E               	addwf	GPS2Sec@TimeInSec+1,w
  6053  0582  00A5               	movwf	??_GPS2Sec+1
  6054  0583  1803               	skipnc
  6055  0584  0AA6               	incf	??_GPS2Sec+2,f
  6056  0585  0872               	movf	?___lmul+2,w
  6057  0586  0726               	addwf	??_GPS2Sec+2,w
  6058  0587  01A7               	clrf	??_GPS2Sec+3
  6059  0588  1803               	skipnc
  6060  0589  0AA7               	incf	??_GPS2Sec+3,f
  6061  058A  072F               	addwf	GPS2Sec@TimeInSec+2,w
  6062  058B  00A6               	movwf	??_GPS2Sec+2
  6063  058C  1803               	skipnc
  6064  058D  0AA7               	incf	??_GPS2Sec+3,f
  6065  058E  0873               	movf	?___lmul+3,w
  6066  058F  0727               	addwf	??_GPS2Sec+3,w
  6067  0590  0730               	addwf	GPS2Sec@TimeInSec+3,w
  6068  0591  00A7               	movwf	??_GPS2Sec+3
  6069  0592  0827               	movf	??_GPS2Sec+3,w
  6070  0593  00B0               	movwf	GPS2Sec@TimeInSec+3
  6071  0594  0826               	movf	??_GPS2Sec+2,w
  6072  0595  00AF               	movwf	GPS2Sec@TimeInSec+2
  6073  0596  0825               	movf	??_GPS2Sec+1,w
  6074  0597  00AE               	movwf	GPS2Sec@TimeInSec+1
  6075  0598  0824               	movf	??_GPS2Sec,w
  6076  0599  00AD               	movwf	GPS2Sec@TimeInSec
  6077                           
  6078                           ;gsk_funs.c: 72: return TimeInSec;
  6079  059A  0830               	movf	GPS2Sec@TimeInSec+3,w
  6080  059B  00A3               	movwf	?_GPS2Sec+3
  6081  059C  082F               	movf	GPS2Sec@TimeInSec+2,w
  6082  059D  00A2               	movwf	?_GPS2Sec+2
  6083  059E  082E               	movf	GPS2Sec@TimeInSec+1,w
  6084  059F  00A1               	movwf	?_GPS2Sec+1
  6085  05A0  082D               	movf	GPS2Sec@TimeInSec,w
  6086  05A1  00A0               	movwf	?_GPS2Sec
  6087  05A2  0008               	return
  6088  05A3                     __end_of_GPS2Sec:	
  6089                           
  6090                           	psect	text27
  6091  0A3A                     __ptext27:	
  6092 ;; *************** function ___wmul *****************
  6093 ;; Defined at:
  6094 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  multiplier      2    0[COMMON] unsigned int 
  6097 ;;  multiplicand    2    2[COMMON] unsigned int 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  product         2    4[COMMON] unsigned int 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  2    0[COMMON] unsigned int 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6109 ;;      Params:         4       0       0       0       0
  6110 ;;      Locals:         2       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0
  6112 ;;      Totals:         6       0       0       0       0
  6113 ;;Total ram usage:        6 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_GPS2Sec
  6119 ;;		_Lcd_Int
  6120 ;;		_ReadRTCAsSec
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           
  6125                           ;psect for function ___wmul
  6126  0A3A                     ___wmul:	
  6127                           
  6128                           ;incstack = 0
  6129                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6130  0A3A  01F4               	clrf	___wmul@product
  6131  0A3B  01F5               	clrf	___wmul@product+1
  6132  0A3C                     l2385:	
  6133  0A3C  1C70               	btfss	___wmul@multiplier,0
  6134  0A3D  2A44               	goto	l459
  6135  0A3E  0872               	movf	___wmul@multiplicand,w
  6136  0A3F  07F4               	addwf	___wmul@product,f
  6137  0A40  1803               	skipnc
  6138  0A41  0AF5               	incf	___wmul@product+1,f
  6139  0A42  0873               	movf	___wmul@multiplicand+1,w
  6140  0A43  07F5               	addwf	___wmul@product+1,f
  6141  0A44                     l459:	
  6142  0A44  3001               	movlw	1
  6143  0A45                     u3445:	
  6144  0A45  1003               	clrc
  6145  0A46  0DF2               	rlf	___wmul@multiplicand,f
  6146  0A47  0DF3               	rlf	___wmul@multiplicand+1,f
  6147  0A48  3EFF               	addlw	-1
  6148  0A49  1D03               	skipz
  6149  0A4A  2A45               	goto	u3445
  6150  0A4B  3001               	movlw	1
  6151  0A4C                     u3455:	
  6152  0A4C  1003               	clrc
  6153  0A4D  0CF1               	rrf	___wmul@multiplier+1,f
  6154  0A4E  0CF0               	rrf	___wmul@multiplier,f
  6155  0A4F  3EFF               	addlw	-1
  6156  0A50  1D03               	skipz
  6157  0A51  2A4C               	goto	u3455
  6158  0A52  0870               	movf	___wmul@multiplier,w
  6159  0A53  0471               	iorwf	___wmul@multiplier+1,w
  6160  0A54  1D03               	btfss	3,2
  6161  0A55  2A3C               	goto	l2385
  6162  0A56  0875               	movf	___wmul@product+1,w
  6163  0A57  00F1               	movwf	?___wmul+1
  6164  0A58  0874               	movf	___wmul@product,w
  6165  0A59  00F0               	movwf	?___wmul
  6166  0A5A  0008               	return
  6167  0A5B                     __end_of___wmul:	
  6168                           
  6169                           	psect	text28
  6170  0AC3                     __ptext28:	
  6171 ;; *************** function ___lmul *****************
  6172 ;; Defined at:
  6173 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  multiplier      4    0[COMMON] unsigned long 
  6176 ;;  multiplicand    4    4[COMMON] unsigned long 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  product         4    9[COMMON] unsigned long 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  4    0[COMMON] unsigned long 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6188 ;;      Params:         8       0       0       0       0
  6189 ;;      Locals:         4       0       0       0       0
  6190 ;;      Temps:          1       0       0       0       0
  6191 ;;      Totals:        13       0       0       0       0
  6192 ;;Total ram usage:       13 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_GPS2Sec
  6198 ;;		_ReadRTCAsSec
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function ___lmul
  6204  0AC3                     ___lmul:	
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6208  0AC3  3000               	movlw	0
  6209  0AC4  00FC               	movwf	___lmul@product+3
  6210  0AC5  3000               	movlw	0
  6211  0AC6  00FB               	movwf	___lmul@product+2
  6212  0AC7  3000               	movlw	0
  6213  0AC8  00FA               	movwf	___lmul@product+1
  6214  0AC9  3000               	movlw	0
  6215  0ACA  00F9               	movwf	___lmul@product
  6216  0ACB                     l2399:	
  6217  0ACB  1C70               	btfss	___lmul@multiplier,0
  6218  0ACC  2AE1               	goto	l2403
  6219  0ACD  0874               	movf	___lmul@multiplicand,w
  6220  0ACE  07F9               	addwf	___lmul@product,f
  6221  0ACF  0875               	movf	___lmul@multiplicand+1,w
  6222  0AD0  1103               	clrz
  6223  0AD1  1803               	skipnc
  6224  0AD2  3E01               	addlw	1
  6225  0AD3  1D03               	btfss	3,2
  6226  0AD4  07FA               	addwf	___lmul@product+1,f
  6227  0AD5  0876               	movf	___lmul@multiplicand+2,w
  6228  0AD6  1103               	clrz
  6229  0AD7  1803               	skipnc
  6230  0AD8  3E01               	addlw	1
  6231  0AD9  1D03               	btfss	3,2
  6232  0ADA  07FB               	addwf	___lmul@product+2,f
  6233  0ADB  0877               	movf	___lmul@multiplicand+3,w
  6234  0ADC  1103               	clrz
  6235  0ADD  1803               	skipnc
  6236  0ADE  3E01               	addlw	1
  6237  0ADF  1D03               	btfss	3,2
  6238  0AE0  07FC               	addwf	___lmul@product+3,f
  6239  0AE1                     l2403:	
  6240  0AE1  3001               	movlw	1
  6241  0AE2  00F8               	movwf	??___lmul
  6242  0AE3                     u3495:	
  6243  0AE3  1003               	clrc
  6244  0AE4  0DF4               	rlf	___lmul@multiplicand,f
  6245  0AE5  0DF5               	rlf	___lmul@multiplicand+1,f
  6246  0AE6  0DF6               	rlf	___lmul@multiplicand+2,f
  6247  0AE7  0DF7               	rlf	___lmul@multiplicand+3,f
  6248  0AE8  0BF8               	decfsz	??___lmul,f
  6249  0AE9  2AE3               	goto	u3495
  6250  0AEA  3001               	movlw	1
  6251  0AEB                     u3505:	
  6252  0AEB  1003               	clrc
  6253  0AEC  0CF3               	rrf	___lmul@multiplier+3,f
  6254  0AED  0CF2               	rrf	___lmul@multiplier+2,f
  6255  0AEE  0CF1               	rrf	___lmul@multiplier+1,f
  6256  0AEF  0CF0               	rrf	___lmul@multiplier,f
  6257  0AF0  3EFF               	addlw	-1
  6258  0AF1  1D03               	skipz
  6259  0AF2  2AEB               	goto	u3505
  6260  0AF3  0873               	movf	___lmul@multiplier+3,w
  6261  0AF4  0472               	iorwf	___lmul@multiplier+2,w
  6262  0AF5  0471               	iorwf	___lmul@multiplier+1,w
  6263  0AF6  0470               	iorwf	___lmul@multiplier,w
  6264  0AF7  1D03               	skipz
  6265  0AF8  2ACB               	goto	l2399
  6266  0AF9  087C               	movf	___lmul@product+3,w
  6267  0AFA  00F3               	movwf	?___lmul+3
  6268  0AFB  087B               	movf	___lmul@product+2,w
  6269  0AFC  00F2               	movwf	?___lmul+2
  6270  0AFD  087A               	movf	___lmul@product+1,w
  6271  0AFE  00F1               	movwf	?___lmul+1
  6272  0AFF  0879               	movf	___lmul@product,w
  6273  0B00  00F0               	movwf	?___lmul
  6274  0B01  0008               	return
  6275  0B02                     __end_of___lmul:	
  6276  007E                     btemp	set	126	;btemp
  6277  007E                     wtemp	set	126
  6278  007E                     wtemp0	set	126
  6279  0080                     wtemp1	set	128
  6280  0082                     wtemp2	set	130
  6281  0084                     wtemp3	set	132
  6282  0086                     wtemp4	set	134
  6283  0088                     wtemp5	set	136
  6284  007F                     wtemp6	set	127
  6285  007E                     ttemp	set	126
  6286  007E                     ttemp0	set	126
  6287  0081                     ttemp1	set	129
  6288  0084                     ttemp2	set	132
  6289  0087                     ttemp3	set	135
  6290  007F                     ttemp4	set	127
  6291  007E                     ltemp	set	126
  6292  007E                     ltemp0	set	126
  6293  0082                     ltemp1	set	130
  6294  0086                     ltemp2	set	134
  6295  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    14
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     46      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    GPS2Sec@GPSTime	PTR unsigned char  size(1) Largest target is 6
		 -> main@GPSDate(BANK1[6]), 

    Lcd_Text@buffer	PTR unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), STR_1(CODE[5]), 

    IsValidGPS@GPSData	PTR unsigned char  size(1) Largest target is 6
		 -> main@GPSDate(BANK1[6]), 

    UART_ReadValidTimeFromGPS_TO@Output	PTR unsigned char  size(1) Largest target is 6
		 -> main@GPSDate(BANK1[6]), 

    UART_ReadFromGPS_TO@Output	PTR unsigned char  size(1) Largest target is 6
		 -> main@GPSDate(BANK1[6]), 


Critical Paths under _main in COMMON

    _WriteLongInt->_Lcd_WriteChar
    ___bmul->___aldiv
    _Lcd_WriteChar->___bmul
    _UART_ReadValidTimeFromGPS_TO->_UART_ReadFromGPS_TO
    _UART_ReadFromGPS_TO->_UART_Read_TO
    _UART_Init->___altoft
    _trunc->___altoft
    ___fttol->___altoft
    ___altoft->___ftpack
    ___ftadd->___altoft
    ___ftmul->___altoft
    ___ftdiv->___altoft
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_CharCP->_Lcd_Delay5500us
    _Lcd_Init->_Lcd_Command
    _Lcd_Command->_Lcd_Delay5500us
    _GPS2Sec->___lmul

Critical Paths under _main in BANK0

    _WriteLongInt->_GPS2Sec
    ___bmul->___aldiv
    _Lcd_WriteChar->___bmul
    _UART_Init->_round
    _round->___ftneg
    _trunc->___fttol
    ___fttol->___ftadd
    ___ftneg->_trunc
    ___ftadd->___ftdiv
    ___ftmul->___altoft
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    _main->_UART_Init

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   24268
                                             12 BANK1     34    34      0
                            _GPS2Sec
                        _Lcd_Command
                           _Lcd_Init
                           _Lcd_Text
                      _Lcd_WriteChar
                          _UART_Init
       _UART_ReadValidTimeFromGPS_TO
                       _WriteLongInt
 ---------------------------------------------------------------------------------
 (1) _WriteLongInt                                        13     6      7    2562
                                             17 BANK0     13     6      7
                            _GPS2Sec (ARG)
                      _Lcd_WriteChar
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     251
                                              9 COMMON     3     3      0
                                              6 BANK0      1     0      1
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        5     3      2    1040
                                             12 COMMON     1     1      0
                                              7 BANK0      4     2      2
                         _Lcd_CharCP
                        _Lcd_Command
                            ___aldiv (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_ReadValidTimeFromGPS_TO                         3     2      1     942
                                              9 COMMON     3     2      1
                         _IsValidGPS
                _UART_ReadFromGPS_TO
 ---------------------------------------------------------------------------------
 (2) _UART_ReadFromGPS_TO                                  8     7      1     397
                                              1 COMMON     8     7      1
                       _UART_Read_TO
 ---------------------------------------------------------------------------------
 (3) _UART_Read_TO                                         1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IsValidGPS                                           2     2      0     319
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           12     8      4   16057
                                              0 BANK1     12     8      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                6     3      3    6246
                                             73 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                                9     6      3    2945
                                             61 BANK0      9     6      3
                           ___altoft
                            ___ftadd (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     314
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     411
                                             47 BANK0     14    10      4
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1951
                                              8 COMMON     6     2      4
                                              0 BANK0      2     2      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     138
                                             70 BANK0      3     0      3
                            ___ftadd (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2945
                                             34 BANK0     13     7      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2245
                                              2 BANK0     16    10      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2093
                                             18 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             5     3      2     957
                                              4 COMMON     5     3      2
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (3) _Lcd_CharCP                                           2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              4 COMMON     2     2      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5500us                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPS2Sec                                             17    13      4    1674
                                              0 BANK0     17    13      4
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1046
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     304
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPS2Sec
     ___lmul
     ___wmul
   _Lcd_Command
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
   _Lcd_WriteChar
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     ___aldiv (ARG)
     ___bmul (ARG)
       ___aldiv (ARG)
   _UART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _round
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _frexp (ARG)
   _UART_ReadValidTimeFromGPS_TO
     _IsValidGPS
     _UART_ReadFromGPS_TO
       _UART_Read_TO
   _WriteLongInt
     _GPS2Sec (ARG)
       ___lmul
       ___wmul
     _Lcd_WriteChar (ARG)
       _Lcd_CharCP
         _Lcd_Delay5500us
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5500us
         _Lcd_Delay5us
       ___aldiv (ARG)
       ___bmul (ARG)
         ___aldiv (ARG)
     ___aldiv (ARG)
     ___bmul (ARG)
       ___aldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      30       7       60.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8D      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Sep 15 13:41:58 2016

                         ___altoft@exp 0020                                      pc 0002  
                       ___bmul@product 007A                            __CFG_CP$OFF 0000  
                        ___altoft@sign 0021              UART_ReadFromGPS_TO@Output 0076  
                                   l53 0772                                     l48 0693  
                          main@InitSec 00C4                                     fsr 0004  
                  ___wmul@multiplicand 0072             UART_ReadFromGPS_TO@TimeOut 0071  
                         ___ftadd@exp1 004E                           ___ftadd@exp2 004D  
                         ___ftadd@sign 004C                                    l213 0EEC  
                                  l141 0C2D                                    l214 0F14  
                                  l152 0A15                                    l155 0A1F  
                                  l514 0D9D                                    l620 0CC7  
                                  l711 0D71                                    l459 0A44  
                                  l627 0CDC                                    l651 03E3  
                                  l628 0CE4                                    _RA0 0028  
                                  _RA1 0029                                    _RA2 002A  
                                  _RA3 002B                                    _RA4 002C  
                                  _RC1 0039                                    _RA5 002D  
                                  _RC2 003A                                    _PEN 048A  
                         __CFG_CPD$OFF 0000                                    _SEN 0488  
                                  fsr0 0004                                    indf 0000  
                         __CFG_IESO$ON 0000                           __CFG_FOSC$HS 0000  
                  _UART_ReadFromGPS_TO 0BD6                    __end_of_Lcd_Command 1000  
                         main@ValidGPS 00C8                           __CFG_LVP$OFF 0000  
                      __end_of_GPS2Sec 05A3                           ___ftdiv@cntr 003C  
                         ___ftdiv@sign 0041                                   l2003 0CA0  
                                 l2013 0CCC                                   l2005 0CAC  
                                 l2015 0CD6                                   l2007 0CB1  
                                 l2121 0FD3                                   l2041 0B58  
                                 l2123 0FE4                                   l2043 0B6A  
                                 l2125 0FED                                   l2109 0FA2  
                                 l2213 03A9                                   l2053 0D17  
                                 l2119 0FC2                                   l2231 03F5  
                                 l2215 03B5                                   l2207 0394  
                                 l2071 0D49                                   l2225 03D3  
                                 l2217 03BA                                   l2081 0D74  
                                 l2073 0D59                                   l2137 0A18  
                                 l2403 0AE1                                   l2171 00E1  
                                 l2155 0096                                   l2235 0407  
                                 l2227 03DF                                   l2219 03BE  
                                 l2147 0A23                                   l2331 0C1B  
                                 l2315 0BEA                                   l2165 00B6  
                                 l2245 042A                                   l2085 0D82  
                                 l2325 0C07                                   l2413 0A27  
                                 l2167 00C7                                   l2079 0D66  
                                 l2095 0A95                                   l2169 00D8  
                                 l2513 0280                                   l2185 0364  
                                 l2265 001F                                   l2353 0B9B  
                                 l2329 0C16                                   l2281 0A65  
                                 l2417 0A2F                                   l2531 02D5  
                                 l2195 037A                                   l2371 0BC5  
                                 l2347 0B8F                                   l2339 0C20  
                                 l2283 0A68                                   l2443 0DBE  
                                 l2435 0DAE                                   l2189 036B  
                                 l2365 0BB7                                   l2277 0A5F  
                                 l2461 0E11                                   l2453 0DF6  
                                 l2445 0DCE                                   l2471 01C8  
                                 l2543 02FD                                   l2535 02E5  
                                 l2519 0296                                   l2359 0BA9  
                                 l2279 0A62                                   l2287 0A6E  
                                 l2385 0A3C                                   l2377 0BD3  
                                 l2289 0A7C                                   l2457 0E03  
                                 l2491 0223                                   l2547 030D  
                                 l2477 01DE                                   l2725 0E43  
                                 l2733 0E51                                   l2399 0ACB  
                                 l2673 0B04                                   l2825 0653  
                                 l2691 0B27                                   l2675 0B07  
                                 l2683 0B13                                   l2499 0242  
                                 l2851 06AC                                   l2819 0630  
                                 l2827 0671                                   l2677 0B0A  
                                 l2685 0B21                                   l2679 0B0D  
                                 l2871 0765                                   l2857 06CF  
                                 l2875 07A8                                   l2859 06F4  
                                 l2877 07CA                                   l2869 0750  
                                 l1999 0C99                                   STR_1 0819  
                                 STR_2 0814                                   STR_3 0817  
                                 STR_4 0817                                   _BRGH 04C2  
                                 _CREN 00C4                                   u2325 0CEB  
                                 u2245 0CA5                                   u3125 03BF  
                                 u2415 0D4A                                   u2520 0F7D  
                                 u2504 0F6F                                   u2265 0CC0  
                                 u3065 0395                                   u4113 0763  
                                 u2610 0FBF                                   u4130 07B7  
                                 u2515 0F72                                   u3155 03D4  
                                 u2355 0B5D                                   u4131 07B8  
                                 u4123 07A6                                   u4132 07BD  
                                 u2605 0FB4                                   u2285 0CCF  
                                 u2445 0D68                                   u4133 07BE  
                                 u2550 0F8E                                   u2534 0F80  
                                 u3095 03AA                                   u2640 0FD0  
                                 u3505 0AEB                                   u2545 0F83  
                                 u2385 0D1E                                   u2490 0F6C  
                                 u2810 0082                                   u4090 0726  
                                 u2635 0FC5                                   u4091 0727  
                                 u2580 0F9F                                   u2564 0F91  
                                 u2900 00C4                                   u4092 072C  
                                 u3445 0A45                                   u2485 0F61  
                                 u2805 0077                                   u3605 0DE5  
                                 u4093 072D                                   u4085 0717  
                                 u4237 067B                                   u2670 0FE1  
                                 u2750 0060                                   u3455 0A4C  
                                 u2575 0F94                                   u3615 0DF7  
                                 u4247 068A                                   u2840 0093  
                                 u2824 0085                                   u2665 0FD6  
                                 u4257 0098                                   u2745 0055  
                                 u3705 0243                                   u2690 0FEA  
                                 u2930 00D5                  __size_of_WriteLongInt 009A  
                                 u4267 00E3                                   u2835 0088  
                                 u3900 04C5                                   u2780 0071  
                                 u2764 0063                                   u3901 04C6  
                                 u4277 0FA4                                   u2925 00CA  
                                 u3910 0506                                   u3902 04CB  
                                 u2950 00DE                                   u2870 00B3  
                                 u3495 0AE3                                   u3911 0507  
                                 u3903 04CC                                   u4287 0FEF  
                                 u2775 0066                                   u3575 0DC2  
                                 u3920 0546                                   u3912 050C  
                                 u3921 0547                                   u3913 050D  
                                 u4297 09F4                                   u2865 00A8  
                                 u3665 01F0                                   u3745 02A2  
                                 u3922 054C                                   u2794 0074  
                                 u3923 054D                                   u3675 0202  
                                 u3835 030E                                   u3755 02B4  
                                 u3595 0DD0                                   _RCEN 048B  
                                 _RCIF 0065                                   u3685 0224  
                                 u3845 0316                                   u2895 00B9  
                                 u3695 0235                                   u3785 02E6  
                                 u3890 0484                                   u3891 0485  
                                 u3795 02EE                                   u3892 048A  
                                 u3893 048B                                   _SPEN 00C7  
                                 _RSEN 0489                                   _TRMT 04C1  
                                 _TXEN 04C5                                   _SYNC 04C4  
                    ??_Lcd_Delay5500us 0070                           __CFG_WRT$OFF 0000  
                        __CFG_FCMEN$ON 0000                                   _main 05A3  
                         ___ftpack@arg 0070                           ___ftpack@exp 0073  
                 __end_of_Lcd_Delay5us 09F0                                   btemp 007E  
                                 ltemp 007E                                   start 0000  
                                 ttemp 007E                                   wtemp 007E  
                 ?_UART_ReadFromGPS_TO 0071                      ___bmul@multiplier 007B  
                        __CFG_MCLRE$ON 0000                           ___ftmul@cntr 0030  
                         ___ftmul@sign 0031                             _Lcd_CharCP 004D  
                         ___fttol@exp1 005C                           ___fttol@lval 0058  
                      __end_of___aldiv 0E1A                                  ?_main 0070  
                                _ACKEN 048C                                  _ACKDT 048D  
                      __end_of___ftadd 0444                                  _BRG16 0C3B  
                        __CFG_WDTE$OFF 0000                        __end_of___ftdiv 0268  
                      __end_of___ftneg 0A03                                  _ANSEL 0188  
                      __end_of___ftmul 033B                        __end_of___fttol 0D8B  
                       main@CounterSec 00C0                                  _RCREG 001A  
                                _TMR1H 000F                                  _TMR1L 000E  
                                _SPBRG 0099                                  _TRISA 0085  
                                _TRISB 0086                                  _TXREG 0019  
                         _WriteLongInt 0E1A                    ___lmul@multiplicand 0074  
                   __size_of_UART_Init 00B7                             _IsValidGPS 0B82  
                                _frexp 0A89                                  _errno 00CE  
                        ___ftpack@sign 0074                                  _round 0C31  
                                _trunc 0003                         __CFG_BOREN$OFF 0000  
                                pclath 000A                                  ltemp0 007E  
                                ltemp1 0082                                  ltemp2 0086  
                                ltemp3 0080                                  ttemp0 007E  
                                ttemp1 0081                                  ttemp2 0084  
                                ttemp3 0087                                  ttemp4 007F  
                                status 0003                                  wtemp0 007E  
                                wtemp1 0080                                  wtemp2 0082  
                                wtemp3 0084                                  wtemp4 0086  
                                wtemp5 0088                                  wtemp6 007F  
                ??_UART_ReadFromGPS_TO 0072                       __end_of_Lcd_Init 0F59  
                     __end_of_Lcd_Text 0B42                        __initialization 07F8  
                         __end_of_main 07F8                            _Lcd_Command 0F59  
                               ??_main 00AC                          ___fttol@sign1 0057  
                       main@TempVar000 00CD                              ??_GPS2Sec 0024  
                               ?_frexp 0070                       __end_of___altoft 0B82  
                     __end_of___ftpack 0CFD                                 ?_round 0069  
                               _ANSELH 0189                                 ?_trunc 005D  
                     WriteLongInt@Sign 0037                                 _TMR1IF 0060  
                               _TMR1CS 0081                                 _SPBRGH 009A  
                               _TMR1ON 0080                         Lcd_Text@buffer 0075  
                               _SSPADD 0093                                 _TRISC3 043B  
                               _TRISC4 043C                                 _SSPCON 0014  
                               _SSPBUF 0013                       WriteLongInt@size 0036  
                       __CFG_PWRTE$OFF 0000                      __end_of_UART_Init 01B0  
                               ___bmul 0A25                            ?_Lcd_CharCP 0070  
                               ___lmul 0AC3                              ??___aldiv 0078  
                               ___wmul 0A3A                              ??___ftadd 0048  
                            ??___ftdiv 0038                              ??___ftneg 007E  
                            ??___ftmul 0028                              ??___fttol 0053  
                __end_of_Lcd_WriteChar 0A89                  ___ftmul@f3_as_product 002D  
                               round@f 006C                                 round@x 0069  
                          ?_IsValidGPS 0070                                 trunc@i 0061  
                __size_of_Lcd_Delay5us 0007                                 trunc@x 005D  
                   Lcd_Command@command 0073                __end_of__initialization 07FC  
                           ___altoft@c 0078                             ___ftadd@f1 0042  
                           ___ftadd@f2 0045   __end_ofUART_ReadFromGPS_TO@StartCode 0814  
         UART_ReadFromGPS_TO@StartCode 080D                             ___ftdiv@f1 0035  
                           ___ftdiv@f2 0032                             ___ftdiv@f3 003D  
                           ___ftneg@f1 0066                      IsValidGPS@GPSData 0071  
                  ___bmul@multiplicand 0026                             ___ftmul@f1 0022  
                           ___ftmul@f2 0025                             ___fttol@f1 004F  
                       __pcstackCOMMON 0070                          __end_of_frexp 0AC3  
                        __end_of_round 0C91                          __end_of_trunc 004D  
                         _Lcd_Delay5us 09E9                        _Lcd_Delay5500us 09F0  
                       Lcd_WriteChar@c 0028                         Lcd_WriteChar@x 0027  
                       Lcd_WriteChar@y 0029                              ?_Lcd_Init 0070  
                            ?_Lcd_Text 0074                                ??_frexp 0074  
                  __size_of_Lcd_CharCP 00AC                                ??_round 007E  
                              ??_trunc 0060                             __pbssBANK1 00CE  
                  UART_Read_TO@TimeOut 0070                             __pmaintext 05A3  
                              ?___bmul 0026                                ?___lmul 0070  
                              ?___wmul 0070                    __size_of_IsValidGPS 0054  
                            ?___altoft 0078                         ___lmul@product 0079  
                            ?___ftpack 0070                         GPS2Sec@GPSTime 002C  
                              _GPS2Sec 0444                             ??_Lcd_Init 0074  
                           ??_Lcd_Text 0076                                _SSPCON2 0091  
                              _SSPSTAT 0094                             __stringtab 0800  
                        ?_UART_Read_TO 0070                                ___aldiv 0D8B  
                      __size_of___bmul 0015                      Lcd_WriteChar@data 002A  
                      __size_of___lmul 003F                                ___ftadd 033B  
                              ___ftdiv 01B0                                ___ftneg 09F9  
                      __size_of___wmul 0021                                ___ftmul 0268  
                              ___fttol 0CFD                __end_of_Lcd_Delay5500us 09F9  
                           ??___altoft 007C                             ??___ftpack 0075  
                         ?_Lcd_Command 0070                                __ptext1 0E1A  
                              __ptext2 0A25                                __ptext3 0D8B  
                              __ptext4 0A5B                                __ptext5 0A03  
                              __ptext6 0BD6                                __ptext7 0A13  
                              __ptext8 0B82                                __ptext9 00F9  
                     ___aldiv@dividend 0074                                main@Itr 00B9  
                 end_of_initialization 07FC                         ??_UART_Read_TO 0070  
          __end_of_UART_ReadFromGPS_TO 0C31   __end_of_UART_ReadValidTimeFromGPS_TO 0A13  
__size_of_UART_ReadValidTimeFromGPS_TO 0010           _UART_ReadValidTimeFromGPS_TO 0A03  
                         ??_Lcd_CharCP 0072                       ___aldiv@quotient 0022  
                            Lcd_Text@x 0074                              Lcd_Text@y 0077  
                            _UART_Init 00F9    UART_ReadValidTimeFromGPS_TO@TimeOut 0079  
                           main@PICSec 00C9                              _TRISAbits 0085  
                            _TRISCbits 0087                           ??_IsValidGPS 0070  
                   __end_of_Lcd_CharCP 00F9                             main@Synced 00B8  
                          ___ftdiv@exp 0040                            ___ftmul@exp 002C  
        ?_UART_ReadValidTimeFromGPS_TO 0079                         __end_of___bmul 0A3A  
                       __end_of___lmul 0B02                       ?_Lcd_Delay5500us 0070  
                       __end_of___wmul 0A5B                     __end_of_IsValidGPS 0BD6  
                           ?_UART_Init 00A0                       GPS2Sec@TimeInSec 002D  
                  start_initialization 07F8      __end_ofUART_ReadFromGPS@StartCode 080D  
                    __size_of_Lcd_Init 00A5                      __size_of_Lcd_Text 0040  
                           frexp@value 0070                        WriteLongInt@POS 003C  
                      WriteLongInt@Val 0032                 __size_of_Lcd_WriteChar 002E  
                             ??___bmul 0079                               ??___lmul 0078  
                             ??___wmul 0074                   __end_of_UART_Read_TO 0A25  
          UART_ReadFromGPS_TO@TempChar 0077                      __size_of___altoft 0040  
                    __size_of___ftpack 006C                               ?_GPS2Sec 0020  
                        ?_WriteLongInt 0031                   __size_of_Lcd_Command 00A7  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                          WriteLongInt@x 0031  
                        WriteLongInt@y 003D                       IsValidGPS@Result 0070  
                             ?___aldiv 0070                               ?___ftadd 0042  
                             ?___ftdiv 0032                               ?___ftneg 0066  
                             ?___ftmul 0022                               ?___fttol 004F  
                          ??_UART_Init 007E                              __pstrings 0800  
                       ??_WriteLongInt 0038         ??_UART_ReadValidTimeFromGPS_TO 007A  
                        _Lcd_WriteChar 0A5B                          _UART_Init$845 00A4  
                        _UART_Init$846 00A7                   UART_ReadFromGPS_TO@i 0074  
                       __size_of_frexp 003A                             UART_Init@x 00AA  
                       __size_of_round 0060                         __size_of_trunc 004A  
                      ___aldiv@divisor 0070                        ___aldiv@counter 0020  
                       ___wmul@product 0074                      UART_Init@baudrate 00A0  
   UART_ReadValidTimeFromGPS_TO@Output 007B                           Lcd_Init@data 0075  
                          __stringbase 0805                         ?_Lcd_WriteChar 0027  
                    ___wmul@multiplier 0070                       __size_of_GPS2Sec 015F  
                             _Lcd_Init 0EB4                               _Lcd_Text 0B02  
                    ___lmul@multiplier 0070                              frexp@eptr 0073  
                         Lcd_Text@data 0078           __size_of_UART_ReadFromGPS_TO 005B  
               UART_ReadFromGPS_TO@Pos 0078                  __size_of_UART_Read_TO 0012  
                     __size_of___aldiv 008F                       __size_of___ftadd 0109  
                     __size_of___ftdiv 00B8                       __size_of___ftneg 000A  
                             ___altoft 0B42                       __size_of___ftmul 00D3  
                     __size_of___fttol 008E                               ___ftpack 0C91  
                   __end_of__stringtab 0806                          ?_Lcd_Delay5us 0070  
                             __ptext10 0C31                               __ptext11 0003  
                             __ptext20 0B02                               __ptext12 0A89  
                             __ptext21 004D                               __ptext13 0CFD  
                             __ptext22 0EB4                               __ptext14 0B42  
                             __ptext23 0F59                               __ptext15 09F9  
                             __ptext24 09E9                               __ptext16 033B  
                             __ptext25 09F0                               __ptext17 0268  
                             __ptext26 0444                               __ptext18 01B0  
                             __ptext27 0A3A                               __ptext19 0C91  
                             __ptext28 0AC3                      __CFG_BOR4V$BOR21V 0000  
                          Lcd_CharCP@c 0073                           _UART_Read_TO 0A13  
                           trunc@expon 0064                          __size_of_main 0255  
                 __end_of_WriteLongInt 0EB4              UART_ReadFromGPS@StartCode 0806  
                             main@PSec 00B4                        ??_Lcd_WriteChar 007C  
                       ??_Lcd_Delay5us 0070               __size_of_Lcd_Delay5500us 0009  
                            stringcode 0800                          ??_Lcd_Command 0072  
                             stringdir 0800                               stringtab 0800  
                         ___aldiv@sign 0021                            main@GPSDate 00BA  
