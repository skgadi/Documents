

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Aug 10 20:14:08 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     _ANSEL	set	3966
    25  0000                     _ANSELH	set	3967
    26  0000                     _SSPADD	set	4040
    27  0000                     _SSPBUF	set	4041
    28  0000                     _SSPCON1	set	4038
    29  0000                     _SSPCON2	set	4037
    30  0000                     _SSPSTAT	set	4039
    31  0000                     _TRISB	set	3987
    32  0000                     _ACKDT	set	32301
    33  0000                     _ACKEN	set	32300
    34  0000                     _PEN	set	32298
    35  0000                     _RCEN	set	32299
    36  0000                     _RSEN	set	32297
    37  0000                     _SEN	set	32296
    38  0000                     _TRISC3	set	31907
    39  0000                     _TRISC4	set	31908
    40                           
    41                           	psect	smallconst
    42  000300                     __psmallconst:
    43                           	opt stack 0
    44  000300  00                 	db	0
    45  000301                     STR_1:
    46  000301  30                 	db	48	;'0'
    47  000302  30                 	db	48	;'0'
    48  000303  30                 	db	48	;'0'
    49  000304  30                 	db	48	;'0'
    50  000305  30                 	db	48	;'0'
    51  000306  30                 	db	48	;'0'
    52  000307  00                 	db	0
    53  0000                     
    54                           ; #config settings
    55  000308  00                 	db	0	; dummy byte at the end
    56  0000                     
    57                           	psect	cinit
    58  00079A                     __pcinit:
    59                           	opt stack 0
    60  00079A                     start_initialization:
    61                           	opt stack 0
    62  00079A                     __initialization:
    63                           	opt stack 0
    64  00079A                     end_of_initialization:
    65                           	opt stack 0
    66  00079A                     __end_of__initialization:
    67                           	opt stack 0
    68  00079A  0E00               	movlw	low (__Lsmallconst shr (0+16))
    69  00079C  6EF8               	movwf	tblptru,c
    70  00079E  0E03               	movlw	high __Lsmallconst
    71  0007A0  6EF7               	movwf	tblptrh,c
    72  0007A2  0100               	movlb	0
    73  0007A4  EF66  F003         	goto	_main	;jump to C main() function
    74                           tblptru	equ	0xFF8
    75                           tblptrh	equ	0xFF7
    76                           
    77                           	psect	cstackCOMRAM
    78  000001                     __pcstackCOMRAM:
    79                           	opt stack 0
    80  000001                     ??_I2C_Master_Wait:
    81  000001                     ?___wmul:
    82                           	opt stack 0
    83  000001                     ?___lmul:
    84                           	opt stack 0
    85  000001                     ?___lldiv:
    86                           	opt stack 0
    87  000001                     ___wmul@multiplier:
    88                           	opt stack 0
    89  000001                     ___lmul@multiplier:
    90                           	opt stack 0
    91  000001                     ___lldiv@dividend:
    92                           	opt stack 0
    93                           
    94                           ; 4 bytes @ 0x0
    95  000001                     	ds	1
    96  000002                     ?_I2C_Master_Read:
    97                           	opt stack 0
    98  000002                     I2C_Master_Write@d:
    99                           	opt stack 0
   100  000002                     I2C_Master_Read@a:
   101                           	opt stack 0
   102                           
   103                           ; 2 bytes @ 0x1
   104  000002                     	ds	1
   105  000003                     ___wmul@multiplicand:
   106                           	opt stack 0
   107                           
   108                           ; 2 bytes @ 0x2
   109  000003                     	ds	1
   110  000004                     I2C_WriteAtAddress@IntAdd:
   111                           	opt stack 0
   112  000004                     I2C_Master_Read@temp:
   113                           	opt stack 0
   114                           
   115                           ; 2 bytes @ 0x3
   116  000004                     	ds	1
   117  000005                     I2C_WriteAtAddress@data:
   118                           	opt stack 0
   119  000005                     ___wmul@product:
   120                           	opt stack 0
   121  000005                     ___lmul@multiplicand:
   122                           	opt stack 0
   123  000005                     ___lldiv@divisor:
   124                           	opt stack 0
   125                           
   126                           ; 4 bytes @ 0x4
   127  000005                     	ds	1
   128  000006                     I2C_ReadAtAddress@IntAdd:
   129                           	opt stack 0
   130  000006                     I2C_WriteAtAddress@DevID:
   131                           	opt stack 0
   132                           
   133                           ; 1 bytes @ 0x5
   134  000006                     	ds	1
   135  000007                     I2C_ReadAtAddress@data:
   136                           	opt stack 0
   137  000007                     WriteToRTC@Time:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x6
   141  000007                     	ds	1
   142  000008                     I2C_ReadAtAddress@DevID:
   143                           	opt stack 0
   144                           
   145                           ; 1 bytes @ 0x7
   146  000008                     	ds	1
   147  000009                     ??_WriteToRTC:
   148  000009                     ___lmul@product:
   149                           	opt stack 0
   150  000009                     ___lldiv@quotient:
   151                           	opt stack 0
   152                           
   153                           ; 4 bytes @ 0x8
   154  000009                     	ds	2
   155  00000B                     WriteToRTC@TempVar000:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0xA
   159  00000B                     	ds	2
   160  00000D                     ??_ReadRTCAsSec:
   161  00000D                     ___lldiv@counter:
   162                           	opt stack 0
   163                           
   164                           ; 1 bytes @ 0xC
   165  00000D                     	ds	1
   166  00000E                     I2C_Master_Init@c:
   167                           	opt stack 0
   168                           
   169                           ; 4 bytes @ 0xD
   170  00000E                     	ds	4
   171  000012                     ??_I2C_Master_Init:
   172                           
   173                           ; 1 bytes @ 0x11
   174  000012                     	ds	1
   175  000013                     ReadRTCAsSec@Out:
   176                           	opt stack 0
   177                           
   178                           ; 4 bytes @ 0x12
   179  000013                     	ds	4
   180  000017                     ReadRTCAsSec@TempVar000:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x16
   184  000017                     	ds	1
   185  000018                     tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           
   188                           ; 1 bytes @ 0x17
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 11 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   208 ;;      Params:         0       0       0       0
   209 ;;      Locals:         0       0       0       0
   210 ;;      Temps:          0       0       0       0
   211 ;;      Totals:         0       0       0       0
   212 ;;Total ram usage:        0 bytes
   213 ;; Hardware stack levels required when called:    4
   214 ;; This function calls:
   215 ;;		_I2C_Master_Init
   216 ;;		_ReadRTCAsSec
   217 ;;		_WriteToRTC
   218 ;; This function is called by:
   219 ;;		Startup code after reset
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	text0
   224  0006CC                     __ptext0:
   225                           	opt stack 0
   226  0006CC                     _main:
   227                           	opt stack 27
   228                           
   229                           ;main.c: 12: ANSEL = 0x00;
   230                           
   231                           ;incstack = 0
   232  0006CC  0E00               	movlw	0
   233  0006CE  6E7E               	movwf	3966,c	;volatile
   234                           
   235                           ;main.c: 13: ANSELH = 0x00;
   236  0006D0  0E00               	movlw	0
   237  0006D2  6E7F               	movwf	3967,c	;volatile
   238                           
   239                           ;main.c: 15: TRISB = 0X00;
   240  0006D4  0E00               	movlw	0
   241  0006D6  6E93               	movwf	3987,c	;volatile
   242                           
   243                           ;main.c: 16: I2C_Master_Init(400000);
   244  0006D8  0E80               	movlw	128
   245  0006DA  6E0E               	movwf	I2C_Master_Init@c,c
   246  0006DC  0E1A               	movlw	26
   247  0006DE  6E0F               	movwf	I2C_Master_Init@c+1,c
   248  0006E0  0E06               	movlw	6
   249  0006E2  6E10               	movwf	I2C_Master_Init@c+2,c
   250  0006E4  0E00               	movlw	0
   251  0006E6  6E11               	movwf	I2C_Master_Init@c+3,c
   252  0006E8  ECE9  F002         	call	_I2C_Master_Init	;wreg free
   253                           
   254                           ;main.c: 17: WriteToRTC("000000");
   255  0006EC  0E01               	movlw	low STR_1
   256  0006EE  6E07               	movwf	WriteToRTC@Time,c
   257  0006F0  0E03               	movlw	high STR_1
   258  0006F2  6E08               	movwf	WriteToRTC@Time+1,c
   259  0006F4  EC26  F002         	call	_WriteToRTC	;wreg free
   260  0006F8                     l1001:
   261                           
   262                           ;main.c: 19: WriteToRTC("000000");
   263  0006F8  0E01               	movlw	low STR_1
   264  0006FA  6E07               	movwf	WriteToRTC@Time,c
   265  0006FC  0E03               	movlw	high STR_1
   266  0006FE  6E08               	movwf	WriteToRTC@Time+1,c
   267  000700  EC26  F002         	call	_WriteToRTC	;wreg free
   268                           
   269                           ;main.c: 20: ReadRTCAsSec();
   270  000704  EC85  F001         	call	_ReadRTCAsSec	;wreg free
   271  000708  D7F7               	goto	l1001
   272  00070A                     __end_of_main:
   273                           	opt stack 0
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           
   277 ;; *************** function _WriteToRTC *****************
   278 ;; Defined at:
   279 ;;		line 3 in file "libs/gsk_funs.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;  Time            2    6[COMRAM] PTR unsigned char 
   282 ;;		 -> STR_2(7), STR_1(7), 
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  TempVar000      1   10[COMRAM] unsigned char 
   285 ;;  TempVar001      1    0        unsigned char 
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   295 ;;      Params:         2       0       0       0
   296 ;;      Locals:         1       0       0       0
   297 ;;      Temps:          2       0       0       0
   298 ;;      Totals:         5       0       0       0
   299 ;;Total ram usage:        5 bytes
   300 ;; Hardware stack levels used:    1
   301 ;; Hardware stack levels required when called:    3
   302 ;; This function calls:
   303 ;;		_I2C_WriteAtAddress
   304 ;; This function is called by:
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text1
   310  00044C                     __ptext1:
   311                           	opt stack 0
   312  00044C                     _WriteToRTC:
   313                           	opt stack 27
   314                           
   315                           ;gsk_funs.c: 4: char TempVar000, TempVar001;
   316                           ;gsk_funs.c: 6: TempVar000 = 0x00;
   317                           
   318                           ;incstack = 0
   319  00044C  0E00               	movlw	0
   320  00044E  6E0B               	movwf	WriteToRTC@TempVar000,c
   321                           
   322                           ;gsk_funs.c: 7: TempVar000 = 0x03 & (Time[0]-0x30);
   323  000450  C007  FFF6         	movff	WriteToRTC@Time,tblptrl
   324  000454  C008  FFF7         	movff	WriteToRTC@Time+1,tblptrh
   325  000458                     	if	0	;tblptru may be non-zero
   326  000458                     	endif
   327  000458                     	if	0	;tblptru may be non-zero
   328  000458                     	endif
   329  000458  0008               	tblrd		*
   330  00045A  50F5               	movf	tablat,w,c
   331  00045C  0FD0               	addlw	208
   332  00045E  0B03               	andlw	3
   333  000460  6E0B               	movwf	WriteToRTC@TempVar000,c
   334                           
   335                           ;gsk_funs.c: 8: TempVar000 = TempVar000<<4;
   336  000462  380B               	swapf	WriteToRTC@TempVar000,w,c
   337  000464  0BF0               	andlw	240
   338  000466  6E0B               	movwf	WriteToRTC@TempVar000,c
   339                           
   340                           ;gsk_funs.c: 9: TempVar000 = TempVar000 | (0x0f & (Time[1]-0x30));
   341  000468  0E01               	movlw	1
   342  00046A  2407               	addwf	WriteToRTC@Time,w,c
   343  00046C  6E09               	movwf	??_WriteToRTC& (0+255),c
   344  00046E  0E00               	movlw	0
   345  000470  2008               	addwfc	WriteToRTC@Time+1,w,c
   346  000472  6E0A               	movwf	(??_WriteToRTC+1)& (0+255),c
   347  000474  C009  FFF6         	movff	??_WriteToRTC,tblptrl
   348  000478  C00A  FFF7         	movff	??_WriteToRTC+1,tblptrh
   349  00047C                     	if	0	;tblptru may be non-zero
   350  00047C                     	endif
   351  00047C                     	if	0	;tblptru may be non-zero
   352  00047C                     	endif
   353  00047C  0008               	tblrd		*
   354  00047E  50F5               	movf	tablat,w,c
   355  000480  0FD0               	addlw	208
   356  000482  0B0F               	andlw	15
   357  000484  100B               	iorwf	WriteToRTC@TempVar000,w,c
   358  000486  6E0B               	movwf	WriteToRTC@TempVar000,c
   359                           
   360                           ;gsk_funs.c: 10: I2C_WriteAtAddress(0xde, 0x02, TempVar000);
   361  000488  0E02               	movlw	2
   362  00048A  6E04               	movwf	I2C_WriteAtAddress@IntAdd,c
   363  00048C  C00B  F005         	movff	WriteToRTC@TempVar000,I2C_WriteAtAddress@data
   364  000490  0EDE               	movlw	222
   365  000492  EC9C  F003         	call	_I2C_WriteAtAddress
   366                           
   367                           ;gsk_funs.c: 12: TempVar000 = 0x00;
   368  000496  0E00               	movlw	0
   369  000498  6E0B               	movwf	WriteToRTC@TempVar000,c
   370                           
   371                           ;gsk_funs.c: 13: TempVar000 = 0x07 & (Time[2]-0x30);
   372  00049A  0E02               	movlw	2
   373  00049C  2407               	addwf	WriteToRTC@Time,w,c
   374  00049E  6E09               	movwf	??_WriteToRTC& (0+255),c
   375  0004A0  0E00               	movlw	0
   376  0004A2  2008               	addwfc	WriteToRTC@Time+1,w,c
   377  0004A4  6E0A               	movwf	(??_WriteToRTC+1)& (0+255),c
   378  0004A6  C009  FFF6         	movff	??_WriteToRTC,tblptrl
   379  0004AA  C00A  FFF7         	movff	??_WriteToRTC+1,tblptrh
   380  0004AE                     	if	0	;tblptru may be non-zero
   381  0004AE                     	endif
   382  0004AE                     	if	0	;tblptru may be non-zero
   383  0004AE                     	endif
   384  0004AE  0008               	tblrd		*
   385  0004B0  50F5               	movf	tablat,w,c
   386  0004B2  0FD0               	addlw	208
   387  0004B4  0B07               	andlw	7
   388  0004B6  6E0B               	movwf	WriteToRTC@TempVar000,c
   389                           
   390                           ;gsk_funs.c: 14: TempVar000 = TempVar000<<4;
   391  0004B8  380B               	swapf	WriteToRTC@TempVar000,w,c
   392  0004BA  0BF0               	andlw	240
   393  0004BC  6E0B               	movwf	WriteToRTC@TempVar000,c
   394                           
   395                           ;gsk_funs.c: 15: TempVar000 = TempVar000 | (0x0f & (Time[3]-0x30));
   396  0004BE  0E03               	movlw	3
   397  0004C0  2407               	addwf	WriteToRTC@Time,w,c
   398  0004C2  6E09               	movwf	??_WriteToRTC& (0+255),c
   399  0004C4  0E00               	movlw	0
   400  0004C6  2008               	addwfc	WriteToRTC@Time+1,w,c
   401  0004C8  6E0A               	movwf	(??_WriteToRTC+1)& (0+255),c
   402  0004CA  C009  FFF6         	movff	??_WriteToRTC,tblptrl
   403  0004CE  C00A  FFF7         	movff	??_WriteToRTC+1,tblptrh
   404  0004D2                     	if	0	;tblptru may be non-zero
   405  0004D2                     	endif
   406  0004D2                     	if	0	;tblptru may be non-zero
   407  0004D2                     	endif
   408  0004D2  0008               	tblrd		*
   409  0004D4  50F5               	movf	tablat,w,c
   410  0004D6  0FD0               	addlw	208
   411  0004D8  0B0F               	andlw	15
   412  0004DA  100B               	iorwf	WriteToRTC@TempVar000,w,c
   413  0004DC  6E0B               	movwf	WriteToRTC@TempVar000,c
   414                           
   415                           ;gsk_funs.c: 16: TempVar000 = TempVar000|0x80;
   416  0004DE  500B               	movf	WriteToRTC@TempVar000,w,c
   417  0004E0  0980               	iorlw	128
   418  0004E2  6E0B               	movwf	WriteToRTC@TempVar000,c
   419                           
   420                           ;gsk_funs.c: 17: I2C_WriteAtAddress(0xde, 0x01, TempVar000);
   421  0004E4  0E01               	movlw	1
   422  0004E6  6E04               	movwf	I2C_WriteAtAddress@IntAdd,c
   423  0004E8  C00B  F005         	movff	WriteToRTC@TempVar000,I2C_WriteAtAddress@data
   424  0004EC  0EDE               	movlw	222
   425  0004EE  EC9C  F003         	call	_I2C_WriteAtAddress
   426                           
   427                           ;gsk_funs.c: 19: TempVar000 = 0x00;
   428  0004F2  0E00               	movlw	0
   429  0004F4  6E0B               	movwf	WriteToRTC@TempVar000,c
   430                           
   431                           ;gsk_funs.c: 20: TempVar000 = 0x07 & (Time[4]-0x30);
   432  0004F6  0E04               	movlw	4
   433  0004F8  2407               	addwf	WriteToRTC@Time,w,c
   434  0004FA  6E09               	movwf	??_WriteToRTC& (0+255),c
   435  0004FC  0E00               	movlw	0
   436  0004FE  2008               	addwfc	WriteToRTC@Time+1,w,c
   437  000500  6E0A               	movwf	(??_WriteToRTC+1)& (0+255),c
   438  000502  C009  FFF6         	movff	??_WriteToRTC,tblptrl
   439  000506  C00A  FFF7         	movff	??_WriteToRTC+1,tblptrh
   440  00050A                     	if	0	;tblptru may be non-zero
   441  00050A                     	endif
   442  00050A                     	if	0	;tblptru may be non-zero
   443  00050A                     	endif
   444  00050A  0008               	tblrd		*
   445  00050C  50F5               	movf	tablat,w,c
   446  00050E  0FD0               	addlw	208
   447  000510  0B07               	andlw	7
   448  000512  6E0B               	movwf	WriteToRTC@TempVar000,c
   449                           
   450                           ;gsk_funs.c: 21: TempVar000 = TempVar000<<4;
   451  000514  380B               	swapf	WriteToRTC@TempVar000,w,c
   452  000516  0BF0               	andlw	240
   453  000518  6E0B               	movwf	WriteToRTC@TempVar000,c
   454                           
   455                           ;gsk_funs.c: 22: TempVar000 = TempVar000 | (0x0f & (Time[5]-0x30));
   456  00051A  0E05               	movlw	5
   457  00051C  2407               	addwf	WriteToRTC@Time,w,c
   458  00051E  6E09               	movwf	??_WriteToRTC& (0+255),c
   459  000520  0E00               	movlw	0
   460  000522  2008               	addwfc	WriteToRTC@Time+1,w,c
   461  000524  6E0A               	movwf	(??_WriteToRTC+1)& (0+255),c
   462  000526  C009  FFF6         	movff	??_WriteToRTC,tblptrl
   463  00052A  C00A  FFF7         	movff	??_WriteToRTC+1,tblptrh
   464  00052E                     	if	0	;tblptru may be non-zero
   465  00052E                     	endif
   466  00052E                     	if	0	;tblptru may be non-zero
   467  00052E                     	endif
   468  00052E  0008               	tblrd		*
   469  000530  50F5               	movf	tablat,w,c
   470  000532  0FD0               	addlw	208
   471  000534  0B0F               	andlw	15
   472  000536  100B               	iorwf	WriteToRTC@TempVar000,w,c
   473  000538  6E0B               	movwf	WriteToRTC@TempVar000,c
   474                           
   475                           ;gsk_funs.c: 23: TempVar000 = TempVar000|0x80;
   476  00053A  500B               	movf	WriteToRTC@TempVar000,w,c
   477  00053C  0980               	iorlw	128
   478  00053E  6E0B               	movwf	WriteToRTC@TempVar000,c
   479                           
   480                           ;gsk_funs.c: 24: I2C_WriteAtAddress(0xde, 0x00, TempVar000);
   481  000540  0E00               	movlw	0
   482  000542  6E04               	movwf	I2C_WriteAtAddress@IntAdd,c
   483  000544  C00B  F005         	movff	WriteToRTC@TempVar000,I2C_WriteAtAddress@data
   484  000548  0EDE               	movlw	222
   485  00054A  EC9C  F003         	call	_I2C_WriteAtAddress
   486  00054E  0012               	return		;funcret
   487  000550                     __end_of_WriteToRTC:
   488                           	opt stack 0
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           
   494 ;; *************** function _I2C_WriteAtAddress *****************
   495 ;; Defined at:
   496 ;;		line 69 in file "libs/gsk_i2c.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  DevID           1    wreg     unsigned char 
   499 ;;  IntAdd          1    3[COMRAM] unsigned char 
   500 ;;  data            1    4[COMRAM] unsigned char 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  DevID           1    5[COMRAM] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   512 ;;      Params:         2       0       0       0
   513 ;;      Locals:         1       0       0       0
   514 ;;      Temps:          0       0       0       0
   515 ;;      Totals:         3       0       0       0
   516 ;;Total ram usage:        3 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    2
   519 ;; This function calls:
   520 ;;		_I2C_Master_Start
   521 ;;		_I2C_Master_Stop
   522 ;;		_I2C_Master_Write
   523 ;; This function is called by:
   524 ;;		_WriteToRTC
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text2
   529  000738                     __ptext2:
   530                           	opt stack 0
   531  000738                     _I2C_WriteAtAddress:
   532                           	opt stack 27
   533                           
   534                           ;incstack = 0
   535                           ;I2C_WriteAtAddress@DevID stored from wreg
   536  000738  6E06               	movwf	I2C_WriteAtAddress@DevID,c
   537                           
   538                           ;gsk_i2c.c: 71: I2C_Master_Start();
   539  00073A  ECDD  F003         	call	_I2C_Master_Start	;wreg free
   540                           
   541                           ;gsk_i2c.c: 72: I2C_Master_Write(DevID);
   542  00073E  C006  F002         	movff	I2C_WriteAtAddress@DevID,I2C_Master_Write@d
   543  000742  6A03               	clrf	I2C_Master_Write@d+1,c
   544  000744  ECD4  F003         	call	_I2C_Master_Write	;wreg free
   545                           
   546                           ;gsk_i2c.c: 73: I2C_Master_Write(IntAdd);
   547  000748  C004  F002         	movff	I2C_WriteAtAddress@IntAdd,I2C_Master_Write@d
   548  00074C  6A03               	clrf	I2C_Master_Write@d+1,c
   549  00074E  ECD4  F003         	call	_I2C_Master_Write	;wreg free
   550                           
   551                           ;gsk_i2c.c: 74: I2C_Master_Write(data);
   552  000752  C005  F002         	movff	I2C_WriteAtAddress@data,I2C_Master_Write@d
   553  000756  6A03               	clrf	I2C_Master_Write@d+1,c
   554  000758  ECD4  F003         	call	_I2C_Master_Write	;wreg free
   555                           
   556                           ;gsk_i2c.c: 75: I2C_Master_Stop();
   557  00075C  ECD9  F003         	call	_I2C_Master_Stop	;wreg free
   558  000760  0012               	return		;funcret
   559  000762                     __end_of_I2C_WriteAtAddress:
   560                           	opt stack 0
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           
   566 ;; *************** function _ReadRTCAsSec *****************
   567 ;; Defined at:
   568 ;;		line 27 in file "libs/gsk_funs.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  Out             4   18[COMRAM] unsigned long 
   573 ;;  TempVar000      1   22[COMRAM] unsigned char 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  4   12[None  ] unsigned long 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   583 ;;      Params:         0       0       0       0
   584 ;;      Locals:         5       0       0       0
   585 ;;      Temps:          6       0       0       0
   586 ;;      Totals:        11       0       0       0
   587 ;;Total ram usage:       11 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    3
   590 ;; This function calls:
   591 ;;		_I2C_ReadAtAddress
   592 ;;		___lmul
   593 ;;		___wmul
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text3
   600  00030A                     __ptext3:
   601                           	opt stack 0
   602  00030A                     _ReadRTCAsSec:
   603                           	opt stack 27
   604                           
   605                           ;gsk_funs.c: 28: char TempVar000;
   606                           ;gsk_funs.c: 29: uint32_t Out = 0;
   607                           
   608                           ;incstack = 0
   609  00030A  0E00               	movlw	0
   610  00030C  6E13               	movwf	ReadRTCAsSec@Out,c
   611  00030E  0E00               	movlw	0
   612  000310  6E14               	movwf	ReadRTCAsSec@Out+1,c
   613  000312  0E00               	movlw	0
   614  000314  6E15               	movwf	ReadRTCAsSec@Out+2,c
   615  000316  0E00               	movlw	0
   616  000318  6E16               	movwf	ReadRTCAsSec@Out+3,c
   617                           
   618                           ;gsk_funs.c: 30: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
   619  00031A  0E02               	movlw	2
   620  00031C  6E06               	movwf	I2C_ReadAtAddress@IntAdd,c
   621  00031E  0EDE               	movlw	222
   622  000320  EC41  F003         	call	_I2C_ReadAtAddress
   623  000324  6E17               	movwf	ReadRTCAsSec@TempVar000,c
   624                           
   625                           ;gsk_funs.c: 31: Out = ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x03)*10);
   626  000326  C017  F00D         	movff	ReadRTCAsSec@TempVar000,??_ReadRTCAsSec
   627  00032A  3A0D               	swapf	??_ReadRTCAsSec,f,c
   628  00032C  0E0F               	movlw	15
   629  00032E  160D               	andwf	??_ReadRTCAsSec,f,c
   630  000330  0E03               	movlw	3
   631  000332  160D               	andwf	??_ReadRTCAsSec,f,c
   632  000334  500D               	movf	??_ReadRTCAsSec,w,c
   633  000336  0D0A               	mullw	10
   634  000338  5017               	movf	ReadRTCAsSec@TempVar000,w,c
   635  00033A  0B0F               	andlw	15
   636  00033C  6E0E               	movwf	(??_ReadRTCAsSec+1)& (0+255),c
   637  00033E  6A0F               	clrf	(??_ReadRTCAsSec+2)& (0+255),c
   638  000340  50F3               	movf	prodl,w,c
   639  000342  260E               	addwf	??_ReadRTCAsSec+1,f,c
   640  000344  50F4               	movf	prodh,w,c
   641  000346  220F               	addwfc	??_ReadRTCAsSec+2,f,c
   642  000348  C00E  F013         	movff	??_ReadRTCAsSec+1,ReadRTCAsSec@Out
   643  00034C  C00F  F014         	movff	??_ReadRTCAsSec+2,ReadRTCAsSec@Out+1
   644  000350  0E00               	movlw	0
   645  000352  BE14               	btfsc	ReadRTCAsSec@Out+1,7,c
   646  000354  0EFF               	movlw	-1
   647  000356  6E15               	movwf	ReadRTCAsSec@Out+2,c
   648  000358  6E16               	movwf	ReadRTCAsSec@Out+3,c
   649                           
   650                           ;gsk_funs.c: 32: Out = Out*3600;
   651  00035A  C013  F001         	movff	ReadRTCAsSec@Out,___lmul@multiplier
   652  00035E  C014  F002         	movff	ReadRTCAsSec@Out+1,___lmul@multiplier+1
   653  000362  C015  F003         	movff	ReadRTCAsSec@Out+2,___lmul@multiplier+2
   654  000366  C016  F004         	movff	ReadRTCAsSec@Out+3,___lmul@multiplier+3
   655  00036A  0E10               	movlw	16
   656  00036C  6E05               	movwf	___lmul@multiplicand,c
   657  00036E  0E0E               	movlw	14
   658  000370  6E06               	movwf	___lmul@multiplicand+1,c
   659  000372  0E00               	movlw	0
   660  000374  6E07               	movwf	___lmul@multiplicand+2,c
   661  000376  0E00               	movlw	0
   662  000378  6E08               	movwf	___lmul@multiplicand+3,c
   663  00037A  EC16  F003         	call	___lmul	;wreg free
   664  00037E  C001  F013         	movff	?___lmul,ReadRTCAsSec@Out
   665  000382  C002  F014         	movff	?___lmul+1,ReadRTCAsSec@Out+1
   666  000386  C003  F015         	movff	?___lmul+2,ReadRTCAsSec@Out+2
   667  00038A  C004  F016         	movff	?___lmul+3,ReadRTCAsSec@Out+3
   668                           
   669                           ;gsk_funs.c: 34: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
   670  00038E  0E01               	movlw	1
   671  000390  6E06               	movwf	I2C_ReadAtAddress@IntAdd,c
   672  000392  0EDE               	movlw	222
   673  000394  EC41  F003         	call	_I2C_ReadAtAddress
   674  000398  6E17               	movwf	ReadRTCAsSec@TempVar000,c
   675                           
   676                           ;gsk_funs.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
   677  00039A  C017  F00D         	movff	ReadRTCAsSec@TempVar000,??_ReadRTCAsSec
   678  00039E  3A0D               	swapf	??_ReadRTCAsSec,f,c
   679  0003A0  0E0F               	movlw	15
   680  0003A2  160D               	andwf	??_ReadRTCAsSec,f,c
   681  0003A4  0E07               	movlw	7
   682  0003A6  160D               	andwf	??_ReadRTCAsSec,f,c
   683  0003A8  500D               	movf	??_ReadRTCAsSec,w,c
   684  0003AA  0D0A               	mullw	10
   685  0003AC  C017  F00E         	movff	ReadRTCAsSec@TempVar000,??_ReadRTCAsSec+1
   686  0003B0  0E0F               	movlw	15
   687  0003B2  160E               	andwf	??_ReadRTCAsSec+1,f,c
   688  0003B4  500E               	movf	??_ReadRTCAsSec+1,w,c
   689  0003B6  24F3               	addwf	prodl,w,c
   690  0003B8  6E01               	movwf	___wmul@multiplier,c
   691  0003BA  0E00               	movlw	0
   692  0003BC  20F4               	addwfc	prodh,w,c
   693  0003BE  6E02               	movwf	___wmul@multiplier+1,c
   694  0003C0  0E00               	movlw	0
   695  0003C2  6E04               	movwf	___wmul@multiplicand+1,c
   696  0003C4  0E3C               	movlw	60
   697  0003C6  6E03               	movwf	___wmul@multiplicand,c
   698  0003C8  ECB1  F003         	call	___wmul	;wreg free
   699  0003CC  C001  F00F         	movff	?___wmul,??_ReadRTCAsSec+2
   700  0003D0  C002  F010         	movff	?___wmul+1,??_ReadRTCAsSec+3
   701  0003D4  0E00               	movlw	0
   702  0003D6  BE10               	btfsc	(??_ReadRTCAsSec+3)& (0+255),7,c
   703  0003D8  0EFF               	movlw	255
   704  0003DA  6E11               	movwf	(??_ReadRTCAsSec+4)& (0+255),c
   705  0003DC  6E12               	movwf	(??_ReadRTCAsSec+5)& (0+255),c
   706  0003DE  5013               	movf	ReadRTCAsSec@Out,w,c
   707  0003E0  240F               	addwf	??_ReadRTCAsSec+2,w,c
   708  0003E2  6E13               	movwf	ReadRTCAsSec@Out,c
   709  0003E4  5014               	movf	ReadRTCAsSec@Out+1,w,c
   710  0003E6  2010               	addwfc	??_ReadRTCAsSec+3,w,c
   711  0003E8  6E14               	movwf	ReadRTCAsSec@Out+1,c
   712  0003EA  5015               	movf	ReadRTCAsSec@Out+2,w,c
   713  0003EC  2011               	addwfc	??_ReadRTCAsSec+4,w,c
   714  0003EE  6E15               	movwf	ReadRTCAsSec@Out+2,c
   715  0003F0  5016               	movf	ReadRTCAsSec@Out+3,w,c
   716  0003F2  2012               	addwfc	??_ReadRTCAsSec+5,w,c
   717  0003F4  6E16               	movwf	ReadRTCAsSec@Out+3,c
   718                           
   719                           ;gsk_funs.c: 37: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
   720  0003F6  0E00               	movlw	0
   721  0003F8  6E06               	movwf	I2C_ReadAtAddress@IntAdd,c
   722  0003FA  0EDE               	movlw	222
   723  0003FC  EC41  F003         	call	_I2C_ReadAtAddress
   724  000400  6E17               	movwf	ReadRTCAsSec@TempVar000,c
   725                           
   726                           ;gsk_funs.c: 38: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10);
   727  000402  C017  F00D         	movff	ReadRTCAsSec@TempVar000,??_ReadRTCAsSec
   728  000406  3A0D               	swapf	??_ReadRTCAsSec,f,c
   729  000408  0E0F               	movlw	15
   730  00040A  160D               	andwf	??_ReadRTCAsSec,f,c
   731  00040C  0E07               	movlw	7
   732  00040E  160D               	andwf	??_ReadRTCAsSec,f,c
   733  000410  500D               	movf	??_ReadRTCAsSec,w,c
   734  000412  0D0A               	mullw	10
   735  000414  C017  F00E         	movff	ReadRTCAsSec@TempVar000,??_ReadRTCAsSec+1
   736  000418  0E0F               	movlw	15
   737  00041A  160E               	andwf	??_ReadRTCAsSec+1,f,c
   738  00041C  500E               	movf	??_ReadRTCAsSec+1,w,c
   739  00041E  24F3               	addwf	prodl,w,c
   740  000420  6E0F               	movwf	(??_ReadRTCAsSec+2)& (0+255),c
   741  000422  0E00               	movlw	0
   742  000424  20F4               	addwfc	prodh,w,c
   743  000426  6E10               	movwf	(??_ReadRTCAsSec+3)& (0+255),c
   744  000428  6A11               	clrf	(??_ReadRTCAsSec+4)& (0+255),c
   745  00042A  BE10               	btfsc	(??_ReadRTCAsSec+3)& (0+255),7,c
   746  00042C  0611               	decf	(??_ReadRTCAsSec+4)& (0+255),f,c
   747  00042E  5011               	movf	(??_ReadRTCAsSec+4)& (0+255),w,c
   748  000430  6E12               	movwf	(??_ReadRTCAsSec+5)& (0+255),c
   749  000432  5013               	movf	ReadRTCAsSec@Out,w,c
   750  000434  240F               	addwf	??_ReadRTCAsSec+2,w,c
   751  000436  6E13               	movwf	ReadRTCAsSec@Out,c
   752  000438  5014               	movf	ReadRTCAsSec@Out+1,w,c
   753  00043A  2010               	addwfc	??_ReadRTCAsSec+3,w,c
   754  00043C  6E14               	movwf	ReadRTCAsSec@Out+1,c
   755  00043E  5015               	movf	ReadRTCAsSec@Out+2,w,c
   756  000440  2011               	addwfc	??_ReadRTCAsSec+4,w,c
   757  000442  6E15               	movwf	ReadRTCAsSec@Out+2,c
   758  000444  5016               	movf	ReadRTCAsSec@Out+3,w,c
   759  000446  2012               	addwfc	??_ReadRTCAsSec+5,w,c
   760  000448  6E16               	movwf	ReadRTCAsSec@Out+3,c
   761  00044A  0012               	return	
   762  00044C                     __end_of_ReadRTCAsSec:
   763                           	opt stack 0
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           tblptrl	equ	0xFF6
   767                           tablat	equ	0xFF5
   768                           prodh	equ	0xFF4
   769                           prodl	equ	0xFF3
   770                           
   771 ;; *************** function ___wmul *****************
   772 ;; Defined at:
   773 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  multiplier      2    0[COMRAM] unsigned int 
   776 ;;  multiplicand    2    2[COMRAM] unsigned int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  product         2    4[COMRAM] unsigned int 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  2    0[COMRAM] unsigned int 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, prodl, prodh
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   788 ;;      Params:         4       0       0       0
   789 ;;      Locals:         2       0       0       0
   790 ;;      Temps:          0       0       0       0
   791 ;;      Totals:         6       0       0       0
   792 ;;Total ram usage:        6 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_ReadRTCAsSec
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text4
   802  000762                     __ptext4:
   803                           	opt stack 0
   804  000762                     ___wmul:
   805                           	opt stack 29
   806                           
   807                           ;incstack = 0
   808  000762  5001               	movf	___wmul@multiplier,w,c
   809  000764  0203               	mulwf	___wmul@multiplicand,c
   810  000766  CFF3 F005          	movff	prodl,___wmul@product
   811  00076A  CFF4 F006          	movff	prodh,___wmul@product+1
   812  00076E  5001               	movf	___wmul@multiplier,w,c
   813  000770  0204               	mulwf	___wmul@multiplicand+1,c
   814  000772  50F3               	movf	prodl,w,c
   815  000774  2606               	addwf	___wmul@product+1,f,c
   816  000776  5002               	movf	___wmul@multiplier+1,w,c
   817  000778  0203               	mulwf	___wmul@multiplicand,c
   818  00077A  50F3               	movf	prodl,w,c
   819  00077C  2606               	addwf	___wmul@product+1,f,c
   820  00077E  C005  F001         	movff	___wmul@product,?___wmul
   821  000782  C006  F002         	movff	___wmul@product+1,?___wmul+1
   822  000786  0012               	return	
   823  000788                     __end_of___wmul:
   824                           	opt stack 0
   825                           tblptru	equ	0xFF8
   826                           tblptrh	equ	0xFF7
   827                           tblptrl	equ	0xFF6
   828                           tablat	equ	0xFF5
   829                           prodh	equ	0xFF4
   830                           prodl	equ	0xFF3
   831                           
   832 ;; *************** function ___lmul *****************
   833 ;; Defined at:
   834 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  multiplier      4    0[COMRAM] unsigned long 
   837 ;;  multiplicand    4    4[COMRAM] unsigned long 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  product         4    8[COMRAM] unsigned long 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  4    0[COMRAM] unsigned long 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   849 ;;      Params:         8       0       0       0
   850 ;;      Locals:         4       0       0       0
   851 ;;      Temps:          0       0       0       0
   852 ;;      Totals:        12       0       0       0
   853 ;;Total ram usage:       12 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_ReadRTCAsSec
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text5
   863  00062C                     __ptext5:
   864                           	opt stack 0
   865  00062C                     ___lmul:
   866                           	opt stack 29
   867                           
   868                           ;incstack = 0
   869  00062C  0E00               	movlw	0
   870  00062E  6E09               	movwf	___lmul@product,c
   871  000630  0E00               	movlw	0
   872  000632  6E0A               	movwf	___lmul@product+1,c
   873  000634  0E00               	movlw	0
   874  000636  6E0B               	movwf	___lmul@product+2,c
   875  000638  0E00               	movlw	0
   876  00063A  6E0C               	movwf	___lmul@product+3,c
   877  00063C                     l903:
   878  00063C  A001               	btfss	___lmul@multiplier,0,c
   879  00063E  D008               	goto	l907
   880  000640  5005               	movf	___lmul@multiplicand,w,c
   881  000642  2609               	addwf	___lmul@product,f,c
   882  000644  5006               	movf	___lmul@multiplicand+1,w,c
   883  000646  220A               	addwfc	___lmul@product+1,f,c
   884  000648  5007               	movf	___lmul@multiplicand+2,w,c
   885  00064A  220B               	addwfc	___lmul@product+2,f,c
   886  00064C  5008               	movf	___lmul@multiplicand+3,w,c
   887  00064E  220C               	addwfc	___lmul@product+3,f,c
   888  000650                     l907:
   889  000650  90D8               	bcf	status,0,c
   890  000652  3605               	rlcf	___lmul@multiplicand,f,c
   891  000654  3606               	rlcf	___lmul@multiplicand+1,f,c
   892  000656  3607               	rlcf	___lmul@multiplicand+2,f,c
   893  000658  3608               	rlcf	___lmul@multiplicand+3,f,c
   894  00065A  90D8               	bcf	status,0,c
   895  00065C  3204               	rrcf	___lmul@multiplier+3,f,c
   896  00065E  3203               	rrcf	___lmul@multiplier+2,f,c
   897  000660  3202               	rrcf	___lmul@multiplier+1,f,c
   898  000662  3201               	rrcf	___lmul@multiplier,f,c
   899  000664  5001               	movf	___lmul@multiplier,w,c
   900  000666  1002               	iorwf	___lmul@multiplier+1,w,c
   901  000668  1003               	iorwf	___lmul@multiplier+2,w,c
   902  00066A  1004               	iorwf	___lmul@multiplier+3,w,c
   903  00066C  A4D8               	btfss	status,2,c
   904  00066E  D7E6               	goto	l903
   905  000670  C009  F001         	movff	___lmul@product,?___lmul
   906  000674  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   907  000678  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   908  00067C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   909  000680  0012               	return		;funcret
   910  000682                     __end_of___lmul:
   911                           	opt stack 0
   912                           tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           tblptrl	equ	0xFF6
   915                           tablat	equ	0xFF5
   916                           prodh	equ	0xFF4
   917                           prodl	equ	0xFF3
   918                           status	equ	0xFD8
   919                           
   920 ;; *************** function _I2C_ReadAtAddress *****************
   921 ;; Defined at:
   922 ;;		line 55 in file "libs/gsk_i2c.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  DevID           1    wreg     unsigned char 
   925 ;;  IntAdd          1    5[COMRAM] unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  DevID           1    7[COMRAM] unsigned char 
   928 ;;  data            1    6[COMRAM] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      unsigned char 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   938 ;;      Params:         1       0       0       0
   939 ;;      Locals:         2       0       0       0
   940 ;;      Temps:          0       0       0       0
   941 ;;      Totals:         3       0       0       0
   942 ;;Total ram usage:        3 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    2
   945 ;; This function calls:
   946 ;;		_I2C_Master_Read
   947 ;;		_I2C_Master_Start
   948 ;;		_I2C_Master_Stop
   949 ;;		_I2C_Master_Write
   950 ;; This function is called by:
   951 ;;		_ReadRTCAsSec
   952 ;;		_DisplayTimeFromRTC
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text6
   957  000682                     __ptext6:
   958                           	opt stack 0
   959  000682                     _I2C_ReadAtAddress:
   960                           	opt stack 27
   961                           
   962                           ;incstack = 0
   963                           ;I2C_ReadAtAddress@DevID stored from wreg
   964  000682  6E08               	movwf	I2C_ReadAtAddress@DevID,c
   965                           
   966                           ;gsk_i2c.c: 57: I2C_Master_Start();
   967  000684  ECDD  F003         	call	_I2C_Master_Start	;wreg free
   968                           
   969                           ;gsk_i2c.c: 58: I2C_Master_Write(DevID);
   970  000688  C008  F002         	movff	I2C_ReadAtAddress@DevID,I2C_Master_Write@d
   971  00068C  6A03               	clrf	I2C_Master_Write@d+1,c
   972  00068E  ECD4  F003         	call	_I2C_Master_Write	;wreg free
   973                           
   974                           ;gsk_i2c.c: 59: I2C_Master_Write(IntAdd);
   975  000692  C006  F002         	movff	I2C_ReadAtAddress@IntAdd,I2C_Master_Write@d
   976  000696  6A03               	clrf	I2C_Master_Write@d+1,c
   977  000698  ECD4  F003         	call	_I2C_Master_Write	;wreg free
   978                           
   979                           ;gsk_i2c.c: 60: I2C_Master_Stop();
   980  00069C  ECD9  F003         	call	_I2C_Master_Stop	;wreg free
   981                           
   982                           ;gsk_i2c.c: 62: I2C_Master_Start();
   983  0006A0  ECDD  F003         	call	_I2C_Master_Start	;wreg free
   984                           
   985                           ;gsk_i2c.c: 63: I2C_Master_Write(DevID+1);
   986  0006A4  0E01               	movlw	1
   987  0006A6  2408               	addwf	I2C_ReadAtAddress@DevID,w,c
   988  0006A8  6E02               	movwf	I2C_Master_Write@d,c
   989  0006AA  6A03               	clrf	I2C_Master_Write@d+1,c
   990  0006AC  0E00               	movlw	0
   991  0006AE  2203               	addwfc	I2C_Master_Write@d+1,f,c
   992  0006B0  ECD4  F003         	call	_I2C_Master_Write	;wreg free
   993                           
   994                           ;gsk_i2c.c: 64: char data = I2C_Master_Read(0);
   995  0006B4  0E00               	movlw	0
   996  0006B6  6E03               	movwf	I2C_Master_Read@a+1,c
   997  0006B8  0E00               	movlw	0
   998  0006BA  6E02               	movwf	I2C_Master_Read@a,c
   999  0006BC  EC85  F003         	call	_I2C_Master_Read	;wreg free
  1000  0006C0  5002               	movf	?_I2C_Master_Read,w,c
  1001  0006C2  6E07               	movwf	I2C_ReadAtAddress@data,c
  1002                           
  1003                           ;gsk_i2c.c: 65: I2C_Master_Stop();
  1004  0006C4  ECD9  F003         	call	_I2C_Master_Stop	;wreg free
  1005                           
  1006                           ;gsk_i2c.c: 66: return data;
  1007  0006C8  5007               	movf	I2C_ReadAtAddress@data,w,c
  1008  0006CA  0012               	return	
  1009  0006CC                     __end_of_I2C_ReadAtAddress:
  1010                           	opt stack 0
  1011                           tblptru	equ	0xFF8
  1012                           tblptrh	equ	0xFF7
  1013                           tblptrl	equ	0xFF6
  1014                           tablat	equ	0xFF5
  1015                           prodh	equ	0xFF4
  1016                           prodl	equ	0xFF3
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _I2C_Master_Write *****************
  1020 ;; Defined at:
  1021 ;;		line 36 in file "libs/gsk_i2c.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  d               2    1[COMRAM] unsigned int 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1035 ;;      Params:         2       0       0       0
  1036 ;;      Locals:         0       0       0       0
  1037 ;;      Temps:          0       0       0       0
  1038 ;;      Totals:         2       0       0       0
  1039 ;;Total ram usage:        2 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    1
  1042 ;; This function calls:
  1043 ;;		_I2C_Master_Wait
  1044 ;; This function is called by:
  1045 ;;		_I2C_ReadAtAddress
  1046 ;;		_I2C_WriteAtAddress
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text7
  1051  0007A8                     __ptext7:
  1052                           	opt stack 0
  1053  0007A8                     _I2C_Master_Write:
  1054                           	opt stack 27
  1055                           
  1056                           ;gsk_i2c.c: 38: I2C_Master_Wait();
  1057                           
  1058                           ;incstack = 0
  1059  0007A8  ECC4  F003         	call	_I2C_Master_Wait	;wreg free
  1060                           
  1061                           ;gsk_i2c.c: 39: SSPBUF = d;
  1062  0007AC  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1063  0007B0  0012               	return		;funcret
  1064  0007B2                     __end_of_I2C_Master_Write:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           prodh	equ	0xFF4
  1071                           prodl	equ	0xFF3
  1072                           status	equ	0xFD8
  1073                           
  1074 ;; *************** function _I2C_Master_Stop *****************
  1075 ;; Defined at:
  1076 ;;		line 30 in file "libs/gsk_i2c.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1090 ;;      Params:         0       0       0       0
  1091 ;;      Locals:         0       0       0       0
  1092 ;;      Temps:          0       0       0       0
  1093 ;;      Totals:         0       0       0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    1
  1097 ;; This function calls:
  1098 ;;		_I2C_Master_Wait
  1099 ;; This function is called by:
  1100 ;;		_I2C_ReadAtAddress
  1101 ;;		_I2C_WriteAtAddress
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text8
  1106  0007B2                     __ptext8:
  1107                           	opt stack 0
  1108  0007B2                     _I2C_Master_Stop:
  1109                           	opt stack 27
  1110                           
  1111                           ;gsk_i2c.c: 32: I2C_Master_Wait();
  1112                           
  1113                           ;incstack = 0
  1114  0007B2  ECC4  F003         	call	_I2C_Master_Wait	;wreg free
  1115                           
  1116                           ;gsk_i2c.c: 33: PEN = 1;
  1117  0007B6  84C5               	bsf	4037,2,c	;volatile
  1118  0007B8  0012               	return		;funcret
  1119  0007BA                     __end_of_I2C_Master_Stop:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           prodh	equ	0xFF4
  1126                           prodl	equ	0xFF3
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function _I2C_Master_Start *****************
  1130 ;; Defined at:
  1131 ;;		line 18 in file "libs/gsk_i2c.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1145 ;;      Params:         0       0       0       0
  1146 ;;      Locals:         0       0       0       0
  1147 ;;      Temps:          0       0       0       0
  1148 ;;      Totals:         0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    1
  1152 ;; This function calls:
  1153 ;;		_I2C_Master_Wait
  1154 ;; This function is called by:
  1155 ;;		_I2C_ReadAtAddress
  1156 ;;		_I2C_WriteAtAddress
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text9
  1161  0007BA                     __ptext9:
  1162                           	opt stack 0
  1163  0007BA                     _I2C_Master_Start:
  1164                           	opt stack 27
  1165                           
  1166                           ;gsk_i2c.c: 20: I2C_Master_Wait();
  1167                           
  1168                           ;incstack = 0
  1169  0007BA  ECC4  F003         	call	_I2C_Master_Wait	;wreg free
  1170                           
  1171                           ;gsk_i2c.c: 21: SEN = 1;
  1172  0007BE  80C5               	bsf	4037,0,c	;volatile
  1173  0007C0  0012               	return		;funcret
  1174  0007C2                     __end_of_I2C_Master_Start:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           prodh	equ	0xFF4
  1181                           prodl	equ	0xFF3
  1182                           status	equ	0xFD8
  1183                           
  1184 ;; *************** function _I2C_Master_Read *****************
  1185 ;; Defined at:
  1186 ;;		line 42 in file "libs/gsk_i2c.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  a               2    1[COMRAM] unsigned short 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  temp            2    3[COMRAM] unsigned short 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  2    1[COMRAM] unsigned short 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1200 ;;      Params:         2       0       0       0
  1201 ;;      Locals:         2       0       0       0
  1202 ;;      Temps:          0       0       0       0
  1203 ;;      Totals:         4       0       0       0
  1204 ;;Total ram usage:        4 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    1
  1207 ;; This function calls:
  1208 ;;		_I2C_Master_Wait
  1209 ;; This function is called by:
  1210 ;;		_I2C_ReadAtAddress
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text10
  1215  00070A                     __ptext10:
  1216                           	opt stack 0
  1217  00070A                     _I2C_Master_Read:
  1218                           	opt stack 27
  1219                           
  1220                           ;gsk_i2c.c: 44: unsigned short temp;
  1221                           ;gsk_i2c.c: 45: I2C_Master_Wait();
  1222                           
  1223                           ;incstack = 0
  1224  00070A  ECC4  F003         	call	_I2C_Master_Wait	;wreg free
  1225                           
  1226                           ;gsk_i2c.c: 46: RCEN = 1;
  1227  00070E  86C5               	bsf	4037,3,c	;volatile
  1228                           
  1229                           ;gsk_i2c.c: 47: I2C_Master_Wait();
  1230  000710  ECC4  F003         	call	_I2C_Master_Wait	;wreg free
  1231                           
  1232                           ;gsk_i2c.c: 48: temp = SSPBUF;
  1233  000714  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
  1234  000718  6A05               	clrf	I2C_Master_Read@temp+1,c
  1235                           
  1236                           ;gsk_i2c.c: 49: I2C_Master_Wait();
  1237  00071A  ECC4  F003         	call	_I2C_Master_Wait	;wreg free
  1238                           
  1239                           ;gsk_i2c.c: 50: ACKDT = (a)?0:1;
  1240  00071E  5002               	movf	I2C_Master_Read@a,w,c
  1241  000720  1003               	iorwf	I2C_Master_Read@a+1,w,c
  1242  000722  A4D8               	btfss	status,2,c
  1243  000724  D002               	goto	u110
  1244  000726  8AC5               	bsf	4037,5,c	;volatile
  1245  000728  D001               	goto	l881
  1246  00072A                     u110:
  1247  00072A  9AC5               	bcf	4037,5,c	;volatile
  1248  00072C                     l881:
  1249                           
  1250                           ;gsk_i2c.c: 51: ACKEN = 1;
  1251  00072C  88C5               	bsf	4037,4,c	;volatile
  1252                           
  1253                           ;gsk_i2c.c: 52: return temp;
  1254  00072E  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
  1255  000732  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
  1256  000736  0012               	return	
  1257  000738                     __end_of_I2C_Master_Read:
  1258                           	opt stack 0
  1259                           tblptru	equ	0xFF8
  1260                           tblptrh	equ	0xFF7
  1261                           tblptrl	equ	0xFF6
  1262                           tablat	equ	0xFF5
  1263                           prodh	equ	0xFF4
  1264                           prodl	equ	0xFF3
  1265                           status	equ	0xFD8
  1266                           
  1267 ;; *************** function _I2C_Master_Wait *****************
  1268 ;; Defined at:
  1269 ;;		line 13 in file "libs/gsk_i2c.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1283 ;;      Params:         0       0       0       0
  1284 ;;      Locals:         0       0       0       0
  1285 ;;      Temps:          1       0       0       0
  1286 ;;      Totals:         1       0       0       0
  1287 ;;Total ram usage:        1 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_I2C_Master_Start
  1293 ;;		_I2C_Master_Stop
  1294 ;;		_I2C_Master_Write
  1295 ;;		_I2C_Master_Read
  1296 ;;		_I2C_Master_RepeatedStart
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text11
  1301  000788                     __ptext11:
  1302                           	opt stack 0
  1303  000788                     _I2C_Master_Wait:
  1304                           	opt stack 27
  1305  000788                     l52:
  1306  000788  B4C7               	btfsc	4039,2,c	;volatile
  1307  00078A  D7FE               	goto	l52
  1308  00078C  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1309  000790  0E1F               	movlw	31
  1310  000792  1601               	andwf	??_I2C_Master_Wait,f,c
  1311  000794  B4D8               	btfsc	status,2,c
  1312  000796  0012               	return	
  1313  000798  D7F7               	goto	l52
  1314  00079A                     __end_of_I2C_Master_Wait:
  1315                           	opt stack 0
  1316                           tblptru	equ	0xFF8
  1317                           tblptrh	equ	0xFF7
  1318                           tblptrl	equ	0xFF6
  1319                           tablat	equ	0xFF5
  1320                           prodh	equ	0xFF4
  1321                           prodl	equ	0xFF3
  1322                           status	equ	0xFD8
  1323                           
  1324 ;; *************** function _I2C_Master_Init *****************
  1325 ;; Defined at:
  1326 ;;		line 3 in file "libs/gsk_i2c.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  c               4   13[COMRAM] const unsigned long 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1340 ;;      Params:         4       0       0       0
  1341 ;;      Locals:         0       0       0       0
  1342 ;;      Temps:          4       0       0       0
  1343 ;;      Totals:         8       0       0       0
  1344 ;;Total ram usage:        8 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    1
  1347 ;; This function calls:
  1348 ;;		___lldiv
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text12
  1355  0005D2                     __ptext12:
  1356                           	opt stack 0
  1357  0005D2                     _I2C_Master_Init:
  1358                           	opt stack 29
  1359                           
  1360                           ;gsk_i2c.c: 5: SSPCON1 = 0b00101000;
  1361                           
  1362                           ;incstack = 0
  1363  0005D2  0E28               	movlw	40
  1364  0005D4  6EC6               	movwf	4038,c	;volatile
  1365                           
  1366                           ;gsk_i2c.c: 6: SSPCON2 = 0;
  1367  0005D6  0E00               	movlw	0
  1368  0005D8  6EC5               	movwf	4037,c	;volatile
  1369                           
  1370                           ;gsk_i2c.c: 7: SSPADD = (12000000/(4*c))-1;
  1371  0005DA  0E00               	movlw	0
  1372  0005DC  6E01               	movwf	___lldiv@dividend,c
  1373  0005DE  0E1B               	movlw	27
  1374  0005E0  6E02               	movwf	___lldiv@dividend+1,c
  1375  0005E2  0EB7               	movlw	183
  1376  0005E4  6E03               	movwf	___lldiv@dividend+2,c
  1377  0005E6  0E00               	movlw	0
  1378  0005E8  6E04               	movwf	___lldiv@dividend+3,c
  1379  0005EA  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  1380  0005EE  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  1381  0005F2  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  1382  0005F6  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  1383  0005FA  0E02               	movlw	2
  1384  0005FC                     u185:
  1385  0005FC  90D8               	bcf	status,0,c
  1386  0005FE  3612               	rlcf	??_I2C_Master_Init,f,c
  1387  000600  3613               	rlcf	??_I2C_Master_Init+1,f,c
  1388  000602  3614               	rlcf	??_I2C_Master_Init+2,f,c
  1389  000604  3615               	rlcf	??_I2C_Master_Init+3,f,c
  1390  000606  2EE8               	decfsz	wreg,f,c
  1391  000608  D7F9               	goto	u185
  1392  00060A  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  1393  00060E  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1394  000612  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1395  000616  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1396  00061A  ECA8  F002         	call	___lldiv	;wreg free
  1397  00061E  0401               	decf	?___lldiv,w,c
  1398  000620  6EC8               	movwf	4040,c	;volatile
  1399                           
  1400                           ;gsk_i2c.c: 8: SSPSTAT = 0;
  1401  000622  0E00               	movlw	0
  1402  000624  6EC7               	movwf	4039,c	;volatile
  1403                           
  1404                           ;gsk_i2c.c: 9: TRISC3 = 1;
  1405  000626  8694               	bsf	3988,3,c	;volatile
  1406                           
  1407                           ;gsk_i2c.c: 10: TRISC4 = 1;
  1408  000628  8894               	bsf	3988,4,c	;volatile
  1409  00062A  0012               	return		;funcret
  1410  00062C                     __end_of_I2C_Master_Init:
  1411                           	opt stack 0
  1412                           tblptru	equ	0xFF8
  1413                           tblptrh	equ	0xFF7
  1414                           tblptrl	equ	0xFF6
  1415                           tablat	equ	0xFF5
  1416                           prodh	equ	0xFF4
  1417                           prodl	equ	0xFF3
  1418                           wreg	equ	0xFE8
  1419                           status	equ	0xFD8
  1420                           
  1421 ;; *************** function ___lldiv *****************
  1422 ;; Defined at:
  1423 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  dividend        4    0[COMRAM] unsigned long 
  1426 ;;  divisor         4    4[COMRAM] unsigned long 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  quotient        4    8[COMRAM] unsigned long 
  1429 ;;  counter         1   12[COMRAM] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  4    0[COMRAM] unsigned long 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1439 ;;      Params:         8       0       0       0
  1440 ;;      Locals:         5       0       0       0
  1441 ;;      Temps:          0       0       0       0
  1442 ;;      Totals:        13       0       0       0
  1443 ;;Total ram usage:       13 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_I2C_Master_Init
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text13
  1453  000550                     __ptext13:
  1454                           	opt stack 0
  1455  000550                     ___lldiv:
  1456                           	opt stack 29
  1457                           
  1458                           ;incstack = 0
  1459  000550  0E00               	movlw	0
  1460  000552  6E09               	movwf	___lldiv@quotient,c
  1461  000554  0E00               	movlw	0
  1462  000556  6E0A               	movwf	___lldiv@quotient+1,c
  1463  000558  0E00               	movlw	0
  1464  00055A  6E0B               	movwf	___lldiv@quotient+2,c
  1465  00055C  0E00               	movlw	0
  1466  00055E  6E0C               	movwf	___lldiv@quotient+3,c
  1467  000560  5005               	movf	___lldiv@divisor,w,c
  1468  000562  1006               	iorwf	___lldiv@divisor+1,w,c
  1469  000564  1007               	iorwf	___lldiv@divisor+2,w,c
  1470  000566  1008               	iorwf	___lldiv@divisor+3,w,c
  1471  000568  B4D8               	btfsc	status,2,c
  1472  00056A  D02A               	goto	l439
  1473  00056C  0E01               	movlw	1
  1474  00056E  6E0D               	movwf	___lldiv@counter,c
  1475  000570  D006               	goto	l919
  1476  000572                     l917:
  1477  000572  90D8               	bcf	status,0,c
  1478  000574  3605               	rlcf	___lldiv@divisor,f,c
  1479  000576  3606               	rlcf	___lldiv@divisor+1,f,c
  1480  000578  3607               	rlcf	___lldiv@divisor+2,f,c
  1481  00057A  3608               	rlcf	___lldiv@divisor+3,f,c
  1482  00057C  2A0D               	incf	___lldiv@counter,f,c
  1483  00057E                     l919:
  1484  00057E  AE08               	btfss	___lldiv@divisor+3,7,c
  1485  000580  D7F8               	goto	l917
  1486  000582                     l921:
  1487  000582  90D8               	bcf	status,0,c
  1488  000584  3609               	rlcf	___lldiv@quotient,f,c
  1489  000586  360A               	rlcf	___lldiv@quotient+1,f,c
  1490  000588  360B               	rlcf	___lldiv@quotient+2,f,c
  1491  00058A  360C               	rlcf	___lldiv@quotient+3,f,c
  1492  00058C  5005               	movf	___lldiv@divisor,w,c
  1493  00058E  5C01               	subwf	___lldiv@dividend,w,c
  1494  000590  5006               	movf	___lldiv@divisor+1,w,c
  1495  000592  5802               	subwfb	___lldiv@dividend+1,w,c
  1496  000594  5007               	movf	___lldiv@divisor+2,w,c
  1497  000596  5803               	subwfb	___lldiv@dividend+2,w,c
  1498  000598  5008               	movf	___lldiv@divisor+3,w,c
  1499  00059A  5804               	subwfb	___lldiv@dividend+3,w,c
  1500  00059C  A0D8               	btfss	status,0,c
  1501  00059E  D009               	goto	l929
  1502  0005A0  5005               	movf	___lldiv@divisor,w,c
  1503  0005A2  5E01               	subwf	___lldiv@dividend,f,c
  1504  0005A4  5006               	movf	___lldiv@divisor+1,w,c
  1505  0005A6  5A02               	subwfb	___lldiv@dividend+1,f,c
  1506  0005A8  5007               	movf	___lldiv@divisor+2,w,c
  1507  0005AA  5A03               	subwfb	___lldiv@dividend+2,f,c
  1508  0005AC  5008               	movf	___lldiv@divisor+3,w,c
  1509  0005AE  5A04               	subwfb	___lldiv@dividend+3,f,c
  1510  0005B0  8009               	bsf	___lldiv@quotient,0,c
  1511  0005B2                     l929:
  1512  0005B2  90D8               	bcf	status,0,c
  1513  0005B4  3208               	rrcf	___lldiv@divisor+3,f,c
  1514  0005B6  3207               	rrcf	___lldiv@divisor+2,f,c
  1515  0005B8  3206               	rrcf	___lldiv@divisor+1,f,c
  1516  0005BA  3205               	rrcf	___lldiv@divisor,f,c
  1517  0005BC  2E0D               	decfsz	___lldiv@counter,f,c
  1518  0005BE  D7E1               	goto	l921
  1519  0005C0                     l439:
  1520  0005C0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1521  0005C4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1522  0005C8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1523  0005CC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1524  0005D0  0012               	return		;funcret
  1525  0005D2                     __end_of___lldiv:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           prodh	equ	0xFF4
  1532                           prodl	equ	0xFF3
  1533                           wreg	equ	0xFE8
  1534                           status	equ	0xFD8
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           prodh	equ	0xFF4
  1540                           prodl	equ	0xFF3
  1541                           wreg	equ	0xFE8
  1542                           status	equ	0xFD8
  1543                           
  1544                           	psect	rparam
  1545  0000                     tblptru	equ	0xFF8
  1546                           tblptrh	equ	0xFF7
  1547                           tblptrl	equ	0xFF6
  1548                           tablat	equ	0xFF5
  1549                           prodh	equ	0xFF4
  1550                           prodl	equ	0xFF3
  1551                           wreg	equ	0xFE8
  1552                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    WriteToRTC@Time	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_ReadRTCAsSec
    _WriteToRTC->_I2C_WriteAtAddress
    _I2C_WriteAtAddress->_I2C_Master_Write
    _ReadRTCAsSec->___lmul
    _I2C_ReadAtAddress->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3557
                    _I2C_Master_Init
                       _ReadRTCAsSec
                         _WriteToRTC
 ---------------------------------------------------------------------------------
 (1) _WriteToRTC                                           6     4      2    1372
                                              6 COMRAM     5     3      2
                 _I2C_WriteAtAddress
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteAtAddress                                   3     1      2     856
                                              3 COMRAM     3     1      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _ReadRTCAsSec                                        11    11      0    1809
                                             12 COMRAM    11    11      0
                  _I2C_ReadAtAddress
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     322
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadAtAddress                                    3     2      1     988
                                              5 COMRAM     3     2      1
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     406
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     109
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _ReadRTCAsSec
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___lmul
     ___wmul
   _WriteToRTC
     _I2C_WriteAtAddress
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     17      17       1       24.2%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BANK1              100      0       0       5        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK1           100      0       0       9        0.0%
BIGRAM             2FF      0       0      10        0.0%
DATA                 0      0       0      11        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Aug 10 20:14:08 2016

                         l52 0788          ___wmul@multiplicand 0003                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                          l439 05C0                          l903 063C  
                        l921 0582                          l907 0650                          l917 0572  
                        l919 057E                          l929 05B2                          l881 072C  
               __CFG_CPB$OFF 000000                          u110 072A                          _PEN 007E2A  
                        u185 05FC                 __CFG_CPD$OFF 000000                          _SEN 007E28  
               __CFG_BORV$19 000000                          wreg 000FE8                 __CFG_FOSC$HS 000000  
              ?_ReadRTCAsSec 0001                 __CFG_LVP$OFF 000000                         l1001 06F8  
                       STR_1 0301                         STR_2 0301                         _RCEN 007E2B  
                       _RSEN 007E29                         _main 06CC                         prodh 000FF4  
                       prodl 000FF3                         start 0000                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000010             ?_I2C_Master_Init 000E  
           ?_I2C_Master_Read 0002                __CFG_PLLEN$ON 000000             ?_I2C_Master_Wait 0001  
           ?_I2C_Master_Stop 0001                        ?_main 0001                        _ACKEN 007E2C  
                      _ACKDT 007E2D                        _ANSEL 000F7E              __end_of___lldiv 05D2  
              __CFG_WDTEN$ON 000000               __CFG_BBSIZ$OFF 000000                        _TRISB 000F93  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000          ___lmul@multiplicand 0005  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             ??_ReadRTCAsSec 000D                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000               __CFG_BOREN$OFF 000000  
                      tablat 000FF5                        status 000FD8              __initialization 079A  
       WriteToRTC@TempVar000 000B                 __end_of_main 070A               __CFG_PCLKEN$ON 000000  
            ReadRTCAsSec@Out 0013                       ??_main 0018                __activetblptr 000001  
          ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0002           ??_I2C_Master_Start 0002  
         ??_I2C_Master_Write 0004                       _ANSELH 000F7F            _I2C_ReadAtAddress 0682  
         ?_I2C_ReadAtAddress 0006                       _SSPADD 000FC8                       _TRISC3 007CA3  
                     _TRISC4 007CA4                       _SSPBUF 000FC9               __CFG_XINST$OFF 000000  
        ??_I2C_ReadAtAddress 0007                       ___lmul 062C                       ___wmul 0762  
                  ??___lldiv 0009                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8    __end_of_I2C_ReadAtAddress 06CC  
            __CFG_HFOFST$OFF 000000                   __accesstop 0060      __end_of__initialization 079A  
              ___rparam_used 000001               WriteToRTC@Time 0007               __pcstackCOMRAM 0001  
       __end_of_ReadRTCAsSec 044C                   _WriteToRTC 044C      I2C_ReadAtAddress@IntAdd 0006  
 __end_of_I2C_WriteAtAddress 0762                      ?___lmul 0001                      ?___wmul 0001  
             ___lmul@product 0009   __size_of_I2C_ReadAtAddress 004A                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5              __CFG_USBDIV$OFF 000000                      _SSPSTAT 000FC7  
            __CFG_PWRTEN$OFF 000000       ReadRTCAsSec@TempVar000 0017                      __Hparam 0000  
                    __Lparam 0000                  ?_WriteToRTC 0007              __size_of___lmul 0056  
                    ___lldiv 0550              __size_of___wmul 0026                 __psmallconst 0300  
            __CFG_STVREN$OFF 000000                      __pcinit 079A                      __ramtop 0300  
                    __ptext0 06CC                      __ptext1 044C                      __ptext2 0738  
                    __ptext3 030A                      __ptext4 0762                      __ptext5 062C  
                    __ptext6 0682                      __ptext7 07A8                      __ptext8 07B2  
                    __ptext9 07BA     __size_of_I2C_Master_Init 005A     __size_of_I2C_Master_Read 002E  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008         end_of_initialization 079A  
      __size_of_ReadRTCAsSec 0142    __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A  
            ___lldiv@divisor 0005              ___lldiv@counter 000D     I2C_WriteAtAddress@IntAdd 0004  
           I2C_Master_Init@c 000E             I2C_Master_Read@a 0002                 _ReadRTCAsSec 030A  
        __size_of_WriteToRTC 0104               __end_of___lmul 0682               __end_of___wmul 0788  
        start_initialization 079A            ??_I2C_Master_Init 0012            ??_I2C_Master_Read 0004  
          ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002                     ??___lmul 0009  
                   ??___wmul 0005           _I2C_WriteAtAddress 0738          ?_I2C_WriteAtAddress 0004  
     I2C_ReadAtAddress@DevID 0008             _I2C_Master_Start 07BA             _I2C_Master_Write 07A8  
       ??_I2C_WriteAtAddress 0006                 ??_WriteToRTC 0009                     ?___lldiv 0001  
                __smallconst 0300           __end_of_WriteToRTC 0550               ___wmul@product 0005  
    I2C_WriteAtAddress@DevID 0006             __CFG_WDTPS$32768 000000            ___wmul@multiplier 0001  
        I2C_Master_Read@temp 0004            ___lmul@multiplier 0001                     __Hrparam 0000  
                   __Lrparam 0000                 __Lsmallconst 0300             __size_of___lldiv 0082  
            _I2C_Master_Init 05D2              _I2C_Master_Read 070A              _I2C_Master_Wait 0788  
            _I2C_Master_Stop 07B2        I2C_ReadAtAddress@data 0007                     __ptext10 070A  
                   __ptext11 0788                     __ptext12 05D2                     __ptext13 0550  
              __size_of_main 003E       I2C_WriteAtAddress@data 0005     __end_of_I2C_Master_Start 07C2  
   __end_of_I2C_Master_Write 07B2             ___lldiv@dividend 0001      __end_of_I2C_Master_Init 062C  
    __end_of_I2C_Master_Read 0738      __end_of_I2C_Master_Wait 079A      __end_of_I2C_Master_Stop 07BA  
        __CFG_CPUDIV$CLKDIV4 000000             ___lldiv@quotient 0009            I2C_Master_Write@d 0002  
__size_of_I2C_WriteAtAddress 002A  
