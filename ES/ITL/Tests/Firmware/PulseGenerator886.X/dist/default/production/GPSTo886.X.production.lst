

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Sep 14 10:40:11 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	psect	text39,local,class=CODE,merge=1,delta=2
    50                           	psect	text40,local,class=CODE,merge=1,delta=2
    51                           	psect	text41,local,class=CODE,merge=1,delta=2
    52                           	psect	text42,local,class=CODE,merge=1,delta=2
    53                           	psect	text43,local,class=CODE,merge=1,delta=2
    54                           	psect	text44,local,class=CODE,merge=1,delta=2
    55                           	psect	text45,local,class=CODE,merge=1,delta=2
    56                           	psect	text46,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0000                     	;# 
   363  0001                     	;# 
   364  0002                     	;# 
   365  0003                     	;# 
   366  0004                     	;# 
   367  0005                     	;# 
   368  0006                     	;# 
   369  0007                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0089                     	;# 
   401  008C                     	;# 
   402  008D                     	;# 
   403  008E                     	;# 
   404  008F                     	;# 
   405  0090                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0093                     	;# 
   410  0093                     	;# 
   411  0094                     	;# 
   412  0095                     	;# 
   413  0096                     	;# 
   414  0097                     	;# 
   415  0098                     	;# 
   416  0099                     	;# 
   417  009A                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  0105                     	;# 
   424  0107                     	;# 
   425  0108                     	;# 
   426  0109                     	;# 
   427  010C                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  0185                     	;# 
   433  0187                     	;# 
   434  0188                     	;# 
   435  0189                     	;# 
   436  018C                     	;# 
   437  018D                     	;# 
   438                           
   439                           	psect	strings
   440  1000                     __pstrings:	
   441  1000                     stringtab:	
   442  1000                     __stringtab:	
   443  1000                     stringcode:	
   444                           ;	String table - string pointers are 1 byte each
   445                           
   446  1000                     stringdir:	
   447  1000  3010               	movlw	high stringdir
   448  1001  008A               	movwf	10
   449  1002  0804               	movf	4,w
   450  1003  0A84               	incf	4,f
   451  1004  0782               	addwf	2,f
   452  1005                     __stringbase:	
   453  1005  3400               	retlw	0
   454  1006                     __end_of__stringtab:	
   455  1006                     UART_ReadFromGPS@StartCode:	
   456  1006  3424               	retlw	36
   457  1007  3447               	retlw	71
   458  1008  3450               	retlw	80
   459  1009  3452               	retlw	82
   460  100A  344D               	retlw	77
   461  100B  3443               	retlw	67
   462  100C  342C               	retlw	44
   463  100D                     __end_ofUART_ReadFromGPS@StartCode:	
   464  100D                     UART_ReadFromGPS_TO@StartCode:	
   465  100D  3424               	retlw	36
   466  100E  3447               	retlw	71
   467  100F  3450               	retlw	80
   468  1010  3452               	retlw	82
   469  1011  344D               	retlw	77
   470  1012  3443               	retlw	67
   471  1013  342C               	retlw	44
   472  1014                     __end_ofUART_ReadFromGPS_TO@StartCode:	
   473  001A                     _RCREG	set	26
   474  0013                     _SSPBUF	set	19
   475  0014                     _SSPCON	set	20
   476  0019                     _TXREG	set	25
   477  00C4                     _CREN	set	196
   478  0028                     _RA0	set	40
   479  0029                     _RA1	set	41
   480  002A                     _RA2	set	42
   481  002B                     _RA3	set	43
   482  002C                     _RA4	set	44
   483  002D                     _RA5	set	45
   484  0039                     _RC1	set	57
   485  003A                     _RC2	set	58
   486  0065                     _RCIF	set	101
   487  00C7                     _SPEN	set	199
   488  0099                     _SPBRG	set	153
   489  009A                     _SPBRGH	set	154
   490  0093                     _SSPADD	set	147
   491  0091                     _SSPCON2	set	145
   492  0094                     _SSPSTAT	set	148
   493  0085                     _TRISA	set	133
   494  0085                     _TRISAbits	set	133
   495  0086                     _TRISB	set	134
   496  0087                     _TRISCbits	set	135
   497  048D                     _ACKDT	set	1165
   498  048C                     _ACKEN	set	1164
   499  04C2                     _BRGH	set	1218
   500  048A                     _PEN	set	1162
   501  048B                     _RCEN	set	1163
   502  0489                     _RSEN	set	1161
   503  0488                     _SEN	set	1160
   504  04C4                     _SYNC	set	1220
   505  043B                     _TRISC3	set	1083
   506  043C                     _TRISC4	set	1084
   507  04C1                     _TRMT	set	1217
   508  04C5                     _TXEN	set	1221
   509  0188                     _ANSEL	set	392
   510  0189                     _ANSELH	set	393
   511  0C3B                     _BRG16	set	3131
   512  1014                     STR_2:	
   513  1014  3452               	retlw	82	;'R'
   514  1015  3454               	retlw	84	;'T'
   515  1016  3443               	retlw	67	;'C'
   516  1017  343A               	retlw	58	;':'
   517  1018  3400               	retlw	0
   518  1019                     STR_1:	
   519  1019  3447               	retlw	71	;'G'
   520  101A  3450               	retlw	80	;'P'
   521  101B  3453               	retlw	83	;'S'
   522  101C  343A               	retlw	58	;':'
   523  101D  3400               	retlw	0
   524  1017                     
   525                           ; #config settings
   526  0000                     
   527                           	psect	cinit
   528  07FA                     start_initialization:	
   529  07FA                     __initialization:	
   530                           
   531                           ; Clear objects allocated to BANK1
   532  07FA  01C3               	clrf	__pbssBANK1& (0+127)
   533  07FB  01C4               	clrf	(__pbssBANK1+1)& (0+127)
   534  07FC                     end_of_initialization:	
   535                           ;End of C runtime variable initialization code
   536                           
   537  07FC                     __end_of__initialization:	
   538  07FC  0183               	clrf	3
   539  07FD  120A  118A  2E64   	ljmp	_main	;jump to C main() function
   540                           
   541                           	psect	bssBANK1
   542  00C3                     __pbssBANK1:	
   543  00C3                     _errno:	
   544  00C3                     	ds	2
   545                           
   546                           	psect	cstackBANK1
   547  00A0                     __pcstackBANK1:	
   548  00A0                     round@f:	
   549                           
   550                           ; 3 bytes @ 0x0
   551  00A0                     	ds	3
   552  00A3                     ?_UART_Init:	
   553  00A3                     _AdjustSec$842:	
   554                           ; 1 bytes @ 0x3
   555                           
   556  00A3                     UART_Init@baudrate:	
   557                           ; 3 bytes @ 0x3
   558                           
   559                           
   560                           ; 4 bytes @ 0x3
   561  00A3                     	ds	3
   562  00A6                     AdjustSec@TimeDiff:	
   563                           
   564                           ; 1 bytes @ 0x6
   565  00A6                     	ds	1
   566  00A7                     AdjustSec@tRIMVAL:	
   567  00A7                     _UART_Init$839:	
   568                           ; 1 bytes @ 0x7
   569                           
   570                           
   571                           ; 3 bytes @ 0x7
   572  00A7                     	ds	3
   573  00AA                     _UART_Init$840:	
   574                           
   575                           ; 3 bytes @ 0xA
   576  00AA                     	ds	3
   577  00AD                     UART_Init@x:	
   578                           
   579                           ; 2 bytes @ 0xD
   580  00AD                     	ds	2
   581  00AF                     ??_main:	
   582                           
   583                           ; 1 bytes @ 0xF
   584  00AF                     	ds	2
   585  00B1                     main@Data:	
   586                           
   587                           ; 6 bytes @ 0x11
   588  00B1                     	ds	6
   589  00B7                     main@Itr:	
   590                           
   591                           ; 1 bytes @ 0x17
   592  00B7                     	ds	1
   593  00B8                     main@PSec:	
   594                           
   595                           ; 4 bytes @ 0x18
   596  00B8                     	ds	4
   597  00BC                     main@ValidGPS:	
   598                           
   599                           ; 1 bytes @ 0x1C
   600  00BC                     	ds	1
   601  00BD                     main@Synced:	
   602                           
   603                           ; 1 bytes @ 0x1D
   604  00BD                     	ds	1
   605  00BE                     main@Second:	
   606                           
   607                           ; 4 bytes @ 0x1E
   608  00BE                     	ds	4
   609  00C2                     main@TempVar000:	
   610                           
   611                           ; 1 bytes @ 0x22
   612  00C2                     	ds	1
   613                           
   614                           	psect	cstackCOMMON
   615  0070                     __pcstackCOMMON:	
   616  0070                     ?_Lcd_Init:	
   617  0070                     ?_Lcd_Command:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_WriteToRTC:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_AdjustSec:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_GetOSCTRIM:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_UART_Read_TO:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ??_UART_Read_TO:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_IsValidGPS:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ??_IsValidGPS:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_Lcd_Delay5500us:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ??_Lcd_Delay5500us:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_Lcd_Delay5us:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_Lcd_Delay5us:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_Lcd_CharCP:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_main:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_I2C_Master_Wait:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_I2C_Master_Wait:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_Master_Start:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_I2C_Master_Start:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_I2C_Master_Stop:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_I2C_Master_Stop:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_I2C_Master_Write:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_SetOSCTRIM:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_I2C_Master_Read:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?___wmul:	
   687                           ; 2 bytes @ 0x0
   688                           
   689  0070                     ?___awdiv:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0070                     ?___ftpack:	
   693                           ; 2 bytes @ 0x0
   694                           
   695  0070                     ?_frexp:	
   696                           ; 3 bytes @ 0x0
   697                           
   698  0070                     ?___lmul:	
   699                           ; 3 bytes @ 0x0
   700                           
   701  0070                     ?___aldiv:	
   702                           ; 4 bytes @ 0x0
   703                           
   704  0070                     ?___lldiv:	
   705                           ; 4 bytes @ 0x0
   706                           
   707  0070                     UART_Read_TO@TimeOut:	
   708                           ; 4 bytes @ 0x0
   709                           
   710  0070                     IsValidGPS@Result:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     I2C_Master_Write@d:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     I2C_Master_Read@a:	
   717                           ; 2 bytes @ 0x0
   718                           
   719  0070                     ___wmul@multiplier:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0070                     ___awdiv@divisor:	
   723                           ; 2 bytes @ 0x0
   724                           
   725  0070                     ___ftpack@arg:	
   726                           ; 2 bytes @ 0x0
   727                           
   728  0070                     frexp@value:	
   729                           ; 3 bytes @ 0x0
   730                           
   731  0070                     ___lmul@multiplier:	
   732                           ; 3 bytes @ 0x0
   733                           
   734  0070                     ___aldiv@divisor:	
   735                           ; 4 bytes @ 0x0
   736                           
   737  0070                     ___lldiv@divisor:	
   738                           ; 4 bytes @ 0x0
   739                           
   740                           
   741                           ; 4 bytes @ 0x0
   742  0070                     	ds	1
   743  0071                     ?_UART_ReadFromGPS_TO:	
   744  0071                     UART_ReadFromGPS_TO@TimeOut:	
   745                           ; 1 bytes @ 0x1
   746                           
   747  0071                     IsValidGPS@GPSData:	
   748                           ; 1 bytes @ 0x1
   749                           
   750                           
   751                           ; 1 bytes @ 0x1
   752  0071                     	ds	1
   753  0072                     ??_Lcd_Command:	
   754  0072                     ??_Lcd_CharCP:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ??_UART_ReadFromGPS_TO:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ??_I2C_Master_Write:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ??_I2C_Master_Read:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ___wmul@multiplicand:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     ___awdiv@dividend:	
   770                           ; 2 bytes @ 0x2
   771                           
   772                           
   773                           ; 2 bytes @ 0x2
   774  0072                     	ds	1
   775  0073                     Lcd_CharCP@c:	
   776  0073                     Lcd_Command@command:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ___ftpack@exp:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     frexp@eptr:	
   783                           ; 1 bytes @ 0x3
   784                           
   785                           
   786                           ; 1 bytes @ 0x3
   787  0073                     	ds	1
   788  0074                     ??_Lcd_Init:	
   789  0074                     ?_Lcd_Text:	
   790                           ; 1 bytes @ 0x4
   791                           
   792  0074                     ??_frexp:	
   793                           ; 1 bytes @ 0x4
   794                           
   795  0074                     ??___wmul:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     ??___awdiv:	
   799                           ; 1 bytes @ 0x4
   800                           
   801  0074                     Lcd_Text@x:	
   802                           ; 1 bytes @ 0x4
   803                           
   804  0074                     ___ftpack@sign:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0074                     UART_ReadFromGPS_TO@i:	
   808                           ; 1 bytes @ 0x4
   809                           
   810  0074                     I2C_Master_Read@temp:	
   811                           ; 2 bytes @ 0x4
   812                           
   813  0074                     ___wmul@product:	
   814                           ; 2 bytes @ 0x4
   815                           
   816  0074                     ___lmul@multiplicand:	
   817                           ; 2 bytes @ 0x4
   818                           
   819  0074                     ___aldiv@dividend:	
   820                           ; 4 bytes @ 0x4
   821                           
   822  0074                     ___lldiv@dividend:	
   823                           ; 4 bytes @ 0x4
   824                           
   825                           
   826                           ; 4 bytes @ 0x4
   827  0074                     	ds	1
   828  0075                     ??___ftpack:	
   829  0075                     Lcd_Init@data:	
   830                           ; 1 bytes @ 0x5
   831                           
   832  0075                     Lcd_Text@buffer:	
   833                           ; 1 bytes @ 0x5
   834                           
   835  0075                     ___awdiv@counter:	
   836                           ; 1 bytes @ 0x5
   837                           
   838                           
   839                           ; 1 bytes @ 0x5
   840  0075                     	ds	1
   841  0076                     ??_Lcd_Text:	
   842  0076                     ?_I2C_ReadAtAddress:	
   843                           ; 1 bytes @ 0x6
   844                           
   845  0076                     ?___lwdiv:	
   846                           ; 1 bytes @ 0x6
   847                           
   848  0076                     UART_ReadFromGPS_TO@Output:	
   849                           ; 2 bytes @ 0x6
   850                           
   851  0076                     I2C_ReadAtAddress@IntAdd:	
   852                           ; 1 bytes @ 0x6
   853                           
   854  0076                     ___awdiv@sign:	
   855                           ; 1 bytes @ 0x6
   856                           
   857  0076                     ___lwdiv@divisor:	
   858                           ; 1 bytes @ 0x6
   859                           
   860                           
   861                           ; 2 bytes @ 0x6
   862  0076                     	ds	1
   863  0077                     ??_I2C_ReadAtAddress:	
   864  0077                     UART_ReadFromGPS_TO@TempChar:	
   865                           ; 1 bytes @ 0x7
   866                           
   867  0077                     Lcd_Text@y:	
   868                           ; 1 bytes @ 0x7
   869                           
   870  0077                     ___awdiv@quotient:	
   871                           ; 1 bytes @ 0x7
   872                           
   873                           
   874                           ; 2 bytes @ 0x7
   875  0077                     	ds	1
   876  0078                     ??___lmul:	
   877  0078                     ??___aldiv:	
   878                           ; 1 bytes @ 0x8
   879                           
   880  0078                     ??___lldiv:	
   881                           ; 1 bytes @ 0x8
   882                           
   883  0078                     ?___abtoft:	
   884                           ; 1 bytes @ 0x8
   885                           
   886  0078                     ?___altoft:	
   887                           ; 3 bytes @ 0x8
   888                           
   889  0078                     UART_ReadFromGPS_TO@Pos:	
   890                           ; 3 bytes @ 0x8
   891                           
   892  0078                     Lcd_Text@data:	
   893                           ; 1 bytes @ 0x8
   894                           
   895  0078                     ___lwdiv@dividend:	
   896                           ; 1 bytes @ 0x8
   897                           
   898  0078                     ___altoft@c:	
   899                           ; 2 bytes @ 0x8
   900                           
   901                           
   902                           ; 4 bytes @ 0x8
   903  0078                     	ds	1
   904  0079                     ?_UART_ReadValidTimeFromGPS_TO:	
   905  0079                     ??___bmul:	
   906                           ; 1 bytes @ 0x9
   907                           
   908  0079                     UART_ReadValidTimeFromGPS_TO@TimeOut:	
   909                           ; 1 bytes @ 0x9
   910                           
   911  0079                     I2C_ReadAtAddress@data:	
   912                           ; 1 bytes @ 0x9
   913                           
   914  0079                     ___lmul@product:	
   915                           ; 1 bytes @ 0x9
   916                           
   917  0079                     ___lldiv@quotient:	
   918                           ; 4 bytes @ 0x9
   919                           
   920                           
   921                           ; 4 bytes @ 0x9
   922  0079                     	ds	1
   923  007A                     ??_UART_ReadValidTimeFromGPS_TO:	
   924  007A                     ??___lwdiv:	
   925                           ; 1 bytes @ 0xA
   926                           
   927  007A                     I2C_ReadAtAddress@DevID:	
   928                           ; 1 bytes @ 0xA
   929                           
   930  007A                     ___bmul@product:	
   931                           ; 1 bytes @ 0xA
   932                           
   933                           
   934                           ; 1 bytes @ 0xA
   935  007A                     	ds	1
   936  007B                     ??_GetOSCTRIM:	
   937  007B                     UART_ReadValidTimeFromGPS_TO@Output:	
   938                           ; 1 bytes @ 0xB
   939                           
   940  007B                     ___bmul@multiplier:	
   941                           ; 1 bytes @ 0xB
   942                           
   943  007B                     ___abtoft@sign:	
   944                           ; 1 bytes @ 0xB
   945                           
   946  007B                     ___lwdiv@quotient:	
   947                           ; 1 bytes @ 0xB
   948                           
   949                           
   950                           ; 2 bytes @ 0xB
   951  007B                     	ds	1
   952  007C                     ??_Lcd_WriteChar:	
   953  007C                     ??_I2C_WriteAtAddress:	
   954                           ; 1 bytes @ 0xC
   955                           
   956  007C                     ??___altoft:	
   957                           ; 1 bytes @ 0xC
   958                           
   959  007C                     ___abtoft@c:	
   960                           ; 1 bytes @ 0xC
   961                           
   962                           
   963                           ; 1 bytes @ 0xC
   964  007C                     	ds	1
   965  007D                     GetOSCTRIM@i:	
   966  007D                     ___lldiv@counter:	
   967                           ; 1 bytes @ 0xD
   968                           
   969  007D                     ___lwdiv@counter:	
   970                           ; 1 bytes @ 0xD
   971                           
   972                           
   973                           ; 1 bytes @ 0xD
   974  007D                     	ds	1
   975  007E                     ??_UART_Init:	
   976  007E                     ??_round:	
   977                           ; 1 bytes @ 0xE
   978                           
   979  007E                     ??___ftneg:	
   980                           ; 1 bytes @ 0xE
   981                           
   982                           
   983                           	psect	cstackBANK0
   984  0020                     __pcstackBANK0:	
   985                           ; 1 bytes @ 0xE
   986                           
   987  0020                     ?_I2C_Master_Init:	
   988  0020                     ??___abtoft:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0020                     ___aldiv@counter:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0020                     ___altoft@exp:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0020                     I2C_Master_Init@c:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000                           
  1001                           ; 4 bytes @ 0x0
  1002  0020                     	ds	1
  1003  0021                     ___aldiv@sign:	
  1004  0021                     ___altoft@sign:	
  1005                           ; 1 bytes @ 0x1
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0x1
  1009  0021                     	ds	1
  1010  0022                     ___aldiv@quotient:	
  1011                           
  1012                           ; 4 bytes @ 0x2
  1013  0022                     	ds	2
  1014  0024                     ??_I2C_Master_Init:	
  1015                           
  1016                           ; 1 bytes @ 0x4
  1017  0024                     	ds	1
  1018  0025                     ?___ftmul:	
  1019  0025                     ___ftmul@f1:	
  1020                           ; 3 bytes @ 0x5
  1021                           
  1022                           
  1023                           ; 3 bytes @ 0x5
  1024  0025                     	ds	1
  1025  0026                     ?___bmul:	
  1026  0026                     ___bmul@multiplicand:	
  1027                           ; 1 bytes @ 0x6
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x6
  1031  0026                     	ds	1
  1032  0027                     ?_Lcd_WriteChar:	
  1033  0027                     ?_Lcd_Int:	
  1034                           ; 1 bytes @ 0x7
  1035                           
  1036  0027                     ?_I2C_WriteAtAddress:	
  1037                           ; 1 bytes @ 0x7
  1038                           
  1039  0027                     Lcd_WriteChar@x:	
  1040                           ; 1 bytes @ 0x7
  1041                           
  1042  0027                     Lcd_Int@x:	
  1043                           ; 1 bytes @ 0x7
  1044                           
  1045  0027                     I2C_WriteAtAddress@IntAdd:	
  1046                           ; 1 bytes @ 0x7
  1047                           
  1048                           
  1049                           ; 1 bytes @ 0x7
  1050  0027                     	ds	1
  1051  0028                     Lcd_WriteChar@c:	
  1052  0028                     Lcd_Int@val:	
  1053                           ; 1 bytes @ 0x8
  1054                           
  1055  0028                     I2C_WriteAtAddress@data:	
  1056                           ; 1 bytes @ 0x8
  1057                           
  1058  0028                     ___ftmul@f2:	
  1059                           ; 1 bytes @ 0x8
  1060                           
  1061                           
  1062                           ; 3 bytes @ 0x8
  1063  0028                     	ds	1
  1064  0029                     Lcd_WriteChar@y:	
  1065  0029                     Lcd_Int@size:	
  1066                           ; 1 bytes @ 0x9
  1067                           
  1068  0029                     I2C_WriteAtAddress@DevID:	
  1069                           ; 1 bytes @ 0x9
  1070                           
  1071                           
  1072                           ; 1 bytes @ 0x9
  1073  0029                     	ds	1
  1074  002A                     ??_WriteToRTC:	
  1075  002A                     ??_Lcd_Int:	
  1076                           ; 1 bytes @ 0xA
  1077                           
  1078  002A                     ??_SetOSCTRIM:	
  1079                           ; 1 bytes @ 0xA
  1080                           
  1081  002A                     Lcd_WriteChar@data:	
  1082                           ; 1 bytes @ 0xA
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0xA
  1086  002A                     	ds	1
  1087  002B                     ?_WriteLongInt:	
  1088  002B                     ??___ftmul:	
  1089                           ; 1 bytes @ 0xB
  1090                           
  1091  002B                     WriteLongInt@x:	
  1092                           ; 1 bytes @ 0xB
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0xB
  1096  002B                     	ds	1
  1097  002C                     Lcd_Int@y:	
  1098  002C                     WriteToRTC@Time:	
  1099                           ; 1 bytes @ 0xC
  1100                           
  1101  002C                     WriteLongInt@Val:	
  1102                           ; 1 bytes @ 0xC
  1103                           
  1104                           
  1105                           ; 4 bytes @ 0xC
  1106  002C                     	ds	1
  1107  002D                     Lcd_Int@data:	
  1108  002D                     WriteToRTC@TempVar000:	
  1109                           ; 1 bytes @ 0xD
  1110                           
  1111  002D                     SetOSCTRIM@Val:	
  1112                           ; 1 bytes @ 0xD
  1113                           
  1114                           
  1115                           ; 1 bytes @ 0xD
  1116  002D                     	ds	1
  1117  002E                     ?_ReadRTCAsSec:	
  1118  002E                     Lcd_Int@tempVal:	
  1119                           ; 4 bytes @ 0xE
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0xE
  1123  002E                     	ds	1
  1124  002F                     ___ftmul@exp:	
  1125                           
  1126                           ; 1 bytes @ 0xF
  1127  002F                     	ds	1
  1128  0030                     ?_DisplayTimeFromRTC:	
  1129  0030                     WriteLongInt@size:	
  1130                           ; 1 bytes @ 0x10
  1131                           
  1132  0030                     DisplayTimeFromRTC@x:	
  1133                           ; 1 bytes @ 0x10
  1134                           
  1135  0030                     ___ftmul@f3_as_product:	
  1136                           ; 1 bytes @ 0x10
  1137                           
  1138                           
  1139                           ; 3 bytes @ 0x10
  1140  0030                     	ds	1
  1141  0031                     ??_DisplayTimeFromRTC:	
  1142  0031                     WriteLongInt@Sign:	
  1143                           ; 1 bytes @ 0x11
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x11
  1147  0031                     	ds	1
  1148  0032                     ??_ReadRTCAsSec:	
  1149  0032                     ??_WriteLongInt:	
  1150                           ; 1 bytes @ 0x12
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0x12
  1154  0032                     	ds	1
  1155  0033                     ___ftmul@cntr:	
  1156                           
  1157                           ; 1 bytes @ 0x13
  1158  0033                     	ds	1
  1159  0034                     DisplayTimeFromRTC@y:	
  1160  0034                     ___ftmul@sign:	
  1161                           ; 1 bytes @ 0x14
  1162                           
  1163                           
  1164                           ; 1 bytes @ 0x14
  1165  0034                     	ds	1
  1166  0035                     ?___ftdiv:	
  1167  0035                     DisplayTimeFromRTC@TempVar000:	
  1168                           ; 3 bytes @ 0x15
  1169                           
  1170  0035                     ___ftdiv@f2:	
  1171                           ; 1 bytes @ 0x15
  1172                           
  1173                           
  1174                           ; 3 bytes @ 0x15
  1175  0035                     	ds	1
  1176  0036                     WriteLongInt@POS:	
  1177                           
  1178                           ; 1 bytes @ 0x16
  1179  0036                     	ds	1
  1180  0037                     WriteLongInt@y:	
  1181                           
  1182                           ; 1 bytes @ 0x17
  1183  0037                     	ds	1
  1184  0038                     ___ftdiv@f1:	
  1185                           
  1186                           ; 3 bytes @ 0x18
  1187  0038                     	ds	3
  1188  003B                     ??___ftdiv:	
  1189                           
  1190                           ; 1 bytes @ 0x1B
  1191  003B                     	ds	4
  1192  003F                     ___ftdiv@cntr:	
  1193  003F                     _ReadRTCAsSec$841:	
  1194                           ; 1 bytes @ 0x1F
  1195                           
  1196                           
  1197                           ; 2 bytes @ 0x1F
  1198  003F                     	ds	1
  1199  0040                     ___ftdiv@f3:	
  1200                           
  1201                           ; 3 bytes @ 0x20
  1202  0040                     	ds	1
  1203  0041                     ReadRTCAsSec@Out:	
  1204                           
  1205                           ; 4 bytes @ 0x21
  1206  0041                     	ds	2
  1207  0043                     ___ftdiv@exp:	
  1208                           
  1209                           ; 1 bytes @ 0x23
  1210  0043                     	ds	1
  1211  0044                     ___ftdiv@sign:	
  1212                           
  1213                           ; 1 bytes @ 0x24
  1214  0044                     	ds	1
  1215  0045                     ?___ftadd:	
  1216  0045                     ReadRTCAsSec@TempVar000:	
  1217                           ; 3 bytes @ 0x25
  1218                           
  1219  0045                     ___ftadd@f1:	
  1220                           ; 1 bytes @ 0x25
  1221                           
  1222                           
  1223                           ; 3 bytes @ 0x25
  1224  0045                     	ds	3
  1225  0048                     ___ftadd@f2:	
  1226                           
  1227                           ; 3 bytes @ 0x28
  1228  0048                     	ds	3
  1229  004B                     ??___ftadd:	
  1230                           
  1231                           ; 1 bytes @ 0x2B
  1232  004B                     	ds	4
  1233  004F                     ___ftadd@sign:	
  1234                           
  1235                           ; 1 bytes @ 0x2F
  1236  004F                     	ds	1
  1237  0050                     ___ftadd@exp2:	
  1238                           
  1239                           ; 1 bytes @ 0x30
  1240  0050                     	ds	1
  1241  0051                     ___ftadd@exp1:	
  1242                           
  1243                           ; 1 bytes @ 0x31
  1244  0051                     	ds	1
  1245  0052                     ?___fttol:	
  1246  0052                     ___fttol@f1:	
  1247                           ; 4 bytes @ 0x32
  1248                           
  1249                           
  1250                           ; 3 bytes @ 0x32
  1251  0052                     	ds	4
  1252  0056                     ??___fttol:	
  1253                           
  1254                           ; 1 bytes @ 0x36
  1255  0056                     	ds	4
  1256  005A                     ___fttol@sign1:	
  1257                           
  1258                           ; 1 bytes @ 0x3A
  1259  005A                     	ds	1
  1260  005B                     ___fttol@lval:	
  1261                           
  1262                           ; 4 bytes @ 0x3B
  1263  005B                     	ds	4
  1264  005F                     ___fttol@exp1:	
  1265                           
  1266                           ; 1 bytes @ 0x3F
  1267  005F                     	ds	1
  1268  0060                     ?_trunc:	
  1269  0060                     trunc@x:	
  1270                           ; 3 bytes @ 0x40
  1271                           
  1272                           
  1273                           ; 3 bytes @ 0x40
  1274  0060                     	ds	3
  1275  0063                     ??_trunc:	
  1276                           
  1277                           ; 1 bytes @ 0x43
  1278  0063                     	ds	1
  1279  0064                     trunc@i:	
  1280                           
  1281                           ; 3 bytes @ 0x44
  1282  0064                     	ds	3
  1283  0067                     trunc@expon:	
  1284                           
  1285                           ; 2 bytes @ 0x47
  1286  0067                     	ds	2
  1287  0069                     ?___ftneg:	
  1288  0069                     ___ftneg@f1:	
  1289                           ; 3 bytes @ 0x49
  1290                           
  1291                           
  1292                           ; 3 bytes @ 0x49
  1293  0069                     	ds	3
  1294  006C                     ?_round:	
  1295  006C                     round@x:	
  1296                           ; 3 bytes @ 0x4C
  1297                           
  1298                           
  1299                           ; 3 bytes @ 0x4C
  1300  006C                     	ds	3
  1301  006F                     ??_AdjustSec:	
  1302                           
  1303                           ; 1 bytes @ 0x4F
  1304  006F                     	ds	1
  1305                           
  1306                           	psect	maintext
  1307  0664                     __pmaintext:	
  1308 ;;
  1309 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1310 ;;
  1311 ;; *************** function _main *****************
  1312 ;; Defined at:
  1313 ;;		line 10 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  Data            6   17[BANK1 ] unsigned char [6]
  1318 ;;  Second          4   30[BANK1 ] long 
  1319 ;;  PSec            4   24[BANK1 ] long 
  1320 ;;  TempInt         4    0        long 
  1321 ;;  TempVar000      1   34[BANK1 ] unsigned char 
  1322 ;;  Synced          1   29[BANK1 ] unsigned char 
  1323 ;;  ValidGPS        1   28[BANK1 ] unsigned char 
  1324 ;;  Itr             1   23[BANK1 ] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : B00/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         0       0      18       0       0
  1336 ;;      Temps:          0       0       2       0       0
  1337 ;;      Totals:         0       0      20       0       0
  1338 ;;Total ram usage:       20 bytes
  1339 ;; Hardware stack levels required when called:    5
  1340 ;; This function calls:
  1341 ;;		_AdjustSec
  1342 ;;		_DisplayTimeFromRTC
  1343 ;;		_GetOSCTRIM
  1344 ;;		_I2C_Master_Init
  1345 ;;		_Lcd_Command
  1346 ;;		_Lcd_Init
  1347 ;;		_Lcd_Text
  1348 ;;		_Lcd_WriteChar
  1349 ;;		_ReadRTCAsSec
  1350 ;;		_UART_Init
  1351 ;;		_UART_ReadValidTimeFromGPS_TO
  1352 ;;		_WriteLongInt
  1353 ;;		_WriteToRTC
  1354 ;; This function is called by:
  1355 ;;		Startup code after reset
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _main
  1361  0664                     _main:	
  1362                           
  1363                           ;main.c: 11: ANSEL=0x00;
  1364                           
  1365                           ;incstack = 0
  1366                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1367  0664  1683               	bsf	3,5	;RP0=1, select bank3
  1368  0665  1703               	bsf	3,6	;RP1=1, select bank3
  1369  0666  0188               	clrf	8	;volatile
  1370                           
  1371                           ;main.c: 12: ANSELH=0x00;
  1372  0667  0189               	clrf	9	;volatile
  1373                           
  1374                           ;main.c: 13: TRISA = 0X00;
  1375  0668  1683               	bsf	3,5	;RP0=1, select bank1
  1376  0669  1303               	bcf	3,6	;RP1=0, select bank1
  1377  066A  0185               	clrf	5	;volatile
  1378                           
  1379                           ;main.c: 14: TRISB = 0X00;
  1380  066B  0186               	clrf	6	;volatile
  1381                           
  1382                           ;main.c: 15: Lcd_Init();
  1383  066C  120A  158A  2608  120A  118A  	fcall	_Lcd_Init
  1384                           
  1385                           ;main.c: 16: UART_Init(9600);
  1386  0671  3000               	movlw	0
  1387  0672  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0673  1303               	bcf	3,6	;RP1=0, select bank1
  1389  0674  00A6               	movwf	(UART_Init@baudrate+3)^(0+128)
  1390  0675  3000               	movlw	0
  1391  0676  00A5               	movwf	(UART_Init@baudrate+2)^(0+128)
  1392  0677  3025               	movlw	37
  1393  0678  00A4               	movwf	(UART_Init@baudrate+1)^(0+128)
  1394  0679  3080               	movlw	128
  1395  067A  00A3               	movwf	UART_Init@baudrate^(0+128)
  1396  067B  120A  118A  212C  120A  118A  	fcall	_UART_Init
  1397                           
  1398                           ;main.c: 18: I2C_Master_Init(400000);
  1399  0680  3000               	movlw	0
  1400  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0683  00A3               	movwf	I2C_Master_Init@c+3
  1403  0684  3006               	movlw	6
  1404  0685  00A2               	movwf	I2C_Master_Init@c+2
  1405  0686  301A               	movlw	26
  1406  0687  00A1               	movwf	I2C_Master_Init@c+1
  1407  0688  3080               	movlw	128
  1408  0689  00A0               	movwf	I2C_Master_Init@c
  1409  068A  160A  118A  2754  120A  118A  	fcall	_I2C_Master_Init
  1410                           
  1411                           ;main.c: 21: Lcd_Command(1);
  1412  068F  3001               	movlw	1
  1413  0690  120A  158A  26AD  120A  118A  	fcall	_Lcd_Command
  1414                           
  1415                           ;main.c: 22: Lcd_Text(1,1,"GPS:");
  1416  0695  01F4               	clrf	Lcd_Text@x
  1417  0696  0AF4               	incf	Lcd_Text@x,f
  1418  0697  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1419  0698  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0699  1303               	bcf	3,6	;RP1=0, select bank1
  1421  069A  00AF               	movwf	??_main^(0+128)
  1422  069B  082F               	movf	??_main^(0+128),w
  1423  069C  00F5               	movwf	Lcd_Text@buffer
  1424  069D  3001               	movlw	1
  1425  069E  120A  158A  20B3  120A  118A  	fcall	_Lcd_Text
  1426                           
  1427                           ;main.c: 23: Lcd_Text(2,1,"RTC:");
  1428  06A3  01F4               	clrf	Lcd_Text@x
  1429  06A4  0AF4               	incf	Lcd_Text@x,f
  1430  06A5  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1431  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  1432  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  1433  06A8  00AF               	movwf	??_main^(0+128)
  1434  06A9  082F               	movf	??_main^(0+128),w
  1435  06AA  00F5               	movwf	Lcd_Text@buffer
  1436  06AB  3002               	movlw	2
  1437  06AC  120A  158A  20B3  120A  118A  	fcall	_Lcd_Text
  1438                           
  1439                           ;main.c: 24: Lcd_Text(2,11,":");
  1440  06B1  300B               	movlw	11
  1441  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  1442  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  1443  06B4  00AF               	movwf	??_main^(0+128)
  1444  06B5  082F               	movf	??_main^(0+128),w
  1445  06B6  00F4               	movwf	Lcd_Text@x
  1446  06B7  3012               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  1447  06B8  00B0               	movwf	(??_main+1)^(0+128)
  1448  06B9  0830               	movf	(??_main+1)^(0+128),w
  1449  06BA  00F5               	movwf	Lcd_Text@buffer
  1450  06BB  3002               	movlw	2
  1451  06BC  120A  158A  20B3  120A  118A  	fcall	_Lcd_Text
  1452                           
  1453                           ;main.c: 25: Lcd_Text(1,11,":");
  1454  06C1  300B               	movlw	11
  1455  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  1456  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  1457  06C4  00AF               	movwf	??_main^(0+128)
  1458  06C5  082F               	movf	??_main^(0+128),w
  1459  06C6  00F4               	movwf	Lcd_Text@x
  1460  06C7  3012               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  1461  06C8  00B0               	movwf	(??_main+1)^(0+128)
  1462  06C9  0830               	movf	(??_main+1)^(0+128),w
  1463  06CA  00F5               	movwf	Lcd_Text@buffer
  1464  06CB  3001               	movlw	1
  1465  06CC  120A  158A  20B3  120A  118A  	fcall	_Lcd_Text
  1466                           
  1467                           ;main.c: 26: unsigned char Data[6];
  1468                           ;main.c: 27: int32_t Second;
  1469                           ;main.c: 28: int32_t PSec=1920;
  1470  06D1  3000               	movlw	0
  1471  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  1472  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  1473  06D4  00BB               	movwf	(main@PSec+3)^(0+128)
  1474  06D5  3000               	movlw	0
  1475  06D6  00BA               	movwf	(main@PSec+2)^(0+128)
  1476  06D7  3007               	movlw	7
  1477  06D8  00B9               	movwf	(main@PSec+1)^(0+128)
  1478  06D9  3080               	movlw	128
  1479  06DA  00B8               	movwf	main@PSec^(0+128)
  1480                           
  1481                           ;main.c: 30: char TempVar000;
  1482                           ;main.c: 31: TRISCbits.TRISC2 = 0;
  1483  06DB  1107               	bcf	7,2	;volatile
  1484                           
  1485                           ;main.c: 32: RC2=1;
  1486  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1487  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1488  06DE  1507               	bsf	7,2	;volatile
  1489                           
  1490                           ;main.c: 33: bool Synced=0;
  1491  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1492  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1493  06E1  01BD               	clrf	main@Synced^(0+128)
  1494                           
  1495                           ;main.c: 37: TRISCbits.TRISC1= 0;
  1496  06E2  1087               	bcf	7,1	;volatile
  1497                           
  1498                           ;main.c: 38: RC1=1;
  1499  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1500  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1501  06E5  1487               	bsf	7,1	;volatile
  1502                           
  1503                           ;main.c: 40: int32_t TempInt;
  1504                           ;main.c: 41: char Itr=0x00;
  1505  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  1506  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  1507  06E8  01B7               	clrf	main@Itr^(0+128)
  1508  06E9                     l3081:	
  1509                           ;main.c: 42: bool ValidGPS;
  1510                           ;main.c: 43: while (1) {
  1511                           
  1512                           
  1513                           ;main.c: 44: if (Synced)
  1514  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  1515  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  1516  06EB  083D               	movf	main@Synced^(0+128),w
  1517  06EC  1903               	btfsc	3,2
  1518  06ED  2EF2               	goto	l44
  1519                           
  1520                           ;main.c: 45: Itr++;
  1521  06EE  3001               	movlw	1
  1522  06EF  00AF               	movwf	??_main^(0+128)
  1523  06F0  082F               	movf	??_main^(0+128),w
  1524  06F1  07B7               	addwf	main@Itr^(0+128),f
  1525  06F2                     l44:	
  1526                           
  1527                           ;main.c: 46: if (!Itr)
  1528  06F2  0837               	movf	main@Itr^(0+128),w
  1529  06F3  1903               	btfsc	3,2
  1530                           
  1531                           ;main.c: 47: Synced=0;
  1532  06F4  01BD               	clrf	main@Synced^(0+128)
  1533                           
  1534                           ;main.c: 58: ValidGPS = UART_ReadValidTimeFromGPS_TO(Data,100);
  1535  06F5  3064               	movlw	100
  1536  06F6  00AF               	movwf	??_main^(0+128)
  1537  06F7  082F               	movf	??_main^(0+128),w
  1538  06F8  00F9               	movwf	UART_ReadValidTimeFromGPS_TO@TimeOut
  1539  06F9  30B1               	movlw	(low (main@Data| 0))& (0+255)
  1540  06FA  160A  118A  262F  120A  118A  	fcall	_UART_ReadValidTimeFromGPS_TO
  1541  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0700  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0701  00B0               	movwf	(??_main+1)^(0+128)
  1544  0702  0830               	movf	(??_main+1)^(0+128),w
  1545  0703  00BC               	movwf	main@ValidGPS^(0+128)
  1546                           
  1547                           ;main.c: 64: Second = ReadRTCAsSec();
  1548  0704  120A  118A  2537  120A  118A  	fcall	_ReadRTCAsSec
  1549  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1550  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1551  070B  0831               	movf	?_ReadRTCAsSec+3,w
  1552  070C  1683               	bsf	3,5	;RP0=1, select bank1
  1553  070D  1303               	bcf	3,6	;RP1=0, select bank1
  1554  070E  00C1               	movwf	(main@Second+3)^(0+128)
  1555  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0711  0830               	movf	?_ReadRTCAsSec+2,w
  1558  0712  1683               	bsf	3,5	;RP0=1, select bank1
  1559  0713  1303               	bcf	3,6	;RP1=0, select bank1
  1560  0714  00C0               	movwf	(main@Second+2)^(0+128)
  1561  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0717  082F               	movf	?_ReadRTCAsSec+1,w
  1564  0718  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0719  1303               	bcf	3,6	;RP1=0, select bank1
  1566  071A  00BF               	movwf	(main@Second+1)^(0+128)
  1567  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1568  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1569  071D  082E               	movf	?_ReadRTCAsSec,w
  1570  071E  1683               	bsf	3,5	;RP0=1, select bank1
  1571  071F  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0720  00BE               	movwf	main@Second^(0+128)
  1573                           
  1574                           ;main.c: 66: if ((Second==PSec) && (!Synced) && ValidGPS) {
  1575  0721  083B               	movf	(main@PSec+3)^(0+128),w
  1576  0722  0641               	xorwf	(main@Second+3)^(0+128),w
  1577  0723  1D03               	skipz
  1578  0724  2F2F               	goto	u4595
  1579  0725  083A               	movf	(main@PSec+2)^(0+128),w
  1580  0726  0640               	xorwf	(main@Second+2)^(0+128),w
  1581  0727  1D03               	skipz
  1582  0728  2F2F               	goto	u4595
  1583  0729  0839               	movf	(main@PSec+1)^(0+128),w
  1584  072A  063F               	xorwf	(main@Second+1)^(0+128),w
  1585  072B  1D03               	skipz
  1586  072C  2F2F               	goto	u4595
  1587  072D  0838               	movf	main@PSec^(0+128),w
  1588  072E  063E               	xorwf	main@Second^(0+128),w
  1589  072F                     u4595:	
  1590  072F  1D03               	skipz
  1591  0730  2F6D               	goto	l3103
  1592  0731  083D               	movf	main@Synced^(0+128),w
  1593  0732  1D03               	btfss	3,2
  1594  0733  2F6D               	goto	l3103
  1595  0734  083C               	movf	main@ValidGPS^(0+128),w
  1596  0735  1903               	btfsc	3,2
  1597  0736  2F6D               	goto	l3103
  1598                           
  1599                           ;main.c: 67: Second = ReadRTCAsSec(WriteToRTC(Data));
  1600  0737  30B1               	movlw	(low (main@Data| 0))& (0+255)
  1601  0738  120A  158A  24D5  120A  118A  	fcall	_WriteToRTC
  1602  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1603  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1604  073F  00AF               	movwf	??_main^(0+128)
  1605  0740  082F               	movf	??_main^(0+128),w
  1606  0741  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0742  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0743  00AE               	movwf	?_ReadRTCAsSec
  1609  0744  120A  118A  2537  120A  118A  	fcall	_ReadRTCAsSec
  1610  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1611  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1612  074B  0831               	movf	?_ReadRTCAsSec+3,w
  1613  074C  1683               	bsf	3,5	;RP0=1, select bank1
  1614  074D  1303               	bcf	3,6	;RP1=0, select bank1
  1615  074E  00C1               	movwf	(main@Second+3)^(0+128)
  1616  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1618  0751  0830               	movf	?_ReadRTCAsSec+2,w
  1619  0752  1683               	bsf	3,5	;RP0=1, select bank1
  1620  0753  1303               	bcf	3,6	;RP1=0, select bank1
  1621  0754  00C0               	movwf	(main@Second+2)^(0+128)
  1622  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0757  082F               	movf	?_ReadRTCAsSec+1,w
  1625  0758  1683               	bsf	3,5	;RP0=1, select bank1
  1626  0759  1303               	bcf	3,6	;RP1=0, select bank1
  1627  075A  00BF               	movwf	(main@Second+1)^(0+128)
  1628  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1629  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1630  075D  082E               	movf	?_ReadRTCAsSec,w
  1631  075E  1683               	bsf	3,5	;RP0=1, select bank1
  1632  075F  1303               	bcf	3,6	;RP1=0, select bank1
  1633  0760  00BE               	movwf	main@Second^(0+128)
  1634                           
  1635                           ;main.c: 68: AdjustSec(PSec-Second);
  1636  0761  033E               	decf	main@Second^(0+128),w
  1637  0762  3AFF               	xorlw	255
  1638  0763  0738               	addwf	main@PSec^(0+128),w
  1639  0764  120A  158A  22E8  120A  118A  	fcall	_AdjustSec
  1640                           
  1641                           ;main.c: 69: Synced=1;
  1642  0769  1683               	bsf	3,5	;RP0=1, select bank1
  1643  076A  1303               	bcf	3,6	;RP1=0, select bank1
  1644  076B  01BD               	clrf	main@Synced^(0+128)
  1645  076C  0ABD               	incf	main@Synced^(0+128),f
  1646  076D                     l3103:	
  1647                           
  1648                           ;main.c: 70: }
  1649                           ;main.c: 71: if (ValidGPS)
  1650  076D  083C               	movf	main@ValidGPS^(0+128),w
  1651  076E  1903               	btfsc	3,2
  1652  076F  2F98               	goto	l3117
  1653                           
  1654                           ;main.c: 72: for (TempVar000=0; TempVar000<6; TempVar000++)
  1655  0770  01C2               	clrf	main@TempVar000^(0+128)
  1656  0771  3006               	movlw	6
  1657  0772  0242               	subwf	main@TempVar000^(0+128),w
  1658  0773  1803               	btfsc	3,0
  1659  0774  2F98               	goto	l3117
  1660  0775                     l3111:	
  1661                           
  1662                           ;main.c: 73: Lcd_WriteChar(1,TempVar000+5,Data[TempVar000]);
  1663  0775  0842               	movf	main@TempVar000^(0+128),w
  1664  0776  3E05               	addlw	5
  1665  0777  00AF               	movwf	??_main^(0+128)
  1666  0778  082F               	movf	??_main^(0+128),w
  1667  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1668  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1669  077B  00A7               	movwf	Lcd_WriteChar@x
  1670  077C  1683               	bsf	3,5	;RP0=1, select bank1
  1671  077D  1303               	bcf	3,6	;RP1=0, select bank1
  1672  077E  0842               	movf	main@TempVar000^(0+128),w
  1673  077F  3EB1               	addlw	(low (main@Data| 0))& (0+255)
  1674  0780  0084               	movwf	4
  1675  0781  1383               	bcf	3,7	;select IRP bank1
  1676  0782  0800               	movf	0,w
  1677  0783  00B0               	movwf	(??_main+1)^(0+128)
  1678  0784  0830               	movf	(??_main+1)^(0+128),w
  1679  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1680  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1681  0787  00A8               	movwf	Lcd_WriteChar@c
  1682  0788  3001               	movlw	1
  1683  0789  160A  118A  26F0  120A  118A  	fcall	_Lcd_WriteChar
  1684  078E  3001               	movlw	1
  1685  078F  1683               	bsf	3,5	;RP0=1, select bank1
  1686  0790  1303               	bcf	3,6	;RP1=0, select bank1
  1687  0791  00AF               	movwf	??_main^(0+128)
  1688  0792  082F               	movf	??_main^(0+128),w
  1689  0793  07C2               	addwf	main@TempVar000^(0+128),f
  1690  0794  3006               	movlw	6
  1691  0795  0242               	subwf	main@TempVar000^(0+128),w
  1692  0796  1C03               	skipc
  1693  0797  2F75               	goto	l3111
  1694  0798                     l3117:	
  1695                           
  1696                           ;main.c: 76: DisplayTimeFromRTC (2,5);
  1697  0798  3005               	movlw	5
  1698  0799  00AF               	movwf	??_main^(0+128)
  1699  079A  082F               	movf	??_main^(0+128),w
  1700  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1701  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1702  079D  00B0               	movwf	DisplayTimeFromRTC@x
  1703  079E  3002               	movlw	2
  1704  079F  120A  118A  2079  120A  118A  	fcall	_DisplayTimeFromRTC
  1705                           
  1706                           ;main.c: 77: WriteLongInt(2,12,Second,5,0);
  1707  07A4  300C               	movlw	12
  1708  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  1709  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  1710  07A7  00AF               	movwf	??_main^(0+128)
  1711  07A8  082F               	movf	??_main^(0+128),w
  1712  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1713  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1714  07AB  00AB               	movwf	WriteLongInt@x
  1715  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  1716  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  1717  07AE  0841               	movf	(main@Second+3)^(0+128),w
  1718  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1719  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1720  07B1  00AF               	movwf	WriteLongInt@Val+3
  1721  07B2  1683               	bsf	3,5	;RP0=1, select bank1
  1722  07B3  1303               	bcf	3,6	;RP1=0, select bank1
  1723  07B4  0840               	movf	(main@Second+2)^(0+128),w
  1724  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1725  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1726  07B7  00AE               	movwf	WriteLongInt@Val+2
  1727  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  1728  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  1729  07BA  083F               	movf	(main@Second+1)^(0+128),w
  1730  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1731  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1732  07BD  00AD               	movwf	WriteLongInt@Val+1
  1733  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  1734  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  1735  07C0  083E               	movf	main@Second^(0+128),w
  1736  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1737  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1738  07C3  00AC               	movwf	WriteLongInt@Val
  1739  07C4  3005               	movlw	5
  1740  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  1741  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  1742  07C7  00B0               	movwf	(??_main+1)^(0+128)
  1743  07C8  0830               	movf	(??_main+1)^(0+128),w
  1744  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1745  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1746  07CB  00B0               	movwf	WriteLongInt@size
  1747  07CC  01B1               	clrf	WriteLongInt@Sign
  1748  07CD  3002               	movlw	2
  1749  07CE  120A  158A  256E  120A  118A  	fcall	_WriteLongInt
  1750                           
  1751                           ;main.c: 78: WriteLongInt(1,12,GetOSCTRIM(),4,1);
  1752  07D3  300C               	movlw	12
  1753  07D4  1683               	bsf	3,5	;RP0=1, select bank1
  1754  07D5  1303               	bcf	3,6	;RP1=0, select bank1
  1755  07D6  00AF               	movwf	??_main^(0+128)
  1756  07D7  082F               	movf	??_main^(0+128),w
  1757  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1758  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1759  07DA  00AB               	movwf	WriteLongInt@x
  1760  07DB  160A  118A  2666  120A  118A  	fcall	_GetOSCTRIM
  1761  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1762  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1763  07E2  00AC               	movwf	WriteLongInt@Val
  1764  07E3  3980               	andlw	128
  1765  07E4  1D03               	skipz
  1766  07E5  30FF               	movlw	255
  1767  07E6  00AD               	movwf	WriteLongInt@Val+1
  1768  07E7  00AE               	movwf	WriteLongInt@Val+2
  1769  07E8  00AF               	movwf	WriteLongInt@Val+3
  1770  07E9  3004               	movlw	4
  1771  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  1772  07EB  1303               	bcf	3,6	;RP1=0, select bank1
  1773  07EC  00B0               	movwf	(??_main+1)^(0+128)
  1774  07ED  0830               	movf	(??_main+1)^(0+128),w
  1775  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  1776  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  1777  07F0  00B0               	movwf	WriteLongInt@size
  1778  07F1  01B1               	clrf	WriteLongInt@Sign
  1779  07F2  0AB1               	incf	WriteLongInt@Sign,f
  1780  07F3  3001               	movlw	1
  1781  07F4  120A  158A  256E  120A  118A  	fcall	_WriteLongInt
  1782  07F9  2EE9               	goto	l3081
  1783  07FA                     __end_of_main:	
  1784                           
  1785                           	psect	text1
  1786  0CD5                     __ptext1:	
  1787 ;; *************** function _WriteToRTC *****************
  1788 ;; Defined at:
  1789 ;;		line 3 in file "libs/gsk_funs.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  Time            1    wreg     PTR unsigned char 
  1792 ;;		 -> main@Data(6), 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  Time            1   12[BANK0 ] PTR unsigned char 
  1795 ;;		 -> main@Data(6), 
  1796 ;;  TempVar000      1   13[BANK0 ] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       0       0       0       0
  1807 ;;      Locals:         0       2       0       0       0
  1808 ;;      Temps:          0       2       0       0       0
  1809 ;;      Totals:         0       4       0       0       0
  1810 ;;Total ram usage:        4 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    3
  1813 ;; This function calls:
  1814 ;;		_I2C_WriteAtAddress
  1815 ;; This function is called by:
  1816 ;;		_main
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           
  1821                           ;psect for function _WriteToRTC
  1822  0CD5                     _WriteToRTC:	
  1823                           
  1824                           ;incstack = 0
  1825                           ; Regs used in _WriteToRTC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1826                           ;WriteToRTC@Time stored from wreg
  1827  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0CD7  00AC               	movwf	WriteToRTC@Time
  1830                           
  1831                           ;gsk_funs.c: 4: char TempVar000;
  1832                           ;gsk_funs.c: 6: TempVar000 = 0x00;
  1833  0CD8  01AD               	clrf	WriteToRTC@TempVar000
  1834                           
  1835                           ;gsk_funs.c: 7: TempVar000 = 0x03 & (Time[0]-0x30);
  1836  0CD9  082C               	movf	WriteToRTC@Time,w
  1837  0CDA  0084               	movwf	4
  1838  0CDB  1383               	bcf	3,7	;select IRP bank0
  1839  0CDC  0800               	movf	0,w
  1840  0CDD  3ED0               	addlw	208
  1841  0CDE  3903               	andlw	3
  1842  0CDF  00AA               	movwf	??_WriteToRTC
  1843  0CE0  082A               	movf	??_WriteToRTC,w
  1844  0CE1  00AD               	movwf	WriteToRTC@TempVar000
  1845                           
  1846                           ;gsk_funs.c: 8: TempVar000 = TempVar000<<4;
  1847  0CE2  082D               	movf	WriteToRTC@TempVar000,w
  1848  0CE3  00AA               	movwf	??_WriteToRTC
  1849  0CE4  3003               	movlw	3
  1850  0CE5                     u4485:	
  1851  0CE5  1003               	clrc
  1852  0CE6  0DAA               	rlf	??_WriteToRTC,f
  1853  0CE7  3EFF               	addlw	-1
  1854  0CE8  1D03               	skipz
  1855  0CE9  2CE5               	goto	u4485
  1856  0CEA  1003               	clrc
  1857  0CEB  0D2A               	rlf	??_WriteToRTC,w
  1858  0CEC  00AB               	movwf	??_WriteToRTC+1
  1859  0CED  082B               	movf	??_WriteToRTC+1,w
  1860  0CEE  00AD               	movwf	WriteToRTC@TempVar000
  1861                           
  1862                           ;gsk_funs.c: 9: TempVar000 = TempVar000 | (0x0f & (Time[1]-0x30));
  1863  0CEF  0A2C               	incf	WriteToRTC@Time,w
  1864  0CF0  0084               	movwf	4
  1865  0CF1  0800               	movf	0,w
  1866  0CF2  3ED0               	addlw	208
  1867  0CF3  390F               	andlw	15
  1868  0CF4  042D               	iorwf	WriteToRTC@TempVar000,w
  1869  0CF5  00AA               	movwf	??_WriteToRTC
  1870  0CF6  082A               	movf	??_WriteToRTC,w
  1871  0CF7  00AD               	movwf	WriteToRTC@TempVar000
  1872                           
  1873                           ;gsk_funs.c: 10: I2C_WriteAtAddress(0xde, 0x02, TempVar000);
  1874  0CF8  3002               	movlw	2
  1875  0CF9  00AA               	movwf	??_WriteToRTC
  1876  0CFA  082A               	movf	??_WriteToRTC,w
  1877  0CFB  00A7               	movwf	I2C_WriteAtAddress@IntAdd
  1878  0CFC  082D               	movf	WriteToRTC@TempVar000,w
  1879  0CFD  00AB               	movwf	??_WriteToRTC+1
  1880  0CFE  082B               	movf	??_WriteToRTC+1,w
  1881  0CFF  00A8               	movwf	I2C_WriteAtAddress@data
  1882  0D00  30DE               	movlw	222
  1883  0D01  160A  118A  271E  120A  158A  	fcall	_I2C_WriteAtAddress
  1884                           
  1885                           ;gsk_funs.c: 12: TempVar000 = 0x00;
  1886  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0D08  01AD               	clrf	WriteToRTC@TempVar000
  1889                           
  1890                           ;gsk_funs.c: 13: TempVar000 = 0x07 & (Time[2]-0x30);
  1891  0D09  082C               	movf	WriteToRTC@Time,w
  1892  0D0A  3E02               	addlw	2
  1893  0D0B  0084               	movwf	4
  1894  0D0C  1383               	bcf	3,7	;select IRP bank0
  1895  0D0D  0800               	movf	0,w
  1896  0D0E  3ED0               	addlw	208
  1897  0D0F  3907               	andlw	7
  1898  0D10  00AA               	movwf	??_WriteToRTC
  1899  0D11  082A               	movf	??_WriteToRTC,w
  1900  0D12  00AD               	movwf	WriteToRTC@TempVar000
  1901                           
  1902                           ;gsk_funs.c: 14: TempVar000 = TempVar000<<4;
  1903  0D13  082D               	movf	WriteToRTC@TempVar000,w
  1904  0D14  00AA               	movwf	??_WriteToRTC
  1905  0D15  3003               	movlw	3
  1906  0D16                     u4495:	
  1907  0D16  1003               	clrc
  1908  0D17  0DAA               	rlf	??_WriteToRTC,f
  1909  0D18  3EFF               	addlw	-1
  1910  0D19  1D03               	skipz
  1911  0D1A  2D16               	goto	u4495
  1912  0D1B  1003               	clrc
  1913  0D1C  0D2A               	rlf	??_WriteToRTC,w
  1914  0D1D  00AB               	movwf	??_WriteToRTC+1
  1915  0D1E  082B               	movf	??_WriteToRTC+1,w
  1916  0D1F  00AD               	movwf	WriteToRTC@TempVar000
  1917                           
  1918                           ;gsk_funs.c: 15: TempVar000 = TempVar000 | (0x0f & (Time[3]-0x30));
  1919  0D20  082C               	movf	WriteToRTC@Time,w
  1920  0D21  3E03               	addlw	3
  1921  0D22  0084               	movwf	4
  1922  0D23  0800               	movf	0,w
  1923  0D24  3ED0               	addlw	208
  1924  0D25  390F               	andlw	15
  1925  0D26  042D               	iorwf	WriteToRTC@TempVar000,w
  1926  0D27  00AA               	movwf	??_WriteToRTC
  1927  0D28  082A               	movf	??_WriteToRTC,w
  1928  0D29  00AD               	movwf	WriteToRTC@TempVar000
  1929                           
  1930                           ;gsk_funs.c: 16: TempVar000 = TempVar000|0x80;
  1931  0D2A  082D               	movf	WriteToRTC@TempVar000,w
  1932  0D2B  3880               	iorlw	128
  1933  0D2C  00AA               	movwf	??_WriteToRTC
  1934  0D2D  082A               	movf	??_WriteToRTC,w
  1935  0D2E  00AD               	movwf	WriteToRTC@TempVar000
  1936                           
  1937                           ;gsk_funs.c: 17: I2C_WriteAtAddress(0xde, 0x01, TempVar000);
  1938  0D2F  01A7               	clrf	I2C_WriteAtAddress@IntAdd
  1939  0D30  0AA7               	incf	I2C_WriteAtAddress@IntAdd,f
  1940  0D31  082D               	movf	WriteToRTC@TempVar000,w
  1941  0D32  00AA               	movwf	??_WriteToRTC
  1942  0D33  082A               	movf	??_WriteToRTC,w
  1943  0D34  00A8               	movwf	I2C_WriteAtAddress@data
  1944  0D35  30DE               	movlw	222
  1945  0D36  160A  118A  271E  120A  158A  	fcall	_I2C_WriteAtAddress
  1946                           
  1947                           ;gsk_funs.c: 19: TempVar000 = 0x00;
  1948  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0D3D  01AD               	clrf	WriteToRTC@TempVar000
  1951                           
  1952                           ;gsk_funs.c: 20: TempVar000 = 0x07 & (Time[4]-0x30);
  1953  0D3E  082C               	movf	WriteToRTC@Time,w
  1954  0D3F  3E04               	addlw	4
  1955  0D40  0084               	movwf	4
  1956  0D41  1383               	bcf	3,7	;select IRP bank0
  1957  0D42  0800               	movf	0,w
  1958  0D43  3ED0               	addlw	208
  1959  0D44  3907               	andlw	7
  1960  0D45  00AA               	movwf	??_WriteToRTC
  1961  0D46  082A               	movf	??_WriteToRTC,w
  1962  0D47  00AD               	movwf	WriteToRTC@TempVar000
  1963                           
  1964                           ;gsk_funs.c: 21: TempVar000 = TempVar000<<4;
  1965  0D48  082D               	movf	WriteToRTC@TempVar000,w
  1966  0D49  00AA               	movwf	??_WriteToRTC
  1967  0D4A  3003               	movlw	3
  1968  0D4B                     u4505:	
  1969  0D4B  1003               	clrc
  1970  0D4C  0DAA               	rlf	??_WriteToRTC,f
  1971  0D4D  3EFF               	addlw	-1
  1972  0D4E  1D03               	skipz
  1973  0D4F  2D4B               	goto	u4505
  1974  0D50  1003               	clrc
  1975  0D51  0D2A               	rlf	??_WriteToRTC,w
  1976  0D52  00AB               	movwf	??_WriteToRTC+1
  1977  0D53  082B               	movf	??_WriteToRTC+1,w
  1978  0D54  00AD               	movwf	WriteToRTC@TempVar000
  1979                           
  1980                           ;gsk_funs.c: 22: TempVar000 = TempVar000 | (0x0f & (Time[5]-0x30));
  1981  0D55  082C               	movf	WriteToRTC@Time,w
  1982  0D56  3E05               	addlw	5
  1983  0D57  0084               	movwf	4
  1984  0D58  0800               	movf	0,w
  1985  0D59  3ED0               	addlw	208
  1986  0D5A  390F               	andlw	15
  1987  0D5B  042D               	iorwf	WriteToRTC@TempVar000,w
  1988  0D5C  00AA               	movwf	??_WriteToRTC
  1989  0D5D  082A               	movf	??_WriteToRTC,w
  1990  0D5E  00AD               	movwf	WriteToRTC@TempVar000
  1991                           
  1992                           ;gsk_funs.c: 23: TempVar000 = TempVar000|0x80;
  1993  0D5F  082D               	movf	WriteToRTC@TempVar000,w
  1994  0D60  3880               	iorlw	128
  1995  0D61  00AA               	movwf	??_WriteToRTC
  1996  0D62  082A               	movf	??_WriteToRTC,w
  1997  0D63  00AD               	movwf	WriteToRTC@TempVar000
  1998                           
  1999                           ;gsk_funs.c: 24: I2C_WriteAtAddress(0xde, 0x00, TempVar000);
  2000  0D64  01A7               	clrf	I2C_WriteAtAddress@IntAdd
  2001  0D65  082D               	movf	WriteToRTC@TempVar000,w
  2002  0D66  00AA               	movwf	??_WriteToRTC
  2003  0D67  082A               	movf	??_WriteToRTC,w
  2004  0D68  00A8               	movwf	I2C_WriteAtAddress@data
  2005  0D69  30DE               	movlw	222
  2006  0D6A  160A  118A  271E   	fcall	_I2C_WriteAtAddress
  2007  0D6D  0008               	return
  2008  0D6E                     __end_of_WriteToRTC:	
  2009                           
  2010                           	psect	text2
  2011  0D6E                     __ptext2:	
  2012 ;; *************** function _WriteLongInt *****************
  2013 ;; Defined at:
  2014 ;;		line 182 in file "libs/HD44780.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  y               1    wreg     unsigned char 
  2017 ;;  x               1   11[BANK0 ] unsigned char 
  2018 ;;  Val             4   12[BANK0 ] long 
  2019 ;;  size            1   16[BANK0 ] char 
  2020 ;;  Sign            1   17[BANK0 ] unsigned char 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  y               1   23[BANK0 ] unsigned char 
  2023 ;;  POS             1   22[BANK0 ] char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       7       0       0       0
  2034 ;;      Locals:         0       2       0       0       0
  2035 ;;      Temps:          0       4       0       0       0
  2036 ;;      Totals:         0      13       0       0       0
  2037 ;;Total ram usage:       13 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    3
  2040 ;; This function calls:
  2041 ;;		_Lcd_WriteChar
  2042 ;;		___aldiv
  2043 ;;		___bmul
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _WriteLongInt
  2051  0D6E                     _WriteLongInt:	
  2052                           
  2053                           ;incstack = 0
  2054                           ; Regs used in _WriteLongInt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2055                           ;WriteLongInt@y stored from wreg
  2056  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0D70  00B7               	movwf	WriteLongInt@y
  2059                           
  2060                           ;HD44780.c: 183: int8_t POS = 0;
  2061  0D71  01B6               	clrf	WriteLongInt@POS
  2062                           
  2063                           ;HD44780.c: 184: if (Sign) {
  2064  0D72  0831               	movf	WriteLongInt@Sign,w
  2065  0D73  1903               	btfsc	3,2
  2066  0D74  2DA5               	goto	l3047
  2067                           
  2068                           ;HD44780.c: 185: POS++;
  2069  0D75  3001               	movlw	1
  2070  0D76  00B2               	movwf	??_WriteLongInt
  2071  0D77  0832               	movf	??_WriteLongInt,w
  2072  0D78  07B6               	addwf	WriteLongInt@POS,f
  2073                           
  2074                           ;HD44780.c: 186: if (Val<0) {
  2075  0D79  1FAF               	btfss	WriteLongInt@Val+3,7
  2076  0D7A  2D97               	goto	l3039
  2077                           
  2078                           ;HD44780.c: 187: Lcd_WriteChar (y, x, 0x2D);
  2079  0D7B  082B               	movf	WriteLongInt@x,w
  2080  0D7C  00B2               	movwf	??_WriteLongInt
  2081  0D7D  0832               	movf	??_WriteLongInt,w
  2082  0D7E  00A7               	movwf	Lcd_WriteChar@x
  2083  0D7F  302D               	movlw	45
  2084  0D80  00B3               	movwf	??_WriteLongInt+1
  2085  0D81  0833               	movf	??_WriteLongInt+1,w
  2086  0D82  00A8               	movwf	Lcd_WriteChar@c
  2087  0D83  0837               	movf	WriteLongInt@y,w
  2088  0D84  160A  118A  26F0  120A  158A  	fcall	_Lcd_WriteChar
  2089                           
  2090                           ;HD44780.c: 188: Val=-1*Val;
  2091  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0D8B  09AC               	comf	WriteLongInt@Val,f
  2094  0D8C  09AD               	comf	WriteLongInt@Val+1,f
  2095  0D8D  09AE               	comf	WriteLongInt@Val+2,f
  2096  0D8E  09AF               	comf	WriteLongInt@Val+3,f
  2097  0D8F  0AAC               	incf	WriteLongInt@Val,f
  2098  0D90  1903               	skipnz
  2099  0D91  0AAD               	incf	WriteLongInt@Val+1,f
  2100  0D92  1903               	skipnz
  2101  0D93  0AAE               	incf	WriteLongInt@Val+2,f
  2102  0D94  1903               	skipnz
  2103  0D95  0AAF               	incf	WriteLongInt@Val+3,f
  2104                           
  2105                           ;HD44780.c: 189: } else
  2106  0D96  2DA5               	goto	l3047
  2107  0D97                     l3039:	
  2108                           
  2109                           ;HD44780.c: 190: Lcd_WriteChar (y, x, 0x2B);
  2110  0D97  082B               	movf	WriteLongInt@x,w
  2111  0D98  00B2               	movwf	??_WriteLongInt
  2112  0D99  0832               	movf	??_WriteLongInt,w
  2113  0D9A  00A7               	movwf	Lcd_WriteChar@x
  2114  0D9B  302B               	movlw	43
  2115  0D9C  00B3               	movwf	??_WriteLongInt+1
  2116  0D9D  0833               	movf	??_WriteLongInt+1,w
  2117  0D9E  00A8               	movwf	Lcd_WriteChar@c
  2118  0D9F  0837               	movf	WriteLongInt@y,w
  2119  0DA0  160A  118A  26F0  120A  158A  	fcall	_Lcd_WriteChar
  2120  0DA5                     l3047:	
  2121                           ;HD44780.c: 191: }
  2122                           ;HD44780.c: 192: while(size) {
  2123                           
  2124  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0DA7  0830               	movf	WriteLongInt@size,w
  2127  0DA8  1903               	btfsc	3,2
  2128  0DA9  0008               	return
  2129                           
  2130                           ;HD44780.c: 193: size--;
  2131  0DAA  30FF               	movlw	255
  2132  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0DAD  00B2               	movwf	??_WriteLongInt
  2135  0DAE  0832               	movf	??_WriteLongInt,w
  2136  0DAF  07B0               	addwf	WriteLongInt@size,f
  2137                           
  2138                           ;HD44780.c: 194: Lcd_WriteChar (y, x+size+POS, ((Val - ((Val/10)*10))+0x30));
  2139  0DB0  0830               	movf	WriteLongInt@size,w
  2140  0DB1  072B               	addwf	WriteLongInt@x,w
  2141  0DB2  00B2               	movwf	??_WriteLongInt
  2142  0DB3  0836               	movf	WriteLongInt@POS,w
  2143  0DB4  0732               	addwf	??_WriteLongInt,w
  2144  0DB5  00B3               	movwf	??_WriteLongInt+1
  2145  0DB6  0833               	movf	??_WriteLongInt+1,w
  2146  0DB7  00A7               	movwf	Lcd_WriteChar@x
  2147  0DB8  300A               	movlw	10
  2148  0DB9  00B4               	movwf	??_WriteLongInt+2
  2149  0DBA  0834               	movf	??_WriteLongInt+2,w
  2150  0DBB  00A6               	movwf	___bmul@multiplicand
  2151  0DBC  082F               	movf	WriteLongInt@Val+3,w
  2152  0DBD  00F7               	movwf	___aldiv@dividend+3
  2153  0DBE  082E               	movf	WriteLongInt@Val+2,w
  2154  0DBF  00F6               	movwf	___aldiv@dividend+2
  2155  0DC0  082D               	movf	WriteLongInt@Val+1,w
  2156  0DC1  00F5               	movwf	___aldiv@dividend+1
  2157  0DC2  082C               	movf	WriteLongInt@Val,w
  2158  0DC3  00F4               	movwf	___aldiv@dividend
  2159  0DC4  3000               	movlw	0
  2160  0DC5  00F3               	movwf	___aldiv@divisor+3
  2161  0DC6  3000               	movlw	0
  2162  0DC7  00F2               	movwf	___aldiv@divisor+2
  2163  0DC8  3000               	movlw	0
  2164  0DC9  00F1               	movwf	___aldiv@divisor+1
  2165  0DCA  300A               	movlw	10
  2166  0DCB  00F0               	movwf	___aldiv@divisor
  2167  0DCC  120A  158A  2446  120A  158A  	fcall	___aldiv
  2168  0DD1  0870               	movf	?___aldiv,w
  2169  0DD2  160A  118A  2651  120A  158A  	fcall	___bmul
  2170  0DD7  3AFF               	xorlw	255
  2171  0DD8  3E01               	addlw	1
  2172  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0DDB  072C               	addwf	WriteLongInt@Val,w
  2175  0DDC  3E30               	addlw	48
  2176  0DDD  00B5               	movwf	??_WriteLongInt+3
  2177  0DDE  0835               	movf	??_WriteLongInt+3,w
  2178  0DDF  00A8               	movwf	Lcd_WriteChar@c
  2179  0DE0  0837               	movf	WriteLongInt@y,w
  2180  0DE1  160A  118A  26F0  120A  158A  	fcall	_Lcd_WriteChar
  2181                           
  2182                           ;HD44780.c: 195: Val = Val/10;
  2183  0DE6  3000               	movlw	0
  2184  0DE7  00F3               	movwf	___aldiv@divisor+3
  2185  0DE8  3000               	movlw	0
  2186  0DE9  00F2               	movwf	___aldiv@divisor+2
  2187  0DEA  3000               	movlw	0
  2188  0DEB  00F1               	movwf	___aldiv@divisor+1
  2189  0DEC  300A               	movlw	10
  2190  0DED  00F0               	movwf	___aldiv@divisor
  2191  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0DF0  082F               	movf	WriteLongInt@Val+3,w
  2194  0DF1  00F7               	movwf	___aldiv@dividend+3
  2195  0DF2  082E               	movf	WriteLongInt@Val+2,w
  2196  0DF3  00F6               	movwf	___aldiv@dividend+2
  2197  0DF4  082D               	movf	WriteLongInt@Val+1,w
  2198  0DF5  00F5               	movwf	___aldiv@dividend+1
  2199  0DF6  082C               	movf	WriteLongInt@Val,w
  2200  0DF7  00F4               	movwf	___aldiv@dividend
  2201  0DF8  120A  158A  2446  120A  158A  	fcall	___aldiv
  2202  0DFD  0873               	movf	?___aldiv+3,w
  2203  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0E00  00AF               	movwf	WriteLongInt@Val+3
  2206  0E01  0872               	movf	?___aldiv+2,w
  2207  0E02  00AE               	movwf	WriteLongInt@Val+2
  2208  0E03  0871               	movf	?___aldiv+1,w
  2209  0E04  00AD               	movwf	WriteLongInt@Val+1
  2210  0E05  0870               	movf	?___aldiv,w
  2211  0E06  00AC               	movwf	WriteLongInt@Val
  2212  0E07  2DA5               	goto	l3047
  2213  0E08                     __end_of_WriteLongInt:	
  2214                           
  2215                           	psect	text3
  2216  0C46                     __ptext3:	
  2217 ;; *************** function ___aldiv *****************
  2218 ;; Defined at:
  2219 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  divisor         4    0[COMMON] long 
  2222 ;;  dividend        4    4[COMMON] long 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  quotient        4    2[BANK0 ] long 
  2225 ;;  sign            1    1[BANK0 ] unsigned char 
  2226 ;;  counter         1    0[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  4    0[COMMON] long 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         8       0       0       0       0
  2237 ;;      Locals:         0       6       0       0       0
  2238 ;;      Temps:          1       0       0       0       0
  2239 ;;      Totals:         9       6       0       0       0
  2240 ;;Total ram usage:       15 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_WriteLongInt
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function ___aldiv
  2251  0C46                     ___aldiv:	
  2252                           
  2253                           ;incstack = 0
  2254                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2255  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  2257  0C48  01A1               	clrf	___aldiv@sign
  2258  0C49  1FF3               	btfss	___aldiv@divisor+3,7
  2259  0C4A  2C58               	goto	l506
  2260  0C4B  09F0               	comf	___aldiv@divisor,f
  2261  0C4C  09F1               	comf	___aldiv@divisor+1,f
  2262  0C4D  09F2               	comf	___aldiv@divisor+2,f
  2263  0C4E  09F3               	comf	___aldiv@divisor+3,f
  2264  0C4F  0AF0               	incf	___aldiv@divisor,f
  2265  0C50  1903               	skipnz
  2266  0C51  0AF1               	incf	___aldiv@divisor+1,f
  2267  0C52  1903               	skipnz
  2268  0C53  0AF2               	incf	___aldiv@divisor+2,f
  2269  0C54  1903               	skipnz
  2270  0C55  0AF3               	incf	___aldiv@divisor+3,f
  2271  0C56  01A1               	clrf	___aldiv@sign
  2272  0C57  0AA1               	incf	___aldiv@sign,f
  2273  0C58                     l506:	
  2274  0C58  1FF7               	btfss	___aldiv@dividend+3,7
  2275  0C59  2C69               	goto	l2655
  2276  0C5A  09F4               	comf	___aldiv@dividend,f
  2277  0C5B  09F5               	comf	___aldiv@dividend+1,f
  2278  0C5C  09F6               	comf	___aldiv@dividend+2,f
  2279  0C5D  09F7               	comf	___aldiv@dividend+3,f
  2280  0C5E  0AF4               	incf	___aldiv@dividend,f
  2281  0C5F  1903               	skipnz
  2282  0C60  0AF5               	incf	___aldiv@dividend+1,f
  2283  0C61  1903               	skipnz
  2284  0C62  0AF6               	incf	___aldiv@dividend+2,f
  2285  0C63  1903               	skipnz
  2286  0C64  0AF7               	incf	___aldiv@dividend+3,f
  2287  0C65  3001               	movlw	1
  2288  0C66  00F8               	movwf	??___aldiv
  2289  0C67  0878               	movf	??___aldiv,w
  2290  0C68  06A1               	xorwf	___aldiv@sign,f
  2291  0C69                     l2655:	
  2292  0C69  3000               	movlw	0
  2293  0C6A  00A5               	movwf	___aldiv@quotient+3
  2294  0C6B  3000               	movlw	0
  2295  0C6C  00A4               	movwf	___aldiv@quotient+2
  2296  0C6D  3000               	movlw	0
  2297  0C6E  00A3               	movwf	___aldiv@quotient+1
  2298  0C6F  3000               	movlw	0
  2299  0C70  00A2               	movwf	___aldiv@quotient
  2300  0C71  0873               	movf	___aldiv@divisor+3,w
  2301  0C72  0472               	iorwf	___aldiv@divisor+2,w
  2302  0C73  0471               	iorwf	___aldiv@divisor+1,w
  2303  0C74  0470               	iorwf	___aldiv@divisor,w
  2304  0C75  1903               	skipnz
  2305  0C76  2CBE               	goto	l2677
  2306  0C77  01A0               	clrf	___aldiv@counter
  2307  0C78  0AA0               	incf	___aldiv@counter,f
  2308  0C79                     l2663:	
  2309  0C79  1BF3               	btfsc	___aldiv@divisor+3,7
  2310  0C7A  2C89               	goto	l2665
  2311  0C7B  3001               	movlw	1
  2312  0C7C  00F8               	movwf	??___aldiv
  2313  0C7D                     u4035:	
  2314  0C7D  1003               	clrc
  2315  0C7E  0DF0               	rlf	___aldiv@divisor,f
  2316  0C7F  0DF1               	rlf	___aldiv@divisor+1,f
  2317  0C80  0DF2               	rlf	___aldiv@divisor+2,f
  2318  0C81  0DF3               	rlf	___aldiv@divisor+3,f
  2319  0C82  0BF8               	decfsz	??___aldiv,f
  2320  0C83  2C7D               	goto	u4035
  2321  0C84  3001               	movlw	1
  2322  0C85  00F8               	movwf	??___aldiv
  2323  0C86  0878               	movf	??___aldiv,w
  2324  0C87  07A0               	addwf	___aldiv@counter,f
  2325  0C88  2C79               	goto	l2663
  2326  0C89                     l2665:	
  2327  0C89  3001               	movlw	1
  2328  0C8A  00F8               	movwf	??___aldiv
  2329  0C8B                     u4055:	
  2330  0C8B  1003               	clrc
  2331  0C8C  0DA2               	rlf	___aldiv@quotient,f
  2332  0C8D  0DA3               	rlf	___aldiv@quotient+1,f
  2333  0C8E  0DA4               	rlf	___aldiv@quotient+2,f
  2334  0C8F  0DA5               	rlf	___aldiv@quotient+3,f
  2335  0C90  0BF8               	decfsz	??___aldiv,f
  2336  0C91  2C8B               	goto	u4055
  2337  0C92  0873               	movf	___aldiv@divisor+3,w
  2338  0C93  0277               	subwf	___aldiv@dividend+3,w
  2339  0C94  1D03               	skipz
  2340  0C95  2CA0               	goto	u4065
  2341  0C96  0872               	movf	___aldiv@divisor+2,w
  2342  0C97  0276               	subwf	___aldiv@dividend+2,w
  2343  0C98  1D03               	skipz
  2344  0C99  2CA0               	goto	u4065
  2345  0C9A  0871               	movf	___aldiv@divisor+1,w
  2346  0C9B  0275               	subwf	___aldiv@dividend+1,w
  2347  0C9C  1D03               	skipz
  2348  0C9D  2CA0               	goto	u4065
  2349  0C9E  0870               	movf	___aldiv@divisor,w
  2350  0C9F  0274               	subwf	___aldiv@dividend,w
  2351  0CA0                     u4065:	
  2352  0CA0  1C03               	skipc
  2353  0CA1  2CB1               	goto	l2673
  2354  0CA2  0870               	movf	___aldiv@divisor,w
  2355  0CA3  02F4               	subwf	___aldiv@dividend,f
  2356  0CA4  0871               	movf	___aldiv@divisor+1,w
  2357  0CA5  1C03               	skipc
  2358  0CA6  0F71               	incfsz	___aldiv@divisor+1,w
  2359  0CA7  02F5               	subwf	___aldiv@dividend+1,f
  2360  0CA8  0872               	movf	___aldiv@divisor+2,w
  2361  0CA9  1C03               	skipc
  2362  0CAA  0F72               	incfsz	___aldiv@divisor+2,w
  2363  0CAB  02F6               	subwf	___aldiv@dividend+2,f
  2364  0CAC  0873               	movf	___aldiv@divisor+3,w
  2365  0CAD  1C03               	skipc
  2366  0CAE  0F73               	incfsz	___aldiv@divisor+3,w
  2367  0CAF  02F7               	subwf	___aldiv@dividend+3,f
  2368  0CB0  1422               	bsf	___aldiv@quotient,0
  2369  0CB1                     l2673:	
  2370  0CB1  3001               	movlw	1
  2371  0CB2                     u4075:	
  2372  0CB2  1003               	clrc
  2373  0CB3  0CF3               	rrf	___aldiv@divisor+3,f
  2374  0CB4  0CF2               	rrf	___aldiv@divisor+2,f
  2375  0CB5  0CF1               	rrf	___aldiv@divisor+1,f
  2376  0CB6  0CF0               	rrf	___aldiv@divisor,f
  2377  0CB7  3EFF               	addlw	-1
  2378  0CB8  1D03               	skipz
  2379  0CB9  2CB2               	goto	u4075
  2380  0CBA  3001               	movlw	1
  2381  0CBB  02A0               	subwf	___aldiv@counter,f
  2382  0CBC  1D03               	btfss	3,2
  2383  0CBD  2C89               	goto	l2665
  2384  0CBE                     l2677:	
  2385  0CBE  0821               	movf	___aldiv@sign,w
  2386  0CBF  1903               	btfsc	3,2
  2387  0CC0  2CCC               	goto	l2681
  2388  0CC1  09A2               	comf	___aldiv@quotient,f
  2389  0CC2  09A3               	comf	___aldiv@quotient+1,f
  2390  0CC3  09A4               	comf	___aldiv@quotient+2,f
  2391  0CC4  09A5               	comf	___aldiv@quotient+3,f
  2392  0CC5  0AA2               	incf	___aldiv@quotient,f
  2393  0CC6  1903               	skipnz
  2394  0CC7  0AA3               	incf	___aldiv@quotient+1,f
  2395  0CC8  1903               	skipnz
  2396  0CC9  0AA4               	incf	___aldiv@quotient+2,f
  2397  0CCA  1903               	skipnz
  2398  0CCB  0AA5               	incf	___aldiv@quotient+3,f
  2399  0CCC                     l2681:	
  2400  0CCC  0825               	movf	___aldiv@quotient+3,w
  2401  0CCD  00F3               	movwf	?___aldiv+3
  2402  0CCE  0824               	movf	___aldiv@quotient+2,w
  2403  0CCF  00F2               	movwf	?___aldiv+2
  2404  0CD0  0823               	movf	___aldiv@quotient+1,w
  2405  0CD1  00F1               	movwf	?___aldiv+1
  2406  0CD2  0822               	movf	___aldiv@quotient,w
  2407  0CD3  00F0               	movwf	?___aldiv
  2408  0CD4  0008               	return
  2409  0CD5                     __end_of___aldiv:	
  2410                           
  2411                           	psect	text4
  2412  16F0                     __ptext4:	
  2413 ;; *************** function _Lcd_WriteChar *****************
  2414 ;; Defined at:
  2415 ;;		line 99 in file "libs/HD44780.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  y               1    wreg     unsigned char 
  2418 ;;  x               1    7[BANK0 ] unsigned char 
  2419 ;;  c               1    8[BANK0 ] unsigned char 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  y               1    9[BANK0 ] unsigned char 
  2422 ;;  data            1   10[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       2       0       0       0
  2433 ;;      Locals:         0       2       0       0       0
  2434 ;;      Temps:          1       0       0       0       0
  2435 ;;      Totals:         1       4       0       0       0
  2436 ;;Total ram usage:        5 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    2
  2439 ;; This function calls:
  2440 ;;		_Lcd_CharCP
  2441 ;;		_Lcd_Command
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;;		_WriteLongInt
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _Lcd_WriteChar
  2450  16F0                     _Lcd_WriteChar:	
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2454                           ;Lcd_WriteChar@y stored from wreg
  2455  16F0  1283               	bcf	3,5	;RP0=0, select bank0
  2456  16F1  1303               	bcf	3,6	;RP1=0, select bank0
  2457  16F2  00A9               	movwf	Lcd_WriteChar@y
  2458                           
  2459                           ;HD44780.c: 100: unsigned char data;
  2460                           ;HD44780.c: 101: switch(y){
  2461  16F3  2F03               	goto	l2471
  2462  16F4                     l2461:	
  2463                           ;HD44780.c: 102: case 1: data = 127 + x; break;
  2464                           
  2465  16F4  0827               	movf	Lcd_WriteChar@x,w
  2466  16F5  3E7F               	addlw	127
  2467  16F6  2EFF               	goto	L3
  2468  16F7                     l2463:	
  2469                           ;HD44780.c: 103: case 2: data = 191 + x; break;
  2470                           
  2471  16F7  0827               	movf	Lcd_WriteChar@x,w
  2472  16F8  3EBF               	addlw	191
  2473  16F9  2EFF               	goto	L3
  2474  16FA                     l2465:	
  2475                           ;HD44780.c: 104: case 3: data = 147 + x; break;
  2476                           
  2477  16FA  0827               	movf	Lcd_WriteChar@x,w
  2478  16FB  3E93               	addlw	147
  2479  16FC  2EFF               	goto	L3
  2480  16FD                     l2467:	
  2481                           ;HD44780.c: 105: case 4: data = 211 + x; break;
  2482                           
  2483  16FD  0827               	movf	Lcd_WriteChar@x,w
  2484  16FE  3ED3               	addlw	211
  2485  16FF                     L3:	
  2486  16FF  00FC               	movwf	??_Lcd_WriteChar
  2487  1700  087C               	movf	??_Lcd_WriteChar,w
  2488  1701  00AA               	movwf	Lcd_WriteChar@data
  2489                           
  2490                           ;HD44780.c: 106: default: break;}
  2491  1702  2F11               	goto	l2473
  2492  1703                     l2471:	
  2493  1703  0829               	movf	Lcd_WriteChar@y,w
  2494                           
  2495                           ; Switch size 1, requested type "space"
  2496                           ; Number of cases is 4, Range of values is 1 to 4
  2497                           ; switch strategies available:
  2498                           ; Name         Instructions Cycles
  2499                           ; simple_byte           13     7 (average)
  2500                           ; direct_byte           23    11 (fixed)
  2501                           ; jumptable            263     9 (fixed)
  2502                           ;	Chosen strategy is simple_byte
  2503  1704  3A01               	xorlw	1	; case 1
  2504  1705  1903               	skipnz
  2505  1706  2EF4               	goto	l2461
  2506  1707  3A03               	xorlw	3	; case 2
  2507  1708  1903               	skipnz
  2508  1709  2EF7               	goto	l2463
  2509  170A  3A01               	xorlw	1	; case 3
  2510  170B  1903               	skipnz
  2511  170C  2EFA               	goto	l2465
  2512  170D  3A07               	xorlw	7	; case 4
  2513  170E  1903               	skipnz
  2514  170F  2EFD               	goto	l2467
  2515  1710  2F11               	goto	l2473
  2516  1711                     l2473:	
  2517                           
  2518                           ;HD44780.c: 107: Lcd_Command(data);
  2519  1711  082A               	movf	Lcd_WriteChar@data,w
  2520  1712  120A  158A  26AD  160A  118A  	fcall	_Lcd_Command
  2521                           
  2522                           ;HD44780.c: 108: Lcd_CharCP(c);
  2523  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2524  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2525  1719  0828               	movf	Lcd_WriteChar@c,w
  2526  171A  120A  158A  2754   	fcall	_Lcd_CharCP
  2527  171D  0008               	return
  2528  171E                     __end_of_Lcd_WriteChar:	
  2529                           
  2530                           	psect	text5
  2531  162F                     __ptext5:	
  2532 ;; *************** function _UART_ReadValidTimeFromGPS_TO *****************
  2533 ;; Defined at:
  2534 ;;		line 114 in file "libs/gsk_usart.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  Output          1    wreg     PTR unsigned char 
  2537 ;;		 -> main@Data(6), 
  2538 ;;  TimeOut         1    9[COMMON] unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  Output          1   11[COMMON] PTR unsigned char 
  2541 ;;		 -> main@Data(6), 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      unsigned char 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         1       0       0       0       0
  2552 ;;      Locals:         1       0       0       0       0
  2553 ;;      Temps:          1       0       0       0       0
  2554 ;;      Totals:         3       0       0       0       0
  2555 ;;Total ram usage:        3 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    2
  2558 ;; This function calls:
  2559 ;;		_IsValidGPS
  2560 ;;		_UART_ReadFromGPS_TO
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _UART_ReadValidTimeFromGPS_TO
  2568  162F                     _UART_ReadValidTimeFromGPS_TO:	
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _UART_ReadValidTimeFromGPS_TO: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
  2572                           ;UART_ReadValidTimeFromGPS_TO@Output stored from wreg
  2573  162F  00FB               	movwf	UART_ReadValidTimeFromGPS_TO@Output
  2574                           
  2575                           ;gsk_usart.c: 115: UART_ReadFromGPS_TO (Output, TimeOut);
  2576  1630  0879               	movf	UART_ReadValidTimeFromGPS_TO@TimeOut,w
  2577  1631  00FA               	movwf	??_UART_ReadValidTimeFromGPS_TO
  2578  1632  087A               	movf	??_UART_ReadValidTimeFromGPS_TO,w
  2579  1633  00F1               	movwf	UART_ReadFromGPS_TO@TimeOut
  2580  1634  087B               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  2581  1635  120A  158A  222F  160A  118A  	fcall	_UART_ReadFromGPS_TO
  2582                           
  2583                           ;gsk_usart.c: 116: return IsValidGPS(Output);
  2584  163A  087B               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  2585  163B  120A  158A  2182   	fcall	_IsValidGPS
  2586  163E  0008               	return
  2587  163F                     __end_of_UART_ReadValidTimeFromGPS_TO:	
  2588                           
  2589                           	psect	text6
  2590  0A2F                     __ptext6:	
  2591 ;; *************** function _UART_ReadFromGPS_TO *****************
  2592 ;; Defined at:
  2593 ;;		line 80 in file "libs/gsk_usart.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  Output          1    wreg     PTR unsigned char 
  2596 ;;		 -> main@Data(6), 
  2597 ;;  TimeOut         1    1[COMMON] unsigned char 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  Output          1    6[COMMON] PTR unsigned char 
  2600 ;;		 -> main@Data(6), 
  2601 ;;  i               2    4[COMMON] unsigned int 
  2602 ;;  Pos             1    8[COMMON] unsigned char 
  2603 ;;  TempChar        1    7[COMMON] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2613 ;;      Params:         1       0       0       0       0
  2614 ;;      Locals:         5       0       0       0       0
  2615 ;;      Temps:          2       0       0       0       0
  2616 ;;      Totals:         8       0       0       0       0
  2617 ;;Total ram usage:        8 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    1
  2620 ;; This function calls:
  2621 ;;		_UART_Read_TO
  2622 ;; This function is called by:
  2623 ;;		_UART_ReadValidTimeFromGPS_TO
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _UART_ReadFromGPS_TO
  2629  0A2F                     _UART_ReadFromGPS_TO:	
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _UART_ReadFromGPS_TO: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2633                           ;UART_ReadFromGPS_TO@Output stored from wreg
  2634  0A2F  00F6               	movwf	UART_ReadFromGPS_TO@Output
  2635                           
  2636                           ;gsk_usart.c: 81: Output[0]=0x00;
  2637  0A30  0876               	movf	UART_ReadFromGPS_TO@Output,w
  2638  0A31  0084               	movwf	4
  2639  0A32  1383               	bcf	3,7	;select IRP bank0
  2640  0A33  0180               	clrf	0
  2641                           
  2642                           ;gsk_usart.c: 82: const char StartCode[7]="$GPRMC,";
  2643                           ;gsk_usart.c: 83: char Pos=0x00;
  2644  0A34  01F8               	clrf	UART_ReadFromGPS_TO@Pos
  2645                           
  2646                           ;gsk_usart.c: 84: char TempChar = 0x00;
  2647  0A35  01F7               	clrf	UART_ReadFromGPS_TO@TempChar
  2648                           
  2649                           ;gsk_usart.c: 85: CREN = 0;
  2650  0A36  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0A37  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0A38  1218               	bcf	24,4	;volatile
  2653                           
  2654                           ;gsk_usart.c: 86: CREN = 1;
  2655  0A39  1618               	bsf	24,4	;volatile
  2656                           
  2657                           ;gsk_usart.c: 87: for(uint16_t i=0; i<=768; i++) {
  2658  0A3A  01F4               	clrf	UART_ReadFromGPS_TO@i
  2659  0A3B  01F5               	clrf	UART_ReadFromGPS_TO@i+1
  2660  0A3C  3003               	movlw	3
  2661  0A3D  0275               	subwf	UART_ReadFromGPS_TO@i+1,w
  2662  0A3E  3001               	movlw	1
  2663  0A3F  1903               	skipnz
  2664  0A40  0274               	subwf	UART_ReadFromGPS_TO@i,w
  2665  0A41  1803               	btfsc	3,0
  2666  0A42  2A86               	goto	l136
  2667  0A43                     l2513:	
  2668                           
  2669                           ;gsk_usart.c: 89: TempChar = UART_Read_TO(TimeOut);
  2670  0A43  0871               	movf	UART_ReadFromGPS_TO@TimeOut,w
  2671  0A44  160A  118A  263F  120A  158A  	fcall	_UART_Read_TO
  2672  0A49  00F2               	movwf	??_UART_ReadFromGPS_TO
  2673  0A4A  0872               	movf	??_UART_ReadFromGPS_TO,w
  2674  0A4B  00F7               	movwf	UART_ReadFromGPS_TO@TempChar
  2675                           
  2676                           ;gsk_usart.c: 90: if ((Pos>=0x07) & (Pos<=0x0c)) {
  2677  0A4C  3007               	movlw	7
  2678  0A4D  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2679  0A4E  1C03               	skipc
  2680  0A4F  2A60               	goto	l2523
  2681  0A50  300D               	movlw	13
  2682  0A51  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2683  0A52  1803               	skipnc
  2684  0A53  2A60               	goto	l2523
  2685                           
  2686                           ;gsk_usart.c: 91: Output[Pos-0x07]= TempChar;
  2687  0A54  0877               	movf	UART_ReadFromGPS_TO@TempChar,w
  2688  0A55  00F2               	movwf	??_UART_ReadFromGPS_TO
  2689  0A56  0878               	movf	UART_ReadFromGPS_TO@Pos,w
  2690  0A57  3EF9               	addlw	-7
  2691  0A58  0776               	addwf	UART_ReadFromGPS_TO@Output,w
  2692  0A59  00F3               	movwf	??_UART_ReadFromGPS_TO+1
  2693  0A5A  0873               	movf	??_UART_ReadFromGPS_TO+1,w
  2694  0A5B  0084               	movwf	4
  2695  0A5C  0872               	movf	??_UART_ReadFromGPS_TO,w
  2696  0A5D  1383               	bcf	3,7	;select IRP bank0
  2697  0A5E  0080               	movwf	0
  2698  0A5F  2A6F               	goto	l2527
  2699  0A60                     l2523:	
  2700                           ;gsk_usart.c: 93: } else if ((StartCode[Pos] == TempChar) && (Pos<0x07)) {
  2701                           
  2702                           ;gsk_usart.c: 92: Pos++;
  2703                           
  2704  0A60  0878               	movf	UART_ReadFromGPS_TO@Pos,w
  2705  0A61  3E08               	addlw	low ((UART_ReadFromGPS_TO@StartCode-__stringbase)| (0+32768))
  2706  0A62  0084               	movwf	4
  2707  0A63  160A  118A  2000  120A  158A  	fcall	stringdir
  2708  0A68  0677               	xorwf	UART_ReadFromGPS_TO@TempChar,w
  2709  0A69  1D03               	skipz
  2710  0A6A  2A74               	goto	l2529
  2711  0A6B  3007               	movlw	7
  2712  0A6C  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2713  0A6D  1803               	skipnc
  2714  0A6E  2A74               	goto	l2529
  2715  0A6F                     l2527:	
  2716                           
  2717                           ;gsk_usart.c: 94: Pos++;
  2718  0A6F  3001               	movlw	1
  2719  0A70  00F2               	movwf	??_UART_ReadFromGPS_TO
  2720  0A71  0872               	movf	??_UART_ReadFromGPS_TO,w
  2721  0A72  07F8               	addwf	UART_ReadFromGPS_TO@Pos,f
  2722                           
  2723                           ;gsk_usart.c: 95: } else if (Pos>0x0c)
  2724  0A73  2A79               	goto	l2537
  2725  0A74                     l2529:	
  2726  0A74  300D               	movlw	13
  2727  0A75  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2728  0A76  1803               	btfsc	3,0
  2729  0A77  0008               	return
  2730                           
  2731                           ;gsk_usart.c: 97: else
  2732                           ;gsk_usart.c: 98: Pos=0;
  2733                           
  2734                           ;gsk_usart.c: 96: return;
  2735  0A78  01F8               	clrf	UART_ReadFromGPS_TO@Pos
  2736  0A79                     l2537:	
  2737  0A79  3001               	movlw	1
  2738  0A7A  07F4               	addwf	UART_ReadFromGPS_TO@i,f
  2739  0A7B  1803               	skipnc
  2740  0A7C  0AF5               	incf	UART_ReadFromGPS_TO@i+1,f
  2741  0A7D  3000               	movlw	0
  2742  0A7E  07F5               	addwf	UART_ReadFromGPS_TO@i+1,f
  2743  0A7F  3003               	movlw	3
  2744  0A80  0275               	subwf	UART_ReadFromGPS_TO@i+1,w
  2745  0A81  3001               	movlw	1
  2746  0A82  1903               	skipnz
  2747  0A83  0274               	subwf	UART_ReadFromGPS_TO@i,w
  2748  0A84  1C03               	skipc
  2749  0A85  2A43               	goto	l2513
  2750  0A86                     l136:	
  2751                           
  2752                           ;gsk_usart.c: 99: }
  2753                           ;gsk_usart.c: 100: CREN = 0;
  2754  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0A87  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0A88  1218               	bcf	24,4	;volatile
  2757  0A89  0008               	return
  2758  0A8A                     __end_of_UART_ReadFromGPS_TO:	
  2759                           
  2760                           	psect	text7
  2761  163F                     __ptext7:	
  2762 ;; *************** function _UART_Read_TO *****************
  2763 ;; Defined at:
  2764 ;;		line 103 in file "libs/gsk_usart.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  TimeOut         1    wreg     unsigned char 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  TimeOut         1    0[COMMON] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      unsigned char 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2778 ;;      Params:         0       0       0       0       0
  2779 ;;      Locals:         1       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0
  2781 ;;      Totals:         1       0       0       0       0
  2782 ;;Total ram usage:        1 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_UART_ReadFromGPS_TO
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _UART_Read_TO
  2793  163F                     _UART_Read_TO:	
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _UART_Read_TO: [wreg+status,2+status,0]
  2797                           ;UART_Read_TO@TimeOut stored from wreg
  2798  163F  00F0               	movwf	UART_Read_TO@TimeOut
  2799                           
  2800                           ;gsk_usart.c: 104: while(!RCIF && TimeOut !=0) {
  2801  1640  2E44               	goto	l2215
  2802  1641                     l147:	
  2803                           
  2804                           ;gsk_usart.c: 105: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2805  1641  0000               	nop
  2806                           
  2807                           ;gsk_usart.c: 106: TimeOut--;
  2808  1642  3001               	movlw	1
  2809  1643  02F0               	subwf	UART_Read_TO@TimeOut,f
  2810  1644                     l2215:	
  2811  1644  1283               	bcf	3,5	;RP0=0, select bank0
  2812  1645  1303               	bcf	3,6	;RP1=0, select bank0
  2813  1646  1A8C               	btfsc	12,5	;volatile
  2814  1647  2E4B               	goto	l150
  2815  1648  0870               	movf	UART_Read_TO@TimeOut,w
  2816  1649  1D03               	btfss	3,2
  2817  164A  2E41               	goto	l147
  2818  164B                     l150:	
  2819                           
  2820                           ;gsk_usart.c: 107: }
  2821                           ;gsk_usart.c: 108: if (RCIF)
  2822  164B  1E8C               	btfss	12,5	;volatile
  2823  164C  2E4F               	goto	l2225
  2824                           
  2825                           ;gsk_usart.c: 109: return RCREG;
  2826  164D  081A               	movf	26,w	;volatile
  2827  164E  0008               	return
  2828  164F                     l2225:	
  2829                           
  2830                           ;gsk_usart.c: 110: else
  2831                           ;gsk_usart.c: 111: return 0x41;
  2832  164F  3041               	movlw	65
  2833  1650  0008               	return
  2834  1651                     __end_of_UART_Read_TO:	
  2835                           
  2836                           	psect	text8
  2837  0982                     __ptext8:	
  2838 ;; *************** function _IsValidGPS *****************
  2839 ;; Defined at:
  2840 ;;		line 120 in file "libs/gsk_usart.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  GPSData         1    wreg     PTR unsigned char 
  2843 ;;		 -> main@Data(6), 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  GPSData         1    1[COMMON] PTR unsigned char 
  2846 ;;		 -> main@Data(6), 
  2847 ;;  Result          1    0[COMMON] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      unsigned char 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       0       0       0       0
  2858 ;;      Locals:         2       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0
  2860 ;;      Totals:         2       0       0       0       0
  2861 ;;Total ram usage:        2 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_UART_ReadValidTimeFromGPS_TO
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           
  2871                           ;psect for function _IsValidGPS
  2872  0982                     _IsValidGPS:	
  2873                           
  2874                           ;incstack = 0
  2875                           ; Regs used in _IsValidGPS: [wreg-fsr0h+status,2+status,0]
  2876                           ;IsValidGPS@GPSData stored from wreg
  2877  0982  00F1               	movwf	IsValidGPS@GPSData
  2878                           
  2879                           ;gsk_usart.c: 121: bool Result;
  2880                           ;gsk_usart.c: 122: if (GPSData[0]<0x30 || GPSData[0]>0x32)
  2881  0983  0871               	movf	IsValidGPS@GPSData,w
  2882  0984  0084               	movwf	4
  2883  0985  3030               	movlw	48
  2884  0986  1383               	bcf	3,7	;select IRP bank0
  2885  0987  0200               	subwf	0,w
  2886  0988  1C03               	skipc
  2887  0989  298F               	goto	l2545
  2888  098A  0871               	movf	IsValidGPS@GPSData,w
  2889  098B  0084               	movwf	4
  2890  098C  3033               	movlw	51
  2891  098D  0200               	subwf	0,w
  2892  098E  1803               	btfsc	3,0
  2893  098F                     l2545:	
  2894                           
  2895                           ;gsk_usart.c: 123: Result = 0;
  2896  098F  01F0               	clrf	IsValidGPS@Result
  2897                           
  2898                           ;gsk_usart.c: 124: if (GPSData[1]<0x30 || GPSData[1]>0x39)
  2899  0990  0A71               	incf	IsValidGPS@GPSData,w
  2900  0991  0084               	movwf	4
  2901  0992  3030               	movlw	48
  2902  0993  0200               	subwf	0,w
  2903  0994  1C03               	skipc
  2904  0995  299B               	goto	l2551
  2905  0996  0A71               	incf	IsValidGPS@GPSData,w
  2906  0997  0084               	movwf	4
  2907  0998  303A               	movlw	58
  2908  0999  0200               	subwf	0,w
  2909  099A  1803               	btfsc	3,0
  2910  099B                     l2551:	
  2911                           
  2912                           ;gsk_usart.c: 125: Result = 0;
  2913  099B  01F0               	clrf	IsValidGPS@Result
  2914                           
  2915                           ;gsk_usart.c: 126: if (GPSData[2]<0x30 || GPSData[2]>0x36)
  2916  099C  0871               	movf	IsValidGPS@GPSData,w
  2917  099D  3E02               	addlw	2
  2918  099E  0084               	movwf	4
  2919  099F  3030               	movlw	48
  2920  09A0  0200               	subwf	0,w
  2921  09A1  1C03               	skipc
  2922  09A2  29A9               	goto	l2557
  2923  09A3  0871               	movf	IsValidGPS@GPSData,w
  2924  09A4  3E02               	addlw	2
  2925  09A5  0084               	movwf	4
  2926  09A6  3037               	movlw	55
  2927  09A7  0200               	subwf	0,w
  2928  09A8  1803               	btfsc	3,0
  2929  09A9                     l2557:	
  2930                           
  2931                           ;gsk_usart.c: 127: Result = 0;
  2932  09A9  01F0               	clrf	IsValidGPS@Result
  2933                           
  2934                           ;gsk_usart.c: 128: if (GPSData[3]<0x30 || GPSData[3]>0x39)
  2935  09AA  0871               	movf	IsValidGPS@GPSData,w
  2936  09AB  3E03               	addlw	3
  2937  09AC  0084               	movwf	4
  2938  09AD  3030               	movlw	48
  2939  09AE  0200               	subwf	0,w
  2940  09AF  1C03               	skipc
  2941  09B0  29B7               	goto	l2563
  2942  09B1  0871               	movf	IsValidGPS@GPSData,w
  2943  09B2  3E03               	addlw	3
  2944  09B3  0084               	movwf	4
  2945  09B4  303A               	movlw	58
  2946  09B5  0200               	subwf	0,w
  2947  09B6  1803               	btfsc	3,0
  2948  09B7                     l2563:	
  2949                           
  2950                           ;gsk_usart.c: 129: Result = 0;
  2951  09B7  01F0               	clrf	IsValidGPS@Result
  2952                           
  2953                           ;gsk_usart.c: 130: if (GPSData[4]<0x30 || GPSData[4]>0x36)
  2954  09B8  0871               	movf	IsValidGPS@GPSData,w
  2955  09B9  3E04               	addlw	4
  2956  09BA  0084               	movwf	4
  2957  09BB  3030               	movlw	48
  2958  09BC  0200               	subwf	0,w
  2959  09BD  1C03               	skipc
  2960  09BE  29C5               	goto	l2569
  2961  09BF  0871               	movf	IsValidGPS@GPSData,w
  2962  09C0  3E04               	addlw	4
  2963  09C1  0084               	movwf	4
  2964  09C2  3037               	movlw	55
  2965  09C3  0200               	subwf	0,w
  2966  09C4  1803               	btfsc	3,0
  2967  09C5                     l2569:	
  2968                           
  2969                           ;gsk_usart.c: 131: Result = 0;
  2970  09C5  01F0               	clrf	IsValidGPS@Result
  2971                           
  2972                           ;gsk_usart.c: 132: if (GPSData[5]<0x30 || GPSData[5]>0x39)
  2973  09C6  0871               	movf	IsValidGPS@GPSData,w
  2974  09C7  3E05               	addlw	5
  2975  09C8  0084               	movwf	4
  2976  09C9  3030               	movlw	48
  2977  09CA  0200               	subwf	0,w
  2978  09CB  1C03               	skipc
  2979  09CC  29D3               	goto	l2575
  2980  09CD  0871               	movf	IsValidGPS@GPSData,w
  2981  09CE  3E05               	addlw	5
  2982  09CF  0084               	movwf	4
  2983  09D0  303A               	movlw	58
  2984  09D1  0200               	subwf	0,w
  2985  09D2  1803               	btfsc	3,0
  2986  09D3                     l2575:	
  2987                           
  2988                           ;gsk_usart.c: 133: Result = 0;
  2989  09D3  01F0               	clrf	IsValidGPS@Result
  2990                           
  2991                           ;gsk_usart.c: 134: return Result;
  2992  09D4  0870               	movf	IsValidGPS@Result,w
  2993  09D5  0008               	return
  2994  09D6                     __end_of_IsValidGPS:	
  2995                           
  2996                           	psect	text9
  2997  012C                     __ptext9:	
  2998 ;; *************** function _UART_Init *****************
  2999 ;; Defined at:
  3000 ;;		line 3 in file "libs/gsk_usart.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  baudrate        4    3[BANK1 ] const long 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  x               2   13[BANK1 ] unsigned int 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      unsigned char 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         0       0       4       0       0
  3015 ;;      Locals:         0       0       8       0       0
  3016 ;;      Temps:          0       0       0       0       0
  3017 ;;      Totals:         0       0      12       0       0
  3018 ;;Total ram usage:       12 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    4
  3021 ;; This function calls:
  3022 ;;		___altoft
  3023 ;;		___ftadd
  3024 ;;		___ftdiv
  3025 ;;		___ftmul
  3026 ;;		___fttol
  3027 ;;		_round
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function _UART_Init
  3035  012C                     _UART_Init:	
  3036                           
  3037                           ;gsk_usart.c: 4: uint16_t x;
  3038                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  3039                           
  3040                           ;incstack = 0
  3041                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3042  012C  3024               	movlw	36
  3043  012D  1283               	bcf	3,5	;RP0=0, select bank0
  3044  012E  1303               	bcf	3,6	;RP1=0, select bank0
  3045  012F  00B8               	movwf	___ftdiv@f1
  3046  0130  3074               	movlw	116
  3047  0131  00B9               	movwf	___ftdiv@f1+1
  3048  0132  304A               	movlw	74
  3049  0133  00BA               	movwf	___ftdiv@f1+2
  3050  0134  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0135  1303               	bcf	3,6	;RP1=0, select bank1
  3052  0136  0826               	movf	(UART_Init@baudrate+3)^(0+128),w
  3053  0137  00FB               	movwf	___altoft@c+3
  3054  0138  0825               	movf	(UART_Init@baudrate+2)^(0+128),w
  3055  0139  00FA               	movwf	___altoft@c+2
  3056  013A  0824               	movf	(UART_Init@baudrate+1)^(0+128),w
  3057  013B  00F9               	movwf	___altoft@c+1
  3058  013C  0823               	movf	UART_Init@baudrate^(0+128),w
  3059  013D  00F8               	movwf	___altoft@c
  3060  013E  120A  158A  2073  120A  118A  	fcall	___altoft
  3061  0143  0878               	movf	?___altoft,w
  3062  0144  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0145  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0146  00A8               	movwf	___ftmul@f2
  3065  0147  0879               	movf	?___altoft+1,w
  3066  0148  00A9               	movwf	___ftmul@f2+1
  3067  0149  087A               	movf	?___altoft+2,w
  3068  014A  00AA               	movwf	___ftmul@f2+2
  3069  014B  3000               	movlw	0
  3070  014C  00A5               	movwf	___ftmul@f1
  3071  014D  3080               	movlw	128
  3072  014E  00A6               	movwf	___ftmul@f1+1
  3073  014F  3040               	movlw	64
  3074  0150  00A7               	movwf	___ftmul@f1+2
  3075  0151  120A  118A  235B  120A  118A  	fcall	___ftmul
  3076  0156  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0157  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0158  0825               	movf	?___ftmul,w
  3079  0159  00B5               	movwf	___ftdiv@f2
  3080  015A  0826               	movf	?___ftmul+1,w
  3081  015B  00B6               	movwf	___ftdiv@f2+1
  3082  015C  0827               	movf	?___ftmul+2,w
  3083  015D  00B7               	movwf	___ftdiv@f2+2
  3084  015E  120A  118A  21E3  120A  118A  	fcall	___ftdiv
  3085  0163  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0164  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0165  0835               	movf	?___ftdiv,w
  3088  0166  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0167  1303               	bcf	3,6	;RP1=0, select bank1
  3090  0168  00A7               	movwf	_UART_Init$839^(0+128)
  3091  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3092  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3093  016B  0836               	movf	?___ftdiv+1,w
  3094  016C  1683               	bsf	3,5	;RP0=1, select bank1
  3095  016D  1303               	bcf	3,6	;RP1=0, select bank1
  3096  016E  00A8               	movwf	(_UART_Init$839+1)^(0+128)
  3097  016F  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0170  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0171  0837               	movf	?___ftdiv+2,w
  3100  0172  1683               	bsf	3,5	;RP0=1, select bank1
  3101  0173  1303               	bcf	3,6	;RP1=0, select bank1
  3102  0174  00A9               	movwf	(_UART_Init$839+2)^(0+128)
  3103                           
  3104                           ;gsk_usart.c: 4: uint16_t x;
  3105                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  3106  0175  0827               	movf	_UART_Init$839^(0+128),w
  3107  0176  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0177  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0178  00EC               	movwf	round@x
  3110  0179  1683               	bsf	3,5	;RP0=1, select bank1
  3111  017A  1303               	bcf	3,6	;RP1=0, select bank1
  3112  017B  0828               	movf	(_UART_Init$839+1)^(0+128),w
  3113  017C  1283               	bcf	3,5	;RP0=0, select bank0
  3114  017D  1303               	bcf	3,6	;RP1=0, select bank0
  3115  017E  00ED               	movwf	round@x+1
  3116  017F  1683               	bsf	3,5	;RP0=1, select bank1
  3117  0180  1303               	bcf	3,6	;RP1=0, select bank1
  3118  0181  0829               	movf	(_UART_Init$839+2)^(0+128),w
  3119  0182  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0183  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0184  00EE               	movwf	round@x+2
  3122  0185  120A  118A  2005  120A  118A  	fcall	_round
  3123  018A  1283               	bcf	3,5	;RP0=0, select bank0
  3124  018B  1303               	bcf	3,6	;RP1=0, select bank0
  3125  018C  086C               	movf	?_round,w
  3126  018D  1683               	bsf	3,5	;RP0=1, select bank1
  3127  018E  1303               	bcf	3,6	;RP1=0, select bank1
  3128  018F  00AA               	movwf	_UART_Init$840^(0+128)
  3129  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0192  086D               	movf	?_round+1,w
  3132  0193  1683               	bsf	3,5	;RP0=1, select bank1
  3133  0194  1303               	bcf	3,6	;RP1=0, select bank1
  3134  0195  00AB               	movwf	(_UART_Init$840+1)^(0+128)
  3135  0196  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0197  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0198  086E               	movf	?_round+2,w
  3138  0199  1683               	bsf	3,5	;RP0=1, select bank1
  3139  019A  1303               	bcf	3,6	;RP1=0, select bank1
  3140  019B  00AC               	movwf	(_UART_Init$840+2)^(0+128)
  3141                           
  3142                           ;gsk_usart.c: 4: uint16_t x;
  3143                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  3144  019C  082A               	movf	_UART_Init$840^(0+128),w
  3145  019D  1283               	bcf	3,5	;RP0=0, select bank0
  3146  019E  1303               	bcf	3,6	;RP1=0, select bank0
  3147  019F  00C8               	movwf	___ftadd@f2
  3148  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  3149  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  3150  01A2  082B               	movf	(_UART_Init$840+1)^(0+128),w
  3151  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  3152  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  3153  01A5  00C9               	movwf	___ftadd@f2+1
  3154  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  3155  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  3156  01A8  082C               	movf	(_UART_Init$840+2)^(0+128),w
  3157  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3158  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3159  01AB  00CA               	movwf	___ftadd@f2+2
  3160  01AC  3000               	movlw	0
  3161  01AD  00C5               	movwf	___ftadd@f1
  3162  01AE  3080               	movlw	128
  3163  01AF  00C6               	movwf	___ftadd@f1+1
  3164  01B0  30BF               	movlw	191
  3165  01B1  00C7               	movwf	___ftadd@f1+2
  3166  01B2  120A  118A  242E  120A  118A  	fcall	___ftadd
  3167  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3168  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3169  01B9  0845               	movf	?___ftadd,w
  3170  01BA  00D2               	movwf	___fttol@f1
  3171  01BB  0846               	movf	?___ftadd+1,w
  3172  01BC  00D3               	movwf	___fttol@f1+1
  3173  01BD  0847               	movf	?___ftadd+2,w
  3174  01BE  00D4               	movwf	___fttol@f1+2
  3175  01BF  120A  158A  23B8   	fcall	___fttol
  3176  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  3177  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  3178  01C4  0853               	movf	?___fttol+1,w
  3179  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  3180  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  3181  01C7  00AE               	movwf	(UART_Init@x+1)^(0+128)
  3182  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  3183  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  3184  01CA  0852               	movf	?___fttol,w
  3185  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  3186  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  3187  01CD  00AD               	movwf	UART_Init@x^(0+128)
  3188                           
  3189                           ;gsk_usart.c: 6: SPBRG = x;
  3190  01CE  082D               	movf	UART_Init@x^(0+128),w
  3191  01CF  0099               	movwf	25	;volatile
  3192                           
  3193                           ;gsk_usart.c: 7: SPBRGH = (x>>8);
  3194  01D0  082E               	movf	(UART_Init@x+1)^(0+128),w
  3195  01D1  009A               	movwf	26	;volatile
  3196                           
  3197                           ;gsk_usart.c: 8: BRGH = 1;
  3198  01D2  1518               	bsf	24,2	;volatile
  3199                           
  3200                           ;gsk_usart.c: 9: BRG16 = 1;
  3201  01D3  1683               	bsf	3,5	;RP0=1, select bank3
  3202  01D4  1703               	bsf	3,6	;RP1=1, select bank3
  3203  01D5  1587               	bsf	7,3	;volatile
  3204                           
  3205                           ;gsk_usart.c: 10: CREN = 1;
  3206  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3207  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  3208  01D8  1618               	bsf	24,4	;volatile
  3209                           
  3210                           ;gsk_usart.c: 11: SYNC = 0;
  3211  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  3212  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  3213  01DB  1218               	bcf	24,4	;volatile
  3214                           
  3215                           ;gsk_usart.c: 12: SPEN = 1;
  3216  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  3217  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  3218  01DE  1798               	bsf	24,7	;volatile
  3219                           
  3220                           ;gsk_usart.c: 15: TXEN = 1;
  3221  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  3222  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  3223  01E1  1698               	bsf	24,5	;volatile
  3224  01E2  0008               	return
  3225  01E3                     __end_of_UART_Init:	
  3226                           ;gsk_usart.c: 16: return 1;
  3227                           ;	Return value of _UART_Init is never used
  3228                           
  3229                           
  3230                           	psect	text10
  3231  01E3                     __ptext10:	
  3232 ;; *************** function ___ftdiv *****************
  3233 ;; Defined at:
  3234 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  f2              3   21[BANK0 ] float 
  3237 ;;  f1              3   24[BANK0 ] float 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  f3              3   32[BANK0 ] float 
  3240 ;;  sign            1   36[BANK0 ] unsigned char 
  3241 ;;  exp             1   35[BANK0 ] unsigned char 
  3242 ;;  cntr            1   31[BANK0 ] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  3   21[BANK0 ] float 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0, pclath, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         0       6       0       0       0
  3253 ;;      Locals:         0       6       0       0       0
  3254 ;;      Temps:          0       4       0       0       0
  3255 ;;      Totals:         0      16       0       0       0
  3256 ;;Total ram usage:       16 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    1
  3259 ;; This function calls:
  3260 ;;		___ftpack
  3261 ;; This function is called by:
  3262 ;;		_UART_Init
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function ___ftdiv
  3268  01E3                     ___ftdiv:	
  3269                           
  3270                           ;incstack = 0
  3271                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3272  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  3273  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  3274  01E5  0838               	movf	___ftdiv@f1,w
  3275  01E6  00BB               	movwf	??___ftdiv
  3276  01E7  0839               	movf	___ftdiv@f1+1,w
  3277  01E8  00BC               	movwf	??___ftdiv+1
  3278  01E9  083A               	movf	___ftdiv@f1+2,w
  3279  01EA  00BD               	movwf	??___ftdiv+2
  3280  01EB  1003               	clrc
  3281  01EC  0D3C               	rlf	??___ftdiv+1,w
  3282  01ED  0D3D               	rlf	??___ftdiv+2,w
  3283  01EE  00BE               	movwf	??___ftdiv+3
  3284  01EF  083E               	movf	??___ftdiv+3,w
  3285  01F0  00C3               	movwf	___ftdiv@exp
  3286  01F1  0843               	movf	___ftdiv@exp,w
  3287  01F2  1D03               	btfss	3,2
  3288  01F3  29FB               	goto	l2691
  3289  01F4  3000               	movlw	0
  3290  01F5  00B5               	movwf	?___ftdiv
  3291  01F6  3000               	movlw	0
  3292  01F7  00B6               	movwf	?___ftdiv+1
  3293  01F8  3000               	movlw	0
  3294  01F9  00B7               	movwf	?___ftdiv+2
  3295  01FA  0008               	return
  3296  01FB                     l2691:	
  3297  01FB  0835               	movf	___ftdiv@f2,w
  3298  01FC  00BB               	movwf	??___ftdiv
  3299  01FD  0836               	movf	___ftdiv@f2+1,w
  3300  01FE  00BC               	movwf	??___ftdiv+1
  3301  01FF  0837               	movf	___ftdiv@f2+2,w
  3302  0200  00BD               	movwf	??___ftdiv+2
  3303  0201  1003               	clrc
  3304  0202  0D3C               	rlf	??___ftdiv+1,w
  3305  0203  0D3D               	rlf	??___ftdiv+2,w
  3306  0204  00BE               	movwf	??___ftdiv+3
  3307  0205  083E               	movf	??___ftdiv+3,w
  3308  0206  00C4               	movwf	___ftdiv@sign
  3309  0207  0844               	movf	___ftdiv@sign,w
  3310  0208  1D03               	btfss	3,2
  3311  0209  2A11               	goto	l2697
  3312  020A  3000               	movlw	0
  3313  020B  00B5               	movwf	?___ftdiv
  3314  020C  3000               	movlw	0
  3315  020D  00B6               	movwf	?___ftdiv+1
  3316  020E  3000               	movlw	0
  3317  020F  00B7               	movwf	?___ftdiv+2
  3318  0210  0008               	return
  3319  0211                     l2697:	
  3320  0211  3000               	movlw	0
  3321  0212  00C0               	movwf	___ftdiv@f3
  3322  0213  3000               	movlw	0
  3323  0214  00C1               	movwf	___ftdiv@f3+1
  3324  0215  3000               	movlw	0
  3325  0216  00C2               	movwf	___ftdiv@f3+2
  3326  0217  3089               	movlw	137
  3327  0218  0744               	addwf	___ftdiv@sign,w
  3328  0219  00BB               	movwf	??___ftdiv
  3329  021A  083B               	movf	??___ftdiv,w
  3330  021B  02C3               	subwf	___ftdiv@exp,f
  3331  021C  0838               	movf	___ftdiv@f1,w
  3332  021D  00BB               	movwf	??___ftdiv
  3333  021E  0839               	movf	___ftdiv@f1+1,w
  3334  021F  00BC               	movwf	??___ftdiv+1
  3335  0220  083A               	movf	___ftdiv@f1+2,w
  3336  0221  00BD               	movwf	??___ftdiv+2
  3337  0222  3010               	movlw	16
  3338  0223                     u4125:	
  3339  0223  1003               	clrc
  3340  0224  0CBD               	rrf	??___ftdiv+2,f
  3341  0225  0CBC               	rrf	??___ftdiv+1,f
  3342  0226  0CBB               	rrf	??___ftdiv,f
  3343  0227  3EFF               	addlw	-1
  3344  0228  1D03               	skipz
  3345  0229  2A23               	goto	u4125
  3346  022A  083B               	movf	??___ftdiv,w
  3347  022B  00BE               	movwf	??___ftdiv+3
  3348  022C  083E               	movf	??___ftdiv+3,w
  3349  022D  00C4               	movwf	___ftdiv@sign
  3350  022E  0835               	movf	___ftdiv@f2,w
  3351  022F  00BB               	movwf	??___ftdiv
  3352  0230  0836               	movf	___ftdiv@f2+1,w
  3353  0231  00BC               	movwf	??___ftdiv+1
  3354  0232  0837               	movf	___ftdiv@f2+2,w
  3355  0233  00BD               	movwf	??___ftdiv+2
  3356  0234  3010               	movlw	16
  3357  0235                     u4135:	
  3358  0235  1003               	clrc
  3359  0236  0CBD               	rrf	??___ftdiv+2,f
  3360  0237  0CBC               	rrf	??___ftdiv+1,f
  3361  0238  0CBB               	rrf	??___ftdiv,f
  3362  0239  3EFF               	addlw	-1
  3363  023A  1D03               	skipz
  3364  023B  2A35               	goto	u4135
  3365  023C  083B               	movf	??___ftdiv,w
  3366  023D  00BE               	movwf	??___ftdiv+3
  3367  023E  083E               	movf	??___ftdiv+3,w
  3368  023F  06C4               	xorwf	___ftdiv@sign,f
  3369  0240  3080               	movlw	128
  3370  0241  00BB               	movwf	??___ftdiv
  3371  0242  083B               	movf	??___ftdiv,w
  3372  0243  05C4               	andwf	___ftdiv@sign,f
  3373  0244  17B9               	bsf	___ftdiv@f1+1,7
  3374  0245  30FF               	movlw	255
  3375  0246  05B8               	andwf	___ftdiv@f1,f
  3376  0247  30FF               	movlw	255
  3377  0248  05B9               	andwf	___ftdiv@f1+1,f
  3378  0249  3000               	movlw	0
  3379  024A  05BA               	andwf	___ftdiv@f1+2,f
  3380  024B  17B6               	bsf	___ftdiv@f2+1,7
  3381  024C  30FF               	movlw	255
  3382  024D  05B5               	andwf	___ftdiv@f2,f
  3383  024E  30FF               	movlw	255
  3384  024F  05B6               	andwf	___ftdiv@f2+1,f
  3385  0250  3000               	movlw	0
  3386  0251  05B7               	andwf	___ftdiv@f2+2,f
  3387  0252  3018               	movlw	24
  3388  0253  00BB               	movwf	??___ftdiv
  3389  0254  083B               	movf	??___ftdiv,w
  3390  0255  00BF               	movwf	___ftdiv@cntr
  3391  0256                     l2711:	
  3392  0256  3001               	movlw	1
  3393  0257                     u4145:	
  3394  0257  1003               	clrc
  3395  0258  0DC0               	rlf	___ftdiv@f3,f
  3396  0259  0DC1               	rlf	___ftdiv@f3+1,f
  3397  025A  0DC2               	rlf	___ftdiv@f3+2,f
  3398  025B  3EFF               	addlw	-1
  3399  025C  1D03               	skipz
  3400  025D  2A57               	goto	u4145
  3401  025E  0837               	movf	___ftdiv@f2+2,w
  3402  025F  023A               	subwf	___ftdiv@f1+2,w
  3403  0260  1D03               	skipz
  3404  0261  2A68               	goto	u4155
  3405  0262  0836               	movf	___ftdiv@f2+1,w
  3406  0263  0239               	subwf	___ftdiv@f1+1,w
  3407  0264  1D03               	skipz
  3408  0265  2A68               	goto	u4155
  3409  0266  0835               	movf	___ftdiv@f2,w
  3410  0267  0238               	subwf	___ftdiv@f1,w
  3411  0268                     u4155:	
  3412  0268  1C03               	skipc
  3413  0269  2A75               	goto	l2719
  3414  026A  0835               	movf	___ftdiv@f2,w
  3415  026B  02B8               	subwf	___ftdiv@f1,f
  3416  026C  0836               	movf	___ftdiv@f2+1,w
  3417  026D  1C03               	skipc
  3418  026E  0F36               	incfsz	___ftdiv@f2+1,w
  3419  026F  02B9               	subwf	___ftdiv@f1+1,f
  3420  0270  0837               	movf	___ftdiv@f2+2,w
  3421  0271  1C03               	skipc
  3422  0272  0A37               	incf	___ftdiv@f2+2,w
  3423  0273  02BA               	subwf	___ftdiv@f1+2,f
  3424  0274  1440               	bsf	___ftdiv@f3,0
  3425  0275                     l2719:	
  3426  0275  3001               	movlw	1
  3427  0276                     u4165:	
  3428  0276  1003               	clrc
  3429  0277  0DB8               	rlf	___ftdiv@f1,f
  3430  0278  0DB9               	rlf	___ftdiv@f1+1,f
  3431  0279  0DBA               	rlf	___ftdiv@f1+2,f
  3432  027A  3EFF               	addlw	-1
  3433  027B  1D03               	skipz
  3434  027C  2A76               	goto	u4165
  3435  027D  3001               	movlw	1
  3436  027E  02BF               	subwf	___ftdiv@cntr,f
  3437  027F  1D03               	btfss	3,2
  3438  0280  2A56               	goto	l2711
  3439  0281  0840               	movf	___ftdiv@f3,w
  3440  0282  00F0               	movwf	___ftpack@arg
  3441  0283  0841               	movf	___ftdiv@f3+1,w
  3442  0284  00F1               	movwf	___ftpack@arg+1
  3443  0285  0842               	movf	___ftdiv@f3+2,w
  3444  0286  00F2               	movwf	___ftpack@arg+2
  3445  0287  0843               	movf	___ftdiv@exp,w
  3446  0288  00BB               	movwf	??___ftdiv
  3447  0289  083B               	movf	??___ftdiv,w
  3448  028A  00F3               	movwf	___ftpack@exp
  3449  028B  0844               	movf	___ftdiv@sign,w
  3450  028C  00BC               	movwf	??___ftdiv+1
  3451  028D  083C               	movf	??___ftdiv+1,w
  3452  028E  00F4               	movwf	___ftpack@sign
  3453  028F  120A  158A  234C   	fcall	___ftpack
  3454  0292  0870               	movf	?___ftpack,w
  3455  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0294  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0295  00B5               	movwf	?___ftdiv
  3458  0296  0871               	movf	?___ftpack+1,w
  3459  0297  00B6               	movwf	?___ftdiv+1
  3460  0298  0872               	movf	?___ftpack+2,w
  3461  0299  00B7               	movwf	?___ftdiv+2
  3462  029A  0008               	return
  3463  029B                     __end_of___ftdiv:	
  3464                           
  3465                           	psect	text11
  3466  0537                     __ptext11:	
  3467 ;; *************** function _ReadRTCAsSec *****************
  3468 ;; Defined at:
  3469 ;;		line 27 in file "libs/gsk_funs.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  Out             4   33[BANK0 ] unsigned long 
  3474 ;;  TempVar000      1   37[BANK0 ] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  4   14[BANK0 ] unsigned long 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       4       0       0       0
  3485 ;;      Locals:         0       7       0       0       0
  3486 ;;      Temps:          0      13       0       0       0
  3487 ;;      Totals:         0      24       0       0       0
  3488 ;;Total ram usage:       24 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    3
  3491 ;; This function calls:
  3492 ;;		_I2C_ReadAtAddress
  3493 ;;		___lmul
  3494 ;;		___wmul
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _ReadRTCAsSec
  3502  0537                     _ReadRTCAsSec:	
  3503                           
  3504                           ;gsk_funs.c: 28: char TempVar000;
  3505                           ;gsk_funs.c: 29: uint32_t Out = 0;
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _ReadRTCAsSec: [wreg+status,2+status,0+pclath+cstack]
  3509  0537  3000               	movlw	0
  3510  0538  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0539  1303               	bcf	3,6	;RP1=0, select bank0
  3512  053A  00C4               	movwf	ReadRTCAsSec@Out+3
  3513  053B  3000               	movlw	0
  3514  053C  00C3               	movwf	ReadRTCAsSec@Out+2
  3515  053D  3000               	movlw	0
  3516  053E  00C2               	movwf	ReadRTCAsSec@Out+1
  3517  053F  3000               	movlw	0
  3518  0540  00C1               	movwf	ReadRTCAsSec@Out
  3519                           
  3520                           ;gsk_funs.c: 30: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
  3521  0541  3002               	movlw	2
  3522  0542  00B2               	movwf	??_ReadRTCAsSec
  3523  0543  0832               	movf	??_ReadRTCAsSec,w
  3524  0544  00F6               	movwf	I2C_ReadAtAddress@IntAdd
  3525  0545  30DE               	movlw	222
  3526  0546  120A  158A  20F3  120A  118A  	fcall	_I2C_ReadAtAddress
  3527  054B  1283               	bcf	3,5	;RP0=0, select bank0
  3528  054C  1303               	bcf	3,6	;RP1=0, select bank0
  3529  054D  00B3               	movwf	??_ReadRTCAsSec+1
  3530  054E  0833               	movf	??_ReadRTCAsSec+1,w
  3531  054F  00C5               	movwf	ReadRTCAsSec@TempVar000
  3532                           
  3533                           ;gsk_funs.c: 31: Out = ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x03)*10);
  3534  0550  0845               	movf	ReadRTCAsSec@TempVar000,w
  3535  0551  00B2               	movwf	??_ReadRTCAsSec
  3536  0552  3004               	movlw	4
  3537  0553                     u4435:	
  3538  0553  1003               	clrc
  3539  0554  0CB2               	rrf	??_ReadRTCAsSec,f
  3540  0555  3EFF               	addlw	-1
  3541  0556  1D03               	skipz
  3542  0557  2D53               	goto	u4435
  3543  0558  0832               	movf	??_ReadRTCAsSec,w
  3544  0559  3903               	andlw	3
  3545  055A  00B3               	movwf	??_ReadRTCAsSec+1
  3546  055B  01B4               	clrf	??_ReadRTCAsSec+2
  3547  055C  0833               	movf	??_ReadRTCAsSec+1,w
  3548  055D  00F0               	movwf	___wmul@multiplier
  3549  055E  0834               	movf	??_ReadRTCAsSec+2,w
  3550  055F  00F1               	movwf	___wmul@multiplier+1
  3551  0560  300A               	movlw	10
  3552  0561  00F2               	movwf	___wmul@multiplicand
  3553  0562  3000               	movlw	0
  3554  0563  00F3               	movwf	___wmul@multiplicand+1
  3555  0564  160A  118A  267D  120A  118A  	fcall	___wmul
  3556  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3557  056A  1303               	bcf	3,6	;RP1=0, select bank0
  3558  056B  0845               	movf	ReadRTCAsSec@TempVar000,w
  3559  056C  390F               	andlw	15
  3560  056D  0770               	addwf	?___wmul,w
  3561  056E  00C1               	movwf	ReadRTCAsSec@Out
  3562  056F  0871               	movf	?___wmul+1,w
  3563  0570  1803               	skipnc
  3564  0571  0A71               	incf	?___wmul+1,w
  3565  0572  00C2               	movwf	ReadRTCAsSec@Out+1
  3566  0573  01C3               	clrf	ReadRTCAsSec@Out+2
  3567  0574  1BC2               	btfsc	ReadRTCAsSec@Out+1,7
  3568  0575  03C3               	decf	ReadRTCAsSec@Out+2,f
  3569  0576  0843               	movf	ReadRTCAsSec@Out+2,w
  3570  0577  00C4               	movwf	ReadRTCAsSec@Out+3
  3571                           
  3572                           ;gsk_funs.c: 32: Out = Out*3600;
  3573  0578  0844               	movf	ReadRTCAsSec@Out+3,w
  3574  0579  00F3               	movwf	___lmul@multiplier+3
  3575  057A  0843               	movf	ReadRTCAsSec@Out+2,w
  3576  057B  00F2               	movwf	___lmul@multiplier+2
  3577  057C  0842               	movf	ReadRTCAsSec@Out+1,w
  3578  057D  00F1               	movwf	___lmul@multiplier+1
  3579  057E  0841               	movf	ReadRTCAsSec@Out,w
  3580  057F  00F0               	movwf	___lmul@multiplier
  3581  0580  3000               	movlw	0
  3582  0581  00F7               	movwf	___lmul@multiplicand+3
  3583  0582  3000               	movlw	0
  3584  0583  00F6               	movwf	___lmul@multiplicand+2
  3585  0584  300E               	movlw	14
  3586  0585  00F5               	movwf	___lmul@multiplicand+1
  3587  0586  3010               	movlw	16
  3588  0587  00F4               	movwf	___lmul@multiplicand
  3589  0588  120A  158A  2034  120A  118A  	fcall	___lmul
  3590  058D  0873               	movf	?___lmul+3,w
  3591  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3592  058F  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0590  00C4               	movwf	ReadRTCAsSec@Out+3
  3594  0591  0872               	movf	?___lmul+2,w
  3595  0592  00C3               	movwf	ReadRTCAsSec@Out+2
  3596  0593  0871               	movf	?___lmul+1,w
  3597  0594  00C2               	movwf	ReadRTCAsSec@Out+1
  3598  0595  0870               	movf	?___lmul,w
  3599  0596  00C1               	movwf	ReadRTCAsSec@Out
  3600                           
  3601                           ;gsk_funs.c: 34: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
  3602  0597  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  3603  0598  0AF6               	incf	I2C_ReadAtAddress@IntAdd,f
  3604  0599  30DE               	movlw	222
  3605  059A  120A  158A  20F3  120A  118A  	fcall	_I2C_ReadAtAddress
  3606  059F  1283               	bcf	3,5	;RP0=0, select bank0
  3607  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  3608  05A1  00B2               	movwf	??_ReadRTCAsSec
  3609  05A2  0832               	movf	??_ReadRTCAsSec,w
  3610  05A3  00C5               	movwf	ReadRTCAsSec@TempVar000
  3611                           
  3612                           ;gsk_funs.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  3613  05A4  0845               	movf	ReadRTCAsSec@TempVar000,w
  3614  05A5  00B2               	movwf	??_ReadRTCAsSec
  3615  05A6  3004               	movlw	4
  3616  05A7                     u4445:	
  3617  05A7  1003               	clrc
  3618  05A8  0CB2               	rrf	??_ReadRTCAsSec,f
  3619  05A9  3EFF               	addlw	-1
  3620  05AA  1D03               	skipz
  3621  05AB  2DA7               	goto	u4445
  3622  05AC  0832               	movf	??_ReadRTCAsSec,w
  3623  05AD  3907               	andlw	7
  3624  05AE  00B3               	movwf	??_ReadRTCAsSec+1
  3625  05AF  01B4               	clrf	??_ReadRTCAsSec+2
  3626  05B0  0833               	movf	??_ReadRTCAsSec+1,w
  3627  05B1  00F0               	movwf	___wmul@multiplier
  3628  05B2  0834               	movf	??_ReadRTCAsSec+2,w
  3629  05B3  00F1               	movwf	___wmul@multiplier+1
  3630  05B4  300A               	movlw	10
  3631  05B5  00F2               	movwf	___wmul@multiplicand
  3632  05B6  3000               	movlw	0
  3633  05B7  00F3               	movwf	___wmul@multiplicand+1
  3634  05B8  160A  118A  267D  120A  118A  	fcall	___wmul
  3635  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  3636  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  3637  05BF  0845               	movf	ReadRTCAsSec@TempVar000,w
  3638  05C0  390F               	andlw	15
  3639  05C1  0770               	addwf	?___wmul,w
  3640  05C2  00BF               	movwf	_ReadRTCAsSec$841
  3641  05C3  0871               	movf	?___wmul+1,w
  3642  05C4  1803               	skipnc
  3643  05C5  0A71               	incf	?___wmul+1,w
  3644  05C6  00C0               	movwf	_ReadRTCAsSec$841+1
  3645                           
  3646                           ;gsk_funs.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  3647  05C7  0841               	movf	ReadRTCAsSec@Out,w
  3648  05C8  00B2               	movwf	??_ReadRTCAsSec
  3649  05C9  0842               	movf	ReadRTCAsSec@Out+1,w
  3650  05CA  00B3               	movwf	??_ReadRTCAsSec+1
  3651  05CB  0843               	movf	ReadRTCAsSec@Out+2,w
  3652  05CC  00B4               	movwf	??_ReadRTCAsSec+2
  3653  05CD  0844               	movf	ReadRTCAsSec@Out+3,w
  3654  05CE  00B5               	movwf	??_ReadRTCAsSec+3
  3655  05CF  0840               	movf	_ReadRTCAsSec$841+1,w
  3656  05D0  00F1               	movwf	___wmul@multiplier+1
  3657  05D1  083F               	movf	_ReadRTCAsSec$841,w
  3658  05D2  00F0               	movwf	___wmul@multiplier
  3659  05D3  303C               	movlw	60
  3660  05D4  00F2               	movwf	___wmul@multiplicand
  3661  05D5  3000               	movlw	0
  3662  05D6  00F3               	movwf	___wmul@multiplicand+1
  3663  05D7  160A  118A  267D  120A  118A  	fcall	___wmul
  3664  05DC  0870               	movf	?___wmul,w
  3665  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3666  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3667  05DF  00B6               	movwf	??_ReadRTCAsSec+4
  3668  05E0  0871               	movf	?___wmul+1,w
  3669  05E1  00B7               	movwf	??_ReadRTCAsSec+5
  3670  05E2  3000               	movlw	0
  3671  05E3  1BB7               	btfsc	??_ReadRTCAsSec+5,7
  3672  05E4  30FF               	movlw	255
  3673  05E5  00B8               	movwf	??_ReadRTCAsSec+6
  3674  05E6  00B9               	movwf	??_ReadRTCAsSec+7
  3675  05E7  0836               	movf	??_ReadRTCAsSec+4,w
  3676  05E8  07B2               	addwf	??_ReadRTCAsSec,f
  3677  05E9  0837               	movf	??_ReadRTCAsSec+5,w
  3678  05EA  1803               	skipnc
  3679  05EB  0F37               	incfsz	??_ReadRTCAsSec+5,w
  3680  05EC  2DEE               	goto	u4450
  3681  05ED  2DEF               	goto	u4451
  3682  05EE                     u4450:	
  3683  05EE  07B3               	addwf	??_ReadRTCAsSec+1,f
  3684  05EF                     u4451:	
  3685  05EF  0838               	movf	??_ReadRTCAsSec+6,w
  3686  05F0  1803               	skipnc
  3687  05F1  0F38               	incfsz	??_ReadRTCAsSec+6,w
  3688  05F2  2DF4               	goto	u4452
  3689  05F3  2DF5               	goto	u4453
  3690  05F4                     u4452:	
  3691  05F4  07B4               	addwf	??_ReadRTCAsSec+2,f
  3692  05F5                     u4453:	
  3693  05F5  0839               	movf	??_ReadRTCAsSec+7,w
  3694  05F6  1803               	skipnc
  3695  05F7  0A39               	incf	??_ReadRTCAsSec+7,w
  3696  05F8  07B5               	addwf	??_ReadRTCAsSec+3,f
  3697  05F9  0835               	movf	??_ReadRTCAsSec+3,w
  3698  05FA  00C4               	movwf	ReadRTCAsSec@Out+3
  3699  05FB  0834               	movf	??_ReadRTCAsSec+2,w
  3700  05FC  00C3               	movwf	ReadRTCAsSec@Out+2
  3701  05FD  0833               	movf	??_ReadRTCAsSec+1,w
  3702  05FE  00C2               	movwf	ReadRTCAsSec@Out+1
  3703  05FF  0832               	movf	??_ReadRTCAsSec,w
  3704  0600  00C1               	movwf	ReadRTCAsSec@Out
  3705                           
  3706                           ;gsk_funs.c: 37: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
  3707  0601  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  3708  0602  30DE               	movlw	222
  3709  0603  120A  158A  20F3  120A  118A  	fcall	_I2C_ReadAtAddress
  3710  0608  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0609  1303               	bcf	3,6	;RP1=0, select bank0
  3712  060A  00B2               	movwf	??_ReadRTCAsSec
  3713  060B  0832               	movf	??_ReadRTCAsSec,w
  3714  060C  00C5               	movwf	ReadRTCAsSec@TempVar000
  3715                           
  3716                           ;gsk_funs.c: 38: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10);
  3717  060D  0841               	movf	ReadRTCAsSec@Out,w
  3718  060E  00B2               	movwf	??_ReadRTCAsSec
  3719  060F  0842               	movf	ReadRTCAsSec@Out+1,w
  3720  0610  00B3               	movwf	??_ReadRTCAsSec+1
  3721  0611  0843               	movf	ReadRTCAsSec@Out+2,w
  3722  0612  00B4               	movwf	??_ReadRTCAsSec+2
  3723  0613  0844               	movf	ReadRTCAsSec@Out+3,w
  3724  0614  00B5               	movwf	??_ReadRTCAsSec+3
  3725  0615  0845               	movf	ReadRTCAsSec@TempVar000,w
  3726  0616  00B6               	movwf	??_ReadRTCAsSec+4
  3727  0617  3004               	movlw	4
  3728  0618                     u4465:	
  3729  0618  1003               	clrc
  3730  0619  0CB6               	rrf	??_ReadRTCAsSec+4,f
  3731  061A  3EFF               	addlw	-1
  3732  061B  1D03               	skipz
  3733  061C  2E18               	goto	u4465
  3734  061D  0836               	movf	??_ReadRTCAsSec+4,w
  3735  061E  3907               	andlw	7
  3736  061F  00B7               	movwf	??_ReadRTCAsSec+5
  3737  0620  01B8               	clrf	??_ReadRTCAsSec+6
  3738  0621  0837               	movf	??_ReadRTCAsSec+5,w
  3739  0622  00F0               	movwf	___wmul@multiplier
  3740  0623  0838               	movf	??_ReadRTCAsSec+6,w
  3741  0624  00F1               	movwf	___wmul@multiplier+1
  3742  0625  300A               	movlw	10
  3743  0626  00F2               	movwf	___wmul@multiplicand
  3744  0627  3000               	movlw	0
  3745  0628  00F3               	movwf	___wmul@multiplicand+1
  3746  0629  160A  118A  267D  120A  118A  	fcall	___wmul
  3747  062E  1283               	bcf	3,5	;RP0=0, select bank0
  3748  062F  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0630  0845               	movf	ReadRTCAsSec@TempVar000,w
  3750  0631  390F               	andlw	15
  3751  0632  0770               	addwf	?___wmul,w
  3752  0633  00B9               	movwf	??_ReadRTCAsSec+7
  3753  0634  0871               	movf	?___wmul+1,w
  3754  0635  1803               	skipnc
  3755  0636  0A71               	incf	?___wmul+1,w
  3756  0637  00BA               	movwf	??_ReadRTCAsSec+8
  3757  0638  0839               	movf	??_ReadRTCAsSec+7,w
  3758  0639  00BB               	movwf	??_ReadRTCAsSec+9
  3759  063A  083A               	movf	??_ReadRTCAsSec+8,w
  3760  063B  00BC               	movwf	??_ReadRTCAsSec+10
  3761  063C  3000               	movlw	0
  3762  063D  1BBC               	btfsc	??_ReadRTCAsSec+10,7
  3763  063E  30FF               	movlw	255
  3764  063F  00BD               	movwf	??_ReadRTCAsSec+11
  3765  0640  00BE               	movwf	??_ReadRTCAsSec+12
  3766  0641  083B               	movf	??_ReadRTCAsSec+9,w
  3767  0642  07B2               	addwf	??_ReadRTCAsSec,f
  3768  0643  083C               	movf	??_ReadRTCAsSec+10,w
  3769  0644  1803               	skipnc
  3770  0645  0F3C               	incfsz	??_ReadRTCAsSec+10,w
  3771  0646  2E48               	goto	u4470
  3772  0647  2E49               	goto	u4471
  3773  0648                     u4470:	
  3774  0648  07B3               	addwf	??_ReadRTCAsSec+1,f
  3775  0649                     u4471:	
  3776  0649  083D               	movf	??_ReadRTCAsSec+11,w
  3777  064A  1803               	skipnc
  3778  064B  0F3D               	incfsz	??_ReadRTCAsSec+11,w
  3779  064C  2E4E               	goto	u4472
  3780  064D  2E4F               	goto	u4473
  3781  064E                     u4472:	
  3782  064E  07B4               	addwf	??_ReadRTCAsSec+2,f
  3783  064F                     u4473:	
  3784  064F  083E               	movf	??_ReadRTCAsSec+12,w
  3785  0650  1803               	skipnc
  3786  0651  0A3E               	incf	??_ReadRTCAsSec+12,w
  3787  0652  07B5               	addwf	??_ReadRTCAsSec+3,f
  3788  0653  0835               	movf	??_ReadRTCAsSec+3,w
  3789  0654  00C4               	movwf	ReadRTCAsSec@Out+3
  3790  0655  0834               	movf	??_ReadRTCAsSec+2,w
  3791  0656  00C3               	movwf	ReadRTCAsSec@Out+2
  3792  0657  0833               	movf	??_ReadRTCAsSec+1,w
  3793  0658  00C2               	movwf	ReadRTCAsSec@Out+1
  3794  0659  0832               	movf	??_ReadRTCAsSec,w
  3795  065A  00C1               	movwf	ReadRTCAsSec@Out
  3796                           
  3797                           ;gsk_funs.c: 39: return Out;
  3798  065B  0844               	movf	ReadRTCAsSec@Out+3,w
  3799  065C  00B1               	movwf	?_ReadRTCAsSec+3
  3800  065D  0843               	movf	ReadRTCAsSec@Out+2,w
  3801  065E  00B0               	movwf	?_ReadRTCAsSec+2
  3802  065F  0842               	movf	ReadRTCAsSec@Out+1,w
  3803  0660  00AF               	movwf	?_ReadRTCAsSec+1
  3804  0661  0841               	movf	ReadRTCAsSec@Out,w
  3805  0662  00AE               	movwf	?_ReadRTCAsSec
  3806  0663  0008               	return
  3807  0664                     __end_of_ReadRTCAsSec:	
  3808                           
  3809                           	psect	text12
  3810  0834                     __ptext12:	
  3811 ;; *************** function ___lmul *****************
  3812 ;; Defined at:
  3813 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  multiplier      4    0[COMMON] unsigned long 
  3816 ;;  multiplicand    4    4[COMMON] unsigned long 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  product         4    9[COMMON] unsigned long 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  4    0[COMMON] unsigned long 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         8       0       0       0       0
  3829 ;;      Locals:         4       0       0       0       0
  3830 ;;      Temps:          1       0       0       0       0
  3831 ;;      Totals:        13       0       0       0       0
  3832 ;;Total ram usage:       13 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_ReadRTCAsSec
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           
  3842                           ;psect for function ___lmul
  3843  0834                     ___lmul:	
  3844                           
  3845                           ;incstack = 0
  3846                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3847  0834  3000               	movlw	0
  3848  0835  00FC               	movwf	___lmul@product+3
  3849  0836  3000               	movlw	0
  3850  0837  00FB               	movwf	___lmul@product+2
  3851  0838  3000               	movlw	0
  3852  0839  00FA               	movwf	___lmul@product+1
  3853  083A  3000               	movlw	0
  3854  083B  00F9               	movwf	___lmul@product
  3855  083C                     l2621:	
  3856  083C  1C70               	btfss	___lmul@multiplier,0
  3857  083D  2852               	goto	l2625
  3858  083E  0874               	movf	___lmul@multiplicand,w
  3859  083F  07F9               	addwf	___lmul@product,f
  3860  0840  0875               	movf	___lmul@multiplicand+1,w
  3861  0841  1103               	clrz
  3862  0842  1803               	skipnc
  3863  0843  3E01               	addlw	1
  3864  0844  1D03               	btfss	3,2
  3865  0845  07FA               	addwf	___lmul@product+1,f
  3866  0846  0876               	movf	___lmul@multiplicand+2,w
  3867  0847  1103               	clrz
  3868  0848  1803               	skipnc
  3869  0849  3E01               	addlw	1
  3870  084A  1D03               	btfss	3,2
  3871  084B  07FB               	addwf	___lmul@product+2,f
  3872  084C  0877               	movf	___lmul@multiplicand+3,w
  3873  084D  1103               	clrz
  3874  084E  1803               	skipnc
  3875  084F  3E01               	addlw	1
  3876  0850  1D03               	btfss	3,2
  3877  0851  07FC               	addwf	___lmul@product+3,f
  3878  0852                     l2625:	
  3879  0852  3001               	movlw	1
  3880  0853  00F8               	movwf	??___lmul
  3881  0854                     u3965:	
  3882  0854  1003               	clrc
  3883  0855  0DF4               	rlf	___lmul@multiplicand,f
  3884  0856  0DF5               	rlf	___lmul@multiplicand+1,f
  3885  0857  0DF6               	rlf	___lmul@multiplicand+2,f
  3886  0858  0DF7               	rlf	___lmul@multiplicand+3,f
  3887  0859  0BF8               	decfsz	??___lmul,f
  3888  085A  2854               	goto	u3965
  3889  085B  3001               	movlw	1
  3890  085C                     u3975:	
  3891  085C  1003               	clrc
  3892  085D  0CF3               	rrf	___lmul@multiplier+3,f
  3893  085E  0CF2               	rrf	___lmul@multiplier+2,f
  3894  085F  0CF1               	rrf	___lmul@multiplier+1,f
  3895  0860  0CF0               	rrf	___lmul@multiplier,f
  3896  0861  3EFF               	addlw	-1
  3897  0862  1D03               	skipz
  3898  0863  285C               	goto	u3975
  3899  0864  0873               	movf	___lmul@multiplier+3,w
  3900  0865  0472               	iorwf	___lmul@multiplier+2,w
  3901  0866  0471               	iorwf	___lmul@multiplier+1,w
  3902  0867  0470               	iorwf	___lmul@multiplier,w
  3903  0868  1D03               	skipz
  3904  0869  283C               	goto	l2621
  3905  086A  087C               	movf	___lmul@product+3,w
  3906  086B  00F3               	movwf	?___lmul+3
  3907  086C  087B               	movf	___lmul@product+2,w
  3908  086D  00F2               	movwf	?___lmul+2
  3909  086E  087A               	movf	___lmul@product+1,w
  3910  086F  00F1               	movwf	?___lmul+1
  3911  0870  0879               	movf	___lmul@product,w
  3912  0871  00F0               	movwf	?___lmul
  3913  0872  0008               	return
  3914  0873                     __end_of___lmul:	
  3915                           
  3916                           	psect	text13
  3917  08B3                     __ptext13:	
  3918 ;; *************** function _Lcd_Text *****************
  3919 ;; Defined at:
  3920 ;;		line 76 in file "libs/HD44780.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  y               1    wreg     unsigned char 
  3923 ;;  x               1    4[COMMON] unsigned char 
  3924 ;;  buffer          1    5[COMMON] PTR unsigned char 
  3925 ;;		 -> STR_4(2), STR_3(2), STR_2(5), STR_1(5), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  y               1    7[COMMON] unsigned char 
  3928 ;;  data            1    8[COMMON] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3938 ;;      Params:         2       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0
  3940 ;;      Temps:          1       0       0       0       0
  3941 ;;      Totals:         5       0       0       0       0
  3942 ;;Total ram usage:        5 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    2
  3945 ;; This function calls:
  3946 ;;		_Lcd_CharCP
  3947 ;;		_Lcd_Command
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _Lcd_Text
  3955  08B3                     _Lcd_Text:	
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _Lcd_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3959                           ;Lcd_Text@y stored from wreg
  3960  08B3  00F7               	movwf	Lcd_Text@y
  3961                           
  3962                           ;HD44780.c: 77: unsigned char data;
  3963                           ;HD44780.c: 78: switch(y){
  3964  08B4  28C4               	goto	l2939
  3965  08B5                     l2929:	
  3966                           ;HD44780.c: 79: case 1: data = 127 + x; break;
  3967                           
  3968  08B5  0874               	movf	Lcd_Text@x,w
  3969  08B6  3E7F               	addlw	127
  3970  08B7  28C0               	goto	L6
  3971  08B8                     l2931:	
  3972                           ;HD44780.c: 80: case 2: data = 191 + x; break;
  3973                           
  3974  08B8  0874               	movf	Lcd_Text@x,w
  3975  08B9  3EBF               	addlw	191
  3976  08BA  28C0               	goto	L6
  3977  08BB                     l2933:	
  3978                           ;HD44780.c: 81: case 3: data = 147 + x; break;
  3979                           
  3980  08BB  0874               	movf	Lcd_Text@x,w
  3981  08BC  3E93               	addlw	147
  3982  08BD  28C0               	goto	L6
  3983  08BE                     l2935:	
  3984                           ;HD44780.c: 82: case 4: data = 211 + x; break;
  3985                           
  3986  08BE  0874               	movf	Lcd_Text@x,w
  3987  08BF  3ED3               	addlw	211
  3988  08C0                     L6:	
  3989  08C0  00F6               	movwf	??_Lcd_Text
  3990  08C1  0876               	movf	??_Lcd_Text,w
  3991  08C2  00F8               	movwf	Lcd_Text@data
  3992                           
  3993                           ;HD44780.c: 83: default: break;}
  3994  08C3  28D2               	goto	l2941
  3995  08C4                     l2939:	
  3996  08C4  0877               	movf	Lcd_Text@y,w
  3997                           
  3998                           ; Switch size 1, requested type "space"
  3999                           ; Number of cases is 4, Range of values is 1 to 4
  4000                           ; switch strategies available:
  4001                           ; Name         Instructions Cycles
  4002                           ; simple_byte           13     7 (average)
  4003                           ; direct_byte           23    11 (fixed)
  4004                           ; jumptable            263     9 (fixed)
  4005                           ;	Chosen strategy is simple_byte
  4006  08C5  3A01               	xorlw	1	; case 1
  4007  08C6  1903               	skipnz
  4008  08C7  28B5               	goto	l2929
  4009  08C8  3A03               	xorlw	3	; case 2
  4010  08C9  1903               	skipnz
  4011  08CA  28B8               	goto	l2931
  4012  08CB  3A01               	xorlw	1	; case 3
  4013  08CC  1903               	skipnz
  4014  08CD  28BB               	goto	l2933
  4015  08CE  3A07               	xorlw	7	; case 4
  4016  08CF  1903               	skipnz
  4017  08D0  28BE               	goto	l2935
  4018  08D1  28D2               	goto	l2941
  4019  08D2                     l2941:	
  4020                           
  4021                           ;HD44780.c: 84: Lcd_Command(data);
  4022  08D2  0878               	movf	Lcd_Text@data,w
  4023  08D3  120A  158A  26AD  120A  158A  	fcall	_Lcd_Command
  4024  08D8                     l2947:	
  4025                           ;HD44780.c: 85: while(*buffer)
  4026                           
  4027  08D8  0875               	movf	Lcd_Text@buffer,w
  4028  08D9  0084               	movwf	4
  4029  08DA  160A  118A  2000  120A  158A  	fcall	stringdir
  4030  08DF  3A00               	xorlw	0
  4031  08E0  1903               	btfsc	3,2
  4032  08E1  0008               	return
  4033                           
  4034                           ;HD44780.c: 86: {
  4035                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  4036  08E2  0875               	movf	Lcd_Text@buffer,w
  4037  08E3  0084               	movwf	4
  4038  08E4  160A  118A  2000  120A  158A  	fcall	stringdir
  4039  08E9  120A  158A  2754  120A  158A  	fcall	_Lcd_CharCP
  4040                           
  4041                           ;HD44780.c: 88: buffer++;
  4042  08EE  3001               	movlw	1
  4043  08EF  00F6               	movwf	??_Lcd_Text
  4044  08F0  0876               	movf	??_Lcd_Text,w
  4045  08F1  07F5               	addwf	Lcd_Text@buffer,f
  4046  08F2  28D8               	goto	l2947
  4047  08F3                     __end_of_Lcd_Text:	
  4048                           ;HD44780.c: 89: }
  4049                           ;HD44780.c: 90: return;
  4050                           
  4051                           
  4052                           	psect	text14
  4053  0E08                     __ptext14:	
  4054 ;; *************** function _Lcd_Init *****************
  4055 ;; Defined at:
  4056 ;;		line 17 in file "libs/HD44780.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  data            1    5[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       0       0       0       0
  4071 ;;      Locals:         1       0       0       0       0
  4072 ;;      Temps:          1       0       0       0       0
  4073 ;;      Totals:         2       0       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    2
  4077 ;; This function calls:
  4078 ;;		_Lcd_Command
  4079 ;;		_Lcd_Delay5500us
  4080 ;;		_Lcd_Delay5us
  4081 ;; This function is called by:
  4082 ;;		_main
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function _Lcd_Init
  4088  0E08                     _Lcd_Init:	
  4089                           
  4090                           ;HD44780.c: 19: ANSEL = 0x00;
  4091                           
  4092                           ;incstack = 0
  4093                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4094  0E08  1683               	bsf	3,5	;RP0=1, select bank3
  4095  0E09  1703               	bsf	3,6	;RP1=1, select bank3
  4096  0E0A  0188               	clrf	8	;volatile
  4097                           
  4098                           ;HD44780.c: 20: ANSELH = 0x00;
  4099  0E0B  0189               	clrf	9	;volatile
  4100                           
  4101                           ;HD44780.c: 23: unsigned char data;
  4102                           ;HD44780.c: 24: TRISAbits.TRISA5 = 0; TRISAbits.TRISA4 = 0; TRISAbits.TRISA3 = 0; TRISAb
      +                          its.TRISA2 = 0; TRISAbits.TRISA1 = 0; TRISAbits.TRISA0 = 0;
  4103  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  4104  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  4105  0E0E  1285               	bcf	5,5	;volatile
  4106  0E0F  1205               	bcf	5,4	;volatile
  4107  0E10  1185               	bcf	5,3	;volatile
  4108  0E11  1105               	bcf	5,2	;volatile
  4109  0E12  1085               	bcf	5,1	;volatile
  4110  0E13  1005               	bcf	5,0	;volatile
  4111                           
  4112                           ;HD44780.c: 25: RA5 = 0; RA4 = 0; RA3 = 0; RA2 = 0; RA1 = 0; RA0 = 0;
  4113  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4114  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4115  0E16  1285               	bcf	5,5	;volatile
  4116  0E17  1205               	bcf	5,4	;volatile
  4117  0E18  1185               	bcf	5,3	;volatile
  4118  0E19  1105               	bcf	5,2	;volatile
  4119  0E1A  1085               	bcf	5,1	;volatile
  4120  0E1B  1005               	bcf	5,0	;volatile
  4121                           
  4122                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  4123  0E1C  160A  118A  261C  120A  158A  	fcall	_Lcd_Delay5500us
  4124  0E21  160A  118A  261C  120A  158A  	fcall	_Lcd_Delay5500us
  4125  0E26  160A  118A  261C  120A  158A  	fcall	_Lcd_Delay5500us
  4126                           
  4127                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  4128  0E2B  160A  118A  261C  120A  158A  	fcall	_Lcd_Delay5500us
  4129  0E30  160A  118A  261C  120A  158A  	fcall	_Lcd_Delay5500us
  4130  0E35  160A  118A  261C  120A  158A  	fcall	_Lcd_Delay5500us
  4131                           
  4132                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  4133  0E3A  01F5               	clrf	Lcd_Init@data
  4134  0E3B  0AF5               	incf	Lcd_Init@data,f
  4135  0E3C  3004               	movlw	4
  4136  0E3D  0275               	subwf	Lcd_Init@data,w
  4137  0E3E  1803               	btfsc	3,0
  4138  0E3F  2E68               	goto	l209
  4139  0E40                     l208:	
  4140                           
  4141                           ;HD44780.c: 29: {
  4142                           ;HD44780.c: 30: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 0; RA0 = 0;
  4143  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4144  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4145  0E42  1285               	bcf	5,5	;volatile
  4146  0E43  1205               	bcf	5,4	;volatile
  4147  0E44  1585               	bsf	5,3	;volatile
  4148  0E45  1505               	bsf	5,2	;volatile
  4149  0E46  1085               	bcf	5,1	;volatile
  4150  0E47  1005               	bcf	5,0	;volatile
  4151                           
  4152                           ;HD44780.c: 31: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 1; RA0 = 0;
  4153  0E48  1285               	bcf	5,5	;volatile
  4154  0E49  1205               	bcf	5,4	;volatile
  4155  0E4A  1585               	bsf	5,3	;volatile
  4156  0E4B  1505               	bsf	5,2	;volatile
  4157  0E4C  1485               	bsf	5,1	;volatile
  4158  0E4D  1005               	bcf	5,0	;volatile
  4159                           
  4160                           ;HD44780.c: 32: Lcd_Delay5us();
  4161  0E4E  160A  118A  2604  120A  158A  	fcall	_Lcd_Delay5us
  4162                           
  4163                           ;HD44780.c: 33: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 0; RA0 = 0;
  4164  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0E55  1285               	bcf	5,5	;volatile
  4167  0E56  1205               	bcf	5,4	;volatile
  4168  0E57  1585               	bsf	5,3	;volatile
  4169  0E58  1505               	bsf	5,2	;volatile
  4170  0E59  1085               	bcf	5,1	;volatile
  4171  0E5A  1005               	bcf	5,0	;volatile
  4172                           
  4173                           ;HD44780.c: 34: Lcd_Delay5500us();
  4174  0E5B  160A  118A  261C  120A  158A  	fcall	_Lcd_Delay5500us
  4175  0E60  3001               	movlw	1
  4176  0E61  00F4               	movwf	??_Lcd_Init
  4177  0E62  0874               	movf	??_Lcd_Init,w
  4178  0E63  07F5               	addwf	Lcd_Init@data,f
  4179  0E64  3004               	movlw	4
  4180  0E65  0275               	subwf	Lcd_Init@data,w
  4181  0E66  1C03               	skipc
  4182  0E67  2E40               	goto	l208
  4183  0E68                     l209:	
  4184                           
  4185                           ;HD44780.c: 35: }
  4186                           ;HD44780.c: 36: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 0; RA0 = 0;
  4187  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0E6A  1285               	bcf	5,5	;volatile
  4190  0E6B  1205               	bcf	5,4	;volatile
  4191  0E6C  1585               	bsf	5,3	;volatile
  4192  0E6D  1105               	bcf	5,2	;volatile
  4193  0E6E  1085               	bcf	5,1	;volatile
  4194  0E6F  1005               	bcf	5,0	;volatile
  4195                           
  4196                           ;HD44780.c: 37: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 1; RA0 = 0;
  4197  0E70  1285               	bcf	5,5	;volatile
  4198  0E71  1205               	bcf	5,4	;volatile
  4199  0E72  1585               	bsf	5,3	;volatile
  4200  0E73  1105               	bcf	5,2	;volatile
  4201  0E74  1485               	bsf	5,1	;volatile
  4202  0E75  1005               	bcf	5,0	;volatile
  4203                           
  4204                           ;HD44780.c: 38: Lcd_Delay5us();
  4205  0E76  160A  118A  2604  120A  158A  	fcall	_Lcd_Delay5us
  4206                           
  4207                           ;HD44780.c: 39: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 0; RA0 = 0;
  4208  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0E7D  1285               	bcf	5,5	;volatile
  4211  0E7E  1205               	bcf	5,4	;volatile
  4212  0E7F  1585               	bsf	5,3	;volatile
  4213  0E80  1105               	bcf	5,2	;volatile
  4214  0E81  1085               	bcf	5,1	;volatile
  4215  0E82  1005               	bcf	5,0	;volatile
  4216                           
  4217                           ;HD44780.c: 40: Lcd_Delay5500us();
  4218  0E83  160A  118A  261C  120A  158A  	fcall	_Lcd_Delay5500us
  4219                           
  4220                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  4221  0E88  3028               	movlw	40
  4222  0E89  00F4               	movwf	??_Lcd_Init
  4223  0E8A  0874               	movf	??_Lcd_Init,w
  4224  0E8B  00F5               	movwf	Lcd_Init@data
  4225  0E8C  0875               	movf	Lcd_Init@data,w
  4226  0E8D  120A  158A  26AD  120A  158A  	fcall	_Lcd_Command
  4227                           
  4228                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  4229  0E92  3010               	movlw	16
  4230  0E93  00F4               	movwf	??_Lcd_Init
  4231  0E94  0874               	movf	??_Lcd_Init,w
  4232  0E95  00F5               	movwf	Lcd_Init@data
  4233  0E96  0875               	movf	Lcd_Init@data,w
  4234  0E97  120A  158A  26AD  120A  158A  	fcall	_Lcd_Command
  4235                           
  4236                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  4237  0E9C  01F5               	clrf	Lcd_Init@data
  4238  0E9D  0AF5               	incf	Lcd_Init@data,f
  4239  0E9E  0875               	movf	Lcd_Init@data,w
  4240  0E9F  120A  158A  26AD  120A  158A  	fcall	_Lcd_Command
  4241                           
  4242                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  4243  0EA4  300F               	movlw	15
  4244  0EA5  00F4               	movwf	??_Lcd_Init
  4245  0EA6  0874               	movf	??_Lcd_Init,w
  4246  0EA7  00F5               	movwf	Lcd_Init@data
  4247  0EA8  0875               	movf	Lcd_Init@data,w
  4248  0EA9  120A  158A  26AD   	fcall	_Lcd_Command
  4249  0EAC  0008               	return
  4250  0EAD                     __end_of_Lcd_Init:	
  4251                           
  4252                           	psect	text15
  4253  1754                     __ptext15:	
  4254 ;; *************** function _I2C_Master_Init *****************
  4255 ;; Defined at:
  4256 ;;		line 3 in file "libs/gsk_i2c.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  c               4    0[BANK0 ] const unsigned long 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4270 ;;      Params:         0       4       0       0       0
  4271 ;;      Locals:         0       0       0       0       0
  4272 ;;      Temps:          0       4       0       0       0
  4273 ;;      Totals:         0       8       0       0       0
  4274 ;;Total ram usage:        8 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    1
  4277 ;; This function calls:
  4278 ;;		___lldiv
  4279 ;; This function is called by:
  4280 ;;		_main
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           
  4285                           ;psect for function _I2C_Master_Init
  4286  1754                     _I2C_Master_Init:	
  4287                           
  4288                           ;gsk_i2c.c: 5: SSPCON = 0b00101000;
  4289                           
  4290                           ;incstack = 0
  4291                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4292  1754  3028               	movlw	40
  4293  1755  1283               	bcf	3,5	;RP0=0, select bank0
  4294  1756  1303               	bcf	3,6	;RP1=0, select bank0
  4295  1757  0094               	movwf	20	;volatile
  4296                           
  4297                           ;gsk_i2c.c: 6: SSPCON2 = 0;
  4298  1758  1683               	bsf	3,5	;RP0=1, select bank1
  4299  1759  1303               	bcf	3,6	;RP1=0, select bank1
  4300  175A  0191               	clrf	17	;volatile
  4301                           
  4302                           ;gsk_i2c.c: 7: SSPADD = (4000000/(4*c))-1;
  4303  175B  1283               	bcf	3,5	;RP0=0, select bank0
  4304  175C  1303               	bcf	3,6	;RP1=0, select bank0
  4305  175D  0820               	movf	I2C_Master_Init@c,w
  4306  175E  00A4               	movwf	??_I2C_Master_Init
  4307  175F  0821               	movf	I2C_Master_Init@c+1,w
  4308  1760  00A5               	movwf	??_I2C_Master_Init+1
  4309  1761  0822               	movf	I2C_Master_Init@c+2,w
  4310  1762  00A6               	movwf	??_I2C_Master_Init+2
  4311  1763  0823               	movf	I2C_Master_Init@c+3,w
  4312  1764  00A7               	movwf	??_I2C_Master_Init+3
  4313  1765  3002               	movlw	2
  4314  1766                     u4415:	
  4315  1766  1003               	clrc
  4316  1767  0DA4               	rlf	??_I2C_Master_Init,f
  4317  1768  0DA5               	rlf	??_I2C_Master_Init+1,f
  4318  1769  0DA6               	rlf	??_I2C_Master_Init+2,f
  4319  176A  0DA7               	rlf	??_I2C_Master_Init+3,f
  4320  176B  3EFF               	addlw	-1
  4321  176C  1D03               	skipz
  4322  176D  2F66               	goto	u4415
  4323  176E  0827               	movf	??_I2C_Master_Init+3,w
  4324  176F  00F3               	movwf	___lldiv@divisor+3
  4325  1770  0826               	movf	??_I2C_Master_Init+2,w
  4326  1771  00F2               	movwf	___lldiv@divisor+2
  4327  1772  0825               	movf	??_I2C_Master_Init+1,w
  4328  1773  00F1               	movwf	___lldiv@divisor+1
  4329  1774  0824               	movf	??_I2C_Master_Init,w
  4330  1775  00F0               	movwf	___lldiv@divisor
  4331  1776  3000               	movlw	0
  4332  1777  00F7               	movwf	___lldiv@dividend+3
  4333  1778  303D               	movlw	61
  4334  1779  00F6               	movwf	___lldiv@dividend+2
  4335  177A  3009               	movlw	9
  4336  177B  00F5               	movwf	___lldiv@dividend+1
  4337  177C  3000               	movlw	0
  4338  177D  00F4               	movwf	___lldiv@dividend
  4339  177E  120A  158A  228A   	fcall	___lldiv
  4340  1781  0870               	movf	?___lldiv,w
  4341  1782  3EFF               	addlw	255
  4342  1783  1683               	bsf	3,5	;RP0=1, select bank1
  4343  1784  1303               	bcf	3,6	;RP1=0, select bank1
  4344  1785  0093               	movwf	19	;volatile
  4345                           
  4346                           ;gsk_i2c.c: 8: SSPSTAT = 0;
  4347  1786  0194               	clrf	20	;volatile
  4348                           
  4349                           ;gsk_i2c.c: 9: TRISC3 = 1;
  4350  1787  1587               	bsf	7,3	;volatile
  4351                           
  4352                           ;gsk_i2c.c: 10: TRISC4 = 1;
  4353  1788  1607               	bsf	7,4	;volatile
  4354  1789  0008               	return
  4355  178A                     __end_of_I2C_Master_Init:	
  4356                           
  4357                           	psect	text16
  4358  0A8A                     __ptext16:	
  4359 ;; *************** function ___lldiv *****************
  4360 ;; Defined at:
  4361 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  divisor         4    0[COMMON] unsigned long 
  4364 ;;  dividend        4    4[COMMON] unsigned long 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  quotient        4    9[COMMON] unsigned long 
  4367 ;;  counter         1   13[COMMON] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  4    0[COMMON] unsigned long 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4377 ;;      Params:         8       0       0       0       0
  4378 ;;      Locals:         5       0       0       0       0
  4379 ;;      Temps:          1       0       0       0       0
  4380 ;;      Totals:        14       0       0       0       0
  4381 ;;Total ram usage:       14 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_I2C_Master_Init
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           
  4391                           ;psect for function ___lldiv
  4392  0A8A                     ___lldiv:	
  4393                           
  4394                           ;incstack = 0
  4395                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4396  0A8A  3000               	movlw	0
  4397  0A8B  00FC               	movwf	___lldiv@quotient+3
  4398  0A8C  3000               	movlw	0
  4399  0A8D  00FB               	movwf	___lldiv@quotient+2
  4400  0A8E  3000               	movlw	0
  4401  0A8F  00FA               	movwf	___lldiv@quotient+1
  4402  0A90  3000               	movlw	0
  4403  0A91  00F9               	movwf	___lldiv@quotient
  4404  0A92  0873               	movf	___lldiv@divisor+3,w
  4405  0A93  0472               	iorwf	___lldiv@divisor+2,w
  4406  0A94  0471               	iorwf	___lldiv@divisor+1,w
  4407  0A95  0470               	iorwf	___lldiv@divisor,w
  4408  0A96  1903               	skipnz
  4409  0A97  2ADF               	goto	l2797
  4410  0A98  01FD               	clrf	___lldiv@counter
  4411  0A99  0AFD               	incf	___lldiv@counter,f
  4412  0A9A                     l2783:	
  4413  0A9A  1BF3               	btfsc	___lldiv@divisor+3,7
  4414  0A9B  2AAA               	goto	l2785
  4415  0A9C  3001               	movlw	1
  4416  0A9D  00F8               	movwf	??___lldiv
  4417  0A9E                     u4335:	
  4418  0A9E  1003               	clrc
  4419  0A9F  0DF0               	rlf	___lldiv@divisor,f
  4420  0AA0  0DF1               	rlf	___lldiv@divisor+1,f
  4421  0AA1  0DF2               	rlf	___lldiv@divisor+2,f
  4422  0AA2  0DF3               	rlf	___lldiv@divisor+3,f
  4423  0AA3  0BF8               	decfsz	??___lldiv,f
  4424  0AA4  2A9E               	goto	u4335
  4425  0AA5  3001               	movlw	1
  4426  0AA6  00F8               	movwf	??___lldiv
  4427  0AA7  0878               	movf	??___lldiv,w
  4428  0AA8  07FD               	addwf	___lldiv@counter,f
  4429  0AA9  2A9A               	goto	l2783
  4430  0AAA                     l2785:	
  4431  0AAA  3001               	movlw	1
  4432  0AAB  00F8               	movwf	??___lldiv
  4433  0AAC                     u4355:	
  4434  0AAC  1003               	clrc
  4435  0AAD  0DF9               	rlf	___lldiv@quotient,f
  4436  0AAE  0DFA               	rlf	___lldiv@quotient+1,f
  4437  0AAF  0DFB               	rlf	___lldiv@quotient+2,f
  4438  0AB0  0DFC               	rlf	___lldiv@quotient+3,f
  4439  0AB1  0BF8               	decfsz	??___lldiv,f
  4440  0AB2  2AAC               	goto	u4355
  4441  0AB3  0873               	movf	___lldiv@divisor+3,w
  4442  0AB4  0277               	subwf	___lldiv@dividend+3,w
  4443  0AB5  1D03               	skipz
  4444  0AB6  2AC1               	goto	u4365
  4445  0AB7  0872               	movf	___lldiv@divisor+2,w
  4446  0AB8  0276               	subwf	___lldiv@dividend+2,w
  4447  0AB9  1D03               	skipz
  4448  0ABA  2AC1               	goto	u4365
  4449  0ABB  0871               	movf	___lldiv@divisor+1,w
  4450  0ABC  0275               	subwf	___lldiv@dividend+1,w
  4451  0ABD  1D03               	skipz
  4452  0ABE  2AC1               	goto	u4365
  4453  0ABF  0870               	movf	___lldiv@divisor,w
  4454  0AC0  0274               	subwf	___lldiv@dividend,w
  4455  0AC1                     u4365:	
  4456  0AC1  1C03               	skipc
  4457  0AC2  2AD2               	goto	l2793
  4458  0AC3  0870               	movf	___lldiv@divisor,w
  4459  0AC4  02F4               	subwf	___lldiv@dividend,f
  4460  0AC5  0871               	movf	___lldiv@divisor+1,w
  4461  0AC6  1C03               	skipc
  4462  0AC7  0F71               	incfsz	___lldiv@divisor+1,w
  4463  0AC8  02F5               	subwf	___lldiv@dividend+1,f
  4464  0AC9  0872               	movf	___lldiv@divisor+2,w
  4465  0ACA  1C03               	skipc
  4466  0ACB  0F72               	incfsz	___lldiv@divisor+2,w
  4467  0ACC  02F6               	subwf	___lldiv@dividend+2,f
  4468  0ACD  0873               	movf	___lldiv@divisor+3,w
  4469  0ACE  1C03               	skipc
  4470  0ACF  0F73               	incfsz	___lldiv@divisor+3,w
  4471  0AD0  02F7               	subwf	___lldiv@dividend+3,f
  4472  0AD1  1479               	bsf	___lldiv@quotient,0
  4473  0AD2                     l2793:	
  4474  0AD2  3001               	movlw	1
  4475  0AD3                     u4375:	
  4476  0AD3  1003               	clrc
  4477  0AD4  0CF3               	rrf	___lldiv@divisor+3,f
  4478  0AD5  0CF2               	rrf	___lldiv@divisor+2,f
  4479  0AD6  0CF1               	rrf	___lldiv@divisor+1,f
  4480  0AD7  0CF0               	rrf	___lldiv@divisor,f
  4481  0AD8  3EFF               	addlw	-1
  4482  0AD9  1D03               	skipz
  4483  0ADA  2AD3               	goto	u4375
  4484  0ADB  3001               	movlw	1
  4485  0ADC  02FD               	subwf	___lldiv@counter,f
  4486  0ADD  1D03               	btfss	3,2
  4487  0ADE  2AAA               	goto	l2785
  4488  0ADF                     l2797:	
  4489  0ADF  087C               	movf	___lldiv@quotient+3,w
  4490  0AE0  00F3               	movwf	?___lldiv+3
  4491  0AE1  087B               	movf	___lldiv@quotient+2,w
  4492  0AE2  00F2               	movwf	?___lldiv+2
  4493  0AE3  087A               	movf	___lldiv@quotient+1,w
  4494  0AE4  00F1               	movwf	?___lldiv+1
  4495  0AE5  0879               	movf	___lldiv@quotient,w
  4496  0AE6  00F0               	movwf	?___lldiv
  4497  0AE7  0008               	return
  4498  0AE8                     __end_of___lldiv:	
  4499                           
  4500                           	psect	text17
  4501  0079                     __ptext17:	
  4502 ;; *************** function _DisplayTimeFromRTC *****************
  4503 ;; Defined at:
  4504 ;;		line 78 in file "libs/gsk_i2c.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  y               1    wreg     unsigned char 
  4507 ;;  x               1   16[BANK0 ] unsigned char 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  y               1   20[BANK0 ] unsigned char 
  4510 ;;  TempVar000      1   21[BANK0 ] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4520 ;;      Params:         0       1       0       0       0
  4521 ;;      Locals:         0       2       0       0       0
  4522 ;;      Temps:          0       3       0       0       0
  4523 ;;      Totals:         0       6       0       0       0
  4524 ;;Total ram usage:        6 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    3
  4527 ;; This function calls:
  4528 ;;		_I2C_ReadAtAddress
  4529 ;;		_Lcd_Int
  4530 ;; This function is called by:
  4531 ;;		_main
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _DisplayTimeFromRTC
  4537  0079                     _DisplayTimeFromRTC:	
  4538                           
  4539                           ;incstack = 0
  4540                           ; Regs used in _DisplayTimeFromRTC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4541                           ;DisplayTimeFromRTC@y stored from wreg
  4542  0079  1283               	bcf	3,5	;RP0=0, select bank0
  4543  007A  1303               	bcf	3,6	;RP1=0, select bank0
  4544  007B  00B4               	movwf	DisplayTimeFromRTC@y
  4545                           
  4546                           ;gsk_i2c.c: 79: char TempVar000;
  4547                           ;gsk_i2c.c: 80: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
  4548  007C  3002               	movlw	2
  4549  007D  00B1               	movwf	??_DisplayTimeFromRTC
  4550  007E  0831               	movf	??_DisplayTimeFromRTC,w
  4551  007F  00F6               	movwf	I2C_ReadAtAddress@IntAdd
  4552  0080  30DE               	movlw	222
  4553  0081  120A  158A  20F3  120A  118A  	fcall	_I2C_ReadAtAddress
  4554  0086  1283               	bcf	3,5	;RP0=0, select bank0
  4555  0087  1303               	bcf	3,6	;RP1=0, select bank0
  4556  0088  00B2               	movwf	??_DisplayTimeFromRTC+1
  4557  0089  0832               	movf	??_DisplayTimeFromRTC+1,w
  4558  008A  00B5               	movwf	DisplayTimeFromRTC@TempVar000
  4559                           
  4560                           ;gsk_i2c.c: 81: Lcd_Int(y,x,(TempVar000>>4) & 0x03 ,1);
  4561  008B  0830               	movf	DisplayTimeFromRTC@x,w
  4562  008C  00B1               	movwf	??_DisplayTimeFromRTC
  4563  008D  0831               	movf	??_DisplayTimeFromRTC,w
  4564  008E  00A7               	movwf	Lcd_Int@x
  4565  008F  0835               	movf	DisplayTimeFromRTC@TempVar000,w
  4566  0090  00B2               	movwf	??_DisplayTimeFromRTC+1
  4567  0091  3004               	movlw	4
  4568  0092                     u4515:	
  4569  0092  1003               	clrc
  4570  0093  0CB2               	rrf	??_DisplayTimeFromRTC+1,f
  4571  0094  3EFF               	addlw	-1
  4572  0095  1D03               	skipz
  4573  0096  2892               	goto	u4515
  4574  0097  0832               	movf	??_DisplayTimeFromRTC+1,w
  4575  0098  3903               	andlw	3
  4576  0099  00B3               	movwf	??_DisplayTimeFromRTC+2
  4577  009A  0833               	movf	??_DisplayTimeFromRTC+2,w
  4578  009B  00A8               	movwf	Lcd_Int@val
  4579  009C  01A9               	clrf	Lcd_Int@size
  4580  009D  0AA9               	incf	Lcd_Int@size,f
  4581  009E  0834               	movf	DisplayTimeFromRTC@y,w
  4582  009F  120A  118A  229B  120A  118A  	fcall	_Lcd_Int
  4583                           
  4584                           ;gsk_i2c.c: 82: Lcd_Int(y,x+1,TempVar000 & 0x0f ,1);
  4585  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  4586  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  4587  00A6  0830               	movf	DisplayTimeFromRTC@x,w
  4588  00A7  3E01               	addlw	1
  4589  00A8  00B1               	movwf	??_DisplayTimeFromRTC
  4590  00A9  0831               	movf	??_DisplayTimeFromRTC,w
  4591  00AA  00A7               	movwf	Lcd_Int@x
  4592  00AB  0835               	movf	DisplayTimeFromRTC@TempVar000,w
  4593  00AC  390F               	andlw	15
  4594  00AD  00B2               	movwf	??_DisplayTimeFromRTC+1
  4595  00AE  0832               	movf	??_DisplayTimeFromRTC+1,w
  4596  00AF  00A8               	movwf	Lcd_Int@val
  4597  00B0  01A9               	clrf	Lcd_Int@size
  4598  00B1  0AA9               	incf	Lcd_Int@size,f
  4599  00B2  0834               	movf	DisplayTimeFromRTC@y,w
  4600  00B3  120A  118A  229B  120A  118A  	fcall	_Lcd_Int
  4601                           
  4602                           ;gsk_i2c.c: 83: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
  4603  00B8  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  4604  00B9  0AF6               	incf	I2C_ReadAtAddress@IntAdd,f
  4605  00BA  30DE               	movlw	222
  4606  00BB  120A  158A  20F3  120A  118A  	fcall	_I2C_ReadAtAddress
  4607  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  4608  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  4609  00C2  00B1               	movwf	??_DisplayTimeFromRTC
  4610  00C3  0831               	movf	??_DisplayTimeFromRTC,w
  4611  00C4  00B5               	movwf	DisplayTimeFromRTC@TempVar000
  4612                           
  4613                           ;gsk_i2c.c: 84: Lcd_Int(y,x+2,(TempVar000>>4) & 0x07 ,1);
  4614  00C5  0830               	movf	DisplayTimeFromRTC@x,w
  4615  00C6  3E02               	addlw	2
  4616  00C7  00B1               	movwf	??_DisplayTimeFromRTC
  4617  00C8  0831               	movf	??_DisplayTimeFromRTC,w
  4618  00C9  00A7               	movwf	Lcd_Int@x
  4619  00CA  0835               	movf	DisplayTimeFromRTC@TempVar000,w
  4620  00CB  00B2               	movwf	??_DisplayTimeFromRTC+1
  4621  00CC  3004               	movlw	4
  4622  00CD                     u4525:	
  4623  00CD  1003               	clrc
  4624  00CE  0CB2               	rrf	??_DisplayTimeFromRTC+1,f
  4625  00CF  3EFF               	addlw	-1
  4626  00D0  1D03               	skipz
  4627  00D1  28CD               	goto	u4525
  4628  00D2  0832               	movf	??_DisplayTimeFromRTC+1,w
  4629  00D3  3907               	andlw	7
  4630  00D4  00B3               	movwf	??_DisplayTimeFromRTC+2
  4631  00D5  0833               	movf	??_DisplayTimeFromRTC+2,w
  4632  00D6  00A8               	movwf	Lcd_Int@val
  4633  00D7  01A9               	clrf	Lcd_Int@size
  4634  00D8  0AA9               	incf	Lcd_Int@size,f
  4635  00D9  0834               	movf	DisplayTimeFromRTC@y,w
  4636  00DA  120A  118A  229B  120A  118A  	fcall	_Lcd_Int
  4637                           
  4638                           ;gsk_i2c.c: 85: Lcd_Int(y,x+3,TempVar000 & 0x0f ,1);
  4639  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  4640  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  4641  00E1  0830               	movf	DisplayTimeFromRTC@x,w
  4642  00E2  3E03               	addlw	3
  4643  00E3  00B1               	movwf	??_DisplayTimeFromRTC
  4644  00E4  0831               	movf	??_DisplayTimeFromRTC,w
  4645  00E5  00A7               	movwf	Lcd_Int@x
  4646  00E6  0835               	movf	DisplayTimeFromRTC@TempVar000,w
  4647  00E7  390F               	andlw	15
  4648  00E8  00B2               	movwf	??_DisplayTimeFromRTC+1
  4649  00E9  0832               	movf	??_DisplayTimeFromRTC+1,w
  4650  00EA  00A8               	movwf	Lcd_Int@val
  4651  00EB  01A9               	clrf	Lcd_Int@size
  4652  00EC  0AA9               	incf	Lcd_Int@size,f
  4653  00ED  0834               	movf	DisplayTimeFromRTC@y,w
  4654  00EE  120A  118A  229B  120A  118A  	fcall	_Lcd_Int
  4655                           
  4656                           ;gsk_i2c.c: 86: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
  4657  00F3  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  4658  00F4  30DE               	movlw	222
  4659  00F5  120A  158A  20F3  120A  118A  	fcall	_I2C_ReadAtAddress
  4660  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  4661  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  4662  00FC  00B1               	movwf	??_DisplayTimeFromRTC
  4663  00FD  0831               	movf	??_DisplayTimeFromRTC,w
  4664  00FE  00B5               	movwf	DisplayTimeFromRTC@TempVar000
  4665                           
  4666                           ;gsk_i2c.c: 87: Lcd_Int(y,x+4,(TempVar000>>4) & 0x07 ,1);
  4667  00FF  0830               	movf	DisplayTimeFromRTC@x,w
  4668  0100  3E04               	addlw	4
  4669  0101  00B1               	movwf	??_DisplayTimeFromRTC
  4670  0102  0831               	movf	??_DisplayTimeFromRTC,w
  4671  0103  00A7               	movwf	Lcd_Int@x
  4672  0104  0835               	movf	DisplayTimeFromRTC@TempVar000,w
  4673  0105  00B2               	movwf	??_DisplayTimeFromRTC+1
  4674  0106  3004               	movlw	4
  4675  0107                     u4535:	
  4676  0107  1003               	clrc
  4677  0108  0CB2               	rrf	??_DisplayTimeFromRTC+1,f
  4678  0109  3EFF               	addlw	-1
  4679  010A  1D03               	skipz
  4680  010B  2907               	goto	u4535
  4681  010C  0832               	movf	??_DisplayTimeFromRTC+1,w
  4682  010D  3907               	andlw	7
  4683  010E  00B3               	movwf	??_DisplayTimeFromRTC+2
  4684  010F  0833               	movf	??_DisplayTimeFromRTC+2,w
  4685  0110  00A8               	movwf	Lcd_Int@val
  4686  0111  01A9               	clrf	Lcd_Int@size
  4687  0112  0AA9               	incf	Lcd_Int@size,f
  4688  0113  0834               	movf	DisplayTimeFromRTC@y,w
  4689  0114  120A  118A  229B  120A  118A  	fcall	_Lcd_Int
  4690                           
  4691                           ;gsk_i2c.c: 88: Lcd_Int(y,x+5,TempVar000 & 0x0f ,1);
  4692  0119  1283               	bcf	3,5	;RP0=0, select bank0
  4693  011A  1303               	bcf	3,6	;RP1=0, select bank0
  4694  011B  0830               	movf	DisplayTimeFromRTC@x,w
  4695  011C  3E05               	addlw	5
  4696  011D  00B1               	movwf	??_DisplayTimeFromRTC
  4697  011E  0831               	movf	??_DisplayTimeFromRTC,w
  4698  011F  00A7               	movwf	Lcd_Int@x
  4699  0120  0835               	movf	DisplayTimeFromRTC@TempVar000,w
  4700  0121  390F               	andlw	15
  4701  0122  00B2               	movwf	??_DisplayTimeFromRTC+1
  4702  0123  0832               	movf	??_DisplayTimeFromRTC+1,w
  4703  0124  00A8               	movwf	Lcd_Int@val
  4704  0125  01A9               	clrf	Lcd_Int@size
  4705  0126  0AA9               	incf	Lcd_Int@size,f
  4706  0127  0834               	movf	DisplayTimeFromRTC@y,w
  4707  0128  120A  118A  229B   	fcall	_Lcd_Int
  4708  012B  0008               	return
  4709  012C                     __end_of_DisplayTimeFromRTC:	
  4710                           
  4711                           	psect	text18
  4712  029B                     __ptext18:	
  4713 ;; *************** function _Lcd_Int *****************
  4714 ;; Defined at:
  4715 ;;		line 156 in file "libs/HD44780.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  y               1    wreg     unsigned char 
  4718 ;;  x               1    7[BANK0 ] unsigned char 
  4719 ;;  val             1    8[BANK0 ] unsigned char 
  4720 ;;  size            1    9[BANK0 ] unsigned char 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  y               1   12[BANK0 ] unsigned char 
  4723 ;;  tempVal         2   14[BANK0 ] unsigned int 
  4724 ;;  data            1   13[BANK0 ] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4734 ;;      Params:         0       3       0       0       0
  4735 ;;      Locals:         0       4       0       0       0
  4736 ;;      Temps:          0       2       0       0       0
  4737 ;;      Totals:         0       9       0       0       0
  4738 ;;Total ram usage:        9 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    2
  4741 ;; This function calls:
  4742 ;;		_Lcd_CharCP
  4743 ;;		_Lcd_Command
  4744 ;;		___awdiv
  4745 ;;		___bmul
  4746 ;;		___lwdiv
  4747 ;;		___wmul
  4748 ;; This function is called by:
  4749 ;;		_DisplayTimeFromRTC
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           
  4754                           ;psect for function _Lcd_Int
  4755  029B                     _Lcd_Int:	
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in _Lcd_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4759                           ;Lcd_Int@y stored from wreg
  4760  029B  1283               	bcf	3,5	;RP0=0, select bank0
  4761  029C  1303               	bcf	3,6	;RP1=0, select bank0
  4762  029D  00AC               	movwf	Lcd_Int@y
  4763                           
  4764                           ;HD44780.c: 157: if ((size>0) && (size<=3)) {
  4765  029E  0829               	movf	Lcd_Int@size,w
  4766  029F  1903               	btfsc	3,2
  4767  02A0  0008               	return
  4768  02A1  3004               	movlw	4
  4769  02A2  0229               	subwf	Lcd_Int@size,w
  4770  02A3  1803               	skipnc
  4771  02A4  0008               	return
  4772                           
  4773                           ;HD44780.c: 158: unsigned int tempVal=val;
  4774  02A5  0828               	movf	Lcd_Int@val,w
  4775  02A6  00AA               	movwf	??_Lcd_Int
  4776  02A7  01AB               	clrf	??_Lcd_Int+1
  4777  02A8  082A               	movf	??_Lcd_Int,w
  4778  02A9  00AE               	movwf	Lcd_Int@tempVal
  4779  02AA  082B               	movf	??_Lcd_Int+1,w
  4780  02AB  00AF               	movwf	Lcd_Int@tempVal+1
  4781                           
  4782                           ;HD44780.c: 159: unsigned char data;
  4783                           ;HD44780.c: 160: switch(y){
  4784  02AC  2ABC               	goto	l2597
  4785  02AD                     l2587:	
  4786                           ;HD44780.c: 161: case 1: data = 127 + x; break;
  4787                           
  4788  02AD  0827               	movf	Lcd_Int@x,w
  4789  02AE  3E7F               	addlw	127
  4790  02AF  2AB8               	goto	L9
  4791  02B0                     l2589:	
  4792                           ;HD44780.c: 162: case 2: data = 191 + x; break;
  4793                           
  4794  02B0  0827               	movf	Lcd_Int@x,w
  4795  02B1  3EBF               	addlw	191
  4796  02B2  2AB8               	goto	L9
  4797  02B3                     l2591:	
  4798                           ;HD44780.c: 163: case 3: data = 147 + x; break;
  4799                           
  4800  02B3  0827               	movf	Lcd_Int@x,w
  4801  02B4  3E93               	addlw	147
  4802  02B5  2AB8               	goto	L9
  4803  02B6                     l2593:	
  4804                           ;HD44780.c: 164: case 4: data = 211 + x; break;
  4805                           
  4806  02B6  0827               	movf	Lcd_Int@x,w
  4807  02B7  3ED3               	addlw	211
  4808  02B8                     L9:	
  4809  02B8  00AA               	movwf	??_Lcd_Int
  4810  02B9  082A               	movf	??_Lcd_Int,w
  4811  02BA  00AD               	movwf	Lcd_Int@data
  4812                           
  4813                           ;HD44780.c: 165: default: break;}
  4814  02BB  2ACA               	goto	l2599
  4815  02BC                     l2597:	
  4816  02BC  082C               	movf	Lcd_Int@y,w
  4817                           
  4818                           ; Switch size 1, requested type "space"
  4819                           ; Number of cases is 4, Range of values is 1 to 4
  4820                           ; switch strategies available:
  4821                           ; Name         Instructions Cycles
  4822                           ; simple_byte           13     7 (average)
  4823                           ; direct_byte           23    11 (fixed)
  4824                           ; jumptable            263     9 (fixed)
  4825                           ;	Chosen strategy is simple_byte
  4826  02BD  3A01               	xorlw	1	; case 1
  4827  02BE  1903               	skipnz
  4828  02BF  2AAD               	goto	l2587
  4829  02C0  3A03               	xorlw	3	; case 2
  4830  02C1  1903               	skipnz
  4831  02C2  2AB0               	goto	l2589
  4832  02C3  3A01               	xorlw	1	; case 3
  4833  02C4  1903               	skipnz
  4834  02C5  2AB3               	goto	l2591
  4835  02C6  3A07               	xorlw	7	; case 4
  4836  02C7  1903               	skipnz
  4837  02C8  2AB6               	goto	l2593
  4838  02C9  2ACA               	goto	l2599
  4839  02CA                     l2599:	
  4840                           
  4841                           ;HD44780.c: 166: Lcd_Command(data);
  4842  02CA  082D               	movf	Lcd_Int@data,w
  4843  02CB  120A  158A  26AD  120A  118A  	fcall	_Lcd_Command
  4844                           
  4845                           ;HD44780.c: 167: if (size>=3){
  4846  02D0  3003               	movlw	3
  4847  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  4848  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  4849  02D3  0229               	subwf	Lcd_Int@size,w
  4850  02D4  1C03               	skipc
  4851  02D5  2AF3               	goto	l2605
  4852                           
  4853                           ;HD44780.c: 168: tempVal = val/100;
  4854  02D6  3064               	movlw	100
  4855  02D7  00F0               	movwf	___awdiv@divisor
  4856  02D8  3000               	movlw	0
  4857  02D9  00F1               	movwf	___awdiv@divisor+1
  4858  02DA  0828               	movf	Lcd_Int@val,w
  4859  02DB  00AA               	movwf	??_Lcd_Int
  4860  02DC  01AB               	clrf	??_Lcd_Int+1
  4861  02DD  082A               	movf	??_Lcd_Int,w
  4862  02DE  00F2               	movwf	___awdiv@dividend
  4863  02DF  082B               	movf	??_Lcd_Int+1,w
  4864  02E0  00F3               	movwf	___awdiv@dividend+1
  4865  02E1  120A  158A  21D6  120A  118A  	fcall	___awdiv
  4866  02E6  0871               	movf	?___awdiv+1,w
  4867  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  4868  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  4869  02E9  00AF               	movwf	Lcd_Int@tempVal+1
  4870  02EA  0870               	movf	?___awdiv,w
  4871  02EB  00AE               	movwf	Lcd_Int@tempVal
  4872                           
  4873                           ;HD44780.c: 169: Lcd_CharCP(0x30+(tempVal));
  4874  02EC  082E               	movf	Lcd_Int@tempVal,w
  4875  02ED  3E30               	addlw	48
  4876  02EE  120A  158A  2754  120A  118A  	fcall	_Lcd_CharCP
  4877  02F3                     l2605:	
  4878                           
  4879                           ;HD44780.c: 170: }
  4880                           ;HD44780.c: 171: if (size>=2){
  4881  02F3  3002               	movlw	2
  4882  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  4883  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  4884  02F6  0229               	subwf	Lcd_Int@size,w
  4885  02F7  1C03               	skipc
  4886  02F8  2B2C               	goto	l2609
  4887                           
  4888                           ;HD44780.c: 172: tempVal = (val-tempVal*100)/10;
  4889  02F9  300A               	movlw	10
  4890  02FA  00F6               	movwf	___lwdiv@divisor
  4891  02FB  3000               	movlw	0
  4892  02FC  00F7               	movwf	___lwdiv@divisor+1
  4893  02FD  082F               	movf	Lcd_Int@tempVal+1,w
  4894  02FE  00F1               	movwf	___wmul@multiplier+1
  4895  02FF  082E               	movf	Lcd_Int@tempVal,w
  4896  0300  00F0               	movwf	___wmul@multiplier
  4897  0301  3064               	movlw	100
  4898  0302  00F2               	movwf	___wmul@multiplicand
  4899  0303  3000               	movlw	0
  4900  0304  00F3               	movwf	___wmul@multiplicand+1
  4901  0305  160A  118A  267D  120A  118A  	fcall	___wmul
  4902  030A  0970               	comf	?___wmul,w
  4903  030B  1283               	bcf	3,5	;RP0=0, select bank0
  4904  030C  1303               	bcf	3,6	;RP1=0, select bank0
  4905  030D  00AA               	movwf	??_Lcd_Int
  4906  030E  0971               	comf	?___wmul+1,w
  4907  030F  00AB               	movwf	??_Lcd_Int+1
  4908  0310  0AAA               	incf	??_Lcd_Int,f
  4909  0311  1903               	skipnz
  4910  0312  0AAB               	incf	??_Lcd_Int+1,f
  4911  0313  0828               	movf	Lcd_Int@val,w
  4912  0314  072A               	addwf	??_Lcd_Int,w
  4913  0315  00F8               	movwf	___lwdiv@dividend
  4914  0316  082B               	movf	??_Lcd_Int+1,w
  4915  0317  1803               	skipnc
  4916  0318  0A2B               	incf	??_Lcd_Int+1,w
  4917  0319  00F9               	movwf	___lwdiv@dividend+1
  4918  031A  160A  118A  27C4  120A  118A  	fcall	___lwdiv
  4919  031F  0877               	movf	?___lwdiv+1,w
  4920  0320  1283               	bcf	3,5	;RP0=0, select bank0
  4921  0321  1303               	bcf	3,6	;RP1=0, select bank0
  4922  0322  00AF               	movwf	Lcd_Int@tempVal+1
  4923  0323  0876               	movf	?___lwdiv,w
  4924  0324  00AE               	movwf	Lcd_Int@tempVal
  4925                           
  4926                           ;HD44780.c: 173: Lcd_CharCP(0x30+(tempVal));
  4927  0325  082E               	movf	Lcd_Int@tempVal,w
  4928  0326  3E30               	addlw	48
  4929  0327  120A  158A  2754  120A  118A  	fcall	_Lcd_CharCP
  4930  032C                     l2609:	
  4931                           
  4932                           ;HD44780.c: 174: }
  4933                           ;HD44780.c: 175: if (size>=1){
  4934  032C  1283               	bcf	3,5	;RP0=0, select bank0
  4935  032D  1303               	bcf	3,6	;RP1=0, select bank0
  4936  032E  0829               	movf	Lcd_Int@size,w
  4937  032F  1903               	btfsc	3,2
  4938  0330  0008               	return
  4939                           
  4940                           ;HD44780.c: 176: tempVal = val/10;
  4941  0331  300A               	movlw	10
  4942  0332  00F0               	movwf	___awdiv@divisor
  4943  0333  3000               	movlw	0
  4944  0334  00F1               	movwf	___awdiv@divisor+1
  4945  0335  0828               	movf	Lcd_Int@val,w
  4946  0336  00AA               	movwf	??_Lcd_Int
  4947  0337  01AB               	clrf	??_Lcd_Int+1
  4948  0338  082A               	movf	??_Lcd_Int,w
  4949  0339  00F2               	movwf	___awdiv@dividend
  4950  033A  082B               	movf	??_Lcd_Int+1,w
  4951  033B  00F3               	movwf	___awdiv@dividend+1
  4952  033C  120A  158A  21D6  120A  118A  	fcall	___awdiv
  4953  0341  0871               	movf	?___awdiv+1,w
  4954  0342  1283               	bcf	3,5	;RP0=0, select bank0
  4955  0343  1303               	bcf	3,6	;RP1=0, select bank0
  4956  0344  00AF               	movwf	Lcd_Int@tempVal+1
  4957  0345  0870               	movf	?___awdiv,w
  4958  0346  00AE               	movwf	Lcd_Int@tempVal
  4959                           
  4960                           ;HD44780.c: 177: Lcd_CharCP(0x30+(val - tempVal*10));
  4961  0347  300A               	movlw	10
  4962  0348  00AA               	movwf	??_Lcd_Int
  4963  0349  082A               	movf	??_Lcd_Int,w
  4964  034A  00A6               	movwf	___bmul@multiplicand
  4965  034B  082E               	movf	Lcd_Int@tempVal,w
  4966  034C  160A  118A  2651  120A  118A  	fcall	___bmul
  4967  0351  3AFF               	xorlw	255
  4968  0352  3E01               	addlw	1
  4969  0353  1283               	bcf	3,5	;RP0=0, select bank0
  4970  0354  1303               	bcf	3,6	;RP1=0, select bank0
  4971  0355  0728               	addwf	Lcd_Int@val,w
  4972  0356  3E30               	addlw	48
  4973  0357  120A  158A  2754   	fcall	_Lcd_CharCP
  4974  035A  0008               	return
  4975  035B                     __end_of_Lcd_Int:	
  4976                           
  4977                           	psect	text19
  4978  167D                     __ptext19:	
  4979 ;; *************** function ___wmul *****************
  4980 ;; Defined at:
  4981 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  multiplier      2    0[COMMON] unsigned int 
  4984 ;;  multiplicand    2    2[COMMON] unsigned int 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  product         2    4[COMMON] unsigned int 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  2    0[COMMON] unsigned int 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4996 ;;      Params:         4       0       0       0       0
  4997 ;;      Locals:         2       0       0       0       0
  4998 ;;      Temps:          0       0       0       0       0
  4999 ;;      Totals:         6       0       0       0       0
  5000 ;;Total ram usage:        6 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_Lcd_Int
  5006 ;;		_ReadRTCAsSec
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           
  5011                           ;psect for function ___wmul
  5012  167D                     ___wmul:	
  5013                           
  5014                           ;incstack = 0
  5015                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5016  167D  01F4               	clrf	___wmul@product
  5017  167E  01F5               	clrf	___wmul@product+1
  5018  167F                     l2267:	
  5019  167F  1C70               	btfss	___wmul@multiplier,0
  5020  1680  2E87               	goto	l451
  5021  1681  0872               	movf	___wmul@multiplicand,w
  5022  1682  07F4               	addwf	___wmul@product,f
  5023  1683  1803               	skipnc
  5024  1684  0AF5               	incf	___wmul@product+1,f
  5025  1685  0873               	movf	___wmul@multiplicand+1,w
  5026  1686  07F5               	addwf	___wmul@product+1,f
  5027  1687                     l451:	
  5028  1687  3001               	movlw	1
  5029  1688                     u3195:	
  5030  1688  1003               	clrc
  5031  1689  0DF2               	rlf	___wmul@multiplicand,f
  5032  168A  0DF3               	rlf	___wmul@multiplicand+1,f
  5033  168B  3EFF               	addlw	-1
  5034  168C  1D03               	skipz
  5035  168D  2E88               	goto	u3195
  5036  168E  3001               	movlw	1
  5037  168F                     u3205:	
  5038  168F  1003               	clrc
  5039  1690  0CF1               	rrf	___wmul@multiplier+1,f
  5040  1691  0CF0               	rrf	___wmul@multiplier,f
  5041  1692  3EFF               	addlw	-1
  5042  1693  1D03               	skipz
  5043  1694  2E8F               	goto	u3205
  5044  1695  0870               	movf	___wmul@multiplier,w
  5045  1696  0471               	iorwf	___wmul@multiplier+1,w
  5046  1697  1D03               	btfss	3,2
  5047  1698  2E7F               	goto	l2267
  5048  1699  0875               	movf	___wmul@product+1,w
  5049  169A  00F1               	movwf	?___wmul+1
  5050  169B  0874               	movf	___wmul@product,w
  5051  169C  00F0               	movwf	?___wmul
  5052  169D  0008               	return
  5053  169E                     __end_of___wmul:	
  5054                           
  5055                           	psect	text20
  5056  17C4                     __ptext20:	
  5057 ;; *************** function ___lwdiv *****************
  5058 ;; Defined at:
  5059 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  divisor         2    6[COMMON] unsigned int 
  5062 ;;  dividend        2    8[COMMON] unsigned int 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  quotient        2   11[COMMON] unsigned int 
  5065 ;;  counter         1   13[COMMON] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  2    6[COMMON] unsigned int 
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5075 ;;      Params:         4       0       0       0       0
  5076 ;;      Locals:         3       0       0       0       0
  5077 ;;      Temps:          1       0       0       0       0
  5078 ;;      Totals:         8       0       0       0       0
  5079 ;;Total ram usage:        8 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_Lcd_Int
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           
  5089                           ;psect for function ___lwdiv
  5090  17C4                     ___lwdiv:	
  5091                           
  5092                           ;incstack = 0
  5093                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5094  17C4  01FB               	clrf	___lwdiv@quotient
  5095  17C5  01FC               	clrf	___lwdiv@quotient+1
  5096  17C6  0876               	movf	___lwdiv@divisor,w
  5097  17C7  0477               	iorwf	___lwdiv@divisor+1,w
  5098  17C8  1903               	btfsc	3,2
  5099  17C9  2FFB               	goto	l2437
  5100  17CA  01FD               	clrf	___lwdiv@counter
  5101  17CB  0AFD               	incf	___lwdiv@counter,f
  5102  17CC                     l2425:	
  5103  17CC  1BF7               	btfsc	___lwdiv@divisor+1,7
  5104  17CD  2FDA               	goto	l2427
  5105  17CE  3001               	movlw	1
  5106  17CF                     u3605:	
  5107  17CF  1003               	clrc
  5108  17D0  0DF6               	rlf	___lwdiv@divisor,f
  5109  17D1  0DF7               	rlf	___lwdiv@divisor+1,f
  5110  17D2  3EFF               	addlw	-1
  5111  17D3  1D03               	skipz
  5112  17D4  2FCF               	goto	u3605
  5113  17D5  3001               	movlw	1
  5114  17D6  00FA               	movwf	??___lwdiv
  5115  17D7  087A               	movf	??___lwdiv,w
  5116  17D8  07FD               	addwf	___lwdiv@counter,f
  5117  17D9  2FCC               	goto	l2425
  5118  17DA                     l2427:	
  5119  17DA  3001               	movlw	1
  5120  17DB                     u3625:	
  5121  17DB  1003               	clrc
  5122  17DC  0DFB               	rlf	___lwdiv@quotient,f
  5123  17DD  0DFC               	rlf	___lwdiv@quotient+1,f
  5124  17DE  3EFF               	addlw	-1
  5125  17DF  1D03               	skipz
  5126  17E0  2FDB               	goto	u3625
  5127  17E1  0877               	movf	___lwdiv@divisor+1,w
  5128  17E2  0279               	subwf	___lwdiv@dividend+1,w
  5129  17E3  1D03               	skipz
  5130  17E4  2FE7               	goto	u3635
  5131  17E5  0876               	movf	___lwdiv@divisor,w
  5132  17E6  0278               	subwf	___lwdiv@dividend,w
  5133  17E7                     u3635:	
  5134  17E7  1C03               	skipc
  5135  17E8  2FF0               	goto	l2433
  5136  17E9  0876               	movf	___lwdiv@divisor,w
  5137  17EA  02F8               	subwf	___lwdiv@dividend,f
  5138  17EB  0877               	movf	___lwdiv@divisor+1,w
  5139  17EC  1C03               	skipc
  5140  17ED  03F9               	decf	___lwdiv@dividend+1,f
  5141  17EE  02F9               	subwf	___lwdiv@dividend+1,f
  5142  17EF  147B               	bsf	___lwdiv@quotient,0
  5143  17F0                     l2433:	
  5144  17F0  3001               	movlw	1
  5145  17F1                     u3645:	
  5146  17F1  1003               	clrc
  5147  17F2  0CF7               	rrf	___lwdiv@divisor+1,f
  5148  17F3  0CF6               	rrf	___lwdiv@divisor,f
  5149  17F4  3EFF               	addlw	-1
  5150  17F5  1D03               	skipz
  5151  17F6  2FF1               	goto	u3645
  5152  17F7  3001               	movlw	1
  5153  17F8  02FD               	subwf	___lwdiv@counter,f
  5154  17F9  1D03               	btfss	3,2
  5155  17FA  2FDA               	goto	l2427
  5156  17FB                     l2437:	
  5157  17FB  087C               	movf	___lwdiv@quotient+1,w
  5158  17FC  00F7               	movwf	?___lwdiv+1
  5159  17FD  087B               	movf	___lwdiv@quotient,w
  5160  17FE  00F6               	movwf	?___lwdiv
  5161  17FF  0008               	return
  5162  1800                     __end_of___lwdiv:	
  5163                           
  5164                           	psect	text21
  5165  09D6                     __ptext21:	
  5166 ;; *************** function ___awdiv *****************
  5167 ;; Defined at:
  5168 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  divisor         2    0[COMMON] int 
  5171 ;;  dividend        2    2[COMMON] int 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  quotient        2    7[COMMON] int 
  5174 ;;  sign            1    6[COMMON] unsigned char 
  5175 ;;  counter         1    5[COMMON] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  2    0[COMMON] int 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5185 ;;      Params:         4       0       0       0       0
  5186 ;;      Locals:         4       0       0       0       0
  5187 ;;      Temps:          1       0       0       0       0
  5188 ;;      Totals:         9       0       0       0       0
  5189 ;;Total ram usage:        9 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_Lcd_Int
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           
  5199                           ;psect for function ___awdiv
  5200  09D6                     ___awdiv:	
  5201                           
  5202                           ;incstack = 0
  5203                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5204  09D6  01F6               	clrf	___awdiv@sign
  5205  09D7  1FF1               	btfss	___awdiv@divisor+1,7
  5206  09D8  29E0               	goto	l2301
  5207  09D9  09F0               	comf	___awdiv@divisor,f
  5208  09DA  09F1               	comf	___awdiv@divisor+1,f
  5209  09DB  0AF0               	incf	___awdiv@divisor,f
  5210  09DC  1903               	skipnz
  5211  09DD  0AF1               	incf	___awdiv@divisor+1,f
  5212  09DE  01F6               	clrf	___awdiv@sign
  5213  09DF  0AF6               	incf	___awdiv@sign,f
  5214  09E0                     l2301:	
  5215  09E0  1FF3               	btfss	___awdiv@dividend+1,7
  5216  09E1  29EB               	goto	l2307
  5217  09E2  09F2               	comf	___awdiv@dividend,f
  5218  09E3  09F3               	comf	___awdiv@dividend+1,f
  5219  09E4  0AF2               	incf	___awdiv@dividend,f
  5220  09E5  1903               	skipnz
  5221  09E6  0AF3               	incf	___awdiv@dividend+1,f
  5222  09E7  3001               	movlw	1
  5223  09E8  00F4               	movwf	??___awdiv
  5224  09E9  0874               	movf	??___awdiv,w
  5225  09EA  06F6               	xorwf	___awdiv@sign,f
  5226  09EB                     l2307:	
  5227  09EB  01F7               	clrf	___awdiv@quotient
  5228  09EC  01F8               	clrf	___awdiv@quotient+1
  5229  09ED  0870               	movf	___awdiv@divisor,w
  5230  09EE  0471               	iorwf	___awdiv@divisor+1,w
  5231  09EF  1903               	btfsc	3,2
  5232  09F0  2A22               	goto	l2329
  5233  09F1  01F5               	clrf	___awdiv@counter
  5234  09F2  0AF5               	incf	___awdiv@counter,f
  5235  09F3                     l2317:	
  5236  09F3  1BF1               	btfsc	___awdiv@divisor+1,7
  5237  09F4  2A01               	goto	l2319
  5238  09F5  3001               	movlw	1
  5239  09F6                     u3275:	
  5240  09F6  1003               	clrc
  5241  09F7  0DF0               	rlf	___awdiv@divisor,f
  5242  09F8  0DF1               	rlf	___awdiv@divisor+1,f
  5243  09F9  3EFF               	addlw	-1
  5244  09FA  1D03               	skipz
  5245  09FB  29F6               	goto	u3275
  5246  09FC  3001               	movlw	1
  5247  09FD  00F4               	movwf	??___awdiv
  5248  09FE  0874               	movf	??___awdiv,w
  5249  09FF  07F5               	addwf	___awdiv@counter,f
  5250  0A00  29F3               	goto	l2317
  5251  0A01                     l2319:	
  5252  0A01  3001               	movlw	1
  5253  0A02                     u3295:	
  5254  0A02  1003               	clrc
  5255  0A03  0DF7               	rlf	___awdiv@quotient,f
  5256  0A04  0DF8               	rlf	___awdiv@quotient+1,f
  5257  0A05  3EFF               	addlw	-1
  5258  0A06  1D03               	skipz
  5259  0A07  2A02               	goto	u3295
  5260  0A08  0871               	movf	___awdiv@divisor+1,w
  5261  0A09  0273               	subwf	___awdiv@dividend+1,w
  5262  0A0A  1D03               	skipz
  5263  0A0B  2A0E               	goto	u3305
  5264  0A0C  0870               	movf	___awdiv@divisor,w
  5265  0A0D  0272               	subwf	___awdiv@dividend,w
  5266  0A0E                     u3305:	
  5267  0A0E  1C03               	skipc
  5268  0A0F  2A17               	goto	l2325
  5269  0A10  0870               	movf	___awdiv@divisor,w
  5270  0A11  02F2               	subwf	___awdiv@dividend,f
  5271  0A12  0871               	movf	___awdiv@divisor+1,w
  5272  0A13  1C03               	skipc
  5273  0A14  03F3               	decf	___awdiv@dividend+1,f
  5274  0A15  02F3               	subwf	___awdiv@dividend+1,f
  5275  0A16  1477               	bsf	___awdiv@quotient,0
  5276  0A17                     l2325:	
  5277  0A17  3001               	movlw	1
  5278  0A18                     u3315:	
  5279  0A18  1003               	clrc
  5280  0A19  0CF1               	rrf	___awdiv@divisor+1,f
  5281  0A1A  0CF0               	rrf	___awdiv@divisor,f
  5282  0A1B  3EFF               	addlw	-1
  5283  0A1C  1D03               	skipz
  5284  0A1D  2A18               	goto	u3315
  5285  0A1E  3001               	movlw	1
  5286  0A1F  02F5               	subwf	___awdiv@counter,f
  5287  0A20  1D03               	btfss	3,2
  5288  0A21  2A01               	goto	l2319
  5289  0A22                     l2329:	
  5290  0A22  0876               	movf	___awdiv@sign,w
  5291  0A23  1903               	btfsc	3,2
  5292  0A24  2A2A               	goto	l2333
  5293  0A25  09F7               	comf	___awdiv@quotient,f
  5294  0A26  09F8               	comf	___awdiv@quotient+1,f
  5295  0A27  0AF7               	incf	___awdiv@quotient,f
  5296  0A28  1903               	skipnz
  5297  0A29  0AF8               	incf	___awdiv@quotient+1,f
  5298  0A2A                     l2333:	
  5299  0A2A  0878               	movf	___awdiv@quotient+1,w
  5300  0A2B  00F1               	movwf	?___awdiv+1
  5301  0A2C  0877               	movf	___awdiv@quotient,w
  5302  0A2D  00F0               	movwf	?___awdiv
  5303  0A2E  0008               	return
  5304  0A2F                     __end_of___awdiv:	
  5305                           
  5306                           	psect	text22
  5307  0EAD                     __ptext22:	
  5308 ;; *************** function _Lcd_Command *****************
  5309 ;; Defined at:
  5310 ;;		line 132 in file "libs/HD44780.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  command         1    wreg     unsigned char 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;  command         1    3[COMMON] unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0, pclath, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5324 ;;      Params:         0       0       0       0       0
  5325 ;;      Locals:         1       0       0       0       0
  5326 ;;      Temps:          1       0       0       0       0
  5327 ;;      Totals:         2       0       0       0       0
  5328 ;;Total ram usage:        2 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    1
  5331 ;; This function calls:
  5332 ;;		_Lcd_Delay5500us
  5333 ;;		_Lcd_Delay5us
  5334 ;; This function is called by:
  5335 ;;		_main
  5336 ;;		_Lcd_Init
  5337 ;;		_Lcd_Text
  5338 ;;		_Lcd_WriteChar
  5339 ;;		_Lcd_Int
  5340 ;;		_Lcd_ConstText
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           
  5345                           ;psect for function _Lcd_Command
  5346  0EAD                     _Lcd_Command:	
  5347                           
  5348                           ;incstack = 0
  5349                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+pclath+cstack]
  5350                           ;Lcd_Command@command stored from wreg
  5351  0EAD  00F3               	movwf	Lcd_Command@command
  5352                           
  5353                           ;HD44780.c: 133: RA1 = 0; RA0 = 0;
  5354  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  5355  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  5356  0EB0  1085               	bcf	5,1	;volatile
  5357  0EB1  1005               	bcf	5,0	;volatile
  5358                           
  5359                           ;HD44780.c: 134: RA5 = (command & 0b10000000)>>7; RA4 = (command & 0b01000000)>>6;
  5360  0EB2  0873               	movf	Lcd_Command@command,w
  5361  0EB3  00F2               	movwf	??_Lcd_Command
  5362  0EB4  3007               	movlw	7
  5363  0EB5                     u2695:	
  5364  0EB5  1003               	clrc
  5365  0EB6  0CF2               	rrf	??_Lcd_Command,f
  5366  0EB7  3EFF               	addlw	-1
  5367  0EB8  1D03               	skipz
  5368  0EB9  2EB5               	goto	u2695
  5369  0EBA  1C72               	btfss	??_Lcd_Command,0
  5370  0EBB  2EC0               	goto	u2700
  5371  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0EBE  1685               	bsf	5,5	;volatile
  5374  0EBF  2EC3               	goto	u2714
  5375  0EC0                     u2700:	
  5376  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0EC2  1285               	bcf	5,5	;volatile
  5379  0EC3                     u2714:	
  5380  0EC3  0873               	movf	Lcd_Command@command,w
  5381  0EC4  00F2               	movwf	??_Lcd_Command
  5382  0EC5  3006               	movlw	6
  5383  0EC6                     u2725:	
  5384  0EC6  1003               	clrc
  5385  0EC7  0CF2               	rrf	??_Lcd_Command,f
  5386  0EC8  3EFF               	addlw	-1
  5387  0EC9  1D03               	skipz
  5388  0ECA  2EC6               	goto	u2725
  5389  0ECB  1C72               	btfss	??_Lcd_Command,0
  5390  0ECC  2ED1               	goto	u2730
  5391  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0ECF  1605               	bsf	5,4	;volatile
  5394  0ED0  2ED4               	goto	u2744
  5395  0ED1                     u2730:	
  5396  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  5397  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  5398  0ED3  1205               	bcf	5,4	;volatile
  5399  0ED4                     u2744:	
  5400                           
  5401                           ;HD44780.c: 135: RA3 = (command & 0b00100000)>>5; RA2 = (command & 0b00010000)>>4;
  5402  0ED4  0873               	movf	Lcd_Command@command,w
  5403  0ED5  00F2               	movwf	??_Lcd_Command
  5404  0ED6  3005               	movlw	5
  5405  0ED7                     u2755:	
  5406  0ED7  1003               	clrc
  5407  0ED8  0CF2               	rrf	??_Lcd_Command,f
  5408  0ED9  3EFF               	addlw	-1
  5409  0EDA  1D03               	skipz
  5410  0EDB  2ED7               	goto	u2755
  5411  0EDC  1C72               	btfss	??_Lcd_Command,0
  5412  0EDD  2EE2               	goto	u2760
  5413  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  5414  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  5415  0EE0  1585               	bsf	5,3	;volatile
  5416  0EE1  2EE5               	goto	u2774
  5417  0EE2                     u2760:	
  5418  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  5419  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  5420  0EE4  1185               	bcf	5,3	;volatile
  5421  0EE5                     u2774:	
  5422  0EE5  0873               	movf	Lcd_Command@command,w
  5423  0EE6  00F2               	movwf	??_Lcd_Command
  5424  0EE7  3004               	movlw	4
  5425  0EE8                     u2785:	
  5426  0EE8  1003               	clrc
  5427  0EE9  0CF2               	rrf	??_Lcd_Command,f
  5428  0EEA  3EFF               	addlw	-1
  5429  0EEB  1D03               	skipz
  5430  0EEC  2EE8               	goto	u2785
  5431  0EED  1C72               	btfss	??_Lcd_Command,0
  5432  0EEE  2EF3               	goto	u2790
  5433  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5434  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  5435  0EF1  1505               	bsf	5,2	;volatile
  5436  0EF2  2EF6               	goto	l2187
  5437  0EF3                     u2790:	
  5438  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  5439  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  5440  0EF5  1105               	bcf	5,2	;volatile
  5441  0EF6                     l2187:	
  5442                           
  5443                           ;HD44780.c: 136: _delay(10);
  5444  0EF6  3003               	movlw	3
  5445  0EF7  00F2               	movwf	??_Lcd_Command
  5446  0EF8                     u4667:	
  5447  0EF8  0BF2               	decfsz	??_Lcd_Command,f
  5448  0EF9  2EF8               	goto	u4667
  5449                           
  5450                           ;HD44780.c: 137: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  5451  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0EFC  1485               	bsf	5,1	;volatile
  5454  0EFD  160A  118A  2604  120A  158A  	fcall	_Lcd_Delay5us
  5455  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0F04  1085               	bcf	5,1	;volatile
  5458                           
  5459                           ;HD44780.c: 138: RA5 = (command & 0b00001000)>>3; RA4 = (command & 0b00000100)>>2;
  5460  0F05  0873               	movf	Lcd_Command@command,w
  5461  0F06  00F2               	movwf	??_Lcd_Command
  5462  0F07  3003               	movlw	3
  5463  0F08                     u2815:	
  5464  0F08  1003               	clrc
  5465  0F09  0CF2               	rrf	??_Lcd_Command,f
  5466  0F0A  3EFF               	addlw	-1
  5467  0F0B  1D03               	skipz
  5468  0F0C  2F08               	goto	u2815
  5469  0F0D  1C72               	btfss	??_Lcd_Command,0
  5470  0F0E  2F13               	goto	u2820
  5471  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  5472  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  5473  0F11  1685               	bsf	5,5	;volatile
  5474  0F12  2F16               	goto	l2197
  5475  0F13                     u2820:	
  5476  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0F15  1285               	bcf	5,5	;volatile
  5479  0F16                     l2197:	
  5480  0F16  0873               	movf	Lcd_Command@command,w
  5481  0F17  00F2               	movwf	??_Lcd_Command
  5482  0F18  3002               	movlw	2
  5483  0F19                     u2845:	
  5484  0F19  1003               	clrc
  5485  0F1A  0CF2               	rrf	??_Lcd_Command,f
  5486  0F1B  3EFF               	addlw	-1
  5487  0F1C  1D03               	skipz
  5488  0F1D  2F19               	goto	u2845
  5489  0F1E  1C72               	btfss	??_Lcd_Command,0
  5490  0F1F  2F24               	goto	u2850
  5491  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5492  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  5493  0F22  1605               	bsf	5,4	;volatile
  5494  0F23  2F27               	goto	l2199
  5495  0F24                     u2850:	
  5496  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  5497  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  5498  0F26  1205               	bcf	5,4	;volatile
  5499  0F27                     l2199:	
  5500                           
  5501                           ;HD44780.c: 139: RA3 = (command & 0b00000010)>>1; RA2 = (command & 0b00000001);
  5502  0F27  0873               	movf	Lcd_Command@command,w
  5503  0F28  00F2               	movwf	??_Lcd_Command
  5504  0F29  3001               	movlw	1
  5505  0F2A                     u2875:	
  5506  0F2A  1003               	clrc
  5507  0F2B  0CF2               	rrf	??_Lcd_Command,f
  5508  0F2C  3EFF               	addlw	-1
  5509  0F2D  1D03               	skipz
  5510  0F2E  2F2A               	goto	u2875
  5511  0F2F  1C72               	btfss	??_Lcd_Command,0
  5512  0F30  2F35               	goto	u2880
  5513  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  5514  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  5515  0F33  1585               	bsf	5,3	;volatile
  5516  0F34  2F38               	goto	l2201
  5517  0F35                     u2880:	
  5518  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  5519  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  5520  0F37  1185               	bcf	5,3	;volatile
  5521  0F38                     l2201:	
  5522  0F38  1C73               	btfss	Lcd_Command@command,0
  5523  0F39  2F3E               	goto	u2900
  5524  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  5525  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  5526  0F3C  1505               	bsf	5,2	;volatile
  5527  0F3D  2F41               	goto	l2203
  5528  0F3E                     u2900:	
  5529  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  5530  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  5531  0F40  1105               	bcf	5,2	;volatile
  5532  0F41                     l2203:	
  5533                           
  5534                           ;HD44780.c: 140: _delay(10);
  5535  0F41  3003               	movlw	3
  5536  0F42  00F2               	movwf	??_Lcd_Command
  5537  0F43                     u4677:	
  5538  0F43  0BF2               	decfsz	??_Lcd_Command,f
  5539  0F44  2F43               	goto	u4677
  5540                           
  5541                           ;HD44780.c: 141: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  5542  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  5543  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  5544  0F47  1485               	bsf	5,1	;volatile
  5545  0F48  160A  118A  2604  120A  158A  	fcall	_Lcd_Delay5us
  5546  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0F4F  1085               	bcf	5,1	;volatile
  5549                           
  5550                           ;HD44780.c: 142: Lcd_Delay5500us();
  5551  0F50  160A  118A  261C   	fcall	_Lcd_Delay5500us
  5552  0F53  0008               	return
  5553  0F54                     __end_of_Lcd_Command:	
  5554                           
  5555                           	psect	text23
  5556  0F54                     __ptext23:	
  5557 ;; *************** function _Lcd_CharCP *****************
  5558 ;; Defined at:
  5559 ;;		line 115 in file "libs/HD44780.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  c               1    wreg     unsigned char 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  c               1    3[COMMON] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      void 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, pclath, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         0       0       0       0       0
  5574 ;;      Locals:         1       0       0       0       0
  5575 ;;      Temps:          1       0       0       0       0
  5576 ;;      Totals:         2       0       0       0       0
  5577 ;;Total ram usage:        2 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    1
  5580 ;; This function calls:
  5581 ;;		_Lcd_Delay5500us
  5582 ;;		_Lcd_Delay5us
  5583 ;; This function is called by:
  5584 ;;		_Lcd_Text
  5585 ;;		_Lcd_WriteChar
  5586 ;;		_Lcd_Int
  5587 ;;		_Lcd_ConstText
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function _Lcd_CharCP
  5593  0F54                     _Lcd_CharCP:	
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0+pclath+cstack]
  5597                           ;Lcd_CharCP@c stored from wreg
  5598  0F54  00F3               	movwf	Lcd_CharCP@c
  5599                           
  5600                           ;HD44780.c: 116: RA1 = 0; RA0 = 1;
  5601  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  5602  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  5603  0F57  1085               	bcf	5,1	;volatile
  5604  0F58  1405               	bsf	5,0	;volatile
  5605                           
  5606                           ;HD44780.c: 117: RA5 = (c & 0b10000000)>>7; RA4 = (c & 0b01000000)>>6;
  5607  0F59  0873               	movf	Lcd_CharCP@c,w
  5608  0F5A  00F2               	movwf	??_Lcd_CharCP
  5609  0F5B  3007               	movlw	7
  5610  0F5C                     u2955:	
  5611  0F5C  1003               	clrc
  5612  0F5D  0CF2               	rrf	??_Lcd_CharCP,f
  5613  0F5E  3EFF               	addlw	-1
  5614  0F5F  1D03               	skipz
  5615  0F60  2F5C               	goto	u2955
  5616  0F61  1C72               	btfss	??_Lcd_CharCP,0
  5617  0F62  2F67               	goto	u2960
  5618  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  5619  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  5620  0F65  1685               	bsf	5,5	;volatile
  5621  0F66  2F6A               	goto	u2974
  5622  0F67                     u2960:	
  5623  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  5625  0F69  1285               	bcf	5,5	;volatile
  5626  0F6A                     u2974:	
  5627  0F6A  0873               	movf	Lcd_CharCP@c,w
  5628  0F6B  00F2               	movwf	??_Lcd_CharCP
  5629  0F6C  3006               	movlw	6
  5630  0F6D                     u2985:	
  5631  0F6D  1003               	clrc
  5632  0F6E  0CF2               	rrf	??_Lcd_CharCP,f
  5633  0F6F  3EFF               	addlw	-1
  5634  0F70  1D03               	skipz
  5635  0F71  2F6D               	goto	u2985
  5636  0F72  1C72               	btfss	??_Lcd_CharCP,0
  5637  0F73  2F78               	goto	u2990
  5638  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  5639  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  5640  0F76  1605               	bsf	5,4	;volatile
  5641  0F77  2F7B               	goto	u3004
  5642  0F78                     u2990:	
  5643  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  5644  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  5645  0F7A  1205               	bcf	5,4	;volatile
  5646  0F7B                     u3004:	
  5647                           
  5648                           ;HD44780.c: 118: RA3 = (c & 0b00100000)>>5; RA2 = (c & 0b00010000)>>4;
  5649  0F7B  0873               	movf	Lcd_CharCP@c,w
  5650  0F7C  00F2               	movwf	??_Lcd_CharCP
  5651  0F7D  3005               	movlw	5
  5652  0F7E                     u3015:	
  5653  0F7E  1003               	clrc
  5654  0F7F  0CF2               	rrf	??_Lcd_CharCP,f
  5655  0F80  3EFF               	addlw	-1
  5656  0F81  1D03               	skipz
  5657  0F82  2F7E               	goto	u3015
  5658  0F83  1C72               	btfss	??_Lcd_CharCP,0
  5659  0F84  2F89               	goto	u3020
  5660  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  5661  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  5662  0F87  1585               	bsf	5,3	;volatile
  5663  0F88  2F8C               	goto	u3034
  5664  0F89                     u3020:	
  5665  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0F8B  1185               	bcf	5,3	;volatile
  5668  0F8C                     u3034:	
  5669  0F8C  0873               	movf	Lcd_CharCP@c,w
  5670  0F8D  00F2               	movwf	??_Lcd_CharCP
  5671  0F8E  3004               	movlw	4
  5672  0F8F                     u3045:	
  5673  0F8F  1003               	clrc
  5674  0F90  0CF2               	rrf	??_Lcd_CharCP,f
  5675  0F91  3EFF               	addlw	-1
  5676  0F92  1D03               	skipz
  5677  0F93  2F8F               	goto	u3045
  5678  0F94  1C72               	btfss	??_Lcd_CharCP,0
  5679  0F95  2F9A               	goto	u3050
  5680  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  5681  0F97  1303               	bcf	3,6	;RP1=0, select bank0
  5682  0F98  1505               	bsf	5,2	;volatile
  5683  0F99  2F9D               	goto	l2233
  5684  0F9A                     u3050:	
  5685  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  5686  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  5687  0F9C  1105               	bcf	5,2	;volatile
  5688  0F9D                     l2233:	
  5689                           
  5690                           ;HD44780.c: 119: _delay(10);
  5691  0F9D  3003               	movlw	3
  5692  0F9E  00F2               	movwf	??_Lcd_CharCP
  5693  0F9F                     u4687:	
  5694  0F9F  0BF2               	decfsz	??_Lcd_CharCP,f
  5695  0FA0  2F9F               	goto	u4687
  5696                           
  5697                           ;HD44780.c: 120: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  5698  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  5699  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  5700  0FA3  1485               	bsf	5,1	;volatile
  5701  0FA4  160A  118A  2604  120A  158A  	fcall	_Lcd_Delay5us
  5702  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  5703  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  5704  0FAB  1085               	bcf	5,1	;volatile
  5705                           
  5706                           ;HD44780.c: 121: RA5 = (c & 0b00001000)>>3; RA4 = (c & 0b00000100)>>2;
  5707  0FAC  0873               	movf	Lcd_CharCP@c,w
  5708  0FAD  00F2               	movwf	??_Lcd_CharCP
  5709  0FAE  3003               	movlw	3
  5710  0FAF                     u3075:	
  5711  0FAF  1003               	clrc
  5712  0FB0  0CF2               	rrf	??_Lcd_CharCP,f
  5713  0FB1  3EFF               	addlw	-1
  5714  0FB2  1D03               	skipz
  5715  0FB3  2FAF               	goto	u3075
  5716  0FB4  1C72               	btfss	??_Lcd_CharCP,0
  5717  0FB5  2FBA               	goto	u3080
  5718  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  5719  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  5720  0FB8  1685               	bsf	5,5	;volatile
  5721  0FB9  2FBD               	goto	l2243
  5722  0FBA                     u3080:	
  5723  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  5725  0FBC  1285               	bcf	5,5	;volatile
  5726  0FBD                     l2243:	
  5727  0FBD  0873               	movf	Lcd_CharCP@c,w
  5728  0FBE  00F2               	movwf	??_Lcd_CharCP
  5729  0FBF  3002               	movlw	2
  5730  0FC0                     u3105:	
  5731  0FC0  1003               	clrc
  5732  0FC1  0CF2               	rrf	??_Lcd_CharCP,f
  5733  0FC2  3EFF               	addlw	-1
  5734  0FC3  1D03               	skipz
  5735  0FC4  2FC0               	goto	u3105
  5736  0FC5  1C72               	btfss	??_Lcd_CharCP,0
  5737  0FC6  2FCB               	goto	u3110
  5738  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  5739  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  5740  0FC9  1605               	bsf	5,4	;volatile
  5741  0FCA  2FCE               	goto	l2245
  5742  0FCB                     u3110:	
  5743  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  5744  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  5745  0FCD  1205               	bcf	5,4	;volatile
  5746  0FCE                     l2245:	
  5747                           
  5748                           ;HD44780.c: 122: RA3 = (c & 0b00000010)>>1; RA2 = (c & 0b00000001);
  5749  0FCE  0873               	movf	Lcd_CharCP@c,w
  5750  0FCF  00F2               	movwf	??_Lcd_CharCP
  5751  0FD0  3001               	movlw	1
  5752  0FD1                     u3135:	
  5753  0FD1  1003               	clrc
  5754  0FD2  0CF2               	rrf	??_Lcd_CharCP,f
  5755  0FD3  3EFF               	addlw	-1
  5756  0FD4  1D03               	skipz
  5757  0FD5  2FD1               	goto	u3135
  5758  0FD6  1C72               	btfss	??_Lcd_CharCP,0
  5759  0FD7  2FDC               	goto	u3140
  5760  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  5761  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  5762  0FDA  1585               	bsf	5,3	;volatile
  5763  0FDB  2FDF               	goto	l2247
  5764  0FDC                     u3140:	
  5765  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  5767  0FDE  1185               	bcf	5,3	;volatile
  5768  0FDF                     l2247:	
  5769  0FDF  1C73               	btfss	Lcd_CharCP@c,0
  5770  0FE0  2FE5               	goto	u3160
  5771  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  5772  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  5773  0FE3  1505               	bsf	5,2	;volatile
  5774  0FE4  2FE8               	goto	l2249
  5775  0FE5                     u3160:	
  5776  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  5777  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  5778  0FE7  1105               	bcf	5,2	;volatile
  5779  0FE8                     l2249:	
  5780                           
  5781                           ;HD44780.c: 123: _delay(10);
  5782  0FE8  3003               	movlw	3
  5783  0FE9  00F2               	movwf	??_Lcd_CharCP
  5784  0FEA                     u4697:	
  5785  0FEA  0BF2               	decfsz	??_Lcd_CharCP,f
  5786  0FEB  2FEA               	goto	u4697
  5787                           
  5788                           ;HD44780.c: 124: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  5789  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  5790  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  5791  0FEE  1485               	bsf	5,1	;volatile
  5792  0FEF  160A  118A  2604  120A  158A  	fcall	_Lcd_Delay5us
  5793  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  5794  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0FF6  1085               	bcf	5,1	;volatile
  5796                           
  5797                           ;HD44780.c: 125: Lcd_Delay5us(); Lcd_Delay5500us();
  5798  0FF7  160A  118A  2604  120A  158A  	fcall	_Lcd_Delay5us
  5799  0FFC  160A  118A  261C   	fcall	_Lcd_Delay5500us
  5800  0FFF  0008               	return
  5801  1000                     __end_of_Lcd_CharCP:	
  5802                           
  5803                           	psect	text24
  5804  1604                     __ptext24:	
  5805 ;; *************** function _Lcd_Delay5us *****************
  5806 ;; Defined at:
  5807 ;;		line 148 in file "libs/HD44780.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;		None
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;		None
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		None
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5821 ;;      Params:         0       0       0       0       0
  5822 ;;      Locals:         0       0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0
  5824 ;;      Totals:         0       0       0       0       0
  5825 ;;Total ram usage:        0 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_Lcd_Init
  5831 ;;		_Lcd_CharCP
  5832 ;;		_Lcd_Command
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           
  5837                           ;psect for function _Lcd_Delay5us
  5838  1604                     _Lcd_Delay5us:	
  5839                           
  5840                           ;HD44780.c: 149: _delay((unsigned long)((5)*(4000000/4000000.0)));
  5841                           
  5842                           ;incstack = 0
  5843                           ; Regs used in _Lcd_Delay5us: []
  5844  1604  2E05               	nop2	;2 cycle nop
  5845  1605  2E06               	nop2	;2 cycle nop
  5846  1606  0000               	nop
  5847                           
  5848                           ;HD44780.c: 150: _delay((unsigned long)((5)*(4000000/4000000.0)));
  5849  1607  2E08               	nop2	;2 cycle nop
  5850  1608  2E09               	nop2	;2 cycle nop
  5851  1609  0000               	nop
  5852  160A  0008               	return
  5853  160B                     __end_of_Lcd_Delay5us:	
  5854                           
  5855                           	psect	text25
  5856  161C                     __ptext25:	
  5857 ;; *************** function _Lcd_Delay5500us *****************
  5858 ;; Defined at:
  5859 ;;		line 152 in file "libs/HD44780.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      void 
  5866 ;; Registers used:
  5867 ;;		wreg
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         0       0       0       0       0
  5874 ;;      Locals:         0       0       0       0       0
  5875 ;;      Temps:          2       0       0       0       0
  5876 ;;      Totals:         2       0       0       0       0
  5877 ;;Total ram usage:        2 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_Lcd_Init
  5883 ;;		_Lcd_CharCP
  5884 ;;		_Lcd_Command
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           
  5889                           ;psect for function _Lcd_Delay5500us
  5890  161C                     _Lcd_Delay5500us:	
  5891                           
  5892                           ;HD44780.c: 153: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in _Lcd_Delay5500us: [wreg]
  5896  161C  3008               	movlw	8
  5897  161D  00F1               	movwf	??_Lcd_Delay5500us+1
  5898  161E  3023               	movlw	35
  5899  161F  00F0               	movwf	??_Lcd_Delay5500us
  5900  1620                     u4707:	
  5901  1620  0BF0               	decfsz	??_Lcd_Delay5500us,f
  5902  1621  2E20               	goto	u4707
  5903  1622  0BF1               	decfsz	??_Lcd_Delay5500us+1,f
  5904  1623  2E20               	goto	u4707
  5905  1624  0008               	return
  5906  1625                     __end_of_Lcd_Delay5500us:	
  5907                           
  5908                           	psect	text26
  5909  0AE8                     __ptext26:	
  5910 ;; *************** function _AdjustSec *****************
  5911 ;; Defined at:
  5912 ;;		line 57 in file "libs/gsk_funs.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  TimeDiff        1    wreg     char 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  TimeDiff        1    6[BANK1 ] char 
  5917 ;;  tRIMVAL         1    7[BANK1 ] char 
  5918 ;;  Sign            1    0        unsigned char 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5928 ;;      Params:         0       0       0       0       0
  5929 ;;      Locals:         0       0       5       0       0
  5930 ;;      Temps:          0       1       0       0       0
  5931 ;;      Totals:         0       1       5       0       0
  5932 ;;Total ram usage:        6 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    4
  5935 ;; This function calls:
  5936 ;;		_GetOSCTRIM
  5937 ;;		_SetOSCTRIM
  5938 ;;		___abtoft
  5939 ;;		___ftmul
  5940 ;;		___fttol
  5941 ;;		_round
  5942 ;; This function is called by:
  5943 ;;		_main
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           
  5948                           ;psect for function _AdjustSec
  5949  0AE8                     _AdjustSec:	
  5950                           
  5951                           ;incstack = 0
  5952                           ; Regs used in _AdjustSec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5953                           ;AdjustSec@TimeDiff stored from wreg
  5954  0AE8  1683               	bsf	3,5	;RP0=1, select bank1
  5955  0AE9  1303               	bcf	3,6	;RP1=0, select bank1
  5956  0AEA  00A6               	movwf	AdjustSec@TimeDiff^(0+128)
  5957                           
  5958                           ;gsk_funs.c: 58: int8_t tRIMVAL;
  5959                           ;gsk_funs.c: 59: char Sign;
  5960                           ;gsk_funs.c: 60: tRIMVAL = (round(TimeDiff*11.3778));
  5961  0AEB  0826               	movf	AdjustSec@TimeDiff^(0+128),w
  5962  0AEC  160A  118A  269E  120A  158A  	fcall	___abtoft
  5963  0AF1  0878               	movf	?___abtoft,w
  5964  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  5965  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  5966  0AF4  00A8               	movwf	___ftmul@f2
  5967  0AF5  0879               	movf	?___abtoft+1,w
  5968  0AF6  00A9               	movwf	___ftmul@f2+1
  5969  0AF7  087A               	movf	?___abtoft+2,w
  5970  0AF8  00AA               	movwf	___ftmul@f2+2
  5971  0AF9  300B               	movlw	11
  5972  0AFA  00A5               	movwf	___ftmul@f1
  5973  0AFB  3036               	movlw	54
  5974  0AFC  00A6               	movwf	___ftmul@f1+1
  5975  0AFD  3041               	movlw	65
  5976  0AFE  00A7               	movwf	___ftmul@f1+2
  5977  0AFF  120A  118A  235B  120A  158A  	fcall	___ftmul
  5978  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  5979  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  5980  0B06  0825               	movf	?___ftmul,w
  5981  0B07  00EC               	movwf	round@x
  5982  0B08  0826               	movf	?___ftmul+1,w
  5983  0B09  00ED               	movwf	round@x+1
  5984  0B0A  0827               	movf	?___ftmul+2,w
  5985  0B0B  00EE               	movwf	round@x+2
  5986  0B0C  120A  118A  2005  120A  158A  	fcall	_round
  5987  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  5988  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  5989  0B13  086C               	movf	?_round,w
  5990  0B14  1683               	bsf	3,5	;RP0=1, select bank1
  5991  0B15  1303               	bcf	3,6	;RP1=0, select bank1
  5992  0B16  00A3               	movwf	_AdjustSec$842^(0+128)
  5993  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5994  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5995  0B19  086D               	movf	?_round+1,w
  5996  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  5997  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  5998  0B1C  00A4               	movwf	(_AdjustSec$842+1)^(0+128)
  5999  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
  6000  0B1E  1303               	bcf	3,6	;RP1=0, select bank0
  6001  0B1F  086E               	movf	?_round+2,w
  6002  0B20  1683               	bsf	3,5	;RP0=1, select bank1
  6003  0B21  1303               	bcf	3,6	;RP1=0, select bank1
  6004  0B22  00A5               	movwf	(_AdjustSec$842+2)^(0+128)
  6005                           
  6006                           ;gsk_funs.c: 58: int8_t tRIMVAL;
  6007                           ;gsk_funs.c: 59: char Sign;
  6008                           ;gsk_funs.c: 60: tRIMVAL = (round(TimeDiff*11.3778));
  6009  0B23  0823               	movf	_AdjustSec$842^(0+128),w
  6010  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  6011  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  6012  0B26  00D2               	movwf	___fttol@f1
  6013  0B27  1683               	bsf	3,5	;RP0=1, select bank1
  6014  0B28  1303               	bcf	3,6	;RP1=0, select bank1
  6015  0B29  0824               	movf	(_AdjustSec$842+1)^(0+128),w
  6016  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  6017  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  6018  0B2C  00D3               	movwf	___fttol@f1+1
  6019  0B2D  1683               	bsf	3,5	;RP0=1, select bank1
  6020  0B2E  1303               	bcf	3,6	;RP1=0, select bank1
  6021  0B2F  0825               	movf	(_AdjustSec$842+2)^(0+128),w
  6022  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  6023  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  6024  0B32  00D4               	movwf	___fttol@f1+2
  6025  0B33  120A  158A  23B8  120A  158A  	fcall	___fttol
  6026  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  6027  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  6028  0B3A  0852               	movf	?___fttol,w
  6029  0B3B  00EF               	movwf	??_AdjustSec
  6030  0B3C  086F               	movf	??_AdjustSec,w
  6031  0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  6032  0B3E  1303               	bcf	3,6	;RP1=0, select bank1
  6033  0B3F  00A7               	movwf	AdjustSec@tRIMVAL^(0+128)
  6034                           
  6035                           ;gsk_funs.c: 61: SetOSCTRIM(GetOSCTRIM () + tRIMVAL);
  6036  0B40  160A  118A  2666  120A  158A  	fcall	_GetOSCTRIM
  6037  0B45  1683               	bsf	3,5	;RP0=1, select bank1
  6038  0B46  1303               	bcf	3,6	;RP1=0, select bank1
  6039  0B47  0727               	addwf	AdjustSec@tRIMVAL^(0+128),w
  6040  0B48  120A  158A  2004   	fcall	_SetOSCTRIM
  6041  0B4B  0008               	return
  6042  0B4C                     __end_of_AdjustSec:	
  6043                           
  6044                           	psect	text27
  6045  0005                     __ptext27:	
  6046 ;; *************** function _round *****************
  6047 ;; Defined at:
  6048 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\round.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  x               3   76[BANK0 ] void 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  f               3    0[BANK1 ] void 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  3   76[BANK0 ] void 
  6055 ;; Registers used:
  6056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6062 ;;      Params:         0       3       0       0       0
  6063 ;;      Locals:         0       0       3       0       0
  6064 ;;      Temps:          0       0       0       0       0
  6065 ;;      Totals:         0       3       3       0       0
  6066 ;;Total ram usage:        6 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    3
  6069 ;; This function calls:
  6070 ;;		___ftadd
  6071 ;;		___ftneg
  6072 ;;		_trunc
  6073 ;; This function is called by:
  6074 ;;		_UART_Init
  6075 ;;		_AdjustSec
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           
  6080                           ;psect for function _round
  6081  0005                     _round:	
  6082                           
  6083                           ;incstack = 0
  6084                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6085  0005  1283               	bcf	3,5	;RP0=0, select bank0
  6086  0006  1303               	bcf	3,6	;RP1=0, select bank0
  6087  0007  086C               	movf	round@x,w
  6088  0008  00C5               	movwf	___ftadd@f1
  6089  0009  086D               	movf	round@x+1,w
  6090  000A  00C6               	movwf	___ftadd@f1+1
  6091  000B  086E               	movf	round@x+2,w
  6092  000C  00C7               	movwf	___ftadd@f1+2
  6093  000D  086C               	movf	round@x,w
  6094  000E  00E0               	movwf	trunc@x
  6095  000F  086D               	movf	round@x+1,w
  6096  0010  00E1               	movwf	trunc@x+1
  6097  0011  086E               	movf	round@x+2,w
  6098  0012  00E2               	movwf	trunc@x+2
  6099  0013  120A  158A  2138  120A  118A  	fcall	_trunc
  6100  0018  1283               	bcf	3,5	;RP0=0, select bank0
  6101  0019  1303               	bcf	3,6	;RP1=0, select bank0
  6102  001A  0860               	movf	?_trunc,w
  6103  001B  00E9               	movwf	___ftneg@f1
  6104  001C  0861               	movf	?_trunc+1,w
  6105  001D  00EA               	movwf	___ftneg@f1+1
  6106  001E  0862               	movf	?_trunc+2,w
  6107  001F  00EB               	movwf	___ftneg@f1+2
  6108  0020  160A  118A  2625  120A  118A  	fcall	___ftneg
  6109  0025  1283               	bcf	3,5	;RP0=0, select bank0
  6110  0026  1303               	bcf	3,6	;RP1=0, select bank0
  6111  0027  0869               	movf	?___ftneg,w
  6112  0028  00C8               	movwf	___ftadd@f2
  6113  0029  086A               	movf	?___ftneg+1,w
  6114  002A  00C9               	movwf	___ftadd@f2+1
  6115  002B  086B               	movf	?___ftneg+2,w
  6116  002C  00CA               	movwf	___ftadd@f2+2
  6117  002D  120A  118A  242E  120A  118A  	fcall	___ftadd
  6118  0032  1283               	bcf	3,5	;RP0=0, select bank0
  6119  0033  1303               	bcf	3,6	;RP1=0, select bank0
  6120  0034  0845               	movf	?___ftadd,w
  6121  0035  1683               	bsf	3,5	;RP0=1, select bank1
  6122  0036  1303               	bcf	3,6	;RP1=0, select bank1
  6123  0037  00A0               	movwf	round@f^(0+128)
  6124  0038  1283               	bcf	3,5	;RP0=0, select bank0
  6125  0039  1303               	bcf	3,6	;RP1=0, select bank0
  6126  003A  0846               	movf	?___ftadd+1,w
  6127  003B  1683               	bsf	3,5	;RP0=1, select bank1
  6128  003C  1303               	bcf	3,6	;RP1=0, select bank1
  6129  003D  00A1               	movwf	(round@f+1)^(0+128)
  6130  003E  1283               	bcf	3,5	;RP0=0, select bank0
  6131  003F  1303               	bcf	3,6	;RP1=0, select bank0
  6132  0040  0847               	movf	?___ftadd+2,w
  6133  0041  1683               	bsf	3,5	;RP0=1, select bank1
  6134  0042  1303               	bcf	3,6	;RP1=0, select bank1
  6135  0043  00A2               	movwf	(round@f+2)^(0+128)
  6136  0044  0820               	movf	round@f^(0+128),w
  6137  0045  1283               	bcf	3,5	;RP0=0, select bank0
  6138  0046  1303               	bcf	3,6	;RP1=0, select bank0
  6139  0047  00C5               	movwf	___ftadd@f1
  6140  0048  1683               	bsf	3,5	;RP0=1, select bank1
  6141  0049  1303               	bcf	3,6	;RP1=0, select bank1
  6142  004A  0821               	movf	(round@f+1)^(0+128),w
  6143  004B  1283               	bcf	3,5	;RP0=0, select bank0
  6144  004C  1303               	bcf	3,6	;RP1=0, select bank0
  6145  004D  00C6               	movwf	___ftadd@f1+1
  6146  004E  1683               	bsf	3,5	;RP0=1, select bank1
  6147  004F  1303               	bcf	3,6	;RP1=0, select bank1
  6148  0050  0822               	movf	(round@f+2)^(0+128),w
  6149  0051  1283               	bcf	3,5	;RP0=0, select bank0
  6150  0052  1303               	bcf	3,6	;RP1=0, select bank0
  6151  0053  00C7               	movwf	___ftadd@f1+2
  6152  0054  086C               	movf	round@x,w
  6153  0055  00C8               	movwf	___ftadd@f2
  6154  0056  086D               	movf	round@x+1,w
  6155  0057  00C9               	movwf	___ftadd@f2+1
  6156  0058  086E               	movf	round@x+2,w
  6157  0059  00CA               	movwf	___ftadd@f2+2
  6158  005A  120A  118A  242E  120A  118A  	fcall	___ftadd
  6159  005F  1283               	bcf	3,5	;RP0=0, select bank0
  6160  0060  1303               	bcf	3,6	;RP1=0, select bank0
  6161  0061  0845               	movf	?___ftadd,w
  6162  0062  00EC               	movwf	round@x
  6163  0063  0846               	movf	?___ftadd+1,w
  6164  0064  00ED               	movwf	round@x+1
  6165  0065  0847               	movf	?___ftadd+2,w
  6166  0066  00EE               	movwf	round@x+2
  6167  0067  086C               	movf	round@x,w
  6168  0068  00E0               	movwf	trunc@x
  6169  0069  086D               	movf	round@x+1,w
  6170  006A  00E1               	movwf	trunc@x+1
  6171  006B  086E               	movf	round@x+2,w
  6172  006C  00E2               	movwf	trunc@x+2
  6173  006D  120A  158A  2138   	fcall	_trunc
  6174  0070  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0071  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0072  0860               	movf	?_trunc,w
  6177  0073  00EC               	movwf	?_round
  6178  0074  0861               	movf	?_trunc+1,w
  6179  0075  00ED               	movwf	?_round+1
  6180  0076  0862               	movf	?_trunc+2,w
  6181  0077  00EE               	movwf	?_round+2
  6182  0078  0008               	return
  6183  0079                     __end_of_round:	
  6184                           
  6185                           	psect	text28
  6186  0938                     __ptext28:	
  6187 ;; *************** function _trunc *****************
  6188 ;; Defined at:
  6189 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\trunc.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  x               3   64[BANK0 ] void 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  i               3   68[BANK0 ] void 
  6194 ;;  expon           2   71[BANK0 ] int 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  3   64[BANK0 ] int 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6204 ;;      Params:         0       3       0       0       0
  6205 ;;      Locals:         0       5       0       0       0
  6206 ;;      Temps:          0       1       0       0       0
  6207 ;;      Totals:         0       9       0       0       0
  6208 ;;Total ram usage:        9 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    2
  6211 ;; This function calls:
  6212 ;;		___altoft
  6213 ;;		___fttol
  6214 ;;		_frexp
  6215 ;; This function is called by:
  6216 ;;		_round
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           
  6221                           ;psect for function _trunc
  6222  0938                     _trunc:	
  6223                           
  6224                           ;incstack = 0
  6225                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6226  0938  1283               	bcf	3,5	;RP0=0, select bank0
  6227  0939  1303               	bcf	3,6	;RP1=0, select bank0
  6228  093A  0860               	movf	trunc@x,w
  6229  093B  00F0               	movwf	frexp@value
  6230  093C  0861               	movf	trunc@x+1,w
  6231  093D  00F1               	movwf	frexp@value+1
  6232  093E  0862               	movf	trunc@x+2,w
  6233  093F  00F2               	movwf	frexp@value+2
  6234  0940  3067               	movlw	(low (trunc@expon| 0))& (0+255)
  6235  0941  00E3               	movwf	??_trunc
  6236  0942  0863               	movf	??_trunc,w
  6237  0943  00F3               	movwf	frexp@eptr
  6238  0944  160A  118A  278A  120A  158A  	fcall	_frexp
  6239  0949  1283               	bcf	3,5	;RP0=0, select bank0
  6240  094A  1303               	bcf	3,6	;RP1=0, select bank0
  6241  094B  1FE8               	btfss	trunc@expon+1,7
  6242  094C  2954               	goto	l2449
  6243  094D  3000               	movlw	0
  6244  094E  00E0               	movwf	?_trunc
  6245  094F  3000               	movlw	0
  6246  0950  00E1               	movwf	?_trunc+1
  6247  0951  3000               	movlw	0
  6248  0952  00E2               	movwf	?_trunc+2
  6249  0953  0008               	return
  6250  0954                     l2449:	
  6251  0954  3000               	movlw	0
  6252  0955  0268               	subwf	trunc@expon+1,w
  6253  0956  3015               	movlw	21
  6254  0957  1903               	skipnz
  6255  0958  0267               	subwf	trunc@expon,w
  6256  0959  1803               	btfsc	3,0
  6257  095A  0008               	return
  6258  095B  0860               	movf	trunc@x,w
  6259  095C  00D2               	movwf	___fttol@f1
  6260  095D  0861               	movf	trunc@x+1,w
  6261  095E  00D3               	movwf	___fttol@f1+1
  6262  095F  0862               	movf	trunc@x+2,w
  6263  0960  00D4               	movwf	___fttol@f1+2
  6264  0961  120A  158A  23B8  120A  158A  	fcall	___fttol
  6265  0966  1283               	bcf	3,5	;RP0=0, select bank0
  6266  0967  1303               	bcf	3,6	;RP1=0, select bank0
  6267  0968  0855               	movf	?___fttol+3,w
  6268  0969  00FB               	movwf	___altoft@c+3
  6269  096A  0854               	movf	?___fttol+2,w
  6270  096B  00FA               	movwf	___altoft@c+2
  6271  096C  0853               	movf	?___fttol+1,w
  6272  096D  00F9               	movwf	___altoft@c+1
  6273  096E  0852               	movf	?___fttol,w
  6274  096F  00F8               	movwf	___altoft@c
  6275  0970  120A  158A  2073   	fcall	___altoft
  6276  0973  0878               	movf	?___altoft,w
  6277  0974  1283               	bcf	3,5	;RP0=0, select bank0
  6278  0975  1303               	bcf	3,6	;RP1=0, select bank0
  6279  0976  00E4               	movwf	trunc@i
  6280  0977  0879               	movf	?___altoft+1,w
  6281  0978  00E5               	movwf	trunc@i+1
  6282  0979  087A               	movf	?___altoft+2,w
  6283  097A  00E6               	movwf	trunc@i+2
  6284  097B  0864               	movf	trunc@i,w
  6285  097C  00E0               	movwf	?_trunc
  6286  097D  0865               	movf	trunc@i+1,w
  6287  097E  00E1               	movwf	?_trunc+1
  6288  097F  0866               	movf	trunc@i+2,w
  6289  0980  00E2               	movwf	?_trunc+2
  6290  0981  0008               	return
  6291  0982                     __end_of_trunc:	
  6292                           
  6293                           	psect	text29
  6294  178A                     __ptext29:	
  6295 ;; *************** function _frexp *****************
  6296 ;; Defined at:
  6297 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  value           3    0[COMMON] int 
  6300 ;;  eptr            1    3[COMMON] PTR int 
  6301 ;;		 -> trunc@expon(2), 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  3    0[COMMON] PTR int 
  6306 ;; Registers used:
  6307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6313 ;;      Params:         4       0       0       0       0
  6314 ;;      Locals:         0       0       0       0       0
  6315 ;;      Temps:          2       0       0       0       0
  6316 ;;      Totals:         6       0       0       0       0
  6317 ;;Total ram usage:        6 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_trunc
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function _frexp
  6328  178A                     _frexp:	
  6329                           
  6330                           ;incstack = 0
  6331                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  6332  178A  0872               	movf	frexp@value+2,w
  6333  178B  0471               	iorwf	frexp@value+1,w
  6334  178C  0470               	iorwf	frexp@value,w
  6335  178D  1D03               	skipz
  6336  178E  2F96               	goto	l2173
  6337  178F  0873               	movf	frexp@eptr,w
  6338  1790  0084               	movwf	4
  6339  1791  1383               	bcf	3,7	;select IRP bank0
  6340  1792  0180               	clrf	0
  6341  1793  0A84               	incf	4,f
  6342  1794  0180               	clrf	0
  6343                           
  6344                           ;	Return value of _frexp is never used
  6345  1795  0008               	return
  6346  1796                     l2173:	
  6347  1796  0872               	movf	frexp@value+2,w
  6348  1797  397F               	andlw	127
  6349  1798  00F4               	movwf	??_frexp
  6350  1799  01F5               	clrf	??_frexp+1
  6351  179A  1003               	clrc
  6352  179B  0DF4               	rlf	??_frexp,f
  6353  179C  0DF5               	rlf	??_frexp+1,f
  6354  179D  0873               	movf	frexp@eptr,w
  6355  179E  0084               	movwf	4
  6356  179F  0874               	movf	??_frexp,w
  6357  17A0  1383               	bcf	3,7	;select IRP bank0
  6358  17A1  0080               	movwf	0
  6359  17A2  0A84               	incf	4,f
  6360  17A3  0875               	movf	??_frexp+1,w
  6361  17A4  0080               	movwf	0
  6362  17A5  0D71               	rlf	frexp@value+1,w
  6363  17A6  0D71               	rlf	frexp@value+1,w
  6364  17A7  3901               	andlw	1
  6365  17A8  00F4               	movwf	??_frexp
  6366  17A9  01F5               	clrf	??_frexp+1
  6367  17AA  0873               	movf	frexp@eptr,w
  6368  17AB  0084               	movwf	4
  6369  17AC  0874               	movf	??_frexp,w
  6370  17AD  0480               	iorwf	0,f
  6371  17AE  0A84               	incf	4,f
  6372  17AF  0875               	movf	??_frexp+1,w
  6373  17B0  0480               	iorwf	0,f
  6374  17B1  0873               	movf	frexp@eptr,w
  6375  17B2  0084               	movwf	4
  6376  17B3  3082               	movlw	130
  6377  17B4  0780               	addwf	0,f
  6378  17B5  0F84               	incfsz	4,f
  6379  17B6  0800               	movf	0,w
  6380  17B7  1803               	skipnc
  6381  17B8  0A00               	incf	0,w
  6382  17B9  00FF               	movwf	127
  6383  17BA  30FF               	movlw	255
  6384  17BB  077F               	addwf	127,w
  6385  17BC  0080               	movwf	0
  6386  17BD  0384               	decf	4,f
  6387  17BE  0872               	movf	frexp@value+2,w
  6388  17BF  3980               	andlw	-128
  6389  17C0  383F               	iorlw	63
  6390  17C1  00F2               	movwf	frexp@value+2
  6391  17C2  13F1               	bcf	frexp@value+1,7
  6392  17C3  0008               	return
  6393  17C4                     __end_of_frexp:	
  6394                           ;	Return value of _frexp is never used
  6395                           
  6396                           
  6397                           	psect	text30
  6398  0BB8                     __ptext30:	
  6399 ;; *************** function ___fttol *****************
  6400 ;; Defined at:
  6401 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  f1              3   50[BANK0 ] float 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  lval            4   59[BANK0 ] unsigned long 
  6406 ;;  exp1            1   63[BANK0 ] unsigned char 
  6407 ;;  sign1           1   58[BANK0 ] unsigned char 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  4   50[BANK0 ] long 
  6410 ;; Registers used:
  6411 ;;		wreg, status,2, status,0
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6417 ;;      Params:         0       4       0       0       0
  6418 ;;      Locals:         0       6       0       0       0
  6419 ;;      Temps:          0       4       0       0       0
  6420 ;;      Totals:         0      14       0       0       0
  6421 ;;Total ram usage:       14 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_UART_Init
  6427 ;;		_AdjustSec
  6428 ;;		_trunc
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function ___fttol
  6434  0BB8                     ___fttol:	
  6435                           
  6436                           ;incstack = 0
  6437                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6438  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  6439  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  6440  0BBA  0852               	movf	___fttol@f1,w
  6441  0BBB  00D6               	movwf	??___fttol
  6442  0BBC  0853               	movf	___fttol@f1+1,w
  6443  0BBD  00D7               	movwf	??___fttol+1
  6444  0BBE  0854               	movf	___fttol@f1+2,w
  6445  0BBF  00D8               	movwf	??___fttol+2
  6446  0BC0  1003               	clrc
  6447  0BC1  0D57               	rlf	??___fttol+1,w
  6448  0BC2  0D58               	rlf	??___fttol+2,w
  6449  0BC3  00D9               	movwf	??___fttol+3
  6450  0BC4  0859               	movf	??___fttol+3,w
  6451  0BC5  00DF               	movwf	___fttol@exp1
  6452  0BC6  085F               	movf	___fttol@exp1,w
  6453  0BC7  1D03               	btfss	3,2
  6454  0BC8  2BD2               	goto	l2131
  6455  0BC9  3000               	movlw	0
  6456  0BCA  00D5               	movwf	?___fttol+3
  6457  0BCB  3000               	movlw	0
  6458  0BCC  00D4               	movwf	?___fttol+2
  6459  0BCD  3000               	movlw	0
  6460  0BCE  00D3               	movwf	?___fttol+1
  6461  0BCF  3000               	movlw	0
  6462  0BD0  00D2               	movwf	?___fttol
  6463  0BD1  0008               	return
  6464  0BD2                     l2131:	
  6465  0BD2  0852               	movf	___fttol@f1,w
  6466  0BD3  00D6               	movwf	??___fttol
  6467  0BD4  0853               	movf	___fttol@f1+1,w
  6468  0BD5  00D7               	movwf	??___fttol+1
  6469  0BD6  0854               	movf	___fttol@f1+2,w
  6470  0BD7  00D8               	movwf	??___fttol+2
  6471  0BD8  3017               	movlw	23
  6472  0BD9                     u2595:	
  6473  0BD9  1003               	clrc
  6474  0BDA  0CD8               	rrf	??___fttol+2,f
  6475  0BDB  0CD7               	rrf	??___fttol+1,f
  6476  0BDC  0CD6               	rrf	??___fttol,f
  6477  0BDD  3EFF               	addlw	-1
  6478  0BDE  1D03               	skipz
  6479  0BDF  2BD9               	goto	u2595
  6480  0BE0  0856               	movf	??___fttol,w
  6481  0BE1  00D9               	movwf	??___fttol+3
  6482  0BE2  0859               	movf	??___fttol+3,w
  6483  0BE3  00DA               	movwf	___fttol@sign1
  6484  0BE4  17D3               	bsf	___fttol@f1+1,7
  6485  0BE5  30FF               	movlw	255
  6486  0BE6  05D2               	andwf	___fttol@f1,f
  6487  0BE7  30FF               	movlw	255
  6488  0BE8  05D3               	andwf	___fttol@f1+1,f
  6489  0BE9  3000               	movlw	0
  6490  0BEA  05D4               	andwf	___fttol@f1+2,f
  6491  0BEB  0852               	movf	___fttol@f1,w
  6492  0BEC  00DB               	movwf	___fttol@lval
  6493  0BED  0853               	movf	___fttol@f1+1,w
  6494  0BEE  00DC               	movwf	___fttol@lval+1
  6495  0BEF  0854               	movf	___fttol@f1+2,w
  6496  0BF0  00DD               	movwf	___fttol@lval+2
  6497  0BF1  01DE               	clrf	___fttol@lval+3
  6498  0BF2  308E               	movlw	142
  6499  0BF3  02DF               	subwf	___fttol@exp1,f
  6500  0BF4  1FDF               	btfss	___fttol@exp1,7
  6501  0BF5  2C14               	goto	l2151
  6502  0BF6  085F               	movf	___fttol@exp1,w
  6503  0BF7  3A80               	xorlw	128
  6504  0BF8  3E8F               	addlw	143
  6505  0BF9  1803               	skipnc
  6506  0BFA  2C04               	goto	l2149
  6507  0BFB  3000               	movlw	0
  6508  0BFC  00D5               	movwf	?___fttol+3
  6509  0BFD  3000               	movlw	0
  6510  0BFE  00D4               	movwf	?___fttol+2
  6511  0BFF  3000               	movlw	0
  6512  0C00  00D3               	movwf	?___fttol+1
  6513  0C01  3000               	movlw	0
  6514  0C02  00D2               	movwf	?___fttol
  6515  0C03  0008               	return
  6516  0C04                     l2149:	
  6517  0C04  3001               	movlw	1
  6518  0C05                     u2625:	
  6519  0C05  1003               	clrc
  6520  0C06  0CDE               	rrf	___fttol@lval+3,f
  6521  0C07  0CDD               	rrf	___fttol@lval+2,f
  6522  0C08  0CDC               	rrf	___fttol@lval+1,f
  6523  0C09  0CDB               	rrf	___fttol@lval,f
  6524  0C0A  3EFF               	addlw	-1
  6525  0C0B  1D03               	skipz
  6526  0C0C  2C05               	goto	u2625
  6527  0C0D  3001               	movlw	1
  6528  0C0E  00D6               	movwf	??___fttol
  6529  0C0F  0856               	movf	??___fttol,w
  6530  0C10  07DF               	addwf	___fttol@exp1,f
  6531  0C11  1903               	btfsc	3,2
  6532  0C12  2C2F               	goto	l2159
  6533  0C13  2C04               	goto	l2149
  6534  0C14                     l2151:	
  6535  0C14  3018               	movlw	24
  6536  0C15  025F               	subwf	___fttol@exp1,w
  6537  0C16  1C03               	skipc
  6538  0C17  2C2C               	goto	l703
  6539  0C18  3000               	movlw	0
  6540  0C19  00D5               	movwf	?___fttol+3
  6541  0C1A  3000               	movlw	0
  6542  0C1B  00D4               	movwf	?___fttol+2
  6543  0C1C  3000               	movlw	0
  6544  0C1D  00D3               	movwf	?___fttol+1
  6545  0C1E  3000               	movlw	0
  6546  0C1F  00D2               	movwf	?___fttol
  6547  0C20  0008               	return
  6548  0C21                     l2157:	
  6549  0C21  3001               	movlw	1
  6550  0C22  00D6               	movwf	??___fttol
  6551  0C23                     u2655:	
  6552  0C23  1003               	clrc
  6553  0C24  0DDB               	rlf	___fttol@lval,f
  6554  0C25  0DDC               	rlf	___fttol@lval+1,f
  6555  0C26  0DDD               	rlf	___fttol@lval+2,f
  6556  0C27  0DDE               	rlf	___fttol@lval+3,f
  6557  0C28  0BD6               	decfsz	??___fttol,f
  6558  0C29  2C23               	goto	u2655
  6559  0C2A  3001               	movlw	1
  6560  0C2B  02DF               	subwf	___fttol@exp1,f
  6561  0C2C                     l703:	
  6562  0C2C  085F               	movf	___fttol@exp1,w
  6563  0C2D  1D03               	btfss	3,2
  6564  0C2E  2C21               	goto	l2157
  6565  0C2F                     l2159:	
  6566  0C2F  085A               	movf	___fttol@sign1,w
  6567  0C30  1903               	btfsc	3,2
  6568  0C31  2C3D               	goto	l2163
  6569  0C32  09DB               	comf	___fttol@lval,f
  6570  0C33  09DC               	comf	___fttol@lval+1,f
  6571  0C34  09DD               	comf	___fttol@lval+2,f
  6572  0C35  09DE               	comf	___fttol@lval+3,f
  6573  0C36  0ADB               	incf	___fttol@lval,f
  6574  0C37  1903               	skipnz
  6575  0C38  0ADC               	incf	___fttol@lval+1,f
  6576  0C39  1903               	skipnz
  6577  0C3A  0ADD               	incf	___fttol@lval+2,f
  6578  0C3B  1903               	skipnz
  6579  0C3C  0ADE               	incf	___fttol@lval+3,f
  6580  0C3D                     l2163:	
  6581  0C3D  085E               	movf	___fttol@lval+3,w
  6582  0C3E  00D5               	movwf	?___fttol+3
  6583  0C3F  085D               	movf	___fttol@lval+2,w
  6584  0C40  00D4               	movwf	?___fttol+2
  6585  0C41  085C               	movf	___fttol@lval+1,w
  6586  0C42  00D3               	movwf	?___fttol+1
  6587  0C43  085B               	movf	___fttol@lval,w
  6588  0C44  00D2               	movwf	?___fttol
  6589  0C45  0008               	return
  6590  0C46                     __end_of___fttol:	
  6591                           
  6592                           	psect	text31
  6593  0873                     __ptext31:	
  6594 ;; *************** function ___altoft *****************
  6595 ;; Defined at:
  6596 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  c               4    8[COMMON] long 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  sign            1    1[BANK0 ] unsigned char 
  6601 ;;  exp             1    0[BANK0 ] unsigned char 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  3    8[COMMON] float 
  6604 ;; Registers used:
  6605 ;;		wreg, status,2, status,0, pclath, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6611 ;;      Params:         4       0       0       0       0
  6612 ;;      Locals:         0       2       0       0       0
  6613 ;;      Temps:          2       0       0       0       0
  6614 ;;      Totals:         6       2       0       0       0
  6615 ;;Total ram usage:        8 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    1
  6618 ;; This function calls:
  6619 ;;		___ftpack
  6620 ;; This function is called by:
  6621 ;;		_UART_Init
  6622 ;;		_trunc
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           
  6627                           ;psect for function ___altoft
  6628  0873                     ___altoft:	
  6629                           
  6630                           ;incstack = 0
  6631                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  6632  0873  1283               	bcf	3,5	;RP0=0, select bank0
  6633  0874  1303               	bcf	3,6	;RP1=0, select bank0
  6634  0875  01A1               	clrf	___altoft@sign
  6635  0876  308E               	movlw	142
  6636  0877  00FC               	movwf	??___altoft
  6637  0878  087C               	movf	??___altoft,w
  6638  0879  00A0               	movwf	___altoft@exp
  6639  087A  1FFB               	btfss	___altoft@c+3,7
  6640  087B  2889               	goto	l2119
  6641  087C  09F8               	comf	___altoft@c,f
  6642  087D  09F9               	comf	___altoft@c+1,f
  6643  087E  09FA               	comf	___altoft@c+2,f
  6644  087F  09FB               	comf	___altoft@c+3,f
  6645  0880  0AF8               	incf	___altoft@c,f
  6646  0881  1903               	skipnz
  6647  0882  0AF9               	incf	___altoft@c+1,f
  6648  0883  1903               	skipnz
  6649  0884  0AFA               	incf	___altoft@c+2,f
  6650  0885  1903               	skipnz
  6651  0886  0AFB               	incf	___altoft@c+3,f
  6652  0887  01A1               	clrf	___altoft@sign
  6653  0888  0AA1               	incf	___altoft@sign,f
  6654  0889                     l2119:	
  6655  0889  30FF               	movlw	255
  6656  088A  057B               	andwf	___altoft@c+3,w
  6657  088B  1903               	btfsc	3,2
  6658  088C  289B               	goto	l2121
  6659  088D  3001               	movlw	1
  6660  088E                     u2565:	
  6661  088E  1003               	clrc
  6662  088F  0CFB               	rrf	___altoft@c+3,f
  6663  0890  0CFA               	rrf	___altoft@c+2,f
  6664  0891  0CF9               	rrf	___altoft@c+1,f
  6665  0892  0CF8               	rrf	___altoft@c,f
  6666  0893  3EFF               	addlw	-1
  6667  0894  1D03               	skipz
  6668  0895  288E               	goto	u2565
  6669  0896  3001               	movlw	1
  6670  0897  00FC               	movwf	??___altoft
  6671  0898  087C               	movf	??___altoft,w
  6672  0899  07A0               	addwf	___altoft@exp,f
  6673  089A  2889               	goto	l2119
  6674  089B                     l2121:	
  6675  089B  0878               	movf	___altoft@c,w
  6676  089C  00F0               	movwf	___ftpack@arg
  6677  089D  0879               	movf	___altoft@c+1,w
  6678  089E  00F1               	movwf	___ftpack@arg+1
  6679  089F  087A               	movf	___altoft@c+2,w
  6680  08A0  00F2               	movwf	___ftpack@arg+2
  6681  08A1  0820               	movf	___altoft@exp,w
  6682  08A2  00FC               	movwf	??___altoft
  6683  08A3  087C               	movf	??___altoft,w
  6684  08A4  00F3               	movwf	___ftpack@exp
  6685  08A5  0821               	movf	___altoft@sign,w
  6686  08A6  00FD               	movwf	??___altoft+1
  6687  08A7  087D               	movf	??___altoft+1,w
  6688  08A8  00F4               	movwf	___ftpack@sign
  6689  08A9  120A  158A  234C   	fcall	___ftpack
  6690  08AC  0870               	movf	?___ftpack,w
  6691  08AD  00F8               	movwf	?___altoft
  6692  08AE  0871               	movf	?___ftpack+1,w
  6693  08AF  00F9               	movwf	?___altoft+1
  6694  08B0  0872               	movf	?___ftpack+2,w
  6695  08B1  00FA               	movwf	?___altoft+2
  6696  08B2  0008               	return
  6697  08B3                     __end_of___altoft:	
  6698                           
  6699                           	psect	text32
  6700  1625                     __ptext32:	
  6701 ;; *************** function ___ftneg *****************
  6702 ;; Defined at:
  6703 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  f1              3   73[BANK0 ] float 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  3   73[BANK0 ] float 
  6710 ;; Registers used:
  6711 ;;		wreg
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6717 ;;      Params:         0       3       0       0       0
  6718 ;;      Locals:         0       0       0       0       0
  6719 ;;      Temps:          0       0       0       0       0
  6720 ;;      Totals:         0       3       0       0       0
  6721 ;;Total ram usage:        3 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_round
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           
  6731                           ;psect for function ___ftneg
  6732  1625                     ___ftneg:	
  6733                           
  6734                           ;incstack = 0
  6735                           ; Regs used in ___ftneg: [wreg]
  6736  1625  1283               	bcf	3,5	;RP0=0, select bank0
  6737  1626  1303               	bcf	3,6	;RP1=0, select bank0
  6738  1627  086B               	movf	___ftneg@f1+2,w
  6739  1628  046A               	iorwf	___ftneg@f1+1,w
  6740  1629  0469               	iorwf	___ftneg@f1,w
  6741  162A  1903               	skipnz
  6742  162B  0008               	return
  6743  162C  3080               	movlw	128
  6744  162D  06EB               	xorwf	___ftneg@f1+2,f
  6745  162E  0008               	return
  6746  162F                     __end_of___ftneg:	
  6747                           
  6748                           	psect	text33
  6749  042E                     __ptext33:	
  6750 ;; *************** function ___ftadd *****************
  6751 ;; Defined at:
  6752 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  f1              3   37[BANK0 ] float 
  6755 ;;  f2              3   40[BANK0 ] float 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  exp1            1   49[BANK0 ] unsigned char 
  6758 ;;  exp2            1   48[BANK0 ] unsigned char 
  6759 ;;  sign            1   47[BANK0 ] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  3   37[BANK0 ] float 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0, pclath, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6769 ;;      Params:         0       6       0       0       0
  6770 ;;      Locals:         0       3       0       0       0
  6771 ;;      Temps:          0       4       0       0       0
  6772 ;;      Totals:         0      13       0       0       0
  6773 ;;Total ram usage:       13 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    1
  6776 ;; This function calls:
  6777 ;;		___ftpack
  6778 ;; This function is called by:
  6779 ;;		_UART_Init
  6780 ;;		_round
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           
  6785                           ;psect for function ___ftadd
  6786  042E                     ___ftadd:	
  6787                           
  6788                           ;incstack = 0
  6789                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6790  042E  1283               	bcf	3,5	;RP0=0, select bank0
  6791  042F  1303               	bcf	3,6	;RP1=0, select bank0
  6792  0430  0845               	movf	___ftadd@f1,w
  6793  0431  00CB               	movwf	??___ftadd
  6794  0432  0846               	movf	___ftadd@f1+1,w
  6795  0433  00CC               	movwf	??___ftadd+1
  6796  0434  0847               	movf	___ftadd@f1+2,w
  6797  0435  00CD               	movwf	??___ftadd+2
  6798  0436  1003               	clrc
  6799  0437  0D4C               	rlf	??___ftadd+1,w
  6800  0438  0D4D               	rlf	??___ftadd+2,w
  6801  0439  00CE               	movwf	??___ftadd+3
  6802  043A  084E               	movf	??___ftadd+3,w
  6803  043B  00D1               	movwf	___ftadd@exp1
  6804  043C  0848               	movf	___ftadd@f2,w
  6805  043D  00CB               	movwf	??___ftadd
  6806  043E  0849               	movf	___ftadd@f2+1,w
  6807  043F  00CC               	movwf	??___ftadd+1
  6808  0440  084A               	movf	___ftadd@f2+2,w
  6809  0441  00CD               	movwf	??___ftadd+2
  6810  0442  1003               	clrc
  6811  0443  0D4C               	rlf	??___ftadd+1,w
  6812  0444  0D4D               	rlf	??___ftadd+2,w
  6813  0445  00CE               	movwf	??___ftadd+3
  6814  0446  084E               	movf	??___ftadd+3,w
  6815  0447  00D0               	movwf	___ftadd@exp2
  6816  0448  0851               	movf	___ftadd@exp1,w
  6817  0449  1903               	btfsc	3,2
  6818  044A  2C57               	goto	l2343
  6819  044B  0850               	movf	___ftadd@exp2,w
  6820  044C  0251               	subwf	___ftadd@exp1,w
  6821  044D  1803               	skipnc
  6822  044E  2C5E               	goto	l2347
  6823  044F  0351               	decf	___ftadd@exp1,w
  6824  0450  3AFF               	xorlw	255
  6825  0451  0750               	addwf	___ftadd@exp2,w
  6826  0452  00CB               	movwf	??___ftadd
  6827  0453  3019               	movlw	25
  6828  0454  024B               	subwf	??___ftadd,w
  6829  0455  1C03               	skipc
  6830  0456  2C5E               	goto	l2347
  6831  0457                     l2343:	
  6832  0457  0848               	movf	___ftadd@f2,w
  6833  0458  00C5               	movwf	?___ftadd
  6834  0459  0849               	movf	___ftadd@f2+1,w
  6835  045A  00C6               	movwf	?___ftadd+1
  6836  045B  084A               	movf	___ftadd@f2+2,w
  6837  045C  00C7               	movwf	?___ftadd+2
  6838  045D  0008               	return
  6839  045E                     l2347:	
  6840  045E  0850               	movf	___ftadd@exp2,w
  6841  045F  1903               	btfsc	3,2
  6842  0460  0008               	return
  6843  0461  0851               	movf	___ftadd@exp1,w
  6844  0462  0250               	subwf	___ftadd@exp2,w
  6845  0463  1803               	skipnc
  6846  0464  2C6D               	goto	l2353
  6847  0465  0350               	decf	___ftadd@exp2,w
  6848  0466  3AFF               	xorlw	255
  6849  0467  0751               	addwf	___ftadd@exp1,w
  6850  0468  00CB               	movwf	??___ftadd
  6851  0469  3019               	movlw	25
  6852  046A  024B               	subwf	??___ftadd,w
  6853  046B  1803               	btfsc	3,0
  6854  046C  0008               	return
  6855  046D                     l2353:	
  6856  046D  3006               	movlw	6
  6857  046E  00CB               	movwf	??___ftadd
  6858  046F  084B               	movf	??___ftadd,w
  6859  0470  00CF               	movwf	___ftadd@sign
  6860  0471  1BC7               	btfsc	___ftadd@f1+2,7
  6861  0472  17CF               	bsf	___ftadd@sign,7
  6862  0473  1BCA               	btfsc	___ftadd@f2+2,7
  6863  0474  174F               	bsf	___ftadd@sign,6
  6864  0475  17C6               	bsf	___ftadd@f1+1,7
  6865  0476  30FF               	movlw	255
  6866  0477  05C5               	andwf	___ftadd@f1,f
  6867  0478  30FF               	movlw	255
  6868  0479  05C6               	andwf	___ftadd@f1+1,f
  6869  047A  3000               	movlw	0
  6870  047B  05C7               	andwf	___ftadd@f1+2,f
  6871  047C  17C9               	bsf	___ftadd@f2+1,7
  6872  047D  30FF               	movlw	255
  6873  047E  05C8               	andwf	___ftadd@f2,f
  6874  047F  30FF               	movlw	255
  6875  0480  05C9               	andwf	___ftadd@f2+1,f
  6876  0481  3000               	movlw	0
  6877  0482  05CA               	andwf	___ftadd@f2+2,f
  6878  0483  0850               	movf	___ftadd@exp2,w
  6879  0484  0251               	subwf	___ftadd@exp1,w
  6880  0485  1803               	skipnc
  6881  0486  2CAD               	goto	l2375
  6882  0487                     l2365:	
  6883  0487  3001               	movlw	1
  6884  0488                     u3435:	
  6885  0488  1003               	clrc
  6886  0489  0DC8               	rlf	___ftadd@f2,f
  6887  048A  0DC9               	rlf	___ftadd@f2+1,f
  6888  048B  0DCA               	rlf	___ftadd@f2+2,f
  6889  048C  3EFF               	addlw	-1
  6890  048D  1D03               	skipz
  6891  048E  2C88               	goto	u3435
  6892  048F  3001               	movlw	1
  6893  0490  02D0               	subwf	___ftadd@exp2,f
  6894  0491  0850               	movf	___ftadd@exp2,w
  6895  0492  0651               	xorwf	___ftadd@exp1,w
  6896  0493  1903               	skipnz
  6897  0494  2CA8               	goto	l2373
  6898  0495  3001               	movlw	1
  6899  0496  02CF               	subwf	___ftadd@sign,f
  6900  0497  084F               	movf	___ftadd@sign,w
  6901  0498  3907               	andlw	7
  6902  0499  1903               	btfsc	3,2
  6903  049A  2CA8               	goto	l2373
  6904  049B  2C87               	goto	l2365
  6905  049C                     l2371:	
  6906  049C  3001               	movlw	1
  6907  049D                     u3465:	
  6908  049D  1003               	clrc
  6909  049E  0CC7               	rrf	___ftadd@f1+2,f
  6910  049F  0CC6               	rrf	___ftadd@f1+1,f
  6911  04A0  0CC5               	rrf	___ftadd@f1,f
  6912  04A1  3EFF               	addlw	-1
  6913  04A2  1D03               	skipz
  6914  04A3  2C9D               	goto	u3465
  6915  04A4  3001               	movlw	1
  6916  04A5  00CB               	movwf	??___ftadd
  6917  04A6  084B               	movf	??___ftadd,w
  6918  04A7  07D1               	addwf	___ftadd@exp1,f
  6919  04A8                     l2373:	
  6920  04A8  0851               	movf	___ftadd@exp1,w
  6921  04A9  0650               	xorwf	___ftadd@exp2,w
  6922  04AA  1903               	btfsc	3,2
  6923  04AB  2CD6               	goto	l643
  6924  04AC  2C9C               	goto	l2371
  6925  04AD                     l2375:	
  6926  04AD  0851               	movf	___ftadd@exp1,w
  6927  04AE  0250               	subwf	___ftadd@exp2,w
  6928  04AF  1803               	skipnc
  6929  04B0  2CD6               	goto	l643
  6930  04B1                     l2377:	
  6931  04B1  3001               	movlw	1
  6932  04B2                     u3495:	
  6933  04B2  1003               	clrc
  6934  04B3  0DC5               	rlf	___ftadd@f1,f
  6935  04B4  0DC6               	rlf	___ftadd@f1+1,f
  6936  04B5  0DC7               	rlf	___ftadd@f1+2,f
  6937  04B6  3EFF               	addlw	-1
  6938  04B7  1D03               	skipz
  6939  04B8  2CB2               	goto	u3495
  6940  04B9  3001               	movlw	1
  6941  04BA  02D1               	subwf	___ftadd@exp1,f
  6942  04BB  0850               	movf	___ftadd@exp2,w
  6943  04BC  0651               	xorwf	___ftadd@exp1,w
  6944  04BD  1903               	skipnz
  6945  04BE  2CD2               	goto	l2385
  6946  04BF  3001               	movlw	1
  6947  04C0  02CF               	subwf	___ftadd@sign,f
  6948  04C1  084F               	movf	___ftadd@sign,w
  6949  04C2  3907               	andlw	7
  6950  04C3  1903               	btfsc	3,2
  6951  04C4  2CD2               	goto	l2385
  6952  04C5  2CB1               	goto	l2377
  6953  04C6                     l2383:	
  6954  04C6  3001               	movlw	1
  6955  04C7                     u3525:	
  6956  04C7  1003               	clrc
  6957  04C8  0CCA               	rrf	___ftadd@f2+2,f
  6958  04C9  0CC9               	rrf	___ftadd@f2+1,f
  6959  04CA  0CC8               	rrf	___ftadd@f2,f
  6960  04CB  3EFF               	addlw	-1
  6961  04CC  1D03               	skipz
  6962  04CD  2CC7               	goto	u3525
  6963  04CE  3001               	movlw	1
  6964  04CF  00CB               	movwf	??___ftadd
  6965  04D0  084B               	movf	??___ftadd,w
  6966  04D1  07D0               	addwf	___ftadd@exp2,f
  6967  04D2                     l2385:	
  6968  04D2  0851               	movf	___ftadd@exp1,w
  6969  04D3  0650               	xorwf	___ftadd@exp2,w
  6970  04D4  1D03               	skipz
  6971  04D5  2CC6               	goto	l2383
  6972  04D6                     l643:	
  6973  04D6  1FCF               	btfss	___ftadd@sign,7
  6974  04D7  2CE8               	goto	l2389
  6975  04D8  30FF               	movlw	255
  6976  04D9  06C5               	xorwf	___ftadd@f1,f
  6977  04DA  30FF               	movlw	255
  6978  04DB  06C6               	xorwf	___ftadd@f1+1,f
  6979  04DC  30FF               	movlw	255
  6980  04DD  06C7               	xorwf	___ftadd@f1+2,f
  6981  04DE  3001               	movlw	1
  6982  04DF  07C5               	addwf	___ftadd@f1,f
  6983  04E0  3000               	movlw	0
  6984  04E1  1803               	skipnc
  6985  04E2  3001               	movlw	1
  6986  04E3  07C6               	addwf	___ftadd@f1+1,f
  6987  04E4  3000               	movlw	0
  6988  04E5  1803               	skipnc
  6989  04E6  3001               	movlw	1
  6990  04E7  07C7               	addwf	___ftadd@f1+2,f
  6991  04E8                     l2389:	
  6992  04E8  1F4F               	btfss	___ftadd@sign,6
  6993  04E9  2CFA               	goto	l2393
  6994  04EA  30FF               	movlw	255
  6995  04EB  06C8               	xorwf	___ftadd@f2,f
  6996  04EC  30FF               	movlw	255
  6997  04ED  06C9               	xorwf	___ftadd@f2+1,f
  6998  04EE  30FF               	movlw	255
  6999  04EF  06CA               	xorwf	___ftadd@f2+2,f
  7000  04F0  3001               	movlw	1
  7001  04F1  07C8               	addwf	___ftadd@f2,f
  7002  04F2  3000               	movlw	0
  7003  04F3  1803               	skipnc
  7004  04F4  3001               	movlw	1
  7005  04F5  07C9               	addwf	___ftadd@f2+1,f
  7006  04F6  3000               	movlw	0
  7007  04F7  1803               	skipnc
  7008  04F8  3001               	movlw	1
  7009  04F9  07CA               	addwf	___ftadd@f2+2,f
  7010  04FA                     l2393:	
  7011  04FA  01CF               	clrf	___ftadd@sign
  7012  04FB  0845               	movf	___ftadd@f1,w
  7013  04FC  07C8               	addwf	___ftadd@f2,f
  7014  04FD  0846               	movf	___ftadd@f1+1,w
  7015  04FE  1103               	clrz
  7016  04FF  1803               	skipnc
  7017  0500  0A46               	incf	___ftadd@f1+1,w
  7018  0501  1D03               	btfss	3,2
  7019  0502  07C9               	addwf	___ftadd@f2+1,f
  7020  0503  0847               	movf	___ftadd@f1+2,w
  7021  0504  1103               	clrz
  7022  0505  1803               	skipnc
  7023  0506  0A47               	incf	___ftadd@f1+2,w
  7024  0507  1D03               	btfss	3,2
  7025  0508  07CA               	addwf	___ftadd@f2+2,f
  7026  0509  1FCA               	btfss	___ftadd@f2+2,7
  7027  050A  2D1D               	goto	l2403
  7028  050B  30FF               	movlw	255
  7029  050C  06C8               	xorwf	___ftadd@f2,f
  7030  050D  30FF               	movlw	255
  7031  050E  06C9               	xorwf	___ftadd@f2+1,f
  7032  050F  30FF               	movlw	255
  7033  0510  06CA               	xorwf	___ftadd@f2+2,f
  7034  0511  3001               	movlw	1
  7035  0512  07C8               	addwf	___ftadd@f2,f
  7036  0513  3000               	movlw	0
  7037  0514  1803               	skipnc
  7038  0515  3001               	movlw	1
  7039  0516  07C9               	addwf	___ftadd@f2+1,f
  7040  0517  3000               	movlw	0
  7041  0518  1803               	skipnc
  7042  0519  3001               	movlw	1
  7043  051A  07CA               	addwf	___ftadd@f2+2,f
  7044  051B  01CF               	clrf	___ftadd@sign
  7045  051C  0ACF               	incf	___ftadd@sign,f
  7046  051D                     l2403:	
  7047  051D  0848               	movf	___ftadd@f2,w
  7048  051E  00F0               	movwf	___ftpack@arg
  7049  051F  0849               	movf	___ftadd@f2+1,w
  7050  0520  00F1               	movwf	___ftpack@arg+1
  7051  0521  084A               	movf	___ftadd@f2+2,w
  7052  0522  00F2               	movwf	___ftpack@arg+2
  7053  0523  0851               	movf	___ftadd@exp1,w
  7054  0524  00CB               	movwf	??___ftadd
  7055  0525  084B               	movf	??___ftadd,w
  7056  0526  00F3               	movwf	___ftpack@exp
  7057  0527  084F               	movf	___ftadd@sign,w
  7058  0528  00CC               	movwf	??___ftadd+1
  7059  0529  084C               	movf	??___ftadd+1,w
  7060  052A  00F4               	movwf	___ftpack@sign
  7061  052B  120A  158A  234C   	fcall	___ftpack
  7062  052E  0870               	movf	?___ftpack,w
  7063  052F  1283               	bcf	3,5	;RP0=0, select bank0
  7064  0530  1303               	bcf	3,6	;RP1=0, select bank0
  7065  0531  00C5               	movwf	?___ftadd
  7066  0532  0871               	movf	?___ftpack+1,w
  7067  0533  00C6               	movwf	?___ftadd+1
  7068  0534  0872               	movf	?___ftpack+2,w
  7069  0535  00C7               	movwf	?___ftadd+2
  7070  0536  0008               	return
  7071  0537                     __end_of___ftadd:	
  7072                           
  7073                           	psect	text34
  7074  035B                     __ptext34:	
  7075 ;; *************** function ___ftmul *****************
  7076 ;; Defined at:
  7077 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  f1              3    5[BANK0 ] float 
  7080 ;;  f2              3    8[BANK0 ] float 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  f3_as_produc    3   16[BANK0 ] unsigned um
  7083 ;;  sign            1   20[BANK0 ] unsigned char 
  7084 ;;  cntr            1   19[BANK0 ] unsigned char 
  7085 ;;  exp             1   15[BANK0 ] unsigned char 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  3    5[BANK0 ] float 
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0, pclath, cstack
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7095 ;;      Params:         0       6       0       0       0
  7096 ;;      Locals:         0       6       0       0       0
  7097 ;;      Temps:          0       4       0       0       0
  7098 ;;      Totals:         0      16       0       0       0
  7099 ;;Total ram usage:       16 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:    1
  7102 ;; This function calls:
  7103 ;;		___ftpack
  7104 ;; This function is called by:
  7105 ;;		_UART_Init
  7106 ;;		_AdjustSec
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function ___ftmul
  7112  035B                     ___ftmul:	
  7113                           
  7114                           ;incstack = 0
  7115                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7116  035B  1283               	bcf	3,5	;RP0=0, select bank0
  7117  035C  1303               	bcf	3,6	;RP1=0, select bank0
  7118  035D  0825               	movf	___ftmul@f1,w
  7119  035E  00AB               	movwf	??___ftmul
  7120  035F  0826               	movf	___ftmul@f1+1,w
  7121  0360  00AC               	movwf	??___ftmul+1
  7122  0361  0827               	movf	___ftmul@f1+2,w
  7123  0362  00AD               	movwf	??___ftmul+2
  7124  0363  1003               	clrc
  7125  0364  0D2C               	rlf	??___ftmul+1,w
  7126  0365  0D2D               	rlf	??___ftmul+2,w
  7127  0366  00AE               	movwf	??___ftmul+3
  7128  0367  082E               	movf	??___ftmul+3,w
  7129  0368  00AF               	movwf	___ftmul@exp
  7130  0369  082F               	movf	___ftmul@exp,w
  7131  036A  1D03               	btfss	3,2
  7132  036B  2B73               	goto	l2733
  7133  036C  3000               	movlw	0
  7134  036D  00A5               	movwf	?___ftmul
  7135  036E  3000               	movlw	0
  7136  036F  00A6               	movwf	?___ftmul+1
  7137  0370  3000               	movlw	0
  7138  0371  00A7               	movwf	?___ftmul+2
  7139  0372  0008               	return
  7140  0373                     l2733:	
  7141  0373  0828               	movf	___ftmul@f2,w
  7142  0374  00AB               	movwf	??___ftmul
  7143  0375  0829               	movf	___ftmul@f2+1,w
  7144  0376  00AC               	movwf	??___ftmul+1
  7145  0377  082A               	movf	___ftmul@f2+2,w
  7146  0378  00AD               	movwf	??___ftmul+2
  7147  0379  1003               	clrc
  7148  037A  0D2C               	rlf	??___ftmul+1,w
  7149  037B  0D2D               	rlf	??___ftmul+2,w
  7150  037C  00AE               	movwf	??___ftmul+3
  7151  037D  082E               	movf	??___ftmul+3,w
  7152  037E  00B4               	movwf	___ftmul@sign
  7153  037F  0834               	movf	___ftmul@sign,w
  7154  0380  1D03               	btfss	3,2
  7155  0381  2B89               	goto	l2739
  7156  0382  3000               	movlw	0
  7157  0383  00A5               	movwf	?___ftmul
  7158  0384  3000               	movlw	0
  7159  0385  00A6               	movwf	?___ftmul+1
  7160  0386  3000               	movlw	0
  7161  0387  00A7               	movwf	?___ftmul+2
  7162  0388  0008               	return
  7163  0389                     l2739:	
  7164  0389  0834               	movf	___ftmul@sign,w
  7165  038A  3E7B               	addlw	123
  7166  038B  00AB               	movwf	??___ftmul
  7167  038C  082B               	movf	??___ftmul,w
  7168  038D  07AF               	addwf	___ftmul@exp,f
  7169  038E  0825               	movf	___ftmul@f1,w
  7170  038F  00AB               	movwf	??___ftmul
  7171  0390  0826               	movf	___ftmul@f1+1,w
  7172  0391  00AC               	movwf	??___ftmul+1
  7173  0392  0827               	movf	___ftmul@f1+2,w
  7174  0393  00AD               	movwf	??___ftmul+2
  7175  0394  3010               	movlw	16
  7176  0395                     u4205:	
  7177  0395  1003               	clrc
  7178  0396  0CAD               	rrf	??___ftmul+2,f
  7179  0397  0CAC               	rrf	??___ftmul+1,f
  7180  0398  0CAB               	rrf	??___ftmul,f
  7181  0399  3EFF               	addlw	-1
  7182  039A  1D03               	skipz
  7183  039B  2B95               	goto	u4205
  7184  039C  082B               	movf	??___ftmul,w
  7185  039D  00AE               	movwf	??___ftmul+3
  7186  039E  082E               	movf	??___ftmul+3,w
  7187  039F  00B4               	movwf	___ftmul@sign
  7188  03A0  0828               	movf	___ftmul@f2,w
  7189  03A1  00AB               	movwf	??___ftmul
  7190  03A2  0829               	movf	___ftmul@f2+1,w
  7191  03A3  00AC               	movwf	??___ftmul+1
  7192  03A4  082A               	movf	___ftmul@f2+2,w
  7193  03A5  00AD               	movwf	??___ftmul+2
  7194  03A6  3010               	movlw	16
  7195  03A7                     u4215:	
  7196  03A7  1003               	clrc
  7197  03A8  0CAD               	rrf	??___ftmul+2,f
  7198  03A9  0CAC               	rrf	??___ftmul+1,f
  7199  03AA  0CAB               	rrf	??___ftmul,f
  7200  03AB  3EFF               	addlw	-1
  7201  03AC  1D03               	skipz
  7202  03AD  2BA7               	goto	u4215
  7203  03AE  082B               	movf	??___ftmul,w
  7204  03AF  00AE               	movwf	??___ftmul+3
  7205  03B0  082E               	movf	??___ftmul+3,w
  7206  03B1  06B4               	xorwf	___ftmul@sign,f
  7207  03B2  3080               	movlw	128
  7208  03B3  00AB               	movwf	??___ftmul
  7209  03B4  082B               	movf	??___ftmul,w
  7210  03B5  05B4               	andwf	___ftmul@sign,f
  7211  03B6  17A6               	bsf	___ftmul@f1+1,7
  7212  03B7  17A9               	bsf	___ftmul@f2+1,7
  7213  03B8  30FF               	movlw	255
  7214  03B9  05A8               	andwf	___ftmul@f2,f
  7215  03BA  30FF               	movlw	255
  7216  03BB  05A9               	andwf	___ftmul@f2+1,f
  7217  03BC  3000               	movlw	0
  7218  03BD  05AA               	andwf	___ftmul@f2+2,f
  7219  03BE  3000               	movlw	0
  7220  03BF  00B0               	movwf	___ftmul@f3_as_product
  7221  03C0  3000               	movlw	0
  7222  03C1  00B1               	movwf	___ftmul@f3_as_product+1
  7223  03C2  3000               	movlw	0
  7224  03C3  00B2               	movwf	___ftmul@f3_as_product+2
  7225  03C4  3007               	movlw	7
  7226  03C5  00AB               	movwf	??___ftmul
  7227  03C6  082B               	movf	??___ftmul,w
  7228  03C7  00B3               	movwf	___ftmul@cntr
  7229  03C8                     l2751:	
  7230  03C8  1C25               	btfss	___ftmul@f1,0
  7231  03C9  2BD8               	goto	l2755
  7232  03CA  0828               	movf	___ftmul@f2,w
  7233  03CB  07B0               	addwf	___ftmul@f3_as_product,f
  7234  03CC  0829               	movf	___ftmul@f2+1,w
  7235  03CD  1103               	clrz
  7236  03CE  1803               	skipnc
  7237  03CF  0A29               	incf	___ftmul@f2+1,w
  7238  03D0  1D03               	btfss	3,2
  7239  03D1  07B1               	addwf	___ftmul@f3_as_product+1,f
  7240  03D2  082A               	movf	___ftmul@f2+2,w
  7241  03D3  1103               	clrz
  7242  03D4  1803               	skipnc
  7243  03D5  0A2A               	incf	___ftmul@f2+2,w
  7244  03D6  1D03               	btfss	3,2
  7245  03D7  07B2               	addwf	___ftmul@f3_as_product+2,f
  7246  03D8                     l2755:	
  7247  03D8  3001               	movlw	1
  7248  03D9                     u4245:	
  7249  03D9  1003               	clrc
  7250  03DA  0CA7               	rrf	___ftmul@f1+2,f
  7251  03DB  0CA6               	rrf	___ftmul@f1+1,f
  7252  03DC  0CA5               	rrf	___ftmul@f1,f
  7253  03DD  3EFF               	addlw	-1
  7254  03DE  1D03               	skipz
  7255  03DF  2BD9               	goto	u4245
  7256  03E0  3001               	movlw	1
  7257  03E1                     u4255:	
  7258  03E1  1003               	clrc
  7259  03E2  0DA8               	rlf	___ftmul@f2,f
  7260  03E3  0DA9               	rlf	___ftmul@f2+1,f
  7261  03E4  0DAA               	rlf	___ftmul@f2+2,f
  7262  03E5  3EFF               	addlw	-1
  7263  03E6  1D03               	skipz
  7264  03E7  2BE1               	goto	u4255
  7265  03E8  3001               	movlw	1
  7266  03E9  02B3               	subwf	___ftmul@cntr,f
  7267  03EA  1D03               	btfss	3,2
  7268  03EB  2BC8               	goto	l2751
  7269  03EC  3009               	movlw	9
  7270  03ED  00AB               	movwf	??___ftmul
  7271  03EE  082B               	movf	??___ftmul,w
  7272  03EF  00B3               	movwf	___ftmul@cntr
  7273  03F0                     l2763:	
  7274  03F0  1C25               	btfss	___ftmul@f1,0
  7275  03F1  2C00               	goto	l2767
  7276  03F2  0828               	movf	___ftmul@f2,w
  7277  03F3  07B0               	addwf	___ftmul@f3_as_product,f
  7278  03F4  0829               	movf	___ftmul@f2+1,w
  7279  03F5  1103               	clrz
  7280  03F6  1803               	skipnc
  7281  03F7  0A29               	incf	___ftmul@f2+1,w
  7282  03F8  1D03               	btfss	3,2
  7283  03F9  07B1               	addwf	___ftmul@f3_as_product+1,f
  7284  03FA  082A               	movf	___ftmul@f2+2,w
  7285  03FB  1103               	clrz
  7286  03FC  1803               	skipnc
  7287  03FD  0A2A               	incf	___ftmul@f2+2,w
  7288  03FE  1D03               	btfss	3,2
  7289  03FF  07B2               	addwf	___ftmul@f3_as_product+2,f
  7290  0400                     l2767:	
  7291  0400  3001               	movlw	1
  7292  0401                     u4295:	
  7293  0401  1003               	clrc
  7294  0402  0CA7               	rrf	___ftmul@f1+2,f
  7295  0403  0CA6               	rrf	___ftmul@f1+1,f
  7296  0404  0CA5               	rrf	___ftmul@f1,f
  7297  0405  3EFF               	addlw	-1
  7298  0406  1D03               	skipz
  7299  0407  2C01               	goto	u4295
  7300  0408  3001               	movlw	1
  7301  0409                     u4305:	
  7302  0409  1003               	clrc
  7303  040A  0CB2               	rrf	___ftmul@f3_as_product+2,f
  7304  040B  0CB1               	rrf	___ftmul@f3_as_product+1,f
  7305  040C  0CB0               	rrf	___ftmul@f3_as_product,f
  7306  040D  3EFF               	addlw	-1
  7307  040E  1D03               	skipz
  7308  040F  2C09               	goto	u4305
  7309  0410  3001               	movlw	1
  7310  0411  02B3               	subwf	___ftmul@cntr,f
  7311  0412  1D03               	btfss	3,2
  7312  0413  2BF0               	goto	l2763
  7313  0414  0830               	movf	___ftmul@f3_as_product,w
  7314  0415  00F0               	movwf	___ftpack@arg
  7315  0416  0831               	movf	___ftmul@f3_as_product+1,w
  7316  0417  00F1               	movwf	___ftpack@arg+1
  7317  0418  0832               	movf	___ftmul@f3_as_product+2,w
  7318  0419  00F2               	movwf	___ftpack@arg+2
  7319  041A  082F               	movf	___ftmul@exp,w
  7320  041B  00AB               	movwf	??___ftmul
  7321  041C  082B               	movf	??___ftmul,w
  7322  041D  00F3               	movwf	___ftpack@exp
  7323  041E  0834               	movf	___ftmul@sign,w
  7324  041F  00AC               	movwf	??___ftmul+1
  7325  0420  082C               	movf	??___ftmul+1,w
  7326  0421  00F4               	movwf	___ftpack@sign
  7327  0422  120A  158A  234C   	fcall	___ftpack
  7328  0425  0870               	movf	?___ftpack,w
  7329  0426  1283               	bcf	3,5	;RP0=0, select bank0
  7330  0427  1303               	bcf	3,6	;RP1=0, select bank0
  7331  0428  00A5               	movwf	?___ftmul
  7332  0429  0871               	movf	?___ftpack+1,w
  7333  042A  00A6               	movwf	?___ftmul+1
  7334  042B  0872               	movf	?___ftpack+2,w
  7335  042C  00A7               	movwf	?___ftmul+2
  7336  042D  0008               	return
  7337  042E                     __end_of___ftmul:	
  7338                           
  7339                           	psect	text35
  7340  169E                     __ptext35:	
  7341 ;; *************** function ___abtoft *****************
  7342 ;; Defined at:
  7343 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abtoft.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  c               1    wreg     char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  c               1   12[COMMON] char 
  7348 ;;  f1              3    0        float 
  7349 ;;  sign            1   11[COMMON] unsigned char 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  3    8[COMMON] float 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0, pclath, cstack
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7359 ;;      Params:         3       0       0       0       0
  7360 ;;      Locals:         2       0       0       0       0
  7361 ;;      Temps:          0       5       0       0       0
  7362 ;;      Totals:         5       5       0       0       0
  7363 ;;Total ram usage:       10 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    1
  7366 ;; This function calls:
  7367 ;;		___ftpack
  7368 ;; This function is called by:
  7369 ;;		_AdjustSec
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function ___abtoft
  7375  169E                     ___abtoft:	
  7376                           
  7377                           ;incstack = 0
  7378                           ; Regs used in ___abtoft: [wreg+status,2+status,0+pclath+cstack]
  7379                           ;___abtoft@c stored from wreg
  7380  169E  00FC               	movwf	___abtoft@c
  7381  169F  01FB               	clrf	___abtoft@sign
  7382  16A0  1FFC               	btfss	___abtoft@c,7
  7383  16A1  2EA6               	goto	l2641
  7384  16A2  09FC               	comf	___abtoft@c,f
  7385  16A3  0AFC               	incf	___abtoft@c,f
  7386  16A4  01FB               	clrf	___abtoft@sign
  7387  16A5  0AFB               	incf	___abtoft@sign,f
  7388  16A6                     l2641:	
  7389  16A6  087C               	movf	___abtoft@c,w
  7390  16A7  1283               	bcf	3,5	;RP0=0, select bank0
  7391  16A8  1303               	bcf	3,6	;RP1=0, select bank0
  7392  16A9  00A0               	movwf	??___abtoft
  7393  16AA  01A1               	clrf	??___abtoft+1
  7394  16AB  01A2               	clrf	??___abtoft+2
  7395  16AC  0820               	movf	??___abtoft,w
  7396  16AD  00F0               	movwf	___ftpack@arg
  7397  16AE  0821               	movf	??___abtoft+1,w
  7398  16AF  00F1               	movwf	___ftpack@arg+1
  7399  16B0  0822               	movf	??___abtoft+2,w
  7400  16B1  00F2               	movwf	___ftpack@arg+2
  7401  16B2  308E               	movlw	142
  7402  16B3  00A3               	movwf	??___abtoft+3
  7403  16B4  0823               	movf	??___abtoft+3,w
  7404  16B5  00F3               	movwf	___ftpack@exp
  7405  16B6  087B               	movf	___abtoft@sign,w
  7406  16B7  00A4               	movwf	??___abtoft+4
  7407  16B8  0824               	movf	??___abtoft+4,w
  7408  16B9  00F4               	movwf	___ftpack@sign
  7409  16BA  120A  158A  234C   	fcall	___ftpack
  7410  16BD  0870               	movf	?___ftpack,w
  7411  16BE  00F8               	movwf	?___abtoft
  7412  16BF  0871               	movf	?___ftpack+1,w
  7413  16C0  00F9               	movwf	?___abtoft+1
  7414  16C1  0872               	movf	?___ftpack+2,w
  7415  16C2  00FA               	movwf	?___abtoft+2
  7416  16C3  0008               	return
  7417  16C4                     __end_of___abtoft:	
  7418                           
  7419                           	psect	text36
  7420  0B4C                     __ptext36:	
  7421 ;; *************** function ___ftpack *****************
  7422 ;; Defined at:
  7423 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;  arg             3    0[COMMON] unsigned um
  7426 ;;  exp             1    3[COMMON] unsigned char 
  7427 ;;  sign            1    4[COMMON] unsigned char 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  3    0[COMMON] float 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7439 ;;      Params:         5       0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0
  7441 ;;      Temps:          3       0       0       0       0
  7442 ;;      Totals:         8       0       0       0       0
  7443 ;;Total ram usage:        8 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		___abtoft
  7449 ;;		___altoft
  7450 ;;		___ftadd
  7451 ;;		___ftdiv
  7452 ;;		___ftmul
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           
  7457                           ;psect for function ___ftpack
  7458  0B4C                     ___ftpack:	
  7459                           
  7460                           ;incstack = 0
  7461                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7462  0B4C  0873               	movf	___ftpack@exp,w
  7463  0B4D  1903               	btfsc	3,2
  7464  0B4E  2B54               	goto	l2049
  7465  0B4F  0872               	movf	___ftpack@arg+2,w
  7466  0B50  0471               	iorwf	___ftpack@arg+1,w
  7467  0B51  0470               	iorwf	___ftpack@arg,w
  7468  0B52  1D03               	skipz
  7469  0B53  2B67               	goto	l2055
  7470  0B54                     l2049:	
  7471  0B54  3000               	movlw	0
  7472  0B55  00F0               	movwf	?___ftpack
  7473  0B56  3000               	movlw	0
  7474  0B57  00F1               	movwf	?___ftpack+1
  7475  0B58  3000               	movlw	0
  7476  0B59  00F2               	movwf	?___ftpack+2
  7477  0B5A  0008               	return
  7478  0B5B                     l2053:	
  7479  0B5B  3001               	movlw	1
  7480  0B5C  00F5               	movwf	??___ftpack
  7481  0B5D  0875               	movf	??___ftpack,w
  7482  0B5E  07F3               	addwf	___ftpack@exp,f
  7483  0B5F  3001               	movlw	1
  7484  0B60                     u2435:	
  7485  0B60  1003               	clrc
  7486  0B61  0CF2               	rrf	___ftpack@arg+2,f
  7487  0B62  0CF1               	rrf	___ftpack@arg+1,f
  7488  0B63  0CF0               	rrf	___ftpack@arg,f
  7489  0B64  3EFF               	addlw	-1
  7490  0B65  1D03               	skipz
  7491  0B66  2B60               	goto	u2435
  7492  0B67                     l2055:	
  7493  0B67  30FE               	movlw	254
  7494  0B68  0572               	andwf	___ftpack@arg+2,w
  7495  0B69  1903               	btfsc	3,2
  7496  0B6A  2B82               	goto	l612
  7497  0B6B  2B5B               	goto	l2053
  7498  0B6C                     l2057:	
  7499  0B6C  3001               	movlw	1
  7500  0B6D  00F5               	movwf	??___ftpack
  7501  0B6E  0875               	movf	??___ftpack,w
  7502  0B6F  07F3               	addwf	___ftpack@exp,f
  7503  0B70  3001               	movlw	1
  7504  0B71  07F0               	addwf	___ftpack@arg,f
  7505  0B72  3000               	movlw	0
  7506  0B73  1803               	skipnc
  7507  0B74  3001               	movlw	1
  7508  0B75  07F1               	addwf	___ftpack@arg+1,f
  7509  0B76  3000               	movlw	0
  7510  0B77  1803               	skipnc
  7511  0B78  3001               	movlw	1
  7512  0B79  07F2               	addwf	___ftpack@arg+2,f
  7513  0B7A  3001               	movlw	1
  7514  0B7B                     u2455:	
  7515  0B7B  1003               	clrc
  7516  0B7C  0CF2               	rrf	___ftpack@arg+2,f
  7517  0B7D  0CF1               	rrf	___ftpack@arg+1,f
  7518  0B7E  0CF0               	rrf	___ftpack@arg,f
  7519  0B7F  3EFF               	addlw	-1
  7520  0B80  1D03               	skipz
  7521  0B81  2B7B               	goto	u2455
  7522  0B82                     l612:	
  7523  0B82  30FF               	movlw	255
  7524  0B83  0572               	andwf	___ftpack@arg+2,w
  7525  0B84  1903               	btfsc	3,2
  7526  0B85  2B91               	goto	l2065
  7527  0B86  2B6C               	goto	l2057
  7528  0B87                     l2063:	
  7529  0B87  3001               	movlw	1
  7530  0B88  02F3               	subwf	___ftpack@exp,f
  7531  0B89  3001               	movlw	1
  7532  0B8A                     u2475:	
  7533  0B8A  1003               	clrc
  7534  0B8B  0DF0               	rlf	___ftpack@arg,f
  7535  0B8C  0DF1               	rlf	___ftpack@arg+1,f
  7536  0B8D  0DF2               	rlf	___ftpack@arg+2,f
  7537  0B8E  3EFF               	addlw	-1
  7538  0B8F  1D03               	skipz
  7539  0B90  2B8A               	goto	u2475
  7540  0B91                     l2065:	
  7541  0B91  1BF1               	btfsc	___ftpack@arg+1,7
  7542  0B92  2B97               	goto	l619
  7543  0B93  3002               	movlw	2
  7544  0B94  0273               	subwf	___ftpack@exp,w
  7545  0B95  1803               	skipnc
  7546  0B96  2B87               	goto	l2063
  7547  0B97                     l619:	
  7548  0B97  1873               	btfsc	___ftpack@exp,0
  7549  0B98  2B9F               	goto	l620
  7550  0B99  30FF               	movlw	255
  7551  0B9A  05F0               	andwf	___ftpack@arg,f
  7552  0B9B  307F               	movlw	127
  7553  0B9C  05F1               	andwf	___ftpack@arg+1,f
  7554  0B9D  30FF               	movlw	255
  7555  0B9E  05F2               	andwf	___ftpack@arg+2,f
  7556  0B9F                     l620:	
  7557  0B9F  1003               	clrc
  7558  0BA0  0CF3               	rrf	___ftpack@exp,f
  7559  0BA1  0873               	movf	___ftpack@exp,w
  7560  0BA2  00F5               	movwf	??___ftpack
  7561  0BA3  01F6               	clrf	??___ftpack+1
  7562  0BA4  01F7               	clrf	??___ftpack+2
  7563  0BA5  3010               	movlw	16
  7564  0BA6                     u2515:	
  7565  0BA6  1003               	clrc
  7566  0BA7  0DF5               	rlf	??___ftpack,f
  7567  0BA8  0DF6               	rlf	??___ftpack+1,f
  7568  0BA9  0DF7               	rlf	??___ftpack+2,f
  7569  0BAA  3EFF               	addlw	-1
  7570  0BAB  1D03               	skipz
  7571  0BAC  2BA6               	goto	u2515
  7572  0BAD  0875               	movf	??___ftpack,w
  7573  0BAE  04F0               	iorwf	___ftpack@arg,f
  7574  0BAF  0876               	movf	??___ftpack+1,w
  7575  0BB0  04F1               	iorwf	___ftpack@arg+1,f
  7576  0BB1  0877               	movf	??___ftpack+2,w
  7577  0BB2  04F2               	iorwf	___ftpack@arg+2,f
  7578  0BB3  0874               	movf	___ftpack@sign,w
  7579  0BB4  1903               	btfsc	3,2
  7580  0BB5  0008               	return
  7581  0BB6  17F2               	bsf	___ftpack@arg+2,7
  7582  0BB7  0008               	return
  7583  0BB8                     __end_of___ftpack:	
  7584                           
  7585                           	psect	text37
  7586  0804                     __ptext37:	
  7587 ;; *************** function _SetOSCTRIM *****************
  7588 ;; Defined at:
  7589 ;;		line 50 in file "libs/gsk_funs.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  Val             1    wreg     char 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  Val             1   13[BANK0 ] char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0, pclath, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7603 ;;      Params:         0       0       0       0       0
  7604 ;;      Locals:         0       1       0       0       0
  7605 ;;      Temps:          0       3       0       0       0
  7606 ;;      Totals:         0       4       0       0       0
  7607 ;;Total ram usage:        4 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    3
  7610 ;; This function calls:
  7611 ;;		_I2C_WriteAtAddress
  7612 ;;		___bmul
  7613 ;; This function is called by:
  7614 ;;		_AdjustSec
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           
  7619                           ;psect for function _SetOSCTRIM
  7620  0804                     _SetOSCTRIM:	
  7621                           
  7622                           ;incstack = 0
  7623                           ; Regs used in _SetOSCTRIM: [wreg+status,2+status,0+pclath+cstack]
  7624                           ;SetOSCTRIM@Val stored from wreg
  7625  0804  1283               	bcf	3,5	;RP0=0, select bank0
  7626  0805  1303               	bcf	3,6	;RP1=0, select bank0
  7627  0806  00AD               	movwf	SetOSCTRIM@Val
  7628                           
  7629                           ;gsk_funs.c: 51: if (Val>0)
  7630  0807  082D               	movf	SetOSCTRIM@Val,w
  7631  0808  3A80               	xorlw	128
  7632  0809  3E7F               	addlw	-129
  7633  080A  1C03               	skipc
  7634  080B  2819               	goto	l2617
  7635                           
  7636                           ;gsk_funs.c: 52: I2C_WriteAtAddress(0xde, 0x08, Val);
  7637  080C  3008               	movlw	8
  7638  080D  00AA               	movwf	??_SetOSCTRIM
  7639  080E  082A               	movf	??_SetOSCTRIM,w
  7640  080F  00A7               	movwf	I2C_WriteAtAddress@IntAdd
  7641  0810  082D               	movf	SetOSCTRIM@Val,w
  7642  0811  00AB               	movwf	??_SetOSCTRIM+1
  7643  0812  082B               	movf	??_SetOSCTRIM+1,w
  7644  0813  00A8               	movwf	I2C_WriteAtAddress@data
  7645  0814  30DE               	movlw	222
  7646  0815  160A  118A  271E   	fcall	_I2C_WriteAtAddress
  7647  0818  0008               	return
  7648  0819                     l2617:	
  7649                           
  7650                           ;gsk_funs.c: 53: else
  7651                           ;gsk_funs.c: 54: I2C_WriteAtAddress(0xde, 0x08, ((-1*Val)|0x80) );
  7652  0819  3008               	movlw	8
  7653  081A  1283               	bcf	3,5	;RP0=0, select bank0
  7654  081B  1303               	bcf	3,6	;RP1=0, select bank0
  7655  081C  00AA               	movwf	??_SetOSCTRIM
  7656  081D  082A               	movf	??_SetOSCTRIM,w
  7657  081E  00A7               	movwf	I2C_WriteAtAddress@IntAdd
  7658  081F  30FF               	movlw	255
  7659  0820  00AB               	movwf	??_SetOSCTRIM+1
  7660  0821  082B               	movf	??_SetOSCTRIM+1,w
  7661  0822  00A6               	movwf	___bmul@multiplicand
  7662  0823  082D               	movf	SetOSCTRIM@Val,w
  7663  0824  160A  118A  2651  120A  158A  	fcall	___bmul
  7664  0829  3880               	iorlw	128
  7665  082A  1283               	bcf	3,5	;RP0=0, select bank0
  7666  082B  1303               	bcf	3,6	;RP1=0, select bank0
  7667  082C  00AC               	movwf	??_SetOSCTRIM+2
  7668  082D  082C               	movf	??_SetOSCTRIM+2,w
  7669  082E  00A8               	movwf	I2C_WriteAtAddress@data
  7670  082F  30DE               	movlw	222
  7671  0830  160A  118A  271E   	fcall	_I2C_WriteAtAddress
  7672  0833  0008               	return
  7673  0834                     __end_of_SetOSCTRIM:	
  7674                           
  7675                           	psect	text38
  7676  1651                     __ptext38:	
  7677 ;; *************** function ___bmul *****************
  7678 ;; Defined at:
  7679 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  multiplier      1    wreg     unsigned char 
  7682 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  multiplier      1   11[COMMON] unsigned char 
  7685 ;;  product         1   10[COMMON] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      unsigned char 
  7688 ;; Registers used:
  7689 ;;		wreg, status,2, status,0
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7695 ;;      Params:         0       1       0       0       0
  7696 ;;      Locals:         2       0       0       0       0
  7697 ;;      Temps:          1       0       0       0       0
  7698 ;;      Totals:         3       1       0       0       0
  7699 ;;Total ram usage:        4 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_Lcd_Int
  7705 ;;		_WriteLongInt
  7706 ;;		_SetOSCTRIM
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           
  7711                           ;psect for function ___bmul
  7712  1651                     ___bmul:	
  7713                           
  7714                           ;incstack = 0
  7715                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7716                           ;___bmul@multiplier stored from wreg
  7717  1651  00FB               	movwf	___bmul@multiplier
  7718  1652  01FA               	clrf	___bmul@product
  7719  1653                     l2281:	
  7720  1653  1C7B               	btfss	___bmul@multiplier,0
  7721  1654  2E5B               	goto	l2285
  7722  1655  1283               	bcf	3,5	;RP0=0, select bank0
  7723  1656  1303               	bcf	3,6	;RP1=0, select bank0
  7724  1657  0826               	movf	___bmul@multiplicand,w
  7725  1658  00F9               	movwf	??___bmul
  7726  1659  0879               	movf	??___bmul,w
  7727  165A  07FA               	addwf	___bmul@product,f
  7728  165B                     l2285:	
  7729  165B  1003               	clrc
  7730  165C  1283               	bcf	3,5	;RP0=0, select bank0
  7731  165D  1303               	bcf	3,6	;RP1=0, select bank0
  7732  165E  0DA6               	rlf	___bmul@multiplicand,f
  7733  165F  1003               	clrc
  7734  1660  0CFB               	rrf	___bmul@multiplier,f
  7735  1661  087B               	movf	___bmul@multiplier,w
  7736  1662  1D03               	btfss	3,2
  7737  1663  2E53               	goto	l2281
  7738  1664  087A               	movf	___bmul@product,w
  7739  1665  0008               	return
  7740  1666                     __end_of___bmul:	
  7741                           
  7742                           	psect	text39
  7743  171E                     __ptext39:	
  7744 ;; *************** function _I2C_WriteAtAddress *****************
  7745 ;; Defined at:
  7746 ;;		line 69 in file "libs/gsk_i2c.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  DevID           1    wreg     unsigned char 
  7749 ;;  IntAdd          1    7[BANK0 ] unsigned char 
  7750 ;;  data            1    8[BANK0 ] unsigned char 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  DevID           1    9[BANK0 ] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0, pclath, cstack
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7762 ;;      Params:         0       2       0       0       0
  7763 ;;      Locals:         0       1       0       0       0
  7764 ;;      Temps:          2       0       0       0       0
  7765 ;;      Totals:         2       3       0       0       0
  7766 ;;Total ram usage:        5 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    2
  7769 ;; This function calls:
  7770 ;;		_I2C_Master_Start
  7771 ;;		_I2C_Master_Stop
  7772 ;;		_I2C_Master_Write
  7773 ;; This function is called by:
  7774 ;;		_WriteToRTC
  7775 ;;		_SetOSCTRIM
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           
  7780                           ;psect for function _I2C_WriteAtAddress
  7781  171E                     _I2C_WriteAtAddress:	
  7782                           
  7783                           ;incstack = 0
  7784                           ; Regs used in _I2C_WriteAtAddress: [wreg+status,2+status,0+pclath+cstack]
  7785                           ;I2C_WriteAtAddress@DevID stored from wreg
  7786  171E  1283               	bcf	3,5	;RP0=0, select bank0
  7787  171F  1303               	bcf	3,6	;RP1=0, select bank0
  7788  1720  00A9               	movwf	I2C_WriteAtAddress@DevID
  7789                           
  7790                           ;gsk_i2c.c: 71: I2C_Master_Start();
  7791  1721  160A  118A  25F6  160A  118A  	fcall	_I2C_Master_Start
  7792                           
  7793                           ;gsk_i2c.c: 72: I2C_Master_Write(DevID);
  7794  1726  1283               	bcf	3,5	;RP0=0, select bank0
  7795  1727  1303               	bcf	3,6	;RP1=0, select bank0
  7796  1728  0829               	movf	I2C_WriteAtAddress@DevID,w
  7797  1729  00FC               	movwf	??_I2C_WriteAtAddress
  7798  172A  01FD               	clrf	??_I2C_WriteAtAddress+1
  7799  172B  087C               	movf	??_I2C_WriteAtAddress,w
  7800  172C  00F0               	movwf	I2C_Master_Write@d
  7801  172D  087D               	movf	??_I2C_WriteAtAddress+1,w
  7802  172E  00F1               	movwf	I2C_Master_Write@d+1
  7803  172F  160A  118A  260B  160A  118A  	fcall	_I2C_Master_Write
  7804                           
  7805                           ;gsk_i2c.c: 73: I2C_Master_Write(IntAdd);
  7806  1734  1283               	bcf	3,5	;RP0=0, select bank0
  7807  1735  1303               	bcf	3,6	;RP1=0, select bank0
  7808  1736  0827               	movf	I2C_WriteAtAddress@IntAdd,w
  7809  1737  00FC               	movwf	??_I2C_WriteAtAddress
  7810  1738  01FD               	clrf	??_I2C_WriteAtAddress+1
  7811  1739  087C               	movf	??_I2C_WriteAtAddress,w
  7812  173A  00F0               	movwf	I2C_Master_Write@d
  7813  173B  087D               	movf	??_I2C_WriteAtAddress+1,w
  7814  173C  00F1               	movwf	I2C_Master_Write@d+1
  7815  173D  160A  118A  260B  160A  118A  	fcall	_I2C_Master_Write
  7816                           
  7817                           ;gsk_i2c.c: 74: I2C_Master_Write(data);
  7818  1742  1283               	bcf	3,5	;RP0=0, select bank0
  7819  1743  1303               	bcf	3,6	;RP1=0, select bank0
  7820  1744  0828               	movf	I2C_WriteAtAddress@data,w
  7821  1745  00FC               	movwf	??_I2C_WriteAtAddress
  7822  1746  01FD               	clrf	??_I2C_WriteAtAddress+1
  7823  1747  087C               	movf	??_I2C_WriteAtAddress,w
  7824  1748  00F0               	movwf	I2C_Master_Write@d
  7825  1749  087D               	movf	??_I2C_WriteAtAddress+1,w
  7826  174A  00F1               	movwf	I2C_Master_Write@d+1
  7827  174B  160A  118A  260B  160A  118A  	fcall	_I2C_Master_Write
  7828                           
  7829                           ;gsk_i2c.c: 75: I2C_Master_Stop();
  7830  1750  160A  118A  25FD   	fcall	_I2C_Master_Stop
  7831  1753  0008               	return
  7832  1754                     __end_of_I2C_WriteAtAddress:	
  7833                           
  7834                           	psect	text40
  7835  1666                     __ptext40:	
  7836 ;; *************** function _GetOSCTRIM *****************
  7837 ;; Defined at:
  7838 ;;		line 42 in file "libs/gsk_funs.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  i               1   13[COMMON] unsigned char 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      char 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0, pclath, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7852 ;;      Params:         0       0       0       0       0
  7853 ;;      Locals:         1       0       0       0       0
  7854 ;;      Temps:          2       0       0       0       0
  7855 ;;      Totals:         3       0       0       0       0
  7856 ;;Total ram usage:        3 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    3
  7859 ;; This function calls:
  7860 ;;		_I2C_ReadAtAddress
  7861 ;; This function is called by:
  7862 ;;		_main
  7863 ;;		_AdjustSec
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           
  7868                           ;psect for function _GetOSCTRIM
  7869  1666                     _GetOSCTRIM:	
  7870                           
  7871                           ;gsk_funs.c: 43: char i = I2C_ReadAtAddress(0xde, 0x08);
  7872                           
  7873                           ;incstack = 0
  7874                           ; Regs used in _GetOSCTRIM: [wreg+status,2+status,0+pclath+cstack]
  7875  1666  3008               	movlw	8
  7876  1667  00FB               	movwf	??_GetOSCTRIM
  7877  1668  087B               	movf	??_GetOSCTRIM,w
  7878  1669  00F6               	movwf	I2C_ReadAtAddress@IntAdd
  7879  166A  30DE               	movlw	222
  7880  166B  120A  158A  20F3  160A  118A  	fcall	_I2C_ReadAtAddress
  7881  1670  00FC               	movwf	??_GetOSCTRIM+1
  7882  1671  087C               	movf	??_GetOSCTRIM+1,w
  7883  1672  00FD               	movwf	GetOSCTRIM@i
  7884                           
  7885                           ;gsk_funs.c: 44: if (i&0x80)
  7886  1673  1FFD               	btfss	GetOSCTRIM@i,7
  7887  1674  2E7A               	goto	l2485
  7888                           
  7889                           ;gsk_funs.c: 45: return -(i&0x7f);
  7890  1675  087D               	movf	GetOSCTRIM@i,w
  7891  1676  397F               	andlw	127
  7892  1677  3AFF               	xorlw	255
  7893  1678  3E01               	addlw	1
  7894  1679  0008               	return
  7895  167A                     l2485:	
  7896                           
  7897                           ;gsk_funs.c: 46: else
  7898                           ;gsk_funs.c: 47: return (i&0x7f);
  7899  167A  087D               	movf	GetOSCTRIM@i,w
  7900  167B  397F               	andlw	127
  7901  167C  0008               	return
  7902  167D                     __end_of_GetOSCTRIM:	
  7903                           
  7904                           	psect	text41
  7905  08F3                     __ptext41:	
  7906 ;; *************** function _I2C_ReadAtAddress *****************
  7907 ;; Defined at:
  7908 ;;		line 55 in file "libs/gsk_i2c.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  DevID           1    wreg     unsigned char 
  7911 ;;  IntAdd          1    6[COMMON] unsigned char 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  DevID           1   10[COMMON] unsigned char 
  7914 ;;  data            1    9[COMMON] unsigned char 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      unsigned char 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0, pclath, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7924 ;;      Params:         1       0       0       0       0
  7925 ;;      Locals:         2       0       0       0       0
  7926 ;;      Temps:          2       0       0       0       0
  7927 ;;      Totals:         5       0       0       0       0
  7928 ;;Total ram usage:        5 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    2
  7931 ;; This function calls:
  7932 ;;		_I2C_Master_Read
  7933 ;;		_I2C_Master_Start
  7934 ;;		_I2C_Master_Stop
  7935 ;;		_I2C_Master_Write
  7936 ;; This function is called by:
  7937 ;;		_DisplayTimeFromRTC
  7938 ;;		_ReadRTCAsSec
  7939 ;;		_GetOSCTRIM
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _I2C_ReadAtAddress
  7945  08F3                     _I2C_ReadAtAddress:	
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _I2C_ReadAtAddress: [wreg+status,2+status,0+pclath+cstack]
  7949                           ;I2C_ReadAtAddress@DevID stored from wreg
  7950  08F3  00FA               	movwf	I2C_ReadAtAddress@DevID
  7951                           
  7952                           ;gsk_i2c.c: 57: I2C_Master_Start();
  7953  08F4  160A  118A  25F6  120A  158A  	fcall	_I2C_Master_Start
  7954                           
  7955                           ;gsk_i2c.c: 58: I2C_Master_Write(DevID);
  7956  08F9  087A               	movf	I2C_ReadAtAddress@DevID,w
  7957  08FA  00F7               	movwf	??_I2C_ReadAtAddress
  7958  08FB  01F8               	clrf	??_I2C_ReadAtAddress+1
  7959  08FC  0877               	movf	??_I2C_ReadAtAddress,w
  7960  08FD  00F0               	movwf	I2C_Master_Write@d
  7961  08FE  0878               	movf	??_I2C_ReadAtAddress+1,w
  7962  08FF  00F1               	movwf	I2C_Master_Write@d+1
  7963  0900  160A  118A  260B  120A  158A  	fcall	_I2C_Master_Write
  7964                           
  7965                           ;gsk_i2c.c: 59: I2C_Master_Write(IntAdd);
  7966  0905  0876               	movf	I2C_ReadAtAddress@IntAdd,w
  7967  0906  00F7               	movwf	??_I2C_ReadAtAddress
  7968  0907  01F8               	clrf	??_I2C_ReadAtAddress+1
  7969  0908  0877               	movf	??_I2C_ReadAtAddress,w
  7970  0909  00F0               	movwf	I2C_Master_Write@d
  7971  090A  0878               	movf	??_I2C_ReadAtAddress+1,w
  7972  090B  00F1               	movwf	I2C_Master_Write@d+1
  7973  090C  160A  118A  260B  120A  158A  	fcall	_I2C_Master_Write
  7974                           
  7975                           ;gsk_i2c.c: 60: I2C_Master_Stop();
  7976  0911  160A  118A  25FD  120A  158A  	fcall	_I2C_Master_Stop
  7977                           
  7978                           ;gsk_i2c.c: 62: I2C_Master_Start();
  7979  0916  160A  118A  25F6  120A  158A  	fcall	_I2C_Master_Start
  7980                           
  7981                           ;gsk_i2c.c: 63: I2C_Master_Write(DevID+1);
  7982  091B  087A               	movf	I2C_ReadAtAddress@DevID,w
  7983  091C  3E01               	addlw	1
  7984  091D  00F0               	movwf	I2C_Master_Write@d
  7985  091E  3000               	movlw	0
  7986  091F  1803               	skipnc
  7987  0920  3001               	movlw	1
  7988  0921  00F1               	movwf	I2C_Master_Write@d+1
  7989  0922  160A  118A  260B  120A  158A  	fcall	_I2C_Master_Write
  7990                           
  7991                           ;gsk_i2c.c: 64: char data = I2C_Master_Read(0);
  7992  0927  3000               	movlw	0
  7993  0928  00F0               	movwf	I2C_Master_Read@a
  7994  0929  00F1               	movwf	I2C_Master_Read@a+1
  7995  092A  160A  118A  26C4  120A  158A  	fcall	_I2C_Master_Read
  7996  092F  0870               	movf	?_I2C_Master_Read,w
  7997  0930  00F7               	movwf	??_I2C_ReadAtAddress
  7998  0931  0877               	movf	??_I2C_ReadAtAddress,w
  7999  0932  00F9               	movwf	I2C_ReadAtAddress@data
  8000                           
  8001                           ;gsk_i2c.c: 65: I2C_Master_Stop();
  8002  0933  160A  118A  25FD   	fcall	_I2C_Master_Stop
  8003                           
  8004                           ;gsk_i2c.c: 66: return data;
  8005  0936  0879               	movf	I2C_ReadAtAddress@data,w
  8006  0937  0008               	return
  8007  0938                     __end_of_I2C_ReadAtAddress:	
  8008                           
  8009                           	psect	text42
  8010  160B                     __ptext42:	
  8011 ;; *************** function _I2C_Master_Write *****************
  8012 ;; Defined at:
  8013 ;;		line 36 in file "libs/gsk_i2c.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  d               2    0[COMMON] unsigned int 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0, pclath, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8027 ;;      Params:         2       0       0       0       0
  8028 ;;      Locals:         0       0       0       0       0
  8029 ;;      Temps:          0       0       0       0       0
  8030 ;;      Totals:         2       0       0       0       0
  8031 ;;Total ram usage:        2 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:    1
  8034 ;; This function calls:
  8035 ;;		_I2C_Master_Wait
  8036 ;; This function is called by:
  8037 ;;		_I2C_ReadAtAddress
  8038 ;;		_I2C_WriteAtAddress
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           
  8043                           ;psect for function _I2C_Master_Write
  8044  160B                     _I2C_Master_Write:	
  8045                           
  8046                           ;gsk_i2c.c: 38: I2C_Master_Wait();
  8047                           
  8048                           ;incstack = 0
  8049                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8050  160B  160A  118A  2613   	fcall	_I2C_Master_Wait
  8051                           
  8052                           ;gsk_i2c.c: 39: SSPBUF = d;
  8053  160E  0870               	movf	I2C_Master_Write@d,w
  8054  160F  1283               	bcf	3,5	;RP0=0, select bank0
  8055  1610  1303               	bcf	3,6	;RP1=0, select bank0
  8056  1611  0093               	movwf	19	;volatile
  8057  1612  0008               	return
  8058  1613                     __end_of_I2C_Master_Write:	
  8059                           
  8060                           	psect	text43
  8061  15FD                     __ptext43:	
  8062 ;; *************** function _I2C_Master_Stop *****************
  8063 ;; Defined at:
  8064 ;;		line 30 in file "libs/gsk_i2c.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;		None
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      void 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0, pclath, cstack
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8078 ;;      Params:         0       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0
  8080 ;;      Temps:          0       0       0       0       0
  8081 ;;      Totals:         0       0       0       0       0
  8082 ;;Total ram usage:        0 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:    1
  8085 ;; This function calls:
  8086 ;;		_I2C_Master_Wait
  8087 ;; This function is called by:
  8088 ;;		_I2C_ReadAtAddress
  8089 ;;		_I2C_WriteAtAddress
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           
  8094                           ;psect for function _I2C_Master_Stop
  8095  15FD                     _I2C_Master_Stop:	
  8096                           
  8097                           ;gsk_i2c.c: 32: I2C_Master_Wait();
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8101  15FD  160A  118A  2613   	fcall	_I2C_Master_Wait
  8102                           
  8103                           ;gsk_i2c.c: 33: PEN = 1;
  8104  1600  1683               	bsf	3,5	;RP0=1, select bank1
  8105  1601  1303               	bcf	3,6	;RP1=0, select bank1
  8106  1602  1511               	bsf	17,2	;volatile
  8107  1603  0008               	return
  8108  1604                     __end_of_I2C_Master_Stop:	
  8109                           
  8110                           	psect	text44
  8111  15F6                     __ptext44:	
  8112 ;; *************** function _I2C_Master_Start *****************
  8113 ;; Defined at:
  8114 ;;		line 18 in file "libs/gsk_i2c.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;		None
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2, status,0, pclath, cstack
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8128 ;;      Params:         0       0       0       0       0
  8129 ;;      Locals:         0       0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0
  8131 ;;      Totals:         0       0       0       0       0
  8132 ;;Total ram usage:        0 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    1
  8135 ;; This function calls:
  8136 ;;		_I2C_Master_Wait
  8137 ;; This function is called by:
  8138 ;;		_I2C_ReadAtAddress
  8139 ;;		_I2C_WriteAtAddress
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           
  8144                           ;psect for function _I2C_Master_Start
  8145  15F6                     _I2C_Master_Start:	
  8146                           
  8147                           ;gsk_i2c.c: 20: I2C_Master_Wait();
  8148                           
  8149                           ;incstack = 0
  8150                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8151  15F6  160A  118A  2613   	fcall	_I2C_Master_Wait
  8152                           
  8153                           ;gsk_i2c.c: 21: SEN = 1;
  8154  15F9  1683               	bsf	3,5	;RP0=1, select bank1
  8155  15FA  1303               	bcf	3,6	;RP1=0, select bank1
  8156  15FB  1411               	bsf	17,0	;volatile
  8157  15FC  0008               	return
  8158  15FD                     __end_of_I2C_Master_Start:	
  8159                           
  8160                           	psect	text45
  8161  16C4                     __ptext45:	
  8162 ;; *************** function _I2C_Master_Read *****************
  8163 ;; Defined at:
  8164 ;;		line 42 in file "libs/gsk_i2c.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  a               2    0[COMMON] unsigned short 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  temp            2    4[COMMON] unsigned short 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  2    0[COMMON] unsigned short 
  8171 ;; Registers used:
  8172 ;;		wreg, status,2, status,0, pclath, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8178 ;;      Params:         2       0       0       0       0
  8179 ;;      Locals:         2       0       0       0       0
  8180 ;;      Temps:          2       0       0       0       0
  8181 ;;      Totals:         6       0       0       0       0
  8182 ;;Total ram usage:        6 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    1
  8185 ;; This function calls:
  8186 ;;		_I2C_Master_Wait
  8187 ;; This function is called by:
  8188 ;;		_I2C_ReadAtAddress
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function _I2C_Master_Read
  8194  16C4                     _I2C_Master_Read:	
  8195                           
  8196                           ;gsk_i2c.c: 44: unsigned short temp;
  8197                           ;gsk_i2c.c: 45: I2C_Master_Wait();
  8198                           
  8199                           ;incstack = 0
  8200                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8201  16C4  160A  118A  2613  160A  118A  	fcall	_I2C_Master_Wait
  8202                           
  8203                           ;gsk_i2c.c: 46: RCEN = 1;
  8204  16C9  1683               	bsf	3,5	;RP0=1, select bank1
  8205  16CA  1303               	bcf	3,6	;RP1=0, select bank1
  8206  16CB  1591               	bsf	17,3	;volatile
  8207                           
  8208                           ;gsk_i2c.c: 47: I2C_Master_Wait();
  8209  16CC  160A  118A  2613  160A  118A  	fcall	_I2C_Master_Wait
  8210                           
  8211                           ;gsk_i2c.c: 48: temp = SSPBUF;
  8212  16D1  1283               	bcf	3,5	;RP0=0, select bank0
  8213  16D2  1303               	bcf	3,6	;RP1=0, select bank0
  8214  16D3  0813               	movf	19,w	;volatile
  8215  16D4  00F2               	movwf	??_I2C_Master_Read
  8216  16D5  01F3               	clrf	??_I2C_Master_Read+1
  8217  16D6  0872               	movf	??_I2C_Master_Read,w
  8218  16D7  00F4               	movwf	I2C_Master_Read@temp
  8219  16D8  0873               	movf	??_I2C_Master_Read+1,w
  8220  16D9  00F5               	movwf	I2C_Master_Read@temp+1
  8221                           
  8222                           ;gsk_i2c.c: 49: I2C_Master_Wait();
  8223  16DA  160A  118A  2613  160A  118A  	fcall	_I2C_Master_Wait
  8224                           
  8225                           ;gsk_i2c.c: 50: ACKDT = (a)?0:1;
  8226  16DF  0870               	movf	I2C_Master_Read@a,w
  8227  16E0  0471               	iorwf	I2C_Master_Read@a+1,w
  8228  16E1  1D03               	btfss	3,2
  8229  16E2  2EE7               	goto	u2530
  8230  16E3  1683               	bsf	3,5	;RP0=1, select bank1
  8231  16E4  1303               	bcf	3,6	;RP1=0, select bank1
  8232  16E5  1691               	bsf	17,5	;volatile
  8233  16E6  2EEA               	goto	l2103
  8234  16E7                     u2530:	
  8235  16E7  1683               	bsf	3,5	;RP0=1, select bank1
  8236  16E8  1303               	bcf	3,6	;RP1=0, select bank1
  8237  16E9  1291               	bcf	17,5	;volatile
  8238  16EA                     l2103:	
  8239                           
  8240                           ;gsk_i2c.c: 51: ACKEN = 1;
  8241  16EA  1611               	bsf	17,4	;volatile
  8242                           
  8243                           ;gsk_i2c.c: 52: return temp;
  8244  16EB  0875               	movf	I2C_Master_Read@temp+1,w
  8245  16EC  00F1               	movwf	?_I2C_Master_Read+1
  8246  16ED  0874               	movf	I2C_Master_Read@temp,w
  8247  16EE  00F0               	movwf	?_I2C_Master_Read
  8248  16EF  0008               	return
  8249  16F0                     __end_of_I2C_Master_Read:	
  8250                           
  8251                           	psect	text46
  8252  1613                     __ptext46:	
  8253 ;; *************** function _I2C_Master_Wait *****************
  8254 ;; Defined at:
  8255 ;;		line 13 in file "libs/gsk_i2c.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;		None
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      void 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8269 ;;      Params:         0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0
  8272 ;;      Totals:         0       0       0       0       0
  8273 ;;Total ram usage:        0 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_I2C_Master_Start
  8279 ;;		_I2C_Master_Stop
  8280 ;;		_I2C_Master_Write
  8281 ;;		_I2C_Master_Read
  8282 ;;		_I2C_Master_RepeatedStart
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function _I2C_Master_Wait
  8288  1613                     _I2C_Master_Wait:	
  8289  1613                     l315:	
  8290                           ;gsk_i2c.c: 15: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8291                           
  8292                           ;incstack = 0
  8293                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8294                           
  8295  1613  1683               	bsf	3,5	;RP0=1, select bank1
  8296  1614  1303               	bcf	3,6	;RP1=0, select bank1
  8297  1615  1914               	btfsc	20,2	;volatile
  8298  1616  2E13               	goto	l315
  8299  1617  0811               	movf	17,w	;volatile
  8300  1618  391F               	andlw	31
  8301  1619  1903               	btfsc	3,2
  8302  161A  0008               	return
  8303  161B  2E13               	goto	l315
  8304  161C                     __end_of_I2C_Master_Wait:	
  8305  007E                     btemp	set	126	;btemp
  8306  007E                     wtemp	set	126
  8307  007E                     wtemp0	set	126
  8308  0080                     wtemp1	set	128
  8309  0082                     wtemp2	set	130
  8310  0084                     wtemp3	set	132
  8311  0086                     wtemp4	set	134
  8312  0088                     wtemp5	set	136
  8313  007F                     wtemp6	set	127
  8314  007E                     ttemp	set	126
  8315  007E                     ttemp0	set	126
  8316  0081                     ttemp1	set	129
  8317  0084                     ttemp2	set	132
  8318  0087                     ttemp3	set	135
  8319  007F                     ttemp4	set	127
  8320  007E                     ltemp	set	126
  8321  007E                     ltemp0	set	126
  8322  0082                     ltemp1	set	130
  8323  0086                     ltemp2	set	134
  8324  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    14
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     35      37
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    WriteToRTC@Time	PTR unsigned char  size(1) Largest target is 6
		 -> main@Data(BANK1[6]), 

    Lcd_Text@buffer	PTR unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), STR_1(CODE[5]), 

    IsValidGPS@GPSData	PTR unsigned char  size(1) Largest target is 6
		 -> main@Data(BANK1[6]), 

    UART_ReadValidTimeFromGPS_TO@Output	PTR unsigned char  size(1) Largest target is 6
		 -> main@Data(BANK1[6]), 

    UART_ReadFromGPS_TO@Output	PTR unsigned char  size(1) Largest target is 6
		 -> main@Data(BANK1[6]), 


Critical Paths under _main in COMMON

    _main->_GetOSCTRIM
    _WriteToRTC->_I2C_WriteAtAddress
    _WriteLongInt->_GetOSCTRIM
    _Lcd_WriteChar->___bmul
    _UART_ReadValidTimeFromGPS_TO->_UART_ReadFromGPS_TO
    _UART_ReadFromGPS_TO->_UART_Read_TO
    _UART_Init->___altoft
    ___ftdiv->___altoft
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_Init->_Lcd_Command
    _I2C_Master_Init->___lldiv
    _Lcd_Int->___lwdiv
    ___lwdiv->___wmul
    _Lcd_Command->_Lcd_Delay5500us
    _Lcd_CharCP->_Lcd_Delay5500us
    _AdjustSec->_GetOSCTRIM
    _trunc->___altoft
    ___fttol->___altoft
    ___altoft->___ftpack
    ___ftadd->___altoft
    ___ftmul->___altoft
    ___abtoft->___ftpack
    _SetOSCTRIM->_I2C_WriteAtAddress
    ___bmul->___aldiv
    _I2C_WriteAtAddress->___bmul
    _GetOSCTRIM->_I2C_ReadAtAddress
    _I2C_ReadAtAddress->_I2C_Master_Read

Critical Paths under _main in BANK0

    _main->_AdjustSec
    _WriteToRTC->_I2C_WriteAtAddress
    _WriteLongInt->_Lcd_WriteChar
    _Lcd_WriteChar->___bmul
    _UART_Init->_round
    ___ftdiv->___ftmul
    _ReadRTCAsSec->_WriteToRTC
    _DisplayTimeFromRTC->_Lcd_Int
    _Lcd_Int->___bmul
    _AdjustSec->_round
    _round->___ftneg
    _trunc->___fttol
    ___fttol->___ftadd
    ___ftneg->_trunc
    ___ftadd->___ftdiv
    ___ftmul->___abtoft
    _SetOSCTRIM->_I2C_WriteAtAddress
    ___bmul->___aldiv
    _I2C_WriteAtAddress->___bmul

Critical Paths under _main in BANK1

    _main->_UART_Init
    _UART_Init->_round
    _AdjustSec->_round

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   44925
                                             15 BANK1     20    20      0
                          _AdjustSec
                 _DisplayTimeFromRTC
                         _GetOSCTRIM
                    _I2C_Master_Init
                        _Lcd_Command
                           _Lcd_Init
                           _Lcd_Text
                      _Lcd_WriteChar
                       _ReadRTCAsSec
                          _UART_Init
       _UART_ReadValidTimeFromGPS_TO
                       _WriteLongInt
                         _WriteToRTC
 ---------------------------------------------------------------------------------
 (1) _WriteToRTC                                           4     4      0    1351
                                             10 BANK0      4     4      0
                 _I2C_WriteAtAddress
 ---------------------------------------------------------------------------------
 (1) _WriteLongInt                                        13     6      7    2456
                                             11 BANK0     13     6      7
                         _GetOSCTRIM (ARG)
                      _Lcd_WriteChar
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        5     3      2     934
                                             12 COMMON     1     1      0
                                              7 BANK0      4     2      2
                         _Lcd_CharCP
                        _Lcd_Command
                            ___aldiv (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_ReadValidTimeFromGPS_TO                         3     2      1     862
                                              9 COMMON     3     2      1
                         _IsValidGPS
                _UART_ReadFromGPS_TO
 ---------------------------------------------------------------------------------
 (2) _UART_ReadFromGPS_TO                                  8     7      1     397
                                              1 COMMON     8     7      1
                       _UART_Read_TO
 ---------------------------------------------------------------------------------
 (3) _UART_Read_TO                                         1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IsValidGPS                                           2     2      0     319
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           12     8      4   16291
                                              3 BANK1     12     8      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                              _round
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2132
                                             21 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ReadRTCAsSec                                        24    20      4    1969
                                             14 BANK0     24    20      4
                  _I2C_ReadAtAddress
                         _WriteToRTC (ARG)
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     198
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             5     3      2     957
                                              4 COMMON     5     3      2
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              4 COMMON     2     2      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     343
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _DisplayTimeFromRTC                                   6     5      1    4757
                                             16 BANK0      6     5      1
                  _I2C_ReadAtAddress
                            _Lcd_Int
 ---------------------------------------------------------------------------------
 (2) _Lcd_Int                                              9     6      3    3407
                                              7 BANK0      9     6      3
                         _Lcd_CharCP
                        _Lcd_Command
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_CharCP                                           2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5500us                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _AdjustSec                                            7     7      0   13142
                                             79 BANK0      1     1      0
                                              3 BANK1      5     5      0
                         _GetOSCTRIM
                         _SetOSCTRIM
                           ___abtoft
                            ___ftmul
                            ___fttol
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                6     3      3    6324
                                             76 BANK0      3     0      3
                                              0 BANK1      3     3      0
                           ___abtoft (ARG)
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                                9     6      3    2984
                                             64 BANK0      9     6      3
                           ___altoft
                            ___ftadd (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     314
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     411
                                             50 BANK0     14    10      4
                           ___abtoft (ARG)
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1990
                                              8 COMMON     6     2      4
                                              0 BANK0      2     2      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     138
                                             73 BANK0      3     0      3
                            ___ftadd (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2984
                                             37 BANK0     13     7      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2284
                                              5 BANK0     16    10      6
                           ___abtoft (ARG)
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___abtoft                                            13    10      3    1837
                                              8 COMMON     5     2      3
                                              0 BANK0      5     5      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetOSCTRIM                                           4     4      0    1253
                                             10 BANK0      4     4      0
                 _I2C_WriteAtAddress
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     251
                                              9 COMMON     3     3      0
                                              6 BANK0      1     0      1
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteAtAddress                                   5     3      2     936
                                             12 COMMON     2     2      0
                                              7 BANK0      3     1      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _GetOSCTRIM                                           3     3      0     965
                                             11 COMMON     3     3      0
                  _I2C_ReadAtAddress
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadAtAddress                                    5     4      1     898
                                              6 COMMON     5     4      1
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     340
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2      98
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdjustSec
     _GetOSCTRIM
       _I2C_ReadAtAddress
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _SetOSCTRIM
       _I2C_WriteAtAddress
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         ___bmul (ARG)
           ___aldiv (ARG)
       ___bmul
         ___aldiv (ARG)
     ___abtoft
       ___ftpack
     ___ftmul
       ___abtoft (ARG)
         ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___abtoft (ARG)
         ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _round
       ___abtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___abtoft (ARG)
                   ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___abtoft (ARG)
                     ___ftpack
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___abtoft (ARG)
                   ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___abtoft (ARG)
                   ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___abtoft (ARG)
                   ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _frexp (ARG)
   _DisplayTimeFromRTC
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _Lcd_Int
       _Lcd_CharCP
         _Lcd_Delay5500us
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5500us
         _Lcd_Delay5us
       ___awdiv
       ___bmul
         ___aldiv (ARG)
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _GetOSCTRIM
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
   _Lcd_Command
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
   _Lcd_WriteChar
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     ___aldiv (ARG)
     ___bmul (ARG)
       ___aldiv (ARG)
   _ReadRTCAsSec
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _WriteToRTC (ARG)
       _I2C_WriteAtAddress
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         ___bmul (ARG)
           ___aldiv (ARG)
     ___lmul (ARG)
     ___wmul (ARG)
   _UART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___abtoft (ARG)
         ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___abtoft (ARG)
         ___ftpack
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _round
       ___abtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___abtoft (ARG)
                   ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___abtoft (ARG)
                     ___ftpack
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___abtoft (ARG)
                   ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___abtoft (ARG)
                   ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___abtoft (ARG)
                   ___ftpack
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___abtoft (ARG)
                 ___ftpack
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _frexp (ARG)
   _UART_ReadValidTimeFromGPS_TO
     _IsValidGPS
     _UART_ReadFromGPS_TO
       _UART_Read_TO
   _WriteLongInt
     _GetOSCTRIM (ARG)
       _I2C_ReadAtAddress
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _Lcd_WriteChar (ARG)
       _Lcd_CharCP
         _Lcd_Delay5500us
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5500us
         _Lcd_Delay5us
       ___aldiv (ARG)
       ___bmul (ARG)
         ___aldiv (ARG)
     ___aldiv (ARG)
     ___bmul (ARG)
       ___aldiv (ARG)
   _WriteToRTC
     _I2C_WriteAtAddress
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       ___bmul (ARG)
         ___aldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      83       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     23      25       7       46.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      83      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Sep 14 10:40:11 2016

                       Lcd_Int@tempVal 002E                           ___altoft@exp 0020  
                                    pc 0002                         ___bmul@product 007A  
                          __CFG_CP$OFF 0000                          ___altoft@sign 0021  
            UART_ReadFromGPS_TO@Output 0076                                     l44 06F2  
                         ___awdiv@sign 0076                                     fsr 0004  
                  ___wmul@multiplicand 0072             UART_ReadFromGPS_TO@TimeOut 0071  
                         ___ftadd@exp1 0051                           ___ftadd@exp2 0050  
                         ___ftadd@sign 004F                                    l150 164B  
                                  l208 0E40                                    l136 0A86  
                                  l209 0E68                                    l315 1613  
                                  l147 1641                                    l506 0C58  
                                  l451 1687                                    l620 0B9F  
                                  l612 0B82                                    l703 0C2C  
                                  l619 0B97                                    l643 04D6  
                                  _RA0 0028                                    _RA1 0029  
                                  _RA2 002A                                    _RA3 002B  
                                  _RA4 002C                                    _RC1 0039  
                                  _RA5 002D                                    _RC2 003A  
                                  _PEN 048A                           __CFG_CPD$OFF 0000  
                                  _SEN 0488                                    fsr0 0004  
                                  indf 0000                           __CFG_IESO$ON 0000  
                         __CFG_FOSC$HS 0000                    _UART_ReadFromGPS_TO 0A2F  
                  __end_of_Lcd_Command 0F54                          ?_ReadRTCAsSec 002E  
                         main@ValidGPS 00BC                           __CFG_LVP$OFF 0000  
                         ___ftdiv@cntr 003F                           ___ftdiv@sign 0044  
                                 l2103 16EA                                   l2121 089B  
                                 l2201 0F38                                   l2131 0BD2  
                                 l2203 0F41                                   l2053 0B5B  
                                 l2301 09E0                                   l2063 0B87  
                                 l2055 0B67                                   l2119 0889  
                                 l2151 0C14                                   l2215 1644  
                                 l3111 0775                                   l3103 076D  
                                 l2065 0B91                                   l2057 0B6C  
                                 l2049 0B54                                   l2233 0F9D  
                                 l2225 164F                                   l2403 051D  
                                 l2163 0C3D                                   l2243 0FBD  
                                 l2307 09EB                                   l2157 0C21  
                                 l2149 0C04                                   l2173 1796  
                                 l2245 0FCE                                   l2333 0A2A  
                                 l2325 0A17                                   l2317 09F3  
                                 l3117 0798                                   l2343 0457  
                                 l2159 0C2F                                   l2247 0FDF  
                                 l2319 0A01                                   l3039 0D97  
                                 l3047 0DA5                                   l2281 1653  
                                 l2353 046D                                   l2249 0FE8  
                                 l2329 0A22                                   l2433 17F0  
                                 l2425 17CC                                   l2513 0A43  
                                 l3081 06E9                                   l2371 049C  
                                 l2347 045E                                   l2187 0EF6  
                                 l2427 17DA                                   l2267 167F  
                                 l2523 0A60                                   l2285 165B  
                                 l2373 04A8                                   l2365 0487  
                                 l2197 0F16                                   l2437 17FB  
                                 l2605 02F3                                   l2621 083C  
                                 l2461 16F4                                   l2383 04C6  
                                 l2375 04AD                                   l2199 0F27  
                                 l2711 0256                                   l2551 099B  
                                 l2527 0A6F                                   l2463 16F7  
                                 l2471 1703                                   l2617 0819  
                                 l2641 16A6                                   l2393 04FA  
                                 l2385 04D2                                   l2377 04B1  
                                 l2449 0954                                   l2609 032C  
                                 l2625 0852                                   l2545 098F  
                                 l2529 0A74                                   l2537 0A79  
                                 l2465 16FA                                   l2473 1711  
                                 l2563 09B7                                   l2467 16FD  
                                 l2485 167A                                   l2733 0373  
                                 l2389 04E8                                   l2557 09A9  
                                 l2751 03C8                                   l2591 02B3  
                                 l2719 0275                                   l2575 09D3  
                                 l2663 0C79                                   l2655 0C69  
                                 l2593 02B6                                   l2569 09C5  
                                 l2681 0CCC                                   l2673 0CB1  
                                 l2665 0C89                                   l2763 03F0  
                                 l2755 03D8                                   l2739 0389  
                                 l2587 02AD                                   l2931 08B8  
                                 l2691 01FB                                   l2589 02B0  
                                 l2597 02BC                                   l2933 08BB  
                                 l2941 08D2                                   l2677 0CBE  
                                 l2767 0400                                   l2599 02CA  
                                 l2783 0A9A                                   l2935 08BE  
                                 l2793 0AD2                                   l2785 0AAA  
                                 l2929 08B5                                   l2697 0211  
                                 l2947 08D8                                   l2939 08C4  
                                 l2797 0ADF                                   STR_1 1019  
                                 STR_2 1014                                   STR_3 1017  
                                 STR_4 1017                                   _BRGH 04C2  
                                 _CREN 00C4                                   u3020 0F89  
                                 u3004 0F7B                                   u3110 0FCB  
                                 u3015 0F7E                                   u3105 0FC0  
                                 u3050 0F9A                                   u3034 0F8C  
                                 u3140 0FDC                                   u3045 0F8F  
                                 u3205 168F                                   u3135 0FD1  
                                 u3160 0FE5                                   u3080 0FBA  
                                 u3305 0A0E                                   u2530 16E7  
                                 u2515 0BA6                                   u2435 0B60  
                                 u3075 0FAF                                   u3315 0A18  
                                 u4035 0C7D                                   u2700 0EC0  
                                 u4205 0395                                   u4125 0223  
                                 u2455 0B7B                                   u4215 03A7  
                                 u4135 0235                                   u4055 0C8B  
                                 u4305 0409                                   u2625 0C05  
                                 u4145 0257                                   u4065 0CA0  
                                 u2730 0ED1                                   u2714 0EC3  
                                 u2475 0B8A                                   u3435 0488  
                                 u3275 09F6                                   u3195 1688  
                                 u4155 0268                                   u4075 0CB2  
                                 u2900 0F3E                                   u2820 0F13  
                                 u4245 03D9                                   u3525 04C7  
                                 u2565 088E                                   u2725 0EC6  
                                 u3605 17CF                                   u4165 0276  
                                 u4255 03E1                                   u2655 0C23  
                                 u2815 0F08                                   u3295 0A02  
                                 u4335 0A9E                                   u4415 1766  
                                 u2760 0EE2                                   u2744 0ED4  
                                 u3465 049D                                   u3625 17DB  
                                 u4505 0D4B                                   u2850 0F24  
                                 u4450 05EE                  __size_of_WriteLongInt 009A  
                                 u2595 0BD9                                   u2755 0ED7  
                                 u3635 17E7                                   u4515 0092  
                                 u4355 0AAC                                   u4451 05EF  
                                 u4435 0553                                   u4452 05F4  
                                 u2845 0F19                                   u3645 17F1  
                                 u4525 00CD                                   u4365 0AC1  
                                 u4453 05F5                                   u4445 05A7  
                                 u2790 0EF3                                   u2774 0EE5  
                                 u4470 0648                                   u4295 0401  
                                 u3495 04B2                                   u2695 0EB5  
                                 u4535 0107                                   u4375 0AD3  
                                 u4471 0649                                   u2960 0F67  
                                 u2880 0F35                                   u4472 064E  
                                 u2785 0EE8                                   u4473 064F  
                                 u4465 0618                                   u4707 1620  
                                 u2955 0F5C                                   u2875 0F2A  
                                 _RCEN 048B                                   _RCIF 0065  
                                 u4485 0CE5                                   u2990 0F78  
                                 u2974 0F6A                                   u4495 0D16  
                                 u2985 0F6D                                   u4667 0EF8  
                                 u4595 072F                                   u4677 0F43  
                                 u3965 0854                                   u4687 0F9F  
                                 u3975 085C                                   u4697 0FEA  
                                 _SPEN 00C7                                   _RSEN 0489  
                                 _TRMT 04C1                                   _TXEN 04C5  
                                 _SYNC 04C4                      ??_Lcd_Delay5500us 0070  
                           _GetOSCTRIM 1666                           __CFG_WRT$OFF 0000  
                        __CFG_FCMEN$ON 0000                                   _main 0664  
                         ___ftpack@arg 0070                           ___ftpack@exp 0073  
                 __end_of_Lcd_Delay5us 160B                                   btemp 007E  
                                 ltemp 007E                                   start 0000  
                                 ttemp 007E                                   wtemp 007E  
                     _ReadRTCAsSec$841 003F                   ?_UART_ReadFromGPS_TO 0071  
                      __end_of_Lcd_Int 035B                      ___bmul@multiplier 007B  
                        __CFG_MCLRE$ON 0000                           ___ftmul@cntr 0033  
                         ___ftmul@sign 0034                             _Lcd_CharCP 0F54  
                         ___fttol@exp1 005F                           ___fttol@lval 005B  
                     ?_I2C_Master_Init 0020                       ?_I2C_Master_Read 0070  
                     ?_I2C_Master_Wait 0070                       ?_I2C_Master_Stop 0070  
                      __end_of___aldiv 0CD5                                  ?_main 0070  
                                _ACKEN 048C                                  _ACKDT 048D  
                      __end_of___awdiv 0A2F                        __end_of___ftadd 0537  
                                _BRG16 0C3B                          __CFG_WDTE$OFF 0000  
                      __end_of___ftdiv 029B                        __end_of___ftneg 162F  
                                _ANSEL 0188                        __end_of___lldiv 0AE8  
                      __end_of___ftmul 042E                        ___awdiv@divisor 0070  
                      __end_of___fttol 0C46                        __end_of___lwdiv 1800  
                      ___awdiv@counter 0075                                  _RCREG 001A  
                                _SPBRG 0099                                  _TRISA 0085  
                                _TRISB 0086                                  _TXREG 0019  
                         _WriteLongInt 0D6E                    ___lmul@multiplicand 0074  
                       ??_ReadRTCAsSec 0032                     __size_of_UART_Init 00B7  
                           _IsValidGPS 0982                                  _frexp 178A  
                                _errno 00C3                          ___ftpack@sign 0074  
                                _round 0005                                  _trunc 0938  
                       __CFG_BOREN$OFF 0000                                  pclath 000A  
                                ltemp0 007E                                  ltemp1 0082  
                                ltemp2 0086                                  ltemp3 0080  
                                ttemp0 007E                                  ttemp1 0081  
                                ttemp2 0084                                  ttemp3 0087  
                                ttemp4 007F                                  status 0003  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F                  ??_UART_ReadFromGPS_TO 0072  
                     __end_of_Lcd_Init 0EAD                       __end_of_Lcd_Text 08F3  
                      __initialization 07FA                   WriteToRTC@TempVar000 002D  
                         __end_of_main 07FA                     __size_of_AdjustSec 0064  
                           _SetOSCTRIM 0804                            _Lcd_Command 0EAD  
                      ReadRTCAsSec@Out 0041                                 ??_main 00AF  
                        ___fttol@sign1 005A                         main@TempVar000 00C2  
                    ?_I2C_Master_Start 0070                      ?_I2C_Master_Write 0070  
                     __end_of___abtoft 16C4                     ??_I2C_Master_Start 0070  
                   ??_I2C_Master_Write 0072                                 ?_frexp 0070  
                     __end_of___altoft 08B3                       ___awdiv@dividend 0072  
                     __end_of___ftpack 0BB8                                 ?_round 006C  
                               _ANSELH 0189                                 ?_trunc 0060  
                    _I2C_ReadAtAddress 08F3                            ?_GetOSCTRIM 0070  
                     WriteLongInt@Sign 0031                              ??_Lcd_Int 002A  
                               _SPBRGH 009A                         Lcd_Text@buffer 0075  
                   ?_I2C_ReadAtAddress 0076                                 _SSPADD 0093  
                               _TRISC3 043B                                 _TRISC4 043C  
                               _SSPCON 0014                                 _SSPBUF 0013  
                     WriteLongInt@size 0030                         __CFG_PWRTE$OFF 0000  
                  ??_I2C_ReadAtAddress 0077                      __end_of_UART_Init 01E3  
                               ___bmul 1651                            ?_Lcd_CharCP 0070  
                               ___lmul 0834                              ??___aldiv 0078  
                               ___wmul 167D                              ??___awdiv 0074  
                            ??___ftadd 004B                              ??___ftdiv 003B  
                            ??___ftneg 007E                              ??___lldiv 0078  
                            ??___ftmul 002B                              ??___fttol 0056  
                            ??___lwdiv 007A                       ___awdiv@quotient 0077  
                __end_of_Lcd_WriteChar 171E                  ___ftmul@f3_as_product 0030  
            __end_of_I2C_ReadAtAddress 0938                                 round@f 00A0  
                               round@x 006C                            ?_IsValidGPS 0070  
                           ___abtoft@c 007C                                 trunc@i 0064  
                __size_of_Lcd_Delay5us 0007                                 trunc@x 0060  
                    __end_of_AdjustSec 0B4C            __size_of_DisplayTimeFromRTC 00B3  
                   Lcd_Command@command 0073                __end_of__initialization 07FC  
                           ___altoft@c 0078                             ___ftadd@f1 0045  
                           ___ftadd@f2 0048   __end_ofUART_ReadFromGPS_TO@StartCode 1014  
         UART_ReadFromGPS_TO@StartCode 100D                             ___ftdiv@f1 0038  
                           ___ftdiv@f2 0035                             ___ftdiv@f3 0040  
                           ___ftneg@f1 0069                      IsValidGPS@GPSData 0071  
                  ___bmul@multiplicand 0026                             ___ftmul@f1 0025  
                           ___ftmul@f2 0028                             ___fttol@f1 0052  
                       WriteToRTC@Time 002C                         __pcstackCOMMON 0070  
                 __end_of_ReadRTCAsSec 0664                             _WriteToRTC 0CD5  
                        __end_of_frexp 17C4                          __end_of_round 0079  
                        __end_of_trunc 0982                            ?_SetOSCTRIM 0070  
                  __size_of_GetOSCTRIM 0017                           _Lcd_Delay5us 1604  
                      _Lcd_Delay5500us 161C                         Lcd_WriteChar@c 0028  
                       Lcd_WriteChar@x 0027                         Lcd_WriteChar@y 0029  
                            ?_Lcd_Init 0070                              ?_Lcd_Text 0074  
                              ??_frexp 0074                    __size_of_Lcd_CharCP 00AC  
                              ??_round 007E                                ??_trunc 0063  
                           __pbssBANK1 00C3                I2C_ReadAtAddress@IntAdd 0076  
           __end_of_I2C_WriteAtAddress 1754                    UART_Read_TO@TimeOut 0070  
                           __pmaintext 0664                                ?___bmul 0026  
                              ?___lmul 0070                                ?___wmul 0070  
                  __size_of_IsValidGPS 0054                              ?___abtoft 0078  
                            ?___altoft 0078                         ___lmul@product 0079  
                        _AdjustSec$842 00A3                              ?___ftpack 0070  
                           ??_Lcd_Init 0074             __size_of_I2C_ReadAtAddress 0045  
                           ??_Lcd_Text 0076                                _SSPCON2 0091  
                              _SSPSTAT 0094                             __stringtab 1000  
                        ?_UART_Read_TO 0070                                _Lcd_Int 029B  
                  __size_of_SetOSCTRIM 0030                 ReadRTCAsSec@TempVar000 0045  
                              ___aldiv 0C46                        __size_of___bmul 0015  
                          ?_WriteToRTC 0070                      Lcd_WriteChar@data 002A  
                              ___awdiv 09D6                        __size_of___lmul 003F  
                              ___ftadd 042E                                ___ftdiv 01E3  
                              ___ftneg 1625                                ___lldiv 0A8A  
                      __size_of___wmul 0021                                ___ftmul 035B  
                              ___fttol 0BB8                                ___lwdiv 17C4  
              __end_of_Lcd_Delay5500us 1625                             ??___abtoft 0020  
                           ??___altoft 007C                             ??___ftpack 0075  
                         ?_Lcd_Command 0070                                __ptext1 0CD5  
                              __ptext2 0D6E                                __ptext3 0C46  
                              __ptext4 16F0                                __ptext5 162F  
                              __ptext6 0A2F                                __ptext7 163F  
                              __ptext8 0982                                __ptext9 012C  
                     ___aldiv@dividend 0074               __size_of_I2C_Master_Init 0036  
             __size_of_I2C_Master_Read 002C               __size_of_I2C_Master_Wait 0009  
             __size_of_I2C_Master_Stop 0007                                main@Itr 00B7  
                 end_of_initialization 07FC                         ??_UART_Read_TO 0070  
          __end_of_UART_ReadFromGPS_TO 0A8A                           ??_GetOSCTRIM 007B  
                __size_of_ReadRTCAsSec 012D              __size_of_I2C_Master_Start 0007  
            __size_of_I2C_Master_Write 0008                        ___lldiv@divisor 0070  
                      ___lldiv@counter 007D   __end_of_UART_ReadValidTimeFromGPS_TO 163F  
__size_of_UART_ReadValidTimeFromGPS_TO 0010           _UART_ReadValidTimeFromGPS_TO 162F  
             I2C_WriteAtAddress@IntAdd 0027                           ??_Lcd_CharCP 0072  
                     ___aldiv@quotient 0022                       I2C_Master_Init@c 0020  
                     I2C_Master_Read@a 0070                              Lcd_Text@x 0074  
                            Lcd_Text@y 0077                              _UART_Init 012C  
                   __end_of_GetOSCTRIM 167D    UART_ReadValidTimeFromGPS_TO@TimeOut 0079  
                            _TRISAbits 0085                              _TRISCbits 0087  
                         ??_IsValidGPS 0070                           _ReadRTCAsSec 0537  
                           main@Second 00BE                    __size_of_WriteToRTC 0099  
                   __end_of_Lcd_CharCP 1000                             main@Synced 00BD  
                          ___ftdiv@exp 0043                              _AdjustSec 0AE8  
                          ___ftmul@exp 002F          ?_UART_ReadValidTimeFromGPS_TO 0079  
                       __end_of___bmul 1666                         __end_of___lmul 0873  
                     ?_Lcd_Delay5500us 0070                         __end_of___wmul 169E  
                   __end_of_IsValidGPS 09D6                             ?_UART_Init 00A3  
                         ??_SetOSCTRIM 002A                    start_initialization 07FA  
           __end_of_DisplayTimeFromRTC 012C      __end_ofUART_ReadFromGPS@StartCode 100D  
                    __size_of_Lcd_Init 00A5                      __size_of_Lcd_Text 0040  
                           frexp@value 0070                      ??_I2C_Master_Init 0024  
                    ??_I2C_Master_Read 0072                      ??_I2C_Master_Wait 0070  
                    ??_I2C_Master_Stop 0070                             ?_AdjustSec 0070  
                      WriteLongInt@POS 0036                        WriteLongInt@Val 002C  
                   __end_of_SetOSCTRIM 0834                 __size_of_Lcd_WriteChar 002E  
                             ??___bmul 0079                               ??___lmul 0078  
                             ??___wmul 0074                     _I2C_WriteAtAddress 171E  
                 __end_of_UART_Read_TO 1651            UART_ReadFromGPS_TO@TempChar 0077  
                    __size_of___abtoft 0026                      __size_of___altoft 0040  
                    __size_of___ftpack 006C                          ?_WriteLongInt 002B  
                 __size_of_Lcd_Command 00A7                    ?_I2C_WriteAtAddress 0027  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                          WriteLongInt@x 002B  
                        WriteLongInt@y 0037                       IsValidGPS@Result 0070  
                             ?_Lcd_Int 0027                 I2C_ReadAtAddress@DevID 007A  
                     _I2C_Master_Start 15F6                       _I2C_Master_Write 160B  
                 ??_I2C_WriteAtAddress 007C                       ___lwdiv@dividend 0078  
                         ??_WriteToRTC 002A                               ?___aldiv 0070  
                        SetOSCTRIM@Val 002D                               ?___awdiv 0070  
                             ?___ftadd 0045                               ?___ftdiv 0035  
                             ?___ftneg 0069                               ?___lldiv 0070  
                             ?___ftmul 0025                               ?___fttol 0052  
                             ?___lwdiv 0076                            ??_UART_Init 007E  
                            __pstrings 1000                         ??_WriteLongInt 0032  
       ??_UART_ReadValidTimeFromGPS_TO 007A                          _Lcd_WriteChar 16F0  
                        _UART_Init$840 00AA                          _UART_Init$839 00A7  
                 UART_ReadFromGPS_TO@i 0074                       ___lwdiv@quotient 007B  
                       __size_of_frexp 003A                             UART_Init@x 00AD  
                       __size_of_round 0074                         __size_of_trunc 004A  
                   __end_of_WriteToRTC 0D6E                        ___aldiv@divisor 0070  
                      ___aldiv@counter 0020                         ___wmul@product 0074  
                          ??_AdjustSec 006F                    DisplayTimeFromRTC@x 0030  
                  DisplayTimeFromRTC@y 0034                I2C_WriteAtAddress@DevID 0029  
                    AdjustSec@TimeDiff 00A6                               Lcd_Int@x 0027  
                             Lcd_Int@y 002C                      UART_Init@baudrate 00A3  
   UART_ReadValidTimeFromGPS_TO@Output 007B                           Lcd_Init@data 0075  
                          __stringbase 1005                         ?_Lcd_WriteChar 0027  
                    ___wmul@multiplier 0070                            GetOSCTRIM@i 007D  
                             _Lcd_Init 0E08                               _Lcd_Text 08B3  
                  I2C_Master_Read@temp 0074                      ___lmul@multiplier 0070  
                     __size_of_Lcd_Int 00C0                              frexp@eptr 0073  
                         Lcd_Text@data 0078           __size_of_UART_ReadFromGPS_TO 005B  
               UART_ReadFromGPS_TO@Pos 0078                  __size_of_UART_Read_TO 0012  
                     __size_of___aldiv 008F                               ___abtoft 169E  
                     __size_of___awdiv 0059                       __size_of___ftadd 0109  
                     __size_of___ftdiv 00B8                       __size_of___ftneg 000A  
                     __size_of___lldiv 005E                               ___altoft 0873  
                     __size_of___ftmul 00D3                       __size_of___fttol 008E  
                     __size_of___lwdiv 003C                               ___ftpack 0B4C  
                   __end_of__stringtab 1006                          ?_Lcd_Delay5us 0070  
                      _I2C_Master_Init 1754                        _I2C_Master_Read 16C4  
                      _I2C_Master_Wait 1613                        _I2C_Master_Stop 15FD  
                I2C_ReadAtAddress@data 0079                        ___lwdiv@divisor 0076  
                      ___lwdiv@counter 007D                               __ptext10 01E3  
                             __ptext11 0537                               __ptext20 17C4  
                             __ptext12 0834                               __ptext21 09D6  
                             __ptext13 08B3                               __ptext30 0BB8  
                             __ptext22 0EAD                               __ptext14 0E08  
                             __ptext31 0873                               __ptext23 0F54  
                             __ptext15 1754                               __ptext40 1666  
                             __ptext32 1625                               __ptext24 1604  
                             __ptext16 0A8A                               __ptext41 08F3  
                             __ptext33 042E                               __ptext25 161C  
                             __ptext17 0079                               __ptext42 160B  
                             __ptext34 035B                               __ptext26 0AE8  
                             __ptext18 029B                               __ptext43 15FD  
                             __ptext35 169E                               __ptext27 0005  
                             __ptext19 167D                               __ptext44 15F6  
                             __ptext36 0B4C                               __ptext28 0938  
                             __ptext45 16C4                               __ptext37 0804  
                             __ptext29 178A                               __ptext46 1613  
                             __ptext38 1651                               __ptext39 171E  
                    __CFG_BOR4V$BOR21V 0000                            Lcd_CharCP@c 0073  
                         _UART_Read_TO 163F                             trunc@expon 0067  
                        __size_of_main 0196                   __end_of_WriteLongInt 0E08  
                   _DisplayTimeFromRTC 0079              UART_ReadFromGPS@StartCode 1006  
               I2C_WriteAtAddress@data 0028                            Lcd_Int@data 002D  
                     AdjustSec@tRIMVAL 00A7                               main@Data 00B1  
                             main@PSec 00B8                            Lcd_Int@size 0029  
                  ?_DisplayTimeFromRTC 0030                        ??_Lcd_WriteChar 007C  
                       ??_Lcd_Delay5us 0070               __end_of_I2C_Master_Start 15FD  
             __end_of_I2C_Master_Write 1613               __size_of_Lcd_Delay5500us 0009  
                 ??_DisplayTimeFromRTC 0031                       ___lldiv@dividend 0074  
         DisplayTimeFromRTC@TempVar000 0035                          ___abtoft@sign 007B  
                            stringcode 1000                             Lcd_Int@val 0028  
              __end_of_I2C_Master_Init 178A                __end_of_I2C_Master_Read 16F0  
              __end_of_I2C_Master_Wait 161C                __end_of_I2C_Master_Stop 1604  
                        ??_Lcd_Command 0072                       ___lldiv@quotient 0079  
                    I2C_Master_Write@d 0070                               stringdir 1000  
                             stringtab 1000                           ___aldiv@sign 0021  
          __size_of_I2C_WriteAtAddress 0036  
