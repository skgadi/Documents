

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Jun 28 12:13:10 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F26K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.42
    50                           ; Generated 13/04/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F26K40 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  001D32                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for main@F11309
    89  001D32  2D                 	db	45
    90  001D33  2D                 	db	45
    91  001D34  2D                 	db	45
    92  001D35  2D                 	db	45
    93  001D36  2D                 	db	45
    94  001D37  2D                 	db	45
    95  001D38  00                 	db	0
    96                           
    97                           ;initializer for _GLOBAL_CENTURY
    98  001D39  14                 	db	20
    99                           
   100                           	psect	idataBANK0
   101  001C90                     __pidataBANK0:
   102                           	opt stack 0
   103                           
   104                           ;initializer for GetDay@t
   105  001C90  0000               	dw	0
   106  001C92  0003               	dw	3
   107  001C94  0002               	dw	2
   108  001C96  0005               	dw	5
   109  001C98  0000               	dw	0
   110  001C9A  0003               	dw	3
   111  001C9C  0005               	dw	5
   112  001C9E  0001               	dw	1
   113  001CA0  0004               	dw	4
   114  001CA2  0006               	dw	6
   115  001CA4  0002               	dw	2
   116  001CA6  0004               	dw	4
   117                           
   118                           ;initializer for main@F11311
   119  001CA8  2D                 	db	45
   120  001CA9  2D                 	db	45
   121  001CAA  2D                 	db	45
   122  001CAB  2D                 	db	45
   123  001CAC  2D                 	db	45
   124  001CAD  2D                 	db	45
   125  001CAE  00                 	db	0
   126                           
   127                           	psect	smallconst
   128  000F00                     __psmallconst:
   129                           	opt stack 0
   130  000F00  00                 	db	0
   131  000F01                     ReadGPSDateTime@F11318:
   132                           	opt stack 0
   133  000F01  24                 	db	36
   134  000F02  47                 	db	71
   135  000F03  50                 	db	80
   136  000F04  52                 	db	82
   137  000F05  4D                 	db	77
   138  000F06  43                 	db	67
   139  000F07  2C                 	db	44
   140  000F08                     __end_ofReadGPSDateTime@F11318:
   141                           	opt stack 0
   142  000F08                     ReadGPSTime@F11310:
   143                           	opt stack 0
   144  000F08  24                 	db	36
   145  000F09  47                 	db	71
   146  000F0A  50                 	db	80
   147  000F0B  52                 	db	82
   148  000F0C  4D                 	db	77
   149  000F0D  43                 	db	67
   150  000F0E  2C                 	db	44
   151  000F0F                     __end_ofReadGPSTime@F11310:
   152                           	opt stack 0
   153  0000                     _OSCTUNE	set	3805
   154  0000                     _OSCFRQ	set	3806
   155  0000                     _OSCEN	set	3804
   156  0000                     _OSCCON3	set	3802
   157  0000                     _OSCCON1	set	3800
   158  0000                     _RC6PPS	set	3837
   159  0000                     _RX1PPSbits	set	3765
   160  0000                     _PPSLOCKbits	set	3744
   161  0000                     _PPSLOCK	set	3744
   162  0000                     _PIR0bits	set	3786
   163  0000                     _PIE0bits	set	3778
   164  0000                     _PIR3bits	set	3789
   165  0000                     _PLLR	set	30424
   166  0000                     _ODCONC	set	3871
   167  0000                     _ODCONB	set	3863
   168  0000                     _ODCONA	set	3855
   169  0000                     _WPUC	set	3872
   170  0000                     _WPUA	set	3856
   171  0000                     _WPUB	set	3864
   172  0000                     _WPUE	set	3885
   173  0000                     _ANSELA	set	3857
   174  0000                     _ANSELB	set	3865
   175  0000                     _ANSELC	set	3873
   176  0000                     _LATCbits	set	3973
   177  0000                     _T0CON0bits	set	4053
   178  0000                     _TMR0L	set	4051
   179  0000                     _TMR0H	set	4052
   180  0000                     _T0CON1	set	4054
   181  0000                     _T0CON0	set	4053
   182  0000                     _TRISC	set	3978
   183  0000                     _TRISB	set	3977
   184  0000                     _TRISA	set	3976
   185  0000                     _LATC	set	3973
   186  0000                     _LATB	set	3972
   187  0000                     _LATA	set	3971
   188  0000                     _INTCONbits	set	4082
   189  0000                     _TX1REG	set	3994
   190  0000                     _RC1REG	set	3993
   191  0000                     _RC1STAbits	set	3997
   192  0000                     _SP1BRGH	set	3996
   193  0000                     _SP1BRGL	set	3995
   194  0000                     _TX1STA	set	3998
   195  0000                     _RC1STA	set	3997
   196  0000                     _BAUD1CON	set	3999
   197  0000                     _LATAbits	set	3971
   198  0000                     _TRISAbits	set	3976
   199  0000                     _GIE	set	32663
   200  000F0F                     STR_4:
   201  000F0F  3A                 	db	58	;':'
   202  000F10  28                 	db	40
   203  000F11  00                 	db	0
   204  000F12                     STR_3:
   205  000F12  3A                 	db	58	;':'
   206  000F13  29                 	db	41
   207  000F14  00                 	db	0
   208  000F15                     STR_2:
   209  000F15  2D                 	db	45
   210  000F16  2D                 	db	45
   211  000F17  00                 	db	0
   212  0000                     
   213                           ; #config settings
   214  000F18  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           	psect	cinit
   217  001B32                     __pcinit:
   218                           	opt stack 0
   219  001B32                     start_initialization:
   220                           	opt stack 0
   221  001B32                     __initialization:
   222                           	opt stack 0
   223                           
   224                           ; Initialize objects allocated to BANK0 (31 bytes)
   225                           ; load TBLPTR registers with __pidataBANK0
   226  001B32  0E90               	movlw	low __pidataBANK0
   227  001B34  6EF6               	movwf	tblptrl,c
   228  001B36  0E1C               	movlw	high __pidataBANK0
   229  001B38  6EF7               	movwf	tblptrh,c
   230  001B3A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   231  001B3C  6EF8               	movwf	tblptru,c
   232  001B3E  EE00  F060         	lfsr	0,__pdataBANK0
   233  001B42  EE10 F01F          	lfsr	1,31
   234  001B46                     copy_data0:
   235  001B46  0009               	tblrd		*+
   236  001B48  CFF5 FFEE          	movff	tablat,postinc0
   237  001B4C  50E5               	movf	postdec1,w,c
   238  001B4E  50E1               	movf	fsr1l,w,c
   239  001B50  E1FA               	bnz	copy_data0
   240                           
   241                           ; Initialize objects allocated to COMRAM (8 bytes)
   242                           ; load TBLPTR registers with __pidataCOMRAM
   243  001B52  0E32               	movlw	low __pidataCOMRAM
   244  001B54  6EF6               	movwf	tblptrl,c
   245  001B56  0E1D               	movlw	high __pidataCOMRAM
   246  001B58  6EF7               	movwf	tblptrh,c
   247  001B5A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   248  001B5C  6EF8               	movwf	tblptru,c
   249  001B5E  EE00  F03F         	lfsr	0,__pdataCOMRAM
   250  001B62  EE10 F008          	lfsr	1,8
   251  001B66                     copy_data1:
   252  001B66  0009               	tblrd		*+
   253  001B68  CFF5 FFEE          	movff	tablat,postinc0
   254  001B6C  50E5               	movf	postdec1,w,c
   255  001B6E  50E1               	movf	fsr1l,w,c
   256  001B70  E1FA               	bnz	copy_data1
   257                           
   258                           ; Clear objects allocated to COMRAM (10 bytes)
   259  001B72  EE00  F035         	lfsr	0,__pbssCOMRAM
   260  001B76  0E0A               	movlw	10
   261  001B78                     clear_0:
   262  001B78  6AEE               	clrf	postinc0,c
   263  001B7A  06E8               	decf	wreg,f,c
   264  001B7C  E1FD               	bnz	clear_0
   265  001B7E                     end_of_initialization:
   266                           	opt stack 0
   267  001B7E                     __end_of__initialization:
   268                           	opt stack 0
   269  001B7E  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   270  001B80  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   271  001B82  0100               	movlb	0
   272  001B84  EF9C  F009         	goto	_main	;jump to C main() function
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bssCOMRAM
   283  000035                     __pbssCOMRAM:
   284                           	opt stack 0
   285  000035                     TMR0_ISR@CountCallBack:
   286                           	opt stack 0
   287  000035                     	ds	2
   288  000037                     _TMR0_InterruptHandler:
   289                           	opt stack 0
   290  000037                     	ds	2
   291  000039                     _timer0ReloadVal16bit:
   292                           	opt stack 0
   293  000039                     	ds	2
   294  00003B                     _GLOBAL_USARTSIZE:
   295                           	opt stack 0
   296  00003B                     	ds	2
   297  00003D                     _GLOBAL_I:
   298                           	opt stack 0
   299  00003D                     	ds	2
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec1	equ	0xFE5
   307                           fsr1l	equ	0xFE1
   308                           
   309                           	psect	dataCOMRAM
   310  00003F                     __pdataCOMRAM:
   311                           	opt stack 0
   312  00003F                     main@F11309:
   313                           	opt stack 0
   314  00003F                     	ds	7
   315  000046                     _GLOBAL_CENTURY:
   316                           	opt stack 0
   317  000046                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	dataBANK0
   328  000060                     __pdataBANK0:
   329                           	opt stack 0
   330  000060                     GetDay@t:
   331                           	opt stack 0
   332  000060                     	ds	24
   333  000078                     main@F11311:
   334                           	opt stack 0
   335  000078                     	ds	7
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	cstackBANK0
   346  00007F                     __pcstackBANK0:
   347                           	opt stack 0
   348  00007F                     Lcd_Int@y:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x0
   352  00007F                     	ds	1
   353  000080                     Lcd_Int@data:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x1
   357  000080                     	ds	1
   358  000081                     Lcd_Int@tempVal:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x2
   362  000081                     	ds	2
   363  000083                     main@Time:
   364                           	opt stack 0
   365                           
   366                           ; 7 bytes @ 0x4
   367  000083                     	ds	7
   368  00008A                     main@Date:
   369                           	opt stack 0
   370                           
   371                           ; 7 bytes @ 0xB
   372  00008A                     	ds	7
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	cstackCOMRAM
   383  000001                     __pcstackCOMRAM:
   384                           	opt stack 0
   385  000001                     ?i2___awmod:
   386                           	opt stack 0
   387  000001                     i2___awmod@dividend:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x0
   391  000001                     	ds	2
   392  000003                     i2___awmod@divisor:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x2
   396  000003                     	ds	2
   397  000005                     i2___awmod@counter:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x4
   401  000005                     	ds	1
   402  000006                     i2___awmod@sign:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x5
   406  000006                     	ds	1
   407  000007                     ??_Timer0_10ms:
   408                           
   409                           ; 1 bytes @ 0x6
   410  000007                     	ds	1
   411  000008                     ??_INTERRUPT_InterruptManager:
   412                           
   413                           ; 1 bytes @ 0x7
   414  000008                     	ds	14
   415  000016                     ??_Lcd_CharCP:
   416  000016                     ??_Lcd_Delay5500us:
   417  000016                     ??_Lcd_Command:
   418  000016                     ?___wmul:
   419                           	opt stack 0
   420  000016                     ?___awdiv:
   421                           	opt stack 0
   422  000016                     PIN_MANAGER_Initialize@state:
   423                           	opt stack 0
   424  000016                     ReadGPSDateTime@Date:
   425                           	opt stack 0
   426  000016                     ValidateDateTime@Date:
   427                           	opt stack 0
   428  000016                     TMR0_SetInterruptHandler@InterruptHandler:
   429                           	opt stack 0
   430  000016                     ___wmul@multiplier:
   431                           	opt stack 0
   432  000016                     ___awdiv@dividend:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x15
   436  000016                     	ds	2
   437  000018                     ??_TMR0_Initialize:
   438  000018                     Lcd_CharCP@c:
   439                           	opt stack 0
   440  000018                     Lcd_Command@command:
   441                           	opt stack 0
   442  000018                     ReadGPSDateTime@Time:
   443                           	opt stack 0
   444  000018                     ValidateDateTime@Time:
   445                           	opt stack 0
   446  000018                     ___wmul@multiplicand:
   447                           	opt stack 0
   448  000018                     ___awdiv@divisor:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x17
   452  000018                     	ds	1
   453  000019                     Lcd_Init@data:
   454                           	opt stack 0
   455  000019                     Lcd_Text@x:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x18
   459  000019                     	ds	1
   460  00001A                     ??_ReadGPSDateTime:
   461  00001A                     ??_ValidateDateTime:
   462  00001A                     ___awdiv@counter:
   463                           	opt stack 0
   464  00001A                     Lcd_Text@buffer:
   465                           	opt stack 0
   466  00001A                     ___wmul@product:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x19
   470  00001A                     	ds	1
   471  00001B                     ValidateDateTime@Item:
   472                           	opt stack 0
   473  00001B                     ___awdiv@sign:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x1A
   477  00001B                     	ds	1
   478  00001C                     ?___lwdiv:
   479                           	opt stack 0
   480  00001C                     Lcd_Text@y:
   481                           	opt stack 0
   482  00001C                     ___awdiv@quotient:
   483                           	opt stack 0
   484  00001C                     ___lwdiv@dividend:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1B
   488  00001C                     	ds	1
   489  00001D                     Lcd_Text@data:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x1C
   493  00001D                     	ds	1
   494  00001E                     ?___awmod:
   495                           	opt stack 0
   496  00001E                     ___awmod@dividend:
   497                           	opt stack 0
   498  00001E                     ___lwdiv@divisor:
   499                           	opt stack 0
   500  00001E                     ReadGPSDateTime@StartCode:
   501                           	opt stack 0
   502                           
   503                           ; 7 bytes @ 0x1D
   504  00001E                     	ds	2
   505  000020                     ___lwdiv@counter:
   506                           	opt stack 0
   507  000020                     ___awmod@divisor:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x1F
   511  000020                     	ds	1
   512  000021                     ___lwdiv@quotient:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x20
   516  000021                     	ds	1
   517  000022                     ___awmod@counter:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x21
   521  000022                     	ds	1
   522  000023                     ___awmod@sign:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x22
   526  000023                     	ds	1
   527  000024                     GetDay@Date:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x23
   531  000024                     	ds	1
   532  000025                     ReadGPSDateTime@Commas:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x24
   536  000025                     	ds	1
   537  000026                     ??_GetDay:
   538  000026                     ReadGPSDateTime@i:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x25
   542  000026                     	ds	2
   543  000028                     ReadGPSDateTime@TempChar:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x27
   547  000028                     	ds	1
   548  000029                     ReadGPSDateTime@Pos:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x28
   552  000029                     	ds	5
   553  00002E                     GetDay@d:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x2D
   557  00002E                     	ds	1
   558  00002F                     GetDay@m:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x2E
   562  00002F                     	ds	1
   563  000030                     GetDay@y:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x2F
   567  000030                     	ds	2
   568  000032                     Lcd_Int@x:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x31
   572  000032                     	ds	1
   573  000033                     Lcd_Int@val:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x32
   577  000033                     	ds	1
   578  000034                     Lcd_Int@size:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x33
   582  000034                     	ds	1
   583  000035                     tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           
   592                           ; 1 bytes @ 0x34
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   595 ;;
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 53 in file "main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  Date            7   11[BANK0 ] unsigned char [7]
   603 ;;  Time            7    4[BANK0 ] unsigned char [7]
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   614 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   616 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   617 ;;Total ram usage:       14 bytes
   618 ;; Hardware stack levels required when called:    8
   619 ;; This function calls:
   620 ;;		_EUSART1_Initialize
   621 ;;		_GetDay
   622 ;;		_Lcd_Init
   623 ;;		_Lcd_Int
   624 ;;		_Lcd_Text
   625 ;;		_ReadGPSDateTime
   626 ;;		_SYSTEM_Initialize
   627 ;;		_TMR0_SetInterruptHandler
   628 ;;		_ValidateDateTime
   629 ;; This function is called by:
   630 ;;		Startup code after reset
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text0
   635  001338                     __ptext0:
   636                           	opt stack 0
   637  001338                     _main:
   638                           	opt stack 23
   639                           
   640                           ;main.c: 56: SYSTEM_Initialize();
   641                           
   642                           ;incstack = 0
   643  001338  EC67  F00E         	call	_SYSTEM_Initialize	;wreg free
   644                           
   645                           ;main.c: 87: (INTCONbits.GIE = 1);
   646  00133C  8EF2               	bsf	intcon,7,c	;volatile
   647                           
   648                           ;main.c: 88: (INTCONbits.PEIE = 1);
   649  00133E  8CF2               	bsf	intcon,6,c	;volatile
   650                           
   651                           ;main.c: 89: TMR0_SetInterruptHandler(Timer0_10ms);
   652  001340  0ED8               	movlw	low _Timer0_10ms
   653  001342  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   654  001344  0E1A               	movlw	high _Timer0_10ms
   655  001346  6E17               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   656  001348  EC8F  F00E         	call	_TMR0_SetInterruptHandler	;wreg free
   657                           
   658                           ;main.c: 92: Lcd_Init();
   659  00134C  ECC1  F00B         	call	_Lcd_Init	;wreg free
   660                           
   661                           ;main.c: 94: LATCbits.LC1=ON;
   662  001350  8285               	bsf	3973,1,c	;volatile
   663                           
   664                           ;main.c: 95: char Date[] = "------";
   665  001352  EE20  F03F         	lfsr	2,main@F11309
   666  001356  EE10  F08A         	lfsr	1,main@Date
   667  00135A  0E06               	movlw	6
   668  00135C                     u2801:
   669  00135C  CFDB FFE3          	movff	plusw2,plusw1
   670  001360  06E8               	decf	wreg,f,c
   671  001362  E2FC               	bc	u2801
   672                           
   673                           ;main.c: 96: char Time[] = "------";
   674  001364  EE20  F078         	lfsr	2,main@F11311
   675  001368  EE10  F083         	lfsr	1,main@Time
   676  00136C  0E06               	movlw	6
   677  00136E                     u2811:
   678  00136E  CFDB FFE3          	movff	plusw2,plusw1
   679  001372  06E8               	decf	wreg,f,c
   680  001374  E2FC               	bc	u2811
   681  001376                     l3112:
   682                           
   683                           ;main.c: 99: {
   684                           ;main.c: 102: Date[0] = 0x3A;
   685  001376  0E3A               	movlw	58
   686  001378  0100               	movlb	0	; () banked
   687  00137A  6F8A               	movwf	main@Date& (0+255),b
   688                           
   689                           ; BSR set to: 0
   690                           ;main.c: 103: Time[0] = 0x3A;
   691  00137C  0E3A               	movlw	58
   692  00137E  0100               	movlb	0	; () banked
   693  001380  6F83               	movwf	main@Time& (0+255),b
   694                           
   695                           ; BSR set to: 0
   696                           ;main.c: 104: EUSART1_Initialize();
   697  001382  EC72  F00E         	call	_EUSART1_Initialize	;wreg free
   698                           
   699                           ;main.c: 105: ReadGPSDateTime(Date, Time);
   700  001386  0E8A               	movlw	low main@Date
   701  001388  6E16               	movwf	ReadGPSDateTime@Date,c
   702  00138A  0E00               	movlw	high main@Date
   703  00138C  6E17               	movwf	ReadGPSDateTime@Date+1,c
   704  00138E  0E83               	movlw	low main@Time
   705  001390  6E18               	movwf	ReadGPSDateTime@Time,c
   706  001392  0E00               	movlw	high main@Time
   707  001394  6E19               	movwf	ReadGPSDateTime@Time+1,c
   708  001396  EC0C  F009         	call	_ReadGPSDateTime	;wreg free
   709                           
   710                           ;main.c: 107: Lcd_Text(2,1, Time);
   711  00139A  0E01               	movlw	1
   712  00139C  6E19               	movwf	Lcd_Text@x,c
   713  00139E  0E83               	movlw	low main@Time
   714  0013A0  6E1A               	movwf	Lcd_Text@buffer,c
   715  0013A2  0E00               	movlw	high main@Time
   716  0013A4  6E1B               	movwf	Lcd_Text@buffer+1,c
   717  0013A6  0E02               	movlw	2
   718  0013A8  EC70  F00C         	call	_Lcd_Text
   719                           
   720                           ;main.c: 108: Lcd_Text(2,7, "-");
   721  0013AC  0E07               	movlw	7
   722  0013AE  6E19               	movwf	Lcd_Text@x,c
   723  0013B0  0E16               	movlw	low (STR_2+1)
   724  0013B2  6E1A               	movwf	Lcd_Text@buffer,c
   725  0013B4  0E0F               	movlw	high (STR_2+1)
   726  0013B6  6E1B               	movwf	Lcd_Text@buffer+1,c
   727  0013B8  0E02               	movlw	2
   728  0013BA  EC70  F00C         	call	_Lcd_Text
   729                           
   730                           ;main.c: 109: Lcd_Text(2,8, Date);
   731  0013BE  0E08               	movlw	8
   732  0013C0  6E19               	movwf	Lcd_Text@x,c
   733  0013C2  0E8A               	movlw	low main@Date
   734  0013C4  6E1A               	movwf	Lcd_Text@buffer,c
   735  0013C6  0E00               	movlw	high main@Date
   736  0013C8  6E1B               	movwf	Lcd_Text@buffer+1,c
   737  0013CA  0E02               	movlw	2
   738  0013CC  EC70  F00C         	call	_Lcd_Text
   739                           
   740                           ;main.c: 110: Lcd_Text(2,14, "--");
   741  0013D0  0E0E               	movlw	14
   742  0013D2  6E19               	movwf	Lcd_Text@x,c
   743  0013D4  0E15               	movlw	low STR_2
   744  0013D6  6E1A               	movwf	Lcd_Text@buffer,c
   745  0013D8  0E0F               	movlw	high STR_2
   746  0013DA  6E1B               	movwf	Lcd_Text@buffer+1,c
   747  0013DC  0E02               	movlw	2
   748  0013DE  EC70  F00C         	call	_Lcd_Text
   749                           
   750                           ;main.c: 111: Lcd_Int(2, 16, GetDay(Date), 1);
   751  0013E2  0E10               	movlw	16
   752  0013E4  6E32               	movwf	Lcd_Int@x,c
   753  0013E6  0E8A               	movlw	low main@Date
   754  0013E8  6E24               	movwf	GetDay@Date,c
   755  0013EA  0E00               	movlw	high main@Date
   756  0013EC  6E25               	movwf	GetDay@Date+1,c
   757  0013EE  EC51  F008         	call	_GetDay	;wreg free
   758  0013F2  6E33               	movwf	Lcd_Int@val,c
   759  0013F4  0E01               	movlw	1
   760  0013F6  6E34               	movwf	Lcd_Int@size,c
   761  0013F8  0E02               	movlw	2
   762  0013FA  EC3F  F00B         	call	_Lcd_Int
   763                           
   764                           ;main.c: 112: Lcd_Int(1, 14, GLOBAL_I, 3);
   765  0013FE  0E0E               	movlw	14
   766  001400  6E32               	movwf	Lcd_Int@x,c
   767  001402  C03D  F033         	movff	_GLOBAL_I,Lcd_Int@val
   768  001406  0E03               	movlw	3
   769  001408  6E34               	movwf	Lcd_Int@size,c
   770  00140A  0E01               	movlw	1
   771  00140C  EC3F  F00B         	call	_Lcd_Int
   772                           
   773                           ;main.c: 113: if (ValidateDateTime(Date, Time)) {
   774  001410  0E8A               	movlw	low main@Date
   775  001412  6E16               	movwf	ValidateDateTime@Date,c
   776  001414  0E00               	movlw	high main@Date
   777  001416  6E17               	movwf	ValidateDateTime@Date+1,c
   778  001418  0E83               	movlw	low main@Time
   779  00141A  6E18               	movwf	ValidateDateTime@Time,c
   780  00141C  0E00               	movlw	high main@Time
   781  00141E  6E19               	movwf	ValidateDateTime@Time+1,c
   782  001420  EC8D  F007         	call	_ValidateDateTime	;wreg free
   783  001424  0900               	iorlw	0
   784  001426  B4D8               	btfsc	status,2,c
   785  001428  D00A               	goto	l3136
   786                           
   787                           ;main.c: 114: Lcd_Text(1, 1, ":)");
   788  00142A  0E01               	movlw	1
   789  00142C  6E19               	movwf	Lcd_Text@x,c
   790  00142E  0E12               	movlw	low STR_3
   791  001430  6E1A               	movwf	Lcd_Text@buffer,c
   792  001432  0E0F               	movlw	high STR_3
   793  001434  6E1B               	movwf	Lcd_Text@buffer+1,c
   794  001436  0E01               	movlw	1
   795  001438  EC70  F00C         	call	_Lcd_Text
   796                           
   797                           ;main.c: 115: } else {
   798  00143C  D79C               	goto	l3112
   799  00143E                     l3136:
   800                           
   801                           ;main.c: 116: Lcd_Text(1, 1, ":(");
   802  00143E  0E01               	movlw	1
   803  001440  6E19               	movwf	Lcd_Text@x,c
   804  001442  0E0F               	movlw	low STR_4
   805  001444  6E1A               	movwf	Lcd_Text@buffer,c
   806  001446  0E0F               	movlw	high STR_4
   807  001448  6E1B               	movwf	Lcd_Text@buffer+1,c
   808  00144A  0E01               	movlw	1
   809  00144C  EC70  F00C         	call	_Lcd_Text
   810  001450  D792               	goto	l3112
   811  001452                     __end_of_main:
   812                           	opt stack 0
   813                           tblptru	equ	0xFF8
   814                           tblptrh	equ	0xFF7
   815                           tblptrl	equ	0xFF6
   816                           tablat	equ	0xFF5
   817                           intcon	equ	0xFF2
   818                           postinc0	equ	0xFEE
   819                           wreg	equ	0xFE8
   820                           postdec1	equ	0xFE5
   821                           plusw1	equ	0xFE3
   822                           fsr1l	equ	0xFE1
   823                           plusw2	equ	0xFDB
   824                           status	equ	0xFD8
   825                           
   826 ;; *************** function _ValidateDateTime *****************
   827 ;; Defined at:
   828 ;;		line 137 in file "libs/gps.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  Date            2   21[COMRAM] PTR unsigned char 
   831 ;;		 -> main@Date(7), 
   832 ;;  Time            2   23[COMRAM] PTR unsigned char 
   833 ;;		 -> main@Time(7), 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  Item            1   26[COMRAM] char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      enum E11041
   838 ;; Registers used:
   839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   848 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;Total ram usage:        6 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    5
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text1
   860  000F1A                     __ptext1:
   861                           	opt stack 0
   862  000F1A                     _ValidateDateTime:
   863                           	opt stack 25
   864                           
   865                           ;gps.c: 138: INT8 Item;
   866                           ;gps.c: 145: Item = (Date[0]-0x30)*10 + (Date[1]-0x30);
   867                           
   868                           ;incstack = 0
   869  000F1A  EE20 F001          	lfsr	2,1
   870  000F1E  5016               	movf	ValidateDateTime@Date,w,c
   871  000F20  26D9               	addwf	fsr2l,f,c
   872  000F22  5017               	movf	ValidateDateTime@Date+1,w,c
   873  000F24  22DA               	addwfc	fsr2h,f,c
   874  000F26  50DF               	movf	indf2,w,c
   875  000F28  6E1A               	movwf	??_ValidateDateTime& (0+255),c
   876  000F2A  C016  FFD9         	movff	ValidateDateTime@Date,fsr2l
   877  000F2E  C017  FFDA         	movff	ValidateDateTime@Date+1,fsr2h
   878  000F32  50DF               	movf	indf2,w,c
   879  000F34  0FD0               	addlw	208
   880  000F36  0D0A               	mullw	10
   881  000F38  50F3               	movf	prodl,w,c
   882  000F3A  241A               	addwf	??_ValidateDateTime,w,c
   883  000F3C  0FD0               	addlw	208
   884  000F3E  6E1B               	movwf	ValidateDateTime@Item,c
   885                           
   886                           ;gps.c: 146: if (Item<=0 || Item>31) return 0;
   887  000F40  501B               	movf	ValidateDateTime@Item,w,c
   888  000F42  0A80               	xorlw	128
   889  000F44  0F7F               	addlw	-129
   890  000F46  A0D8               	btfss	status,0,c
   891  000F48  D005               	goto	l2792
   892  000F4A  501B               	movf	ValidateDateTime@Item,w,c
   893  000F4C  0A80               	xorlw	128
   894  000F4E  0F60               	addlw	-160
   895  000F50  A0D8               	btfss	status,0,c
   896  000F52  D002               	goto	l2796
   897  000F54                     l2792:
   898  000F54  0E00               	movlw	0
   899  000F56  0012               	return	
   900  000F58                     l2796:
   901                           
   902                           ;gps.c: 147: Item = (Date[2]-0x30)*10 + (Date[3]-0x30);
   903  000F58  EE20 F003          	lfsr	2,3
   904  000F5C  5016               	movf	ValidateDateTime@Date,w,c
   905  000F5E  26D9               	addwf	fsr2l,f,c
   906  000F60  5017               	movf	ValidateDateTime@Date+1,w,c
   907  000F62  22DA               	addwfc	fsr2h,f,c
   908  000F64  50DF               	movf	indf2,w,c
   909  000F66  6E1A               	movwf	??_ValidateDateTime& (0+255),c
   910  000F68  EE20 F002          	lfsr	2,2
   911  000F6C  5016               	movf	ValidateDateTime@Date,w,c
   912  000F6E  26D9               	addwf	fsr2l,f,c
   913  000F70  5017               	movf	ValidateDateTime@Date+1,w,c
   914  000F72  22DA               	addwfc	fsr2h,f,c
   915  000F74  50DF               	movf	indf2,w,c
   916  000F76  0FD0               	addlw	208
   917  000F78  0D0A               	mullw	10
   918  000F7A  50F3               	movf	prodl,w,c
   919  000F7C  241A               	addwf	??_ValidateDateTime,w,c
   920  000F7E  0FD0               	addlw	208
   921  000F80  6E1B               	movwf	ValidateDateTime@Item,c
   922                           
   923                           ;gps.c: 148: if (Item<=0 || Item>12) return 0;
   924  000F82  501B               	movf	ValidateDateTime@Item,w,c
   925  000F84  0A80               	xorlw	128
   926  000F86  0F7F               	addlw	-129
   927  000F88  A0D8               	btfss	status,0,c
   928  000F8A  D005               	goto	l2802
   929  000F8C  501B               	movf	ValidateDateTime@Item,w,c
   930  000F8E  0A80               	xorlw	128
   931  000F90  0F73               	addlw	-141
   932  000F92  A0D8               	btfss	status,0,c
   933  000F94  D002               	goto	l2806
   934  000F96                     l2802:
   935  000F96  0E00               	movlw	0
   936  000F98  0012               	return	
   937  000F9A                     l2806:
   938                           
   939                           ;gps.c: 149: Item = (Date[4]-0x30)*10 + (Date[5]-0x30);
   940  000F9A  EE20 F005          	lfsr	2,5
   941  000F9E  5016               	movf	ValidateDateTime@Date,w,c
   942  000FA0  26D9               	addwf	fsr2l,f,c
   943  000FA2  5017               	movf	ValidateDateTime@Date+1,w,c
   944  000FA4  22DA               	addwfc	fsr2h,f,c
   945  000FA6  50DF               	movf	indf2,w,c
   946  000FA8  6E1A               	movwf	??_ValidateDateTime& (0+255),c
   947  000FAA  EE20 F004          	lfsr	2,4
   948  000FAE  5016               	movf	ValidateDateTime@Date,w,c
   949  000FB0  26D9               	addwf	fsr2l,f,c
   950  000FB2  5017               	movf	ValidateDateTime@Date+1,w,c
   951  000FB4  22DA               	addwfc	fsr2h,f,c
   952  000FB6  50DF               	movf	indf2,w,c
   953  000FB8  0FD0               	addlw	208
   954  000FBA  0D0A               	mullw	10
   955  000FBC  50F3               	movf	prodl,w,c
   956  000FBE  241A               	addwf	??_ValidateDateTime,w,c
   957  000FC0  0FD0               	addlw	208
   958  000FC2  6E1B               	movwf	ValidateDateTime@Item,c
   959                           
   960                           ;gps.c: 150: if (Item<=0 || Item>99) return 0;
   961  000FC4  501B               	movf	ValidateDateTime@Item,w,c
   962  000FC6  0A80               	xorlw	128
   963  000FC8  0F7F               	addlw	-129
   964  000FCA  A0D8               	btfss	status,0,c
   965  000FCC  D005               	goto	l2812
   966  000FCE  501B               	movf	ValidateDateTime@Item,w,c
   967  000FD0  0A80               	xorlw	128
   968  000FD2  0F1C               	addlw	-228
   969  000FD4  A0D8               	btfss	status,0,c
   970  000FD6  D002               	goto	l2816
   971  000FD8                     l2812:
   972  000FD8  0E00               	movlw	0
   973  000FDA  0012               	return	
   974  000FDC                     l2816:
   975                           
   976                           ;gps.c: 152: Item = (Time[0]-0x30)*10 + (Time[1]-0x30);
   977  000FDC  EE20 F001          	lfsr	2,1
   978  000FE0  5018               	movf	ValidateDateTime@Time,w,c
   979  000FE2  26D9               	addwf	fsr2l,f,c
   980  000FE4  5019               	movf	ValidateDateTime@Time+1,w,c
   981  000FE6  22DA               	addwfc	fsr2h,f,c
   982  000FE8  50DF               	movf	indf2,w,c
   983  000FEA  6E1A               	movwf	??_ValidateDateTime& (0+255),c
   984  000FEC  C018  FFD9         	movff	ValidateDateTime@Time,fsr2l
   985  000FF0  C019  FFDA         	movff	ValidateDateTime@Time+1,fsr2h
   986  000FF4  50DF               	movf	indf2,w,c
   987  000FF6  0FD0               	addlw	208
   988  000FF8  0D0A               	mullw	10
   989  000FFA  50F3               	movf	prodl,w,c
   990  000FFC  241A               	addwf	??_ValidateDateTime,w,c
   991  000FFE  0FD0               	addlw	208
   992  001000  6E1B               	movwf	ValidateDateTime@Item,c
   993                           
   994                           ;gps.c: 153: if (Item<=0 || Item>23) return 0;
   995  001002  501B               	movf	ValidateDateTime@Item,w,c
   996  001004  0A80               	xorlw	128
   997  001006  0F7F               	addlw	-129
   998  001008  A0D8               	btfss	status,0,c
   999  00100A  D005               	goto	l2822
  1000  00100C  501B               	movf	ValidateDateTime@Item,w,c
  1001  00100E  0A80               	xorlw	128
  1002  001010  0F68               	addlw	-152
  1003  001012  A0D8               	btfss	status,0,c
  1004  001014  D002               	goto	l2826
  1005  001016                     l2822:
  1006  001016  0E00               	movlw	0
  1007  001018  0012               	return	
  1008  00101A                     l2826:
  1009                           
  1010                           ;gps.c: 154: Item = (Time[2]-0x30)*10 + (Time[3]-0x30);
  1011  00101A  EE20 F003          	lfsr	2,3
  1012  00101E  5018               	movf	ValidateDateTime@Time,w,c
  1013  001020  26D9               	addwf	fsr2l,f,c
  1014  001022  5019               	movf	ValidateDateTime@Time+1,w,c
  1015  001024  22DA               	addwfc	fsr2h,f,c
  1016  001026  50DF               	movf	indf2,w,c
  1017  001028  6E1A               	movwf	??_ValidateDateTime& (0+255),c
  1018  00102A  EE20 F002          	lfsr	2,2
  1019  00102E  5018               	movf	ValidateDateTime@Time,w,c
  1020  001030  26D9               	addwf	fsr2l,f,c
  1021  001032  5019               	movf	ValidateDateTime@Time+1,w,c
  1022  001034  22DA               	addwfc	fsr2h,f,c
  1023  001036  50DF               	movf	indf2,w,c
  1024  001038  0FD0               	addlw	208
  1025  00103A  0D0A               	mullw	10
  1026  00103C  50F3               	movf	prodl,w,c
  1027  00103E  241A               	addwf	??_ValidateDateTime,w,c
  1028  001040  0FD0               	addlw	208
  1029  001042  6E1B               	movwf	ValidateDateTime@Item,c
  1030                           
  1031                           ;gps.c: 155: if (Item<=0 || Item>59) return 0;
  1032  001044  501B               	movf	ValidateDateTime@Item,w,c
  1033  001046  0A80               	xorlw	128
  1034  001048  0F7F               	addlw	-129
  1035  00104A  A0D8               	btfss	status,0,c
  1036  00104C  D005               	goto	l2832
  1037  00104E  501B               	movf	ValidateDateTime@Item,w,c
  1038  001050  0A80               	xorlw	128
  1039  001052  0F44               	addlw	-188
  1040  001054  A0D8               	btfss	status,0,c
  1041  001056  D002               	goto	l2836
  1042  001058                     l2832:
  1043  001058  0E00               	movlw	0
  1044  00105A  0012               	return	
  1045  00105C                     l2836:
  1046                           
  1047                           ;gps.c: 156: Item = (Time[4]-0x30)*10 + (Time[5]-0x30);
  1048  00105C  EE20 F005          	lfsr	2,5
  1049  001060  5018               	movf	ValidateDateTime@Time,w,c
  1050  001062  26D9               	addwf	fsr2l,f,c
  1051  001064  5019               	movf	ValidateDateTime@Time+1,w,c
  1052  001066  22DA               	addwfc	fsr2h,f,c
  1053  001068  50DF               	movf	indf2,w,c
  1054  00106A  6E1A               	movwf	??_ValidateDateTime& (0+255),c
  1055  00106C  EE20 F004          	lfsr	2,4
  1056  001070  5018               	movf	ValidateDateTime@Time,w,c
  1057  001072  26D9               	addwf	fsr2l,f,c
  1058  001074  5019               	movf	ValidateDateTime@Time+1,w,c
  1059  001076  22DA               	addwfc	fsr2h,f,c
  1060  001078  50DF               	movf	indf2,w,c
  1061  00107A  0FD0               	addlw	208
  1062  00107C  0D0A               	mullw	10
  1063  00107E  50F3               	movf	prodl,w,c
  1064  001080  241A               	addwf	??_ValidateDateTime,w,c
  1065  001082  0FD0               	addlw	208
  1066  001084  6E1B               	movwf	ValidateDateTime@Item,c
  1067                           
  1068                           ;gps.c: 157: if (Item<=0 || Item>59) return 0;
  1069  001086  501B               	movf	ValidateDateTime@Item,w,c
  1070  001088  0A80               	xorlw	128
  1071  00108A  0F7F               	addlw	-129
  1072  00108C  A0D8               	btfss	status,0,c
  1073  00108E  D005               	goto	l2842
  1074  001090  501B               	movf	ValidateDateTime@Item,w,c
  1075  001092  0A80               	xorlw	128
  1076  001094  0F44               	addlw	-188
  1077  001096  A0D8               	btfss	status,0,c
  1078  001098  D002               	goto	l2846
  1079  00109A                     l2842:
  1080  00109A  0E00               	movlw	0
  1081  00109C  0012               	return	
  1082  00109E                     l2846:
  1083                           
  1084                           ;gps.c: 159: return 1;
  1085  00109E  0E01               	movlw	1
  1086  0010A0  0012               	return	
  1087  0010A2                     __end_of_ValidateDateTime:
  1088                           	opt stack 0
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           prodl	equ	0xFF3
  1094                           intcon	equ	0xFF2
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postdec1	equ	0xFE5
  1098                           plusw1	equ	0xFE3
  1099                           fsr1l	equ	0xFE1
  1100                           indf2	equ	0xFDF
  1101                           plusw2	equ	0xFDB
  1102                           fsr2h	equ	0xFDA
  1103                           fsr2l	equ	0xFD9
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function _SYSTEM_Initialize *****************
  1107 ;; Defined at:
  1108 ;;		line 107 in file "mcc_generated_files/mcc.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    7
  1129 ;; This function calls:
  1130 ;;		_EUSART1_Initialize
  1131 ;;		_INTERRUPT_Initialize
  1132 ;;		_OSCILLATOR_Initialize
  1133 ;;		_PIN_MANAGER_Initialize
  1134 ;;		_TMR0_Initialize
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text2
  1141  001CCE                     __ptext2:
  1142                           	opt stack 0
  1143  001CCE                     _SYSTEM_Initialize:
  1144                           	opt stack 23
  1145                           
  1146                           ;mcc.c: 110: INTERRUPT_Initialize();
  1147                           
  1148                           ;incstack = 0
  1149  001CCE  EC9F  F00E         	call	_INTERRUPT_Initialize	;wreg free
  1150                           
  1151                           ;mcc.c: 111: PIN_MANAGER_Initialize();
  1152  001CD2  EC22  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  1153                           
  1154                           ;mcc.c: 112: OSCILLATOR_Initialize();
  1155  001CD6  EC22  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  1156                           
  1157                           ;mcc.c: 113: TMR0_Initialize();
  1158  001CDA  ECED  F00D         	call	_TMR0_Initialize	;wreg free
  1159                           
  1160                           ;mcc.c: 114: EUSART1_Initialize();
  1161  001CDE  EC72  F00E         	call	_EUSART1_Initialize	;wreg free
  1162  001CE2  0012               	return		;funcret
  1163  001CE4                     __end_of_SYSTEM_Initialize:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           prodl	equ	0xFF3
  1170                           intcon	equ	0xFF2
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           postdec1	equ	0xFE5
  1174                           plusw1	equ	0xFE3
  1175                           fsr1l	equ	0xFE1
  1176                           indf2	equ	0xFDF
  1177                           plusw2	equ	0xFDB
  1178                           fsr2h	equ	0xFDA
  1179                           fsr2l	equ	0xFD9
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function _TMR0_Initialize *****************
  1183 ;; Defined at:
  1184 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    6
  1205 ;; This function calls:
  1206 ;;		_TMR0_SetInterruptHandler
  1207 ;;		_TMR0_StartTimer
  1208 ;; This function is called by:
  1209 ;;		_SYSTEM_Initialize
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text3
  1214  001BDA                     __ptext3:
  1215                           	opt stack 0
  1216  001BDA                     _TMR0_Initialize:
  1217                           	opt stack 23
  1218                           
  1219                           ;tmr0.c: 70: T0CON0 = 0x10;
  1220                           
  1221                           ;incstack = 0
  1222  001BDA  0E10               	movlw	16
  1223  001BDC  6ED5               	movwf	4053,c	;volatile
  1224                           
  1225                           ;tmr0.c: 73: T0CON1 = 0x50;
  1226  001BDE  0E50               	movlw	80
  1227  001BE0  6ED6               	movwf	4054,c	;volatile
  1228                           
  1229                           ;tmr0.c: 76: TMR0H = 0xF0;
  1230  001BE2  0EF0               	movlw	240
  1231  001BE4  6ED4               	movwf	4052,c	;volatile
  1232                           
  1233                           ;tmr0.c: 79: TMR0L = 0x60;
  1234  001BE6  0E60               	movlw	96
  1235  001BE8  6ED3               	movwf	4051,c	;volatile
  1236                           
  1237                           ;tmr0.c: 82: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  1238  001BEA  50D3               	movf	4051,w,c	;volatile
  1239  001BEC  CFD4 F018          	movff	4052,??_TMR0_Initialize	;volatile
  1240  001BF0  6A19               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1241  001BF2  C018  F019         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1242  001BF6  6A18               	clrf	??_TMR0_Initialize,c
  1243  001BF8  1018               	iorwf	??_TMR0_Initialize,w,c
  1244  001BFA  6E39               	movwf	_timer0ReloadVal16bit,c	;volatile
  1245  001BFC  5019               	movf	??_TMR0_Initialize+1,w,c
  1246  001BFE  6E3A               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1247                           
  1248                           ;tmr0.c: 85: PIR0bits.TMR0IF = 0;
  1249  001C00  010E               	movlb	14	; () banked
  1250  001C02  9BCA               	bcf	202,5,b	;volatile
  1251                           
  1252                           ; BSR set to: 14
  1253                           ;tmr0.c: 88: PIE0bits.TMR0IE = 1;
  1254  001C04  010E               	movlb	14	; () banked
  1255  001C06  8BC2               	bsf	194,5,b	;volatile
  1256                           
  1257                           ; BSR set to: 14
  1258                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1259  001C08  0E42               	movlw	low _TMR0_DefaultInterruptHandler
  1260  001C0A  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1261  001C0C  0E1D               	movlw	high _TMR0_DefaultInterruptHandler
  1262  001C0E  6E17               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1263  001C10  EC8F  F00E         	call	_TMR0_SetInterruptHandler	;wreg free
  1264                           
  1265                           ;tmr0.c: 94: TMR0_StartTimer();
  1266  001C14  EC9D  F00E         	call	_TMR0_StartTimer	;wreg free
  1267  001C18  0012               	return		;funcret
  1268  001C1A                     __end_of_TMR0_Initialize:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           prodl	equ	0xFF3
  1275                           intcon	equ	0xFF2
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           plusw1	equ	0xFE3
  1280                           fsr1l	equ	0xFE1
  1281                           indf2	equ	0xFDF
  1282                           plusw2	equ	0xFDB
  1283                           fsr2h	equ	0xFDA
  1284                           fsr2l	equ	0xFD9
  1285                           status	equ	0xFD8
  1286                           
  1287 ;; *************** function _TMR0_StartTimer *****************
  1288 ;; Defined at:
  1289 ;;		line 97 in file "mcc_generated_files/tmr0.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		None
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    5
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_TMR0_Initialize
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text4
  1318  001D3A                     __ptext4:
  1319                           	opt stack 0
  1320  001D3A                     _TMR0_StartTimer:
  1321                           	opt stack 23
  1322                           
  1323                           ;tmr0.c: 100: T0CON0bits.T0EN = 1;
  1324                           
  1325                           ;incstack = 0
  1326  001D3A  8ED5               	bsf	4053,7,c	;volatile
  1327  001D3C  0012               	return		;funcret
  1328  001D3E                     __end_of_TMR0_StartTimer:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           prodl	equ	0xFF3
  1335                           intcon	equ	0xFF2
  1336                           postinc0	equ	0xFEE
  1337                           wreg	equ	0xFE8
  1338                           postdec1	equ	0xFE5
  1339                           plusw1	equ	0xFE3
  1340                           fsr1l	equ	0xFE1
  1341                           indf2	equ	0xFDF
  1342                           plusw2	equ	0xFDB
  1343                           fsr2h	equ	0xFDA
  1344                           fsr2l	equ	0xFD9
  1345                           status	equ	0xFD8
  1346                           
  1347 ;; *************** function _TMR0_SetInterruptHandler *****************
  1348 ;; Defined at:
  1349 ;;		line 169 in file "mcc_generated_files/tmr0.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  InterruptHan    2   21[COMRAM] PTR FTN()void 
  1352 ;;		 -> Timer0_10ms(1), TMR0_DefaultInterruptHandler(1), 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;Total ram usage:        2 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    5
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_TMR0_Initialize
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text5
  1380  001D1E                     __ptext5:
  1381                           	opt stack 0
  1382  001D1E                     _TMR0_SetInterruptHandler:
  1383                           	opt stack 25
  1384                           
  1385                           ;tmr0.c: 170: TMR0_InterruptHandler = InterruptHandler;
  1386                           
  1387                           ;incstack = 0
  1388  001D1E  C016  F037         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1389  001D22  C017  F038         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1390  001D26  0012               	return		;funcret
  1391  001D28                     __end_of_TMR0_SetInterruptHandler:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           prodl	equ	0xFF3
  1398                           intcon	equ	0xFF2
  1399                           postinc0	equ	0xFEE
  1400                           wreg	equ	0xFE8
  1401                           postdec1	equ	0xFE5
  1402                           plusw1	equ	0xFE3
  1403                           fsr1l	equ	0xFE1
  1404                           indf2	equ	0xFDF
  1405                           plusw2	equ	0xFDB
  1406                           fsr2h	equ	0xFDA
  1407                           fsr2l	equ	0xFD9
  1408                           status	equ	0xFD8
  1409                           
  1410 ;; *************** function _PIN_MANAGER_Initialize *****************
  1411 ;; Defined at:
  1412 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  state           1   21[COMRAM] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;Total ram usage:        1 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    5
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_SYSTEM_Initialize
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text6
  1441  001844                     __ptext6:
  1442                           	opt stack 0
  1443  001844                     _PIN_MANAGER_Initialize:
  1444                           	opt stack 24
  1445                           
  1446                           ;pin_manager.c: 57: LATA = 0x00;
  1447                           
  1448                           ;incstack = 0
  1449  001844  0E00               	movlw	0
  1450  001846  6E83               	movwf	3971,c	;volatile
  1451                           
  1452                           ;pin_manager.c: 58: LATB = 0x00;
  1453  001848  0E00               	movlw	0
  1454  00184A  6E84               	movwf	3972,c	;volatile
  1455                           
  1456                           ;pin_manager.c: 59: LATC = 0x00;
  1457  00184C  0E00               	movlw	0
  1458  00184E  6E85               	movwf	3973,c	;volatile
  1459                           
  1460                           ;pin_manager.c: 64: TRISA = 0xC0;
  1461  001850  0EC0               	movlw	192
  1462  001852  6E88               	movwf	3976,c	;volatile
  1463                           
  1464                           ;pin_manager.c: 65: TRISB = 0x00;
  1465  001854  0E00               	movlw	0
  1466  001856  6E89               	movwf	3977,c	;volatile
  1467                           
  1468                           ;pin_manager.c: 66: TRISC = 0x84;
  1469  001858  0E84               	movlw	132
  1470  00185A  6E8A               	movwf	3978,c	;volatile
  1471                           
  1472                           ;pin_manager.c: 71: ANSELC = 0x44;
  1473  00185C  0E44               	movlw	68
  1474  00185E  010F               	movlb	15	; () banked
  1475  001860  6F21               	movwf	33,b	;volatile
  1476                           
  1477                           ;pin_manager.c: 72: ANSELB = 0x00;
  1478  001862  0E00               	movlw	0
  1479  001864  010F               	movlb	15	; () banked
  1480  001866  6F19               	movwf	25,b	;volatile
  1481                           
  1482                           ;pin_manager.c: 73: ANSELA = 0xC0;
  1483  001868  0EC0               	movlw	192
  1484  00186A  010F               	movlb	15	; () banked
  1485  00186C  6F11               	movwf	17,b	;volatile
  1486                           
  1487                           ;pin_manager.c: 78: WPUE = 0x00;
  1488  00186E  0E00               	movlw	0
  1489  001870  010F               	movlb	15	; () banked
  1490  001872  6F2D               	movwf	45,b	;volatile
  1491                           
  1492                           ;pin_manager.c: 79: WPUB = 0x00;
  1493  001874  0E00               	movlw	0
  1494  001876  010F               	movlb	15	; () banked
  1495  001878  6F18               	movwf	24,b	;volatile
  1496                           
  1497                           ;pin_manager.c: 80: WPUA = 0x00;
  1498  00187A  0E00               	movlw	0
  1499  00187C  010F               	movlb	15	; () banked
  1500  00187E  6F10               	movwf	16,b	;volatile
  1501                           
  1502                           ;pin_manager.c: 81: WPUC = 0x00;
  1503  001880  0E00               	movlw	0
  1504  001882  010F               	movlb	15	; () banked
  1505  001884  6F20               	movwf	32,b	;volatile
  1506                           
  1507                           ;pin_manager.c: 86: ODCONA = 0x00;
  1508  001886  0E00               	movlw	0
  1509  001888  010F               	movlb	15	; () banked
  1510  00188A  6F0F               	movwf	15,b	;volatile
  1511                           
  1512                           ;pin_manager.c: 87: ODCONB = 0x00;
  1513  00188C  0E00               	movlw	0
  1514  00188E  010F               	movlb	15	; () banked
  1515  001890  6F17               	movwf	23,b	;volatile
  1516                           
  1517                           ;pin_manager.c: 88: ODCONC = 0x00;
  1518  001892  0E00               	movlw	0
  1519  001894  010F               	movlb	15	; () banked
  1520  001896  6F1F               	movwf	31,b	;volatile
  1521                           
  1522                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  1523  001898  0E00               	movlw	0
  1524  00189A  BEF2               	btfsc	intcon,7,c	;volatile
  1525  00189C  0E01               	movlw	1
  1526  00189E  6E16               	movwf	PIN_MANAGER_Initialize@state,c
  1527                           
  1528                           ; BSR set to: 15
  1529                           ;pin_manager.c: 96: GIE = 0;
  1530  0018A0  9EF2               	bcf	intcon,7,c	;volatile
  1531                           
  1532                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  1533  0018A2  0E55               	movlw	85
  1534  0018A4  010E               	movlb	14	; () banked
  1535  0018A6  6FA0               	movwf	160,b	;volatile
  1536                           
  1537                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  1538  0018A8  0EAA               	movlw	170
  1539  0018AA  010E               	movlb	14	; () banked
  1540  0018AC  6FA0               	movwf	160,b	;volatile
  1541                           
  1542                           ; BSR set to: 14
  1543                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  1544  0018AE  010E               	movlb	14	; () banked
  1545  0018B0  91A0               	bcf	160,0,b	;volatile
  1546                           
  1547                           ; BSR set to: 14
  1548                           ;pin_manager.c: 101: RX1PPSbits.RXPPS = 0x17;
  1549  0018B2  010E               	movlb	14	; () banked
  1550  0018B4  81B5               	bsf	181,0,b	;volatile
  1551  0018B6  83B5               	bsf	181,1,b	;volatile
  1552  0018B8  85B5               	bsf	181,2,b	;volatile
  1553  0018BA  97B5               	bcf	181,3,b	;volatile
  1554  0018BC  89B5               	bsf	181,4,b	;volatile
  1555                           
  1556                           ;pin_manager.c: 102: RC6PPS = 0x09;
  1557  0018BE  0E09               	movlw	9
  1558  0018C0  010E               	movlb	14	; () banked
  1559  0018C2  6FFD               	movwf	253,b	;volatile
  1560                           
  1561                           ;pin_manager.c: 104: PPSLOCK = 0x55;
  1562  0018C4  0E55               	movlw	85
  1563  0018C6  010E               	movlb	14	; () banked
  1564  0018C8  6FA0               	movwf	160,b	;volatile
  1565                           
  1566                           ;pin_manager.c: 105: PPSLOCK = 0xAA;
  1567  0018CA  0EAA               	movlw	170
  1568  0018CC  010E               	movlb	14	; () banked
  1569  0018CE  6FA0               	movwf	160,b	;volatile
  1570                           
  1571                           ; BSR set to: 14
  1572                           ;pin_manager.c: 106: PPSLOCKbits.PPSLOCKED = 0x01;
  1573  0018D0  010E               	movlb	14	; () banked
  1574  0018D2  81A0               	bsf	160,0,b	;volatile
  1575                           
  1576                           ; BSR set to: 14
  1577                           ;pin_manager.c: 108: GIE = state;
  1578  0018D4  A016               	btfss	PIN_MANAGER_Initialize@state,0,c
  1579  0018D6  D002               	goto	u2090
  1580  0018D8  8EF2               	bsf	intcon,7,c	;volatile
  1581  0018DA  0012               	return	
  1582  0018DC                     u2090:
  1583  0018DC  9EF2               	bcf	intcon,7,c	;volatile
  1584  0018DE  0012               	return		;funcret
  1585  0018E0                     __end_of_PIN_MANAGER_Initialize:
  1586                           	opt stack 0
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           prodl	equ	0xFF3
  1592                           intcon	equ	0xFF2
  1593                           postinc0	equ	0xFEE
  1594                           wreg	equ	0xFE8
  1595                           postdec1	equ	0xFE5
  1596                           plusw1	equ	0xFE3
  1597                           fsr1l	equ	0xFE1
  1598                           indf2	equ	0xFDF
  1599                           plusw2	equ	0xFDB
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _OSCILLATOR_Initialize *****************
  1605 ;; Defined at:
  1606 ;;		line 117 in file "mcc_generated_files/mcc.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    5
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_SYSTEM_Initialize
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text7
  1635  001C44                     __ptext7:
  1636                           	opt stack 0
  1637  001C44                     _OSCILLATOR_Initialize:
  1638                           	opt stack 24
  1639                           
  1640                           ;mcc.c: 120: OSCCON1 = 0x20;
  1641                           
  1642                           ;incstack = 0
  1643  001C44  0E20               	movlw	32
  1644  001C46  010E               	movlb	14	; () banked
  1645  001C48  6FD8               	movwf	216,b	;volatile
  1646                           
  1647                           ;mcc.c: 122: OSCCON3 = 0x00;
  1648  001C4A  0E00               	movlw	0
  1649  001C4C  010E               	movlb	14	; () banked
  1650  001C4E  6FDA               	movwf	218,b	;volatile
  1651                           
  1652                           ;mcc.c: 124: OSCEN = 0x00;
  1653  001C50  0E00               	movlw	0
  1654  001C52  010E               	movlb	14	; () banked
  1655  001C54  6FDC               	movwf	220,b	;volatile
  1656                           
  1657                           ;mcc.c: 126: OSCFRQ = 0x02;
  1658  001C56  0E02               	movlw	2
  1659  001C58  010E               	movlb	14	; () banked
  1660  001C5A  6FDE               	movwf	222,b	;volatile
  1661                           
  1662                           ;mcc.c: 128: OSCTUNE = 0x00;
  1663  001C5C  0E00               	movlw	0
  1664  001C5E  010E               	movlb	14	; () banked
  1665  001C60  6FDD               	movwf	221,b	;volatile
  1666  001C62                     l321:
  1667                           
  1668                           ; BSR set to: 14
  1669  001C62  010E               	movlb	14	; () banked
  1670  001C64  B1DB               	btfsc	219,0,b	;volatile
  1671  001C66  0012               	return	
  1672  001C68  D7FC               	goto	l321
  1673  001C6A                     __end_of_OSCILLATOR_Initialize:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           prodl	equ	0xFF3
  1680                           intcon	equ	0xFF2
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           plusw1	equ	0xFE3
  1685                           fsr1l	equ	0xFE1
  1686                           indf2	equ	0xFDF
  1687                           plusw2	equ	0xFDB
  1688                           fsr2h	equ	0xFDA
  1689                           fsr2l	equ	0xFD9
  1690                           status	equ	0xFD8
  1691                           
  1692 ;; *************** function _INTERRUPT_Initialize *****************
  1693 ;; Defined at:
  1694 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		None
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1712 ;;Total ram usage:        0 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    5
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_SYSTEM_Initialize
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text8
  1723  001D3E                     __ptext8:
  1724                           	opt stack 0
  1725  001D3E                     _INTERRUPT_Initialize:
  1726                           	opt stack 24
  1727                           
  1728                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  1729                           
  1730                           ; BSR set to: 14
  1731                           ;incstack = 0
  1732  001D3E  9AF2               	bcf	intcon,5,c	;volatile
  1733  001D40  0012               	return		;funcret
  1734  001D42                     __end_of_INTERRUPT_Initialize:
  1735                           	opt stack 0
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           prodl	equ	0xFF3
  1741                           intcon	equ	0xFF2
  1742                           postinc0	equ	0xFEE
  1743                           wreg	equ	0xFE8
  1744                           postdec1	equ	0xFE5
  1745                           plusw1	equ	0xFE3
  1746                           fsr1l	equ	0xFE1
  1747                           indf2	equ	0xFDF
  1748                           plusw2	equ	0xFDB
  1749                           fsr2h	equ	0xFDA
  1750                           fsr2l	equ	0xFD9
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _EUSART1_Initialize *****************
  1754 ;; Defined at:
  1755 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    5
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_SYSTEM_Initialize
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text9
  1785  001CE4                     __ptext9:
  1786                           	opt stack 0
  1787  001CE4                     _EUSART1_Initialize:
  1788                           	opt stack 24
  1789                           
  1790                           ;eusart1.c: 60: BAUD1CON = 0x08;
  1791                           
  1792                           ;incstack = 0
  1793  001CE4  0E08               	movlw	8
  1794  001CE6  6E9F               	movwf	3999,c	;volatile
  1795                           
  1796                           ;eusart1.c: 63: RC1STA = 0x90;
  1797  001CE8  0E90               	movlw	144
  1798  001CEA  6E9D               	movwf	3997,c	;volatile
  1799                           
  1800                           ;eusart1.c: 66: TX1STA = 0x84;
  1801  001CEC  0E84               	movlw	132
  1802  001CEE  6E9E               	movwf	3998,c	;volatile
  1803                           
  1804                           ;eusart1.c: 69: SP1BRGL = 0xA0;
  1805  001CF0  0EA0               	movlw	160
  1806  001CF2  6E9B               	movwf	3995,c	;volatile
  1807                           
  1808                           ;eusart1.c: 72: SP1BRGH = 0x01;
  1809  001CF4  0E01               	movlw	1
  1810  001CF6  6E9C               	movwf	3996,c	;volatile
  1811  001CF8  0012               	return		;funcret
  1812  001CFA                     __end_of_EUSART1_Initialize:
  1813                           	opt stack 0
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           prodl	equ	0xFF3
  1819                           intcon	equ	0xFF2
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           postdec1	equ	0xFE5
  1823                           plusw1	equ	0xFE3
  1824                           fsr1l	equ	0xFE1
  1825                           indf2	equ	0xFDF
  1826                           plusw2	equ	0xFDB
  1827                           fsr2h	equ	0xFDA
  1828                           fsr2l	equ	0xFD9
  1829                           status	equ	0xFD8
  1830                           
  1831 ;; *************** function _ReadGPSDateTime *****************
  1832 ;; Defined at:
  1833 ;;		line 39 in file "libs/gps.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  Date            2   21[COMRAM] PTR unsigned char 
  1836 ;;		 -> main@Date(7), 
  1837 ;;  Time            2   23[COMRAM] PTR unsigned char 
  1838 ;;		 -> main@Time(7), 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  StartCode       7   29[COMRAM] const unsigned char [7]
  1841 ;;  i               2   37[COMRAM] int 
  1842 ;;  Pos             1   40[COMRAM] unsigned char 
  1843 ;;  TempChar        1   39[COMRAM] unsigned char 
  1844 ;;  Commas          1   36[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1855 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;Total ram usage:       20 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    6
  1861 ;; This function calls:
  1862 ;;		_EUSART1_Read
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text10
  1869  001218                     __ptext10:
  1870                           	opt stack 0
  1871  001218                     _ReadGPSDateTime:
  1872                           	opt stack 24
  1873                           
  1874                           ;gps.c: 40: const char StartCode[7]="$GPRMC,";
  1875                           
  1876                           ;incstack = 0
  1877  001218  0E01               	movlw	low ReadGPSDateTime@F11318
  1878  00121A  6EF6               	movwf	tblptrl,c
  1879  00121C                     	if	1	;There is more than 1 active tblptr byte
  1880  00121C  0E0F               	movlw	high ReadGPSDateTime@F11318
  1881  00121E  6EF7               	movwf	tblptrh,c
  1882  001220                     	endif
  1883  001220                     	if	1	;There are 3 active tblptr bytes
  1884  001220  0E00               	movlw	low (ReadGPSDateTime@F11318 shr (0+16))
  1885  001222  6EF8               	movwf	tblptru,c
  1886  001224                     	endif
  1887  001224  EE20  F01E         	lfsr	2,ReadGPSDateTime@StartCode
  1888  001228  0E06               	movlw	6
  1889  00122A                     u2270:
  1890  00122A  0009               	tblrd		*+
  1891  00122C  CFF5 FFDE          	movff	tablat,postinc2
  1892  001230  06E8               	decf	wreg,f,c
  1893  001232  E2FB               	bc	u2270
  1894                           
  1895                           ;gps.c: 41: char Pos=0x00;
  1896  001234  0E00               	movlw	0
  1897  001236  6E29               	movwf	ReadGPSDateTime@Pos,c
  1898                           
  1899                           ;gps.c: 42: char TempChar = 0x00;
  1900  001238  0E00               	movlw	0
  1901  00123A  6E28               	movwf	ReadGPSDateTime@TempChar,c
  1902                           
  1903                           ;gps.c: 43: int i=0;
  1904  00123C  0E00               	movlw	0
  1905  00123E  6E27               	movwf	ReadGPSDateTime@i+1,c
  1906  001240  0E00               	movlw	0
  1907  001242  6E26               	movwf	ReadGPSDateTime@i,c
  1908                           
  1909                           ;gps.c: 44: UINT8 Commas=0;
  1910  001244  0E00               	movlw	0
  1911  001246  6E25               	movwf	ReadGPSDateTime@Commas,c
  1912  001248                     l2736:
  1913                           
  1914                           ;gps.c: 46: if ((PIR3bits.RC1IF)){
  1915  001248  010E               	movlb	14	; () banked
  1916  00124A  ABCD               	btfss	205,5,b	;volatile
  1917  00124C  D065               	goto	l2772
  1918                           
  1919                           ; BSR set to: 14
  1920                           ;gps.c: 47: i=0;
  1921  00124E  0E00               	movlw	0
  1922  001250  6E27               	movwf	ReadGPSDateTime@i+1,c
  1923  001252  0E00               	movlw	0
  1924  001254  6E26               	movwf	ReadGPSDateTime@i,c
  1925                           
  1926                           ; BSR set to: 14
  1927                           ;gps.c: 48: TempChar = EUSART1_Read();
  1928  001256  EC7D  F00E         	call	_EUSART1_Read	;wreg free
  1929  00125A  6E28               	movwf	ReadGPSDateTime@TempChar,c
  1930                           
  1931                           ;gps.c: 49: if ((Pos>=0x07) & (Pos<=0x0c)) {
  1932  00125C  0E06               	movlw	6
  1933  00125E  6429               	cpfsgt	ReadGPSDateTime@Pos,c
  1934  001260  D014               	goto	l2750
  1935  001262  0E0D               	movlw	13
  1936  001264  6029               	cpfslt	ReadGPSDateTime@Pos,c
  1937  001266  D011               	goto	l2750
  1938                           
  1939                           ;gps.c: 50: Time[Pos-0x07]= TempChar;
  1940  001268  0EF9               	movlw	249
  1941  00126A  6E1A               	movwf	??_ReadGPSDateTime& (0+255),c
  1942  00126C  0EFF               	movlw	255
  1943  00126E  6E1B               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  1944  001270  5029               	movf	ReadGPSDateTime@Pos,w,c
  1945  001272  6E1C               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  1946  001274  6A1D               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  1947  001276  501A               	movf	??_ReadGPSDateTime,w,c
  1948  001278  261C               	addwf	??_ReadGPSDateTime+2,f,c
  1949  00127A  501B               	movf	??_ReadGPSDateTime+1,w,c
  1950  00127C  221D               	addwfc	??_ReadGPSDateTime+3,f,c
  1951  00127E  501C               	movf	??_ReadGPSDateTime+2,w,c
  1952  001280  2418               	addwf	ReadGPSDateTime@Time,w,c
  1953  001282  6ED9               	movwf	fsr2l,c
  1954  001284  501D               	movf	??_ReadGPSDateTime+3,w,c
  1955  001286  2019               	addwfc	ReadGPSDateTime@Time+1,w,c
  1956  001288  D03F               	goto	L7
  1957  00128A                     l2750:
  1958  00128A  5029               	movf	ReadGPSDateTime@Pos,w,c
  1959  00128C  0D01               	mullw	1
  1960  00128E  0E1E               	movlw	low ReadGPSDateTime@StartCode
  1961  001290  24F3               	addwf	prodl,w,c
  1962  001292  6ED9               	movwf	fsr2l,c
  1963  001294  0E00               	movlw	high ReadGPSDateTime@StartCode
  1964  001296  20F4               	addwfc	prodh,w,c
  1965  001298  6EDA               	movwf	fsr2h,c
  1966  00129A  5028               	movf	ReadGPSDateTime@TempChar,w,c
  1967  00129C  18DE               	xorwf	postinc2,w,c
  1968  00129E  A4D8               	btfss	status,2,c
  1969  0012A0  D004               	goto	l2756
  1970  0012A2  0E07               	movlw	7
  1971  0012A4  6029               	cpfslt	ReadGPSDateTime@Pos,c
  1972  0012A6  D001               	goto	l2756
  1973  0012A8  D032               	goto	l2768
  1974  0012AA                     l2756:
  1975  0012AA  0E0C               	movlw	12
  1976  0012AC  6429               	cpfsgt	ReadGPSDateTime@Pos,c
  1977  0012AE  D031               	goto	l2770
  1978                           
  1979                           ;gps.c: 55: if (Commas<8) {
  1980  0012B0  0E08               	movlw	8
  1981  0012B2  6025               	cpfslt	ReadGPSDateTime@Commas,c
  1982  0012B4  D006               	goto	l2764
  1983                           
  1984                           ;gps.c: 56: if (TempChar == 0x2C)
  1985  0012B6  0E2C               	movlw	44
  1986  0012B8  1828               	xorwf	ReadGPSDateTime@TempChar,w,c
  1987  0012BA  A4D8               	btfss	status,2,c
  1988  0012BC  D031               	goto	l2774
  1989                           
  1990                           ;gps.c: 57: Commas++;
  1991  0012BE  2A25               	incf	ReadGPSDateTime@Commas,f,c
  1992                           
  1993                           ;gps.c: 58: } else {
  1994  0012C0  D02F               	goto	l2774
  1995  0012C2                     l2764:
  1996                           
  1997                           ;gps.c: 59: if ((Pos-0x0d)<6) {
  1998  0012C2  0EF3               	movlw	243
  1999  0012C4  6E1A               	movwf	??_ReadGPSDateTime& (0+255),c
  2000  0012C6  0EFF               	movlw	255
  2001  0012C8  6E1B               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  2002  0012CA  5029               	movf	ReadGPSDateTime@Pos,w,c
  2003  0012CC  6E1C               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  2004  0012CE  6A1D               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  2005  0012D0  501A               	movf	??_ReadGPSDateTime,w,c
  2006  0012D2  261C               	addwf	??_ReadGPSDateTime+2,f,c
  2007  0012D4  501B               	movf	??_ReadGPSDateTime+1,w,c
  2008  0012D6  221D               	addwfc	??_ReadGPSDateTime+3,f,c
  2009  0012D8  BE1D               	btfsc	??_ReadGPSDateTime+3,7,c
  2010  0012DA  D006               	goto	l2766
  2011  0012DC  501D               	movf	??_ReadGPSDateTime+3,w,c
  2012  0012DE  E12B               	bnz	l53
  2013  0012E0  0E06               	movlw	6
  2014  0012E2  5C1C               	subwf	??_ReadGPSDateTime+2,w,c
  2015  0012E4  B0D8               	btfsc	status,0,c
  2016  0012E6  0012               	return	
  2017  0012E8                     l2766:
  2018                           
  2019                           ;gps.c: 60: Date[Pos-0x0d] = TempChar;
  2020  0012E8  0EF3               	movlw	243
  2021  0012EA  6E1A               	movwf	??_ReadGPSDateTime& (0+255),c
  2022  0012EC  0EFF               	movlw	255
  2023  0012EE  6E1B               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  2024  0012F0  5029               	movf	ReadGPSDateTime@Pos,w,c
  2025  0012F2  6E1C               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  2026  0012F4  6A1D               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  2027  0012F6  501A               	movf	??_ReadGPSDateTime,w,c
  2028  0012F8  261C               	addwf	??_ReadGPSDateTime+2,f,c
  2029  0012FA  501B               	movf	??_ReadGPSDateTime+1,w,c
  2030  0012FC  221D               	addwfc	??_ReadGPSDateTime+3,f,c
  2031  0012FE  501C               	movf	??_ReadGPSDateTime+2,w,c
  2032  001300  2416               	addwf	ReadGPSDateTime@Date,w,c
  2033  001302  6ED9               	movwf	fsr2l,c
  2034  001304  501D               	movf	??_ReadGPSDateTime+3,w,c
  2035  001306  2017               	addwfc	ReadGPSDateTime@Date+1,w,c
  2036  001308                     L7:
  2037  001308  6EDA               	movwf	fsr2h,c
  2038  00130A  C028  FFDF         	movff	ReadGPSDateTime@TempChar,indf2
  2039  00130E                     l2768:
  2040                           
  2041                           ;gps.c: 61: Pos++;
  2042  00130E  2A29               	incf	ReadGPSDateTime@Pos,f,c
  2043                           
  2044                           ;gps.c: 62: } else
  2045  001310  D007               	goto	l2774
  2046  001312                     l2770:
  2047                           
  2048                           ;gps.c: 66: Pos=0;
  2049  001312  0E00               	movlw	0
  2050  001314  6E29               	movwf	ReadGPSDateTime@Pos,c
  2051                           
  2052                           ;gps.c: 67: } else
  2053  001316  D004               	goto	l2774
  2054  001318                     l2772:
  2055                           
  2056                           ;gps.c: 68: _delay((unsigned long)((20)*(16000000/4000000.0)));
  2057  001318  0E1A               	movlw	26
  2058  00131A                     u2837:
  2059  00131A  2EE8               	decfsz	wreg,f,c
  2060  00131C  D7FE               	bra	u2837
  2061  00131E  D000               	nop2	
  2062  001320                     l2774:
  2063                           
  2064                           ;gps.c: 69: i++;
  2065  001320  4A26               	infsnz	ReadGPSDateTime@i,f,c
  2066  001322  2A27               	incf	ReadGPSDateTime@i+1,f,c
  2067                           
  2068                           ;gps.c: 70: } while(i<1000);
  2069  001324  BE27               	btfsc	ReadGPSDateTime@i+1,7,c
  2070  001326  D790               	goto	l2736
  2071  001328  0EE8               	movlw	232
  2072  00132A  5C26               	subwf	ReadGPSDateTime@i,w,c
  2073  00132C  0E03               	movlw	3
  2074  00132E  5827               	subwfb	ReadGPSDateTime@i+1,w,c
  2075  001330  B0D8               	btfsc	status,0,c
  2076  001332  0012               	return	
  2077  001334  D789               	goto	l2736
  2078  001336                     l53:
  2079  001336  0012               	return		;funcret
  2080  001338                     __end_of_ReadGPSDateTime:
  2081                           	opt stack 0
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           prodh	equ	0xFF4
  2087                           prodl	equ	0xFF3
  2088                           intcon	equ	0xFF2
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           plusw1	equ	0xFE3
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           postinc2	equ	0xFDE
  2096                           plusw2	equ	0xFDB
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _EUSART1_Read *****************
  2102 ;; Defined at:
  2103 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      unsigned char 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    5
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_ReadGPSDateTime
  2128 ;;		_ShowRawData
  2129 ;;		_ReadGPSTime
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text11
  2134  001CFA                     __ptext11:
  2135                           	opt stack 0
  2136  001CFA                     _EUSART1_Read:
  2137                           	opt stack 24
  2138  001CFA                     l217:
  2139  001CFA  010E               	movlb	14	; () banked
  2140  001CFC  ABCD               	btfss	205,5,b	;volatile
  2141  001CFE  D7FD               	goto	l217
  2142                           
  2143                           ; BSR set to: 14
  2144                           ;eusart1.c: 82: }
  2145                           ;eusart1.c: 85: if(1 == RC1STAbits.OERR)
  2146  001D00  A29D               	btfss	3997,1,c	;volatile
  2147  001D02  D002               	goto	l2522
  2148                           
  2149                           ; BSR set to: 14
  2150                           ;eusart1.c: 86: {
  2151                           ;eusart1.c: 89: RC1STAbits.SPEN = 0;
  2152  001D04  9E9D               	bcf	3997,7,c	;volatile
  2153                           
  2154                           ;eusart1.c: 90: RC1STAbits.SPEN = 1;
  2155  001D06  8E9D               	bsf	3997,7,c	;volatile
  2156  001D08                     l2522:
  2157                           
  2158                           ; BSR set to: 14
  2159                           ;eusart1.c: 91: }
  2160                           ;eusart1.c: 93: return RC1REG;
  2161  001D08  5099               	movf	3993,w,c	;volatile
  2162  001D0A  0012               	return	
  2163  001D0C                     __end_of_EUSART1_Read:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           intcon	equ	0xFF2
  2172                           postinc0	equ	0xFEE
  2173                           wreg	equ	0xFE8
  2174                           postdec1	equ	0xFE5
  2175                           plusw1	equ	0xFE3
  2176                           fsr1l	equ	0xFE1
  2177                           indf2	equ	0xFDF
  2178                           postinc2	equ	0xFDE
  2179                           plusw2	equ	0xFDB
  2180                           fsr2h	equ	0xFDA
  2181                           fsr2l	equ	0xFD9
  2182                           status	equ	0xFD8
  2183                           
  2184 ;; *************** function _Lcd_Text *****************
  2185 ;; Defined at:
  2186 ;;		line 76 in file "libs/HD44780.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  y               1    wreg     unsigned char 
  2189 ;;  x               1   24[COMRAM] unsigned char 
  2190 ;;  buffer          2   25[COMRAM] PTR unsigned char 
  2191 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(2), 
  2192 ;;		 -> main@Time(7), main@Date(7), 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  y               1   27[COMRAM] unsigned char 
  2195 ;;  data            1   28[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2205 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;Total ram usage:        5 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    7
  2212 ;; This function calls:
  2213 ;;		_Lcd_CharCP
  2214 ;;		_Lcd_Command
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text12
  2221  0018E0                     __ptext12:
  2222                           	opt stack 0
  2223  0018E0                     _Lcd_Text:
  2224                           	opt stack 23
  2225                           
  2226                           ; BSR set to: 14
  2227                           ;incstack = 0
  2228                           ;Lcd_Text@y stored from wreg
  2229  0018E0  6E1C               	movwf	Lcd_Text@y,c
  2230                           
  2231                           ;HD44780.c: 77: unsigned char data;
  2232                           ;HD44780.c: 78: switch(y){
  2233  0018E2  D00D               	goto	l2920
  2234  0018E4                     l2910:
  2235  0018E4  5019               	movf	Lcd_Text@x,w,c
  2236  0018E6  0F7F               	addlw	127
  2237  0018E8  D008               	goto	L3
  2238  0018EA                     l2912:
  2239  0018EA  5019               	movf	Lcd_Text@x,w,c
  2240  0018EC  0FBF               	addlw	191
  2241  0018EE  D005               	goto	L3
  2242  0018F0                     l2914:
  2243  0018F0  5019               	movf	Lcd_Text@x,w,c
  2244  0018F2  0F93               	addlw	147
  2245  0018F4  D002               	goto	L3
  2246  0018F6                     l2916:
  2247  0018F6  5019               	movf	Lcd_Text@x,w,c
  2248  0018F8  0FD3               	addlw	211
  2249  0018FA                     L3:
  2250  0018FA  6E1D               	movwf	Lcd_Text@data,c
  2251                           
  2252                           ;HD44780.c: 83: default: break;}
  2253  0018FC  D00D               	goto	l2922
  2254  0018FE                     l2920:
  2255  0018FE  501C               	movf	Lcd_Text@y,w,c
  2256                           
  2257                           ; Switch size 1, requested type "space"
  2258                           ; Number of cases is 4, Range of values is 1 to 4
  2259                           ; switch strategies available:
  2260                           ; Name         Instructions Cycles
  2261                           ; simple_byte           13     7 (average)
  2262                           ;	Chosen strategy is simple_byte
  2263  001900  0A01               	xorlw	1	; case 1
  2264  001902  B4D8               	btfsc	status,2,c
  2265  001904  D7EF               	goto	l2910
  2266  001906  0A03               	xorlw	3	; case 2
  2267  001908  B4D8               	btfsc	status,2,c
  2268  00190A  D7EF               	goto	l2912
  2269  00190C  0A01               	xorlw	1	; case 3
  2270  00190E  B4D8               	btfsc	status,2,c
  2271  001910  D7EF               	goto	l2914
  2272  001912  0A07               	xorlw	7	; case 4
  2273  001914  B4D8               	btfsc	status,2,c
  2274  001916  D7EF               	goto	l2916
  2275  001918                     l2922:
  2276                           
  2277                           ;HD44780.c: 84: Lcd_Command(data);
  2278  001918  501D               	movf	Lcd_Text@data,w,c
  2279  00191A  ECB4  F00A         	call	_Lcd_Command
  2280                           
  2281                           ;HD44780.c: 85: while(*buffer)
  2282  00191E  D015               	goto	l2928
  2283  001920                     l2924:
  2284                           
  2285                           ;HD44780.c: 86: {
  2286                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  2287  001920  C01A  FFF6         	movff	Lcd_Text@buffer,tblptrl
  2288  001924  C01B  FFF7         	movff	Lcd_Text@buffer+1,tblptrh
  2289  001928  0E00               	movlw	low (__smallconst shr (0+16))
  2290  00192A  6EF8               	movwf	tblptru,c
  2291  00192C  0E0E               	movlw	(high __ramtop+-1)
  2292  00192E  64F7               	cpfsgt	tblptrh,c
  2293  001930  D003               	bra	u2547
  2294  001932  0008               	tblrd		*
  2295  001934  50F5               	movf	tablat,w,c
  2296  001936  D005               	bra	u2540
  2297  001938                     u2547:
  2298  001938  CFF6 FFE9          	movff	tblptrl,fsr0l
  2299  00193C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2300  001940  50EF               	movf	indf0,w,c
  2301  001942                     u2540:
  2302  001942  EC29  F00A         	call	_Lcd_CharCP
  2303                           
  2304                           ;HD44780.c: 88: buffer++;
  2305  001946  4A1A               	infsnz	Lcd_Text@buffer,f,c
  2306  001948  2A1B               	incf	Lcd_Text@buffer+1,f,c
  2307  00194A                     l2928:
  2308  00194A  C01A  FFF6         	movff	Lcd_Text@buffer,tblptrl
  2309  00194E  C01B  FFF7         	movff	Lcd_Text@buffer+1,tblptrh
  2310  001952  0E00               	movlw	low (__smallconst shr (0+16))
  2311  001954  6EF8               	movwf	tblptru,c
  2312  001956  0E0E               	movlw	(high __ramtop+-1)
  2313  001958  64F7               	cpfsgt	tblptrh,c
  2314  00195A  D003               	bra	u2557
  2315  00195C  0008               	tblrd		*
  2316  00195E  50F5               	movf	tablat,w,c
  2317  001960  D005               	bra	u2550
  2318  001962                     u2557:
  2319  001962  CFF6 FFE9          	movff	tblptrl,fsr0l
  2320  001966  CFF7 FFEA          	movff	tblptrh,fsr0h
  2321  00196A  50EF               	movf	indf0,w,c
  2322  00196C                     u2550:
  2323  00196C  0900               	iorlw	0
  2324  00196E  B4D8               	btfsc	status,2,c
  2325  001970  0012               	return	
  2326  001972  D7D6               	goto	l2924
  2327  001974                     __end_of_Lcd_Text:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           intcon	equ	0xFF2
  2336                           indf0	equ	0xFEF
  2337                           postinc0	equ	0xFEE
  2338                           fsr0h	equ	0xFEA
  2339                           fsr0l	equ	0xFE9
  2340                           wreg	equ	0xFE8
  2341                           postdec1	equ	0xFE5
  2342                           plusw1	equ	0xFE3
  2343                           fsr1l	equ	0xFE1
  2344                           indf2	equ	0xFDF
  2345                           postinc2	equ	0xFDE
  2346                           plusw2	equ	0xFDB
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function _Lcd_Int *****************
  2352 ;; Defined at:
  2353 ;;		line 157 in file "libs/HD44780.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  y               1    wreg     unsigned char 
  2356 ;;  x               1   49[COMRAM] unsigned char 
  2357 ;;  val             1   50[COMRAM] unsigned char 
  2358 ;;  size            1   51[COMRAM] unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  y               1    0[BANK0 ] unsigned char 
  2361 ;;  tempVal         2    2[BANK0 ] unsigned int 
  2362 ;;  data            1    1[BANK0 ] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2372 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;Total ram usage:        7 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    7
  2379 ;; This function calls:
  2380 ;;		_Lcd_CharCP
  2381 ;;		_Lcd_Command
  2382 ;;		___awdiv
  2383 ;;		___lwdiv
  2384 ;;		___wmul
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text13
  2391  00167E                     __ptext13:
  2392                           	opt stack 0
  2393  00167E                     _Lcd_Int:
  2394                           	opt stack 23
  2395                           
  2396                           ;incstack = 0
  2397                           ;Lcd_Int@y stored from wreg
  2398  00167E  0100               	movlb	0	; () banked
  2399  001680  6F7F               	movwf	Lcd_Int@y& (0+255),b
  2400                           
  2401                           ;HD44780.c: 158: if ((size>0) && (size<=3)) {
  2402  001682  5034               	movf	Lcd_Int@size,w,c
  2403  001684  B4D8               	btfsc	status,2,c
  2404  001686  0012               	return	
  2405  001688  0E04               	movlw	4
  2406  00168A  6034               	cpfslt	Lcd_Int@size,c
  2407  00168C  0012               	return	
  2408                           
  2409                           ;HD44780.c: 159: unsigned int tempVal=val;
  2410  00168E  C033  F081         	movff	Lcd_Int@val,Lcd_Int@tempVal
  2411  001692  0100               	movlb	0	; () banked
  2412  001694  6B82               	clrf	(Lcd_Int@tempVal+1)& (0+255),b
  2413                           
  2414                           ;HD44780.c: 160: unsigned char data;
  2415                           ;HD44780.c: 161: switch(y){
  2416  001696  D00E               	goto	l2962
  2417  001698                     l2952:
  2418                           
  2419                           ; BSR set to: 0
  2420  001698  5032               	movf	Lcd_Int@x,w,c
  2421  00169A  0F7F               	addlw	127
  2422  00169C  D008               	goto	L6
  2423  00169E                     l2954:
  2424                           
  2425                           ; BSR set to: 0
  2426  00169E  5032               	movf	Lcd_Int@x,w,c
  2427  0016A0  0FBF               	addlw	191
  2428  0016A2  D005               	goto	L6
  2429  0016A4                     l2956:
  2430                           
  2431                           ; BSR set to: 0
  2432  0016A4  5032               	movf	Lcd_Int@x,w,c
  2433  0016A6  0F93               	addlw	147
  2434  0016A8  D002               	goto	L6
  2435  0016AA                     l2958:
  2436                           
  2437                           ; BSR set to: 0
  2438  0016AA  5032               	movf	Lcd_Int@x,w,c
  2439  0016AC  0FD3               	addlw	211
  2440  0016AE                     L6:
  2441  0016AE  0100               	movlb	0	; () banked
  2442  0016B0  6F80               	movwf	Lcd_Int@data& (0+255),b
  2443                           
  2444                           ; BSR set to: 0
  2445                           
  2446                           ; BSR set to: 0
  2447                           
  2448                           ;HD44780.c: 166: default: break;}
  2449  0016B2  D00E               	goto	l2964
  2450  0016B4                     l2962:
  2451                           
  2452                           ; BSR set to: 0
  2453  0016B4  0100               	movlb	0	; () banked
  2454  0016B6  517F               	movf	Lcd_Int@y& (0+255),w,b
  2455                           
  2456                           ; Switch size 1, requested type "space"
  2457                           ; Number of cases is 4, Range of values is 1 to 4
  2458                           ; switch strategies available:
  2459                           ; Name         Instructions Cycles
  2460                           ; simple_byte           13     7 (average)
  2461                           ;	Chosen strategy is simple_byte
  2462  0016B8  0A01               	xorlw	1	; case 1
  2463  0016BA  B4D8               	btfsc	status,2,c
  2464  0016BC  D7ED               	goto	l2952
  2465  0016BE  0A03               	xorlw	3	; case 2
  2466  0016C0  B4D8               	btfsc	status,2,c
  2467  0016C2  D7ED               	goto	l2954
  2468  0016C4  0A01               	xorlw	1	; case 3
  2469  0016C6  B4D8               	btfsc	status,2,c
  2470  0016C8  D7ED               	goto	l2956
  2471  0016CA  0A07               	xorlw	7	; case 4
  2472  0016CC  B4D8               	btfsc	status,2,c
  2473  0016CE  D7ED               	goto	l2958
  2474  0016D0                     l2964:
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;HD44780.c: 167: Lcd_Command(data);
  2478  0016D0  0100               	movlb	0	; () banked
  2479  0016D2  5180               	movf	Lcd_Int@data& (0+255),w,b
  2480  0016D4  ECB4  F00A         	call	_Lcd_Command
  2481                           
  2482                           ;HD44780.c: 168: if (size>=3){
  2483  0016D8  0E02               	movlw	2
  2484  0016DA  6434               	cpfsgt	Lcd_Int@size,c
  2485  0016DC  D012               	goto	l2970
  2486                           
  2487                           ;HD44780.c: 169: tempVal = val/100;
  2488  0016DE  C033  F016         	movff	Lcd_Int@val,___awdiv@dividend
  2489  0016E2  6A17               	clrf	___awdiv@dividend+1,c
  2490  0016E4  0E00               	movlw	0
  2491  0016E6  6E19               	movwf	___awdiv@divisor+1,c
  2492  0016E8  0E64               	movlw	100
  2493  0016EA  6E18               	movwf	___awdiv@divisor,c
  2494  0016EC  ECBA  F00C         	call	___awdiv	;wreg free
  2495  0016F0  C016  F081         	movff	?___awdiv,Lcd_Int@tempVal
  2496  0016F4  C017  F082         	movff	?___awdiv+1,Lcd_Int@tempVal+1
  2497                           
  2498                           ;HD44780.c: 170: Lcd_CharCP(0x30+(tempVal));
  2499  0016F8  0100               	movlb	0	; () banked
  2500  0016FA  5181               	movf	Lcd_Int@tempVal& (0+255),w,b
  2501  0016FC  0F30               	addlw	48
  2502  0016FE  EC29  F00A         	call	_Lcd_CharCP
  2503  001702                     l2970:
  2504                           
  2505                           ;HD44780.c: 171: }
  2506                           ;HD44780.c: 172: if (size>=2){
  2507  001702  0E01               	movlw	1
  2508  001704  6434               	cpfsgt	Lcd_Int@size,c
  2509  001706  D023               	goto	l2976
  2510                           
  2511                           ;HD44780.c: 173: tempVal = (val-tempVal*100)/10;
  2512  001708  C081  F016         	movff	Lcd_Int@tempVal,___wmul@multiplier
  2513  00170C  C082  F017         	movff	Lcd_Int@tempVal+1,___wmul@multiplier+1
  2514  001710  0E00               	movlw	0
  2515  001712  6E19               	movwf	___wmul@multiplicand+1,c
  2516  001714  0E64               	movlw	100
  2517  001716  6E18               	movwf	___wmul@multiplicand,c
  2518  001718  EC35  F00E         	call	___wmul	;wreg free
  2519  00171C  1E16               	comf	?___wmul,f,c
  2520  00171E  1E17               	comf	?___wmul+1,f,c
  2521  001720  4A16               	infsnz	?___wmul,f,c
  2522  001722  2A17               	incf	?___wmul+1,f,c
  2523  001724  5033               	movf	Lcd_Int@val,w,c
  2524  001726  2416               	addwf	?___wmul,w,c
  2525  001728  6E1C               	movwf	___lwdiv@dividend,c
  2526  00172A  0E00               	movlw	0
  2527  00172C  2017               	addwfc	?___wmul+1,w,c
  2528  00172E  6E1D               	movwf	___lwdiv@dividend+1,c
  2529  001730  0E00               	movlw	0
  2530  001732  6E1F               	movwf	___lwdiv@divisor+1,c
  2531  001734  0E0A               	movlw	10
  2532  001736  6E1E               	movwf	___lwdiv@divisor,c
  2533  001738  ECC4  F00D         	call	___lwdiv	;wreg free
  2534  00173C  C01C  F081         	movff	?___lwdiv,Lcd_Int@tempVal
  2535  001740  C01D  F082         	movff	?___lwdiv+1,Lcd_Int@tempVal+1
  2536                           
  2537                           ;HD44780.c: 174: Lcd_CharCP(0x30+(tempVal));
  2538  001744  0100               	movlb	0	; () banked
  2539  001746  5181               	movf	Lcd_Int@tempVal& (0+255),w,b
  2540  001748  0F30               	addlw	48
  2541  00174A  EC29  F00A         	call	_Lcd_CharCP
  2542  00174E                     l2976:
  2543                           
  2544                           ;HD44780.c: 175: }
  2545                           ;HD44780.c: 176: if (size>=1){
  2546  00174E  5034               	movf	Lcd_Int@size,w,c
  2547  001750  B4D8               	btfsc	status,2,c
  2548  001752  0012               	return	
  2549                           
  2550                           ;HD44780.c: 177: tempVal = val/10;
  2551  001754  C033  F016         	movff	Lcd_Int@val,___awdiv@dividend
  2552  001758  6A17               	clrf	___awdiv@dividend+1,c
  2553  00175A  0E00               	movlw	0
  2554  00175C  6E19               	movwf	___awdiv@divisor+1,c
  2555  00175E  0E0A               	movlw	10
  2556  001760  6E18               	movwf	___awdiv@divisor,c
  2557  001762  ECBA  F00C         	call	___awdiv	;wreg free
  2558  001766  C016  F081         	movff	?___awdiv,Lcd_Int@tempVal
  2559  00176A  C017  F082         	movff	?___awdiv+1,Lcd_Int@tempVal+1
  2560                           
  2561                           ;HD44780.c: 178: Lcd_CharCP(0x30+(val - tempVal*10));
  2562  00176E  0100               	movlb	0	; () banked
  2563  001770  5181               	movf	Lcd_Int@tempVal& (0+255),w,b
  2564  001772  0D0A               	mullw	10
  2565  001774  50F3               	movf	prodl,w,c
  2566  001776  0800               	sublw	0
  2567  001778  2433               	addwf	Lcd_Int@val,w,c
  2568  00177A  0F30               	addlw	48
  2569  00177C  EC29  F00A         	call	_Lcd_CharCP
  2570  001780  0012               	return	
  2571  001782                     __end_of_Lcd_Int:
  2572                           	opt stack 0
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           prodh	equ	0xFF4
  2578                           prodl	equ	0xFF3
  2579                           intcon	equ	0xFF2
  2580                           indf0	equ	0xFEF
  2581                           postinc0	equ	0xFEE
  2582                           fsr0h	equ	0xFEA
  2583                           fsr0l	equ	0xFE9
  2584                           wreg	equ	0xFE8
  2585                           postdec1	equ	0xFE5
  2586                           plusw1	equ	0xFE3
  2587                           fsr1l	equ	0xFE1
  2588                           indf2	equ	0xFDF
  2589                           postinc2	equ	0xFDE
  2590                           plusw2	equ	0xFDB
  2591                           fsr2h	equ	0xFDA
  2592                           fsr2l	equ	0xFD9
  2593                           status	equ	0xFD8
  2594                           
  2595 ;; *************** function ___lwdiv *****************
  2596 ;; Defined at:
  2597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  dividend        2   27[COMRAM] unsigned int 
  2600 ;;  divisor         2   29[COMRAM] unsigned int 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  quotient        2   32[COMRAM] unsigned int 
  2603 ;;  counter         1   31[COMRAM] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2   27[COMRAM] unsigned int 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2614 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;Total ram usage:        7 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    5
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_Lcd_Int
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text14
  2628  001B88                     __ptext14:
  2629                           	opt stack 0
  2630  001B88                     ___lwdiv:
  2631                           	opt stack 24
  2632                           
  2633                           ;incstack = 0
  2634  001B88  0E00               	movlw	0
  2635  001B8A  6E22               	movwf	___lwdiv@quotient+1,c
  2636  001B8C  0E00               	movlw	0
  2637  001B8E  6E21               	movwf	___lwdiv@quotient,c
  2638  001B90  501E               	movf	___lwdiv@divisor,w,c
  2639  001B92  101F               	iorwf	___lwdiv@divisor+1,w,c
  2640  001B94  B4D8               	btfsc	status,2,c
  2641  001B96  D01C               	goto	l849
  2642  001B98  0E01               	movlw	1
  2643  001B9A  6E20               	movwf	___lwdiv@counter,c
  2644  001B9C  D004               	goto	l2712
  2645  001B9E                     l2710:
  2646  001B9E  90D8               	bcf	status,0,c
  2647  001BA0  361E               	rlcf	___lwdiv@divisor,f,c
  2648  001BA2  361F               	rlcf	___lwdiv@divisor+1,f,c
  2649  001BA4  2A20               	incf	___lwdiv@counter,f,c
  2650  001BA6                     l2712:
  2651  001BA6  AE1F               	btfss	___lwdiv@divisor+1,7,c
  2652  001BA8  D7FA               	goto	l2710
  2653  001BAA                     l2714:
  2654  001BAA  90D8               	bcf	status,0,c
  2655  001BAC  3621               	rlcf	___lwdiv@quotient,f,c
  2656  001BAE  3622               	rlcf	___lwdiv@quotient+1,f,c
  2657  001BB0  501E               	movf	___lwdiv@divisor,w,c
  2658  001BB2  5C1C               	subwf	___lwdiv@dividend,w,c
  2659  001BB4  501F               	movf	___lwdiv@divisor+1,w,c
  2660  001BB6  581D               	subwfb	___lwdiv@dividend+1,w,c
  2661  001BB8  A0D8               	btfss	status,0,c
  2662  001BBA  D005               	goto	l2722
  2663  001BBC  501E               	movf	___lwdiv@divisor,w,c
  2664  001BBE  5E1C               	subwf	___lwdiv@dividend,f,c
  2665  001BC0  501F               	movf	___lwdiv@divisor+1,w,c
  2666  001BC2  5A1D               	subwfb	___lwdiv@dividend+1,f,c
  2667  001BC4  8021               	bsf	___lwdiv@quotient,0,c
  2668  001BC6                     l2722:
  2669  001BC6  90D8               	bcf	status,0,c
  2670  001BC8  321F               	rrcf	___lwdiv@divisor+1,f,c
  2671  001BCA  321E               	rrcf	___lwdiv@divisor,f,c
  2672  001BCC  2E20               	decfsz	___lwdiv@counter,f,c
  2673  001BCE  D7ED               	goto	l2714
  2674  001BD0                     l849:
  2675  001BD0  C021  F01C         	movff	___lwdiv@quotient,?___lwdiv
  2676  001BD4  C022  F01D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2677  001BD8  0012               	return		;funcret
  2678  001BDA                     __end_of___lwdiv:
  2679                           	opt stack 0
  2680                           tblptru	equ	0xFF8
  2681                           tblptrh	equ	0xFF7
  2682                           tblptrl	equ	0xFF6
  2683                           tablat	equ	0xFF5
  2684                           prodh	equ	0xFF4
  2685                           prodl	equ	0xFF3
  2686                           intcon	equ	0xFF2
  2687                           indf0	equ	0xFEF
  2688                           postinc0	equ	0xFEE
  2689                           fsr0h	equ	0xFEA
  2690                           fsr0l	equ	0xFE9
  2691                           wreg	equ	0xFE8
  2692                           postdec1	equ	0xFE5
  2693                           plusw1	equ	0xFE3
  2694                           fsr1l	equ	0xFE1
  2695                           indf2	equ	0xFDF
  2696                           postinc2	equ	0xFDE
  2697                           plusw2	equ	0xFDB
  2698                           fsr2h	equ	0xFDA
  2699                           fsr2l	equ	0xFD9
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _Lcd_CharCP *****************
  2703 ;; Defined at:
  2704 ;;		line 116 in file "libs/HD44780.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  c               1    wreg     unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  c               1   23[COMRAM] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;Total ram usage:        3 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    6
  2725 ;; This function calls:
  2726 ;;		_Lcd_Delay5us
  2727 ;; This function is called by:
  2728 ;;		_Lcd_Text
  2729 ;;		_Lcd_Int
  2730 ;;		_ShowRawData
  2731 ;;		_Lcd_ConstText
  2732 ;;		_Lcd_WriteChar
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text15
  2737  001452                     __ptext15:
  2738                           	opt stack 0
  2739  001452                     _Lcd_CharCP:
  2740                           	opt stack 23
  2741                           
  2742                           ;incstack = 0
  2743                           ;Lcd_CharCP@c stored from wreg
  2744  001452  6E18               	movwf	Lcd_CharCP@c,c
  2745                           
  2746                           ;HD44780.c: 117: LATAbits.LA1 = 0; LATAbits.LA0 = 1;
  2747  001454  9283               	bcf	3971,1,c	;volatile
  2748  001456  8083               	bsf	3971,0,c	;volatile
  2749                           
  2750                           ;HD44780.c: 118: LATAbits.LA5 = (c & 0b10000000)>>7; LATAbits.LA4 = (c & 0b01000000)>>6;
  2751  001458  6A16               	clrf	??_Lcd_CharCP& (0+255),c
  2752  00145A  AE18               	btfss	Lcd_CharCP@c,7,c
  2753  00145C  D001               	bra	u2035
  2754  00145E  2A16               	incf	??_Lcd_CharCP& (0+255),f,c
  2755  001460                     u2035:
  2756  001460  0E01               	movlw	1
  2757  001462  1616               	andwf	??_Lcd_CharCP,f,c
  2758  001464  3A16               	swapf	??_Lcd_CharCP,f,c
  2759  001466  4616               	rlncf	??_Lcd_CharCP,f,c
  2760  001468  5083               	movf	3971,w,c	;volatile
  2761  00146A  1816               	xorwf	??_Lcd_CharCP,w,c
  2762  00146C  0BDF               	andlw	-33
  2763  00146E  1816               	xorwf	??_Lcd_CharCP,w,c
  2764  001470  6E83               	movwf	3971,c	;volatile
  2765  001472  C018  F016         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2766  001476  0E06               	movlw	6
  2767  001478  6E17               	movwf	(??_Lcd_CharCP+1)& (0+255),c
  2768  00147A                     u2045:
  2769  00147A  90D8               	bcf	status,0,c
  2770  00147C  3216               	rrcf	??_Lcd_CharCP,f,c
  2771  00147E  2E17               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
  2772  001480  D7FC               	goto	u2045
  2773  001482  0E01               	movlw	1
  2774  001484  1616               	andwf	??_Lcd_CharCP,f,c
  2775  001486  3A16               	swapf	??_Lcd_CharCP,f,c
  2776  001488  5083               	movf	3971,w,c	;volatile
  2777  00148A  1816               	xorwf	??_Lcd_CharCP,w,c
  2778  00148C  0BEF               	andlw	-17
  2779  00148E  1816               	xorwf	??_Lcd_CharCP,w,c
  2780  001490  6E83               	movwf	3971,c	;volatile
  2781                           
  2782                           ;HD44780.c: 119: LATAbits.LA3 = (c & 0b00100000)>>5; LATAbits.LA2 = (c & 0b00010000)>>4;
  2783  001492  C018  F016         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2784  001496  0E05               	movlw	5
  2785  001498  6E17               	movwf	(??_Lcd_CharCP+1)& (0+255),c
  2786  00149A                     u2055:
  2787  00149A  90D8               	bcf	status,0,c
  2788  00149C  3216               	rrcf	??_Lcd_CharCP,f,c
  2789  00149E  2E17               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
  2790  0014A0  D7FC               	goto	u2055
  2791  0014A2  0E01               	movlw	1
  2792  0014A4  1616               	andwf	??_Lcd_CharCP,f,c
  2793  0014A6  4616               	rlncf	??_Lcd_CharCP,f,c
  2794  0014A8  4616               	rlncf	??_Lcd_CharCP,f,c
  2795  0014AA  4616               	rlncf	??_Lcd_CharCP,f,c
  2796  0014AC  5083               	movf	3971,w,c	;volatile
  2797  0014AE  1816               	xorwf	??_Lcd_CharCP,w,c
  2798  0014B0  0BF7               	andlw	-9
  2799  0014B2  1816               	xorwf	??_Lcd_CharCP,w,c
  2800  0014B4  6E83               	movwf	3971,c	;volatile
  2801  0014B6  C018  F016         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2802  0014BA  3A16               	swapf	??_Lcd_CharCP,f,c
  2803  0014BC  0E0F               	movlw	15
  2804  0014BE  1616               	andwf	??_Lcd_CharCP,f,c
  2805  0014C0  0E01               	movlw	1
  2806  0014C2  1616               	andwf	??_Lcd_CharCP,f,c
  2807  0014C4  4616               	rlncf	??_Lcd_CharCP,f,c
  2808  0014C6  4616               	rlncf	??_Lcd_CharCP,f,c
  2809  0014C8  5083               	movf	3971,w,c	;volatile
  2810  0014CA  1816               	xorwf	??_Lcd_CharCP,w,c
  2811  0014CC  0BFB               	andlw	-5
  2812  0014CE  1816               	xorwf	??_Lcd_CharCP,w,c
  2813  0014D0  6E83               	movwf	3971,c	;volatile
  2814                           
  2815                           ;HD44780.c: 120: _delay(10);
  2816  0014D2  0E03               	movlw	3
  2817  0014D4                     u2847:
  2818  0014D4  2EE8               	decfsz	wreg,f,c
  2819  0014D6  D7FE               	bra	u2847
  2820  0014D8  F000               	nop	
  2821                           
  2822                           ;HD44780.c: 121: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  2823  0014DA  8283               	bsf	3971,1,c	;volatile
  2824  0014DC  EC94  F00E         	call	_Lcd_Delay5us	;wreg free
  2825  0014E0  9283               	bcf	3971,1,c	;volatile
  2826                           
  2827                           ;HD44780.c: 122: LATAbits.LA5 = (c & 0b00001000)>>3; LATAbits.LA4 = (c & 0b00000100)>>2;
  2828  0014E2  C018  F016         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2829  0014E6  90D8               	bcf	status,0,c
  2830  0014E8  3216               	rrcf	??_Lcd_CharCP,f,c
  2831  0014EA  90D8               	bcf	status,0,c
  2832  0014EC  3216               	rrcf	??_Lcd_CharCP,f,c
  2833  0014EE  90D8               	bcf	status,0,c
  2834  0014F0  3216               	rrcf	??_Lcd_CharCP,f,c
  2835  0014F2  0E01               	movlw	1
  2836  0014F4  1616               	andwf	??_Lcd_CharCP,f,c
  2837  0014F6  3A16               	swapf	??_Lcd_CharCP,f,c
  2838  0014F8  4616               	rlncf	??_Lcd_CharCP,f,c
  2839  0014FA  5083               	movf	3971,w,c	;volatile
  2840  0014FC  1816               	xorwf	??_Lcd_CharCP,w,c
  2841  0014FE  0BDF               	andlw	-33
  2842  001500  1816               	xorwf	??_Lcd_CharCP,w,c
  2843  001502  6E83               	movwf	3971,c	;volatile
  2844  001504  C018  F016         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2845  001508  90D8               	bcf	status,0,c
  2846  00150A  3216               	rrcf	??_Lcd_CharCP,f,c
  2847  00150C  90D8               	bcf	status,0,c
  2848  00150E  3216               	rrcf	??_Lcd_CharCP,f,c
  2849  001510  0E01               	movlw	1
  2850  001512  1616               	andwf	??_Lcd_CharCP,f,c
  2851  001514  3A16               	swapf	??_Lcd_CharCP,f,c
  2852  001516  5083               	movf	3971,w,c	;volatile
  2853  001518  1816               	xorwf	??_Lcd_CharCP,w,c
  2854  00151A  0BEF               	andlw	-17
  2855  00151C  1816               	xorwf	??_Lcd_CharCP,w,c
  2856  00151E  6E83               	movwf	3971,c	;volatile
  2857                           
  2858                           ;HD44780.c: 123: LATAbits.LA3 = (c & 0b00000010)>>1; LATAbits.LA2 = (c & 0b00000001);
  2859  001520  C018  F016         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2860  001524  90D8               	bcf	status,0,c
  2861  001526  3216               	rrcf	??_Lcd_CharCP,f,c
  2862  001528  0E01               	movlw	1
  2863  00152A  1616               	andwf	??_Lcd_CharCP,f,c
  2864  00152C  4616               	rlncf	??_Lcd_CharCP,f,c
  2865  00152E  4616               	rlncf	??_Lcd_CharCP,f,c
  2866  001530  4616               	rlncf	??_Lcd_CharCP,f,c
  2867  001532  5083               	movf	3971,w,c	;volatile
  2868  001534  1816               	xorwf	??_Lcd_CharCP,w,c
  2869  001536  0BF7               	andlw	-9
  2870  001538  1816               	xorwf	??_Lcd_CharCP,w,c
  2871  00153A  6E83               	movwf	3971,c	;volatile
  2872  00153C  C018  F016         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2873  001540  0E01               	movlw	1
  2874  001542  1616               	andwf	??_Lcd_CharCP,f,c
  2875  001544  4616               	rlncf	??_Lcd_CharCP,f,c
  2876  001546  4616               	rlncf	??_Lcd_CharCP,f,c
  2877  001548  5083               	movf	3971,w,c	;volatile
  2878  00154A  1816               	xorwf	??_Lcd_CharCP,w,c
  2879  00154C  0BFB               	andlw	-5
  2880  00154E  1816               	xorwf	??_Lcd_CharCP,w,c
  2881  001550  6E83               	movwf	3971,c	;volatile
  2882                           
  2883                           ;HD44780.c: 124: _delay(10);
  2884  001552  0E03               	movlw	3
  2885  001554                     u2857:
  2886  001554  2EE8               	decfsz	wreg,f,c
  2887  001556  D7FE               	bra	u2857
  2888  001558  F000               	nop	
  2889                           
  2890                           ;HD44780.c: 125: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  2891  00155A  8283               	bsf	3971,1,c	;volatile
  2892  00155C  EC94  F00E         	call	_Lcd_Delay5us	;wreg free
  2893  001560  9283               	bcf	3971,1,c	;volatile
  2894                           
  2895                           ;HD44780.c: 126: Lcd_Delay5us();
  2896  001562  EC94  F00E         	call	_Lcd_Delay5us	;wreg free
  2897  001566  0012               	return		;funcret
  2898  001568                     __end_of_Lcd_CharCP:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           indf0	equ	0xFEF
  2908                           postinc0	equ	0xFEE
  2909                           fsr0h	equ	0xFEA
  2910                           fsr0l	equ	0xFE9
  2911                           wreg	equ	0xFE8
  2912                           postdec1	equ	0xFE5
  2913                           plusw1	equ	0xFE3
  2914                           fsr1l	equ	0xFE1
  2915                           indf2	equ	0xFDF
  2916                           postinc2	equ	0xFDE
  2917                           plusw2	equ	0xFDB
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function _Lcd_Init *****************
  2923 ;; Defined at:
  2924 ;;		line 17 in file "libs/HD44780.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  data            1   24[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    7
  2945 ;; This function calls:
  2946 ;;		_Lcd_Command
  2947 ;;		_Lcd_Delay5500us
  2948 ;;		_Lcd_Delay5us
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text16
  2955  001782                     __ptext16:
  2956                           	opt stack 0
  2957  001782                     _Lcd_Init:
  2958                           	opt stack 23
  2959                           
  2960                           ;HD44780.c: 23: unsigned char data;
  2961                           ;HD44780.c: 24: TRISAbits.TRISA5 = 0; TRISAbits.TRISA4 = 0; TRISAbits.TRISA3 = 0; TRISAb
      +                          its.TRISA2 = 0; TRISAbits.TRISA1 = 0; TRISAbits.TRISA0 = 0;
  2962                           
  2963                           ;incstack = 0
  2964  001782  9A88               	bcf	3976,5,c	;volatile
  2965  001784  9888               	bcf	3976,4,c	;volatile
  2966  001786  9688               	bcf	3976,3,c	;volatile
  2967  001788  9488               	bcf	3976,2,c	;volatile
  2968  00178A  9288               	bcf	3976,1,c	;volatile
  2969  00178C  9088               	bcf	3976,0,c	;volatile
  2970                           
  2971                           ;HD44780.c: 25: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 0; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  2972  00178E  9A83               	bcf	3971,5,c	;volatile
  2973  001790  9883               	bcf	3971,4,c	;volatile
  2974  001792  9683               	bcf	3971,3,c	;volatile
  2975  001794  9483               	bcf	3971,2,c	;volatile
  2976  001796  9283               	bcf	3971,1,c	;volatile
  2977  001798  9083               	bcf	3971,0,c	;volatile
  2978                           
  2979                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  2980  00179A  EC86  F00E         	call	_Lcd_Delay5500us	;wreg free
  2981  00179E  EC86  F00E         	call	_Lcd_Delay5500us	;wreg free
  2982  0017A2  EC86  F00E         	call	_Lcd_Delay5500us	;wreg free
  2983                           
  2984                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  2985  0017A6  EC86  F00E         	call	_Lcd_Delay5500us	;wreg free
  2986  0017AA  EC86  F00E         	call	_Lcd_Delay5500us	;wreg free
  2987  0017AE  EC86  F00E         	call	_Lcd_Delay5500us	;wreg free
  2988                           
  2989                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  2990  0017B2  0E01               	movlw	1
  2991  0017B4  6E19               	movwf	Lcd_Init@data,c
  2992  0017B6                     l2856:
  2993  0017B6  0E03               	movlw	3
  2994  0017B8  6419               	cpfsgt	Lcd_Init@data,c
  2995  0017BA  D001               	goto	l114
  2996  0017BC  D018               	goto	l115
  2997  0017BE                     l114:
  2998                           
  2999                           ;HD44780.c: 29: {
  3000                           ;HD44780.c: 30: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3001  0017BE  9A83               	bcf	3971,5,c	;volatile
  3002  0017C0  9883               	bcf	3971,4,c	;volatile
  3003  0017C2  8683               	bsf	3971,3,c	;volatile
  3004  0017C4  8483               	bsf	3971,2,c	;volatile
  3005  0017C6  9283               	bcf	3971,1,c	;volatile
  3006  0017C8  9083               	bcf	3971,0,c	;volatile
  3007                           
  3008                           ;HD44780.c: 31: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 1; LATAbits.LA0 = 0;
  3009  0017CA  9A83               	bcf	3971,5,c	;volatile
  3010  0017CC  9883               	bcf	3971,4,c	;volatile
  3011  0017CE  8683               	bsf	3971,3,c	;volatile
  3012  0017D0  8483               	bsf	3971,2,c	;volatile
  3013  0017D2  8283               	bsf	3971,1,c	;volatile
  3014  0017D4  9083               	bcf	3971,0,c	;volatile
  3015                           
  3016                           ;HD44780.c: 32: Lcd_Delay5us();
  3017  0017D6  EC94  F00E         	call	_Lcd_Delay5us	;wreg free
  3018                           
  3019                           ;HD44780.c: 33: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3020  0017DA  9A83               	bcf	3971,5,c	;volatile
  3021  0017DC  9883               	bcf	3971,4,c	;volatile
  3022  0017DE  8683               	bsf	3971,3,c	;volatile
  3023  0017E0  8483               	bsf	3971,2,c	;volatile
  3024  0017E2  9283               	bcf	3971,1,c	;volatile
  3025  0017E4  9083               	bcf	3971,0,c	;volatile
  3026                           
  3027                           ;HD44780.c: 34: Lcd_Delay5500us();
  3028  0017E6  EC86  F00E         	call	_Lcd_Delay5500us	;wreg free
  3029  0017EA  2A19               	incf	Lcd_Init@data,f,c
  3030  0017EC  D7E4               	goto	l2856
  3031  0017EE                     l115:
  3032                           
  3033                           ;HD44780.c: 35: }
  3034                           ;HD44780.c: 36: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3035  0017EE  9A83               	bcf	3971,5,c	;volatile
  3036  0017F0  9883               	bcf	3971,4,c	;volatile
  3037  0017F2  8683               	bsf	3971,3,c	;volatile
  3038  0017F4  9483               	bcf	3971,2,c	;volatile
  3039  0017F6  9283               	bcf	3971,1,c	;volatile
  3040  0017F8  9083               	bcf	3971,0,c	;volatile
  3041                           
  3042                           ;HD44780.c: 37: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 1; LATAbits.LA0 = 0;
  3043  0017FA  9A83               	bcf	3971,5,c	;volatile
  3044  0017FC  9883               	bcf	3971,4,c	;volatile
  3045  0017FE  8683               	bsf	3971,3,c	;volatile
  3046  001800  9483               	bcf	3971,2,c	;volatile
  3047  001802  8283               	bsf	3971,1,c	;volatile
  3048  001804  9083               	bcf	3971,0,c	;volatile
  3049                           
  3050                           ;HD44780.c: 38: Lcd_Delay5us();
  3051  001806  EC94  F00E         	call	_Lcd_Delay5us	;wreg free
  3052                           
  3053                           ;HD44780.c: 39: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3054  00180A  9A83               	bcf	3971,5,c	;volatile
  3055  00180C  9883               	bcf	3971,4,c	;volatile
  3056  00180E  8683               	bsf	3971,3,c	;volatile
  3057  001810  9483               	bcf	3971,2,c	;volatile
  3058  001812  9283               	bcf	3971,1,c	;volatile
  3059  001814  9083               	bcf	3971,0,c	;volatile
  3060                           
  3061                           ;HD44780.c: 40: Lcd_Delay5500us();
  3062  001816  EC86  F00E         	call	_Lcd_Delay5500us	;wreg free
  3063                           
  3064                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  3065  00181A  0E28               	movlw	40
  3066  00181C  6E19               	movwf	Lcd_Init@data,c
  3067  00181E  5019               	movf	Lcd_Init@data,w,c
  3068  001820  ECB4  F00A         	call	_Lcd_Command
  3069                           
  3070                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  3071  001824  0E10               	movlw	16
  3072  001826  6E19               	movwf	Lcd_Init@data,c
  3073  001828  5019               	movf	Lcd_Init@data,w,c
  3074  00182A  ECB4  F00A         	call	_Lcd_Command
  3075                           
  3076                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  3077  00182E  0E01               	movlw	1
  3078  001830  6E19               	movwf	Lcd_Init@data,c
  3079  001832  5019               	movf	Lcd_Init@data,w,c
  3080  001834  ECB4  F00A         	call	_Lcd_Command
  3081                           
  3082                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  3083  001838  0E0F               	movlw	15
  3084  00183A  6E19               	movwf	Lcd_Init@data,c
  3085  00183C  5019               	movf	Lcd_Init@data,w,c
  3086  00183E  ECB4  F00A         	call	_Lcd_Command
  3087  001842  0012               	return		;funcret
  3088  001844                     __end_of_Lcd_Init:
  3089                           	opt stack 0
  3090                           tblptru	equ	0xFF8
  3091                           tblptrh	equ	0xFF7
  3092                           tblptrl	equ	0xFF6
  3093                           tablat	equ	0xFF5
  3094                           prodh	equ	0xFF4
  3095                           prodl	equ	0xFF3
  3096                           intcon	equ	0xFF2
  3097                           indf0	equ	0xFEF
  3098                           postinc0	equ	0xFEE
  3099                           fsr0h	equ	0xFEA
  3100                           fsr0l	equ	0xFE9
  3101                           wreg	equ	0xFE8
  3102                           postdec1	equ	0xFE5
  3103                           plusw1	equ	0xFE3
  3104                           fsr1l	equ	0xFE1
  3105                           indf2	equ	0xFDF
  3106                           postinc2	equ	0xFDE
  3107                           plusw2	equ	0xFDB
  3108                           fsr2h	equ	0xFDA
  3109                           fsr2l	equ	0xFD9
  3110                           status	equ	0xFD8
  3111                           
  3112 ;; *************** function _Lcd_Delay5500us *****************
  3113 ;; Defined at:
  3114 ;;		line 153 in file "libs/HD44780.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3132 ;;Total ram usage:        1 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    5
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_Lcd_Init
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text17
  3143  001D0C                     __ptext17:
  3144                           	opt stack 0
  3145  001D0C                     _Lcd_Delay5500us:
  3146                           	opt stack 24
  3147                           
  3148                           ;HD44780.c: 154: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  3149                           
  3150                           ;incstack = 0
  3151  001D0C  0E1D               	movlw	29
  3152  001D0E  6E16               	movwf	??_Lcd_Delay5500us& (0+255),c
  3153  001D10  0E91               	movlw	145
  3154  001D12                     u2867:
  3155  001D12  2EE8               	decfsz	wreg,f,c
  3156  001D14  D7FE               	bra	u2867
  3157  001D16  2E16               	decfsz	??_Lcd_Delay5500us& (0+255),f,c
  3158  001D18  D7FC               	bra	u2867
  3159  001D1A  F000               	nop	
  3160  001D1C  0012               	return		;funcret
  3161  001D1E                     __end_of_Lcd_Delay5500us:
  3162                           	opt stack 0
  3163                           tblptru	equ	0xFF8
  3164                           tblptrh	equ	0xFF7
  3165                           tblptrl	equ	0xFF6
  3166                           tablat	equ	0xFF5
  3167                           prodh	equ	0xFF4
  3168                           prodl	equ	0xFF3
  3169                           intcon	equ	0xFF2
  3170                           indf0	equ	0xFEF
  3171                           postinc0	equ	0xFEE
  3172                           fsr0h	equ	0xFEA
  3173                           fsr0l	equ	0xFE9
  3174                           wreg	equ	0xFE8
  3175                           postdec1	equ	0xFE5
  3176                           plusw1	equ	0xFE3
  3177                           fsr1l	equ	0xFE1
  3178                           indf2	equ	0xFDF
  3179                           postinc2	equ	0xFDE
  3180                           plusw2	equ	0xFDB
  3181                           fsr2h	equ	0xFDA
  3182                           fsr2l	equ	0xFD9
  3183                           status	equ	0xFD8
  3184                           
  3185 ;; *************** function _Lcd_Command *****************
  3186 ;; Defined at:
  3187 ;;		line 133 in file "libs/HD44780.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  command         1    wreg     unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  command         1   23[COMRAM] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    6
  3208 ;; This function calls:
  3209 ;;		_Lcd_Delay5us
  3210 ;; This function is called by:
  3211 ;;		_Lcd_Init
  3212 ;;		_Lcd_Text
  3213 ;;		_Lcd_Int
  3214 ;;		_Lcd_ConstText
  3215 ;;		_Lcd_WriteChar
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text18
  3220  001568                     __ptext18:
  3221                           	opt stack 0
  3222  001568                     _Lcd_Command:
  3223                           	opt stack 23
  3224                           
  3225                           ;incstack = 0
  3226                           ;Lcd_Command@command stored from wreg
  3227  001568  6E18               	movwf	Lcd_Command@command,c
  3228                           
  3229                           ;HD44780.c: 134: LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3230  00156A  9283               	bcf	3971,1,c	;volatile
  3231  00156C  9083               	bcf	3971,0,c	;volatile
  3232                           
  3233                           ;HD44780.c: 135: LATAbits.LA5 = (command & 0b10000000)>>7; LATAbits.LA4 = (command & 0b0
      +                          1000000)>>6;
  3234  00156E  6A16               	clrf	??_Lcd_Command& (0+255),c
  3235  001570  AE18               	btfss	Lcd_Command@command,7,c
  3236  001572  D001               	bra	u2065
  3237  001574  2A16               	incf	??_Lcd_Command& (0+255),f,c
  3238  001576                     u2065:
  3239  001576  0E01               	movlw	1
  3240  001578  1616               	andwf	??_Lcd_Command,f,c
  3241  00157A  3A16               	swapf	??_Lcd_Command,f,c
  3242  00157C  4616               	rlncf	??_Lcd_Command,f,c
  3243  00157E  5083               	movf	3971,w,c	;volatile
  3244  001580  1816               	xorwf	??_Lcd_Command,w,c
  3245  001582  0BDF               	andlw	-33
  3246  001584  1816               	xorwf	??_Lcd_Command,w,c
  3247  001586  6E83               	movwf	3971,c	;volatile
  3248  001588  C018  F016         	movff	Lcd_Command@command,??_Lcd_Command
  3249  00158C  0E06               	movlw	6
  3250  00158E  6E17               	movwf	(??_Lcd_Command+1)& (0+255),c
  3251  001590                     u2075:
  3252  001590  90D8               	bcf	status,0,c
  3253  001592  3216               	rrcf	??_Lcd_Command,f,c
  3254  001594  2E17               	decfsz	(??_Lcd_Command+1)& (0+255),f,c
  3255  001596  D7FC               	goto	u2075
  3256  001598  0E01               	movlw	1
  3257  00159A  1616               	andwf	??_Lcd_Command,f,c
  3258  00159C  3A16               	swapf	??_Lcd_Command,f,c
  3259  00159E  5083               	movf	3971,w,c	;volatile
  3260  0015A0  1816               	xorwf	??_Lcd_Command,w,c
  3261  0015A2  0BEF               	andlw	-17
  3262  0015A4  1816               	xorwf	??_Lcd_Command,w,c
  3263  0015A6  6E83               	movwf	3971,c	;volatile
  3264                           
  3265                           ;HD44780.c: 136: LATAbits.LA3 = (command & 0b00100000)>>5; LATAbits.LA2 = (command & 0b0
      +                          0010000)>>4;
  3266  0015A8  C018  F016         	movff	Lcd_Command@command,??_Lcd_Command
  3267  0015AC  0E05               	movlw	5
  3268  0015AE  6E17               	movwf	(??_Lcd_Command+1)& (0+255),c
  3269  0015B0                     u2085:
  3270  0015B0  90D8               	bcf	status,0,c
  3271  0015B2  3216               	rrcf	??_Lcd_Command,f,c
  3272  0015B4  2E17               	decfsz	(??_Lcd_Command+1)& (0+255),f,c
  3273  0015B6  D7FC               	goto	u2085
  3274  0015B8  0E01               	movlw	1
  3275  0015BA  1616               	andwf	??_Lcd_Command,f,c
  3276  0015BC  4616               	rlncf	??_Lcd_Command,f,c
  3277  0015BE  4616               	rlncf	??_Lcd_Command,f,c
  3278  0015C0  4616               	rlncf	??_Lcd_Command,f,c
  3279  0015C2  5083               	movf	3971,w,c	;volatile
  3280  0015C4  1816               	xorwf	??_Lcd_Command,w,c
  3281  0015C6  0BF7               	andlw	-9
  3282  0015C8  1816               	xorwf	??_Lcd_Command,w,c
  3283  0015CA  6E83               	movwf	3971,c	;volatile
  3284  0015CC  C018  F016         	movff	Lcd_Command@command,??_Lcd_Command
  3285  0015D0  3A16               	swapf	??_Lcd_Command,f,c
  3286  0015D2  0E0F               	movlw	15
  3287  0015D4  1616               	andwf	??_Lcd_Command,f,c
  3288  0015D6  0E01               	movlw	1
  3289  0015D8  1616               	andwf	??_Lcd_Command,f,c
  3290  0015DA  4616               	rlncf	??_Lcd_Command,f,c
  3291  0015DC  4616               	rlncf	??_Lcd_Command,f,c
  3292  0015DE  5083               	movf	3971,w,c	;volatile
  3293  0015E0  1816               	xorwf	??_Lcd_Command,w,c
  3294  0015E2  0BFB               	andlw	-5
  3295  0015E4  1816               	xorwf	??_Lcd_Command,w,c
  3296  0015E6  6E83               	movwf	3971,c	;volatile
  3297                           
  3298                           ;HD44780.c: 137: _delay(10);
  3299  0015E8  0E03               	movlw	3
  3300  0015EA                     u2877:
  3301  0015EA  2EE8               	decfsz	wreg,f,c
  3302  0015EC  D7FE               	bra	u2877
  3303  0015EE  F000               	nop	
  3304                           
  3305                           ;HD44780.c: 138: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  3306  0015F0  8283               	bsf	3971,1,c	;volatile
  3307  0015F2  EC94  F00E         	call	_Lcd_Delay5us	;wreg free
  3308  0015F6  9283               	bcf	3971,1,c	;volatile
  3309                           
  3310                           ;HD44780.c: 139: LATAbits.LA5 = (command & 0b00001000)>>3; LATAbits.LA4 = (command & 0b0
      +                          0000100)>>2;
  3311  0015F8  C018  F016         	movff	Lcd_Command@command,??_Lcd_Command
  3312  0015FC  90D8               	bcf	status,0,c
  3313  0015FE  3216               	rrcf	??_Lcd_Command,f,c
  3314  001600  90D8               	bcf	status,0,c
  3315  001602  3216               	rrcf	??_Lcd_Command,f,c
  3316  001604  90D8               	bcf	status,0,c
  3317  001606  3216               	rrcf	??_Lcd_Command,f,c
  3318  001608  0E01               	movlw	1
  3319  00160A  1616               	andwf	??_Lcd_Command,f,c
  3320  00160C  3A16               	swapf	??_Lcd_Command,f,c
  3321  00160E  4616               	rlncf	??_Lcd_Command,f,c
  3322  001610  5083               	movf	3971,w,c	;volatile
  3323  001612  1816               	xorwf	??_Lcd_Command,w,c
  3324  001614  0BDF               	andlw	-33
  3325  001616  1816               	xorwf	??_Lcd_Command,w,c
  3326  001618  6E83               	movwf	3971,c	;volatile
  3327  00161A  C018  F016         	movff	Lcd_Command@command,??_Lcd_Command
  3328  00161E  90D8               	bcf	status,0,c
  3329  001620  3216               	rrcf	??_Lcd_Command,f,c
  3330  001622  90D8               	bcf	status,0,c
  3331  001624  3216               	rrcf	??_Lcd_Command,f,c
  3332  001626  0E01               	movlw	1
  3333  001628  1616               	andwf	??_Lcd_Command,f,c
  3334  00162A  3A16               	swapf	??_Lcd_Command,f,c
  3335  00162C  5083               	movf	3971,w,c	;volatile
  3336  00162E  1816               	xorwf	??_Lcd_Command,w,c
  3337  001630  0BEF               	andlw	-17
  3338  001632  1816               	xorwf	??_Lcd_Command,w,c
  3339  001634  6E83               	movwf	3971,c	;volatile
  3340                           
  3341                           ;HD44780.c: 140: LATAbits.LA3 = (command & 0b00000010)>>1; LATAbits.LA2 = (command & 0b0
      +                          0000001);
  3342  001636  C018  F016         	movff	Lcd_Command@command,??_Lcd_Command
  3343  00163A  90D8               	bcf	status,0,c
  3344  00163C  3216               	rrcf	??_Lcd_Command,f,c
  3345  00163E  0E01               	movlw	1
  3346  001640  1616               	andwf	??_Lcd_Command,f,c
  3347  001642  4616               	rlncf	??_Lcd_Command,f,c
  3348  001644  4616               	rlncf	??_Lcd_Command,f,c
  3349  001646  4616               	rlncf	??_Lcd_Command,f,c
  3350  001648  5083               	movf	3971,w,c	;volatile
  3351  00164A  1816               	xorwf	??_Lcd_Command,w,c
  3352  00164C  0BF7               	andlw	-9
  3353  00164E  1816               	xorwf	??_Lcd_Command,w,c
  3354  001650  6E83               	movwf	3971,c	;volatile
  3355  001652  C018  F016         	movff	Lcd_Command@command,??_Lcd_Command
  3356  001656  0E01               	movlw	1
  3357  001658  1616               	andwf	??_Lcd_Command,f,c
  3358  00165A  4616               	rlncf	??_Lcd_Command,f,c
  3359  00165C  4616               	rlncf	??_Lcd_Command,f,c
  3360  00165E  5083               	movf	3971,w,c	;volatile
  3361  001660  1816               	xorwf	??_Lcd_Command,w,c
  3362  001662  0BFB               	andlw	-5
  3363  001664  1816               	xorwf	??_Lcd_Command,w,c
  3364  001666  6E83               	movwf	3971,c	;volatile
  3365                           
  3366                           ;HD44780.c: 141: _delay(10);
  3367  001668  0E03               	movlw	3
  3368  00166A                     u2887:
  3369  00166A  2EE8               	decfsz	wreg,f,c
  3370  00166C  D7FE               	bra	u2887
  3371  00166E  F000               	nop	
  3372                           
  3373                           ;HD44780.c: 142: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  3374  001670  8283               	bsf	3971,1,c	;volatile
  3375  001672  EC94  F00E         	call	_Lcd_Delay5us	;wreg free
  3376  001676  9283               	bcf	3971,1,c	;volatile
  3377                           
  3378                           ;HD44780.c: 144: Lcd_Delay5us();
  3379  001678  EC94  F00E         	call	_Lcd_Delay5us	;wreg free
  3380  00167C  0012               	return		;funcret
  3381  00167E                     __end_of_Lcd_Command:
  3382                           	opt stack 0
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           prodh	equ	0xFF4
  3388                           prodl	equ	0xFF3
  3389                           intcon	equ	0xFF2
  3390                           indf0	equ	0xFEF
  3391                           postinc0	equ	0xFEE
  3392                           fsr0h	equ	0xFEA
  3393                           fsr0l	equ	0xFE9
  3394                           wreg	equ	0xFE8
  3395                           postdec1	equ	0xFE5
  3396                           plusw1	equ	0xFE3
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           plusw2	equ	0xFDB
  3401                           fsr2h	equ	0xFDA
  3402                           fsr2l	equ	0xFD9
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _Lcd_Delay5us *****************
  3406 ;; Defined at:
  3407 ;;		line 150 in file "libs/HD44780.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    5
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_Lcd_Init
  3432 ;;		_Lcd_CharCP
  3433 ;;		_Lcd_Command
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text19
  3438  001D28                     __ptext19:
  3439                           	opt stack 0
  3440  001D28                     _Lcd_Delay5us:
  3441                           	opt stack 23
  3442                           
  3443                           ;HD44780.c: 151: _delay((unsigned long)((5)*(16000000/4000000.0)));
  3444                           
  3445                           ;incstack = 0
  3446  001D28  0E06               	movlw	6
  3447  001D2A                     u2897:
  3448  001D2A  2EE8               	decfsz	wreg,f,c
  3449  001D2C  D7FE               	bra	u2897
  3450  001D2E  D000               	nop2	
  3451  001D30  0012               	return		;funcret
  3452  001D32                     __end_of_Lcd_Delay5us:
  3453                           	opt stack 0
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           prodh	equ	0xFF4
  3459                           prodl	equ	0xFF3
  3460                           intcon	equ	0xFF2
  3461                           indf0	equ	0xFEF
  3462                           postinc0	equ	0xFEE
  3463                           fsr0h	equ	0xFEA
  3464                           fsr0l	equ	0xFE9
  3465                           wreg	equ	0xFE8
  3466                           postdec1	equ	0xFE5
  3467                           plusw1	equ	0xFE3
  3468                           fsr1l	equ	0xFE1
  3469                           indf2	equ	0xFDF
  3470                           postinc2	equ	0xFDE
  3471                           plusw2	equ	0xFDB
  3472                           fsr2h	equ	0xFDA
  3473                           fsr2l	equ	0xFD9
  3474                           status	equ	0xFD8
  3475                           
  3476 ;; *************** function _GetDay *****************
  3477 ;; Defined at:
  3478 ;;		line 128 in file "libs/gps.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  Date            2   35[COMRAM] PTR unsigned char 
  3481 ;;		 -> main@Date(7), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  y               2   47[COMRAM] int 
  3484 ;;  m               1   46[COMRAM] unsigned char 
  3485 ;;  d               1   45[COMRAM] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      char 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3497 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3498 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3499 ;;Total ram usage:       14 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    6
  3502 ;; This function calls:
  3503 ;;		___awdiv
  3504 ;;		___awmod
  3505 ;;		___wmul
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text20
  3512  0010A2                     __ptext20:
  3513                           	opt stack 0
  3514  0010A2                     _GetDay:
  3515                           	opt stack 24
  3516                           
  3517                           ;gps.c: 129: UINT8 d = (Date[0]-0x30)*10 + (Date[1]-0x30);
  3518                           
  3519                           ;incstack = 0
  3520  0010A2  EE20 F001          	lfsr	2,1
  3521  0010A6  5024               	movf	GetDay@Date,w,c
  3522  0010A8  26D9               	addwf	fsr2l,f,c
  3523  0010AA  5025               	movf	GetDay@Date+1,w,c
  3524  0010AC  22DA               	addwfc	fsr2h,f,c
  3525  0010AE  50DF               	movf	indf2,w,c
  3526  0010B0  6E26               	movwf	??_GetDay& (0+255),c
  3527  0010B2  C024  FFD9         	movff	GetDay@Date,fsr2l
  3528  0010B6  C025  FFDA         	movff	GetDay@Date+1,fsr2h
  3529  0010BA  50DF               	movf	indf2,w,c
  3530  0010BC  0FD0               	addlw	208
  3531  0010BE  0D0A               	mullw	10
  3532  0010C0  50F3               	movf	prodl,w,c
  3533  0010C2  2426               	addwf	??_GetDay,w,c
  3534  0010C4  0FD0               	addlw	208
  3535  0010C6  6E2E               	movwf	GetDay@d,c
  3536                           
  3537                           ;gps.c: 130: UINT8 m = (Date[2]-0x30)*10 + (Date[3]-0x30);
  3538  0010C8  EE20 F003          	lfsr	2,3
  3539  0010CC  5024               	movf	GetDay@Date,w,c
  3540  0010CE  26D9               	addwf	fsr2l,f,c
  3541  0010D0  5025               	movf	GetDay@Date+1,w,c
  3542  0010D2  22DA               	addwfc	fsr2h,f,c
  3543  0010D4  50DF               	movf	indf2,w,c
  3544  0010D6  6E26               	movwf	??_GetDay& (0+255),c
  3545  0010D8  EE20 F002          	lfsr	2,2
  3546  0010DC  5024               	movf	GetDay@Date,w,c
  3547  0010DE  26D9               	addwf	fsr2l,f,c
  3548  0010E0  5025               	movf	GetDay@Date+1,w,c
  3549  0010E2  22DA               	addwfc	fsr2h,f,c
  3550  0010E4  50DF               	movf	indf2,w,c
  3551  0010E6  0FD0               	addlw	208
  3552  0010E8  0D0A               	mullw	10
  3553  0010EA  50F3               	movf	prodl,w,c
  3554  0010EC  2426               	addwf	??_GetDay,w,c
  3555  0010EE  0FD0               	addlw	208
  3556  0010F0  6E2F               	movwf	GetDay@m,c
  3557                           
  3558                           ;gps.c: 131: INT y = (Date[4]-0x30)*10 + (Date[5]-0x30) + GLOBAL_CENTURY*100;
  3559  0010F2  EE20 F004          	lfsr	2,4
  3560  0010F6  5024               	movf	GetDay@Date,w,c
  3561  0010F8  26D9               	addwf	fsr2l,f,c
  3562  0010FA  5025               	movf	GetDay@Date+1,w,c
  3563  0010FC  22DA               	addwfc	fsr2h,f,c
  3564  0010FE  50DF               	movf	indf2,w,c
  3565  001100  6E26               	movwf	??_GetDay& (0+255),c
  3566  001102  0ED0               	movlw	208
  3567  001104  2426               	addwf	??_GetDay,w,c
  3568  001106  6E16               	movwf	___wmul@multiplier,c
  3569  001108  6A17               	clrf	___wmul@multiplier+1,c
  3570  00110A  0EFF               	movlw	255
  3571  00110C  2217               	addwfc	___wmul@multiplier+1,f,c
  3572  00110E  0E00               	movlw	0
  3573  001110  6E19               	movwf	___wmul@multiplicand+1,c
  3574  001112  0E0A               	movlw	10
  3575  001114  6E18               	movwf	___wmul@multiplicand,c
  3576  001116  EC35  F00E         	call	___wmul	;wreg free
  3577  00111A  EE20 F005          	lfsr	2,5
  3578  00111E  5024               	movf	GetDay@Date,w,c
  3579  001120  26D9               	addwf	fsr2l,f,c
  3580  001122  5025               	movf	GetDay@Date+1,w,c
  3581  001124  22DA               	addwfc	fsr2h,f,c
  3582  001126  50DF               	movf	indf2,w,c
  3583  001128  6E27               	movwf	(??_GetDay+1)& (0+255),c
  3584  00112A  6A28               	clrf	(??_GetDay+2)& (0+255),c
  3585  00112C  5016               	movf	?___wmul,w,c
  3586  00112E  2627               	addwf	??_GetDay+1,f,c
  3587  001130  5017               	movf	?___wmul+1,w,c
  3588  001132  2228               	addwfc	??_GetDay+2,f,c
  3589  001134  5046               	movf	_GLOBAL_CENTURY,w,c
  3590  001136  0D64               	mullw	100
  3591  001138  50F3               	movf	prodl,w,c
  3592  00113A  2627               	addwf	??_GetDay+1,f,c
  3593  00113C  50F4               	movf	prodh,w,c
  3594  00113E  2228               	addwfc	??_GetDay+2,f,c
  3595  001140  0ED0               	movlw	208
  3596  001142  2427               	addwf	??_GetDay+1,w,c
  3597  001144  6E30               	movwf	GetDay@y,c
  3598  001146  0EFF               	movlw	255
  3599  001148  2028               	addwfc	??_GetDay+2,w,c
  3600  00114A  6E31               	movwf	GetDay@y+1,c
  3601                           
  3602                           ;gps.c: 132: static int t[] = { 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 };
  3603                           ;gps.c: 133: y -= m < 3;
  3604  00114C  0E02               	movlw	2
  3605  00114E  642F               	cpfsgt	GetDay@m,c
  3606  001150  D001               	goto	u2381
  3607  001152  D002               	goto	u2380
  3608  001154                     u2381:
  3609  001154  0E01               	movlw	1
  3610  001156  D001               	goto	u2390
  3611  001158                     u2380:
  3612  001158  0E00               	movlw	0
  3613  00115A                     u2390:
  3614  00115A  5E30               	subwf	GetDay@y,f,c
  3615  00115C  0E00               	movlw	0
  3616  00115E  5A31               	subwfb	GetDay@y+1,f,c
  3617                           
  3618                           ;gps.c: 134: return ( y + y/4 - y/100 + y/400 + t[m-1] + d) % 7;
  3619  001160  0EFE               	movlw	254
  3620  001162  6E26               	movwf	??_GetDay& (0+255),c
  3621  001164  0EFF               	movlw	255
  3622  001166  6E27               	movwf	(??_GetDay+1)& (0+255),c
  3623  001168  502F               	movf	GetDay@m,w,c
  3624  00116A  6E28               	movwf	(??_GetDay+2)& (0+255),c
  3625  00116C  6A29               	clrf	(??_GetDay+3)& (0+255),c
  3626  00116E  90D8               	bcf	status,0,c
  3627  001170  3628               	rlcf	??_GetDay+2,f,c
  3628  001172  3629               	rlcf	??_GetDay+3,f,c
  3629  001174  5026               	movf	??_GetDay,w,c
  3630  001176  2628               	addwf	??_GetDay+2,f,c
  3631  001178  5027               	movf	??_GetDay+1,w,c
  3632  00117A  2229               	addwfc	??_GetDay+3,f,c
  3633  00117C  0E60               	movlw	low GetDay@t
  3634  00117E  2428               	addwf	??_GetDay+2,w,c
  3635  001180  6ED9               	movwf	fsr2l,c
  3636  001182  0E00               	movlw	high GetDay@t
  3637  001184  2029               	addwfc	??_GetDay+3,w,c
  3638  001186  6EDA               	movwf	fsr2h,c
  3639  001188  CFDE F02A          	movff	postinc2,??_GetDay+4
  3640  00118C  CFDD F02B          	movff	postdec2,??_GetDay+5
  3641  001190  0E00               	movlw	0
  3642  001192  6E19               	movwf	___awdiv@divisor+1,c
  3643  001194  0E04               	movlw	4
  3644  001196  6E18               	movwf	___awdiv@divisor,c
  3645  001198  C030  F016         	movff	GetDay@y,___awdiv@dividend
  3646  00119C  C031  F017         	movff	GetDay@y+1,___awdiv@dividend+1
  3647  0011A0  ECBA  F00C         	call	___awdiv	;wreg free
  3648  0011A4  C016  F02C         	movff	?___awdiv,??_GetDay+6
  3649  0011A8  C017  F02D         	movff	?___awdiv+1,??_GetDay+7
  3650  0011AC  0E01               	movlw	1
  3651  0011AE  6E19               	movwf	___awdiv@divisor+1,c
  3652  0011B0  0E90               	movlw	144
  3653  0011B2  6E18               	movwf	___awdiv@divisor,c
  3654  0011B4  C030  F016         	movff	GetDay@y,___awdiv@dividend
  3655  0011B8  C031  F017         	movff	GetDay@y+1,___awdiv@dividend+1
  3656  0011BC  ECBA  F00C         	call	___awdiv	;wreg free
  3657  0011C0  5016               	movf	?___awdiv,w,c
  3658  0011C2  262C               	addwf	??_GetDay+6,f,c
  3659  0011C4  5017               	movf	?___awdiv+1,w,c
  3660  0011C6  222D               	addwfc	??_GetDay+7,f,c
  3661  0011C8  502E               	movf	GetDay@d,w,c
  3662  0011CA  262C               	addwf	??_GetDay+6,f,c
  3663  0011CC  0E00               	movlw	0
  3664  0011CE  222D               	addwfc	??_GetDay+7,f,c
  3665  0011D0  0E00               	movlw	0
  3666  0011D2  6E19               	movwf	___awdiv@divisor+1,c
  3667  0011D4  0E64               	movlw	100
  3668  0011D6  6E18               	movwf	___awdiv@divisor,c
  3669  0011D8  C030  F016         	movff	GetDay@y,___awdiv@dividend
  3670  0011DC  C031  F017         	movff	GetDay@y+1,___awdiv@dividend+1
  3671  0011E0  ECBA  F00C         	call	___awdiv	;wreg free
  3672  0011E4  1E16               	comf	?___awdiv,f,c
  3673  0011E6  1E17               	comf	?___awdiv+1,f,c
  3674  0011E8  4A16               	infsnz	?___awdiv,f,c
  3675  0011EA  2A17               	incf	?___awdiv+1,f,c
  3676  0011EC  5016               	movf	?___awdiv,w,c
  3677  0011EE  262C               	addwf	??_GetDay+6,f,c
  3678  0011F0  5017               	movf	?___awdiv+1,w,c
  3679  0011F2  222D               	addwfc	??_GetDay+7,f,c
  3680  0011F4  502A               	movf	??_GetDay+4,w,c
  3681  0011F6  262C               	addwf	??_GetDay+6,f,c
  3682  0011F8  502B               	movf	??_GetDay+5,w,c
  3683  0011FA  222D               	addwfc	??_GetDay+7,f,c
  3684  0011FC  5030               	movf	GetDay@y,w,c
  3685  0011FE  242C               	addwf	??_GetDay+6,w,c
  3686  001200  6E1E               	movwf	___awmod@dividend,c
  3687  001202  5031               	movf	GetDay@y+1,w,c
  3688  001204  202D               	addwfc	??_GetDay+7,w,c
  3689  001206  6E1F               	movwf	___awmod@dividend+1,c
  3690  001208  0E00               	movlw	0
  3691  00120A  6E21               	movwf	___awmod@divisor+1,c
  3692  00120C  0E07               	movlw	7
  3693  00120E  6E20               	movwf	___awmod@divisor,c
  3694  001210  ECFC  F00C         	call	___awmod	;wreg free
  3695  001214  501E               	movf	?___awmod,w,c
  3696  001216  0012               	return	
  3697  001218                     __end_of_GetDay:
  3698                           	opt stack 0
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           intcon	equ	0xFF2
  3706                           indf0	equ	0xFEF
  3707                           postinc0	equ	0xFEE
  3708                           fsr0h	equ	0xFEA
  3709                           fsr0l	equ	0xFE9
  3710                           wreg	equ	0xFE8
  3711                           postdec1	equ	0xFE5
  3712                           plusw1	equ	0xFE3
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           postinc2	equ	0xFDE
  3716                           postdec2	equ	0xFDD
  3717                           plusw2	equ	0xFDB
  3718                           fsr2h	equ	0xFDA
  3719                           fsr2l	equ	0xFD9
  3720                           status	equ	0xFD8
  3721                           
  3722 ;; *************** function ___wmul *****************
  3723 ;; Defined at:
  3724 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  multiplier      2   21[COMRAM] unsigned int 
  3727 ;;  multiplicand    2   23[COMRAM] unsigned int 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  product         2   25[COMRAM] unsigned int 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  2   21[COMRAM] unsigned int 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0, prodl, prodh
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3742 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;Total ram usage:        6 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:    5
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_GetDay
  3750 ;;		_Lcd_Int
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text21
  3755  001C6A                     __ptext21:
  3756                           	opt stack 0
  3757  001C6A                     ___wmul:
  3758                           	opt stack 24
  3759                           
  3760                           ;incstack = 0
  3761  001C6A  5016               	movf	___wmul@multiplier,w,c
  3762  001C6C  0218               	mulwf	___wmul@multiplicand,c
  3763  001C6E  CFF3 F01A          	movff	prodl,___wmul@product
  3764  001C72  CFF4 F01B          	movff	prodh,___wmul@product+1
  3765  001C76  5016               	movf	___wmul@multiplier,w,c
  3766  001C78  0219               	mulwf	___wmul@multiplicand+1,c
  3767  001C7A  50F3               	movf	prodl,w,c
  3768  001C7C  261B               	addwf	___wmul@product+1,f,c
  3769  001C7E  5017               	movf	___wmul@multiplier+1,w,c
  3770  001C80  0218               	mulwf	___wmul@multiplicand,c
  3771  001C82  50F3               	movf	prodl,w,c
  3772  001C84  261B               	addwf	___wmul@product+1,f,c
  3773  001C86  C01A  F016         	movff	___wmul@product,?___wmul
  3774  001C8A  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  3775  001C8E  0012               	return	
  3776  001C90                     __end_of___wmul:
  3777                           	opt stack 0
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           prodh	equ	0xFF4
  3783                           prodl	equ	0xFF3
  3784                           intcon	equ	0xFF2
  3785                           indf0	equ	0xFEF
  3786                           postinc0	equ	0xFEE
  3787                           fsr0h	equ	0xFEA
  3788                           fsr0l	equ	0xFE9
  3789                           wreg	equ	0xFE8
  3790                           postdec1	equ	0xFE5
  3791                           plusw1	equ	0xFE3
  3792                           fsr1l	equ	0xFE1
  3793                           indf2	equ	0xFDF
  3794                           postinc2	equ	0xFDE
  3795                           postdec2	equ	0xFDD
  3796                           plusw2	equ	0xFDB
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function ___awmod *****************
  3802 ;; Defined at:
  3803 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  dividend        2   29[COMRAM] int 
  3806 ;;  divisor         2   31[COMRAM] int 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  sign            1   34[COMRAM] unsigned char 
  3809 ;;  counter         1   33[COMRAM] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  2   29[COMRAM] int 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;Total ram usage:        6 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    5
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_GetDay
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text22
  3834  0019F8                     __ptext22:
  3835                           	opt stack 0
  3836  0019F8                     ___awmod:
  3837                           	opt stack 24
  3838                           
  3839                           ;incstack = 0
  3840  0019F8  0E00               	movlw	0
  3841  0019FA  6E23               	movwf	___awmod@sign,c
  3842  0019FC  AE1F               	btfss	___awmod@dividend+1,7,c
  3843  0019FE  D006               	goto	l2676
  3844  001A00  6C1E               	negf	___awmod@dividend,c
  3845  001A02  1E1F               	comf	___awmod@dividend+1,f,c
  3846  001A04  B0D8               	btfsc	status,0,c
  3847  001A06  2A1F               	incf	___awmod@dividend+1,f,c
  3848  001A08  0E01               	movlw	1
  3849  001A0A  6E23               	movwf	___awmod@sign,c
  3850  001A0C                     l2676:
  3851  001A0C  AE21               	btfss	___awmod@divisor+1,7,c
  3852  001A0E  D004               	goto	l2680
  3853  001A10  6C20               	negf	___awmod@divisor,c
  3854  001A12  1E21               	comf	___awmod@divisor+1,f,c
  3855  001A14  B0D8               	btfsc	status,0,c
  3856  001A16  2A21               	incf	___awmod@divisor+1,f,c
  3857  001A18                     l2680:
  3858  001A18  5020               	movf	___awmod@divisor,w,c
  3859  001A1A  1021               	iorwf	___awmod@divisor+1,w,c
  3860  001A1C  B4D8               	btfsc	status,2,c
  3861  001A1E  D018               	goto	l2696
  3862  001A20  0E01               	movlw	1
  3863  001A22  6E22               	movwf	___awmod@counter,c
  3864  001A24  D004               	goto	l2686
  3865  001A26                     l2684:
  3866  001A26  90D8               	bcf	status,0,c
  3867  001A28  3620               	rlcf	___awmod@divisor,f,c
  3868  001A2A  3621               	rlcf	___awmod@divisor+1,f,c
  3869  001A2C  2A22               	incf	___awmod@counter,f,c
  3870  001A2E                     l2686:
  3871  001A2E  AE21               	btfss	___awmod@divisor+1,7,c
  3872  001A30  D7FA               	goto	l2684
  3873  001A32                     l2688:
  3874  001A32  5020               	movf	___awmod@divisor,w,c
  3875  001A34  5C1E               	subwf	___awmod@dividend,w,c
  3876  001A36  5021               	movf	___awmod@divisor+1,w,c
  3877  001A38  581F               	subwfb	___awmod@dividend+1,w,c
  3878  001A3A  A0D8               	btfss	status,0,c
  3879  001A3C  D004               	goto	l2692
  3880  001A3E  5020               	movf	___awmod@divisor,w,c
  3881  001A40  5E1E               	subwf	___awmod@dividend,f,c
  3882  001A42  5021               	movf	___awmod@divisor+1,w,c
  3883  001A44  5A1F               	subwfb	___awmod@dividend+1,f,c
  3884  001A46                     l2692:
  3885  001A46  90D8               	bcf	status,0,c
  3886  001A48  3221               	rrcf	___awmod@divisor+1,f,c
  3887  001A4A  3220               	rrcf	___awmod@divisor,f,c
  3888  001A4C  2E22               	decfsz	___awmod@counter,f,c
  3889  001A4E  D7F1               	goto	l2688
  3890  001A50                     l2696:
  3891  001A50  5023               	movf	___awmod@sign,w,c
  3892  001A52  B4D8               	btfsc	status,2,c
  3893  001A54  D004               	goto	l2700
  3894  001A56  6C1E               	negf	___awmod@dividend,c
  3895  001A58  1E1F               	comf	___awmod@dividend+1,f,c
  3896  001A5A  B0D8               	btfsc	status,0,c
  3897  001A5C  2A1F               	incf	___awmod@dividend+1,f,c
  3898  001A5E                     l2700:
  3899  001A5E  C01E  F01E         	movff	___awmod@dividend,?___awmod
  3900  001A62  C01F  F01F         	movff	___awmod@dividend+1,?___awmod+1
  3901  001A66  0012               	return	
  3902  001A68                     __end_of___awmod:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           tblptrh	equ	0xFF7
  3906                           tblptrl	equ	0xFF6
  3907                           tablat	equ	0xFF5
  3908                           prodh	equ	0xFF4
  3909                           prodl	equ	0xFF3
  3910                           intcon	equ	0xFF2
  3911                           indf0	equ	0xFEF
  3912                           postinc0	equ	0xFEE
  3913                           fsr0h	equ	0xFEA
  3914                           fsr0l	equ	0xFE9
  3915                           wreg	equ	0xFE8
  3916                           postdec1	equ	0xFE5
  3917                           plusw1	equ	0xFE3
  3918                           fsr1l	equ	0xFE1
  3919                           indf2	equ	0xFDF
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           plusw2	equ	0xFDB
  3923                           fsr2h	equ	0xFDA
  3924                           fsr2l	equ	0xFD9
  3925                           status	equ	0xFD8
  3926                           
  3927 ;; *************** function ___awdiv *****************
  3928 ;; Defined at:
  3929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  dividend        2   21[COMRAM] int 
  3932 ;;  divisor         2   23[COMRAM] int 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  quotient        2   27[COMRAM] int 
  3935 ;;  sign            1   26[COMRAM] unsigned char 
  3936 ;;  counter         1   25[COMRAM] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  2   21[COMRAM] int 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;Total ram usage:        8 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    5
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_GetDay
  3957 ;;		_Lcd_Int
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text23
  3962  001974                     __ptext23:
  3963                           	opt stack 0
  3964  001974                     ___awdiv:
  3965                           	opt stack 24
  3966                           
  3967                           ;incstack = 0
  3968  001974  0E00               	movlw	0
  3969  001976  6E1B               	movwf	___awdiv@sign,c
  3970  001978  AE19               	btfss	___awdiv@divisor+1,7,c
  3971  00197A  D006               	goto	l2632
  3972  00197C  6C18               	negf	___awdiv@divisor,c
  3973  00197E  1E19               	comf	___awdiv@divisor+1,f,c
  3974  001980  B0D8               	btfsc	status,0,c
  3975  001982  2A19               	incf	___awdiv@divisor+1,f,c
  3976  001984  0E01               	movlw	1
  3977  001986  6E1B               	movwf	___awdiv@sign,c
  3978  001988                     l2632:
  3979  001988  AE17               	btfss	___awdiv@dividend+1,7,c
  3980  00198A  D006               	goto	l2638
  3981  00198C  6C16               	negf	___awdiv@dividend,c
  3982  00198E  1E17               	comf	___awdiv@dividend+1,f,c
  3983  001990  B0D8               	btfsc	status,0,c
  3984  001992  2A17               	incf	___awdiv@dividend+1,f,c
  3985  001994  0E01               	movlw	1
  3986  001996  1A1B               	xorwf	___awdiv@sign,f,c
  3987  001998                     l2638:
  3988  001998  0E00               	movlw	0
  3989  00199A  6E1D               	movwf	___awdiv@quotient+1,c
  3990  00199C  0E00               	movlw	0
  3991  00199E  6E1C               	movwf	___awdiv@quotient,c
  3992  0019A0  5018               	movf	___awdiv@divisor,w,c
  3993  0019A2  1019               	iorwf	___awdiv@divisor+1,w,c
  3994  0019A4  B4D8               	btfsc	status,2,c
  3995  0019A6  D01C               	goto	l2660
  3996  0019A8  0E01               	movlw	1
  3997  0019AA  6E1A               	movwf	___awdiv@counter,c
  3998  0019AC  D004               	goto	l2646
  3999  0019AE                     l2644:
  4000  0019AE  90D8               	bcf	status,0,c
  4001  0019B0  3618               	rlcf	___awdiv@divisor,f,c
  4002  0019B2  3619               	rlcf	___awdiv@divisor+1,f,c
  4003  0019B4  2A1A               	incf	___awdiv@counter,f,c
  4004  0019B6                     l2646:
  4005  0019B6  AE19               	btfss	___awdiv@divisor+1,7,c
  4006  0019B8  D7FA               	goto	l2644
  4007  0019BA                     l2648:
  4008  0019BA  90D8               	bcf	status,0,c
  4009  0019BC  361C               	rlcf	___awdiv@quotient,f,c
  4010  0019BE  361D               	rlcf	___awdiv@quotient+1,f,c
  4011  0019C0  5018               	movf	___awdiv@divisor,w,c
  4012  0019C2  5C16               	subwf	___awdiv@dividend,w,c
  4013  0019C4  5019               	movf	___awdiv@divisor+1,w,c
  4014  0019C6  5817               	subwfb	___awdiv@dividend+1,w,c
  4015  0019C8  A0D8               	btfss	status,0,c
  4016  0019CA  D005               	goto	l2656
  4017  0019CC  5018               	movf	___awdiv@divisor,w,c
  4018  0019CE  5E16               	subwf	___awdiv@dividend,f,c
  4019  0019D0  5019               	movf	___awdiv@divisor+1,w,c
  4020  0019D2  5A17               	subwfb	___awdiv@dividend+1,f,c
  4021  0019D4  801C               	bsf	___awdiv@quotient,0,c
  4022  0019D6                     l2656:
  4023  0019D6  90D8               	bcf	status,0,c
  4024  0019D8  3219               	rrcf	___awdiv@divisor+1,f,c
  4025  0019DA  3218               	rrcf	___awdiv@divisor,f,c
  4026  0019DC  2E1A               	decfsz	___awdiv@counter,f,c
  4027  0019DE  D7ED               	goto	l2648
  4028  0019E0                     l2660:
  4029  0019E0  501B               	movf	___awdiv@sign,w,c
  4030  0019E2  B4D8               	btfsc	status,2,c
  4031  0019E4  D004               	goto	l2664
  4032  0019E6  6C1C               	negf	___awdiv@quotient,c
  4033  0019E8  1E1D               	comf	___awdiv@quotient+1,f,c
  4034  0019EA  B0D8               	btfsc	status,0,c
  4035  0019EC  2A1D               	incf	___awdiv@quotient+1,f,c
  4036  0019EE                     l2664:
  4037  0019EE  C01C  F016         	movff	___awdiv@quotient,?___awdiv
  4038  0019F2  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
  4039  0019F6  0012               	return	
  4040  0019F8                     __end_of___awdiv:
  4041                           	opt stack 0
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           prodh	equ	0xFF4
  4047                           prodl	equ	0xFF3
  4048                           intcon	equ	0xFF2
  4049                           indf0	equ	0xFEF
  4050                           postinc0	equ	0xFEE
  4051                           fsr0h	equ	0xFEA
  4052                           fsr0l	equ	0xFE9
  4053                           wreg	equ	0xFE8
  4054                           postdec1	equ	0xFE5
  4055                           plusw1	equ	0xFE3
  4056                           fsr1l	equ	0xFE1
  4057                           indf2	equ	0xFDF
  4058                           postinc2	equ	0xFDE
  4059                           postdec2	equ	0xFDD
  4060                           plusw2	equ	0xFDB
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _INTERRUPT_InterruptManager *****************
  4066 ;; Defined at:
  4067 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4084 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4085 ;;Total ram usage:       14 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    4
  4088 ;; This function calls:
  4089 ;;		_TMR0_ISR
  4090 ;; This function is called by:
  4091 ;;		Interrupt level 2
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	intcode
  4096  000008                     __pintcode:
  4097                           	opt stack 0
  4098  000008                     _INTERRUPT_InterruptManager:
  4099                           	opt stack 23
  4100                           
  4101                           ;incstack = 0
  4102  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4103  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  4104  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4105  000012  CFE9 F00A          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4106  000016  CFEA F00B          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4107  00001A  CFE1 F00C          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4108  00001E  CFE2 F00D          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4109  000022  CFD9 F00E          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4110  000026  CFDA F00F          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4111  00002A  CFF3 F010          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4112  00002E  CFF4 F011          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4113  000032  CFF6 F012          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4114  000036  CFF7 F013          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4115  00003A  CFF8 F014          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4116  00003E  CFF5 F015          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4117                           
  4118                           ;interrupt_manager.c: 60: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  4119  000042  010E               	movlb	14	; () banked
  4120  000044  ABC2               	btfss	194,5,b	;volatile
  4121  000046  D004               	goto	i2l245
  4122                           
  4123                           ; BSR set to: 14
  4124  000048  010E               	movlb	14	; () banked
  4125  00004A  BBCA               	btfsc	202,5,b	;volatile
  4126                           
  4127                           ; BSR set to: 14
  4128                           ;interrupt_manager.c: 61: {
  4129                           ;interrupt_manager.c: 62: TMR0_ISR();
  4130  00004C  EC0D  F00E         	call	_TMR0_ISR	;wreg free
  4131  000050                     i2l245:
  4132  000050  C015  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4133  000054  C014  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4134  000058  C013  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4135  00005C  C012  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4136  000060  C011  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4137  000064  C010  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4138  000068  C00F  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4139  00006C  C00E  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4140  000070  C00D  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4141  000074  C00C  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4142  000078  C00B  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4143  00007C  C00A  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4144  000080  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4145  000084  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4146  000088  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4147  00008A  0011               	retfie		f
  4148  00008C                     __end_of_INTERRUPT_InterruptManager:
  4149                           	opt stack 0
  4150                           pclatu	equ	0xFFB
  4151                           pclath	equ	0xFFA
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           intcon	equ	0xFF2
  4159                           indf0	equ	0xFEF
  4160                           postinc0	equ	0xFEE
  4161                           fsr0h	equ	0xFEA
  4162                           fsr0l	equ	0xFE9
  4163                           wreg	equ	0xFE8
  4164                           postdec1	equ	0xFE5
  4165                           plusw1	equ	0xFE3
  4166                           fsr1h	equ	0xFE2
  4167                           fsr1l	equ	0xFE1
  4168                           indf2	equ	0xFDF
  4169                           postinc2	equ	0xFDE
  4170                           postdec2	equ	0xFDD
  4171                           plusw2	equ	0xFDB
  4172                           fsr2h	equ	0xFDA
  4173                           fsr2l	equ	0xFD9
  4174                           status	equ	0xFD8
  4175                           
  4176 ;; *************** function _TMR0_ISR *****************
  4177 ;; Defined at:
  4178 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    3
  4199 ;; This function calls:
  4200 ;;		_TMR0_CallBack
  4201 ;; This function is called by:
  4202 ;;		_INTERRUPT_InterruptManager
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text25
  4207  001C1A                     __ptext25:
  4208                           	opt stack 0
  4209  001C1A                     _TMR0_ISR:
  4210                           	opt stack 23
  4211                           
  4212                           ;tmr0.c: 138: static volatile uint16_t CountCallBack = 0;
  4213                           ;tmr0.c: 141: PIR0bits.TMR0IF = 0;
  4214                           
  4215                           ;incstack = 0
  4216  001C1A  010E               	movlb	14	; () banked
  4217  001C1C  9BCA               	bcf	202,5,b	;volatile
  4218                           
  4219                           ; BSR set to: 14
  4220                           ;tmr0.c: 143: TMR0H = timer0ReloadVal16bit >> 8;
  4221  001C1E  503A               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  4222  001C20  6ED4               	movwf	4052,c	;volatile
  4223                           
  4224                           ; BSR set to: 14
  4225                           ;tmr0.c: 144: TMR0L = (uint8_t) timer0ReloadVal16bit;
  4226  001C22  C039  FFD3         	movff	_timer0ReloadVal16bit,4051	;volatile
  4227                           
  4228                           ; BSR set to: 14
  4229                           ;tmr0.c: 147: if (++CountCallBack >= 10)
  4230  001C26  4A35               	infsnz	TMR0_ISR@CountCallBack,f,c	;volatile
  4231  001C28  2A36               	incf	TMR0_ISR@CountCallBack+1,f,c	;volatile
  4232  001C2A  5036               	movf	TMR0_ISR@CountCallBack+1,w,c	;volatile
  4233  001C2C  E104               	bnz	i2u177_40
  4234  001C2E  0E0A               	movlw	10
  4235  001C30  5C35               	subwf	TMR0_ISR@CountCallBack,w,c	;volatile
  4236  001C32  A0D8               	btfss	status,0,c
  4237  001C34  0012               	return	
  4238  001C36                     i2u177_40:
  4239                           
  4240                           ; BSR set to: 14
  4241                           ;tmr0.c: 148: {
  4242                           ;tmr0.c: 150: TMR0_CallBack();
  4243  001C36  EC58  F00E         	call	_TMR0_CallBack	;wreg free
  4244                           
  4245                           ;tmr0.c: 153: CountCallBack = 0;
  4246  001C3A  0E00               	movlw	0
  4247  001C3C  6E36               	movwf	TMR0_ISR@CountCallBack+1,c	;volatile
  4248  001C3E  0E00               	movlw	0
  4249  001C40  6E35               	movwf	TMR0_ISR@CountCallBack,c	;volatile
  4250  001C42  0012               	return	
  4251  001C44                     __end_of_TMR0_ISR:
  4252                           	opt stack 0
  4253                           pclatu	equ	0xFFB
  4254                           pclath	equ	0xFFA
  4255                           tblptru	equ	0xFF8
  4256                           tblptrh	equ	0xFF7
  4257                           tblptrl	equ	0xFF6
  4258                           tablat	equ	0xFF5
  4259                           prodh	equ	0xFF4
  4260                           prodl	equ	0xFF3
  4261                           intcon	equ	0xFF2
  4262                           indf0	equ	0xFEF
  4263                           postinc0	equ	0xFEE
  4264                           fsr0h	equ	0xFEA
  4265                           fsr0l	equ	0xFE9
  4266                           wreg	equ	0xFE8
  4267                           postdec1	equ	0xFE5
  4268                           plusw1	equ	0xFE3
  4269                           fsr1h	equ	0xFE2
  4270                           fsr1l	equ	0xFE1
  4271                           indf2	equ	0xFDF
  4272                           postinc2	equ	0xFDE
  4273                           postdec2	equ	0xFDD
  4274                           plusw2	equ	0xFDB
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           status	equ	0xFD8
  4278                           
  4279 ;; *************** function _TMR0_CallBack *****************
  4280 ;; Defined at:
  4281 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    2
  4302 ;; This function calls:
  4303 ;;		Absolute function
  4304 ;;		_TMR0_DefaultInterruptHandler
  4305 ;;		_Timer0_10ms
  4306 ;; This function is called by:
  4307 ;;		_TMR0_ISR
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text26
  4312  001CB0                     __ptext26:
  4313                           	opt stack 0
  4314  001CB0                     _TMR0_CallBack:
  4315                           	opt stack 23
  4316                           
  4317                           ;tmr0.c: 163: if(TMR0_InterruptHandler)
  4318                           
  4319                           ;incstack = 0
  4320  001CB0  5037               	movf	_TMR0_InterruptHandler,w,c
  4321  001CB2  1038               	iorwf	_TMR0_InterruptHandler+1,w,c
  4322  001CB4  B4D8               	btfsc	status,2,c
  4323  001CB6  0012               	return	
  4324                           
  4325                           ;tmr0.c: 164: {
  4326                           ;tmr0.c: 165: TMR0_InterruptHandler();
  4327  001CB8  D801               	call	i2u126_48
  4328  001CBA  0012               	return	
  4329  001CBC                     i2u126_48:
  4330  001CBC  0005               	push	
  4331  001CBE  6EFA               	movwf	pclath,c
  4332  001CC0  5037               	movf	_TMR0_InterruptHandler,w,c
  4333  001CC2  6EFD               	movwf	tosl,c
  4334  001CC4  5038               	movf	_TMR0_InterruptHandler+1,w,c
  4335  001CC6  6EFE               	movwf	tosh,c
  4336  001CC8  6AFF               	clrf	tosu,c
  4337  001CCA  50FA               	movf	pclath,w,c
  4338  001CCC  0012               	return		;indir
  4339  001CCE                     __end_of_TMR0_CallBack:
  4340                           	opt stack 0
  4341                           tosu	equ	0xFFF
  4342                           tosh	equ	0xFFE
  4343                           tosl	equ	0xFFD
  4344                           pclatu	equ	0xFFB
  4345                           pclath	equ	0xFFA
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           indf0	equ	0xFEF
  4354                           postinc0	equ	0xFEE
  4355                           fsr0h	equ	0xFEA
  4356                           fsr0l	equ	0xFE9
  4357                           wreg	equ	0xFE8
  4358                           postdec1	equ	0xFE5
  4359                           plusw1	equ	0xFE3
  4360                           fsr1h	equ	0xFE2
  4361                           fsr1l	equ	0xFE1
  4362                           indf2	equ	0xFDF
  4363                           postinc2	equ	0xFDE
  4364                           postdec2	equ	0xFDD
  4365                           plusw2	equ	0xFDB
  4366                           fsr2h	equ	0xFDA
  4367                           fsr2l	equ	0xFD9
  4368                           status	equ	0xFD8
  4369                           
  4370 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4371 ;; Defined at:
  4372 ;;		line 173 in file "mcc_generated_files/tmr0.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		None
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_TMR0_Initialize
  4396 ;;		_TMR0_CallBack
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text27
  4401  001D42                     __ptext27:
  4402                           	opt stack 0
  4403  001D42                     _TMR0_DefaultInterruptHandler:
  4404                           	opt stack 24
  4405                           
  4406                           ;incstack = 0
  4407  001D42  0012               	return		;funcret
  4408  001D44                     __end_of_TMR0_DefaultInterruptHandler:
  4409                           	opt stack 0
  4410                           tosu	equ	0xFFF
  4411                           tosh	equ	0xFFE
  4412                           tosl	equ	0xFFD
  4413                           pclatu	equ	0xFFB
  4414                           pclath	equ	0xFFA
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           prodh	equ	0xFF4
  4420                           prodl	equ	0xFF3
  4421                           intcon	equ	0xFF2
  4422                           indf0	equ	0xFEF
  4423                           postinc0	equ	0xFEE
  4424                           fsr0h	equ	0xFEA
  4425                           fsr0l	equ	0xFE9
  4426                           wreg	equ	0xFE8
  4427                           postdec1	equ	0xFE5
  4428                           plusw1	equ	0xFE3
  4429                           fsr1h	equ	0xFE2
  4430                           fsr1l	equ	0xFE1
  4431                           indf2	equ	0xFDF
  4432                           postinc2	equ	0xFDE
  4433                           postdec2	equ	0xFDD
  4434                           plusw2	equ	0xFDB
  4435                           fsr2h	equ	0xFDA
  4436                           fsr2l	equ	0xFD9
  4437                           status	equ	0xFD8
  4438                           
  4439 ;; *************** function _Timer0_10ms *****************
  4440 ;; Defined at:
  4441 ;;		line 3 in file "libs/projMain.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, status,2, status,0, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;Total ram usage:        1 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    1
  4462 ;; This function calls:
  4463 ;;		i2___awmod
  4464 ;; This function is called by:
  4465 ;;		_main
  4466 ;;		_TMR0_CallBack
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text28
  4471  001AD8                     __ptext28:
  4472                           	opt stack 0
  4473  001AD8                     _Timer0_10ms:
  4474                           	opt stack 23
  4475                           
  4476                           ;projMain.c: 5: GLOBAL_I++;
  4477                           
  4478                           ;incstack = 0
  4479  001AD8  4A3D               	infsnz	_GLOBAL_I,f,c
  4480  001ADA  2A3E               	incf	_GLOBAL_I+1,f,c
  4481                           
  4482                           ;projMain.c: 6: if (GLOBAL_I%10==0) {
  4483  001ADC  C03D  F001         	movff	_GLOBAL_I,i2___awmod@dividend
  4484  001AE0  C03E  F002         	movff	_GLOBAL_I+1,i2___awmod@dividend+1
  4485  001AE4  0E00               	movlw	0
  4486  001AE6  6E04               	movwf	i2___awmod@divisor+1,c
  4487  001AE8  0E0A               	movlw	10
  4488  001AEA  6E03               	movwf	i2___awmod@divisor,c
  4489  001AEC  EC34  F00D         	call	i2___awmod	;wreg free
  4490  001AF0  5001               	movf	?i2___awmod,w,c
  4491  001AF2  1002               	iorwf	?i2___awmod+1,w,c
  4492  001AF4  A4D8               	btfss	status,2,c
  4493  001AF6  D002               	goto	i2l1866
  4494                           
  4495                           ;projMain.c: 7: LATB ^= 0xFF;
  4496  001AF8  0EFF               	movlw	255
  4497  001AFA  1A84               	xorwf	3972,f,c	;volatile
  4498  001AFC                     i2l1866:
  4499                           
  4500                           ;projMain.c: 8: }
  4501                           ;projMain.c: 9: if (GLOBAL_I%5000==0) {
  4502  001AFC  C03D  F001         	movff	_GLOBAL_I,i2___awmod@dividend
  4503  001B00  C03E  F002         	movff	_GLOBAL_I+1,i2___awmod@dividend+1
  4504  001B04  0E13               	movlw	19
  4505  001B06  6E04               	movwf	i2___awmod@divisor+1,c
  4506  001B08  0E88               	movlw	136
  4507  001B0A  6E03               	movwf	i2___awmod@divisor,c
  4508  001B0C  EC34  F00D         	call	i2___awmod	;wreg free
  4509  001B10  5001               	movf	?i2___awmod,w,c
  4510  001B12  1002               	iorwf	?i2___awmod+1,w,c
  4511  001B14  A4D8               	btfss	status,2,c
  4512  001B16  0012               	return	
  4513                           
  4514                           ;projMain.c: 10: LATCbits.LC1 = !LATCbits.LC1;
  4515  001B18  B285               	btfsc	3973,1,c	;volatile
  4516  001B1A  D003               	goto	i2u112_40
  4517  001B1C  6A07               	clrf	??_Timer0_10ms& (0+255),c
  4518  001B1E  2A07               	incf	??_Timer0_10ms& (0+255),f,c
  4519  001B20  D001               	goto	i2u113_48
  4520  001B22                     i2u112_40:
  4521  001B22  6A07               	clrf	??_Timer0_10ms& (0+255),c
  4522  001B24                     i2u113_48:
  4523  001B24  4607               	rlncf	??_Timer0_10ms,f,c
  4524  001B26  5085               	movf	3973,w,c	;volatile
  4525  001B28  1807               	xorwf	??_Timer0_10ms,w,c
  4526  001B2A  0BFD               	andlw	-3
  4527  001B2C  1807               	xorwf	??_Timer0_10ms,w,c
  4528  001B2E  6E85               	movwf	3973,c	;volatile
  4529  001B30  0012               	return	
  4530  001B32                     __end_of_Timer0_10ms:
  4531                           	opt stack 0
  4532                           tosu	equ	0xFFF
  4533                           tosh	equ	0xFFE
  4534                           tosl	equ	0xFFD
  4535                           pclatu	equ	0xFFB
  4536                           pclath	equ	0xFFA
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           intcon	equ	0xFF2
  4544                           indf0	equ	0xFEF
  4545                           postinc0	equ	0xFEE
  4546                           fsr0h	equ	0xFEA
  4547                           fsr0l	equ	0xFE9
  4548                           wreg	equ	0xFE8
  4549                           postdec1	equ	0xFE5
  4550                           plusw1	equ	0xFE3
  4551                           fsr1h	equ	0xFE2
  4552                           fsr1l	equ	0xFE1
  4553                           indf2	equ	0xFDF
  4554                           postinc2	equ	0xFDE
  4555                           postdec2	equ	0xFDD
  4556                           plusw2	equ	0xFDB
  4557                           fsr2h	equ	0xFDA
  4558                           fsr2l	equ	0xFD9
  4559                           status	equ	0xFD8
  4560                           
  4561 ;; *************** function i2___awmod *****************
  4562 ;; Defined at:
  4563 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  dividend        2    0[COMRAM] int 
  4566 ;;  divisor         2    2[COMRAM] int 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  __awmod         1    5[COMRAM] unsigned char 
  4569 ;;  __awmod         1    4[COMRAM] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  2    0[COMRAM] int 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4582 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4583 ;;Total ram usage:        6 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_Timer0_10ms
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text29
  4593  001A68                     __ptext29:
  4594                           	opt stack 0
  4595  001A68                     i2___awmod:
  4596                           	opt stack 23
  4597                           
  4598                           ;incstack = 0
  4599  001A68  0E00               	movlw	0
  4600  001A6A  6E06               	movwf	i2___awmod@sign,c
  4601  001A6C  AE02               	btfss	i2___awmod@dividend+1,7,c
  4602  001A6E  D006               	goto	i2l1826
  4603  001A70  6C01               	negf	i2___awmod@dividend,c
  4604  001A72  1E02               	comf	i2___awmod@dividend+1,f,c
  4605  001A74  B0D8               	btfsc	status,0,c
  4606  001A76  2A02               	incf	i2___awmod@dividend+1,f,c
  4607  001A78  0E01               	movlw	1
  4608  001A7A  6E06               	movwf	i2___awmod@sign,c
  4609  001A7C                     i2l1826:
  4610  001A7C  AE04               	btfss	i2___awmod@divisor+1,7,c
  4611  001A7E  D004               	goto	i2l1830
  4612  001A80  6C03               	negf	i2___awmod@divisor,c
  4613  001A82  1E04               	comf	i2___awmod@divisor+1,f,c
  4614  001A84  B0D8               	btfsc	status,0,c
  4615  001A86  2A04               	incf	i2___awmod@divisor+1,f,c
  4616  001A88                     i2l1830:
  4617  001A88  5003               	movf	i2___awmod@divisor,w,c
  4618  001A8A  1004               	iorwf	i2___awmod@divisor+1,w,c
  4619  001A8C  B4D8               	btfsc	status,2,c
  4620  001A8E  D018               	goto	i2l1846
  4621  001A90  0E01               	movlw	1
  4622  001A92  6E05               	movwf	i2___awmod@counter,c
  4623  001A94  D004               	goto	i2l1836
  4624  001A96                     i2l1834:
  4625  001A96  90D8               	bcf	status,0,c
  4626  001A98  3603               	rlcf	i2___awmod@divisor,f,c
  4627  001A9A  3604               	rlcf	i2___awmod@divisor+1,f,c
  4628  001A9C  2A05               	incf	i2___awmod@counter,f,c
  4629  001A9E                     i2l1836:
  4630  001A9E  AE04               	btfss	i2___awmod@divisor+1,7,c
  4631  001AA0  D7FA               	goto	i2l1834
  4632  001AA2                     i2l1838:
  4633  001AA2  5003               	movf	i2___awmod@divisor,w,c
  4634  001AA4  5C01               	subwf	i2___awmod@dividend,w,c
  4635  001AA6  5004               	movf	i2___awmod@divisor+1,w,c
  4636  001AA8  5802               	subwfb	i2___awmod@dividend+1,w,c
  4637  001AAA  A0D8               	btfss	status,0,c
  4638  001AAC  D004               	goto	i2l1842
  4639  001AAE  5003               	movf	i2___awmod@divisor,w,c
  4640  001AB0  5E01               	subwf	i2___awmod@dividend,f,c
  4641  001AB2  5004               	movf	i2___awmod@divisor+1,w,c
  4642  001AB4  5A02               	subwfb	i2___awmod@dividend+1,f,c
  4643  001AB6                     i2l1842:
  4644  001AB6  90D8               	bcf	status,0,c
  4645  001AB8  3204               	rrcf	i2___awmod@divisor+1,f,c
  4646  001ABA  3203               	rrcf	i2___awmod@divisor,f,c
  4647  001ABC  2E05               	decfsz	i2___awmod@counter,f,c
  4648  001ABE  D7F1               	goto	i2l1838
  4649  001AC0                     i2l1846:
  4650  001AC0  5006               	movf	i2___awmod@sign,w,c
  4651  001AC2  B4D8               	btfsc	status,2,c
  4652  001AC4  D004               	goto	i2l1850
  4653  001AC6  6C01               	negf	i2___awmod@dividend,c
  4654  001AC8  1E02               	comf	i2___awmod@dividend+1,f,c
  4655  001ACA  B0D8               	btfsc	status,0,c
  4656  001ACC  2A02               	incf	i2___awmod@dividend+1,f,c
  4657  001ACE                     i2l1850:
  4658  001ACE  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4659  001AD2  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4660  001AD6  0012               	return	
  4661  001AD8                     __end_ofi2___awmod:
  4662                           	opt stack 0
  4663                           tosu	equ	0xFFF
  4664                           tosh	equ	0xFFE
  4665                           tosl	equ	0xFFD
  4666                           pclatu	equ	0xFFB
  4667                           pclath	equ	0xFFA
  4668                           tblptru	equ	0xFF8
  4669                           tblptrh	equ	0xFF7
  4670                           tblptrl	equ	0xFF6
  4671                           tablat	equ	0xFF5
  4672                           prodh	equ	0xFF4
  4673                           prodl	equ	0xFF3
  4674                           intcon	equ	0xFF2
  4675                           indf0	equ	0xFEF
  4676                           postinc0	equ	0xFEE
  4677                           fsr0h	equ	0xFEA
  4678                           fsr0l	equ	0xFE9
  4679                           wreg	equ	0xFE8
  4680                           postdec1	equ	0xFE5
  4681                           plusw1	equ	0xFE3
  4682                           fsr1h	equ	0xFE2
  4683                           fsr1l	equ	0xFE1
  4684                           indf2	equ	0xFDF
  4685                           postinc2	equ	0xFDE
  4686                           postdec2	equ	0xFDD
  4687                           plusw2	equ	0xFDB
  4688                           fsr2h	equ	0xFDA
  4689                           fsr2l	equ	0xFD9
  4690                           status	equ	0xFD8
  4691                           tosu	equ	0xFFF
  4692                           tosh	equ	0xFFE
  4693                           tosl	equ	0xFFD
  4694                           pclatu	equ	0xFFB
  4695                           pclath	equ	0xFFA
  4696                           tblptru	equ	0xFF8
  4697                           tblptrh	equ	0xFF7
  4698                           tblptrl	equ	0xFF6
  4699                           tablat	equ	0xFF5
  4700                           prodh	equ	0xFF4
  4701                           prodl	equ	0xFF3
  4702                           intcon	equ	0xFF2
  4703                           indf0	equ	0xFEF
  4704                           postinc0	equ	0xFEE
  4705                           fsr0h	equ	0xFEA
  4706                           fsr0l	equ	0xFE9
  4707                           wreg	equ	0xFE8
  4708                           postdec1	equ	0xFE5
  4709                           plusw1	equ	0xFE3
  4710                           fsr1h	equ	0xFE2
  4711                           fsr1l	equ	0xFE1
  4712                           indf2	equ	0xFDF
  4713                           postinc2	equ	0xFDE
  4714                           postdec2	equ	0xFDD
  4715                           plusw2	equ	0xFDB
  4716                           fsr2h	equ	0xFDA
  4717                           fsr2l	equ	0xFD9
  4718                           status	equ	0xFD8
  4719                           
  4720                           	psect	text30
  4721  000000                     __ptext30:
  4722                           	opt stack 0
  4723                           tosu	equ	0xFFF
  4724                           tosh	equ	0xFFE
  4725                           tosl	equ	0xFFD
  4726                           pclatu	equ	0xFFB
  4727                           pclath	equ	0xFFA
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           prodh	equ	0xFF4
  4733                           prodl	equ	0xFF3
  4734                           intcon	equ	0xFF2
  4735                           indf0	equ	0xFEF
  4736                           postinc0	equ	0xFEE
  4737                           fsr0h	equ	0xFEA
  4738                           fsr0l	equ	0xFE9
  4739                           wreg	equ	0xFE8
  4740                           postdec1	equ	0xFE5
  4741                           plusw1	equ	0xFE3
  4742                           fsr1h	equ	0xFE2
  4743                           fsr1l	equ	0xFE1
  4744                           indf2	equ	0xFDF
  4745                           postinc2	equ	0xFDE
  4746                           postdec2	equ	0xFDD
  4747                           plusw2	equ	0xFDB
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8
  4751                           
  4752                           	psect	rparam
  4753  0000                     tosu	equ	0xFFF
  4754                           tosh	equ	0xFFE
  4755                           tosl	equ	0xFFD
  4756                           pclatu	equ	0xFFB
  4757                           pclath	equ	0xFFA
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           prodh	equ	0xFF4
  4763                           prodl	equ	0xFF3
  4764                           intcon	equ	0xFF2
  4765                           indf0	equ	0xFEF
  4766                           postinc0	equ	0xFEE
  4767                           fsr0h	equ	0xFEA
  4768                           fsr0l	equ	0xFE9
  4769                           wreg	equ	0xFE8
  4770                           postdec1	equ	0xFE5
  4771                           plusw1	equ	0xFE3
  4772                           fsr1h	equ	0xFE2
  4773                           fsr1l	equ	0xFE1
  4774                           indf2	equ	0xFDF
  4775                           postinc2	equ	0xFDE
  4776                           postdec2	equ	0xFDD
  4777                           plusw2	equ	0xFDB
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8
  4781                           
  4782                           	psect	temp
  4783  000047                     btemp:
  4784                           	opt stack 0
  4785  000047                     	ds	1
  4786  0000                     int$flags	set	btemp
  4787                           tosu	equ	0xFFF
  4788                           tosh	equ	0xFFE
  4789                           tosl	equ	0xFFD
  4790                           pclatu	equ	0xFFB
  4791                           pclath	equ	0xFFA
  4792                           tblptru	equ	0xFF8
  4793                           tblptrh	equ	0xFF7
  4794                           tblptrl	equ	0xFF6
  4795                           tablat	equ	0xFF5
  4796                           prodh	equ	0xFF4
  4797                           prodl	equ	0xFF3
  4798                           intcon	equ	0xFF2
  4799                           indf0	equ	0xFEF
  4800                           postinc0	equ	0xFEE
  4801                           fsr0h	equ	0xFEA
  4802                           fsr0l	equ	0xFE9
  4803                           wreg	equ	0xFE8
  4804                           postdec1	equ	0xFE5
  4805                           plusw1	equ	0xFE3
  4806                           fsr1h	equ	0xFE2
  4807                           fsr1l	equ	0xFE1
  4808                           indf2	equ	0xFDF
  4809                           postinc2	equ	0xFDE
  4810                           postdec2	equ	0xFDD
  4811                           plusw2	equ	0xFDB
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    14
    Data        39
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      70
    BANK0           160     18      49
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_10ms(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_10ms(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    Lcd_Text@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 
		 -> main@Time(BANK0[7]), main@Date(BANK0[7]), 

    ValidateDateTime@Time	PTR unsigned char  size(2) Largest target is 7
		 -> main@Time(BANK0[7]), 

    ValidateDateTime@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    GetDay@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    ReadGPSDateTime@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    ReadGPSDateTime@Time	PTR unsigned char  size(2) Largest target is 7
		 -> main@Time(BANK0[7]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Int
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_Int->_GetDay
    ___lwdiv->___wmul
    _Lcd_Init->_Lcd_Command
    _GetDay->___awmod
    ___awmod->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_CallBack->_Timer0_10ms
    _Timer0_10ms->i2___awmod

Critical Paths under _main in BANK0

    _main->_Lcd_Int

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   12058
                                              4 BANK0     14    14      0
                 _EUSART1_Initialize
                             _GetDay
                           _Lcd_Init
                            _Lcd_Int
                           _Lcd_Text
                    _ReadGPSDateTime
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                   _ValidateDateTime
 ---------------------------------------------------------------------------------
 (1) _ValidateDateTime                                     6     2      4     942
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     245
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             23 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadGPSDateTime                                     20    16      4     749
                                             21 COMRAM    20    16      4
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             5     2      3    1839
                                             24 COMRAM     5     2      3
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Int                                              7     4      3    4038
                                             49 COMRAM     3     0      3
                                              0 BANK0      4     4      0
                             _GetDay (ARG)
                         _Lcd_CharCP
                        _Lcd_Command
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             27 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_CharCP                                           3     3      0     248
                                             21 COMRAM     3     3      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     452
                                             24 COMRAM     1     1      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Delay5500us                                      1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0     248
                                             21 COMRAM     3     3      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDay                                              14    12      2    3275
                                             35 COMRAM    14    12      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     833
                                             29 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1345
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     400
                                              7 COMRAM    14    14      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     400
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0     400
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                        _Timer0_10ms *
 ---------------------------------------------------------------------------------
 (7) _Timer0_10ms                                          1     1      0     400
                                              6 COMRAM     1     1      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (8) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
   _GetDay
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___wmul
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Int
     _GetDay (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___wmul
     _Lcd_CharCP (ARG)
       _Lcd_Delay5us
     _Lcd_Command (ARG)
       _Lcd_Delay5us
     ___awdiv (ARG)
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5us
   _ReadGPSDateTime
     _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   _TMR0_SetInterruptHandler
   _ValidateDateTime

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _Timer0_10ms *
         i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      31       5       30.6%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      46       1       74.5%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      77       6        0.0%
DATA                 0      0      77       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Jun 28 12:13:10 2017

                          Lcd_Int@tempVal 0081                   __end_of_ReadGPSDateTime 1338  
                             __CFG_CP$OFF 000000                                        l53 1336  
                            ___awdiv@sign 001B                       ___wmul@multiplicand 0018  
                             __CFG_LVP$ON 000000                                       l114 17BE  
                                     l115 17EE                                       l217 1CFA  
                                     l321 1C62                                       l849 1BD0  
                                     _GIE 007F97                              __CFG_CPD$OFF 000000  
                            ___awmod@sign 0023                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                     __end_of_Lcd_Command 167E                              __CFG_ZCD$OFF 000000  
                                    l3112 1376                                      l3136 143E  
                                    l2522 1D08                                      l2700 1A5E  
                                    l2710 1B9E                                      l2632 1988  
                                    l2712 1BA6                                      l2722 1BC6  
                                    l2714 1BAA                                      l2802 0F96  
                                    l2644 19AE                                      l2660 19E0  
                                    l2812 0FD8                                      l2646 19B6  
                                    l2638 1998                                      l2910 18E4  
                                    l2750 128A                                      l2822 1016  
                                    l2806 0F9A                                      l2664 19EE  
                                    l2656 19D6                                      l2648 19BA  
                                    l2680 1A18                                      l2912 18EA  
                                    l2920 18FE                                      l2736 1248  
                                    l2832 1058                                      l2816 0FDC  
                                    l2914 18F0                                      l2922 1918  
                                    l2770 1312                                      l2842 109A  
                                    l2826 101A                                      l2692 1A46  
                                    l2684 1A26                                      l2676 1A0C  
                                    l2924 1920                                      l2916 18F6  
                                    l2764 12C2                                      l2756 12AA  
                                    l2772 1318                                      l2836 105C  
                                    l2686 1A2E                                      l2766 12E8  
                                    l2774 1320                                      l2846 109E  
                                    l2688 1A32                                      l2696 1A50  
                                    l2856 17B6                                      l2952 1698  
                                    l2928 194A                                      l2768 130E  
                                    l2792 0F54                                      l2970 1702  
                                    l2954 169E                                      l2962 16B4  
                                    l2956 16A4                                      l2964 16D0  
                                    l2796 0F58                                      l2958 16AA  
                                    l2976 174E                                      STR_1 0F16  
                                    STR_2 0F15                                      STR_3 0F12  
                                    STR_4 0F0F                                      u2035 1460  
                                    u2045 147A                                      _LATA 000F83  
                                    _LATB 000F84                                      u2055 149A  
                                    _LATC 000F85                                      u2065 1576  
                                    u2090 18DC                                      u2075 1590  
                                    u2085 15B0                                      u2270 122A  
                                    u2380 1158                                      u2540 1942  
                                    u2381 1154                                      u2390 115A  
                                    u2550 196C                                      u2801 135C  
                                    u2547 1938                                      u2811 136E  
                                    u2557 1962                                      u2837 131A  
                                    u2847 14D4                                      u2857 1554  
                                    u2867 1D12                                      u2877 15EA  
                                    u2887 166A                                      u2897 1D2A  
                                    _PLLR 0076D8                                      _WPUA 000F10  
                                    _WPUB 000F18                                      _WPUC 000F20  
                                    _WPUE 000F2D                         ??_Lcd_Delay5500us 0016  
                           __CFG_FCMEN$ON 000000                                      _main 1338  
                           ?_EUSART1_Read 0001                           _TMR0_StartTimer 1D3A  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                      __end_of_Lcd_Delay5us 1D32  
                                    fsr2l 000FD9                                      btemp 0047  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0092                           __end_of_Lcd_Int 1782  
                           __CFG_CSWEN$ON 000000                              ___param_bank 000000  
                              _Lcd_CharCP 1452                             __CFG_SCANE$ON 000000  
                 __end_of_TMR0_Initialize 1C1A            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 0026             __end_of_OSCILLATOR_Initialize 1C6A  
                                   ?_main 0001                           __end_of___awdiv 19F8  
                           __CFG_WDTE$OFF 000000                           __end_of___awmod 1A68  
                         ___awdiv@divisor 0018                            __CFG_DEBUG$OFF 000000  
                         __end_of___lwdiv 1BDA                                     i2l245 0050  
                         ___awdiv@counter 001A                                     _OSCEN 000EDC  
                                   _TMR0H 000FD4                                     _TMR0L 000FD3  
                                   _TRISA 000F88                                     _TRISB 000F89  
                                   _TRISC 000F8A         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0016  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 1C44  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
               __size_of_ValidateDateTime 0188                        __CFG_MCLRE$EXTMCLR 000000  
                        _GLOBAL_USARTSIZE 003B                                     pclath 000FFA  
                                   tablat 000FF5                            ??_EUSART1_Read 0016  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   status 000FD8                        __size_ofi2___awmod 0070  
                        __end_of_Lcd_Init 1844                          __end_of_Lcd_Text 1974  
                         __initialization 1B32                __end_of_EUSART1_Initialize 1CFA  
                            __end_of_main 1452                          ?_ReadGPSDateTime 0016  
             ?_INTERRUPT_InterruptManager 0001                               _Lcd_Command 1568  
                                  ??_main 0035                             __activetblptr 000003  
                 __end_of_TMR0_StartTimer 1D3E                          ___awdiv@dividend 0016  
                                  _ANSELA 000F11                                    _ANSELB 000F19  
                                  _ANSELC 000F21                                    _T0CON0 000FD5  
                                  _T0CON1 000FD6                                    _RC1REG 000F99  
                                  _RC1STA 000F9D                                    _ODCONA 000F0F  
                                  _ODCONB 000F17                                    _ODCONC 000F1F  
                                  _RC6PPS 000EFD                            __CFG_WDTCCS$SC 000000  
                                  i2l1830 1A88                                    i2l1850 1ACE  
                                  i2l1842 1AB6                                    i2l1834 1A96  
                                  i2l1826 1A7C                                    i2l1836 1A9E  
                                  i2l1838 1AA2                                    i2l1846 1AC0  
                                  i2l1866 1AFC                                    _OSCFRQ 000EDE  
                               ??_Lcd_Int 0035                                    _TX1REG 000F9A  
                          Lcd_Text@buffer 001A                                    _TX1STA 000F9E  
                           ??_Timer0_10ms 0007                                    _GetDay 10A2  
                          __CFG_PWRTE$OFF 000000                            __CFG_XINST$OFF 000000  
                             ?_Lcd_CharCP 0001                                    ___wmul 1C6A  
                               ??___awdiv 001A                            __CFG_STVREN$ON 000000  
                               ??___awmod 0022                                 ??___lwdiv 0020  
                        ?_TMR0_Initialize 0001                                    clear_0 1B78  
                        ___awdiv@quotient 001C                           ___awmod@divisor 0020  
                         ___awmod@counter 0022                              __pdataCOMRAM 003F  
                       __end_ofi2___awmod 1AD8                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                     __end_of_TMR0_CallBack 1CCE  
                          i2___awmod@sign 0006  TMR0_SetInterruptHandler@InterruptHandler 0016  
                   __size_of_Lcd_Delay5us 000A             __size_of_INTERRUPT_Initialize 0004  
                      Lcd_Command@command 0018                         _SYSTEM_Initialize 1CCE  
                              __accesstop 0060                   __end_of__initialization 1B7E  
                         __CFG_FEXTOSC$HS 000000                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                            __pidataBANK0 1C90                       __end_of_Timer0_10ms 1B32  
                     ??_SYSTEM_Initialize 001A                                 ?_TMR0_ISR 0001  
                    __end_of_EUSART1_Read 1D0C                              _Lcd_Delay5us 1D28  
                         _Lcd_Delay5500us 1D0C                     TMR0_ISR@CountCallBack 0035  
                               ?_Lcd_Init 0001                                 ?_Lcd_Text 0019  
                        ?_TMR0_StartTimer 0001                 __end_of_SYSTEM_Initialize 1CE4  
                        _ValidateDateTime 0F1A                       __size_of_Lcd_CharCP 0116  
                                 ?_GetDay 0024          __end_of_TMR0_SetInterruptHandler 1D28  
                                 ?___wmul 0016                                ??_TMR0_ISR 0008  
                         __CFG_PPS1WAY$ON 000000                                   GetDay@d 002E  
                                 GetDay@m 002F                                   GetDay@t 0060  
                                 GetDay@y 0030                                   _SP1BRGH 000F9C  
                                 _SP1BRGL 000F9B                                   _OSCCON1 000ED8  
                                 _OSCCON3 000EDA                                   _OSCTUNE 000EDD  
                              ??_Lcd_Init 0019                                   _PPSLOCK 000EA0  
                              ??_Lcd_Text 001C                                   _Lcd_Int 167E  
                    ValidateDateTime@Date 0016                               _Timer0_10ms 1AD8  
                    ValidateDateTime@Item 001B                      ValidateDateTime@Time 0018  
                         __size_of_GetDay 0176                                   __Hparam 0000  
                                 __Lparam 0000                                   ___awdiv 1974  
                                 ___awmod 19F8                           __size_of___wmul 0026  
                                 ___lwdiv 1B88                   __end_of_Lcd_Delay5500us 1D1E  
                            __psmallconst 0F00                                   __pcinit 1B32  
                                 __ramtop 0F00                              ?_Lcd_Command 0001  
                                 __ptext0 1338                                   __ptext1 0F1A  
                                 __ptext2 1CCE                                   __ptext3 1BDA  
                                 __ptext4 1D3A                                   __ptext5 1D1E  
                                 __ptext6 1844                                   __ptext7 1C44  
                                 __ptext8 1D3E                                   __ptext9 1CE4  
                   _OSCILLATOR_Initialize 1C44                          ___awmod@dividend 001E  
                      _EUSART1_Initialize 1CE4                  ??_PIN_MANAGER_Initialize 0016  
              __size_of_SYSTEM_Initialize 0016                      end_of_initialization 1B7E  
                     ?_EUSART1_Initialize 0001                              ??_Lcd_CharCP 0016  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                   __size_of_EUSART1_Read 0012                                 Lcd_Text@x 0019  
                               Lcd_Text@y 001C                                main@F11311 0078  
                              main@F11309 003F                      ??_EUSART1_Initialize 0016  
                   __CFG_WDTCPS$WDTCPS_31 000000                  _TMR0_SetInterruptHandler 1D1E  
                __size_of_ReadGPSDateTime 0120                                 _TRISAbits 000F88  
                          _GLOBAL_CENTURY 0046                                 i2___awmod 1A68  
                      __end_of_Lcd_CharCP 1568                              _EUSART1_Read 1CFA  
                          __end_of_GetDay 1218                      _timer0ReloadVal16bit 0039  
            __end_of_INTERRUPT_Initialize 1D42                  __end_of_ValidateDateTime 10A2  
                        ?_Lcd_Delay5500us 0001                            __end_of___wmul 1C90  
                           __pidataCOMRAM 1D32                         __size_of_TMR0_ISR 002A  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 1B32  
                __size_of_TMR0_Initialize 0040           __size_of_PIN_MANAGER_Initialize 009C  
           __end_ofReadGPSDateTime@F11318 0F08                                ?i2___awmod 0001  
                       __size_of_Lcd_Init 00C2                         __size_of_Lcd_Text 0094  
                                ??_GetDay 0026                          __CFG_LPBOREN$OFF 000000  
                                ??___wmul 001A                    __size_of_TMR0_CallBack 001E  
                             __pdataBANK0 0060                      __size_of_Lcd_Command 0116  
                ReadGPSDateTime@StartCode 001E                               __pbssCOMRAM 0035  
                           __pcstackBANK0 007F                         ??_ReadGPSDateTime 001A  
                                ?_Lcd_Int 0032                              ?_Timer0_10ms 0001  
                   _TMR0_InterruptHandler 0037                  __size_of_TMR0_StartTimer 0004  
                        ___lwdiv@dividend 001C                    _PIN_MANAGER_Initialize 1844  
                               __pintcode 0008                                  ?___awdiv 0016  
                                ?___awmod 001E                                  ?___lwdiv 001C  
                       ReadGPSTime@F11310 0F08              ??_INTERRUPT_InterruptManager 0008  
                                _BAUD1CON 000F9F                               __smallconst 0F00  
                        ___lwdiv@quotient 0021                               ??i2___awmod 0005  
                           _TMR0_CallBack 1CB0                                  _GLOBAL_I 003D  
                    _INTERRUPT_Initialize 1D3E                         ??_TMR0_Initialize 0018  
                        ReadGPSDateTime@i 0026                            ___wmul@product 001A  
                                _LATAbits 000F83                                  _LATCbits 000F85  
                                _PIE0bits 000EC2                       __CFG_BORV$VBOR_2P45 000000  
                                i2u112_40 1B22                                  i2u113_48 1B24  
                                i2u126_48 1CBC       __size_of_INTERRUPT_InterruptManager 0084  
              ??_TMR0_SetInterruptHandler 0018                                  _PIR0bits 000ECA  
                                i2u177_40 1C36                                  _PIR3bits 000ECD  
                                Lcd_Int@x 0032                                  Lcd_Int@y 007F  
                     ReadGPSDateTime@Date 0016                 __end_ofReadGPSTime@F11310 0F0F  
                     ReadGPSDateTime@Time 0018                                  _TMR0_ISR 1C1A  
                            Lcd_Init@data 0019                         ___wmul@multiplier 0016  
                                _Lcd_Init 1782                            ?_TMR0_CallBack 0001  
                                _Lcd_Text 18E0                                 copy_data0 1B46  
                               copy_data1 1B66                     ?_INTERRUPT_Initialize 0001  
                      i2___awmod@dividend 0001                          __size_of_Lcd_Int 0104  
                            Lcd_Text@data 001D                                  __Hrparam 0000  
                 __CFG_RSTOSC$EXTOSC_4PLL 000000                                  __Lrparam 0000  
                 ReadGPSDateTime@TempChar 0028                        __CFG_BOREN$SBORDIS 000000  
                 ??_OSCILLATOR_Initialize 0016                         ??_TMR0_StartTimer 0016  
                       ?_ValidateDateTime 0016                          __size_of___awdiv 0084  
                        __size_of___awmod 0070               __size_of_EUSART1_Initialize 0016  
                        __size_of___lwdiv 0052                        ??_ValidateDateTime 001A  
                           ?_Lcd_Delay5us 0001                                _T0CON0bits 000FD5  
                         ___lwdiv@divisor 001E                           ___lwdiv@counter 0020  
                                __ptext10 1218                                  __ptext11 1CFA  
                                __ptext20 10A2                                  __ptext12 18E0  
                                __ptext21 1C6A                                  __ptext13 167E  
                                __ptext30 0000                                  __ptext22 19F8  
                                __ptext14 1B88                                  __ptext23 1974  
                                __ptext15 1452                                  __ptext16 1782  
                                __ptext25 1C1A                                  __ptext17 1D0C  
                                __ptext26 1CB0                                  __ptext18 1568  
                                __ptext27 1D42                                  __ptext19 1D28  
                                __ptext28 1AD8                                  __ptext29 1A68  
                             Lcd_CharCP@c 0018                             __size_of_main 011A  
    __end_of_TMR0_DefaultInterruptHandler 1D44     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 1D42                      __CFG_WDTCWS$WDTCWS_7 000000  
                    __size_of_Timer0_10ms 005A                                _RC1STAbits 000F9D  
                      ReadGPSDateTime@Pos 0029                               Lcd_Int@data 0080  
                                int$flags 0047                                  main@Date 008A  
                             Lcd_Int@size 0034                                  main@Time 0083  
      __end_of_INTERRUPT_InterruptManager 008C                _INTERRUPT_InterruptManager 0008  
                          ??_Lcd_Delay5us 0016               PIN_MANAGER_Initialize@state 0016  
                         _ReadGPSDateTime 1218                         i2___awmod@divisor 0003  
                       i2___awmod@counter 0005                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0008                                GetDay@Date 0024  
                __size_of_Lcd_Delay5500us 0012                    ??_INTERRUPT_Initialize 0016  
                                intlevel2 0000                     ReadGPSDateTime@F11318 0F01  
                 ?_PIN_MANAGER_Initialize 0001                         __CFG_CLKOUTEN$OFF 000000  
                             _PPSLOCKbits 000EA0             ?_TMR0_DefaultInterruptHandler 0001  
                              Lcd_Int@val 0033                     ReadGPSDateTime@Commas 0025  
                           ??_Lcd_Command 0016                                _RX1PPSbits 000EB5  
                         _TMR0_Initialize 1BDA            __end_of_PIN_MANAGER_Initialize 18E0  
