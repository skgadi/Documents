

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Aug 25 17:36:39 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0089                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  008F                     	;# 
   245  0090                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0093                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  0105                     	;# 
   264  0107                     	;# 
   265  0108                     	;# 
   266  0109                     	;# 
   267  010C                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  010E                     	;# 
   271  010F                     	;# 
   272  0185                     	;# 
   273  0187                     	;# 
   274  0188                     	;# 
   275  0189                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0000                     	;# 
   279  0001                     	;# 
   280  0002                     	;# 
   281  0003                     	;# 
   282  0004                     	;# 
   283  0005                     	;# 
   284  0006                     	;# 
   285  0007                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  000E                     	;# 
   293  000F                     	;# 
   294  0010                     	;# 
   295  0011                     	;# 
   296  0012                     	;# 
   297  0013                     	;# 
   298  0014                     	;# 
   299  0015                     	;# 
   300  0015                     	;# 
   301  0016                     	;# 
   302  0017                     	;# 
   303  0018                     	;# 
   304  0019                     	;# 
   305  001A                     	;# 
   306  001B                     	;# 
   307  001B                     	;# 
   308  001C                     	;# 
   309  001D                     	;# 
   310  001E                     	;# 
   311  001F                     	;# 
   312  0081                     	;# 
   313  0085                     	;# 
   314  0086                     	;# 
   315  0087                     	;# 
   316  0089                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  008F                     	;# 
   321  0090                     	;# 
   322  0091                     	;# 
   323  0092                     	;# 
   324  0093                     	;# 
   325  0093                     	;# 
   326  0093                     	;# 
   327  0094                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  009F                     	;# 
   339  0105                     	;# 
   340  0107                     	;# 
   341  0108                     	;# 
   342  0109                     	;# 
   343  010C                     	;# 
   344  010C                     	;# 
   345  010D                     	;# 
   346  010E                     	;# 
   347  010F                     	;# 
   348  0185                     	;# 
   349  0187                     	;# 
   350  0188                     	;# 
   351  0189                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000E                     	;# 
   369  000F                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  001D                     	;# 
   386  001E                     	;# 
   387  001F                     	;# 
   388  0081                     	;# 
   389  0085                     	;# 
   390  0086                     	;# 
   391  0087                     	;# 
   392  0089                     	;# 
   393  008C                     	;# 
   394  008D                     	;# 
   395  008E                     	;# 
   396  008F                     	;# 
   397  0090                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0093                     	;# 
   402  0093                     	;# 
   403  0094                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0097                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009A                     	;# 
   410  009B                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  0105                     	;# 
   416  0107                     	;# 
   417  0108                     	;# 
   418  0109                     	;# 
   419  010C                     	;# 
   420  010C                     	;# 
   421  010D                     	;# 
   422  010E                     	;# 
   423  010F                     	;# 
   424  0185                     	;# 
   425  0187                     	;# 
   426  0188                     	;# 
   427  0189                     	;# 
   428  018C                     	;# 
   429  018D                     	;# 
   430                           
   431                           	psect	strings
   432  0800                     __pstrings:	
   433  0800                     stringtab:	
   434  0800                     __stringtab:	
   435  0800                     stringcode:	
   436                           ;	String table - string pointers are 1 byte each
   437                           
   438  0800                     stringdir:	
   439  0800  3008               	movlw	high stringdir
   440  0801  008A               	movwf	10
   441  0802  0804               	movf	4,w
   442  0803  0A84               	incf	4,f
   443  0804  0782               	addwf	2,f
   444  0805                     __stringbase:	
   445  0805  3400               	retlw	0
   446  0806                     __end_of__stringtab:	
   447  0806                     UART_ReadFromGPS@StartCode:	
   448  0806  3424               	retlw	36
   449  0807  3447               	retlw	71
   450  0808  3450               	retlw	80
   451  0809  3452               	retlw	82
   452  080A  344D               	retlw	77
   453  080B  3443               	retlw	67
   454  080C  342C               	retlw	44
   455  080D                     __end_ofUART_ReadFromGPS@StartCode:	
   456  080D                     UART_ReadFromGPS_TO@StartCode:	
   457  080D  3424               	retlw	36
   458  080E  3447               	retlw	71
   459  080F  3450               	retlw	80
   460  0810  3452               	retlw	82
   461  0811  344D               	retlw	77
   462  0812  3443               	retlw	67
   463  0813  342C               	retlw	44
   464  0814                     __end_ofUART_ReadFromGPS_TO@StartCode:	
   465  001A                     _RCREG	set	26
   466  0013                     _SSPBUF	set	19
   467  0014                     _SSPCON	set	20
   468  0019                     _TXREG	set	25
   469  00C4                     _CREN	set	196
   470  0028                     _RA0	set	40
   471  0029                     _RA1	set	41
   472  002A                     _RA2	set	42
   473  002B                     _RA3	set	43
   474  002C                     _RA4	set	44
   475  002D                     _RA5	set	45
   476  0039                     _RC1	set	57
   477  003A                     _RC2	set	58
   478  0065                     _RCIF	set	101
   479  00C7                     _SPEN	set	199
   480  0099                     _SPBRG	set	153
   481  009A                     _SPBRGH	set	154
   482  0093                     _SSPADD	set	147
   483  0091                     _SSPCON2	set	145
   484  0094                     _SSPSTAT	set	148
   485  0085                     _TRISA	set	133
   486  0085                     _TRISAbits	set	133
   487  0086                     _TRISB	set	134
   488  0087                     _TRISCbits	set	135
   489  048D                     _ACKDT	set	1165
   490  048C                     _ACKEN	set	1164
   491  04C2                     _BRGH	set	1218
   492  048A                     _PEN	set	1162
   493  048B                     _RCEN	set	1163
   494  0489                     _RSEN	set	1161
   495  0488                     _SEN	set	1160
   496  04C4                     _SYNC	set	1220
   497  043B                     _TRISC3	set	1083
   498  043C                     _TRISC4	set	1084
   499  04C1                     _TRMT	set	1217
   500  04C5                     _TXEN	set	1221
   501  0188                     _ANSEL	set	392
   502  0189                     _ANSELH	set	393
   503  0C3B                     _BRG16	set	3131
   504  0814                     STR_5:	
   505  0814  3447               	retlw	71	;'G'
   506  0815  3450               	retlw	80	;'P'
   507  0816  3453               	retlw	83	;'S'
   508  0817  3445               	retlw	69	;'E'
   509  0818  3452               	retlw	82	;'R'
   510  0819  3452               	retlw	82	;'R'
   511  081A  3400               	retlw	0
   512  081B                     STR_2:	
   513  081B  3452               	retlw	82	;'R'
   514  081C  3454               	retlw	84	;'T'
   515  081D  3443               	retlw	67	;'C'
   516  081E  343A               	retlw	58	;':'
   517  081F  3400               	retlw	0
   518  0820                     STR_1:	
   519  0820  3447               	retlw	71	;'G'
   520  0821  3450               	retlw	80	;'P'
   521  0822  3453               	retlw	83	;'S'
   522  0823  343A               	retlw	58	;':'
   523  0824  3400               	retlw	0
   524  0825                     STR_3:	
   525  0825  342D               	retlw	45	;'-'
   526  0826  3400               	retlw	0
   527  0825                     
   528                           ; #config settings
   529  0000                     
   530                           	psect	cinit
   531  07FA                     start_initialization:	
   532  07FA                     __initialization:	
   533                           
   534                           ; Clear objects allocated to BANK1
   535  07FA  01BE               	clrf	__pbssBANK1& (0+127)
   536  07FB  01BF               	clrf	(__pbssBANK1+1)& (0+127)
   537  07FC                     end_of_initialization:	
   538                           ;End of C runtime variable initialization code
   539                           
   540  07FC                     __end_of__initialization:	
   541  07FC  0183               	clrf	3
   542  07FD  120A  118A  2EAB   	ljmp	_main	;jump to C main() function
   543                           
   544                           	psect	bssBANK1
   545  00BE                     __pbssBANK1:	
   546  00BE                     _errno:	
   547  00BE                     	ds	2
   548                           
   549                           	psect	cstackBANK1
   550  00A0                     __pcstackBANK1:	
   551  00A0                     ?_UART_Init:	
   552  00A0                     UART_Init@baudrate:	
   553                           ; 1 bytes @ 0x0
   554                           
   555                           
   556                           ; 4 bytes @ 0x0
   557  00A0                     	ds	4
   558  00A4                     _UART_Init$804:	
   559                           
   560                           ; 3 bytes @ 0x4
   561  00A4                     	ds	3
   562  00A7                     _UART_Init$805:	
   563                           
   564                           ; 3 bytes @ 0x7
   565  00A7                     	ds	3
   566  00AA                     UART_Init@x:	
   567                           
   568                           ; 2 bytes @ 0xA
   569  00AA                     	ds	2
   570  00AC                     ??_main:	
   571                           
   572                           ; 1 bytes @ 0xC
   573  00AC                     	ds	6
   574  00B2                     main@Data:	
   575                           
   576                           ; 6 bytes @ 0x12
   577  00B2                     	ds	6
   578  00B8                     main@Second:	
   579                           
   580                           ; 4 bytes @ 0x18
   581  00B8                     	ds	4
   582  00BC                     main@i:	
   583                           
   584                           ; 1 bytes @ 0x1C
   585  00BC                     	ds	1
   586  00BD                     main@TempVar000:	
   587                           
   588                           ; 1 bytes @ 0x1D
   589  00BD                     	ds	1
   590                           
   591                           	psect	cstackCOMMON
   592  0070                     __pcstackCOMMON:	
   593  0070                     ?_Lcd_Init:	
   594  0070                     ?_Lcd_Command:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_UART_Read_TO:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ??_UART_Read_TO:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Delay5500us:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ??_Lcd_Delay5500us:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Delay5us:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_Lcd_Delay5us:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_Lcd_CharCP:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_I2C_Master_Wait:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_I2C_Master_Wait:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_I2C_Master_Start:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??_I2C_Master_Start:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_I2C_Master_Stop:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_I2C_Master_Stop:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_I2C_Master_Write:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_I2C_Master_Read:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?___wmul:	
   646                           ; 2 bytes @ 0x0
   647                           
   648  0070                     ?___awdiv:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     ?___ftpack:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     ?_frexp:	
   655                           ; 3 bytes @ 0x0
   656                           
   657  0070                     ?___lmul:	
   658                           ; 3 bytes @ 0x0
   659                           
   660  0070                     ?___lldiv:	
   661                           ; 4 bytes @ 0x0
   662                           
   663  0070                     UART_Read_TO@TimeOut:	
   664                           ; 4 bytes @ 0x0
   665                           
   666  0070                     I2C_Master_Write@d:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     I2C_Master_Read@a:	
   670                           ; 2 bytes @ 0x0
   671                           
   672  0070                     ___wmul@multiplier:	
   673                           ; 2 bytes @ 0x0
   674                           
   675  0070                     ___awdiv@divisor:	
   676                           ; 2 bytes @ 0x0
   677                           
   678  0070                     ___ftpack@arg:	
   679                           ; 2 bytes @ 0x0
   680                           
   681  0070                     frexp@value:	
   682                           ; 3 bytes @ 0x0
   683                           
   684  0070                     ___lmul@multiplier:	
   685                           ; 3 bytes @ 0x0
   686                           
   687  0070                     ___lldiv@divisor:	
   688                           ; 4 bytes @ 0x0
   689                           
   690                           
   691                           ; 4 bytes @ 0x0
   692  0070                     	ds	1
   693  0071                     ?_UART_ReadFromGPS_TO:	
   694  0071                     UART_ReadFromGPS_TO@TimeOut:	
   695                           ; 1 bytes @ 0x1
   696                           
   697                           
   698                           ; 1 bytes @ 0x1
   699  0071                     	ds	1
   700  0072                     ??_Lcd_Command:	
   701  0072                     ??_Lcd_CharCP:	
   702                           ; 1 bytes @ 0x2
   703                           
   704  0072                     ??_UART_ReadFromGPS_TO:	
   705                           ; 1 bytes @ 0x2
   706                           
   707  0072                     ??_I2C_Master_Write:	
   708                           ; 1 bytes @ 0x2
   709                           
   710  0072                     ??_I2C_Master_Read:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0072                     ___wmul@multiplicand:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     ___awdiv@dividend:	
   717                           ; 2 bytes @ 0x2
   718                           
   719                           
   720                           ; 2 bytes @ 0x2
   721  0072                     	ds	1
   722  0073                     Lcd_CharCP@c:	
   723  0073                     Lcd_Command@command:	
   724                           ; 1 bytes @ 0x3
   725                           
   726  0073                     ___ftpack@exp:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     frexp@eptr:	
   730                           ; 1 bytes @ 0x3
   731                           
   732                           
   733                           ; 1 bytes @ 0x3
   734  0073                     	ds	1
   735  0074                     ??_Lcd_Init:	
   736  0074                     ?_Lcd_Text:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     ??_frexp:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     ??___wmul:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     ??___awdiv:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     Lcd_Text@x:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ___ftpack@sign:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     UART_ReadFromGPS_TO@i:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     I2C_Master_Read@temp:	
   758                           ; 2 bytes @ 0x4
   759                           
   760  0074                     ___wmul@product:	
   761                           ; 2 bytes @ 0x4
   762                           
   763  0074                     ___lmul@multiplicand:	
   764                           ; 2 bytes @ 0x4
   765                           
   766  0074                     ___lldiv@dividend:	
   767                           ; 4 bytes @ 0x4
   768                           
   769                           
   770                           ; 4 bytes @ 0x4
   771  0074                     	ds	1
   772  0075                     ??___ftpack:	
   773  0075                     Lcd_Init@data:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     Lcd_Text@buffer:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     ___awdiv@counter:	
   780                           ; 1 bytes @ 0x5
   781                           
   782                           
   783                           ; 1 bytes @ 0x5
   784  0075                     	ds	1
   785  0076                     ??_Lcd_Text:	
   786  0076                     ?_I2C_ReadAtAddress:	
   787                           ; 1 bytes @ 0x6
   788                           
   789  0076                     ?___lwdiv:	
   790                           ; 1 bytes @ 0x6
   791                           
   792  0076                     UART_ReadFromGPS_TO@Output:	
   793                           ; 2 bytes @ 0x6
   794                           
   795  0076                     I2C_ReadAtAddress@IntAdd:	
   796                           ; 1 bytes @ 0x6
   797                           
   798  0076                     ___awdiv@sign:	
   799                           ; 1 bytes @ 0x6
   800                           
   801  0076                     ___lwdiv@divisor:	
   802                           ; 1 bytes @ 0x6
   803                           
   804                           
   805                           ; 2 bytes @ 0x6
   806  0076                     	ds	1
   807  0077                     ??_I2C_ReadAtAddress:	
   808  0077                     UART_ReadFromGPS_TO@TempChar:	
   809                           ; 1 bytes @ 0x7
   810                           
   811  0077                     Lcd_Text@y:	
   812                           ; 1 bytes @ 0x7
   813                           
   814  0077                     ___awdiv@quotient:	
   815                           ; 1 bytes @ 0x7
   816                           
   817                           
   818                           ; 2 bytes @ 0x7
   819  0077                     	ds	1
   820  0078                     ??___lmul:	
   821  0078                     ??___lldiv:	
   822                           ; 1 bytes @ 0x8
   823                           
   824  0078                     ?___altoft:	
   825                           ; 1 bytes @ 0x8
   826                           
   827  0078                     UART_ReadFromGPS_TO@Pos:	
   828                           ; 3 bytes @ 0x8
   829                           
   830  0078                     Lcd_Text@data:	
   831                           ; 1 bytes @ 0x8
   832                           
   833  0078                     ___lwdiv@dividend:	
   834                           ; 1 bytes @ 0x8
   835                           
   836  0078                     ___altoft@c:	
   837                           ; 2 bytes @ 0x8
   838                           
   839                           
   840                           ; 4 bytes @ 0x8
   841  0078                     	ds	1
   842  0079                     ?_UART_ReadValidTimeFromGPS_TO:	
   843  0079                     UART_ReadValidTimeFromGPS_TO@TimeOut:	
   844                           ; 1 bytes @ 0x9
   845                           
   846  0079                     I2C_ReadAtAddress@data:	
   847                           ; 1 bytes @ 0x9
   848                           
   849  0079                     ___lmul@product:	
   850                           ; 1 bytes @ 0x9
   851                           
   852  0079                     ___lldiv@quotient:	
   853                           ; 4 bytes @ 0x9
   854                           
   855                           
   856                           ; 4 bytes @ 0x9
   857  0079                     	ds	1
   858  007A                     ??_UART_ReadValidTimeFromGPS_TO:	
   859  007A                     ??___lwdiv:	
   860                           ; 1 bytes @ 0xA
   861                           
   862  007A                     I2C_ReadAtAddress@DevID:	
   863                           ; 1 bytes @ 0xA
   864                           
   865                           
   866                           ; 1 bytes @ 0xA
   867  007A                     	ds	1
   868  007B                     UART_ReadValidTimeFromGPS_TO@Result:	
   869  007B                     ___lwdiv@quotient:	
   870                           ; 1 bytes @ 0xB
   871                           
   872                           
   873                           ; 2 bytes @ 0xB
   874  007B                     	ds	1
   875  007C                     ??___altoft:	
   876  007C                     UART_ReadValidTimeFromGPS_TO@Output:	
   877                           ; 1 bytes @ 0xC
   878                           
   879                           
   880                           ; 1 bytes @ 0xC
   881  007C                     	ds	1
   882  007D                     ___lldiv@counter:	
   883  007D                     ___lwdiv@counter:	
   884                           ; 1 bytes @ 0xD
   885                           
   886                           
   887                           ; 1 bytes @ 0xD
   888  007D                     	ds	1
   889  007E                     ??_UART_Init:	
   890  007E                     ??_round:	
   891                           ; 1 bytes @ 0xE
   892                           
   893  007E                     ??___ftneg:	
   894                           ; 1 bytes @ 0xE
   895                           
   896                           
   897                           	psect	cstackBANK0
   898  0020                     __pcstackBANK0:	
   899                           ; 1 bytes @ 0xE
   900                           
   901  0020                     ?_I2C_Master_Init:	
   902  0020                     ?___bmul:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0020                     ?_ReadRTCAsSec:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0020                     ___bmul@multiplicand:	
   909                           ; 4 bytes @ 0x0
   910                           
   911  0020                     ___altoft@exp:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0020                     I2C_Master_Init@c:	
   915                           ; 1 bytes @ 0x0
   916                           
   917                           
   918                           ; 4 bytes @ 0x0
   919  0020                     	ds	1
   920  0021                     ??___bmul:	
   921  0021                     ___altoft@sign:	
   922                           ; 1 bytes @ 0x1
   923                           
   924                           
   925                           ; 1 bytes @ 0x1
   926  0021                     	ds	1
   927  0022                     ?___ftmul:	
   928  0022                     ___bmul@product:	
   929                           ; 3 bytes @ 0x2
   930                           
   931  0022                     ___ftmul@f1:	
   932                           ; 1 bytes @ 0x2
   933                           
   934                           
   935                           ; 3 bytes @ 0x2
   936  0022                     	ds	1
   937  0023                     ___bmul@multiplier:	
   938                           
   939                           ; 1 bytes @ 0x3
   940  0023                     	ds	1
   941  0024                     ??_I2C_Master_Init:	
   942  0024                     ?_Lcd_WriteChar:	
   943                           ; 1 bytes @ 0x4
   944                           
   945  0024                     ??_ReadRTCAsSec:	
   946                           ; 1 bytes @ 0x4
   947                           
   948  0024                     ?_Lcd_Int:	
   949                           ; 1 bytes @ 0x4
   950                           
   951  0024                     Lcd_WriteChar@x:	
   952                           ; 1 bytes @ 0x4
   953                           
   954  0024                     Lcd_Int@x:	
   955                           ; 1 bytes @ 0x4
   956                           
   957                           
   958                           ; 1 bytes @ 0x4
   959  0024                     	ds	1
   960  0025                     Lcd_WriteChar@c:	
   961  0025                     Lcd_Int@val:	
   962                           ; 1 bytes @ 0x5
   963                           
   964  0025                     ___ftmul@f2:	
   965                           ; 1 bytes @ 0x5
   966                           
   967                           
   968                           ; 3 bytes @ 0x5
   969  0025                     	ds	1
   970  0026                     ??_Lcd_WriteChar:	
   971  0026                     Lcd_Int@size:	
   972                           ; 1 bytes @ 0x6
   973                           
   974                           
   975                           ; 1 bytes @ 0x6
   976  0026                     	ds	1
   977  0027                     ??_Lcd_Int:	
   978  0027                     Lcd_WriteChar@y:	
   979                           ; 1 bytes @ 0x7
   980                           
   981                           
   982                           ; 1 bytes @ 0x7
   983  0027                     	ds	1
   984  0028                     ??___ftmul:	
   985  0028                     Lcd_WriteChar@data:	
   986                           ; 1 bytes @ 0x8
   987                           
   988                           
   989                           ; 1 bytes @ 0x8
   990  0028                     	ds	1
   991  0029                     ?_WriteLongInt:	
   992  0029                     Lcd_Int@y:	
   993                           ; 1 bytes @ 0x9
   994                           
   995  0029                     WriteLongInt@x:	
   996                           ; 1 bytes @ 0x9
   997                           
   998                           
   999                           ; 1 bytes @ 0x9
  1000  0029                     	ds	1
  1001  002A                     Lcd_Int@data:	
  1002  002A                     WriteLongInt@Val:	
  1003                           ; 1 bytes @ 0xA
  1004                           
  1005                           
  1006                           ; 4 bytes @ 0xA
  1007  002A                     	ds	1
  1008  002B                     Lcd_Int@tempVal:	
  1009                           
  1010                           ; 2 bytes @ 0xB
  1011  002B                     	ds	1
  1012  002C                     ___ftmul@exp:	
  1013                           
  1014                           ; 1 bytes @ 0xC
  1015  002C                     	ds	1
  1016  002D                     ?_DisplayTimeFromRTC:	
  1017  002D                     DisplayTimeFromRTC@x:	
  1018                           ; 1 bytes @ 0xD
  1019                           
  1020  002D                     ___ftmul@f3_as_product:	
  1021                           ; 1 bytes @ 0xD
  1022                           
  1023                           
  1024                           ; 3 bytes @ 0xD
  1025  002D                     	ds	1
  1026  002E                     ??_DisplayTimeFromRTC:	
  1027  002E                     WriteLongInt@size:	
  1028                           ; 1 bytes @ 0xE
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0xE
  1032  002E                     	ds	1
  1033  002F                     ??_WriteLongInt:	
  1034                           
  1035                           ; 1 bytes @ 0xF
  1036  002F                     	ds	1
  1037  0030                     ___ftmul@cntr:	
  1038                           
  1039                           ; 1 bytes @ 0x10
  1040  0030                     	ds	1
  1041  0031                     DisplayTimeFromRTC@y:	
  1042  0031                     ___ftmul@sign:	
  1043                           ; 1 bytes @ 0x11
  1044                           
  1045  0031                     _ReadRTCAsSec$806:	
  1046                           ; 1 bytes @ 0x11
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x11
  1050  0031                     	ds	1
  1051  0032                     ?___ftdiv:	
  1052  0032                     WriteLongInt@y:	
  1053                           ; 3 bytes @ 0x12
  1054                           
  1055  0032                     DisplayTimeFromRTC@TempVar000:	
  1056                           ; 1 bytes @ 0x12
  1057                           
  1058  0032                     ___ftdiv@f2:	
  1059                           ; 1 bytes @ 0x12
  1060                           
  1061                           
  1062                           ; 3 bytes @ 0x12
  1063  0032                     	ds	1
  1064  0033                     ReadRTCAsSec@Out:	
  1065                           
  1066                           ; 4 bytes @ 0x13
  1067  0033                     	ds	2
  1068  0035                     ___ftdiv@f1:	
  1069                           
  1070                           ; 3 bytes @ 0x15
  1071  0035                     	ds	2
  1072  0037                     ReadRTCAsSec@TempVar000:	
  1073                           
  1074                           ; 1 bytes @ 0x17
  1075  0037                     	ds	1
  1076  0038                     ??___ftdiv:	
  1077                           
  1078                           ; 1 bytes @ 0x18
  1079  0038                     	ds	4
  1080  003C                     ___ftdiv@cntr:	
  1081                           
  1082                           ; 1 bytes @ 0x1C
  1083  003C                     	ds	1
  1084  003D                     ___ftdiv@f3:	
  1085                           
  1086                           ; 3 bytes @ 0x1D
  1087  003D                     	ds	3
  1088  0040                     ___ftdiv@exp:	
  1089                           
  1090                           ; 1 bytes @ 0x20
  1091  0040                     	ds	1
  1092  0041                     ___ftdiv@sign:	
  1093                           
  1094                           ; 1 bytes @ 0x21
  1095  0041                     	ds	1
  1096  0042                     ?___ftadd:	
  1097  0042                     ___ftadd@f1:	
  1098                           ; 3 bytes @ 0x22
  1099                           
  1100                           
  1101                           ; 3 bytes @ 0x22
  1102  0042                     	ds	3
  1103  0045                     ___ftadd@f2:	
  1104                           
  1105                           ; 3 bytes @ 0x25
  1106  0045                     	ds	3
  1107  0048                     ??___ftadd:	
  1108                           
  1109                           ; 1 bytes @ 0x28
  1110  0048                     	ds	4
  1111  004C                     ___ftadd@sign:	
  1112                           
  1113                           ; 1 bytes @ 0x2C
  1114  004C                     	ds	1
  1115  004D                     ___ftadd@exp2:	
  1116                           
  1117                           ; 1 bytes @ 0x2D
  1118  004D                     	ds	1
  1119  004E                     ___ftadd@exp1:	
  1120                           
  1121                           ; 1 bytes @ 0x2E
  1122  004E                     	ds	1
  1123  004F                     ?___fttol:	
  1124  004F                     ___fttol@f1:	
  1125                           ; 4 bytes @ 0x2F
  1126                           
  1127                           
  1128                           ; 3 bytes @ 0x2F
  1129  004F                     	ds	4
  1130  0053                     ??___fttol:	
  1131                           
  1132                           ; 1 bytes @ 0x33
  1133  0053                     	ds	4
  1134  0057                     ___fttol@sign1:	
  1135                           
  1136                           ; 1 bytes @ 0x37
  1137  0057                     	ds	1
  1138  0058                     ___fttol@lval:	
  1139                           
  1140                           ; 4 bytes @ 0x38
  1141  0058                     	ds	4
  1142  005C                     ___fttol@exp1:	
  1143                           
  1144                           ; 1 bytes @ 0x3C
  1145  005C                     	ds	1
  1146  005D                     ?_trunc:	
  1147  005D                     trunc@x:	
  1148                           ; 3 bytes @ 0x3D
  1149                           
  1150                           
  1151                           ; 3 bytes @ 0x3D
  1152  005D                     	ds	3
  1153  0060                     ??_trunc:	
  1154                           
  1155                           ; 1 bytes @ 0x40
  1156  0060                     	ds	1
  1157  0061                     trunc@i:	
  1158                           
  1159                           ; 3 bytes @ 0x41
  1160  0061                     	ds	3
  1161  0064                     trunc@expon:	
  1162                           
  1163                           ; 2 bytes @ 0x44
  1164  0064                     	ds	2
  1165  0066                     ?___ftneg:	
  1166  0066                     ___ftneg@f1:	
  1167                           ; 3 bytes @ 0x46
  1168                           
  1169                           
  1170                           ; 3 bytes @ 0x46
  1171  0066                     	ds	3
  1172  0069                     ?_round:	
  1173  0069                     round@x:	
  1174                           ; 3 bytes @ 0x49
  1175                           
  1176                           
  1177                           ; 3 bytes @ 0x49
  1178  0069                     	ds	3
  1179  006C                     round@f:	
  1180                           
  1181                           ; 3 bytes @ 0x4C
  1182  006C                     	ds	3
  1183                           
  1184                           	psect	maintext
  1185  06AB                     __pmaintext:	
  1186 ;;
  1187 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1188 ;;
  1189 ;; *************** function _main *****************
  1190 ;; Defined at:
  1191 ;;		line 10 in file "main.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  Data            6   18[BANK1 ] unsigned char [6]
  1196 ;;  Second          4   24[BANK1 ] unsigned long 
  1197 ;;  TempVar000      1   29[BANK1 ] unsigned char 
  1198 ;;  i               1   28[BANK1 ] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : B00/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1208 ;;      Params:         0       0       0       0       0
  1209 ;;      Locals:         0       0      12       0       0
  1210 ;;      Temps:          0       0       6       0       0
  1211 ;;      Totals:         0       0      18       0       0
  1212 ;;Total ram usage:       18 bytes
  1213 ;; Hardware stack levels required when called:    5
  1214 ;; This function calls:
  1215 ;;		_DisplayTimeFromRTC
  1216 ;;		_I2C_Master_Init
  1217 ;;		_Lcd_Command
  1218 ;;		_Lcd_Init
  1219 ;;		_Lcd_Text
  1220 ;;		_Lcd_WriteChar
  1221 ;;		_ReadRTCAsSec
  1222 ;;		_UART_Init
  1223 ;;		_UART_ReadValidTimeFromGPS_TO
  1224 ;;		_WriteLongInt
  1225 ;; This function is called by:
  1226 ;;		Startup code after reset
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _main
  1232  06AB                     _main:	
  1233                           
  1234                           ;main.c: 11: ANSEL=0x00;
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1238  06AB  1683               	bsf	3,5	;RP0=1, select bank3
  1239  06AC  1703               	bsf	3,6	;RP1=1, select bank3
  1240  06AD  0188               	clrf	8	;volatile
  1241                           
  1242                           ;main.c: 12: ANSELH=0x00;
  1243  06AE  0189               	clrf	9	;volatile
  1244                           
  1245                           ;main.c: 13: TRISA = 0X00;
  1246  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  1247  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  1248  06B1  0185               	clrf	5	;volatile
  1249                           
  1250                           ;main.c: 14: TRISB = 0X00;
  1251  06B2  0186               	clrf	6	;volatile
  1252                           
  1253                           ;main.c: 15: Lcd_Init();
  1254  06B3  120A  158A  26B4  120A  118A  	fcall	_Lcd_Init
  1255                           
  1256                           ;main.c: 16: UART_Init(9600);
  1257  06B8  3000               	movlw	0
  1258  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  1259  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  1260  06BB  00A3               	movwf	(UART_Init@baudrate+3)^(0+128)
  1261  06BC  3000               	movlw	0
  1262  06BD  00A2               	movwf	(UART_Init@baudrate+2)^(0+128)
  1263  06BE  3025               	movlw	37
  1264  06BF  00A1               	movwf	(UART_Init@baudrate+1)^(0+128)
  1265  06C0  3080               	movlw	128
  1266  06C1  00A0               	movwf	UART_Init@baudrate^(0+128)
  1267  06C2  120A  118A  2173  120A  118A  	fcall	_UART_Init
  1268                           
  1269                           ;main.c: 18: I2C_Master_Init(400000);
  1270  06C7  3000               	movlw	0
  1271  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1272  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1273  06CA  00A3               	movwf	I2C_Master_Init@c+3
  1274  06CB  3006               	movlw	6
  1275  06CC  00A2               	movwf	I2C_Master_Init@c+2
  1276  06CD  301A               	movlw	26
  1277  06CE  00A1               	movwf	I2C_Master_Init@c+1
  1278  06CF  3080               	movlw	128
  1279  06D0  00A0               	movwf	I2C_Master_Init@c
  1280  06D1  120A  158A  2191  120A  118A  	fcall	_I2C_Master_Init
  1281                           
  1282                           ;main.c: 21: Lcd_Command(1);
  1283  06D6  3001               	movlw	1
  1284  06D7  120A  158A  2759  120A  118A  	fcall	_Lcd_Command
  1285                           
  1286                           ;main.c: 22: Lcd_Text(1,1,"GPS:");
  1287  06DC  01F4               	clrf	Lcd_Text@x
  1288  06DD  0AF4               	incf	Lcd_Text@x,f
  1289  06DE  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1290  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1291  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1292  06E1  00AC               	movwf	??_main^(0+128)
  1293  06E2  082C               	movf	??_main^(0+128),w
  1294  06E3  00F5               	movwf	Lcd_Text@buffer
  1295  06E4  3001               	movlw	1
  1296  06E5  120A  158A  227C  120A  118A  	fcall	_Lcd_Text
  1297                           
  1298                           ;main.c: 23: Lcd_Text(2,1,"RTC:");
  1299  06EA  01F4               	clrf	Lcd_Text@x
  1300  06EB  0AF4               	incf	Lcd_Text@x,f
  1301  06EC  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1302  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  1303  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  1304  06EF  00AC               	movwf	??_main^(0+128)
  1305  06F0  082C               	movf	??_main^(0+128),w
  1306  06F1  00F5               	movwf	Lcd_Text@buffer
  1307  06F2  3002               	movlw	2
  1308  06F3  120A  158A  227C  120A  118A  	fcall	_Lcd_Text
  1309                           
  1310                           ;main.c: 24: Lcd_Text(2,11,"-");
  1311  06F8  300B               	movlw	11
  1312  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  1313  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  1314  06FB  00AC               	movwf	??_main^(0+128)
  1315  06FC  082C               	movf	??_main^(0+128),w
  1316  06FD  00F4               	movwf	Lcd_Text@x
  1317  06FE  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1318  06FF  00AD               	movwf	(??_main+1)^(0+128)
  1319  0700  082D               	movf	(??_main+1)^(0+128),w
  1320  0701  00F5               	movwf	Lcd_Text@buffer
  1321  0702  3002               	movlw	2
  1322  0703  120A  158A  227C  120A  118A  	fcall	_Lcd_Text
  1323                           
  1324                           ;main.c: 25: Lcd_Text(1,11,"-");
  1325  0708  300B               	movlw	11
  1326  0709  1683               	bsf	3,5	;RP0=1, select bank1
  1327  070A  1303               	bcf	3,6	;RP1=0, select bank1
  1328  070B  00AC               	movwf	??_main^(0+128)
  1329  070C  082C               	movf	??_main^(0+128),w
  1330  070D  00F4               	movwf	Lcd_Text@x
  1331  070E  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1332  070F  00AD               	movwf	(??_main+1)^(0+128)
  1333  0710  082D               	movf	(??_main+1)^(0+128),w
  1334  0711  00F5               	movwf	Lcd_Text@buffer
  1335  0712  3001               	movlw	1
  1336  0713  120A  158A  227C  120A  118A  	fcall	_Lcd_Text
  1337                           
  1338                           ;main.c: 26: unsigned char Data[6];
  1339                           ;main.c: 27: uint32_t Second;
  1340                           ;main.c: 28: char TempVar000, i;
  1341                           ;main.c: 29: TRISCbits.TRISC2 = 0;
  1342  0718  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0719  1303               	bcf	3,6	;RP1=0, select bank1
  1344  071A  1107               	bcf	7,2	;volatile
  1345                           
  1346                           ;main.c: 30: RC2=1;
  1347  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1348  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1349  071D  1507               	bsf	7,2	;volatile
  1350                           
  1351                           ;main.c: 31: i=0x00;
  1352  071E  1683               	bsf	3,5	;RP0=1, select bank1
  1353  071F  1303               	bcf	3,6	;RP1=0, select bank1
  1354  0720  01BC               	clrf	main@i^(0+128)
  1355                           
  1356                           ;main.c: 35: TRISCbits.TRISC1= 0;
  1357  0721  1087               	bcf	7,1	;volatile
  1358                           
  1359                           ;main.c: 36: RC1=1;
  1360  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0724  1487               	bsf	7,1	;volatile
  1363  0725                     l2816:	
  1364                           ;main.c: 39: while (1) {
  1365                           
  1366                           
  1367                           ;main.c: 40: i++;
  1368  0725  3001               	movlw	1
  1369  0726  1683               	bsf	3,5	;RP0=1, select bank1
  1370  0727  1303               	bcf	3,6	;RP1=0, select bank1
  1371  0728  00AC               	movwf	??_main^(0+128)
  1372  0729  082C               	movf	??_main^(0+128),w
  1373  072A  07BC               	addwf	main@i^(0+128),f
  1374                           
  1375                           ;main.c: 41: WriteLongInt(1,12,i,5);
  1376  072B  300C               	movlw	12
  1377  072C  00AC               	movwf	??_main^(0+128)
  1378  072D  082C               	movf	??_main^(0+128),w
  1379  072E  1283               	bcf	3,5	;RP0=0, select bank0
  1380  072F  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0730  00A9               	movwf	WriteLongInt@x
  1382  0731  1683               	bsf	3,5	;RP0=1, select bank1
  1383  0732  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0733  083C               	movf	main@i^(0+128),w
  1385  0734  00AD               	movwf	(??_main+1)^(0+128)
  1386  0735  01AE               	clrf	((??_main+1)^(0+128)+1)
  1387  0736  01AF               	clrf	((??_main+1)^(0+128)+2)
  1388  0737  01B0               	clrf	((??_main+1)^(0+128)+3)
  1389  0738  0830               	movf	(??_main+4)^(0+128),w
  1390  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1391  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1392  073B  00AD               	movwf	WriteLongInt@Val+3
  1393  073C  1683               	bsf	3,5	;RP0=1, select bank1
  1394  073D  1303               	bcf	3,6	;RP1=0, select bank1
  1395  073E  082F               	movf	(??_main+3)^(0+128),w
  1396  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0741  00AC               	movwf	WriteLongInt@Val+2
  1399  0742  1683               	bsf	3,5	;RP0=1, select bank1
  1400  0743  1303               	bcf	3,6	;RP1=0, select bank1
  1401  0744  082E               	movf	(??_main+2)^(0+128),w
  1402  0745  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0746  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0747  00AB               	movwf	WriteLongInt@Val+1
  1405  0748  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0749  1303               	bcf	3,6	;RP1=0, select bank1
  1407  074A  082D               	movf	(??_main+1)^(0+128),w
  1408  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1409  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1410  074D  00AA               	movwf	WriteLongInt@Val
  1411  074E  3005               	movlw	5
  1412  074F  1683               	bsf	3,5	;RP0=1, select bank1
  1413  0750  1303               	bcf	3,6	;RP1=0, select bank1
  1414  0751  00B1               	movwf	(??_main+5)^(0+128)
  1415  0752  0831               	movf	(??_main+5)^(0+128),w
  1416  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0755  00AE               	movwf	WriteLongInt@size
  1419  0756  3001               	movlw	1
  1420  0757  120A  158A  243F  120A  118A  	fcall	_WriteLongInt
  1421                           
  1422                           ;main.c: 43: if (UART_ReadValidTimeFromGPS_TO(Data, 100)) {
  1423  075C  3064               	movlw	100
  1424  075D  1683               	bsf	3,5	;RP0=1, select bank1
  1425  075E  1303               	bcf	3,6	;RP1=0, select bank1
  1426  075F  00AC               	movwf	??_main^(0+128)
  1427  0760  082C               	movf	??_main^(0+128),w
  1428  0761  00F9               	movwf	UART_ReadValidTimeFromGPS_TO@TimeOut
  1429  0762  30B2               	movlw	(low (main@Data| 0))& (0+255)
  1430  0763  120A  158A  255A  120A  118A  	fcall	_UART_ReadValidTimeFromGPS_TO
  1431  0768  3A00               	xorlw	0
  1432  0769  1903               	skipnz
  1433  076A  2F92               	goto	l2834
  1434                           
  1435                           ;main.c: 45: for (TempVar000=0; TempVar000<6; TempVar000++)
  1436  076B  1683               	bsf	3,5	;RP0=1, select bank1
  1437  076C  1303               	bcf	3,6	;RP1=0, select bank1
  1438  076D  01BD               	clrf	main@TempVar000^(0+128)
  1439  076E                     L1:	
  1440  076E  3006               	movlw	6
  1441  076F  023D               	subwf	main@TempVar000^(0+128),w
  1442  0770  1803               	btfsc	3,0
  1443  0771  2FA2               	goto	l2836
  1444                           
  1445                           ;main.c: 46: Lcd_WriteChar(1,TempVar000+5,Data[TempVar000]);
  1446  0772  083D               	movf	main@TempVar000^(0+128),w
  1447  0773  3E05               	addlw	5
  1448  0774  00AC               	movwf	??_main^(0+128)
  1449  0775  082C               	movf	??_main^(0+128),w
  1450  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0778  00A4               	movwf	Lcd_WriteChar@x
  1453  0779  1683               	bsf	3,5	;RP0=1, select bank1
  1454  077A  1303               	bcf	3,6	;RP1=0, select bank1
  1455  077B  083D               	movf	main@TempVar000^(0+128),w
  1456  077C  3EB2               	addlw	(low (main@Data| 0))& (0+255)
  1457  077D  0084               	movwf	4
  1458  077E  1383               	bcf	3,7	;select IRP bank1
  1459  077F  0800               	movf	0,w
  1460  0780  00AD               	movwf	(??_main+1)^(0+128)
  1461  0781  082D               	movf	(??_main+1)^(0+128),w
  1462  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0784  00A5               	movwf	Lcd_WriteChar@c
  1465  0785  3001               	movlw	1
  1466  0786  120A  158A  2163  120A  118A  	fcall	_Lcd_WriteChar
  1467  078B  3001               	movlw	1
  1468  078C  1683               	bsf	3,5	;RP0=1, select bank1
  1469  078D  1303               	bcf	3,6	;RP1=0, select bank1
  1470  078E  00AC               	movwf	??_main^(0+128)
  1471  078F  082C               	movf	??_main^(0+128),w
  1472  0790  07BD               	addwf	main@TempVar000^(0+128),f
  1473  0791  2F6E               	goto	L1
  1474  0792                     l2834:	
  1475                           ;main.c: 47: }
  1476                           
  1477                           
  1478                           ;main.c: 48: else
  1479                           ;main.c: 49: Lcd_Text(1,5,"GPSERR");
  1480  0792  3005               	movlw	5
  1481  0793  1683               	bsf	3,5	;RP0=1, select bank1
  1482  0794  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0795  00AC               	movwf	??_main^(0+128)
  1484  0796  082C               	movf	??_main^(0+128),w
  1485  0797  00F4               	movwf	Lcd_Text@x
  1486  0798  300F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1487  0799  00AD               	movwf	(??_main+1)^(0+128)
  1488  079A  082D               	movf	(??_main+1)^(0+128),w
  1489  079B  00F5               	movwf	Lcd_Text@buffer
  1490  079C  3001               	movlw	1
  1491  079D  120A  158A  227C  120A  118A  	fcall	_Lcd_Text
  1492  07A2                     l2836:	
  1493                           
  1494                           ;main.c: 50: Second = ReadRTCAsSec();
  1495  07A2  120A  118A  257E  120A  118A  	fcall	_ReadRTCAsSec
  1496  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1497  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1498  07A9  0823               	movf	?_ReadRTCAsSec+3,w
  1499  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  1500  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  1501  07AC  00BB               	movwf	(main@Second+3)^(0+128)
  1502  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1503  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1504  07AF  0822               	movf	?_ReadRTCAsSec+2,w
  1505  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  1506  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  1507  07B2  00BA               	movwf	(main@Second+2)^(0+128)
  1508  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1509  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1510  07B5  0821               	movf	?_ReadRTCAsSec+1,w
  1511  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  1512  07B7  1303               	bcf	3,6	;RP1=0, select bank1
  1513  07B8  00B9               	movwf	(main@Second+1)^(0+128)
  1514  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1515  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1516  07BB  0820               	movf	?_ReadRTCAsSec,w
  1517  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  1518  07BD  1303               	bcf	3,6	;RP1=0, select bank1
  1519  07BE  00B8               	movwf	main@Second^(0+128)
  1520                           
  1521                           ;main.c: 51: DisplayTimeFromRTC (2,5);
  1522  07BF  3005               	movlw	5
  1523  07C0  00AC               	movwf	??_main^(0+128)
  1524  07C1  082C               	movf	??_main^(0+128),w
  1525  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1526  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1527  07C4  00AD               	movwf	DisplayTimeFromRTC@x
  1528  07C5  3002               	movlw	2
  1529  07C6  120A  118A  20C0  120A  118A  	fcall	_DisplayTimeFromRTC
  1530                           
  1531                           ;main.c: 52: WriteLongInt(2,12,Second,5);
  1532  07CB  300C               	movlw	12
  1533  07CC  1683               	bsf	3,5	;RP0=1, select bank1
  1534  07CD  1303               	bcf	3,6	;RP1=0, select bank1
  1535  07CE  00AC               	movwf	??_main^(0+128)
  1536  07CF  082C               	movf	??_main^(0+128),w
  1537  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1538  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1539  07D2  00A9               	movwf	WriteLongInt@x
  1540  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  1541  07D4  1303               	bcf	3,6	;RP1=0, select bank1
  1542  07D5  083B               	movf	(main@Second+3)^(0+128),w
  1543  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1544  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1545  07D8  00AD               	movwf	WriteLongInt@Val+3
  1546  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  1547  07DA  1303               	bcf	3,6	;RP1=0, select bank1
  1548  07DB  083A               	movf	(main@Second+2)^(0+128),w
  1549  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1550  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1551  07DE  00AC               	movwf	WriteLongInt@Val+2
  1552  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  1553  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  1554  07E1  0839               	movf	(main@Second+1)^(0+128),w
  1555  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1556  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1557  07E4  00AB               	movwf	WriteLongInt@Val+1
  1558  07E5  1683               	bsf	3,5	;RP0=1, select bank1
  1559  07E6  1303               	bcf	3,6	;RP1=0, select bank1
  1560  07E7  0838               	movf	main@Second^(0+128),w
  1561  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  1562  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  1563  07EA  00AA               	movwf	WriteLongInt@Val
  1564  07EB  3005               	movlw	5
  1565  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  1566  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  1567  07EE  00AD               	movwf	(??_main+1)^(0+128)
  1568  07EF  082D               	movf	(??_main+1)^(0+128),w
  1569  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  1570  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  1571  07F2  00AE               	movwf	WriteLongInt@size
  1572  07F3  3002               	movlw	2
  1573  07F4  120A  158A  243F  120A  118A  	fcall	_WriteLongInt
  1574  07F9  2F25               	goto	l2816
  1575  07FA                     __end_of_main:	
  1576                           
  1577                           	psect	text1
  1578  0C3F                     __ptext1:	
  1579 ;; *************** function _WriteLongInt *****************
  1580 ;; Defined at:
  1581 ;;		line 182 in file "libs/HD44780.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  y               1    wreg     unsigned char 
  1584 ;;  x               1    9[BANK0 ] unsigned char 
  1585 ;;  Val             4   10[BANK0 ] unsigned long 
  1586 ;;  size            1   14[BANK0 ] unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  y               1   18[BANK0 ] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1598 ;;      Params:         0       6       0       0       0
  1599 ;;      Locals:         0       1       0       0       0
  1600 ;;      Temps:          0       3       0       0       0
  1601 ;;      Totals:         0      10       0       0       0
  1602 ;;Total ram usage:       10 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    3
  1605 ;; This function calls:
  1606 ;;		_Lcd_WriteChar
  1607 ;;		___bmul
  1608 ;;		___lldiv
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _WriteLongInt
  1616  0C3F                     _WriteLongInt:	
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _WriteLongInt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1620                           ;WriteLongInt@y stored from wreg
  1621  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0C41  00B2               	movwf	WriteLongInt@y
  1624  0C42                     l2706:	
  1625                           ;HD44780.c: 183: while(size) {
  1626                           
  1627  0C42  082E               	movf	WriteLongInt@size,w
  1628  0C43  1903               	btfsc	3,2
  1629  0C44  0008               	return
  1630                           
  1631                           ;HD44780.c: 184: size--;
  1632  0C45  3001               	movlw	1
  1633  0C46  02AE               	subwf	WriteLongInt@size,f
  1634                           
  1635                           ;HD44780.c: 185: Lcd_WriteChar (y, x+size, ((Val - ((Val/10)*10))+0x30));
  1636  0C47  082E               	movf	WriteLongInt@size,w
  1637  0C48  0729               	addwf	WriteLongInt@x,w
  1638  0C49  00AF               	movwf	??_WriteLongInt
  1639  0C4A  082F               	movf	??_WriteLongInt,w
  1640  0C4B  00A4               	movwf	Lcd_WriteChar@x
  1641  0C4C  300A               	movlw	10
  1642  0C4D  00B0               	movwf	??_WriteLongInt+1
  1643  0C4E  0830               	movf	??_WriteLongInt+1,w
  1644  0C4F  00A0               	movwf	___bmul@multiplicand
  1645  0C50  082D               	movf	WriteLongInt@Val+3,w
  1646  0C51  00F7               	movwf	___lldiv@dividend+3
  1647  0C52  082C               	movf	WriteLongInt@Val+2,w
  1648  0C53  00F6               	movwf	___lldiv@dividend+2
  1649  0C54  082B               	movf	WriteLongInt@Val+1,w
  1650  0C55  00F5               	movwf	___lldiv@dividend+1
  1651  0C56  082A               	movf	WriteLongInt@Val,w
  1652  0C57  00F4               	movwf	___lldiv@dividend
  1653  0C58  3000               	movlw	0
  1654  0C59  00F3               	movwf	___lldiv@divisor+3
  1655  0C5A  3000               	movlw	0
  1656  0C5B  00F2               	movwf	___lldiv@divisor+2
  1657  0C5C  3000               	movlw	0
  1658  0C5D  00F1               	movwf	___lldiv@divisor+1
  1659  0C5E  300A               	movlw	10
  1660  0C5F  00F0               	movwf	___lldiv@divisor
  1661  0C60  120A  158A  249C  120A  158A  	fcall	___lldiv
  1662  0C65  0870               	movf	?___lldiv,w
  1663  0C66  120A  158A  2103  120A  158A  	fcall	___bmul
  1664  0C6B  3AFF               	xorlw	255
  1665  0C6C  3E01               	addlw	1
  1666  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0C6F  072A               	addwf	WriteLongInt@Val,w
  1669  0C70  3E30               	addlw	48
  1670  0C71  00B1               	movwf	??_WriteLongInt+2
  1671  0C72  0831               	movf	??_WriteLongInt+2,w
  1672  0C73  00A5               	movwf	Lcd_WriteChar@c
  1673  0C74  0832               	movf	WriteLongInt@y,w
  1674  0C75  120A  158A  2163  120A  158A  	fcall	_Lcd_WriteChar
  1675                           
  1676                           ;HD44780.c: 186: Val = Val/10;
  1677  0C7A  3000               	movlw	0
  1678  0C7B  00F3               	movwf	___lldiv@divisor+3
  1679  0C7C  3000               	movlw	0
  1680  0C7D  00F2               	movwf	___lldiv@divisor+2
  1681  0C7E  3000               	movlw	0
  1682  0C7F  00F1               	movwf	___lldiv@divisor+1
  1683  0C80  300A               	movlw	10
  1684  0C81  00F0               	movwf	___lldiv@divisor
  1685  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0C84  082D               	movf	WriteLongInt@Val+3,w
  1688  0C85  00F7               	movwf	___lldiv@dividend+3
  1689  0C86  082C               	movf	WriteLongInt@Val+2,w
  1690  0C87  00F6               	movwf	___lldiv@dividend+2
  1691  0C88  082B               	movf	WriteLongInt@Val+1,w
  1692  0C89  00F5               	movwf	___lldiv@dividend+1
  1693  0C8A  082A               	movf	WriteLongInt@Val,w
  1694  0C8B  00F4               	movwf	___lldiv@dividend
  1695  0C8C  120A  158A  249C  120A  158A  	fcall	___lldiv
  1696  0C91  0873               	movf	?___lldiv+3,w
  1697  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0C94  00AD               	movwf	WriteLongInt@Val+3
  1700  0C95  0872               	movf	?___lldiv+2,w
  1701  0C96  00AC               	movwf	WriteLongInt@Val+2
  1702  0C97  0871               	movf	?___lldiv+1,w
  1703  0C98  00AB               	movwf	WriteLongInt@Val+1
  1704  0C99  0870               	movf	?___lldiv,w
  1705  0C9A  00AA               	movwf	WriteLongInt@Val
  1706  0C9B  2C42               	goto	l2706
  1707  0C9C                     __end_of_WriteLongInt:	
  1708                           
  1709                           	psect	text2
  1710  0963                     __ptext2:	
  1711 ;; *************** function _Lcd_WriteChar *****************
  1712 ;; Defined at:
  1713 ;;		line 99 in file "libs/HD44780.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  y               1    wreg     unsigned char 
  1716 ;;  x               1    4[BANK0 ] unsigned char 
  1717 ;;  c               1    5[BANK0 ] unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  y               1    7[BANK0 ] unsigned char 
  1720 ;;  data            1    8[BANK0 ] unsigned char 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       2       0       0       0
  1731 ;;      Locals:         0       2       0       0       0
  1732 ;;      Temps:          0       1       0       0       0
  1733 ;;      Totals:         0       5       0       0       0
  1734 ;;Total ram usage:        5 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    2
  1737 ;; This function calls:
  1738 ;;		_Lcd_CharCP
  1739 ;;		_Lcd_Command
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;;		_WriteLongInt
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _Lcd_WriteChar
  1748  0963                     _Lcd_WriteChar:	
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1752                           ;Lcd_WriteChar@y stored from wreg
  1753  0963  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0964  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0965  00A7               	movwf	Lcd_WriteChar@y
  1756                           
  1757                           ;HD44780.c: 100: unsigned char data;
  1758                           ;HD44780.c: 101: switch(y){
  1759  0966  2976               	goto	l2326
  1760  0967                     l2316:	
  1761                           ;HD44780.c: 102: case 1: data = 127 + x; break;
  1762                           
  1763  0967  0824               	movf	Lcd_WriteChar@x,w
  1764  0968  3E7F               	addlw	127
  1765  0969  2972               	goto	L4
  1766  096A                     l2318:	
  1767                           ;HD44780.c: 103: case 2: data = 191 + x; break;
  1768                           
  1769  096A  0824               	movf	Lcd_WriteChar@x,w
  1770  096B  3EBF               	addlw	191
  1771  096C  2972               	goto	L4
  1772  096D                     l2320:	
  1773                           ;HD44780.c: 104: case 3: data = 147 + x; break;
  1774                           
  1775  096D  0824               	movf	Lcd_WriteChar@x,w
  1776  096E  3E93               	addlw	147
  1777  096F  2972               	goto	L4
  1778  0970                     l2322:	
  1779                           ;HD44780.c: 105: case 4: data = 211 + x; break;
  1780                           
  1781  0970  0824               	movf	Lcd_WriteChar@x,w
  1782  0971  3ED3               	addlw	211
  1783  0972                     L4:	
  1784  0972  00A6               	movwf	??_Lcd_WriteChar
  1785  0973  0826               	movf	??_Lcd_WriteChar,w
  1786  0974  00A8               	movwf	Lcd_WriteChar@data
  1787                           
  1788                           ;HD44780.c: 106: default: break;}
  1789  0975  2984               	goto	l2328
  1790  0976                     l2326:	
  1791  0976  0827               	movf	Lcd_WriteChar@y,w
  1792                           
  1793                           ; Switch size 1, requested type "space"
  1794                           ; Number of cases is 4, Range of values is 1 to 4
  1795                           ; switch strategies available:
  1796                           ; Name         Instructions Cycles
  1797                           ; simple_byte           13     7 (average)
  1798                           ; direct_byte           23    11 (fixed)
  1799                           ; jumptable            263     9 (fixed)
  1800                           ;	Chosen strategy is simple_byte
  1801  0977  3A01               	xorlw	1	; case 1
  1802  0978  1903               	skipnz
  1803  0979  2967               	goto	l2316
  1804  097A  3A03               	xorlw	3	; case 2
  1805  097B  1903               	skipnz
  1806  097C  296A               	goto	l2318
  1807  097D  3A01               	xorlw	1	; case 3
  1808  097E  1903               	skipnz
  1809  097F  296D               	goto	l2320
  1810  0980  3A07               	xorlw	7	; case 4
  1811  0981  1903               	skipnz
  1812  0982  2970               	goto	l2322
  1813  0983  2984               	goto	l2328
  1814  0984                     l2328:	
  1815                           
  1816                           ;HD44780.c: 107: Lcd_Command(data);
  1817  0984  0828               	movf	Lcd_WriteChar@data,w
  1818  0985  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  1819                           
  1820                           ;HD44780.c: 108: Lcd_CharCP(c);
  1821  098A  1283               	bcf	3,5	;RP0=0, select bank0
  1822  098B  1303               	bcf	3,6	;RP1=0, select bank0
  1823  098C  0825               	movf	Lcd_WriteChar@c,w
  1824  098D  120A  118A  2014   	fcall	_Lcd_CharCP
  1825  0990  0008               	return
  1826  0991                     __end_of_Lcd_WriteChar:	
  1827                           
  1828                           	psect	text3
  1829  0D5A                     __ptext3:	
  1830 ;; *************** function _UART_ReadValidTimeFromGPS_TO *****************
  1831 ;; Defined at:
  1832 ;;		line 114 in file "libs/gsk_usart.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  Output          1    wreg     PTR unsigned char 
  1835 ;;		 -> main@Data(6), 
  1836 ;;  TimeOut         1    9[COMMON] unsigned char 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  Output          1   12[COMMON] PTR unsigned char 
  1839 ;;		 -> main@Data(6), 
  1840 ;;  Result          1   11[COMMON] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      unsigned char 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1850 ;;      Params:         1       0       0       0       0
  1851 ;;      Locals:         2       0       0       0       0
  1852 ;;      Temps:          1       0       0       0       0
  1853 ;;      Totals:         4       0       0       0       0
  1854 ;;Total ram usage:        4 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    2
  1857 ;; This function calls:
  1858 ;;		_UART_ReadFromGPS_TO
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _UART_ReadValidTimeFromGPS_TO
  1866  0D5A                     _UART_ReadValidTimeFromGPS_TO:	
  1867                           
  1868                           ;incstack = 0
  1869                           ; Regs used in _UART_ReadValidTimeFromGPS_TO: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
  1870                           ;UART_ReadValidTimeFromGPS_TO@Output stored from wreg
  1871  0D5A  00FC               	movwf	UART_ReadValidTimeFromGPS_TO@Output
  1872                           
  1873                           ;gsk_usart.c: 115: char Result = 0x01;
  1874  0D5B  01FB               	clrf	UART_ReadValidTimeFromGPS_TO@Result
  1875  0D5C  0AFB               	incf	UART_ReadValidTimeFromGPS_TO@Result,f
  1876                           
  1877                           ;gsk_usart.c: 116: UART_ReadFromGPS_TO (Output, TimeOut);
  1878  0D5D  0879               	movf	UART_ReadValidTimeFromGPS_TO@TimeOut,w
  1879  0D5E  00FA               	movwf	??_UART_ReadValidTimeFromGPS_TO
  1880  0D5F  087A               	movf	??_UART_ReadValidTimeFromGPS_TO,w
  1881  0D60  00F1               	movwf	UART_ReadFromGPS_TO@TimeOut
  1882  0D61  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1883  0D62  120A  158A  23E4  120A  158A  	fcall	_UART_ReadFromGPS_TO
  1884                           
  1885                           ;gsk_usart.c: 117: if (Output[0]<0x30 || Output[0]>0x32)
  1886  0D67  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1887  0D68  0084               	movwf	4
  1888  0D69  3030               	movlw	48
  1889  0D6A  1383               	bcf	3,7	;select IRP bank0
  1890  0D6B  0200               	subwf	0,w
  1891  0D6C  1C03               	skipc
  1892  0D6D  2D73               	goto	l2716
  1893  0D6E  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1894  0D6F  0084               	movwf	4
  1895  0D70  3033               	movlw	51
  1896  0D71  0200               	subwf	0,w
  1897  0D72  1803               	btfsc	3,0
  1898  0D73                     l2716:	
  1899                           
  1900                           ;gsk_usart.c: 118: Result = 0x00;
  1901  0D73  01FB               	clrf	UART_ReadValidTimeFromGPS_TO@Result
  1902                           
  1903                           ;gsk_usart.c: 119: if (Output[1]<0x30 || Output[1]>0x39)
  1904  0D74  0A7C               	incf	UART_ReadValidTimeFromGPS_TO@Output,w
  1905  0D75  0084               	movwf	4
  1906  0D76  3030               	movlw	48
  1907  0D77  0200               	subwf	0,w
  1908  0D78  1C03               	skipc
  1909  0D79  2D7F               	goto	l2722
  1910  0D7A  0A7C               	incf	UART_ReadValidTimeFromGPS_TO@Output,w
  1911  0D7B  0084               	movwf	4
  1912  0D7C  303A               	movlw	58
  1913  0D7D  0200               	subwf	0,w
  1914  0D7E  1803               	btfsc	3,0
  1915  0D7F                     l2722:	
  1916                           
  1917                           ;gsk_usart.c: 120: Result = 0x00;
  1918  0D7F  01FB               	clrf	UART_ReadValidTimeFromGPS_TO@Result
  1919                           
  1920                           ;gsk_usart.c: 121: if (Output[2]<0x30 || Output[2]>0x36)
  1921  0D80  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1922  0D81  3E02               	addlw	2
  1923  0D82  0084               	movwf	4
  1924  0D83  3030               	movlw	48
  1925  0D84  0200               	subwf	0,w
  1926  0D85  1C03               	skipc
  1927  0D86  2D8D               	goto	l2728
  1928  0D87  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1929  0D88  3E02               	addlw	2
  1930  0D89  0084               	movwf	4
  1931  0D8A  3037               	movlw	55
  1932  0D8B  0200               	subwf	0,w
  1933  0D8C  1803               	btfsc	3,0
  1934  0D8D                     l2728:	
  1935                           
  1936                           ;gsk_usart.c: 122: Result = 0x00;
  1937  0D8D  01FB               	clrf	UART_ReadValidTimeFromGPS_TO@Result
  1938                           
  1939                           ;gsk_usart.c: 123: if (Output[3]<0x30 || Output[3]>0x39)
  1940  0D8E  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1941  0D8F  3E03               	addlw	3
  1942  0D90  0084               	movwf	4
  1943  0D91  3030               	movlw	48
  1944  0D92  0200               	subwf	0,w
  1945  0D93  1C03               	skipc
  1946  0D94  2D9B               	goto	l2734
  1947  0D95  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1948  0D96  3E03               	addlw	3
  1949  0D97  0084               	movwf	4
  1950  0D98  303A               	movlw	58
  1951  0D99  0200               	subwf	0,w
  1952  0D9A  1803               	btfsc	3,0
  1953  0D9B                     l2734:	
  1954                           
  1955                           ;gsk_usart.c: 124: Result = 0x00;
  1956  0D9B  01FB               	clrf	UART_ReadValidTimeFromGPS_TO@Result
  1957                           
  1958                           ;gsk_usart.c: 125: if (Output[4]<0x30 || Output[4]>0x36)
  1959  0D9C  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1960  0D9D  3E04               	addlw	4
  1961  0D9E  0084               	movwf	4
  1962  0D9F  3030               	movlw	48
  1963  0DA0  0200               	subwf	0,w
  1964  0DA1  1C03               	skipc
  1965  0DA2  2DA9               	goto	l2740
  1966  0DA3  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1967  0DA4  3E04               	addlw	4
  1968  0DA5  0084               	movwf	4
  1969  0DA6  3037               	movlw	55
  1970  0DA7  0200               	subwf	0,w
  1971  0DA8  1803               	btfsc	3,0
  1972  0DA9                     l2740:	
  1973                           
  1974                           ;gsk_usart.c: 126: Result = 0x00;
  1975  0DA9  01FB               	clrf	UART_ReadValidTimeFromGPS_TO@Result
  1976                           
  1977                           ;gsk_usart.c: 127: if (Output[5]<0x30 || Output[5]>0x39)
  1978  0DAA  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1979  0DAB  3E05               	addlw	5
  1980  0DAC  0084               	movwf	4
  1981  0DAD  3030               	movlw	48
  1982  0DAE  0200               	subwf	0,w
  1983  0DAF  1C03               	skipc
  1984  0DB0  2DB7               	goto	l2746
  1985  0DB1  087C               	movf	UART_ReadValidTimeFromGPS_TO@Output,w
  1986  0DB2  3E05               	addlw	5
  1987  0DB3  0084               	movwf	4
  1988  0DB4  303A               	movlw	58
  1989  0DB5  0200               	subwf	0,w
  1990  0DB6  1803               	btfsc	3,0
  1991  0DB7                     l2746:	
  1992                           
  1993                           ;gsk_usart.c: 128: Result = 0x00;
  1994  0DB7  01FB               	clrf	UART_ReadValidTimeFromGPS_TO@Result
  1995                           
  1996                           ;gsk_usart.c: 129: return Result;
  1997  0DB8  087B               	movf	UART_ReadValidTimeFromGPS_TO@Result,w
  1998  0DB9  0008               	return
  1999  0DBA                     __end_of_UART_ReadValidTimeFromGPS_TO:	
  2000                           
  2001                           	psect	text4
  2002  0BE4                     __ptext4:	
  2003 ;; *************** function _UART_ReadFromGPS_TO *****************
  2004 ;; Defined at:
  2005 ;;		line 80 in file "libs/gsk_usart.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  Output          1    wreg     PTR unsigned char 
  2008 ;;		 -> main@Data(6), 
  2009 ;;  TimeOut         1    1[COMMON] unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  Output          1    6[COMMON] PTR unsigned char 
  2012 ;;		 -> main@Data(6), 
  2013 ;;  i               2    4[COMMON] unsigned int 
  2014 ;;  Pos             1    8[COMMON] unsigned char 
  2015 ;;  TempChar        1    7[COMMON] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         1       0       0       0       0
  2026 ;;      Locals:         5       0       0       0       0
  2027 ;;      Temps:          2       0       0       0       0
  2028 ;;      Totals:         8       0       0       0       0
  2029 ;;Total ram usage:        8 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    1
  2032 ;; This function calls:
  2033 ;;		_UART_Read_TO
  2034 ;; This function is called by:
  2035 ;;		_UART_ReadValidTimeFromGPS_TO
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _UART_ReadFromGPS_TO
  2041  0BE4                     _UART_ReadFromGPS_TO:	
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in _UART_ReadFromGPS_TO: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2045                           ;UART_ReadFromGPS_TO@Output stored from wreg
  2046  0BE4  00F6               	movwf	UART_ReadFromGPS_TO@Output
  2047                           
  2048                           ;gsk_usart.c: 81: Output[0]=0x00;
  2049  0BE5  0876               	movf	UART_ReadFromGPS_TO@Output,w
  2050  0BE6  0084               	movwf	4
  2051  0BE7  1383               	bcf	3,7	;select IRP bank0
  2052  0BE8  0180               	clrf	0
  2053                           
  2054                           ;gsk_usart.c: 82: const char StartCode[7]="$GPRMC,";
  2055                           ;gsk_usart.c: 83: char Pos=0x00;
  2056  0BE9  01F8               	clrf	UART_ReadFromGPS_TO@Pos
  2057                           
  2058                           ;gsk_usart.c: 84: char TempChar = 0x00;
  2059  0BEA  01F7               	clrf	UART_ReadFromGPS_TO@TempChar
  2060                           
  2061                           ;gsk_usart.c: 85: CREN = 0;
  2062  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0BED  1218               	bcf	24,4	;volatile
  2065                           
  2066                           ;gsk_usart.c: 86: CREN = 1;
  2067  0BEE  1618               	bsf	24,4	;volatile
  2068                           
  2069                           ;gsk_usart.c: 87: for(uint16_t i=0; i<=768; i++) {
  2070  0BEF  01F4               	clrf	UART_ReadFromGPS_TO@i
  2071  0BF0  01F5               	clrf	UART_ReadFromGPS_TO@i+1
  2072  0BF1  3003               	movlw	3
  2073  0BF2  0275               	subwf	UART_ReadFromGPS_TO@i+1,w
  2074  0BF3  3001               	movlw	1
  2075  0BF4  1903               	skipnz
  2076  0BF5  0274               	subwf	UART_ReadFromGPS_TO@i,w
  2077  0BF6  1803               	btfsc	3,0
  2078  0BF7  2C3B               	goto	l126
  2079  0BF8                     l2354:	
  2080                           
  2081                           ;gsk_usart.c: 89: TempChar = UART_Read_TO(TimeOut);
  2082  0BF8  0871               	movf	UART_ReadFromGPS_TO@TimeOut,w
  2083  0BF9  120A  158A  20F1  120A  158A  	fcall	_UART_Read_TO
  2084  0BFE  00F2               	movwf	??_UART_ReadFromGPS_TO
  2085  0BFF  0872               	movf	??_UART_ReadFromGPS_TO,w
  2086  0C00  00F7               	movwf	UART_ReadFromGPS_TO@TempChar
  2087                           
  2088                           ;gsk_usart.c: 90: if ((Pos>=0x07) & (Pos<=0x0c)) {
  2089  0C01  3007               	movlw	7
  2090  0C02  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2091  0C03  1C03               	skipc
  2092  0C04  2C15               	goto	l2364
  2093  0C05  300D               	movlw	13
  2094  0C06  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2095  0C07  1803               	skipnc
  2096  0C08  2C15               	goto	l2364
  2097                           
  2098                           ;gsk_usart.c: 91: Output[Pos-0x07]= TempChar;
  2099  0C09  0877               	movf	UART_ReadFromGPS_TO@TempChar,w
  2100  0C0A  00F2               	movwf	??_UART_ReadFromGPS_TO
  2101  0C0B  0878               	movf	UART_ReadFromGPS_TO@Pos,w
  2102  0C0C  3EF9               	addlw	-7
  2103  0C0D  0776               	addwf	UART_ReadFromGPS_TO@Output,w
  2104  0C0E  00F3               	movwf	??_UART_ReadFromGPS_TO+1
  2105  0C0F  0873               	movf	??_UART_ReadFromGPS_TO+1,w
  2106  0C10  0084               	movwf	4
  2107  0C11  0872               	movf	??_UART_ReadFromGPS_TO,w
  2108  0C12  1383               	bcf	3,7	;select IRP bank0
  2109  0C13  0080               	movwf	0
  2110  0C14  2C24               	goto	l2368
  2111  0C15                     l2364:	
  2112                           ;gsk_usart.c: 93: } else if ((StartCode[Pos] == TempChar) && (Pos<0x07)) {
  2113                           
  2114                           ;gsk_usart.c: 92: Pos++;
  2115                           
  2116  0C15  0878               	movf	UART_ReadFromGPS_TO@Pos,w
  2117  0C16  3E08               	addlw	low ((UART_ReadFromGPS_TO@StartCode-__stringbase)| (0+32768))
  2118  0C17  0084               	movwf	4
  2119  0C18  120A  158A  2000  120A  158A  	fcall	stringdir
  2120  0C1D  0677               	xorwf	UART_ReadFromGPS_TO@TempChar,w
  2121  0C1E  1D03               	skipz
  2122  0C1F  2C29               	goto	l2370
  2123  0C20  3007               	movlw	7
  2124  0C21  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2125  0C22  1803               	skipnc
  2126  0C23  2C29               	goto	l2370
  2127  0C24                     l2368:	
  2128                           
  2129                           ;gsk_usart.c: 94: Pos++;
  2130  0C24  3001               	movlw	1
  2131  0C25  00F2               	movwf	??_UART_ReadFromGPS_TO
  2132  0C26  0872               	movf	??_UART_ReadFromGPS_TO,w
  2133  0C27  07F8               	addwf	UART_ReadFromGPS_TO@Pos,f
  2134                           
  2135                           ;gsk_usart.c: 95: } else if (Pos>0x0c)
  2136  0C28  2C2E               	goto	l2378
  2137  0C29                     l2370:	
  2138  0C29  300D               	movlw	13
  2139  0C2A  0278               	subwf	UART_ReadFromGPS_TO@Pos,w
  2140  0C2B  1803               	btfsc	3,0
  2141  0C2C  0008               	return
  2142                           
  2143                           ;gsk_usart.c: 97: else
  2144                           ;gsk_usart.c: 98: Pos=0;
  2145                           
  2146                           ;gsk_usart.c: 96: return;
  2147  0C2D  01F8               	clrf	UART_ReadFromGPS_TO@Pos
  2148  0C2E                     l2378:	
  2149  0C2E  3001               	movlw	1
  2150  0C2F  07F4               	addwf	UART_ReadFromGPS_TO@i,f
  2151  0C30  1803               	skipnc
  2152  0C31  0AF5               	incf	UART_ReadFromGPS_TO@i+1,f
  2153  0C32  3000               	movlw	0
  2154  0C33  07F5               	addwf	UART_ReadFromGPS_TO@i+1,f
  2155  0C34  3003               	movlw	3
  2156  0C35  0275               	subwf	UART_ReadFromGPS_TO@i+1,w
  2157  0C36  3001               	movlw	1
  2158  0C37  1903               	skipnz
  2159  0C38  0274               	subwf	UART_ReadFromGPS_TO@i,w
  2160  0C39  1C03               	skipc
  2161  0C3A  2BF8               	goto	l2354
  2162  0C3B                     l126:	
  2163                           
  2164                           ;gsk_usart.c: 99: }
  2165                           ;gsk_usart.c: 100: CREN = 0;
  2166  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0C3D  1218               	bcf	24,4	;volatile
  2169  0C3E  0008               	return
  2170  0C3F                     __end_of_UART_ReadFromGPS_TO:	
  2171                           
  2172                           	psect	text5
  2173  08F1                     __ptext5:	
  2174 ;; *************** function _UART_Read_TO *****************
  2175 ;; Defined at:
  2176 ;;		line 103 in file "libs/gsk_usart.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  TimeOut         1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  TimeOut         1    0[COMMON] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      unsigned char 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         1       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0
  2193 ;;      Totals:         1       0       0       0       0
  2194 ;;Total ram usage:        1 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_UART_ReadFromGPS_TO
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _UART_Read_TO
  2205  08F1                     _UART_Read_TO:	
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _UART_Read_TO: [wreg+status,2+status,0]
  2209                           ;UART_Read_TO@TimeOut stored from wreg
  2210  08F1  00F0               	movwf	UART_Read_TO@TimeOut
  2211                           
  2212                           ;gsk_usart.c: 104: while(!RCIF && TimeOut !=0) {
  2213  08F2  28F6               	goto	l2050
  2214  08F3                     l137:	
  2215                           
  2216                           ;gsk_usart.c: 105: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2217  08F3  0000               	nop
  2218                           
  2219                           ;gsk_usart.c: 106: TimeOut--;
  2220  08F4  3001               	movlw	1
  2221  08F5  02F0               	subwf	UART_Read_TO@TimeOut,f
  2222  08F6                     l2050:	
  2223  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  2224  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  2225  08F8  1A8C               	btfsc	12,5	;volatile
  2226  08F9  28FD               	goto	l140
  2227  08FA  0870               	movf	UART_Read_TO@TimeOut,w
  2228  08FB  1D03               	btfss	3,2
  2229  08FC  28F3               	goto	l137
  2230  08FD                     l140:	
  2231                           
  2232                           ;gsk_usart.c: 107: }
  2233                           ;gsk_usart.c: 108: if (RCIF)
  2234  08FD  1E8C               	btfss	12,5	;volatile
  2235  08FE  2901               	goto	l2060
  2236                           
  2237                           ;gsk_usart.c: 109: return RCREG;
  2238  08FF  081A               	movf	26,w	;volatile
  2239  0900  0008               	return
  2240  0901                     l2060:	
  2241                           
  2242                           ;gsk_usart.c: 110: else
  2243                           ;gsk_usart.c: 111: return 0x41;
  2244  0901  3041               	movlw	65
  2245  0902  0008               	return
  2246  0903                     __end_of_UART_Read_TO:	
  2247                           
  2248                           	psect	text6
  2249  0173                     __ptext6:	
  2250 ;; *************** function _UART_Init *****************
  2251 ;; Defined at:
  2252 ;;		line 3 in file "libs/gsk_usart.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  baudrate        4    0[BANK1 ] const long 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  x               2   10[BANK1 ] unsigned int 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      unsigned char 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         0       0       4       0       0
  2267 ;;      Locals:         0       0       8       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         0       0      12       0       0
  2270 ;;Total ram usage:       12 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    4
  2273 ;; This function calls:
  2274 ;;		___altoft
  2275 ;;		___ftadd
  2276 ;;		___ftdiv
  2277 ;;		___ftmul
  2278 ;;		___fttol
  2279 ;;		_round
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _UART_Init
  2287  0173                     _UART_Init:	
  2288                           
  2289                           ;gsk_usart.c: 4: uint16_t x;
  2290                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2294  0173  3024               	movlw	36
  2295  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0176  00B5               	movwf	___ftdiv@f1
  2298  0177  3074               	movlw	116
  2299  0178  00B6               	movwf	___ftdiv@f1+1
  2300  0179  304A               	movlw	74
  2301  017A  00B7               	movwf	___ftdiv@f1+2
  2302  017B  1683               	bsf	3,5	;RP0=1, select bank1
  2303  017C  1303               	bcf	3,6	;RP1=0, select bank1
  2304  017D  0823               	movf	(UART_Init@baudrate+3)^(0+128),w
  2305  017E  00FB               	movwf	___altoft@c+3
  2306  017F  0822               	movf	(UART_Init@baudrate+2)^(0+128),w
  2307  0180  00FA               	movwf	___altoft@c+2
  2308  0181  0821               	movf	(UART_Init@baudrate+1)^(0+128),w
  2309  0182  00F9               	movwf	___altoft@c+1
  2310  0183  0820               	movf	UART_Init@baudrate^(0+128),w
  2311  0184  00F8               	movwf	___altoft@c
  2312  0185  120A  158A  22BC  120A  118A  	fcall	___altoft
  2313  018A  0878               	movf	?___altoft,w
  2314  018B  1283               	bcf	3,5	;RP0=0, select bank0
  2315  018C  1303               	bcf	3,6	;RP1=0, select bank0
  2316  018D  00A5               	movwf	___ftmul@f2
  2317  018E  0879               	movf	?___altoft+1,w
  2318  018F  00A6               	movwf	___ftmul@f2+1
  2319  0190  087A               	movf	?___altoft+2,w
  2320  0191  00A7               	movwf	___ftmul@f2+2
  2321  0192  3000               	movlw	0
  2322  0193  00A2               	movwf	___ftmul@f1
  2323  0194  3080               	movlw	128
  2324  0195  00A3               	movwf	___ftmul@f1+1
  2325  0196  3040               	movlw	64
  2326  0197  00A4               	movwf	___ftmul@f1+2
  2327  0198  120A  118A  23A2  120A  118A  	fcall	___ftmul
  2328  019D  1283               	bcf	3,5	;RP0=0, select bank0
  2329  019E  1303               	bcf	3,6	;RP1=0, select bank0
  2330  019F  0822               	movf	?___ftmul,w
  2331  01A0  00B2               	movwf	___ftdiv@f2
  2332  01A1  0823               	movf	?___ftmul+1,w
  2333  01A2  00B3               	movwf	___ftdiv@f2+1
  2334  01A3  0824               	movf	?___ftmul+2,w
  2335  01A4  00B4               	movwf	___ftdiv@f2+2
  2336  01A5  120A  118A  222A  120A  118A  	fcall	___ftdiv
  2337  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2338  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2339  01AC  0832               	movf	?___ftdiv,w
  2340  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2341  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2342  01AF  00A4               	movwf	_UART_Init$804^(0+128)
  2343  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2344  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2345  01B2  0833               	movf	?___ftdiv+1,w
  2346  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2347  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2348  01B5  00A5               	movwf	(_UART_Init$804+1)^(0+128)
  2349  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2350  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2351  01B8  0834               	movf	?___ftdiv+2,w
  2352  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  2353  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  2354  01BB  00A6               	movwf	(_UART_Init$804+2)^(0+128)
  2355                           
  2356                           ;gsk_usart.c: 4: uint16_t x;
  2357                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  2358  01BC  0824               	movf	_UART_Init$804^(0+128),w
  2359  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2360  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2361  01BF  00E9               	movwf	round@x
  2362  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2363  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  2364  01C2  0825               	movf	(_UART_Init$804+1)^(0+128),w
  2365  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2366  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2367  01C5  00EA               	movwf	round@x+1
  2368  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2369  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2370  01C8  0826               	movf	(_UART_Init$804+2)^(0+128),w
  2371  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2372  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2373  01CB  00EB               	movwf	round@x+2
  2374  01CC  120A  158A  24FA  120A  118A  	fcall	_round
  2375  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2376  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  2377  01D3  0869               	movf	?_round,w
  2378  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  2379  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  2380  01D6  00A7               	movwf	_UART_Init$805^(0+128)
  2381  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2382  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2383  01D9  086A               	movf	?_round+1,w
  2384  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  2385  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  2386  01DC  00A8               	movwf	(_UART_Init$805+1)^(0+128)
  2387  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2388  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2389  01DF  086B               	movf	?_round+2,w
  2390  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2391  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2392  01E2  00A9               	movwf	(_UART_Init$805+2)^(0+128)
  2393                           
  2394                           ;gsk_usart.c: 4: uint16_t x;
  2395                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  2396  01E3  0827               	movf	_UART_Init$805^(0+128),w
  2397  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2398  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2399  01E6  00C5               	movwf	___ftadd@f2
  2400  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2401  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  2402  01E9  0828               	movf	(_UART_Init$805+1)^(0+128),w
  2403  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2404  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2405  01EC  00C6               	movwf	___ftadd@f2+1
  2406  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2407  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2408  01EF  0829               	movf	(_UART_Init$805+2)^(0+128),w
  2409  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2410  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2411  01F2  00C7               	movwf	___ftadd@f2+2
  2412  01F3  3000               	movlw	0
  2413  01F4  00C2               	movwf	___ftadd@f1
  2414  01F5  3080               	movlw	128
  2415  01F6  00C3               	movwf	___ftadd@f1+1
  2416  01F7  30BF               	movlw	191
  2417  01F8  00C4               	movwf	___ftadd@f1+2
  2418  01F9  120A  118A  2475  120A  118A  	fcall	___ftadd
  2419  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2420  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0200  0842               	movf	?___ftadd,w
  2422  0201  00CF               	movwf	___fttol@f1
  2423  0202  0843               	movf	?___ftadd+1,w
  2424  0203  00D0               	movwf	___fttol@f1+1
  2425  0204  0844               	movf	?___ftadd+2,w
  2426  0205  00D1               	movwf	___fttol@f1+2
  2427  0206  120A  158A  2626   	fcall	___fttol
  2428  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2429  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2430  020B  0850               	movf	?___fttol+1,w
  2431  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2432  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2433  020E  00AB               	movwf	(UART_Init@x+1)^(0+128)
  2434  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0211  084F               	movf	?___fttol,w
  2437  0212  1683               	bsf	3,5	;RP0=1, select bank1
  2438  0213  1303               	bcf	3,6	;RP1=0, select bank1
  2439  0214  00AA               	movwf	UART_Init@x^(0+128)
  2440                           
  2441                           ;gsk_usart.c: 6: SPBRG = x;
  2442  0215  082A               	movf	UART_Init@x^(0+128),w
  2443  0216  0099               	movwf	25	;volatile
  2444                           
  2445                           ;gsk_usart.c: 7: SPBRGH = (x>>8);
  2446  0217  082B               	movf	(UART_Init@x+1)^(0+128),w
  2447  0218  009A               	movwf	26	;volatile
  2448                           
  2449                           ;gsk_usart.c: 8: BRGH = 1;
  2450  0219  1518               	bsf	24,2	;volatile
  2451                           
  2452                           ;gsk_usart.c: 9: BRG16 = 1;
  2453  021A  1683               	bsf	3,5	;RP0=1, select bank3
  2454  021B  1703               	bsf	3,6	;RP1=1, select bank3
  2455  021C  1587               	bsf	7,3	;volatile
  2456                           
  2457                           ;gsk_usart.c: 10: CREN = 1;
  2458  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2459  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2460  021F  1618               	bsf	24,4	;volatile
  2461                           
  2462                           ;gsk_usart.c: 11: SYNC = 0;
  2463  0220  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0221  1303               	bcf	3,6	;RP1=0, select bank1
  2465  0222  1218               	bcf	24,4	;volatile
  2466                           
  2467                           ;gsk_usart.c: 12: SPEN = 1;
  2468  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0225  1798               	bsf	24,7	;volatile
  2471                           
  2472                           ;gsk_usart.c: 15: TXEN = 1;
  2473  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0228  1698               	bsf	24,5	;volatile
  2476  0229  0008               	return
  2477  022A                     __end_of_UART_Init:	
  2478                           ;gsk_usart.c: 16: return 1;
  2479                           ;	Return value of _UART_Init is never used
  2480                           
  2481                           
  2482                           	psect	text7
  2483  0CFA                     __ptext7:	
  2484 ;; *************** function _round *****************
  2485 ;; Defined at:
  2486 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\round.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  x               3   73[BANK0 ] unsigned char 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  f               3   76[BANK0 ] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  3   73[BANK0 ] unsigned char 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         0       3       0       0       0
  2501 ;;      Locals:         0       3       0       0       0
  2502 ;;      Temps:          0       0       0       0       0
  2503 ;;      Totals:         0       6       0       0       0
  2504 ;;Total ram usage:        6 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    3
  2507 ;; This function calls:
  2508 ;;		___ftadd
  2509 ;;		___ftneg
  2510 ;;		_trunc
  2511 ;; This function is called by:
  2512 ;;		_UART_Init
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _round
  2518  0CFA                     _round:	
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2522  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0CFC  0869               	movf	round@x,w
  2525  0CFD  00C2               	movwf	___ftadd@f1
  2526  0CFE  086A               	movf	round@x+1,w
  2527  0CFF  00C3               	movwf	___ftadd@f1+1
  2528  0D00  086B               	movf	round@x+2,w
  2529  0D01  00C4               	movwf	___ftadd@f1+2
  2530  0D02  0869               	movf	round@x,w
  2531  0D03  00DD               	movwf	trunc@x
  2532  0D04  086A               	movf	round@x+1,w
  2533  0D05  00DE               	movwf	trunc@x+1
  2534  0D06  086B               	movf	round@x+2,w
  2535  0D07  00DF               	movwf	trunc@x+2
  2536  0D08  120A  158A  2341  120A  158A  	fcall	_trunc
  2537  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0D0F  085D               	movf	?_trunc,w
  2540  0D10  00E6               	movwf	___ftneg@f1
  2541  0D11  085E               	movf	?_trunc+1,w
  2542  0D12  00E7               	movwf	___ftneg@f1+1
  2543  0D13  085F               	movf	?_trunc+2,w
  2544  0D14  00E8               	movwf	___ftneg@f1+2
  2545  0D15  120A  118A  200A  120A  158A  	fcall	___ftneg
  2546  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0D1C  0866               	movf	?___ftneg,w
  2549  0D1D  00C5               	movwf	___ftadd@f2
  2550  0D1E  0867               	movf	?___ftneg+1,w
  2551  0D1F  00C6               	movwf	___ftadd@f2+1
  2552  0D20  0868               	movf	?___ftneg+2,w
  2553  0D21  00C7               	movwf	___ftadd@f2+2
  2554  0D22  120A  118A  2475  120A  158A  	fcall	___ftadd
  2555  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0D29  0842               	movf	?___ftadd,w
  2558  0D2A  00EC               	movwf	round@f
  2559  0D2B  0843               	movf	?___ftadd+1,w
  2560  0D2C  00ED               	movwf	round@f+1
  2561  0D2D  0844               	movf	?___ftadd+2,w
  2562  0D2E  00EE               	movwf	round@f+2
  2563  0D2F  086C               	movf	round@f,w
  2564  0D30  00C2               	movwf	___ftadd@f1
  2565  0D31  086D               	movf	round@f+1,w
  2566  0D32  00C3               	movwf	___ftadd@f1+1
  2567  0D33  086E               	movf	round@f+2,w
  2568  0D34  00C4               	movwf	___ftadd@f1+2
  2569  0D35  0869               	movf	round@x,w
  2570  0D36  00C5               	movwf	___ftadd@f2
  2571  0D37  086A               	movf	round@x+1,w
  2572  0D38  00C6               	movwf	___ftadd@f2+1
  2573  0D39  086B               	movf	round@x+2,w
  2574  0D3A  00C7               	movwf	___ftadd@f2+2
  2575  0D3B  120A  118A  2475  120A  158A  	fcall	___ftadd
  2576  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0D42  0842               	movf	?___ftadd,w
  2579  0D43  00E9               	movwf	round@x
  2580  0D44  0843               	movf	?___ftadd+1,w
  2581  0D45  00EA               	movwf	round@x+1
  2582  0D46  0844               	movf	?___ftadd+2,w
  2583  0D47  00EB               	movwf	round@x+2
  2584  0D48  0869               	movf	round@x,w
  2585  0D49  00DD               	movwf	trunc@x
  2586  0D4A  086A               	movf	round@x+1,w
  2587  0D4B  00DE               	movwf	trunc@x+1
  2588  0D4C  086B               	movf	round@x+2,w
  2589  0D4D  00DF               	movwf	trunc@x+2
  2590  0D4E  120A  158A  2341   	fcall	_trunc
  2591  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0D53  085D               	movf	?_trunc,w
  2594  0D54  00E9               	movwf	?_round
  2595  0D55  085E               	movf	?_trunc+1,w
  2596  0D56  00EA               	movwf	?_round+1
  2597  0D57  085F               	movf	?_trunc+2,w
  2598  0D58  00EB               	movwf	?_round+2
  2599  0D59  0008               	return
  2600  0D5A                     __end_of_round:	
  2601                           
  2602                           	psect	text8
  2603  0B41                     __ptext8:	
  2604 ;; *************** function _trunc *****************
  2605 ;; Defined at:
  2606 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\trunc.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  x               3   61[BANK0 ] unsigned char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  i               3   65[BANK0 ] unsigned char 
  2611 ;;  expon           2   68[BANK0 ] int 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  3   61[BANK0 ] int 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       3       0       0       0
  2622 ;;      Locals:         0       5       0       0       0
  2623 ;;      Temps:          0       1       0       0       0
  2624 ;;      Totals:         0       9       0       0       0
  2625 ;;Total ram usage:        9 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    2
  2628 ;; This function calls:
  2629 ;;		___altoft
  2630 ;;		___fttol
  2631 ;;		_frexp
  2632 ;; This function is called by:
  2633 ;;		_round
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _trunc
  2639  0B41                     _trunc:	
  2640                           
  2641                           ;incstack = 0
  2642                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2643  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0B43  085D               	movf	trunc@x,w
  2646  0B44  00F0               	movwf	frexp@value
  2647  0B45  085E               	movf	trunc@x+1,w
  2648  0B46  00F1               	movwf	frexp@value+1
  2649  0B47  085F               	movf	trunc@x+2,w
  2650  0B48  00F2               	movwf	frexp@value+2
  2651  0B49  3064               	movlw	(low (trunc@expon| 0))& (0+255)
  2652  0B4A  00E0               	movwf	??_trunc
  2653  0B4B  0860               	movf	??_trunc,w
  2654  0B4C  00F3               	movwf	frexp@eptr
  2655  0B4D  120A  158A  21C7  120A  158A  	fcall	_frexp
  2656  0B52  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0B53  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0B54  1FE5               	btfss	trunc@expon+1,7
  2659  0B55  2B5D               	goto	l2304
  2660  0B56  3000               	movlw	0
  2661  0B57  00DD               	movwf	?_trunc
  2662  0B58  3000               	movlw	0
  2663  0B59  00DE               	movwf	?_trunc+1
  2664  0B5A  3000               	movlw	0
  2665  0B5B  00DF               	movwf	?_trunc+2
  2666  0B5C  0008               	return
  2667  0B5D                     l2304:	
  2668  0B5D  3000               	movlw	0
  2669  0B5E  0265               	subwf	trunc@expon+1,w
  2670  0B5F  3015               	movlw	21
  2671  0B60  1903               	skipnz
  2672  0B61  0264               	subwf	trunc@expon,w
  2673  0B62  1803               	btfsc	3,0
  2674  0B63  0008               	return
  2675  0B64  085D               	movf	trunc@x,w
  2676  0B65  00CF               	movwf	___fttol@f1
  2677  0B66  085E               	movf	trunc@x+1,w
  2678  0B67  00D0               	movwf	___fttol@f1+1
  2679  0B68  085F               	movf	trunc@x+2,w
  2680  0B69  00D1               	movwf	___fttol@f1+2
  2681  0B6A  120A  158A  2626  120A  158A  	fcall	___fttol
  2682  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0B71  0852               	movf	?___fttol+3,w
  2685  0B72  00FB               	movwf	___altoft@c+3
  2686  0B73  0851               	movf	?___fttol+2,w
  2687  0B74  00FA               	movwf	___altoft@c+2
  2688  0B75  0850               	movf	?___fttol+1,w
  2689  0B76  00F9               	movwf	___altoft@c+1
  2690  0B77  084F               	movf	?___fttol,w
  2691  0B78  00F8               	movwf	___altoft@c
  2692  0B79  120A  158A  22BC   	fcall	___altoft
  2693  0B7C  0878               	movf	?___altoft,w
  2694  0B7D  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0B7E  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0B7F  00E1               	movwf	trunc@i
  2697  0B80  0879               	movf	?___altoft+1,w
  2698  0B81  00E2               	movwf	trunc@i+1
  2699  0B82  087A               	movf	?___altoft+2,w
  2700  0B83  00E3               	movwf	trunc@i+2
  2701  0B84  0861               	movf	trunc@i,w
  2702  0B85  00DD               	movwf	?_trunc
  2703  0B86  0862               	movf	trunc@i+1,w
  2704  0B87  00DE               	movwf	?_trunc+1
  2705  0B88  0863               	movf	trunc@i+2,w
  2706  0B89  00DF               	movwf	?_trunc+2
  2707  0B8A  0008               	return
  2708  0B8B                     __end_of_trunc:	
  2709                           
  2710                           	psect	text9
  2711  09C7                     __ptext9:	
  2712 ;; *************** function _frexp *****************
  2713 ;; Defined at:
  2714 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  value           3    0[COMMON] int 
  2717 ;;  eptr            1    3[COMMON] PTR int 
  2718 ;;		 -> trunc@expon(2), 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  3    0[COMMON] PTR int 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         4       0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0
  2732 ;;      Temps:          2       0       0       0       0
  2733 ;;      Totals:         6       0       0       0       0
  2734 ;;Total ram usage:        6 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_trunc
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           
  2744                           ;psect for function _frexp
  2745  09C7                     _frexp:	
  2746                           
  2747                           ;incstack = 0
  2748                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  2749  09C7  0872               	movf	frexp@value+2,w
  2750  09C8  0471               	iorwf	frexp@value+1,w
  2751  09C9  0470               	iorwf	frexp@value,w
  2752  09CA  1D03               	skipz
  2753  09CB  29D3               	goto	l2008
  2754  09CC  0873               	movf	frexp@eptr,w
  2755  09CD  0084               	movwf	4
  2756  09CE  1383               	bcf	3,7	;select IRP bank0
  2757  09CF  0180               	clrf	0
  2758  09D0  0A84               	incf	4,f
  2759  09D1  0180               	clrf	0
  2760                           
  2761                           ;	Return value of _frexp is never used
  2762  09D2  0008               	return
  2763  09D3                     l2008:	
  2764  09D3  0872               	movf	frexp@value+2,w
  2765  09D4  397F               	andlw	127
  2766  09D5  00F4               	movwf	??_frexp
  2767  09D6  01F5               	clrf	??_frexp+1
  2768  09D7  1003               	clrc
  2769  09D8  0DF4               	rlf	??_frexp,f
  2770  09D9  0DF5               	rlf	??_frexp+1,f
  2771  09DA  0873               	movf	frexp@eptr,w
  2772  09DB  0084               	movwf	4
  2773  09DC  0874               	movf	??_frexp,w
  2774  09DD  1383               	bcf	3,7	;select IRP bank0
  2775  09DE  0080               	movwf	0
  2776  09DF  0A84               	incf	4,f
  2777  09E0  0875               	movf	??_frexp+1,w
  2778  09E1  0080               	movwf	0
  2779  09E2  0D71               	rlf	frexp@value+1,w
  2780  09E3  0D71               	rlf	frexp@value+1,w
  2781  09E4  3901               	andlw	1
  2782  09E5  00F4               	movwf	??_frexp
  2783  09E6  01F5               	clrf	??_frexp+1
  2784  09E7  0873               	movf	frexp@eptr,w
  2785  09E8  0084               	movwf	4
  2786  09E9  0874               	movf	??_frexp,w
  2787  09EA  0480               	iorwf	0,f
  2788  09EB  0A84               	incf	4,f
  2789  09EC  0875               	movf	??_frexp+1,w
  2790  09ED  0480               	iorwf	0,f
  2791  09EE  0873               	movf	frexp@eptr,w
  2792  09EF  0084               	movwf	4
  2793  09F0  3082               	movlw	130
  2794  09F1  0780               	addwf	0,f
  2795  09F2  0F84               	incfsz	4,f
  2796  09F3  0800               	movf	0,w
  2797  09F4  1803               	skipnc
  2798  09F5  0A00               	incf	0,w
  2799  09F6  00FF               	movwf	127
  2800  09F7  30FF               	movlw	255
  2801  09F8  077F               	addwf	127,w
  2802  09F9  0080               	movwf	0
  2803  09FA  0384               	decf	4,f
  2804  09FB  0872               	movf	frexp@value+2,w
  2805  09FC  3980               	andlw	-128
  2806  09FD  383F               	iorlw	63
  2807  09FE  00F2               	movwf	frexp@value+2
  2808  09FF  13F1               	bcf	frexp@value+1,7
  2809  0A00  0008               	return
  2810  0A01                     __end_of_frexp:	
  2811                           ;	Return value of _frexp is never used
  2812                           
  2813                           
  2814                           	psect	text10
  2815  0E26                     __ptext10:	
  2816 ;; *************** function ___fttol *****************
  2817 ;; Defined at:
  2818 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  f1              3   47[BANK0 ] float 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  lval            4   56[BANK0 ] unsigned long 
  2823 ;;  exp1            1   60[BANK0 ] unsigned char 
  2824 ;;  sign1           1   55[BANK0 ] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  4   47[BANK0 ] long 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       4       0       0       0
  2835 ;;      Locals:         0       6       0       0       0
  2836 ;;      Temps:          0       4       0       0       0
  2837 ;;      Totals:         0      14       0       0       0
  2838 ;;Total ram usage:       14 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_UART_Init
  2844 ;;		_trunc
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function ___fttol
  2850  0E26                     ___fttol:	
  2851                           
  2852                           ;incstack = 0
  2853                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2854  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  2855  0E27  1303               	bcf	3,6	;RP1=0, select bank0
  2856  0E28  084F               	movf	___fttol@f1,w
  2857  0E29  00D3               	movwf	??___fttol
  2858  0E2A  0850               	movf	___fttol@f1+1,w
  2859  0E2B  00D4               	movwf	??___fttol+1
  2860  0E2C  0851               	movf	___fttol@f1+2,w
  2861  0E2D  00D5               	movwf	??___fttol+2
  2862  0E2E  1003               	clrc
  2863  0E2F  0D54               	rlf	??___fttol+1,w
  2864  0E30  0D55               	rlf	??___fttol+2,w
  2865  0E31  00D6               	movwf	??___fttol+3
  2866  0E32  0856               	movf	??___fttol+3,w
  2867  0E33  00DC               	movwf	___fttol@exp1
  2868  0E34  085C               	movf	___fttol@exp1,w
  2869  0E35  1D03               	btfss	3,2
  2870  0E36  2E40               	goto	l1966
  2871  0E37  3000               	movlw	0
  2872  0E38  00D2               	movwf	?___fttol+3
  2873  0E39  3000               	movlw	0
  2874  0E3A  00D1               	movwf	?___fttol+2
  2875  0E3B  3000               	movlw	0
  2876  0E3C  00D0               	movwf	?___fttol+1
  2877  0E3D  3000               	movlw	0
  2878  0E3E  00CF               	movwf	?___fttol
  2879  0E3F  0008               	return
  2880  0E40                     l1966:	
  2881  0E40  084F               	movf	___fttol@f1,w
  2882  0E41  00D3               	movwf	??___fttol
  2883  0E42  0850               	movf	___fttol@f1+1,w
  2884  0E43  00D4               	movwf	??___fttol+1
  2885  0E44  0851               	movf	___fttol@f1+2,w
  2886  0E45  00D5               	movwf	??___fttol+2
  2887  0E46  3017               	movlw	23
  2888  0E47                     u2375:	
  2889  0E47  1003               	clrc
  2890  0E48  0CD5               	rrf	??___fttol+2,f
  2891  0E49  0CD4               	rrf	??___fttol+1,f
  2892  0E4A  0CD3               	rrf	??___fttol,f
  2893  0E4B  3EFF               	addlw	-1
  2894  0E4C  1D03               	skipz
  2895  0E4D  2E47               	goto	u2375
  2896  0E4E  0853               	movf	??___fttol,w
  2897  0E4F  00D6               	movwf	??___fttol+3
  2898  0E50  0856               	movf	??___fttol+3,w
  2899  0E51  00D7               	movwf	___fttol@sign1
  2900  0E52  17D0               	bsf	___fttol@f1+1,7
  2901  0E53  30FF               	movlw	255
  2902  0E54  05CF               	andwf	___fttol@f1,f
  2903  0E55  30FF               	movlw	255
  2904  0E56  05D0               	andwf	___fttol@f1+1,f
  2905  0E57  3000               	movlw	0
  2906  0E58  05D1               	andwf	___fttol@f1+2,f
  2907  0E59  084F               	movf	___fttol@f1,w
  2908  0E5A  00D8               	movwf	___fttol@lval
  2909  0E5B  0850               	movf	___fttol@f1+1,w
  2910  0E5C  00D9               	movwf	___fttol@lval+1
  2911  0E5D  0851               	movf	___fttol@f1+2,w
  2912  0E5E  00DA               	movwf	___fttol@lval+2
  2913  0E5F  01DB               	clrf	___fttol@lval+3
  2914  0E60  308E               	movlw	142
  2915  0E61  02DC               	subwf	___fttol@exp1,f
  2916  0E62  1FDC               	btfss	___fttol@exp1,7
  2917  0E63  2E82               	goto	l1986
  2918  0E64  085C               	movf	___fttol@exp1,w
  2919  0E65  3A80               	xorlw	128
  2920  0E66  3E8F               	addlw	143
  2921  0E67  1803               	skipnc
  2922  0E68  2E72               	goto	l1984
  2923  0E69  3000               	movlw	0
  2924  0E6A  00D2               	movwf	?___fttol+3
  2925  0E6B  3000               	movlw	0
  2926  0E6C  00D1               	movwf	?___fttol+2
  2927  0E6D  3000               	movlw	0
  2928  0E6E  00D0               	movwf	?___fttol+1
  2929  0E6F  3000               	movlw	0
  2930  0E70  00CF               	movwf	?___fttol
  2931  0E71  0008               	return
  2932  0E72                     l1984:	
  2933  0E72  3001               	movlw	1
  2934  0E73                     u2405:	
  2935  0E73  1003               	clrc
  2936  0E74  0CDB               	rrf	___fttol@lval+3,f
  2937  0E75  0CDA               	rrf	___fttol@lval+2,f
  2938  0E76  0CD9               	rrf	___fttol@lval+1,f
  2939  0E77  0CD8               	rrf	___fttol@lval,f
  2940  0E78  3EFF               	addlw	-1
  2941  0E79  1D03               	skipz
  2942  0E7A  2E73               	goto	u2405
  2943  0E7B  3001               	movlw	1
  2944  0E7C  00D3               	movwf	??___fttol
  2945  0E7D  0853               	movf	??___fttol,w
  2946  0E7E  07DC               	addwf	___fttol@exp1,f
  2947  0E7F  1903               	btfsc	3,2
  2948  0E80  2E9D               	goto	l1994
  2949  0E81  2E72               	goto	l1984
  2950  0E82                     l1986:	
  2951  0E82  3018               	movlw	24
  2952  0E83  025C               	subwf	___fttol@exp1,w
  2953  0E84  1C03               	skipc
  2954  0E85  2E9A               	goto	l672
  2955  0E86  3000               	movlw	0
  2956  0E87  00D2               	movwf	?___fttol+3
  2957  0E88  3000               	movlw	0
  2958  0E89  00D1               	movwf	?___fttol+2
  2959  0E8A  3000               	movlw	0
  2960  0E8B  00D0               	movwf	?___fttol+1
  2961  0E8C  3000               	movlw	0
  2962  0E8D  00CF               	movwf	?___fttol
  2963  0E8E  0008               	return
  2964  0E8F                     l1992:	
  2965  0E8F  3001               	movlw	1
  2966  0E90  00D3               	movwf	??___fttol
  2967  0E91                     u2435:	
  2968  0E91  1003               	clrc
  2969  0E92  0DD8               	rlf	___fttol@lval,f
  2970  0E93  0DD9               	rlf	___fttol@lval+1,f
  2971  0E94  0DDA               	rlf	___fttol@lval+2,f
  2972  0E95  0DDB               	rlf	___fttol@lval+3,f
  2973  0E96  0BD3               	decfsz	??___fttol,f
  2974  0E97  2E91               	goto	u2435
  2975  0E98  3001               	movlw	1
  2976  0E99  02DC               	subwf	___fttol@exp1,f
  2977  0E9A                     l672:	
  2978  0E9A  085C               	movf	___fttol@exp1,w
  2979  0E9B  1D03               	btfss	3,2
  2980  0E9C  2E8F               	goto	l1992
  2981  0E9D                     l1994:	
  2982  0E9D  0857               	movf	___fttol@sign1,w
  2983  0E9E  1903               	btfsc	3,2
  2984  0E9F  2EAB               	goto	l1998
  2985  0EA0  09D8               	comf	___fttol@lval,f
  2986  0EA1  09D9               	comf	___fttol@lval+1,f
  2987  0EA2  09DA               	comf	___fttol@lval+2,f
  2988  0EA3  09DB               	comf	___fttol@lval+3,f
  2989  0EA4  0AD8               	incf	___fttol@lval,f
  2990  0EA5  1903               	skipnz
  2991  0EA6  0AD9               	incf	___fttol@lval+1,f
  2992  0EA7  1903               	skipnz
  2993  0EA8  0ADA               	incf	___fttol@lval+2,f
  2994  0EA9  1903               	skipnz
  2995  0EAA  0ADB               	incf	___fttol@lval+3,f
  2996  0EAB                     l1998:	
  2997  0EAB  085B               	movf	___fttol@lval+3,w
  2998  0EAC  00D2               	movwf	?___fttol+3
  2999  0EAD  085A               	movf	___fttol@lval+2,w
  3000  0EAE  00D1               	movwf	?___fttol+2
  3001  0EAF  0859               	movf	___fttol@lval+1,w
  3002  0EB0  00D0               	movwf	?___fttol+1
  3003  0EB1  0858               	movf	___fttol@lval,w
  3004  0EB2  00CF               	movwf	?___fttol
  3005  0EB3  0008               	return
  3006  0EB4                     __end_of___fttol:	
  3007                           
  3008                           	psect	text11
  3009  0ABC                     __ptext11:	
  3010 ;; *************** function ___altoft *****************
  3011 ;; Defined at:
  3012 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  c               4    8[COMMON] long 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  sign            1    1[BANK0 ] unsigned char 
  3017 ;;  exp             1    0[BANK0 ] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  3    8[COMMON] float 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3027 ;;      Params:         4       0       0       0       0
  3028 ;;      Locals:         0       2       0       0       0
  3029 ;;      Temps:          2       0       0       0       0
  3030 ;;      Totals:         6       2       0       0       0
  3031 ;;Total ram usage:        8 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    1
  3034 ;; This function calls:
  3035 ;;		___ftpack
  3036 ;; This function is called by:
  3037 ;;		_UART_Init
  3038 ;;		_trunc
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function ___altoft
  3044  0ABC                     ___altoft:	
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3048  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0ABE  01A1               	clrf	___altoft@sign
  3051  0ABF  308E               	movlw	142
  3052  0AC0  00FC               	movwf	??___altoft
  3053  0AC1  087C               	movf	??___altoft,w
  3054  0AC2  00A0               	movwf	___altoft@exp
  3055  0AC3  1FFB               	btfss	___altoft@c+3,7
  3056  0AC4  2AD2               	goto	l1954
  3057  0AC5  09F8               	comf	___altoft@c,f
  3058  0AC6  09F9               	comf	___altoft@c+1,f
  3059  0AC7  09FA               	comf	___altoft@c+2,f
  3060  0AC8  09FB               	comf	___altoft@c+3,f
  3061  0AC9  0AF8               	incf	___altoft@c,f
  3062  0ACA  1903               	skipnz
  3063  0ACB  0AF9               	incf	___altoft@c+1,f
  3064  0ACC  1903               	skipnz
  3065  0ACD  0AFA               	incf	___altoft@c+2,f
  3066  0ACE  1903               	skipnz
  3067  0ACF  0AFB               	incf	___altoft@c+3,f
  3068  0AD0  01A1               	clrf	___altoft@sign
  3069  0AD1  0AA1               	incf	___altoft@sign,f
  3070  0AD2                     l1954:	
  3071  0AD2  30FF               	movlw	255
  3072  0AD3  057B               	andwf	___altoft@c+3,w
  3073  0AD4  1903               	btfsc	3,2
  3074  0AD5  2AE4               	goto	l1956
  3075  0AD6  3001               	movlw	1
  3076  0AD7                     u2345:	
  3077  0AD7  1003               	clrc
  3078  0AD8  0CFB               	rrf	___altoft@c+3,f
  3079  0AD9  0CFA               	rrf	___altoft@c+2,f
  3080  0ADA  0CF9               	rrf	___altoft@c+1,f
  3081  0ADB  0CF8               	rrf	___altoft@c,f
  3082  0ADC  3EFF               	addlw	-1
  3083  0ADD  1D03               	skipz
  3084  0ADE  2AD7               	goto	u2345
  3085  0ADF  3001               	movlw	1
  3086  0AE0  00FC               	movwf	??___altoft
  3087  0AE1  087C               	movf	??___altoft,w
  3088  0AE2  07A0               	addwf	___altoft@exp,f
  3089  0AE3  2AD2               	goto	l1954
  3090  0AE4                     l1956:	
  3091  0AE4  0878               	movf	___altoft@c,w
  3092  0AE5  00F0               	movwf	___ftpack@arg
  3093  0AE6  0879               	movf	___altoft@c+1,w
  3094  0AE7  00F1               	movwf	___ftpack@arg+1
  3095  0AE8  087A               	movf	___altoft@c+2,w
  3096  0AE9  00F2               	movwf	___ftpack@arg+2
  3097  0AEA  0820               	movf	___altoft@exp,w
  3098  0AEB  00FC               	movwf	??___altoft
  3099  0AEC  087C               	movf	??___altoft,w
  3100  0AED  00F3               	movwf	___ftpack@exp
  3101  0AEE  0821               	movf	___altoft@sign,w
  3102  0AEF  00FD               	movwf	??___altoft+1
  3103  0AF0  087D               	movf	??___altoft+1,w
  3104  0AF1  00F4               	movwf	___ftpack@sign
  3105  0AF2  120A  158A  25BA   	fcall	___ftpack
  3106  0AF5  0870               	movf	?___ftpack,w
  3107  0AF6  00F8               	movwf	?___altoft
  3108  0AF7  0871               	movf	?___ftpack+1,w
  3109  0AF8  00F9               	movwf	?___altoft+1
  3110  0AF9  0872               	movf	?___ftpack+2,w
  3111  0AFA  00FA               	movwf	?___altoft+2
  3112  0AFB  0008               	return
  3113  0AFC                     __end_of___altoft:	
  3114                           
  3115                           	psect	text12
  3116  000A                     __ptext12:	
  3117 ;; *************** function ___ftneg *****************
  3118 ;; Defined at:
  3119 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  f1              3   70[BANK0 ] float 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  3   70[BANK0 ] float 
  3126 ;; Registers used:
  3127 ;;		wreg
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         0       3       0       0       0
  3134 ;;      Locals:         0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0
  3136 ;;      Totals:         0       3       0       0       0
  3137 ;;Total ram usage:        3 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_round
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           
  3147                           ;psect for function ___ftneg
  3148  000A                     ___ftneg:	
  3149                           
  3150                           ;incstack = 0
  3151                           ; Regs used in ___ftneg: [wreg]
  3152  000A  1283               	bcf	3,5	;RP0=0, select bank0
  3153  000B  1303               	bcf	3,6	;RP1=0, select bank0
  3154  000C  0868               	movf	___ftneg@f1+2,w
  3155  000D  0467               	iorwf	___ftneg@f1+1,w
  3156  000E  0466               	iorwf	___ftneg@f1,w
  3157  000F  1903               	skipnz
  3158  0010  0008               	return
  3159  0011  3080               	movlw	128
  3160  0012  06E8               	xorwf	___ftneg@f1+2,f
  3161  0013  0008               	return
  3162  0014                     __end_of___ftneg:	
  3163                           
  3164                           	psect	text13
  3165  0475                     __ptext13:	
  3166 ;; *************** function ___ftadd *****************
  3167 ;; Defined at:
  3168 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  f1              3   34[BANK0 ] float 
  3171 ;;  f2              3   37[BANK0 ] float 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  exp1            1   46[BANK0 ] unsigned char 
  3174 ;;  exp2            1   45[BANK0 ] unsigned char 
  3175 ;;  sign            1   44[BANK0 ] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  3   34[BANK0 ] float 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       6       0       0       0
  3186 ;;      Locals:         0       3       0       0       0
  3187 ;;      Temps:          0       4       0       0       0
  3188 ;;      Totals:         0      13       0       0       0
  3189 ;;Total ram usage:       13 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    1
  3192 ;; This function calls:
  3193 ;;		___ftpack
  3194 ;; This function is called by:
  3195 ;;		_UART_Init
  3196 ;;		_round
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function ___ftadd
  3202  0475                     ___ftadd:	
  3203                           
  3204                           ;incstack = 0
  3205                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3206  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0477  0842               	movf	___ftadd@f1,w
  3209  0478  00C8               	movwf	??___ftadd
  3210  0479  0843               	movf	___ftadd@f1+1,w
  3211  047A  00C9               	movwf	??___ftadd+1
  3212  047B  0844               	movf	___ftadd@f1+2,w
  3213  047C  00CA               	movwf	??___ftadd+2
  3214  047D  1003               	clrc
  3215  047E  0D49               	rlf	??___ftadd+1,w
  3216  047F  0D4A               	rlf	??___ftadd+2,w
  3217  0480  00CB               	movwf	??___ftadd+3
  3218  0481  084B               	movf	??___ftadd+3,w
  3219  0482  00CE               	movwf	___ftadd@exp1
  3220  0483  0845               	movf	___ftadd@f2,w
  3221  0484  00C8               	movwf	??___ftadd
  3222  0485  0846               	movf	___ftadd@f2+1,w
  3223  0486  00C9               	movwf	??___ftadd+1
  3224  0487  0847               	movf	___ftadd@f2+2,w
  3225  0488  00CA               	movwf	??___ftadd+2
  3226  0489  1003               	clrc
  3227  048A  0D49               	rlf	??___ftadd+1,w
  3228  048B  0D4A               	rlf	??___ftadd+2,w
  3229  048C  00CB               	movwf	??___ftadd+3
  3230  048D  084B               	movf	??___ftadd+3,w
  3231  048E  00CD               	movwf	___ftadd@exp2
  3232  048F  084E               	movf	___ftadd@exp1,w
  3233  0490  1903               	btfsc	3,2
  3234  0491  2C9E               	goto	l2198
  3235  0492  084D               	movf	___ftadd@exp2,w
  3236  0493  024E               	subwf	___ftadd@exp1,w
  3237  0494  1803               	skipnc
  3238  0495  2CA5               	goto	l2202
  3239  0496  034E               	decf	___ftadd@exp1,w
  3240  0497  3AFF               	xorlw	255
  3241  0498  074D               	addwf	___ftadd@exp2,w
  3242  0499  00C8               	movwf	??___ftadd
  3243  049A  3019               	movlw	25
  3244  049B  0248               	subwf	??___ftadd,w
  3245  049C  1C03               	skipc
  3246  049D  2CA5               	goto	l2202
  3247  049E                     l2198:	
  3248  049E  0845               	movf	___ftadd@f2,w
  3249  049F  00C2               	movwf	?___ftadd
  3250  04A0  0846               	movf	___ftadd@f2+1,w
  3251  04A1  00C3               	movwf	?___ftadd+1
  3252  04A2  0847               	movf	___ftadd@f2+2,w
  3253  04A3  00C4               	movwf	?___ftadd+2
  3254  04A4  0008               	return
  3255  04A5                     l2202:	
  3256  04A5  084D               	movf	___ftadd@exp2,w
  3257  04A6  1903               	btfsc	3,2
  3258  04A7  0008               	return
  3259  04A8  084E               	movf	___ftadd@exp1,w
  3260  04A9  024D               	subwf	___ftadd@exp2,w
  3261  04AA  1803               	skipnc
  3262  04AB  2CB4               	goto	l2208
  3263  04AC  034D               	decf	___ftadd@exp2,w
  3264  04AD  3AFF               	xorlw	255
  3265  04AE  074E               	addwf	___ftadd@exp1,w
  3266  04AF  00C8               	movwf	??___ftadd
  3267  04B0  3019               	movlw	25
  3268  04B1  0248               	subwf	??___ftadd,w
  3269  04B2  1803               	btfsc	3,0
  3270  04B3  0008               	return
  3271  04B4                     l2208:	
  3272  04B4  3006               	movlw	6
  3273  04B5  00C8               	movwf	??___ftadd
  3274  04B6  0848               	movf	??___ftadd,w
  3275  04B7  00CC               	movwf	___ftadd@sign
  3276  04B8  1BC4               	btfsc	___ftadd@f1+2,7
  3277  04B9  17CC               	bsf	___ftadd@sign,7
  3278  04BA  1BC7               	btfsc	___ftadd@f2+2,7
  3279  04BB  174C               	bsf	___ftadd@sign,6
  3280  04BC  17C3               	bsf	___ftadd@f1+1,7
  3281  04BD  30FF               	movlw	255
  3282  04BE  05C2               	andwf	___ftadd@f1,f
  3283  04BF  30FF               	movlw	255
  3284  04C0  05C3               	andwf	___ftadd@f1+1,f
  3285  04C1  3000               	movlw	0
  3286  04C2  05C4               	andwf	___ftadd@f1+2,f
  3287  04C3  17C6               	bsf	___ftadd@f2+1,7
  3288  04C4  30FF               	movlw	255
  3289  04C5  05C5               	andwf	___ftadd@f2,f
  3290  04C6  30FF               	movlw	255
  3291  04C7  05C6               	andwf	___ftadd@f2+1,f
  3292  04C8  3000               	movlw	0
  3293  04C9  05C7               	andwf	___ftadd@f2+2,f
  3294  04CA  084D               	movf	___ftadd@exp2,w
  3295  04CB  024E               	subwf	___ftadd@exp1,w
  3296  04CC  1803               	skipnc
  3297  04CD  2CF4               	goto	l2230
  3298  04CE                     l2220:	
  3299  04CE  3001               	movlw	1
  3300  04CF                     u3235:	
  3301  04CF  1003               	clrc
  3302  04D0  0DC5               	rlf	___ftadd@f2,f
  3303  04D1  0DC6               	rlf	___ftadd@f2+1,f
  3304  04D2  0DC7               	rlf	___ftadd@f2+2,f
  3305  04D3  3EFF               	addlw	-1
  3306  04D4  1D03               	skipz
  3307  04D5  2CCF               	goto	u3235
  3308  04D6  3001               	movlw	1
  3309  04D7  02CD               	subwf	___ftadd@exp2,f
  3310  04D8  084D               	movf	___ftadd@exp2,w
  3311  04D9  064E               	xorwf	___ftadd@exp1,w
  3312  04DA  1903               	skipnz
  3313  04DB  2CEF               	goto	l2228
  3314  04DC  3001               	movlw	1
  3315  04DD  02CC               	subwf	___ftadd@sign,f
  3316  04DE  084C               	movf	___ftadd@sign,w
  3317  04DF  3907               	andlw	7
  3318  04E0  1903               	btfsc	3,2
  3319  04E1  2CEF               	goto	l2228
  3320  04E2  2CCE               	goto	l2220
  3321  04E3                     l2226:	
  3322  04E3  3001               	movlw	1
  3323  04E4                     u3265:	
  3324  04E4  1003               	clrc
  3325  04E5  0CC4               	rrf	___ftadd@f1+2,f
  3326  04E6  0CC3               	rrf	___ftadd@f1+1,f
  3327  04E7  0CC2               	rrf	___ftadd@f1,f
  3328  04E8  3EFF               	addlw	-1
  3329  04E9  1D03               	skipz
  3330  04EA  2CE4               	goto	u3265
  3331  04EB  3001               	movlw	1
  3332  04EC  00C8               	movwf	??___ftadd
  3333  04ED  0848               	movf	??___ftadd,w
  3334  04EE  07CE               	addwf	___ftadd@exp1,f
  3335  04EF                     l2228:	
  3336  04EF  084E               	movf	___ftadd@exp1,w
  3337  04F0  064D               	xorwf	___ftadd@exp2,w
  3338  04F1  1903               	btfsc	3,2
  3339  04F2  2D1D               	goto	l612
  3340  04F3  2CE3               	goto	l2226
  3341  04F4                     l2230:	
  3342  04F4  084E               	movf	___ftadd@exp1,w
  3343  04F5  024D               	subwf	___ftadd@exp2,w
  3344  04F6  1803               	skipnc
  3345  04F7  2D1D               	goto	l612
  3346  04F8                     l2232:	
  3347  04F8  3001               	movlw	1
  3348  04F9                     u3295:	
  3349  04F9  1003               	clrc
  3350  04FA  0DC2               	rlf	___ftadd@f1,f
  3351  04FB  0DC3               	rlf	___ftadd@f1+1,f
  3352  04FC  0DC4               	rlf	___ftadd@f1+2,f
  3353  04FD  3EFF               	addlw	-1
  3354  04FE  1D03               	skipz
  3355  04FF  2CF9               	goto	u3295
  3356  0500  3001               	movlw	1
  3357  0501  02CE               	subwf	___ftadd@exp1,f
  3358  0502  084D               	movf	___ftadd@exp2,w
  3359  0503  064E               	xorwf	___ftadd@exp1,w
  3360  0504  1903               	skipnz
  3361  0505  2D19               	goto	l2240
  3362  0506  3001               	movlw	1
  3363  0507  02CC               	subwf	___ftadd@sign,f
  3364  0508  084C               	movf	___ftadd@sign,w
  3365  0509  3907               	andlw	7
  3366  050A  1903               	btfsc	3,2
  3367  050B  2D19               	goto	l2240
  3368  050C  2CF8               	goto	l2232
  3369  050D                     l2238:	
  3370  050D  3001               	movlw	1
  3371  050E                     u3325:	
  3372  050E  1003               	clrc
  3373  050F  0CC7               	rrf	___ftadd@f2+2,f
  3374  0510  0CC6               	rrf	___ftadd@f2+1,f
  3375  0511  0CC5               	rrf	___ftadd@f2,f
  3376  0512  3EFF               	addlw	-1
  3377  0513  1D03               	skipz
  3378  0514  2D0E               	goto	u3325
  3379  0515  3001               	movlw	1
  3380  0516  00C8               	movwf	??___ftadd
  3381  0517  0848               	movf	??___ftadd,w
  3382  0518  07CD               	addwf	___ftadd@exp2,f
  3383  0519                     l2240:	
  3384  0519  084E               	movf	___ftadd@exp1,w
  3385  051A  064D               	xorwf	___ftadd@exp2,w
  3386  051B  1D03               	skipz
  3387  051C  2D0D               	goto	l2238
  3388  051D                     l612:	
  3389  051D  1FCC               	btfss	___ftadd@sign,7
  3390  051E  2D2F               	goto	l2244
  3391  051F  30FF               	movlw	255
  3392  0520  06C2               	xorwf	___ftadd@f1,f
  3393  0521  30FF               	movlw	255
  3394  0522  06C3               	xorwf	___ftadd@f1+1,f
  3395  0523  30FF               	movlw	255
  3396  0524  06C4               	xorwf	___ftadd@f1+2,f
  3397  0525  3001               	movlw	1
  3398  0526  07C2               	addwf	___ftadd@f1,f
  3399  0527  3000               	movlw	0
  3400  0528  1803               	skipnc
  3401  0529  3001               	movlw	1
  3402  052A  07C3               	addwf	___ftadd@f1+1,f
  3403  052B  3000               	movlw	0
  3404  052C  1803               	skipnc
  3405  052D  3001               	movlw	1
  3406  052E  07C4               	addwf	___ftadd@f1+2,f
  3407  052F                     l2244:	
  3408  052F  1F4C               	btfss	___ftadd@sign,6
  3409  0530  2D41               	goto	l2248
  3410  0531  30FF               	movlw	255
  3411  0532  06C5               	xorwf	___ftadd@f2,f
  3412  0533  30FF               	movlw	255
  3413  0534  06C6               	xorwf	___ftadd@f2+1,f
  3414  0535  30FF               	movlw	255
  3415  0536  06C7               	xorwf	___ftadd@f2+2,f
  3416  0537  3001               	movlw	1
  3417  0538  07C5               	addwf	___ftadd@f2,f
  3418  0539  3000               	movlw	0
  3419  053A  1803               	skipnc
  3420  053B  3001               	movlw	1
  3421  053C  07C6               	addwf	___ftadd@f2+1,f
  3422  053D  3000               	movlw	0
  3423  053E  1803               	skipnc
  3424  053F  3001               	movlw	1
  3425  0540  07C7               	addwf	___ftadd@f2+2,f
  3426  0541                     l2248:	
  3427  0541  01CC               	clrf	___ftadd@sign
  3428  0542  0842               	movf	___ftadd@f1,w
  3429  0543  07C5               	addwf	___ftadd@f2,f
  3430  0544  0843               	movf	___ftadd@f1+1,w
  3431  0545  1103               	clrz
  3432  0546  1803               	skipnc
  3433  0547  0A43               	incf	___ftadd@f1+1,w
  3434  0548  1D03               	btfss	3,2
  3435  0549  07C6               	addwf	___ftadd@f2+1,f
  3436  054A  0844               	movf	___ftadd@f1+2,w
  3437  054B  1103               	clrz
  3438  054C  1803               	skipnc
  3439  054D  0A44               	incf	___ftadd@f1+2,w
  3440  054E  1D03               	btfss	3,2
  3441  054F  07C7               	addwf	___ftadd@f2+2,f
  3442  0550  1FC7               	btfss	___ftadd@f2+2,7
  3443  0551  2D64               	goto	l2258
  3444  0552  30FF               	movlw	255
  3445  0553  06C5               	xorwf	___ftadd@f2,f
  3446  0554  30FF               	movlw	255
  3447  0555  06C6               	xorwf	___ftadd@f2+1,f
  3448  0556  30FF               	movlw	255
  3449  0557  06C7               	xorwf	___ftadd@f2+2,f
  3450  0558  3001               	movlw	1
  3451  0559  07C5               	addwf	___ftadd@f2,f
  3452  055A  3000               	movlw	0
  3453  055B  1803               	skipnc
  3454  055C  3001               	movlw	1
  3455  055D  07C6               	addwf	___ftadd@f2+1,f
  3456  055E  3000               	movlw	0
  3457  055F  1803               	skipnc
  3458  0560  3001               	movlw	1
  3459  0561  07C7               	addwf	___ftadd@f2+2,f
  3460  0562  01CC               	clrf	___ftadd@sign
  3461  0563  0ACC               	incf	___ftadd@sign,f
  3462  0564                     l2258:	
  3463  0564  0845               	movf	___ftadd@f2,w
  3464  0565  00F0               	movwf	___ftpack@arg
  3465  0566  0846               	movf	___ftadd@f2+1,w
  3466  0567  00F1               	movwf	___ftpack@arg+1
  3467  0568  0847               	movf	___ftadd@f2+2,w
  3468  0569  00F2               	movwf	___ftpack@arg+2
  3469  056A  084E               	movf	___ftadd@exp1,w
  3470  056B  00C8               	movwf	??___ftadd
  3471  056C  0848               	movf	??___ftadd,w
  3472  056D  00F3               	movwf	___ftpack@exp
  3473  056E  084C               	movf	___ftadd@sign,w
  3474  056F  00C9               	movwf	??___ftadd+1
  3475  0570  0849               	movf	??___ftadd+1,w
  3476  0571  00F4               	movwf	___ftpack@sign
  3477  0572  120A  158A  25BA   	fcall	___ftpack
  3478  0575  0870               	movf	?___ftpack,w
  3479  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0578  00C2               	movwf	?___ftadd
  3482  0579  0871               	movf	?___ftpack+1,w
  3483  057A  00C3               	movwf	?___ftadd+1
  3484  057B  0872               	movf	?___ftpack+2,w
  3485  057C  00C4               	movwf	?___ftadd+2
  3486  057D  0008               	return
  3487  057E                     __end_of___ftadd:	
  3488                           
  3489                           	psect	text14
  3490  03A2                     __ptext14:	
  3491 ;; *************** function ___ftmul *****************
  3492 ;; Defined at:
  3493 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  f1              3    2[BANK0 ] float 
  3496 ;;  f2              3    5[BANK0 ] float 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  f3_as_produc    3   13[BANK0 ] unsigned um
  3499 ;;  sign            1   17[BANK0 ] unsigned char 
  3500 ;;  cntr            1   16[BANK0 ] unsigned char 
  3501 ;;  exp             1   12[BANK0 ] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  3    2[BANK0 ] float 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         0       6       0       0       0
  3512 ;;      Locals:         0       6       0       0       0
  3513 ;;      Temps:          0       4       0       0       0
  3514 ;;      Totals:         0      16       0       0       0
  3515 ;;Total ram usage:       16 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    1
  3518 ;; This function calls:
  3519 ;;		___ftpack
  3520 ;; This function is called by:
  3521 ;;		_UART_Init
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function ___ftmul
  3527  03A2                     ___ftmul:	
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3531  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3532  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3533  03A4  0822               	movf	___ftmul@f1,w
  3534  03A5  00A8               	movwf	??___ftmul
  3535  03A6  0823               	movf	___ftmul@f1+1,w
  3536  03A7  00A9               	movwf	??___ftmul+1
  3537  03A8  0824               	movf	___ftmul@f1+2,w
  3538  03A9  00AA               	movwf	??___ftmul+2
  3539  03AA  1003               	clrc
  3540  03AB  0D29               	rlf	??___ftmul+1,w
  3541  03AC  0D2A               	rlf	??___ftmul+2,w
  3542  03AD  00AB               	movwf	??___ftmul+3
  3543  03AE  082B               	movf	??___ftmul+3,w
  3544  03AF  00AC               	movwf	___ftmul@exp
  3545  03B0  082C               	movf	___ftmul@exp,w
  3546  03B1  1D03               	btfss	3,2
  3547  03B2  2BBA               	goto	l2482
  3548  03B3  3000               	movlw	0
  3549  03B4  00A2               	movwf	?___ftmul
  3550  03B5  3000               	movlw	0
  3551  03B6  00A3               	movwf	?___ftmul+1
  3552  03B7  3000               	movlw	0
  3553  03B8  00A4               	movwf	?___ftmul+2
  3554  03B9  0008               	return
  3555  03BA                     l2482:	
  3556  03BA  0825               	movf	___ftmul@f2,w
  3557  03BB  00A8               	movwf	??___ftmul
  3558  03BC  0826               	movf	___ftmul@f2+1,w
  3559  03BD  00A9               	movwf	??___ftmul+1
  3560  03BE  0827               	movf	___ftmul@f2+2,w
  3561  03BF  00AA               	movwf	??___ftmul+2
  3562  03C0  1003               	clrc
  3563  03C1  0D29               	rlf	??___ftmul+1,w
  3564  03C2  0D2A               	rlf	??___ftmul+2,w
  3565  03C3  00AB               	movwf	??___ftmul+3
  3566  03C4  082B               	movf	??___ftmul+3,w
  3567  03C5  00B1               	movwf	___ftmul@sign
  3568  03C6  0831               	movf	___ftmul@sign,w
  3569  03C7  1D03               	btfss	3,2
  3570  03C8  2BD0               	goto	l2488
  3571  03C9  3000               	movlw	0
  3572  03CA  00A2               	movwf	?___ftmul
  3573  03CB  3000               	movlw	0
  3574  03CC  00A3               	movwf	?___ftmul+1
  3575  03CD  3000               	movlw	0
  3576  03CE  00A4               	movwf	?___ftmul+2
  3577  03CF  0008               	return
  3578  03D0                     l2488:	
  3579  03D0  0831               	movf	___ftmul@sign,w
  3580  03D1  3E7B               	addlw	123
  3581  03D2  00A8               	movwf	??___ftmul
  3582  03D3  0828               	movf	??___ftmul,w
  3583  03D4  07AC               	addwf	___ftmul@exp,f
  3584  03D5  0822               	movf	___ftmul@f1,w
  3585  03D6  00A8               	movwf	??___ftmul
  3586  03D7  0823               	movf	___ftmul@f1+1,w
  3587  03D8  00A9               	movwf	??___ftmul+1
  3588  03D9  0824               	movf	___ftmul@f1+2,w
  3589  03DA  00AA               	movwf	??___ftmul+2
  3590  03DB  3010               	movlw	16
  3591  03DC                     u3755:	
  3592  03DC  1003               	clrc
  3593  03DD  0CAA               	rrf	??___ftmul+2,f
  3594  03DE  0CA9               	rrf	??___ftmul+1,f
  3595  03DF  0CA8               	rrf	??___ftmul,f
  3596  03E0  3EFF               	addlw	-1
  3597  03E1  1D03               	skipz
  3598  03E2  2BDC               	goto	u3755
  3599  03E3  0828               	movf	??___ftmul,w
  3600  03E4  00AB               	movwf	??___ftmul+3
  3601  03E5  082B               	movf	??___ftmul+3,w
  3602  03E6  00B1               	movwf	___ftmul@sign
  3603  03E7  0825               	movf	___ftmul@f2,w
  3604  03E8  00A8               	movwf	??___ftmul
  3605  03E9  0826               	movf	___ftmul@f2+1,w
  3606  03EA  00A9               	movwf	??___ftmul+1
  3607  03EB  0827               	movf	___ftmul@f2+2,w
  3608  03EC  00AA               	movwf	??___ftmul+2
  3609  03ED  3010               	movlw	16
  3610  03EE                     u3765:	
  3611  03EE  1003               	clrc
  3612  03EF  0CAA               	rrf	??___ftmul+2,f
  3613  03F0  0CA9               	rrf	??___ftmul+1,f
  3614  03F1  0CA8               	rrf	??___ftmul,f
  3615  03F2  3EFF               	addlw	-1
  3616  03F3  1D03               	skipz
  3617  03F4  2BEE               	goto	u3765
  3618  03F5  0828               	movf	??___ftmul,w
  3619  03F6  00AB               	movwf	??___ftmul+3
  3620  03F7  082B               	movf	??___ftmul+3,w
  3621  03F8  06B1               	xorwf	___ftmul@sign,f
  3622  03F9  3080               	movlw	128
  3623  03FA  00A8               	movwf	??___ftmul
  3624  03FB  0828               	movf	??___ftmul,w
  3625  03FC  05B1               	andwf	___ftmul@sign,f
  3626  03FD  17A3               	bsf	___ftmul@f1+1,7
  3627  03FE  17A6               	bsf	___ftmul@f2+1,7
  3628  03FF  30FF               	movlw	255
  3629  0400  05A5               	andwf	___ftmul@f2,f
  3630  0401  30FF               	movlw	255
  3631  0402  05A6               	andwf	___ftmul@f2+1,f
  3632  0403  3000               	movlw	0
  3633  0404  05A7               	andwf	___ftmul@f2+2,f
  3634  0405  3000               	movlw	0
  3635  0406  00AD               	movwf	___ftmul@f3_as_product
  3636  0407  3000               	movlw	0
  3637  0408  00AE               	movwf	___ftmul@f3_as_product+1
  3638  0409  3000               	movlw	0
  3639  040A  00AF               	movwf	___ftmul@f3_as_product+2
  3640  040B  3007               	movlw	7
  3641  040C  00A8               	movwf	??___ftmul
  3642  040D  0828               	movf	??___ftmul,w
  3643  040E  00B0               	movwf	___ftmul@cntr
  3644  040F                     l2500:	
  3645  040F  1C22               	btfss	___ftmul@f1,0
  3646  0410  2C1F               	goto	l2504
  3647  0411  0825               	movf	___ftmul@f2,w
  3648  0412  07AD               	addwf	___ftmul@f3_as_product,f
  3649  0413  0826               	movf	___ftmul@f2+1,w
  3650  0414  1103               	clrz
  3651  0415  1803               	skipnc
  3652  0416  0A26               	incf	___ftmul@f2+1,w
  3653  0417  1D03               	btfss	3,2
  3654  0418  07AE               	addwf	___ftmul@f3_as_product+1,f
  3655  0419  0827               	movf	___ftmul@f2+2,w
  3656  041A  1103               	clrz
  3657  041B  1803               	skipnc
  3658  041C  0A27               	incf	___ftmul@f2+2,w
  3659  041D  1D03               	btfss	3,2
  3660  041E  07AF               	addwf	___ftmul@f3_as_product+2,f
  3661  041F                     l2504:	
  3662  041F  3001               	movlw	1
  3663  0420                     u3795:	
  3664  0420  1003               	clrc
  3665  0421  0CA4               	rrf	___ftmul@f1+2,f
  3666  0422  0CA3               	rrf	___ftmul@f1+1,f
  3667  0423  0CA2               	rrf	___ftmul@f1,f
  3668  0424  3EFF               	addlw	-1
  3669  0425  1D03               	skipz
  3670  0426  2C20               	goto	u3795
  3671  0427  3001               	movlw	1
  3672  0428                     u3805:	
  3673  0428  1003               	clrc
  3674  0429  0DA5               	rlf	___ftmul@f2,f
  3675  042A  0DA6               	rlf	___ftmul@f2+1,f
  3676  042B  0DA7               	rlf	___ftmul@f2+2,f
  3677  042C  3EFF               	addlw	-1
  3678  042D  1D03               	skipz
  3679  042E  2C28               	goto	u3805
  3680  042F  3001               	movlw	1
  3681  0430  02B0               	subwf	___ftmul@cntr,f
  3682  0431  1D03               	btfss	3,2
  3683  0432  2C0F               	goto	l2500
  3684  0433  3009               	movlw	9
  3685  0434  00A8               	movwf	??___ftmul
  3686  0435  0828               	movf	??___ftmul,w
  3687  0436  00B0               	movwf	___ftmul@cntr
  3688  0437                     l2512:	
  3689  0437  1C22               	btfss	___ftmul@f1,0
  3690  0438  2C47               	goto	l2516
  3691  0439  0825               	movf	___ftmul@f2,w
  3692  043A  07AD               	addwf	___ftmul@f3_as_product,f
  3693  043B  0826               	movf	___ftmul@f2+1,w
  3694  043C  1103               	clrz
  3695  043D  1803               	skipnc
  3696  043E  0A26               	incf	___ftmul@f2+1,w
  3697  043F  1D03               	btfss	3,2
  3698  0440  07AE               	addwf	___ftmul@f3_as_product+1,f
  3699  0441  0827               	movf	___ftmul@f2+2,w
  3700  0442  1103               	clrz
  3701  0443  1803               	skipnc
  3702  0444  0A27               	incf	___ftmul@f2+2,w
  3703  0445  1D03               	btfss	3,2
  3704  0446  07AF               	addwf	___ftmul@f3_as_product+2,f
  3705  0447                     l2516:	
  3706  0447  3001               	movlw	1
  3707  0448                     u3845:	
  3708  0448  1003               	clrc
  3709  0449  0CA4               	rrf	___ftmul@f1+2,f
  3710  044A  0CA3               	rrf	___ftmul@f1+1,f
  3711  044B  0CA2               	rrf	___ftmul@f1,f
  3712  044C  3EFF               	addlw	-1
  3713  044D  1D03               	skipz
  3714  044E  2C48               	goto	u3845
  3715  044F  3001               	movlw	1
  3716  0450                     u3855:	
  3717  0450  1003               	clrc
  3718  0451  0CAF               	rrf	___ftmul@f3_as_product+2,f
  3719  0452  0CAE               	rrf	___ftmul@f3_as_product+1,f
  3720  0453  0CAD               	rrf	___ftmul@f3_as_product,f
  3721  0454  3EFF               	addlw	-1
  3722  0455  1D03               	skipz
  3723  0456  2C50               	goto	u3855
  3724  0457  3001               	movlw	1
  3725  0458  02B0               	subwf	___ftmul@cntr,f
  3726  0459  1D03               	btfss	3,2
  3727  045A  2C37               	goto	l2512
  3728  045B  082D               	movf	___ftmul@f3_as_product,w
  3729  045C  00F0               	movwf	___ftpack@arg
  3730  045D  082E               	movf	___ftmul@f3_as_product+1,w
  3731  045E  00F1               	movwf	___ftpack@arg+1
  3732  045F  082F               	movf	___ftmul@f3_as_product+2,w
  3733  0460  00F2               	movwf	___ftpack@arg+2
  3734  0461  082C               	movf	___ftmul@exp,w
  3735  0462  00A8               	movwf	??___ftmul
  3736  0463  0828               	movf	??___ftmul,w
  3737  0464  00F3               	movwf	___ftpack@exp
  3738  0465  0831               	movf	___ftmul@sign,w
  3739  0466  00A9               	movwf	??___ftmul+1
  3740  0467  0829               	movf	??___ftmul+1,w
  3741  0468  00F4               	movwf	___ftpack@sign
  3742  0469  120A  158A  25BA   	fcall	___ftpack
  3743  046C  0870               	movf	?___ftpack,w
  3744  046D  1283               	bcf	3,5	;RP0=0, select bank0
  3745  046E  1303               	bcf	3,6	;RP1=0, select bank0
  3746  046F  00A2               	movwf	?___ftmul
  3747  0470  0871               	movf	?___ftpack+1,w
  3748  0471  00A3               	movwf	?___ftmul+1
  3749  0472  0872               	movf	?___ftpack+2,w
  3750  0473  00A4               	movwf	?___ftmul+2
  3751  0474  0008               	return
  3752  0475                     __end_of___ftmul:	
  3753                           
  3754                           	psect	text15
  3755  022A                     __ptext15:	
  3756 ;; *************** function ___ftdiv *****************
  3757 ;; Defined at:
  3758 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  f2              3   18[BANK0 ] float 
  3761 ;;  f1              3   21[BANK0 ] float 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  f3              3   29[BANK0 ] float 
  3764 ;;  sign            1   33[BANK0 ] unsigned char 
  3765 ;;  exp             1   32[BANK0 ] unsigned char 
  3766 ;;  cntr            1   28[BANK0 ] unsigned char 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  3   18[BANK0 ] float 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0, pclath, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3776 ;;      Params:         0       6       0       0       0
  3777 ;;      Locals:         0       6       0       0       0
  3778 ;;      Temps:          0       4       0       0       0
  3779 ;;      Totals:         0      16       0       0       0
  3780 ;;Total ram usage:       16 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    1
  3783 ;; This function calls:
  3784 ;;		___ftpack
  3785 ;; This function is called by:
  3786 ;;		_UART_Init
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function ___ftdiv
  3792  022A                     ___ftdiv:	
  3793                           
  3794                           ;incstack = 0
  3795                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3796  022A  1283               	bcf	3,5	;RP0=0, select bank0
  3797  022B  1303               	bcf	3,6	;RP1=0, select bank0
  3798  022C  0835               	movf	___ftdiv@f1,w
  3799  022D  00B8               	movwf	??___ftdiv
  3800  022E  0836               	movf	___ftdiv@f1+1,w
  3801  022F  00B9               	movwf	??___ftdiv+1
  3802  0230  0837               	movf	___ftdiv@f1+2,w
  3803  0231  00BA               	movwf	??___ftdiv+2
  3804  0232  1003               	clrc
  3805  0233  0D39               	rlf	??___ftdiv+1,w
  3806  0234  0D3A               	rlf	??___ftdiv+2,w
  3807  0235  00BB               	movwf	??___ftdiv+3
  3808  0236  083B               	movf	??___ftdiv+3,w
  3809  0237  00C0               	movwf	___ftdiv@exp
  3810  0238  0840               	movf	___ftdiv@exp,w
  3811  0239  1D03               	btfss	3,2
  3812  023A  2A42               	goto	l2440
  3813  023B  3000               	movlw	0
  3814  023C  00B2               	movwf	?___ftdiv
  3815  023D  3000               	movlw	0
  3816  023E  00B3               	movwf	?___ftdiv+1
  3817  023F  3000               	movlw	0
  3818  0240  00B4               	movwf	?___ftdiv+2
  3819  0241  0008               	return
  3820  0242                     l2440:	
  3821  0242  0832               	movf	___ftdiv@f2,w
  3822  0243  00B8               	movwf	??___ftdiv
  3823  0244  0833               	movf	___ftdiv@f2+1,w
  3824  0245  00B9               	movwf	??___ftdiv+1
  3825  0246  0834               	movf	___ftdiv@f2+2,w
  3826  0247  00BA               	movwf	??___ftdiv+2
  3827  0248  1003               	clrc
  3828  0249  0D39               	rlf	??___ftdiv+1,w
  3829  024A  0D3A               	rlf	??___ftdiv+2,w
  3830  024B  00BB               	movwf	??___ftdiv+3
  3831  024C  083B               	movf	??___ftdiv+3,w
  3832  024D  00C1               	movwf	___ftdiv@sign
  3833  024E  0841               	movf	___ftdiv@sign,w
  3834  024F  1D03               	btfss	3,2
  3835  0250  2A58               	goto	l2446
  3836  0251  3000               	movlw	0
  3837  0252  00B2               	movwf	?___ftdiv
  3838  0253  3000               	movlw	0
  3839  0254  00B3               	movwf	?___ftdiv+1
  3840  0255  3000               	movlw	0
  3841  0256  00B4               	movwf	?___ftdiv+2
  3842  0257  0008               	return
  3843  0258                     l2446:	
  3844  0258  3000               	movlw	0
  3845  0259  00BD               	movwf	___ftdiv@f3
  3846  025A  3000               	movlw	0
  3847  025B  00BE               	movwf	___ftdiv@f3+1
  3848  025C  3000               	movlw	0
  3849  025D  00BF               	movwf	___ftdiv@f3+2
  3850  025E  3089               	movlw	137
  3851  025F  0741               	addwf	___ftdiv@sign,w
  3852  0260  00B8               	movwf	??___ftdiv
  3853  0261  0838               	movf	??___ftdiv,w
  3854  0262  02C0               	subwf	___ftdiv@exp,f
  3855  0263  0835               	movf	___ftdiv@f1,w
  3856  0264  00B8               	movwf	??___ftdiv
  3857  0265  0836               	movf	___ftdiv@f1+1,w
  3858  0266  00B9               	movwf	??___ftdiv+1
  3859  0267  0837               	movf	___ftdiv@f1+2,w
  3860  0268  00BA               	movwf	??___ftdiv+2
  3861  0269  3010               	movlw	16
  3862  026A                     u3675:	
  3863  026A  1003               	clrc
  3864  026B  0CBA               	rrf	??___ftdiv+2,f
  3865  026C  0CB9               	rrf	??___ftdiv+1,f
  3866  026D  0CB8               	rrf	??___ftdiv,f
  3867  026E  3EFF               	addlw	-1
  3868  026F  1D03               	skipz
  3869  0270  2A6A               	goto	u3675
  3870  0271  0838               	movf	??___ftdiv,w
  3871  0272  00BB               	movwf	??___ftdiv+3
  3872  0273  083B               	movf	??___ftdiv+3,w
  3873  0274  00C1               	movwf	___ftdiv@sign
  3874  0275  0832               	movf	___ftdiv@f2,w
  3875  0276  00B8               	movwf	??___ftdiv
  3876  0277  0833               	movf	___ftdiv@f2+1,w
  3877  0278  00B9               	movwf	??___ftdiv+1
  3878  0279  0834               	movf	___ftdiv@f2+2,w
  3879  027A  00BA               	movwf	??___ftdiv+2
  3880  027B  3010               	movlw	16
  3881  027C                     u3685:	
  3882  027C  1003               	clrc
  3883  027D  0CBA               	rrf	??___ftdiv+2,f
  3884  027E  0CB9               	rrf	??___ftdiv+1,f
  3885  027F  0CB8               	rrf	??___ftdiv,f
  3886  0280  3EFF               	addlw	-1
  3887  0281  1D03               	skipz
  3888  0282  2A7C               	goto	u3685
  3889  0283  0838               	movf	??___ftdiv,w
  3890  0284  00BB               	movwf	??___ftdiv+3
  3891  0285  083B               	movf	??___ftdiv+3,w
  3892  0286  06C1               	xorwf	___ftdiv@sign,f
  3893  0287  3080               	movlw	128
  3894  0288  00B8               	movwf	??___ftdiv
  3895  0289  0838               	movf	??___ftdiv,w
  3896  028A  05C1               	andwf	___ftdiv@sign,f
  3897  028B  17B6               	bsf	___ftdiv@f1+1,7
  3898  028C  30FF               	movlw	255
  3899  028D  05B5               	andwf	___ftdiv@f1,f
  3900  028E  30FF               	movlw	255
  3901  028F  05B6               	andwf	___ftdiv@f1+1,f
  3902  0290  3000               	movlw	0
  3903  0291  05B7               	andwf	___ftdiv@f1+2,f
  3904  0292  17B3               	bsf	___ftdiv@f2+1,7
  3905  0293  30FF               	movlw	255
  3906  0294  05B2               	andwf	___ftdiv@f2,f
  3907  0295  30FF               	movlw	255
  3908  0296  05B3               	andwf	___ftdiv@f2+1,f
  3909  0297  3000               	movlw	0
  3910  0298  05B4               	andwf	___ftdiv@f2+2,f
  3911  0299  3018               	movlw	24
  3912  029A  00B8               	movwf	??___ftdiv
  3913  029B  0838               	movf	??___ftdiv,w
  3914  029C  00BC               	movwf	___ftdiv@cntr
  3915  029D                     l2460:	
  3916  029D  3001               	movlw	1
  3917  029E                     u3695:	
  3918  029E  1003               	clrc
  3919  029F  0DBD               	rlf	___ftdiv@f3,f
  3920  02A0  0DBE               	rlf	___ftdiv@f3+1,f
  3921  02A1  0DBF               	rlf	___ftdiv@f3+2,f
  3922  02A2  3EFF               	addlw	-1
  3923  02A3  1D03               	skipz
  3924  02A4  2A9E               	goto	u3695
  3925  02A5  0834               	movf	___ftdiv@f2+2,w
  3926  02A6  0237               	subwf	___ftdiv@f1+2,w
  3927  02A7  1D03               	skipz
  3928  02A8  2AAF               	goto	u3705
  3929  02A9  0833               	movf	___ftdiv@f2+1,w
  3930  02AA  0236               	subwf	___ftdiv@f1+1,w
  3931  02AB  1D03               	skipz
  3932  02AC  2AAF               	goto	u3705
  3933  02AD  0832               	movf	___ftdiv@f2,w
  3934  02AE  0235               	subwf	___ftdiv@f1,w
  3935  02AF                     u3705:	
  3936  02AF  1C03               	skipc
  3937  02B0  2ABC               	goto	l2468
  3938  02B1  0832               	movf	___ftdiv@f2,w
  3939  02B2  02B5               	subwf	___ftdiv@f1,f
  3940  02B3  0833               	movf	___ftdiv@f2+1,w
  3941  02B4  1C03               	skipc
  3942  02B5  0F33               	incfsz	___ftdiv@f2+1,w
  3943  02B6  02B6               	subwf	___ftdiv@f1+1,f
  3944  02B7  0834               	movf	___ftdiv@f2+2,w
  3945  02B8  1C03               	skipc
  3946  02B9  0A34               	incf	___ftdiv@f2+2,w
  3947  02BA  02B7               	subwf	___ftdiv@f1+2,f
  3948  02BB  143D               	bsf	___ftdiv@f3,0
  3949  02BC                     l2468:	
  3950  02BC  3001               	movlw	1
  3951  02BD                     u3715:	
  3952  02BD  1003               	clrc
  3953  02BE  0DB5               	rlf	___ftdiv@f1,f
  3954  02BF  0DB6               	rlf	___ftdiv@f1+1,f
  3955  02C0  0DB7               	rlf	___ftdiv@f1+2,f
  3956  02C1  3EFF               	addlw	-1
  3957  02C2  1D03               	skipz
  3958  02C3  2ABD               	goto	u3715
  3959  02C4  3001               	movlw	1
  3960  02C5  02BC               	subwf	___ftdiv@cntr,f
  3961  02C6  1D03               	btfss	3,2
  3962  02C7  2A9D               	goto	l2460
  3963  02C8  083D               	movf	___ftdiv@f3,w
  3964  02C9  00F0               	movwf	___ftpack@arg
  3965  02CA  083E               	movf	___ftdiv@f3+1,w
  3966  02CB  00F1               	movwf	___ftpack@arg+1
  3967  02CC  083F               	movf	___ftdiv@f3+2,w
  3968  02CD  00F2               	movwf	___ftpack@arg+2
  3969  02CE  0840               	movf	___ftdiv@exp,w
  3970  02CF  00B8               	movwf	??___ftdiv
  3971  02D0  0838               	movf	??___ftdiv,w
  3972  02D1  00F3               	movwf	___ftpack@exp
  3973  02D2  0841               	movf	___ftdiv@sign,w
  3974  02D3  00B9               	movwf	??___ftdiv+1
  3975  02D4  0839               	movf	??___ftdiv+1,w
  3976  02D5  00F4               	movwf	___ftpack@sign
  3977  02D6  120A  158A  25BA   	fcall	___ftpack
  3978  02D9  0870               	movf	?___ftpack,w
  3979  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3980  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3981  02DC  00B2               	movwf	?___ftdiv
  3982  02DD  0871               	movf	?___ftpack+1,w
  3983  02DE  00B3               	movwf	?___ftdiv+1
  3984  02DF  0872               	movf	?___ftpack+2,w
  3985  02E0  00B4               	movwf	?___ftdiv+2
  3986  02E1  0008               	return
  3987  02E2                     __end_of___ftdiv:	
  3988                           
  3989                           	psect	text16
  3990  0DBA                     __ptext16:	
  3991 ;; *************** function ___ftpack *****************
  3992 ;; Defined at:
  3993 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  arg             3    0[COMMON] unsigned um
  3996 ;;  exp             1    3[COMMON] unsigned char 
  3997 ;;  sign            1    4[COMMON] unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  3    0[COMMON] float 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         5       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0
  4011 ;;      Temps:          3       0       0       0       0
  4012 ;;      Totals:         8       0       0       0       0
  4013 ;;Total ram usage:        8 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		___altoft
  4019 ;;		___ftadd
  4020 ;;		___ftdiv
  4021 ;;		___ftmul
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function ___ftpack
  4027  0DBA                     ___ftpack:	
  4028                           
  4029                           ;incstack = 0
  4030                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4031  0DBA  0873               	movf	___ftpack@exp,w
  4032  0DBB  1903               	btfsc	3,2
  4033  0DBC  2DC2               	goto	l1908
  4034  0DBD  0872               	movf	___ftpack@arg+2,w
  4035  0DBE  0471               	iorwf	___ftpack@arg+1,w
  4036  0DBF  0470               	iorwf	___ftpack@arg,w
  4037  0DC0  1D03               	skipz
  4038  0DC1  2DD5               	goto	l1914
  4039  0DC2                     l1908:	
  4040  0DC2  3000               	movlw	0
  4041  0DC3  00F0               	movwf	?___ftpack
  4042  0DC4  3000               	movlw	0
  4043  0DC5  00F1               	movwf	?___ftpack+1
  4044  0DC6  3000               	movlw	0
  4045  0DC7  00F2               	movwf	?___ftpack+2
  4046  0DC8  0008               	return
  4047  0DC9                     l1912:	
  4048  0DC9  3001               	movlw	1
  4049  0DCA  00F5               	movwf	??___ftpack
  4050  0DCB  0875               	movf	??___ftpack,w
  4051  0DCC  07F3               	addwf	___ftpack@exp,f
  4052  0DCD  3001               	movlw	1
  4053  0DCE                     u2215:	
  4054  0DCE  1003               	clrc
  4055  0DCF  0CF2               	rrf	___ftpack@arg+2,f
  4056  0DD0  0CF1               	rrf	___ftpack@arg+1,f
  4057  0DD1  0CF0               	rrf	___ftpack@arg,f
  4058  0DD2  3EFF               	addlw	-1
  4059  0DD3  1D03               	skipz
  4060  0DD4  2DCE               	goto	u2215
  4061  0DD5                     l1914:	
  4062  0DD5  30FE               	movlw	254
  4063  0DD6  0572               	andwf	___ftpack@arg+2,w
  4064  0DD7  1903               	btfsc	3,2
  4065  0DD8  2DF0               	goto	l581
  4066  0DD9  2DC9               	goto	l1912
  4067  0DDA                     l1916:	
  4068  0DDA  3001               	movlw	1
  4069  0DDB  00F5               	movwf	??___ftpack
  4070  0DDC  0875               	movf	??___ftpack,w
  4071  0DDD  07F3               	addwf	___ftpack@exp,f
  4072  0DDE  3001               	movlw	1
  4073  0DDF  07F0               	addwf	___ftpack@arg,f
  4074  0DE0  3000               	movlw	0
  4075  0DE1  1803               	skipnc
  4076  0DE2  3001               	movlw	1
  4077  0DE3  07F1               	addwf	___ftpack@arg+1,f
  4078  0DE4  3000               	movlw	0
  4079  0DE5  1803               	skipnc
  4080  0DE6  3001               	movlw	1
  4081  0DE7  07F2               	addwf	___ftpack@arg+2,f
  4082  0DE8  3001               	movlw	1
  4083  0DE9                     u2235:	
  4084  0DE9  1003               	clrc
  4085  0DEA  0CF2               	rrf	___ftpack@arg+2,f
  4086  0DEB  0CF1               	rrf	___ftpack@arg+1,f
  4087  0DEC  0CF0               	rrf	___ftpack@arg,f
  4088  0DED  3EFF               	addlw	-1
  4089  0DEE  1D03               	skipz
  4090  0DEF  2DE9               	goto	u2235
  4091  0DF0                     l581:	
  4092  0DF0  30FF               	movlw	255
  4093  0DF1  0572               	andwf	___ftpack@arg+2,w
  4094  0DF2  1903               	btfsc	3,2
  4095  0DF3  2DFF               	goto	l1924
  4096  0DF4  2DDA               	goto	l1916
  4097  0DF5                     l1922:	
  4098  0DF5  3001               	movlw	1
  4099  0DF6  02F3               	subwf	___ftpack@exp,f
  4100  0DF7  3001               	movlw	1
  4101  0DF8                     u2255:	
  4102  0DF8  1003               	clrc
  4103  0DF9  0DF0               	rlf	___ftpack@arg,f
  4104  0DFA  0DF1               	rlf	___ftpack@arg+1,f
  4105  0DFB  0DF2               	rlf	___ftpack@arg+2,f
  4106  0DFC  3EFF               	addlw	-1
  4107  0DFD  1D03               	skipz
  4108  0DFE  2DF8               	goto	u2255
  4109  0DFF                     l1924:	
  4110  0DFF  1BF1               	btfsc	___ftpack@arg+1,7
  4111  0E00  2E05               	goto	l588
  4112  0E01  3002               	movlw	2
  4113  0E02  0273               	subwf	___ftpack@exp,w
  4114  0E03  1803               	skipnc
  4115  0E04  2DF5               	goto	l1922
  4116  0E05                     l588:	
  4117  0E05  1873               	btfsc	___ftpack@exp,0
  4118  0E06  2E0D               	goto	l589
  4119  0E07  30FF               	movlw	255
  4120  0E08  05F0               	andwf	___ftpack@arg,f
  4121  0E09  307F               	movlw	127
  4122  0E0A  05F1               	andwf	___ftpack@arg+1,f
  4123  0E0B  30FF               	movlw	255
  4124  0E0C  05F2               	andwf	___ftpack@arg+2,f
  4125  0E0D                     l589:	
  4126  0E0D  1003               	clrc
  4127  0E0E  0CF3               	rrf	___ftpack@exp,f
  4128  0E0F  0873               	movf	___ftpack@exp,w
  4129  0E10  00F5               	movwf	??___ftpack
  4130  0E11  01F6               	clrf	??___ftpack+1
  4131  0E12  01F7               	clrf	??___ftpack+2
  4132  0E13  3010               	movlw	16
  4133  0E14                     u2295:	
  4134  0E14  1003               	clrc
  4135  0E15  0DF5               	rlf	??___ftpack,f
  4136  0E16  0DF6               	rlf	??___ftpack+1,f
  4137  0E17  0DF7               	rlf	??___ftpack+2,f
  4138  0E18  3EFF               	addlw	-1
  4139  0E19  1D03               	skipz
  4140  0E1A  2E14               	goto	u2295
  4141  0E1B  0875               	movf	??___ftpack,w
  4142  0E1C  04F0               	iorwf	___ftpack@arg,f
  4143  0E1D  0876               	movf	??___ftpack+1,w
  4144  0E1E  04F1               	iorwf	___ftpack@arg+1,f
  4145  0E1F  0877               	movf	??___ftpack+2,w
  4146  0E20  04F2               	iorwf	___ftpack@arg+2,f
  4147  0E21  0874               	movf	___ftpack@sign,w
  4148  0E22  1903               	btfsc	3,2
  4149  0E23  0008               	return
  4150  0E24  17F2               	bsf	___ftpack@arg+2,7
  4151  0E25  0008               	return
  4152  0E26                     __end_of___ftpack:	
  4153                           
  4154                           	psect	text17
  4155  057E                     __ptext17:	
  4156 ;; *************** function _ReadRTCAsSec *****************
  4157 ;; Defined at:
  4158 ;;		line 27 in file "libs/gsk_funs.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  Out             4   19[BANK0 ] unsigned long 
  4163 ;;  TempVar000      1   23[BANK0 ] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  4    0[BANK0 ] unsigned long 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, pclath, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         0       4       0       0       0
  4174 ;;      Locals:         0       7       0       0       0
  4175 ;;      Temps:          0      13       0       0       0
  4176 ;;      Totals:         0      24       0       0       0
  4177 ;;Total ram usage:       24 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    3
  4180 ;; This function calls:
  4181 ;;		_I2C_ReadAtAddress
  4182 ;;		___lmul
  4183 ;;		___wmul
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           
  4190                           ;psect for function _ReadRTCAsSec
  4191  057E                     _ReadRTCAsSec:	
  4192                           
  4193                           ;gsk_funs.c: 28: char TempVar000;
  4194                           ;gsk_funs.c: 29: uint32_t Out = 0;
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in _ReadRTCAsSec: [wreg+status,2+status,0+pclath+cstack]
  4198  057E  3000               	movlw	0
  4199  057F  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0580  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0581  00B6               	movwf	ReadRTCAsSec@Out+3
  4202  0582  3000               	movlw	0
  4203  0583  00B5               	movwf	ReadRTCAsSec@Out+2
  4204  0584  3000               	movlw	0
  4205  0585  00B4               	movwf	ReadRTCAsSec@Out+1
  4206  0586  3000               	movlw	0
  4207  0587  00B3               	movwf	ReadRTCAsSec@Out
  4208                           
  4209                           ;gsk_funs.c: 30: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
  4210  0588  3002               	movlw	2
  4211  0589  00A4               	movwf	??_ReadRTCAsSec
  4212  058A  0824               	movf	??_ReadRTCAsSec,w
  4213  058B  00F6               	movwf	I2C_ReadAtAddress@IntAdd
  4214  058C  30DE               	movlw	222
  4215  058D  120A  158A  22FC  120A  118A  	fcall	_I2C_ReadAtAddress
  4216  0592  1283               	bcf	3,5	;RP0=0, select bank0
  4217  0593  1303               	bcf	3,6	;RP1=0, select bank0
  4218  0594  00A5               	movwf	??_ReadRTCAsSec+1
  4219  0595  0825               	movf	??_ReadRTCAsSec+1,w
  4220  0596  00B7               	movwf	ReadRTCAsSec@TempVar000
  4221                           
  4222                           ;gsk_funs.c: 31: Out = ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x03)*10);
  4223  0597  0837               	movf	ReadRTCAsSec@TempVar000,w
  4224  0598  00A4               	movwf	??_ReadRTCAsSec
  4225  0599  3004               	movlw	4
  4226  059A                     u4115:	
  4227  059A  1003               	clrc
  4228  059B  0CA4               	rrf	??_ReadRTCAsSec,f
  4229  059C  3EFF               	addlw	-1
  4230  059D  1D03               	skipz
  4231  059E  2D9A               	goto	u4115
  4232  059F  0824               	movf	??_ReadRTCAsSec,w
  4233  05A0  3903               	andlw	3
  4234  05A1  00A5               	movwf	??_ReadRTCAsSec+1
  4235  05A2  01A6               	clrf	??_ReadRTCAsSec+2
  4236  05A3  0825               	movf	??_ReadRTCAsSec+1,w
  4237  05A4  00F0               	movwf	___wmul@multiplier
  4238  05A5  0826               	movf	??_ReadRTCAsSec+2,w
  4239  05A6  00F1               	movwf	___wmul@multiplier+1
  4240  05A7  300A               	movlw	10
  4241  05A8  00F2               	movwf	___wmul@multiplicand
  4242  05A9  3000               	movlw	0
  4243  05AA  00F3               	movwf	___wmul@multiplicand+1
  4244  05AB  120A  158A  2116  120A  118A  	fcall	___wmul
  4245  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  4246  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  4247  05B2  0837               	movf	ReadRTCAsSec@TempVar000,w
  4248  05B3  390F               	andlw	15
  4249  05B4  0770               	addwf	?___wmul,w
  4250  05B5  00B3               	movwf	ReadRTCAsSec@Out
  4251  05B6  0871               	movf	?___wmul+1,w
  4252  05B7  1803               	skipnc
  4253  05B8  0A71               	incf	?___wmul+1,w
  4254  05B9  00B4               	movwf	ReadRTCAsSec@Out+1
  4255  05BA  01B5               	clrf	ReadRTCAsSec@Out+2
  4256  05BB  1BB4               	btfsc	ReadRTCAsSec@Out+1,7
  4257  05BC  03B5               	decf	ReadRTCAsSec@Out+2,f
  4258  05BD  0835               	movf	ReadRTCAsSec@Out+2,w
  4259  05BE  00B6               	movwf	ReadRTCAsSec@Out+3
  4260                           
  4261                           ;gsk_funs.c: 32: Out = Out*3600;
  4262  05BF  0836               	movf	ReadRTCAsSec@Out+3,w
  4263  05C0  00F3               	movwf	___lmul@multiplier+3
  4264  05C1  0835               	movf	ReadRTCAsSec@Out+2,w
  4265  05C2  00F2               	movwf	___lmul@multiplier+2
  4266  05C3  0834               	movf	ReadRTCAsSec@Out+1,w
  4267  05C4  00F1               	movwf	___lmul@multiplier+1
  4268  05C5  0833               	movf	ReadRTCAsSec@Out,w
  4269  05C6  00F0               	movwf	___lmul@multiplier
  4270  05C7  3000               	movlw	0
  4271  05C8  00F7               	movwf	___lmul@multiplicand+3
  4272  05C9  3000               	movlw	0
  4273  05CA  00F6               	movwf	___lmul@multiplicand+2
  4274  05CB  300E               	movlw	14
  4275  05CC  00F5               	movwf	___lmul@multiplicand+1
  4276  05CD  3010               	movlw	16
  4277  05CE  00F4               	movwf	___lmul@multiplicand
  4278  05CF  120A  158A  223D  120A  118A  	fcall	___lmul
  4279  05D4  0873               	movf	?___lmul+3,w
  4280  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  4281  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  4282  05D7  00B6               	movwf	ReadRTCAsSec@Out+3
  4283  05D8  0872               	movf	?___lmul+2,w
  4284  05D9  00B5               	movwf	ReadRTCAsSec@Out+2
  4285  05DA  0871               	movf	?___lmul+1,w
  4286  05DB  00B4               	movwf	ReadRTCAsSec@Out+1
  4287  05DC  0870               	movf	?___lmul,w
  4288  05DD  00B3               	movwf	ReadRTCAsSec@Out
  4289                           
  4290                           ;gsk_funs.c: 34: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
  4291  05DE  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  4292  05DF  0AF6               	incf	I2C_ReadAtAddress@IntAdd,f
  4293  05E0  30DE               	movlw	222
  4294  05E1  120A  158A  22FC  120A  118A  	fcall	_I2C_ReadAtAddress
  4295  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  4296  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  4297  05E8  00A4               	movwf	??_ReadRTCAsSec
  4298  05E9  0824               	movf	??_ReadRTCAsSec,w
  4299  05EA  00B7               	movwf	ReadRTCAsSec@TempVar000
  4300                           
  4301                           ;gsk_funs.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  4302  05EB  0837               	movf	ReadRTCAsSec@TempVar000,w
  4303  05EC  00A4               	movwf	??_ReadRTCAsSec
  4304  05ED  3004               	movlw	4
  4305  05EE                     u4125:	
  4306  05EE  1003               	clrc
  4307  05EF  0CA4               	rrf	??_ReadRTCAsSec,f
  4308  05F0  3EFF               	addlw	-1
  4309  05F1  1D03               	skipz
  4310  05F2  2DEE               	goto	u4125
  4311  05F3  0824               	movf	??_ReadRTCAsSec,w
  4312  05F4  3907               	andlw	7
  4313  05F5  00A5               	movwf	??_ReadRTCAsSec+1
  4314  05F6  01A6               	clrf	??_ReadRTCAsSec+2
  4315  05F7  0825               	movf	??_ReadRTCAsSec+1,w
  4316  05F8  00F0               	movwf	___wmul@multiplier
  4317  05F9  0826               	movf	??_ReadRTCAsSec+2,w
  4318  05FA  00F1               	movwf	___wmul@multiplier+1
  4319  05FB  300A               	movlw	10
  4320  05FC  00F2               	movwf	___wmul@multiplicand
  4321  05FD  3000               	movlw	0
  4322  05FE  00F3               	movwf	___wmul@multiplicand+1
  4323  05FF  120A  158A  2116  120A  118A  	fcall	___wmul
  4324  0604  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0605  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0606  0837               	movf	ReadRTCAsSec@TempVar000,w
  4327  0607  390F               	andlw	15
  4328  0608  0770               	addwf	?___wmul,w
  4329  0609  00B1               	movwf	_ReadRTCAsSec$806
  4330  060A  0871               	movf	?___wmul+1,w
  4331  060B  1803               	skipnc
  4332  060C  0A71               	incf	?___wmul+1,w
  4333  060D  00B2               	movwf	_ReadRTCAsSec$806+1
  4334                           
  4335                           ;gsk_funs.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  4336  060E  0833               	movf	ReadRTCAsSec@Out,w
  4337  060F  00A4               	movwf	??_ReadRTCAsSec
  4338  0610  0834               	movf	ReadRTCAsSec@Out+1,w
  4339  0611  00A5               	movwf	??_ReadRTCAsSec+1
  4340  0612  0835               	movf	ReadRTCAsSec@Out+2,w
  4341  0613  00A6               	movwf	??_ReadRTCAsSec+2
  4342  0614  0836               	movf	ReadRTCAsSec@Out+3,w
  4343  0615  00A7               	movwf	??_ReadRTCAsSec+3
  4344  0616  0832               	movf	_ReadRTCAsSec$806+1,w
  4345  0617  00F1               	movwf	___wmul@multiplier+1
  4346  0618  0831               	movf	_ReadRTCAsSec$806,w
  4347  0619  00F0               	movwf	___wmul@multiplier
  4348  061A  303C               	movlw	60
  4349  061B  00F2               	movwf	___wmul@multiplicand
  4350  061C  3000               	movlw	0
  4351  061D  00F3               	movwf	___wmul@multiplicand+1
  4352  061E  120A  158A  2116  120A  118A  	fcall	___wmul
  4353  0623  0870               	movf	?___wmul,w
  4354  0624  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0625  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0626  00A8               	movwf	??_ReadRTCAsSec+4
  4357  0627  0871               	movf	?___wmul+1,w
  4358  0628  00A9               	movwf	??_ReadRTCAsSec+5
  4359  0629  3000               	movlw	0
  4360  062A  1BA9               	btfsc	??_ReadRTCAsSec+5,7
  4361  062B  30FF               	movlw	255
  4362  062C  00AA               	movwf	??_ReadRTCAsSec+6
  4363  062D  00AB               	movwf	??_ReadRTCAsSec+7
  4364  062E  0828               	movf	??_ReadRTCAsSec+4,w
  4365  062F  07A4               	addwf	??_ReadRTCAsSec,f
  4366  0630  0829               	movf	??_ReadRTCAsSec+5,w
  4367  0631  1803               	skipnc
  4368  0632  0F29               	incfsz	??_ReadRTCAsSec+5,w
  4369  0633  2E35               	goto	u4130
  4370  0634  2E36               	goto	u4131
  4371  0635                     u4130:	
  4372  0635  07A5               	addwf	??_ReadRTCAsSec+1,f
  4373  0636                     u4131:	
  4374  0636  082A               	movf	??_ReadRTCAsSec+6,w
  4375  0637  1803               	skipnc
  4376  0638  0F2A               	incfsz	??_ReadRTCAsSec+6,w
  4377  0639  2E3B               	goto	u4132
  4378  063A  2E3C               	goto	u4133
  4379  063B                     u4132:	
  4380  063B  07A6               	addwf	??_ReadRTCAsSec+2,f
  4381  063C                     u4133:	
  4382  063C  082B               	movf	??_ReadRTCAsSec+7,w
  4383  063D  1803               	skipnc
  4384  063E  0A2B               	incf	??_ReadRTCAsSec+7,w
  4385  063F  07A7               	addwf	??_ReadRTCAsSec+3,f
  4386  0640  0827               	movf	??_ReadRTCAsSec+3,w
  4387  0641  00B6               	movwf	ReadRTCAsSec@Out+3
  4388  0642  0826               	movf	??_ReadRTCAsSec+2,w
  4389  0643  00B5               	movwf	ReadRTCAsSec@Out+2
  4390  0644  0825               	movf	??_ReadRTCAsSec+1,w
  4391  0645  00B4               	movwf	ReadRTCAsSec@Out+1
  4392  0646  0824               	movf	??_ReadRTCAsSec,w
  4393  0647  00B3               	movwf	ReadRTCAsSec@Out
  4394                           
  4395                           ;gsk_funs.c: 37: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
  4396  0648  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  4397  0649  30DE               	movlw	222
  4398  064A  120A  158A  22FC  120A  118A  	fcall	_I2C_ReadAtAddress
  4399  064F  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4401  0651  00A4               	movwf	??_ReadRTCAsSec
  4402  0652  0824               	movf	??_ReadRTCAsSec,w
  4403  0653  00B7               	movwf	ReadRTCAsSec@TempVar000
  4404                           
  4405                           ;gsk_funs.c: 38: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10);
  4406  0654  0833               	movf	ReadRTCAsSec@Out,w
  4407  0655  00A4               	movwf	??_ReadRTCAsSec
  4408  0656  0834               	movf	ReadRTCAsSec@Out+1,w
  4409  0657  00A5               	movwf	??_ReadRTCAsSec+1
  4410  0658  0835               	movf	ReadRTCAsSec@Out+2,w
  4411  0659  00A6               	movwf	??_ReadRTCAsSec+2
  4412  065A  0836               	movf	ReadRTCAsSec@Out+3,w
  4413  065B  00A7               	movwf	??_ReadRTCAsSec+3
  4414  065C  0837               	movf	ReadRTCAsSec@TempVar000,w
  4415  065D  00A8               	movwf	??_ReadRTCAsSec+4
  4416  065E  3004               	movlw	4
  4417  065F                     u4145:	
  4418  065F  1003               	clrc
  4419  0660  0CA8               	rrf	??_ReadRTCAsSec+4,f
  4420  0661  3EFF               	addlw	-1
  4421  0662  1D03               	skipz
  4422  0663  2E5F               	goto	u4145
  4423  0664  0828               	movf	??_ReadRTCAsSec+4,w
  4424  0665  3907               	andlw	7
  4425  0666  00A9               	movwf	??_ReadRTCAsSec+5
  4426  0667  01AA               	clrf	??_ReadRTCAsSec+6
  4427  0668  0829               	movf	??_ReadRTCAsSec+5,w
  4428  0669  00F0               	movwf	___wmul@multiplier
  4429  066A  082A               	movf	??_ReadRTCAsSec+6,w
  4430  066B  00F1               	movwf	___wmul@multiplier+1
  4431  066C  300A               	movlw	10
  4432  066D  00F2               	movwf	___wmul@multiplicand
  4433  066E  3000               	movlw	0
  4434  066F  00F3               	movwf	___wmul@multiplicand+1
  4435  0670  120A  158A  2116  120A  118A  	fcall	___wmul
  4436  0675  1283               	bcf	3,5	;RP0=0, select bank0
  4437  0676  1303               	bcf	3,6	;RP1=0, select bank0
  4438  0677  0837               	movf	ReadRTCAsSec@TempVar000,w
  4439  0678  390F               	andlw	15
  4440  0679  0770               	addwf	?___wmul,w
  4441  067A  00AB               	movwf	??_ReadRTCAsSec+7
  4442  067B  0871               	movf	?___wmul+1,w
  4443  067C  1803               	skipnc
  4444  067D  0A71               	incf	?___wmul+1,w
  4445  067E  00AC               	movwf	??_ReadRTCAsSec+8
  4446  067F  082B               	movf	??_ReadRTCAsSec+7,w
  4447  0680  00AD               	movwf	??_ReadRTCAsSec+9
  4448  0681  082C               	movf	??_ReadRTCAsSec+8,w
  4449  0682  00AE               	movwf	??_ReadRTCAsSec+10
  4450  0683  3000               	movlw	0
  4451  0684  1BAE               	btfsc	??_ReadRTCAsSec+10,7
  4452  0685  30FF               	movlw	255
  4453  0686  00AF               	movwf	??_ReadRTCAsSec+11
  4454  0687  00B0               	movwf	??_ReadRTCAsSec+12
  4455  0688  082D               	movf	??_ReadRTCAsSec+9,w
  4456  0689  07A4               	addwf	??_ReadRTCAsSec,f
  4457  068A  082E               	movf	??_ReadRTCAsSec+10,w
  4458  068B  1803               	skipnc
  4459  068C  0F2E               	incfsz	??_ReadRTCAsSec+10,w
  4460  068D  2E8F               	goto	u4150
  4461  068E  2E90               	goto	u4151
  4462  068F                     u4150:	
  4463  068F  07A5               	addwf	??_ReadRTCAsSec+1,f
  4464  0690                     u4151:	
  4465  0690  082F               	movf	??_ReadRTCAsSec+11,w
  4466  0691  1803               	skipnc
  4467  0692  0F2F               	incfsz	??_ReadRTCAsSec+11,w
  4468  0693  2E95               	goto	u4152
  4469  0694  2E96               	goto	u4153
  4470  0695                     u4152:	
  4471  0695  07A6               	addwf	??_ReadRTCAsSec+2,f
  4472  0696                     u4153:	
  4473  0696  0830               	movf	??_ReadRTCAsSec+12,w
  4474  0697  1803               	skipnc
  4475  0698  0A30               	incf	??_ReadRTCAsSec+12,w
  4476  0699  07A7               	addwf	??_ReadRTCAsSec+3,f
  4477  069A  0827               	movf	??_ReadRTCAsSec+3,w
  4478  069B  00B6               	movwf	ReadRTCAsSec@Out+3
  4479  069C  0826               	movf	??_ReadRTCAsSec+2,w
  4480  069D  00B5               	movwf	ReadRTCAsSec@Out+2
  4481  069E  0825               	movf	??_ReadRTCAsSec+1,w
  4482  069F  00B4               	movwf	ReadRTCAsSec@Out+1
  4483  06A0  0824               	movf	??_ReadRTCAsSec,w
  4484  06A1  00B3               	movwf	ReadRTCAsSec@Out
  4485                           
  4486                           ;gsk_funs.c: 39: return Out;
  4487  06A2  0836               	movf	ReadRTCAsSec@Out+3,w
  4488  06A3  00A3               	movwf	?_ReadRTCAsSec+3
  4489  06A4  0835               	movf	ReadRTCAsSec@Out+2,w
  4490  06A5  00A2               	movwf	?_ReadRTCAsSec+2
  4491  06A6  0834               	movf	ReadRTCAsSec@Out+1,w
  4492  06A7  00A1               	movwf	?_ReadRTCAsSec+1
  4493  06A8  0833               	movf	ReadRTCAsSec@Out,w
  4494  06A9  00A0               	movwf	?_ReadRTCAsSec
  4495  06AA  0008               	return
  4496  06AB                     __end_of_ReadRTCAsSec:	
  4497                           
  4498                           	psect	text18
  4499  0A3D                     __ptext18:	
  4500 ;; *************** function ___lmul *****************
  4501 ;; Defined at:
  4502 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  multiplier      4    0[COMMON] unsigned long 
  4505 ;;  multiplicand    4    4[COMMON] unsigned long 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  product         4    9[COMMON] unsigned long 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  4    0[COMMON] unsigned long 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4517 ;;      Params:         8       0       0       0       0
  4518 ;;      Locals:         4       0       0       0       0
  4519 ;;      Temps:          1       0       0       0       0
  4520 ;;      Totals:        13       0       0       0       0
  4521 ;;Total ram usage:       13 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_ReadRTCAsSec
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           
  4531                           ;psect for function ___lmul
  4532  0A3D                     ___lmul:	
  4533                           
  4534                           ;incstack = 0
  4535                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4536  0A3D  3000               	movlw	0
  4537  0A3E  00FC               	movwf	___lmul@product+3
  4538  0A3F  3000               	movlw	0
  4539  0A40  00FB               	movwf	___lmul@product+2
  4540  0A41  3000               	movlw	0
  4541  0A42  00FA               	movwf	___lmul@product+1
  4542  0A43  3000               	movlw	0
  4543  0A44  00F9               	movwf	___lmul@product
  4544  0A45                     l2422:	
  4545  0A45  1C70               	btfss	___lmul@multiplier,0
  4546  0A46  2A5B               	goto	l2426
  4547  0A47  0874               	movf	___lmul@multiplicand,w
  4548  0A48  07F9               	addwf	___lmul@product,f
  4549  0A49  0875               	movf	___lmul@multiplicand+1,w
  4550  0A4A  1103               	clrz
  4551  0A4B  1803               	skipnc
  4552  0A4C  3E01               	addlw	1
  4553  0A4D  1D03               	btfss	3,2
  4554  0A4E  07FA               	addwf	___lmul@product+1,f
  4555  0A4F  0876               	movf	___lmul@multiplicand+2,w
  4556  0A50  1103               	clrz
  4557  0A51  1803               	skipnc
  4558  0A52  3E01               	addlw	1
  4559  0A53  1D03               	btfss	3,2
  4560  0A54  07FB               	addwf	___lmul@product+2,f
  4561  0A55  0877               	movf	___lmul@multiplicand+3,w
  4562  0A56  1103               	clrz
  4563  0A57  1803               	skipnc
  4564  0A58  3E01               	addlw	1
  4565  0A59  1D03               	btfss	3,2
  4566  0A5A  07FC               	addwf	___lmul@product+3,f
  4567  0A5B                     l2426:	
  4568  0A5B  3001               	movlw	1
  4569  0A5C  00F8               	movwf	??___lmul
  4570  0A5D                     u3625:	
  4571  0A5D  1003               	clrc
  4572  0A5E  0DF4               	rlf	___lmul@multiplicand,f
  4573  0A5F  0DF5               	rlf	___lmul@multiplicand+1,f
  4574  0A60  0DF6               	rlf	___lmul@multiplicand+2,f
  4575  0A61  0DF7               	rlf	___lmul@multiplicand+3,f
  4576  0A62  0BF8               	decfsz	??___lmul,f
  4577  0A63  2A5D               	goto	u3625
  4578  0A64  3001               	movlw	1
  4579  0A65                     u3635:	
  4580  0A65  1003               	clrc
  4581  0A66  0CF3               	rrf	___lmul@multiplier+3,f
  4582  0A67  0CF2               	rrf	___lmul@multiplier+2,f
  4583  0A68  0CF1               	rrf	___lmul@multiplier+1,f
  4584  0A69  0CF0               	rrf	___lmul@multiplier,f
  4585  0A6A  3EFF               	addlw	-1
  4586  0A6B  1D03               	skipz
  4587  0A6C  2A65               	goto	u3635
  4588  0A6D  0873               	movf	___lmul@multiplier+3,w
  4589  0A6E  0472               	iorwf	___lmul@multiplier+2,w
  4590  0A6F  0471               	iorwf	___lmul@multiplier+1,w
  4591  0A70  0470               	iorwf	___lmul@multiplier,w
  4592  0A71  1D03               	skipz
  4593  0A72  2A45               	goto	l2422
  4594  0A73  087C               	movf	___lmul@product+3,w
  4595  0A74  00F3               	movwf	?___lmul+3
  4596  0A75  087B               	movf	___lmul@product+2,w
  4597  0A76  00F2               	movwf	?___lmul+2
  4598  0A77  087A               	movf	___lmul@product+1,w
  4599  0A78  00F1               	movwf	?___lmul+1
  4600  0A79  0879               	movf	___lmul@product,w
  4601  0A7A  00F0               	movwf	?___lmul
  4602  0A7B  0008               	return
  4603  0A7C                     __end_of___lmul:	
  4604                           
  4605                           	psect	text19
  4606  0A7C                     __ptext19:	
  4607 ;; *************** function _Lcd_Text *****************
  4608 ;; Defined at:
  4609 ;;		line 76 in file "libs/HD44780.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  y               1    wreg     unsigned char 
  4612 ;;  x               1    4[COMMON] unsigned char 
  4613 ;;  buffer          1    5[COMMON] PTR unsigned char 
  4614 ;;		 -> STR_5(7), STR_4(2), STR_3(2), STR_2(5), 
  4615 ;;		 -> STR_1(5), 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  y               1    7[COMMON] unsigned char 
  4618 ;;  data            1    8[COMMON] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         2       0       0       0       0
  4629 ;;      Locals:         2       0       0       0       0
  4630 ;;      Temps:          1       0       0       0       0
  4631 ;;      Totals:         5       0       0       0       0
  4632 ;;Total ram usage:        5 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    2
  4635 ;; This function calls:
  4636 ;;		_Lcd_CharCP
  4637 ;;		_Lcd_Command
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _Lcd_Text
  4645  0A7C                     _Lcd_Text:	
  4646                           
  4647                           ;incstack = 0
  4648                           ; Regs used in _Lcd_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4649                           ;Lcd_Text@y stored from wreg
  4650  0A7C  00F7               	movwf	Lcd_Text@y
  4651                           
  4652                           ;HD44780.c: 77: unsigned char data;
  4653                           ;HD44780.c: 78: switch(y){
  4654  0A7D  2A8D               	goto	l2688
  4655  0A7E                     l2678:	
  4656                           ;HD44780.c: 79: case 1: data = 127 + x; break;
  4657                           
  4658  0A7E  0874               	movf	Lcd_Text@x,w
  4659  0A7F  3E7F               	addlw	127
  4660  0A80  2A89               	goto	L7
  4661  0A81                     l2680:	
  4662                           ;HD44780.c: 80: case 2: data = 191 + x; break;
  4663                           
  4664  0A81  0874               	movf	Lcd_Text@x,w
  4665  0A82  3EBF               	addlw	191
  4666  0A83  2A89               	goto	L7
  4667  0A84                     l2682:	
  4668                           ;HD44780.c: 81: case 3: data = 147 + x; break;
  4669                           
  4670  0A84  0874               	movf	Lcd_Text@x,w
  4671  0A85  3E93               	addlw	147
  4672  0A86  2A89               	goto	L7
  4673  0A87                     l2684:	
  4674                           ;HD44780.c: 82: case 4: data = 211 + x; break;
  4675                           
  4676  0A87  0874               	movf	Lcd_Text@x,w
  4677  0A88  3ED3               	addlw	211
  4678  0A89                     L7:	
  4679  0A89  00F6               	movwf	??_Lcd_Text
  4680  0A8A  0876               	movf	??_Lcd_Text,w
  4681  0A8B  00F8               	movwf	Lcd_Text@data
  4682                           
  4683                           ;HD44780.c: 83: default: break;}
  4684  0A8C  2A9B               	goto	l2690
  4685  0A8D                     l2688:	
  4686  0A8D  0877               	movf	Lcd_Text@y,w
  4687                           
  4688                           ; Switch size 1, requested type "space"
  4689                           ; Number of cases is 4, Range of values is 1 to 4
  4690                           ; switch strategies available:
  4691                           ; Name         Instructions Cycles
  4692                           ; simple_byte           13     7 (average)
  4693                           ; direct_byte           23    11 (fixed)
  4694                           ; jumptable            263     9 (fixed)
  4695                           ;	Chosen strategy is simple_byte
  4696  0A8E  3A01               	xorlw	1	; case 1
  4697  0A8F  1903               	skipnz
  4698  0A90  2A7E               	goto	l2678
  4699  0A91  3A03               	xorlw	3	; case 2
  4700  0A92  1903               	skipnz
  4701  0A93  2A81               	goto	l2680
  4702  0A94  3A01               	xorlw	1	; case 3
  4703  0A95  1903               	skipnz
  4704  0A96  2A84               	goto	l2682
  4705  0A97  3A07               	xorlw	7	; case 4
  4706  0A98  1903               	skipnz
  4707  0A99  2A87               	goto	l2684
  4708  0A9A  2A9B               	goto	l2690
  4709  0A9B                     l2690:	
  4710                           
  4711                           ;HD44780.c: 84: Lcd_Command(data);
  4712  0A9B  0878               	movf	Lcd_Text@data,w
  4713  0A9C  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  4714  0AA1                     l2696:	
  4715                           ;HD44780.c: 85: while(*buffer)
  4716                           
  4717  0AA1  0875               	movf	Lcd_Text@buffer,w
  4718  0AA2  0084               	movwf	4
  4719  0AA3  120A  158A  2000  120A  158A  	fcall	stringdir
  4720  0AA8  3A00               	xorlw	0
  4721  0AA9  1903               	btfsc	3,2
  4722  0AAA  0008               	return
  4723                           
  4724                           ;HD44780.c: 86: {
  4725                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  4726  0AAB  0875               	movf	Lcd_Text@buffer,w
  4727  0AAC  0084               	movwf	4
  4728  0AAD  120A  158A  2000  120A  158A  	fcall	stringdir
  4729  0AB2  120A  118A  2014  120A  158A  	fcall	_Lcd_CharCP
  4730                           
  4731                           ;HD44780.c: 88: buffer++;
  4732  0AB7  3001               	movlw	1
  4733  0AB8  00F6               	movwf	??_Lcd_Text
  4734  0AB9  0876               	movf	??_Lcd_Text,w
  4735  0ABA  07F5               	addwf	Lcd_Text@buffer,f
  4736  0ABB  2AA1               	goto	l2696
  4737  0ABC                     __end_of_Lcd_Text:	
  4738                           ;HD44780.c: 89: }
  4739                           ;HD44780.c: 90: return;
  4740                           
  4741                           
  4742                           	psect	text20
  4743  0EB4                     __ptext20:	
  4744 ;; *************** function _Lcd_Init *****************
  4745 ;; Defined at:
  4746 ;;		line 17 in file "libs/HD44780.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;		None
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  data            1    5[COMMON] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0, pclath, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4760 ;;      Params:         0       0       0       0       0
  4761 ;;      Locals:         1       0       0       0       0
  4762 ;;      Temps:          1       0       0       0       0
  4763 ;;      Totals:         2       0       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    2
  4767 ;; This function calls:
  4768 ;;		_Lcd_Command
  4769 ;;		_Lcd_Delay5500us
  4770 ;;		_Lcd_Delay5us
  4771 ;; This function is called by:
  4772 ;;		_main
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           
  4777                           ;psect for function _Lcd_Init
  4778  0EB4                     _Lcd_Init:	
  4779                           
  4780                           ;HD44780.c: 19: ANSEL = 0x00;
  4781                           
  4782                           ;incstack = 0
  4783                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4784  0EB4  1683               	bsf	3,5	;RP0=1, select bank3
  4785  0EB5  1703               	bsf	3,6	;RP1=1, select bank3
  4786  0EB6  0188               	clrf	8	;volatile
  4787                           
  4788                           ;HD44780.c: 20: ANSELH = 0x00;
  4789  0EB7  0189               	clrf	9	;volatile
  4790                           
  4791                           ;HD44780.c: 23: unsigned char data;
  4792                           ;HD44780.c: 24: TRISAbits.TRISA5 = 0; TRISAbits.TRISA4 = 0; TRISAbits.TRISA3 = 0; TRISAb
      +                          its.TRISA2 = 0; TRISAbits.TRISA1 = 0; TRISAbits.TRISA0 = 0;
  4793  0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  4794  0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  4795  0EBA  1285               	bcf	5,5	;volatile
  4796  0EBB  1205               	bcf	5,4	;volatile
  4797  0EBC  1185               	bcf	5,3	;volatile
  4798  0EBD  1105               	bcf	5,2	;volatile
  4799  0EBE  1085               	bcf	5,1	;volatile
  4800  0EBF  1005               	bcf	5,0	;volatile
  4801                           
  4802                           ;HD44780.c: 25: RA5 = 0; RA4 = 0; RA3 = 0; RA2 = 0; RA1 = 0; RA0 = 0;
  4803  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4804  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  4805  0EC2  1285               	bcf	5,5	;volatile
  4806  0EC3  1205               	bcf	5,4	;volatile
  4807  0EC4  1185               	bcf	5,3	;volatile
  4808  0EC5  1105               	bcf	5,2	;volatile
  4809  0EC6  1085               	bcf	5,1	;volatile
  4810  0EC7  1005               	bcf	5,0	;volatile
  4811                           
  4812                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  4813  0EC8  120A  158A  20E8  120A  158A  	fcall	_Lcd_Delay5500us
  4814  0ECD  120A  158A  20E8  120A  158A  	fcall	_Lcd_Delay5500us
  4815  0ED2  120A  158A  20E8  120A  158A  	fcall	_Lcd_Delay5500us
  4816                           
  4817                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  4818  0ED7  120A  158A  20E8  120A  158A  	fcall	_Lcd_Delay5500us
  4819  0EDC  120A  158A  20E8  120A  158A  	fcall	_Lcd_Delay5500us
  4820  0EE1  120A  158A  20E8  120A  158A  	fcall	_Lcd_Delay5500us
  4821                           
  4822                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  4823  0EE6  01F5               	clrf	Lcd_Init@data
  4824  0EE7  0AF5               	incf	Lcd_Init@data,f
  4825  0EE8  3004               	movlw	4
  4826  0EE9  0275               	subwf	Lcd_Init@data,w
  4827  0EEA  1803               	btfsc	3,0
  4828  0EEB  2F14               	goto	l196
  4829  0EEC                     l195:	
  4830                           
  4831                           ;HD44780.c: 29: {
  4832                           ;HD44780.c: 30: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 0; RA0 = 0;
  4833  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0EEE  1285               	bcf	5,5	;volatile
  4836  0EEF  1205               	bcf	5,4	;volatile
  4837  0EF0  1585               	bsf	5,3	;volatile
  4838  0EF1  1505               	bsf	5,2	;volatile
  4839  0EF2  1085               	bcf	5,1	;volatile
  4840  0EF3  1005               	bcf	5,0	;volatile
  4841                           
  4842                           ;HD44780.c: 31: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 1; RA0 = 0;
  4843  0EF4  1285               	bcf	5,5	;volatile
  4844  0EF5  1205               	bcf	5,4	;volatile
  4845  0EF6  1585               	bsf	5,3	;volatile
  4846  0EF7  1505               	bsf	5,2	;volatile
  4847  0EF8  1485               	bsf	5,1	;volatile
  4848  0EF9  1005               	bcf	5,0	;volatile
  4849                           
  4850                           ;HD44780.c: 32: Lcd_Delay5us();
  4851  0EFA  120A  118A  2003  120A  158A  	fcall	_Lcd_Delay5us
  4852                           
  4853                           ;HD44780.c: 33: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 0; RA0 = 0;
  4854  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4855  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4856  0F01  1285               	bcf	5,5	;volatile
  4857  0F02  1205               	bcf	5,4	;volatile
  4858  0F03  1585               	bsf	5,3	;volatile
  4859  0F04  1505               	bsf	5,2	;volatile
  4860  0F05  1085               	bcf	5,1	;volatile
  4861  0F06  1005               	bcf	5,0	;volatile
  4862                           
  4863                           ;HD44780.c: 34: Lcd_Delay5500us();
  4864  0F07  120A  158A  20E8  120A  158A  	fcall	_Lcd_Delay5500us
  4865  0F0C  3001               	movlw	1
  4866  0F0D  00F4               	movwf	??_Lcd_Init
  4867  0F0E  0874               	movf	??_Lcd_Init,w
  4868  0F0F  07F5               	addwf	Lcd_Init@data,f
  4869  0F10  3004               	movlw	4
  4870  0F11  0275               	subwf	Lcd_Init@data,w
  4871  0F12  1C03               	skipc
  4872  0F13  2EEC               	goto	l195
  4873  0F14                     l196:	
  4874                           
  4875                           ;HD44780.c: 35: }
  4876                           ;HD44780.c: 36: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 0; RA0 = 0;
  4877  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  4879  0F16  1285               	bcf	5,5	;volatile
  4880  0F17  1205               	bcf	5,4	;volatile
  4881  0F18  1585               	bsf	5,3	;volatile
  4882  0F19  1105               	bcf	5,2	;volatile
  4883  0F1A  1085               	bcf	5,1	;volatile
  4884  0F1B  1005               	bcf	5,0	;volatile
  4885                           
  4886                           ;HD44780.c: 37: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 1; RA0 = 0;
  4887  0F1C  1285               	bcf	5,5	;volatile
  4888  0F1D  1205               	bcf	5,4	;volatile
  4889  0F1E  1585               	bsf	5,3	;volatile
  4890  0F1F  1105               	bcf	5,2	;volatile
  4891  0F20  1485               	bsf	5,1	;volatile
  4892  0F21  1005               	bcf	5,0	;volatile
  4893                           
  4894                           ;HD44780.c: 38: Lcd_Delay5us();
  4895  0F22  120A  118A  2003  120A  158A  	fcall	_Lcd_Delay5us
  4896                           
  4897                           ;HD44780.c: 39: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 0; RA0 = 0;
  4898  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  4899  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  4900  0F29  1285               	bcf	5,5	;volatile
  4901  0F2A  1205               	bcf	5,4	;volatile
  4902  0F2B  1585               	bsf	5,3	;volatile
  4903  0F2C  1105               	bcf	5,2	;volatile
  4904  0F2D  1085               	bcf	5,1	;volatile
  4905  0F2E  1005               	bcf	5,0	;volatile
  4906                           
  4907                           ;HD44780.c: 40: Lcd_Delay5500us();
  4908  0F2F  120A  158A  20E8  120A  158A  	fcall	_Lcd_Delay5500us
  4909                           
  4910                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  4911  0F34  3028               	movlw	40
  4912  0F35  00F4               	movwf	??_Lcd_Init
  4913  0F36  0874               	movf	??_Lcd_Init,w
  4914  0F37  00F5               	movwf	Lcd_Init@data
  4915  0F38  0875               	movf	Lcd_Init@data,w
  4916  0F39  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  4917                           
  4918                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  4919  0F3E  3010               	movlw	16
  4920  0F3F  00F4               	movwf	??_Lcd_Init
  4921  0F40  0874               	movf	??_Lcd_Init,w
  4922  0F41  00F5               	movwf	Lcd_Init@data
  4923  0F42  0875               	movf	Lcd_Init@data,w
  4924  0F43  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  4925                           
  4926                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  4927  0F48  01F5               	clrf	Lcd_Init@data
  4928  0F49  0AF5               	incf	Lcd_Init@data,f
  4929  0F4A  0875               	movf	Lcd_Init@data,w
  4930  0F4B  120A  158A  2759  120A  158A  	fcall	_Lcd_Command
  4931                           
  4932                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  4933  0F50  300F               	movlw	15
  4934  0F51  00F4               	movwf	??_Lcd_Init
  4935  0F52  0874               	movf	??_Lcd_Init,w
  4936  0F53  00F5               	movwf	Lcd_Init@data
  4937  0F54  0875               	movf	Lcd_Init@data,w
  4938  0F55  120A  158A  2759   	fcall	_Lcd_Command
  4939  0F58  0008               	return
  4940  0F59                     __end_of_Lcd_Init:	
  4941                           
  4942                           	psect	text21
  4943  0991                     __ptext21:	
  4944 ;; *************** function _I2C_Master_Init *****************
  4945 ;; Defined at:
  4946 ;;		line 3 in file "libs/gsk_i2c.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  c               4    0[BANK0 ] const unsigned long 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0, pclath, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4960 ;;      Params:         0       4       0       0       0
  4961 ;;      Locals:         0       0       0       0       0
  4962 ;;      Temps:          0       4       0       0       0
  4963 ;;      Totals:         0       8       0       0       0
  4964 ;;Total ram usage:        8 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    1
  4967 ;; This function calls:
  4968 ;;		___lldiv
  4969 ;; This function is called by:
  4970 ;;		_main
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           
  4975                           ;psect for function _I2C_Master_Init
  4976  0991                     _I2C_Master_Init:	
  4977                           
  4978                           ;gsk_i2c.c: 5: SSPCON = 0b00101000;
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4982  0991  3028               	movlw	40
  4983  0992  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0993  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0994  0094               	movwf	20	;volatile
  4986                           
  4987                           ;gsk_i2c.c: 6: SSPCON2 = 0;
  4988  0995  1683               	bsf	3,5	;RP0=1, select bank1
  4989  0996  1303               	bcf	3,6	;RP1=0, select bank1
  4990  0997  0191               	clrf	17	;volatile
  4991                           
  4992                           ;gsk_i2c.c: 7: SSPADD = (4000000/(4*c))-1;
  4993  0998  1283               	bcf	3,5	;RP0=0, select bank0
  4994  0999  1303               	bcf	3,6	;RP1=0, select bank0
  4995  099A  0820               	movf	I2C_Master_Init@c,w
  4996  099B  00A4               	movwf	??_I2C_Master_Init
  4997  099C  0821               	movf	I2C_Master_Init@c+1,w
  4998  099D  00A5               	movwf	??_I2C_Master_Init+1
  4999  099E  0822               	movf	I2C_Master_Init@c+2,w
  5000  099F  00A6               	movwf	??_I2C_Master_Init+2
  5001  09A0  0823               	movf	I2C_Master_Init@c+3,w
  5002  09A1  00A7               	movwf	??_I2C_Master_Init+3
  5003  09A2  3002               	movlw	2
  5004  09A3                     u3965:	
  5005  09A3  1003               	clrc
  5006  09A4  0DA4               	rlf	??_I2C_Master_Init,f
  5007  09A5  0DA5               	rlf	??_I2C_Master_Init+1,f
  5008  09A6  0DA6               	rlf	??_I2C_Master_Init+2,f
  5009  09A7  0DA7               	rlf	??_I2C_Master_Init+3,f
  5010  09A8  3EFF               	addlw	-1
  5011  09A9  1D03               	skipz
  5012  09AA  29A3               	goto	u3965
  5013  09AB  0827               	movf	??_I2C_Master_Init+3,w
  5014  09AC  00F3               	movwf	___lldiv@divisor+3
  5015  09AD  0826               	movf	??_I2C_Master_Init+2,w
  5016  09AE  00F2               	movwf	___lldiv@divisor+2
  5017  09AF  0825               	movf	??_I2C_Master_Init+1,w
  5018  09B0  00F1               	movwf	___lldiv@divisor+1
  5019  09B1  0824               	movf	??_I2C_Master_Init,w
  5020  09B2  00F0               	movwf	___lldiv@divisor
  5021  09B3  3000               	movlw	0
  5022  09B4  00F7               	movwf	___lldiv@dividend+3
  5023  09B5  303D               	movlw	61
  5024  09B6  00F6               	movwf	___lldiv@dividend+2
  5025  09B7  3009               	movlw	9
  5026  09B8  00F5               	movwf	___lldiv@dividend+1
  5027  09B9  3000               	movlw	0
  5028  09BA  00F4               	movwf	___lldiv@dividend
  5029  09BB  120A  158A  249C   	fcall	___lldiv
  5030  09BE  0870               	movf	?___lldiv,w
  5031  09BF  3EFF               	addlw	255
  5032  09C0  1683               	bsf	3,5	;RP0=1, select bank1
  5033  09C1  1303               	bcf	3,6	;RP1=0, select bank1
  5034  09C2  0093               	movwf	19	;volatile
  5035                           
  5036                           ;gsk_i2c.c: 8: SSPSTAT = 0;
  5037  09C3  0194               	clrf	20	;volatile
  5038                           
  5039                           ;gsk_i2c.c: 9: TRISC3 = 1;
  5040  09C4  1587               	bsf	7,3	;volatile
  5041                           
  5042                           ;gsk_i2c.c: 10: TRISC4 = 1;
  5043  09C5  1607               	bsf	7,4	;volatile
  5044  09C6  0008               	return
  5045  09C7                     __end_of_I2C_Master_Init:	
  5046                           
  5047                           	psect	text22
  5048  0C9C                     __ptext22:	
  5049 ;; *************** function ___lldiv *****************
  5050 ;; Defined at:
  5051 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  divisor         4    0[COMMON] unsigned long 
  5054 ;;  dividend        4    4[COMMON] unsigned long 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  quotient        4    9[COMMON] unsigned long 
  5057 ;;  counter         1   13[COMMON] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  4    0[COMMON] unsigned long 
  5060 ;; Registers used:
  5061 ;;		wreg, status,2, status,0
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5067 ;;      Params:         8       0       0       0       0
  5068 ;;      Locals:         5       0       0       0       0
  5069 ;;      Temps:          1       0       0       0       0
  5070 ;;      Totals:        14       0       0       0       0
  5071 ;;Total ram usage:       14 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_WriteLongInt
  5077 ;;		_I2C_Master_Init
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           
  5082                           ;psect for function ___lldiv
  5083  0C9C                     ___lldiv:	
  5084                           
  5085                           ;incstack = 0
  5086                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5087  0C9C  3000               	movlw	0
  5088  0C9D  00FC               	movwf	___lldiv@quotient+3
  5089  0C9E  3000               	movlw	0
  5090  0C9F  00FB               	movwf	___lldiv@quotient+2
  5091  0CA0  3000               	movlw	0
  5092  0CA1  00FA               	movwf	___lldiv@quotient+1
  5093  0CA2  3000               	movlw	0
  5094  0CA3  00F9               	movwf	___lldiv@quotient
  5095  0CA4  0873               	movf	___lldiv@divisor+3,w
  5096  0CA5  0472               	iorwf	___lldiv@divisor+2,w
  5097  0CA6  0471               	iorwf	___lldiv@divisor+1,w
  5098  0CA7  0470               	iorwf	___lldiv@divisor,w
  5099  0CA8  1903               	skipnz
  5100  0CA9  2CF1               	goto	l2546
  5101  0CAA  01FD               	clrf	___lldiv@counter
  5102  0CAB  0AFD               	incf	___lldiv@counter,f
  5103  0CAC                     l2532:	
  5104  0CAC  1BF3               	btfsc	___lldiv@divisor+3,7
  5105  0CAD  2CBC               	goto	l2534
  5106  0CAE  3001               	movlw	1
  5107  0CAF  00F8               	movwf	??___lldiv
  5108  0CB0                     u3885:	
  5109  0CB0  1003               	clrc
  5110  0CB1  0DF0               	rlf	___lldiv@divisor,f
  5111  0CB2  0DF1               	rlf	___lldiv@divisor+1,f
  5112  0CB3  0DF2               	rlf	___lldiv@divisor+2,f
  5113  0CB4  0DF3               	rlf	___lldiv@divisor+3,f
  5114  0CB5  0BF8               	decfsz	??___lldiv,f
  5115  0CB6  2CB0               	goto	u3885
  5116  0CB7  3001               	movlw	1
  5117  0CB8  00F8               	movwf	??___lldiv
  5118  0CB9  0878               	movf	??___lldiv,w
  5119  0CBA  07FD               	addwf	___lldiv@counter,f
  5120  0CBB  2CAC               	goto	l2532
  5121  0CBC                     l2534:	
  5122  0CBC  3001               	movlw	1
  5123  0CBD  00F8               	movwf	??___lldiv
  5124  0CBE                     u3905:	
  5125  0CBE  1003               	clrc
  5126  0CBF  0DF9               	rlf	___lldiv@quotient,f
  5127  0CC0  0DFA               	rlf	___lldiv@quotient+1,f
  5128  0CC1  0DFB               	rlf	___lldiv@quotient+2,f
  5129  0CC2  0DFC               	rlf	___lldiv@quotient+3,f
  5130  0CC3  0BF8               	decfsz	??___lldiv,f
  5131  0CC4  2CBE               	goto	u3905
  5132  0CC5  0873               	movf	___lldiv@divisor+3,w
  5133  0CC6  0277               	subwf	___lldiv@dividend+3,w
  5134  0CC7  1D03               	skipz
  5135  0CC8  2CD3               	goto	u3915
  5136  0CC9  0872               	movf	___lldiv@divisor+2,w
  5137  0CCA  0276               	subwf	___lldiv@dividend+2,w
  5138  0CCB  1D03               	skipz
  5139  0CCC  2CD3               	goto	u3915
  5140  0CCD  0871               	movf	___lldiv@divisor+1,w
  5141  0CCE  0275               	subwf	___lldiv@dividend+1,w
  5142  0CCF  1D03               	skipz
  5143  0CD0  2CD3               	goto	u3915
  5144  0CD1  0870               	movf	___lldiv@divisor,w
  5145  0CD2  0274               	subwf	___lldiv@dividend,w
  5146  0CD3                     u3915:	
  5147  0CD3  1C03               	skipc
  5148  0CD4  2CE4               	goto	l2542
  5149  0CD5  0870               	movf	___lldiv@divisor,w
  5150  0CD6  02F4               	subwf	___lldiv@dividend,f
  5151  0CD7  0871               	movf	___lldiv@divisor+1,w
  5152  0CD8  1C03               	skipc
  5153  0CD9  0F71               	incfsz	___lldiv@divisor+1,w
  5154  0CDA  02F5               	subwf	___lldiv@dividend+1,f
  5155  0CDB  0872               	movf	___lldiv@divisor+2,w
  5156  0CDC  1C03               	skipc
  5157  0CDD  0F72               	incfsz	___lldiv@divisor+2,w
  5158  0CDE  02F6               	subwf	___lldiv@dividend+2,f
  5159  0CDF  0873               	movf	___lldiv@divisor+3,w
  5160  0CE0  1C03               	skipc
  5161  0CE1  0F73               	incfsz	___lldiv@divisor+3,w
  5162  0CE2  02F7               	subwf	___lldiv@dividend+3,f
  5163  0CE3  1479               	bsf	___lldiv@quotient,0
  5164  0CE4                     l2542:	
  5165  0CE4  3001               	movlw	1
  5166  0CE5                     u3925:	
  5167  0CE5  1003               	clrc
  5168  0CE6  0CF3               	rrf	___lldiv@divisor+3,f
  5169  0CE7  0CF2               	rrf	___lldiv@divisor+2,f
  5170  0CE8  0CF1               	rrf	___lldiv@divisor+1,f
  5171  0CE9  0CF0               	rrf	___lldiv@divisor,f
  5172  0CEA  3EFF               	addlw	-1
  5173  0CEB  1D03               	skipz
  5174  0CEC  2CE5               	goto	u3925
  5175  0CED  3001               	movlw	1
  5176  0CEE  02FD               	subwf	___lldiv@counter,f
  5177  0CEF  1D03               	btfss	3,2
  5178  0CF0  2CBC               	goto	l2534
  5179  0CF1                     l2546:	
  5180  0CF1  087C               	movf	___lldiv@quotient+3,w
  5181  0CF2  00F3               	movwf	?___lldiv+3
  5182  0CF3  087B               	movf	___lldiv@quotient+2,w
  5183  0CF4  00F2               	movwf	?___lldiv+2
  5184  0CF5  087A               	movf	___lldiv@quotient+1,w
  5185  0CF6  00F1               	movwf	?___lldiv+1
  5186  0CF7  0879               	movf	___lldiv@quotient,w
  5187  0CF8  00F0               	movwf	?___lldiv
  5188  0CF9  0008               	return
  5189  0CFA                     __end_of___lldiv:	
  5190                           
  5191                           	psect	text23
  5192  00C0                     __ptext23:	
  5193 ;; *************** function _DisplayTimeFromRTC *****************
  5194 ;; Defined at:
  5195 ;;		line 78 in file "libs/gsk_i2c.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  y               1    wreg     unsigned char 
  5198 ;;  x               1   13[BANK0 ] unsigned char 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  y               1   17[BANK0 ] unsigned char 
  5201 ;;  TempVar000      1   18[BANK0 ] unsigned char 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5211 ;;      Params:         0       1       0       0       0
  5212 ;;      Locals:         0       2       0       0       0
  5213 ;;      Temps:          0       3       0       0       0
  5214 ;;      Totals:         0       6       0       0       0
  5215 ;;Total ram usage:        6 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:    3
  5218 ;; This function calls:
  5219 ;;		_I2C_ReadAtAddress
  5220 ;;		_Lcd_Int
  5221 ;; This function is called by:
  5222 ;;		_main
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           
  5227                           ;psect for function _DisplayTimeFromRTC
  5228  00C0                     _DisplayTimeFromRTC:	
  5229                           
  5230                           ;incstack = 0
  5231                           ; Regs used in _DisplayTimeFromRTC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5232                           ;DisplayTimeFromRTC@y stored from wreg
  5233  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  5234  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  5235  00C2  00B1               	movwf	DisplayTimeFromRTC@y
  5236                           
  5237                           ;gsk_i2c.c: 79: char TempVar000;
  5238                           ;gsk_i2c.c: 80: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
  5239  00C3  3002               	movlw	2
  5240  00C4  00AE               	movwf	??_DisplayTimeFromRTC
  5241  00C5  082E               	movf	??_DisplayTimeFromRTC,w
  5242  00C6  00F6               	movwf	I2C_ReadAtAddress@IntAdd
  5243  00C7  30DE               	movlw	222
  5244  00C8  120A  158A  22FC  120A  118A  	fcall	_I2C_ReadAtAddress
  5245  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  5246  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  5247  00CF  00AF               	movwf	??_DisplayTimeFromRTC+1
  5248  00D0  082F               	movf	??_DisplayTimeFromRTC+1,w
  5249  00D1  00B2               	movwf	DisplayTimeFromRTC@TempVar000
  5250                           
  5251                           ;gsk_i2c.c: 81: Lcd_Int(y,x,(TempVar000>>4) & 0x03 ,1);
  5252  00D2  082D               	movf	DisplayTimeFromRTC@x,w
  5253  00D3  00AE               	movwf	??_DisplayTimeFromRTC
  5254  00D4  082E               	movf	??_DisplayTimeFromRTC,w
  5255  00D5  00A4               	movwf	Lcd_Int@x
  5256  00D6  0832               	movf	DisplayTimeFromRTC@TempVar000,w
  5257  00D7  00AF               	movwf	??_DisplayTimeFromRTC+1
  5258  00D8  3004               	movlw	4
  5259  00D9                     u4165:	
  5260  00D9  1003               	clrc
  5261  00DA  0CAF               	rrf	??_DisplayTimeFromRTC+1,f
  5262  00DB  3EFF               	addlw	-1
  5263  00DC  1D03               	skipz
  5264  00DD  28D9               	goto	u4165
  5265  00DE  082F               	movf	??_DisplayTimeFromRTC+1,w
  5266  00DF  3903               	andlw	3
  5267  00E0  00B0               	movwf	??_DisplayTimeFromRTC+2
  5268  00E1  0830               	movf	??_DisplayTimeFromRTC+2,w
  5269  00E2  00A5               	movwf	Lcd_Int@val
  5270  00E3  01A6               	clrf	Lcd_Int@size
  5271  00E4  0AA6               	incf	Lcd_Int@size,f
  5272  00E5  0831               	movf	DisplayTimeFromRTC@y,w
  5273  00E6  120A  118A  22E2  120A  118A  	fcall	_Lcd_Int
  5274                           
  5275                           ;gsk_i2c.c: 82: Lcd_Int(y,x+1,TempVar000 & 0x0f ,1);
  5276  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  5277  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  5278  00ED  082D               	movf	DisplayTimeFromRTC@x,w
  5279  00EE  3E01               	addlw	1
  5280  00EF  00AE               	movwf	??_DisplayTimeFromRTC
  5281  00F0  082E               	movf	??_DisplayTimeFromRTC,w
  5282  00F1  00A4               	movwf	Lcd_Int@x
  5283  00F2  0832               	movf	DisplayTimeFromRTC@TempVar000,w
  5284  00F3  390F               	andlw	15
  5285  00F4  00AF               	movwf	??_DisplayTimeFromRTC+1
  5286  00F5  082F               	movf	??_DisplayTimeFromRTC+1,w
  5287  00F6  00A5               	movwf	Lcd_Int@val
  5288  00F7  01A6               	clrf	Lcd_Int@size
  5289  00F8  0AA6               	incf	Lcd_Int@size,f
  5290  00F9  0831               	movf	DisplayTimeFromRTC@y,w
  5291  00FA  120A  118A  22E2  120A  118A  	fcall	_Lcd_Int
  5292                           
  5293                           ;gsk_i2c.c: 83: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
  5294  00FF  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  5295  0100  0AF6               	incf	I2C_ReadAtAddress@IntAdd,f
  5296  0101  30DE               	movlw	222
  5297  0102  120A  158A  22FC  120A  118A  	fcall	_I2C_ReadAtAddress
  5298  0107  1283               	bcf	3,5	;RP0=0, select bank0
  5299  0108  1303               	bcf	3,6	;RP1=0, select bank0
  5300  0109  00AE               	movwf	??_DisplayTimeFromRTC
  5301  010A  082E               	movf	??_DisplayTimeFromRTC,w
  5302  010B  00B2               	movwf	DisplayTimeFromRTC@TempVar000
  5303                           
  5304                           ;gsk_i2c.c: 84: Lcd_Int(y,x+2,(TempVar000>>4) & 0x07 ,1);
  5305  010C  082D               	movf	DisplayTimeFromRTC@x,w
  5306  010D  3E02               	addlw	2
  5307  010E  00AE               	movwf	??_DisplayTimeFromRTC
  5308  010F  082E               	movf	??_DisplayTimeFromRTC,w
  5309  0110  00A4               	movwf	Lcd_Int@x
  5310  0111  0832               	movf	DisplayTimeFromRTC@TempVar000,w
  5311  0112  00AF               	movwf	??_DisplayTimeFromRTC+1
  5312  0113  3004               	movlw	4
  5313  0114                     u4175:	
  5314  0114  1003               	clrc
  5315  0115  0CAF               	rrf	??_DisplayTimeFromRTC+1,f
  5316  0116  3EFF               	addlw	-1
  5317  0117  1D03               	skipz
  5318  0118  2914               	goto	u4175
  5319  0119  082F               	movf	??_DisplayTimeFromRTC+1,w
  5320  011A  3907               	andlw	7
  5321  011B  00B0               	movwf	??_DisplayTimeFromRTC+2
  5322  011C  0830               	movf	??_DisplayTimeFromRTC+2,w
  5323  011D  00A5               	movwf	Lcd_Int@val
  5324  011E  01A6               	clrf	Lcd_Int@size
  5325  011F  0AA6               	incf	Lcd_Int@size,f
  5326  0120  0831               	movf	DisplayTimeFromRTC@y,w
  5327  0121  120A  118A  22E2  120A  118A  	fcall	_Lcd_Int
  5328                           
  5329                           ;gsk_i2c.c: 85: Lcd_Int(y,x+3,TempVar000 & 0x0f ,1);
  5330  0126  1283               	bcf	3,5	;RP0=0, select bank0
  5331  0127  1303               	bcf	3,6	;RP1=0, select bank0
  5332  0128  082D               	movf	DisplayTimeFromRTC@x,w
  5333  0129  3E03               	addlw	3
  5334  012A  00AE               	movwf	??_DisplayTimeFromRTC
  5335  012B  082E               	movf	??_DisplayTimeFromRTC,w
  5336  012C  00A4               	movwf	Lcd_Int@x
  5337  012D  0832               	movf	DisplayTimeFromRTC@TempVar000,w
  5338  012E  390F               	andlw	15
  5339  012F  00AF               	movwf	??_DisplayTimeFromRTC+1
  5340  0130  082F               	movf	??_DisplayTimeFromRTC+1,w
  5341  0131  00A5               	movwf	Lcd_Int@val
  5342  0132  01A6               	clrf	Lcd_Int@size
  5343  0133  0AA6               	incf	Lcd_Int@size,f
  5344  0134  0831               	movf	DisplayTimeFromRTC@y,w
  5345  0135  120A  118A  22E2  120A  118A  	fcall	_Lcd_Int
  5346                           
  5347                           ;gsk_i2c.c: 86: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
  5348  013A  01F6               	clrf	I2C_ReadAtAddress@IntAdd
  5349  013B  30DE               	movlw	222
  5350  013C  120A  158A  22FC  120A  118A  	fcall	_I2C_ReadAtAddress
  5351  0141  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0142  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0143  00AE               	movwf	??_DisplayTimeFromRTC
  5354  0144  082E               	movf	??_DisplayTimeFromRTC,w
  5355  0145  00B2               	movwf	DisplayTimeFromRTC@TempVar000
  5356                           
  5357                           ;gsk_i2c.c: 87: Lcd_Int(y,x+4,(TempVar000>>4) & 0x07 ,1);
  5358  0146  082D               	movf	DisplayTimeFromRTC@x,w
  5359  0147  3E04               	addlw	4
  5360  0148  00AE               	movwf	??_DisplayTimeFromRTC
  5361  0149  082E               	movf	??_DisplayTimeFromRTC,w
  5362  014A  00A4               	movwf	Lcd_Int@x
  5363  014B  0832               	movf	DisplayTimeFromRTC@TempVar000,w
  5364  014C  00AF               	movwf	??_DisplayTimeFromRTC+1
  5365  014D  3004               	movlw	4
  5366  014E                     u4185:	
  5367  014E  1003               	clrc
  5368  014F  0CAF               	rrf	??_DisplayTimeFromRTC+1,f
  5369  0150  3EFF               	addlw	-1
  5370  0151  1D03               	skipz
  5371  0152  294E               	goto	u4185
  5372  0153  082F               	movf	??_DisplayTimeFromRTC+1,w
  5373  0154  3907               	andlw	7
  5374  0155  00B0               	movwf	??_DisplayTimeFromRTC+2
  5375  0156  0830               	movf	??_DisplayTimeFromRTC+2,w
  5376  0157  00A5               	movwf	Lcd_Int@val
  5377  0158  01A6               	clrf	Lcd_Int@size
  5378  0159  0AA6               	incf	Lcd_Int@size,f
  5379  015A  0831               	movf	DisplayTimeFromRTC@y,w
  5380  015B  120A  118A  22E2  120A  118A  	fcall	_Lcd_Int
  5381                           
  5382                           ;gsk_i2c.c: 88: Lcd_Int(y,x+5,TempVar000 & 0x0f ,1);
  5383  0160  1283               	bcf	3,5	;RP0=0, select bank0
  5384  0161  1303               	bcf	3,6	;RP1=0, select bank0
  5385  0162  082D               	movf	DisplayTimeFromRTC@x,w
  5386  0163  3E05               	addlw	5
  5387  0164  00AE               	movwf	??_DisplayTimeFromRTC
  5388  0165  082E               	movf	??_DisplayTimeFromRTC,w
  5389  0166  00A4               	movwf	Lcd_Int@x
  5390  0167  0832               	movf	DisplayTimeFromRTC@TempVar000,w
  5391  0168  390F               	andlw	15
  5392  0169  00AF               	movwf	??_DisplayTimeFromRTC+1
  5393  016A  082F               	movf	??_DisplayTimeFromRTC+1,w
  5394  016B  00A5               	movwf	Lcd_Int@val
  5395  016C  01A6               	clrf	Lcd_Int@size
  5396  016D  0AA6               	incf	Lcd_Int@size,f
  5397  016E  0831               	movf	DisplayTimeFromRTC@y,w
  5398  016F  120A  118A  22E2   	fcall	_Lcd_Int
  5399  0172  0008               	return
  5400  0173                     __end_of_DisplayTimeFromRTC:	
  5401                           
  5402                           	psect	text24
  5403  02E2                     __ptext24:	
  5404 ;; *************** function _Lcd_Int *****************
  5405 ;; Defined at:
  5406 ;;		line 156 in file "libs/HD44780.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  y               1    wreg     unsigned char 
  5409 ;;  x               1    4[BANK0 ] unsigned char 
  5410 ;;  val             1    5[BANK0 ] unsigned char 
  5411 ;;  size            1    6[BANK0 ] unsigned char 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  y               1    9[BANK0 ] unsigned char 
  5414 ;;  tempVal         2   11[BANK0 ] unsigned int 
  5415 ;;  data            1   10[BANK0 ] unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      void 
  5418 ;; Registers used:
  5419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5425 ;;      Params:         0       3       0       0       0
  5426 ;;      Locals:         0       4       0       0       0
  5427 ;;      Temps:          0       2       0       0       0
  5428 ;;      Totals:         0       9       0       0       0
  5429 ;;Total ram usage:        9 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    2
  5432 ;; This function calls:
  5433 ;;		_Lcd_CharCP
  5434 ;;		_Lcd_Command
  5435 ;;		___awdiv
  5436 ;;		___bmul
  5437 ;;		___lwdiv
  5438 ;;		___wmul
  5439 ;; This function is called by:
  5440 ;;		_DisplayTimeFromRTC
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           
  5445                           ;psect for function _Lcd_Int
  5446  02E2                     _Lcd_Int:	
  5447                           
  5448                           ;incstack = 0
  5449                           ; Regs used in _Lcd_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5450                           ;Lcd_Int@y stored from wreg
  5451  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  5452  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  5453  02E4  00A9               	movwf	Lcd_Int@y
  5454                           
  5455                           ;HD44780.c: 157: if ((size>0) && (size<=3)) {
  5456  02E5  0826               	movf	Lcd_Int@size,w
  5457  02E6  1903               	btfsc	3,2
  5458  02E7  0008               	return
  5459  02E8  3004               	movlw	4
  5460  02E9  0226               	subwf	Lcd_Int@size,w
  5461  02EA  1803               	skipnc
  5462  02EB  0008               	return
  5463                           
  5464                           ;HD44780.c: 158: unsigned int tempVal=val;
  5465  02EC  0825               	movf	Lcd_Int@val,w
  5466  02ED  00A7               	movwf	??_Lcd_Int
  5467  02EE  01A8               	clrf	??_Lcd_Int+1
  5468  02EF  0827               	movf	??_Lcd_Int,w
  5469  02F0  00AB               	movwf	Lcd_Int@tempVal
  5470  02F1  0828               	movf	??_Lcd_Int+1,w
  5471  02F2  00AC               	movwf	Lcd_Int@tempVal+1
  5472                           
  5473                           ;HD44780.c: 159: unsigned char data;
  5474                           ;HD44780.c: 160: switch(y){
  5475  02F3  2B03               	goto	l2398
  5476  02F4                     l2388:	
  5477                           ;HD44780.c: 161: case 1: data = 127 + x; break;
  5478                           
  5479  02F4  0824               	movf	Lcd_Int@x,w
  5480  02F5  3E7F               	addlw	127
  5481  02F6  2AFF               	goto	L10
  5482  02F7                     l2390:	
  5483                           ;HD44780.c: 162: case 2: data = 191 + x; break;
  5484                           
  5485  02F7  0824               	movf	Lcd_Int@x,w
  5486  02F8  3EBF               	addlw	191
  5487  02F9  2AFF               	goto	L10
  5488  02FA                     l2392:	
  5489                           ;HD44780.c: 163: case 3: data = 147 + x; break;
  5490                           
  5491  02FA  0824               	movf	Lcd_Int@x,w
  5492  02FB  3E93               	addlw	147
  5493  02FC  2AFF               	goto	L10
  5494  02FD                     l2394:	
  5495                           ;HD44780.c: 164: case 4: data = 211 + x; break;
  5496                           
  5497  02FD  0824               	movf	Lcd_Int@x,w
  5498  02FE  3ED3               	addlw	211
  5499  02FF                     L10:	
  5500  02FF  00A7               	movwf	??_Lcd_Int
  5501  0300  0827               	movf	??_Lcd_Int,w
  5502  0301  00AA               	movwf	Lcd_Int@data
  5503                           
  5504                           ;HD44780.c: 165: default: break;}
  5505  0302  2B11               	goto	l2400
  5506  0303                     l2398:	
  5507  0303  0829               	movf	Lcd_Int@y,w
  5508                           
  5509                           ; Switch size 1, requested type "space"
  5510                           ; Number of cases is 4, Range of values is 1 to 4
  5511                           ; switch strategies available:
  5512                           ; Name         Instructions Cycles
  5513                           ; simple_byte           13     7 (average)
  5514                           ; direct_byte           23    11 (fixed)
  5515                           ; jumptable            263     9 (fixed)
  5516                           ;	Chosen strategy is simple_byte
  5517  0304  3A01               	xorlw	1	; case 1
  5518  0305  1903               	skipnz
  5519  0306  2AF4               	goto	l2388
  5520  0307  3A03               	xorlw	3	; case 2
  5521  0308  1903               	skipnz
  5522  0309  2AF7               	goto	l2390
  5523  030A  3A01               	xorlw	1	; case 3
  5524  030B  1903               	skipnz
  5525  030C  2AFA               	goto	l2392
  5526  030D  3A07               	xorlw	7	; case 4
  5527  030E  1903               	skipnz
  5528  030F  2AFD               	goto	l2394
  5529  0310  2B11               	goto	l2400
  5530  0311                     l2400:	
  5531                           
  5532                           ;HD44780.c: 166: Lcd_Command(data);
  5533  0311  082A               	movf	Lcd_Int@data,w
  5534  0312  120A  158A  2759  120A  118A  	fcall	_Lcd_Command
  5535                           
  5536                           ;HD44780.c: 167: if (size>=3){
  5537  0317  3003               	movlw	3
  5538  0318  1283               	bcf	3,5	;RP0=0, select bank0
  5539  0319  1303               	bcf	3,6	;RP1=0, select bank0
  5540  031A  0226               	subwf	Lcd_Int@size,w
  5541  031B  1C03               	skipc
  5542  031C  2B3A               	goto	l2406
  5543                           
  5544                           ;HD44780.c: 168: tempVal = val/100;
  5545  031D  3064               	movlw	100
  5546  031E  00F0               	movwf	___awdiv@divisor
  5547  031F  3000               	movlw	0
  5548  0320  00F1               	movwf	___awdiv@divisor+1
  5549  0321  0825               	movf	Lcd_Int@val,w
  5550  0322  00A7               	movwf	??_Lcd_Int
  5551  0323  01A8               	clrf	??_Lcd_Int+1
  5552  0324  0827               	movf	??_Lcd_Int,w
  5553  0325  00F2               	movwf	___awdiv@dividend
  5554  0326  0828               	movf	??_Lcd_Int+1,w
  5555  0327  00F3               	movwf	___awdiv@dividend+1
  5556  0328  120A  158A  238B  120A  118A  	fcall	___awdiv
  5557  032D  0871               	movf	?___awdiv+1,w
  5558  032E  1283               	bcf	3,5	;RP0=0, select bank0
  5559  032F  1303               	bcf	3,6	;RP1=0, select bank0
  5560  0330  00AC               	movwf	Lcd_Int@tempVal+1
  5561  0331  0870               	movf	?___awdiv,w
  5562  0332  00AB               	movwf	Lcd_Int@tempVal
  5563                           
  5564                           ;HD44780.c: 169: Lcd_CharCP(0x30+(tempVal));
  5565  0333  082B               	movf	Lcd_Int@tempVal,w
  5566  0334  3E30               	addlw	48
  5567  0335  120A  118A  2014  120A  118A  	fcall	_Lcd_CharCP
  5568  033A                     l2406:	
  5569                           
  5570                           ;HD44780.c: 170: }
  5571                           ;HD44780.c: 171: if (size>=2){
  5572  033A  3002               	movlw	2
  5573  033B  1283               	bcf	3,5	;RP0=0, select bank0
  5574  033C  1303               	bcf	3,6	;RP1=0, select bank0
  5575  033D  0226               	subwf	Lcd_Int@size,w
  5576  033E  1C03               	skipc
  5577  033F  2B73               	goto	l2410
  5578                           
  5579                           ;HD44780.c: 172: tempVal = (val-tempVal*100)/10;
  5580  0340  300A               	movlw	10
  5581  0341  00F6               	movwf	___lwdiv@divisor
  5582  0342  3000               	movlw	0
  5583  0343  00F7               	movwf	___lwdiv@divisor+1
  5584  0344  082C               	movf	Lcd_Int@tempVal+1,w
  5585  0345  00F1               	movwf	___wmul@multiplier+1
  5586  0346  082B               	movf	Lcd_Int@tempVal,w
  5587  0347  00F0               	movwf	___wmul@multiplier
  5588  0348  3064               	movlw	100
  5589  0349  00F2               	movwf	___wmul@multiplicand
  5590  034A  3000               	movlw	0
  5591  034B  00F3               	movwf	___wmul@multiplicand+1
  5592  034C  120A  158A  2116  120A  118A  	fcall	___wmul
  5593  0351  0970               	comf	?___wmul,w
  5594  0352  1283               	bcf	3,5	;RP0=0, select bank0
  5595  0353  1303               	bcf	3,6	;RP1=0, select bank0
  5596  0354  00A7               	movwf	??_Lcd_Int
  5597  0355  0971               	comf	?___wmul+1,w
  5598  0356  00A8               	movwf	??_Lcd_Int+1
  5599  0357  0AA7               	incf	??_Lcd_Int,f
  5600  0358  1903               	skipnz
  5601  0359  0AA8               	incf	??_Lcd_Int+1,f
  5602  035A  0825               	movf	Lcd_Int@val,w
  5603  035B  0727               	addwf	??_Lcd_Int,w
  5604  035C  00F8               	movwf	___lwdiv@dividend
  5605  035D  0828               	movf	??_Lcd_Int+1,w
  5606  035E  1803               	skipnc
  5607  035F  0A28               	incf	??_Lcd_Int+1,w
  5608  0360  00F9               	movwf	___lwdiv@dividend+1
  5609  0361  120A  158A  2201  120A  118A  	fcall	___lwdiv
  5610  0366  0877               	movf	?___lwdiv+1,w
  5611  0367  1283               	bcf	3,5	;RP0=0, select bank0
  5612  0368  1303               	bcf	3,6	;RP1=0, select bank0
  5613  0369  00AC               	movwf	Lcd_Int@tempVal+1
  5614  036A  0876               	movf	?___lwdiv,w
  5615  036B  00AB               	movwf	Lcd_Int@tempVal
  5616                           
  5617                           ;HD44780.c: 173: Lcd_CharCP(0x30+(tempVal));
  5618  036C  082B               	movf	Lcd_Int@tempVal,w
  5619  036D  3E30               	addlw	48
  5620  036E  120A  118A  2014  120A  118A  	fcall	_Lcd_CharCP
  5621  0373                     l2410:	
  5622                           
  5623                           ;HD44780.c: 174: }
  5624                           ;HD44780.c: 175: if (size>=1){
  5625  0373  1283               	bcf	3,5	;RP0=0, select bank0
  5626  0374  1303               	bcf	3,6	;RP1=0, select bank0
  5627  0375  0826               	movf	Lcd_Int@size,w
  5628  0376  1903               	btfsc	3,2
  5629  0377  0008               	return
  5630                           
  5631                           ;HD44780.c: 176: tempVal = val/10;
  5632  0378  300A               	movlw	10
  5633  0379  00F0               	movwf	___awdiv@divisor
  5634  037A  3000               	movlw	0
  5635  037B  00F1               	movwf	___awdiv@divisor+1
  5636  037C  0825               	movf	Lcd_Int@val,w
  5637  037D  00A7               	movwf	??_Lcd_Int
  5638  037E  01A8               	clrf	??_Lcd_Int+1
  5639  037F  0827               	movf	??_Lcd_Int,w
  5640  0380  00F2               	movwf	___awdiv@dividend
  5641  0381  0828               	movf	??_Lcd_Int+1,w
  5642  0382  00F3               	movwf	___awdiv@dividend+1
  5643  0383  120A  158A  238B  120A  118A  	fcall	___awdiv
  5644  0388  0871               	movf	?___awdiv+1,w
  5645  0389  1283               	bcf	3,5	;RP0=0, select bank0
  5646  038A  1303               	bcf	3,6	;RP1=0, select bank0
  5647  038B  00AC               	movwf	Lcd_Int@tempVal+1
  5648  038C  0870               	movf	?___awdiv,w
  5649  038D  00AB               	movwf	Lcd_Int@tempVal
  5650                           
  5651                           ;HD44780.c: 177: Lcd_CharCP(0x30+(val - tempVal*10));
  5652  038E  300A               	movlw	10
  5653  038F  00A7               	movwf	??_Lcd_Int
  5654  0390  0827               	movf	??_Lcd_Int,w
  5655  0391  00A0               	movwf	___bmul@multiplicand
  5656  0392  082B               	movf	Lcd_Int@tempVal,w
  5657  0393  120A  158A  2103  120A  118A  	fcall	___bmul
  5658  0398  3AFF               	xorlw	255
  5659  0399  3E01               	addlw	1
  5660  039A  1283               	bcf	3,5	;RP0=0, select bank0
  5661  039B  1303               	bcf	3,6	;RP1=0, select bank0
  5662  039C  0725               	addwf	Lcd_Int@val,w
  5663  039D  3E30               	addlw	48
  5664  039E  120A  118A  2014   	fcall	_Lcd_CharCP
  5665  03A1  0008               	return
  5666  03A2                     __end_of_Lcd_Int:	
  5667                           
  5668                           	psect	text25
  5669  0916                     __ptext25:	
  5670 ;; *************** function ___wmul *****************
  5671 ;; Defined at:
  5672 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  multiplier      2    0[COMMON] unsigned int 
  5675 ;;  multiplicand    2    2[COMMON] unsigned int 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  product         2    4[COMMON] unsigned int 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  2    0[COMMON] unsigned int 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5687 ;;      Params:         4       0       0       0       0
  5688 ;;      Locals:         2       0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0
  5690 ;;      Totals:         6       0       0       0       0
  5691 ;;Total ram usage:        6 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_Lcd_Int
  5697 ;;		_ReadRTCAsSec
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           
  5702                           ;psect for function ___wmul
  5703  0916                     ___wmul:	
  5704                           
  5705                           ;incstack = 0
  5706                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5707  0916  01F4               	clrf	___wmul@product
  5708  0917  01F5               	clrf	___wmul@product+1
  5709  0918                     l2122:	
  5710  0918  1C70               	btfss	___wmul@multiplier,0
  5711  0919  2920               	goto	l420
  5712  091A  0872               	movf	___wmul@multiplicand,w
  5713  091B  07F4               	addwf	___wmul@product,f
  5714  091C  1803               	skipnc
  5715  091D  0AF5               	incf	___wmul@product+1,f
  5716  091E  0873               	movf	___wmul@multiplicand+1,w
  5717  091F  07F5               	addwf	___wmul@product+1,f
  5718  0920                     l420:	
  5719  0920  3001               	movlw	1
  5720  0921                     u2995:	
  5721  0921  1003               	clrc
  5722  0922  0DF2               	rlf	___wmul@multiplicand,f
  5723  0923  0DF3               	rlf	___wmul@multiplicand+1,f
  5724  0924  3EFF               	addlw	-1
  5725  0925  1D03               	skipz
  5726  0926  2921               	goto	u2995
  5727  0927  3001               	movlw	1
  5728  0928                     u3005:	
  5729  0928  1003               	clrc
  5730  0929  0CF1               	rrf	___wmul@multiplier+1,f
  5731  092A  0CF0               	rrf	___wmul@multiplier,f
  5732  092B  3EFF               	addlw	-1
  5733  092C  1D03               	skipz
  5734  092D  2928               	goto	u3005
  5735  092E  0870               	movf	___wmul@multiplier,w
  5736  092F  0471               	iorwf	___wmul@multiplier+1,w
  5737  0930  1D03               	btfss	3,2
  5738  0931  2918               	goto	l2122
  5739  0932  0875               	movf	___wmul@product+1,w
  5740  0933  00F1               	movwf	?___wmul+1
  5741  0934  0874               	movf	___wmul@product,w
  5742  0935  00F0               	movwf	?___wmul
  5743  0936  0008               	return
  5744  0937                     __end_of___wmul:	
  5745                           
  5746                           	psect	text26
  5747  0A01                     __ptext26:	
  5748 ;; *************** function ___lwdiv *****************
  5749 ;; Defined at:
  5750 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  divisor         2    6[COMMON] unsigned int 
  5753 ;;  dividend        2    8[COMMON] unsigned int 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  quotient        2   11[COMMON] unsigned int 
  5756 ;;  counter         1   13[COMMON] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  2    6[COMMON] unsigned int 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5766 ;;      Params:         4       0       0       0       0
  5767 ;;      Locals:         3       0       0       0       0
  5768 ;;      Temps:          1       0       0       0       0
  5769 ;;      Totals:         8       0       0       0       0
  5770 ;;Total ram usage:        8 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_Lcd_Int
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           
  5780                           ;psect for function ___lwdiv
  5781  0A01                     ___lwdiv:	
  5782                           
  5783                           ;incstack = 0
  5784                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5785  0A01  01FB               	clrf	___lwdiv@quotient
  5786  0A02  01FC               	clrf	___lwdiv@quotient+1
  5787  0A03  0876               	movf	___lwdiv@divisor,w
  5788  0A04  0477               	iorwf	___lwdiv@divisor+1,w
  5789  0A05  1903               	btfsc	3,2
  5790  0A06  2A38               	goto	l2292
  5791  0A07  01FD               	clrf	___lwdiv@counter
  5792  0A08  0AFD               	incf	___lwdiv@counter,f
  5793  0A09                     l2280:	
  5794  0A09  1BF7               	btfsc	___lwdiv@divisor+1,7
  5795  0A0A  2A17               	goto	l2282
  5796  0A0B  3001               	movlw	1
  5797  0A0C                     u3405:	
  5798  0A0C  1003               	clrc
  5799  0A0D  0DF6               	rlf	___lwdiv@divisor,f
  5800  0A0E  0DF7               	rlf	___lwdiv@divisor+1,f
  5801  0A0F  3EFF               	addlw	-1
  5802  0A10  1D03               	skipz
  5803  0A11  2A0C               	goto	u3405
  5804  0A12  3001               	movlw	1
  5805  0A13  00FA               	movwf	??___lwdiv
  5806  0A14  087A               	movf	??___lwdiv,w
  5807  0A15  07FD               	addwf	___lwdiv@counter,f
  5808  0A16  2A09               	goto	l2280
  5809  0A17                     l2282:	
  5810  0A17  3001               	movlw	1
  5811  0A18                     u3425:	
  5812  0A18  1003               	clrc
  5813  0A19  0DFB               	rlf	___lwdiv@quotient,f
  5814  0A1A  0DFC               	rlf	___lwdiv@quotient+1,f
  5815  0A1B  3EFF               	addlw	-1
  5816  0A1C  1D03               	skipz
  5817  0A1D  2A18               	goto	u3425
  5818  0A1E  0877               	movf	___lwdiv@divisor+1,w
  5819  0A1F  0279               	subwf	___lwdiv@dividend+1,w
  5820  0A20  1D03               	skipz
  5821  0A21  2A24               	goto	u3435
  5822  0A22  0876               	movf	___lwdiv@divisor,w
  5823  0A23  0278               	subwf	___lwdiv@dividend,w
  5824  0A24                     u3435:	
  5825  0A24  1C03               	skipc
  5826  0A25  2A2D               	goto	l2288
  5827  0A26  0876               	movf	___lwdiv@divisor,w
  5828  0A27  02F8               	subwf	___lwdiv@dividend,f
  5829  0A28  0877               	movf	___lwdiv@divisor+1,w
  5830  0A29  1C03               	skipc
  5831  0A2A  03F9               	decf	___lwdiv@dividend+1,f
  5832  0A2B  02F9               	subwf	___lwdiv@dividend+1,f
  5833  0A2C  147B               	bsf	___lwdiv@quotient,0
  5834  0A2D                     l2288:	
  5835  0A2D  3001               	movlw	1
  5836  0A2E                     u3445:	
  5837  0A2E  1003               	clrc
  5838  0A2F  0CF7               	rrf	___lwdiv@divisor+1,f
  5839  0A30  0CF6               	rrf	___lwdiv@divisor,f
  5840  0A31  3EFF               	addlw	-1
  5841  0A32  1D03               	skipz
  5842  0A33  2A2E               	goto	u3445
  5843  0A34  3001               	movlw	1
  5844  0A35  02FD               	subwf	___lwdiv@counter,f
  5845  0A36  1D03               	btfss	3,2
  5846  0A37  2A17               	goto	l2282
  5847  0A38                     l2292:	
  5848  0A38  087C               	movf	___lwdiv@quotient+1,w
  5849  0A39  00F7               	movwf	?___lwdiv+1
  5850  0A3A  087B               	movf	___lwdiv@quotient,w
  5851  0A3B  00F6               	movwf	?___lwdiv
  5852  0A3C  0008               	return
  5853  0A3D                     __end_of___lwdiv:	
  5854                           
  5855                           	psect	text27
  5856  0903                     __ptext27:	
  5857 ;; *************** function ___bmul *****************
  5858 ;; Defined at:
  5859 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  multiplier      1    wreg     unsigned char 
  5862 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  multiplier      1    3[BANK0 ] unsigned char 
  5865 ;;  product         1    2[BANK0 ] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      unsigned char 
  5868 ;; Registers used:
  5869 ;;		wreg, status,2, status,0
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5875 ;;      Params:         0       1       0       0       0
  5876 ;;      Locals:         0       2       0       0       0
  5877 ;;      Temps:          0       1       0       0       0
  5878 ;;      Totals:         0       4       0       0       0
  5879 ;;Total ram usage:        4 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		_Lcd_Int
  5885 ;;		_WriteLongInt
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           
  5890                           ;psect for function ___bmul
  5891  0903                     ___bmul:	
  5892                           
  5893                           ;incstack = 0
  5894                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5895                           ;___bmul@multiplier stored from wreg
  5896  0903  1283               	bcf	3,5	;RP0=0, select bank0
  5897  0904  1303               	bcf	3,6	;RP1=0, select bank0
  5898  0905  00A3               	movwf	___bmul@multiplier
  5899  0906  01A2               	clrf	___bmul@product
  5900  0907                     l2136:	
  5901  0907  1C23               	btfss	___bmul@multiplier,0
  5902  0908  290D               	goto	l2140
  5903  0909  0820               	movf	___bmul@multiplicand,w
  5904  090A  00A1               	movwf	??___bmul
  5905  090B  0821               	movf	??___bmul,w
  5906  090C  07A2               	addwf	___bmul@product,f
  5907  090D                     l2140:	
  5908  090D  1003               	clrc
  5909  090E  0DA0               	rlf	___bmul@multiplicand,f
  5910  090F  1003               	clrc
  5911  0910  0CA3               	rrf	___bmul@multiplier,f
  5912  0911  0823               	movf	___bmul@multiplier,w
  5913  0912  1D03               	btfss	3,2
  5914  0913  2907               	goto	l2136
  5915  0914  0822               	movf	___bmul@product,w
  5916  0915  0008               	return
  5917  0916                     __end_of___bmul:	
  5918                           
  5919                           	psect	text28
  5920  0B8B                     __ptext28:	
  5921 ;; *************** function ___awdiv *****************
  5922 ;; Defined at:
  5923 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  divisor         2    0[COMMON] int 
  5926 ;;  dividend        2    2[COMMON] int 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  quotient        2    7[COMMON] int 
  5929 ;;  sign            1    6[COMMON] unsigned char 
  5930 ;;  counter         1    5[COMMON] unsigned char 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  2    0[COMMON] int 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5940 ;;      Params:         4       0       0       0       0
  5941 ;;      Locals:         4       0       0       0       0
  5942 ;;      Temps:          1       0       0       0       0
  5943 ;;      Totals:         9       0       0       0       0
  5944 ;;Total ram usage:        9 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; This function calls:
  5947 ;;		Nothing
  5948 ;; This function is called by:
  5949 ;;		_Lcd_Int
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           
  5954                           ;psect for function ___awdiv
  5955  0B8B                     ___awdiv:	
  5956                           
  5957                           ;incstack = 0
  5958                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5959  0B8B  01F6               	clrf	___awdiv@sign
  5960  0B8C  1FF1               	btfss	___awdiv@divisor+1,7
  5961  0B8D  2B95               	goto	l2156
  5962  0B8E  09F0               	comf	___awdiv@divisor,f
  5963  0B8F  09F1               	comf	___awdiv@divisor+1,f
  5964  0B90  0AF0               	incf	___awdiv@divisor,f
  5965  0B91  1903               	skipnz
  5966  0B92  0AF1               	incf	___awdiv@divisor+1,f
  5967  0B93  01F6               	clrf	___awdiv@sign
  5968  0B94  0AF6               	incf	___awdiv@sign,f
  5969  0B95                     l2156:	
  5970  0B95  1FF3               	btfss	___awdiv@dividend+1,7
  5971  0B96  2BA0               	goto	l2162
  5972  0B97  09F2               	comf	___awdiv@dividend,f
  5973  0B98  09F3               	comf	___awdiv@dividend+1,f
  5974  0B99  0AF2               	incf	___awdiv@dividend,f
  5975  0B9A  1903               	skipnz
  5976  0B9B  0AF3               	incf	___awdiv@dividend+1,f
  5977  0B9C  3001               	movlw	1
  5978  0B9D  00F4               	movwf	??___awdiv
  5979  0B9E  0874               	movf	??___awdiv,w
  5980  0B9F  06F6               	xorwf	___awdiv@sign,f
  5981  0BA0                     l2162:	
  5982  0BA0  01F7               	clrf	___awdiv@quotient
  5983  0BA1  01F8               	clrf	___awdiv@quotient+1
  5984  0BA2  0870               	movf	___awdiv@divisor,w
  5985  0BA3  0471               	iorwf	___awdiv@divisor+1,w
  5986  0BA4  1903               	btfsc	3,2
  5987  0BA5  2BD7               	goto	l2184
  5988  0BA6  01F5               	clrf	___awdiv@counter
  5989  0BA7  0AF5               	incf	___awdiv@counter,f
  5990  0BA8                     l2172:	
  5991  0BA8  1BF1               	btfsc	___awdiv@divisor+1,7
  5992  0BA9  2BB6               	goto	l2174
  5993  0BAA  3001               	movlw	1
  5994  0BAB                     u3075:	
  5995  0BAB  1003               	clrc
  5996  0BAC  0DF0               	rlf	___awdiv@divisor,f
  5997  0BAD  0DF1               	rlf	___awdiv@divisor+1,f
  5998  0BAE  3EFF               	addlw	-1
  5999  0BAF  1D03               	skipz
  6000  0BB0  2BAB               	goto	u3075
  6001  0BB1  3001               	movlw	1
  6002  0BB2  00F4               	movwf	??___awdiv
  6003  0BB3  0874               	movf	??___awdiv,w
  6004  0BB4  07F5               	addwf	___awdiv@counter,f
  6005  0BB5  2BA8               	goto	l2172
  6006  0BB6                     l2174:	
  6007  0BB6  3001               	movlw	1
  6008  0BB7                     u3095:	
  6009  0BB7  1003               	clrc
  6010  0BB8  0DF7               	rlf	___awdiv@quotient,f
  6011  0BB9  0DF8               	rlf	___awdiv@quotient+1,f
  6012  0BBA  3EFF               	addlw	-1
  6013  0BBB  1D03               	skipz
  6014  0BBC  2BB7               	goto	u3095
  6015  0BBD  0871               	movf	___awdiv@divisor+1,w
  6016  0BBE  0273               	subwf	___awdiv@dividend+1,w
  6017  0BBF  1D03               	skipz
  6018  0BC0  2BC3               	goto	u3105
  6019  0BC1  0870               	movf	___awdiv@divisor,w
  6020  0BC2  0272               	subwf	___awdiv@dividend,w
  6021  0BC3                     u3105:	
  6022  0BC3  1C03               	skipc
  6023  0BC4  2BCC               	goto	l2180
  6024  0BC5  0870               	movf	___awdiv@divisor,w
  6025  0BC6  02F2               	subwf	___awdiv@dividend,f
  6026  0BC7  0871               	movf	___awdiv@divisor+1,w
  6027  0BC8  1C03               	skipc
  6028  0BC9  03F3               	decf	___awdiv@dividend+1,f
  6029  0BCA  02F3               	subwf	___awdiv@dividend+1,f
  6030  0BCB  1477               	bsf	___awdiv@quotient,0
  6031  0BCC                     l2180:	
  6032  0BCC  3001               	movlw	1
  6033  0BCD                     u3115:	
  6034  0BCD  1003               	clrc
  6035  0BCE  0CF1               	rrf	___awdiv@divisor+1,f
  6036  0BCF  0CF0               	rrf	___awdiv@divisor,f
  6037  0BD0  3EFF               	addlw	-1
  6038  0BD1  1D03               	skipz
  6039  0BD2  2BCD               	goto	u3115
  6040  0BD3  3001               	movlw	1
  6041  0BD4  02F5               	subwf	___awdiv@counter,f
  6042  0BD5  1D03               	btfss	3,2
  6043  0BD6  2BB6               	goto	l2174
  6044  0BD7                     l2184:	
  6045  0BD7  0876               	movf	___awdiv@sign,w
  6046  0BD8  1903               	btfsc	3,2
  6047  0BD9  2BDF               	goto	l2188
  6048  0BDA  09F7               	comf	___awdiv@quotient,f
  6049  0BDB  09F8               	comf	___awdiv@quotient+1,f
  6050  0BDC  0AF7               	incf	___awdiv@quotient,f
  6051  0BDD  1903               	skipnz
  6052  0BDE  0AF8               	incf	___awdiv@quotient+1,f
  6053  0BDF                     l2188:	
  6054  0BDF  0878               	movf	___awdiv@quotient+1,w
  6055  0BE0  00F1               	movwf	?___awdiv+1
  6056  0BE1  0877               	movf	___awdiv@quotient,w
  6057  0BE2  00F0               	movwf	?___awdiv
  6058  0BE3  0008               	return
  6059  0BE4                     __end_of___awdiv:	
  6060                           
  6061                           	psect	text29
  6062  0F59                     __ptext29:	
  6063 ;; *************** function _Lcd_Command *****************
  6064 ;; Defined at:
  6065 ;;		line 132 in file "libs/HD44780.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  command         1    wreg     unsigned char 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  command         1    3[COMMON] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0, pclath, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6079 ;;      Params:         0       0       0       0       0
  6080 ;;      Locals:         1       0       0       0       0
  6081 ;;      Temps:          1       0       0       0       0
  6082 ;;      Totals:         2       0       0       0       0
  6083 ;;Total ram usage:        2 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    1
  6086 ;; This function calls:
  6087 ;;		_Lcd_Delay5500us
  6088 ;;		_Lcd_Delay5us
  6089 ;; This function is called by:
  6090 ;;		_main
  6091 ;;		_Lcd_Init
  6092 ;;		_Lcd_Text
  6093 ;;		_Lcd_WriteChar
  6094 ;;		_Lcd_Int
  6095 ;;		_Lcd_ConstText
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           
  6100                           ;psect for function _Lcd_Command
  6101  0F59                     _Lcd_Command:	
  6102                           
  6103                           ;incstack = 0
  6104                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+pclath+cstack]
  6105                           ;Lcd_Command@command stored from wreg
  6106  0F59  00F3               	movwf	Lcd_Command@command
  6107                           
  6108                           ;HD44780.c: 133: RA1 = 0; RA0 = 0;
  6109  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  6110  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  6111  0F5C  1085               	bcf	5,1	;volatile
  6112  0F5D  1005               	bcf	5,0	;volatile
  6113                           
  6114                           ;HD44780.c: 134: RA5 = (command & 0b10000000)>>7; RA4 = (command & 0b01000000)>>6;
  6115  0F5E  0873               	movf	Lcd_Command@command,w
  6116  0F5F  00F2               	movwf	??_Lcd_Command
  6117  0F60  3007               	movlw	7
  6118  0F61                     u2475:	
  6119  0F61  1003               	clrc
  6120  0F62  0CF2               	rrf	??_Lcd_Command,f
  6121  0F63  3EFF               	addlw	-1
  6122  0F64  1D03               	skipz
  6123  0F65  2F61               	goto	u2475
  6124  0F66  1C72               	btfss	??_Lcd_Command,0
  6125  0F67  2F6C               	goto	u2480
  6126  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  6127  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  6128  0F6A  1685               	bsf	5,5	;volatile
  6129  0F6B  2F6F               	goto	u2494
  6130  0F6C                     u2480:	
  6131  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  6132  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  6133  0F6E  1285               	bcf	5,5	;volatile
  6134  0F6F                     u2494:	
  6135  0F6F  0873               	movf	Lcd_Command@command,w
  6136  0F70  00F2               	movwf	??_Lcd_Command
  6137  0F71  3006               	movlw	6
  6138  0F72                     u2505:	
  6139  0F72  1003               	clrc
  6140  0F73  0CF2               	rrf	??_Lcd_Command,f
  6141  0F74  3EFF               	addlw	-1
  6142  0F75  1D03               	skipz
  6143  0F76  2F72               	goto	u2505
  6144  0F77  1C72               	btfss	??_Lcd_Command,0
  6145  0F78  2F7D               	goto	u2510
  6146  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  6147  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  6148  0F7B  1605               	bsf	5,4	;volatile
  6149  0F7C  2F80               	goto	u2524
  6150  0F7D                     u2510:	
  6151  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  6152  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  6153  0F7F  1205               	bcf	5,4	;volatile
  6154  0F80                     u2524:	
  6155                           
  6156                           ;HD44780.c: 135: RA3 = (command & 0b00100000)>>5; RA2 = (command & 0b00010000)>>4;
  6157  0F80  0873               	movf	Lcd_Command@command,w
  6158  0F81  00F2               	movwf	??_Lcd_Command
  6159  0F82  3005               	movlw	5
  6160  0F83                     u2535:	
  6161  0F83  1003               	clrc
  6162  0F84  0CF2               	rrf	??_Lcd_Command,f
  6163  0F85  3EFF               	addlw	-1
  6164  0F86  1D03               	skipz
  6165  0F87  2F83               	goto	u2535
  6166  0F88  1C72               	btfss	??_Lcd_Command,0
  6167  0F89  2F8E               	goto	u2540
  6168  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  6170  0F8C  1585               	bsf	5,3	;volatile
  6171  0F8D  2F91               	goto	u2554
  6172  0F8E                     u2540:	
  6173  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  6174  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  6175  0F90  1185               	bcf	5,3	;volatile
  6176  0F91                     u2554:	
  6177  0F91  0873               	movf	Lcd_Command@command,w
  6178  0F92  00F2               	movwf	??_Lcd_Command
  6179  0F93  3004               	movlw	4
  6180  0F94                     u2565:	
  6181  0F94  1003               	clrc
  6182  0F95  0CF2               	rrf	??_Lcd_Command,f
  6183  0F96  3EFF               	addlw	-1
  6184  0F97  1D03               	skipz
  6185  0F98  2F94               	goto	u2565
  6186  0F99  1C72               	btfss	??_Lcd_Command,0
  6187  0F9A  2F9F               	goto	u2570
  6188  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  6189  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  6190  0F9D  1505               	bsf	5,2	;volatile
  6191  0F9E  2FA2               	goto	l2022
  6192  0F9F                     u2570:	
  6193  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  6194  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  6195  0FA1  1105               	bcf	5,2	;volatile
  6196  0FA2                     l2022:	
  6197                           
  6198                           ;HD44780.c: 136: _delay(10);
  6199  0FA2  3003               	movlw	3
  6200  0FA3  00F2               	movwf	??_Lcd_Command
  6201  0FA4                     u4267:	
  6202  0FA4  0BF2               	decfsz	??_Lcd_Command,f
  6203  0FA5  2FA4               	goto	u4267
  6204                           
  6205                           ;HD44780.c: 137: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  6206  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  6207  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  6208  0FA8  1485               	bsf	5,1	;volatile
  6209  0FA9  120A  118A  2003  120A  158A  	fcall	_Lcd_Delay5us
  6210  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  6211  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  6212  0FB0  1085               	bcf	5,1	;volatile
  6213                           
  6214                           ;HD44780.c: 138: RA5 = (command & 0b00001000)>>3; RA4 = (command & 0b00000100)>>2;
  6215  0FB1  0873               	movf	Lcd_Command@command,w
  6216  0FB2  00F2               	movwf	??_Lcd_Command
  6217  0FB3  3003               	movlw	3
  6218  0FB4                     u2595:	
  6219  0FB4  1003               	clrc
  6220  0FB5  0CF2               	rrf	??_Lcd_Command,f
  6221  0FB6  3EFF               	addlw	-1
  6222  0FB7  1D03               	skipz
  6223  0FB8  2FB4               	goto	u2595
  6224  0FB9  1C72               	btfss	??_Lcd_Command,0
  6225  0FBA  2FBF               	goto	u2600
  6226  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  6227  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  6228  0FBD  1685               	bsf	5,5	;volatile
  6229  0FBE  2FC2               	goto	l2032
  6230  0FBF                     u2600:	
  6231  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  6233  0FC1  1285               	bcf	5,5	;volatile
  6234  0FC2                     l2032:	
  6235  0FC2  0873               	movf	Lcd_Command@command,w
  6236  0FC3  00F2               	movwf	??_Lcd_Command
  6237  0FC4  3002               	movlw	2
  6238  0FC5                     u2625:	
  6239  0FC5  1003               	clrc
  6240  0FC6  0CF2               	rrf	??_Lcd_Command,f
  6241  0FC7  3EFF               	addlw	-1
  6242  0FC8  1D03               	skipz
  6243  0FC9  2FC5               	goto	u2625
  6244  0FCA  1C72               	btfss	??_Lcd_Command,0
  6245  0FCB  2FD0               	goto	u2630
  6246  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  6247  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  6248  0FCE  1605               	bsf	5,4	;volatile
  6249  0FCF  2FD3               	goto	l2034
  6250  0FD0                     u2630:	
  6251  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  6252  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  6253  0FD2  1205               	bcf	5,4	;volatile
  6254  0FD3                     l2034:	
  6255                           
  6256                           ;HD44780.c: 139: RA3 = (command & 0b00000010)>>1; RA2 = (command & 0b00000001);
  6257  0FD3  0873               	movf	Lcd_Command@command,w
  6258  0FD4  00F2               	movwf	??_Lcd_Command
  6259  0FD5  3001               	movlw	1
  6260  0FD6                     u2655:	
  6261  0FD6  1003               	clrc
  6262  0FD7  0CF2               	rrf	??_Lcd_Command,f
  6263  0FD8  3EFF               	addlw	-1
  6264  0FD9  1D03               	skipz
  6265  0FDA  2FD6               	goto	u2655
  6266  0FDB  1C72               	btfss	??_Lcd_Command,0
  6267  0FDC  2FE1               	goto	u2660
  6268  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  6269  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  6270  0FDF  1585               	bsf	5,3	;volatile
  6271  0FE0  2FE4               	goto	l2036
  6272  0FE1                     u2660:	
  6273  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  6274  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  6275  0FE3  1185               	bcf	5,3	;volatile
  6276  0FE4                     l2036:	
  6277  0FE4  1C73               	btfss	Lcd_Command@command,0
  6278  0FE5  2FEA               	goto	u2680
  6279  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0FE8  1505               	bsf	5,2	;volatile
  6282  0FE9  2FED               	goto	l2038
  6283  0FEA                     u2680:	
  6284  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  6285  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  6286  0FEC  1105               	bcf	5,2	;volatile
  6287  0FED                     l2038:	
  6288                           
  6289                           ;HD44780.c: 140: _delay(10);
  6290  0FED  3003               	movlw	3
  6291  0FEE  00F2               	movwf	??_Lcd_Command
  6292  0FEF                     u4277:	
  6293  0FEF  0BF2               	decfsz	??_Lcd_Command,f
  6294  0FF0  2FEF               	goto	u4277
  6295                           
  6296                           ;HD44780.c: 141: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  6297  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  6298  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  6299  0FF3  1485               	bsf	5,1	;volatile
  6300  0FF4  120A  118A  2003  120A  158A  	fcall	_Lcd_Delay5us
  6301  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  6302  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  6303  0FFB  1085               	bcf	5,1	;volatile
  6304                           
  6305                           ;HD44780.c: 142: Lcd_Delay5500us();
  6306  0FFC  120A  158A  20E8   	fcall	_Lcd_Delay5500us
  6307  0FFF  0008               	return
  6308  1000                     __end_of_Lcd_Command:	
  6309                           
  6310                           	psect	text30
  6311  0014                     __ptext30:	
  6312 ;; *************** function _Lcd_CharCP *****************
  6313 ;; Defined at:
  6314 ;;		line 115 in file "libs/HD44780.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  c               1    wreg     unsigned char 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  c               1    3[COMMON] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0, pclath, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6328 ;;      Params:         0       0       0       0       0
  6329 ;;      Locals:         1       0       0       0       0
  6330 ;;      Temps:          1       0       0       0       0
  6331 ;;      Totals:         2       0       0       0       0
  6332 ;;Total ram usage:        2 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    1
  6335 ;; This function calls:
  6336 ;;		_Lcd_Delay5500us
  6337 ;;		_Lcd_Delay5us
  6338 ;; This function is called by:
  6339 ;;		_Lcd_Text
  6340 ;;		_Lcd_WriteChar
  6341 ;;		_Lcd_Int
  6342 ;;		_Lcd_ConstText
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           
  6347                           ;psect for function _Lcd_CharCP
  6348  0014                     _Lcd_CharCP:	
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0+pclath+cstack]
  6352                           ;Lcd_CharCP@c stored from wreg
  6353  0014  00F3               	movwf	Lcd_CharCP@c
  6354                           
  6355                           ;HD44780.c: 116: RA1 = 0; RA0 = 1;
  6356  0015  1283               	bcf	3,5	;RP0=0, select bank0
  6357  0016  1303               	bcf	3,6	;RP1=0, select bank0
  6358  0017  1085               	bcf	5,1	;volatile
  6359  0018  1405               	bsf	5,0	;volatile
  6360                           
  6361                           ;HD44780.c: 117: RA5 = (c & 0b10000000)>>7; RA4 = (c & 0b01000000)>>6;
  6362  0019  0873               	movf	Lcd_CharCP@c,w
  6363  001A  00F2               	movwf	??_Lcd_CharCP
  6364  001B  3007               	movlw	7
  6365  001C                     u2735:	
  6366  001C  1003               	clrc
  6367  001D  0CF2               	rrf	??_Lcd_CharCP,f
  6368  001E  3EFF               	addlw	-1
  6369  001F  1D03               	skipz
  6370  0020  281C               	goto	u2735
  6371  0021  1C72               	btfss	??_Lcd_CharCP,0
  6372  0022  2827               	goto	u2740
  6373  0023  1283               	bcf	3,5	;RP0=0, select bank0
  6374  0024  1303               	bcf	3,6	;RP1=0, select bank0
  6375  0025  1685               	bsf	5,5	;volatile
  6376  0026  282A               	goto	u2754
  6377  0027                     u2740:	
  6378  0027  1283               	bcf	3,5	;RP0=0, select bank0
  6379  0028  1303               	bcf	3,6	;RP1=0, select bank0
  6380  0029  1285               	bcf	5,5	;volatile
  6381  002A                     u2754:	
  6382  002A  0873               	movf	Lcd_CharCP@c,w
  6383  002B  00F2               	movwf	??_Lcd_CharCP
  6384  002C  3006               	movlw	6
  6385  002D                     u2765:	
  6386  002D  1003               	clrc
  6387  002E  0CF2               	rrf	??_Lcd_CharCP,f
  6388  002F  3EFF               	addlw	-1
  6389  0030  1D03               	skipz
  6390  0031  282D               	goto	u2765
  6391  0032  1C72               	btfss	??_Lcd_CharCP,0
  6392  0033  2838               	goto	u2770
  6393  0034  1283               	bcf	3,5	;RP0=0, select bank0
  6394  0035  1303               	bcf	3,6	;RP1=0, select bank0
  6395  0036  1605               	bsf	5,4	;volatile
  6396  0037  283B               	goto	u2784
  6397  0038                     u2770:	
  6398  0038  1283               	bcf	3,5	;RP0=0, select bank0
  6399  0039  1303               	bcf	3,6	;RP1=0, select bank0
  6400  003A  1205               	bcf	5,4	;volatile
  6401  003B                     u2784:	
  6402                           
  6403                           ;HD44780.c: 118: RA3 = (c & 0b00100000)>>5; RA2 = (c & 0b00010000)>>4;
  6404  003B  0873               	movf	Lcd_CharCP@c,w
  6405  003C  00F2               	movwf	??_Lcd_CharCP
  6406  003D  3005               	movlw	5
  6407  003E                     u2795:	
  6408  003E  1003               	clrc
  6409  003F  0CF2               	rrf	??_Lcd_CharCP,f
  6410  0040  3EFF               	addlw	-1
  6411  0041  1D03               	skipz
  6412  0042  283E               	goto	u2795
  6413  0043  1C72               	btfss	??_Lcd_CharCP,0
  6414  0044  2849               	goto	u2800
  6415  0045  1283               	bcf	3,5	;RP0=0, select bank0
  6416  0046  1303               	bcf	3,6	;RP1=0, select bank0
  6417  0047  1585               	bsf	5,3	;volatile
  6418  0048  284C               	goto	u2814
  6419  0049                     u2800:	
  6420  0049  1283               	bcf	3,5	;RP0=0, select bank0
  6421  004A  1303               	bcf	3,6	;RP1=0, select bank0
  6422  004B  1185               	bcf	5,3	;volatile
  6423  004C                     u2814:	
  6424  004C  0873               	movf	Lcd_CharCP@c,w
  6425  004D  00F2               	movwf	??_Lcd_CharCP
  6426  004E  3004               	movlw	4
  6427  004F                     u2825:	
  6428  004F  1003               	clrc
  6429  0050  0CF2               	rrf	??_Lcd_CharCP,f
  6430  0051  3EFF               	addlw	-1
  6431  0052  1D03               	skipz
  6432  0053  284F               	goto	u2825
  6433  0054  1C72               	btfss	??_Lcd_CharCP,0
  6434  0055  285A               	goto	u2830
  6435  0056  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0057  1303               	bcf	3,6	;RP1=0, select bank0
  6437  0058  1505               	bsf	5,2	;volatile
  6438  0059  285D               	goto	l2068
  6439  005A                     u2830:	
  6440  005A  1283               	bcf	3,5	;RP0=0, select bank0
  6441  005B  1303               	bcf	3,6	;RP1=0, select bank0
  6442  005C  1105               	bcf	5,2	;volatile
  6443  005D                     l2068:	
  6444                           
  6445                           ;HD44780.c: 119: _delay(10);
  6446  005D  3003               	movlw	3
  6447  005E  00F2               	movwf	??_Lcd_CharCP
  6448  005F                     u4287:	
  6449  005F  0BF2               	decfsz	??_Lcd_CharCP,f
  6450  0060  285F               	goto	u4287
  6451                           
  6452                           ;HD44780.c: 120: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  6453  0061  1283               	bcf	3,5	;RP0=0, select bank0
  6454  0062  1303               	bcf	3,6	;RP1=0, select bank0
  6455  0063  1485               	bsf	5,1	;volatile
  6456  0064  120A  118A  2003  120A  118A  	fcall	_Lcd_Delay5us
  6457  0069  1283               	bcf	3,5	;RP0=0, select bank0
  6458  006A  1303               	bcf	3,6	;RP1=0, select bank0
  6459  006B  1085               	bcf	5,1	;volatile
  6460                           
  6461                           ;HD44780.c: 121: RA5 = (c & 0b00001000)>>3; RA4 = (c & 0b00000100)>>2;
  6462  006C  0873               	movf	Lcd_CharCP@c,w
  6463  006D  00F2               	movwf	??_Lcd_CharCP
  6464  006E  3003               	movlw	3
  6465  006F                     u2855:	
  6466  006F  1003               	clrc
  6467  0070  0CF2               	rrf	??_Lcd_CharCP,f
  6468  0071  3EFF               	addlw	-1
  6469  0072  1D03               	skipz
  6470  0073  286F               	goto	u2855
  6471  0074  1C72               	btfss	??_Lcd_CharCP,0
  6472  0075  287A               	goto	u2860
  6473  0076  1283               	bcf	3,5	;RP0=0, select bank0
  6474  0077  1303               	bcf	3,6	;RP1=0, select bank0
  6475  0078  1685               	bsf	5,5	;volatile
  6476  0079  287D               	goto	l2078
  6477  007A                     u2860:	
  6478  007A  1283               	bcf	3,5	;RP0=0, select bank0
  6479  007B  1303               	bcf	3,6	;RP1=0, select bank0
  6480  007C  1285               	bcf	5,5	;volatile
  6481  007D                     l2078:	
  6482  007D  0873               	movf	Lcd_CharCP@c,w
  6483  007E  00F2               	movwf	??_Lcd_CharCP
  6484  007F  3002               	movlw	2
  6485  0080                     u2885:	
  6486  0080  1003               	clrc
  6487  0081  0CF2               	rrf	??_Lcd_CharCP,f
  6488  0082  3EFF               	addlw	-1
  6489  0083  1D03               	skipz
  6490  0084  2880               	goto	u2885
  6491  0085  1C72               	btfss	??_Lcd_CharCP,0
  6492  0086  288B               	goto	u2890
  6493  0087  1283               	bcf	3,5	;RP0=0, select bank0
  6494  0088  1303               	bcf	3,6	;RP1=0, select bank0
  6495  0089  1605               	bsf	5,4	;volatile
  6496  008A  288E               	goto	l2080
  6497  008B                     u2890:	
  6498  008B  1283               	bcf	3,5	;RP0=0, select bank0
  6499  008C  1303               	bcf	3,6	;RP1=0, select bank0
  6500  008D  1205               	bcf	5,4	;volatile
  6501  008E                     l2080:	
  6502                           
  6503                           ;HD44780.c: 122: RA3 = (c & 0b00000010)>>1; RA2 = (c & 0b00000001);
  6504  008E  0873               	movf	Lcd_CharCP@c,w
  6505  008F  00F2               	movwf	??_Lcd_CharCP
  6506  0090  3001               	movlw	1
  6507  0091                     u2915:	
  6508  0091  1003               	clrc
  6509  0092  0CF2               	rrf	??_Lcd_CharCP,f
  6510  0093  3EFF               	addlw	-1
  6511  0094  1D03               	skipz
  6512  0095  2891               	goto	u2915
  6513  0096  1C72               	btfss	??_Lcd_CharCP,0
  6514  0097  289C               	goto	u2920
  6515  0098  1283               	bcf	3,5	;RP0=0, select bank0
  6516  0099  1303               	bcf	3,6	;RP1=0, select bank0
  6517  009A  1585               	bsf	5,3	;volatile
  6518  009B  289F               	goto	l2082
  6519  009C                     u2920:	
  6520  009C  1283               	bcf	3,5	;RP0=0, select bank0
  6521  009D  1303               	bcf	3,6	;RP1=0, select bank0
  6522  009E  1185               	bcf	5,3	;volatile
  6523  009F                     l2082:	
  6524  009F  1C73               	btfss	Lcd_CharCP@c,0
  6525  00A0  28A5               	goto	u2940
  6526  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  6527  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  6528  00A3  1505               	bsf	5,2	;volatile
  6529  00A4  28A8               	goto	l2084
  6530  00A5                     u2940:	
  6531  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6532  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  6533  00A7  1105               	bcf	5,2	;volatile
  6534  00A8                     l2084:	
  6535                           
  6536                           ;HD44780.c: 123: _delay(10);
  6537  00A8  3003               	movlw	3
  6538  00A9  00F2               	movwf	??_Lcd_CharCP
  6539  00AA                     u4297:	
  6540  00AA  0BF2               	decfsz	??_Lcd_CharCP,f
  6541  00AB  28AA               	goto	u4297
  6542                           
  6543                           ;HD44780.c: 124: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  6544  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  6545  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  6546  00AE  1485               	bsf	5,1	;volatile
  6547  00AF  120A  118A  2003  120A  118A  	fcall	_Lcd_Delay5us
  6548  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  6549  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  6550  00B6  1085               	bcf	5,1	;volatile
  6551                           
  6552                           ;HD44780.c: 125: Lcd_Delay5us(); Lcd_Delay5500us();
  6553  00B7  120A  118A  2003  120A  118A  	fcall	_Lcd_Delay5us
  6554  00BC  120A  158A  20E8   	fcall	_Lcd_Delay5500us
  6555  00BF  0008               	return
  6556  00C0                     __end_of_Lcd_CharCP:	
  6557                           
  6558                           	psect	text31
  6559  0003                     __ptext31:	
  6560 ;; *************** function _Lcd_Delay5us *****************
  6561 ;; Defined at:
  6562 ;;		line 148 in file "libs/HD44780.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;		None
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		None
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6576 ;;      Params:         0       0       0       0       0
  6577 ;;      Locals:         0       0       0       0       0
  6578 ;;      Temps:          0       0       0       0       0
  6579 ;;      Totals:         0       0       0       0       0
  6580 ;;Total ram usage:        0 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_Lcd_Init
  6586 ;;		_Lcd_CharCP
  6587 ;;		_Lcd_Command
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           
  6592                           ;psect for function _Lcd_Delay5us
  6593  0003                     _Lcd_Delay5us:	
  6594                           
  6595                           ;HD44780.c: 149: _delay((unsigned long)((5)*(4000000/4000000.0)));
  6596                           
  6597                           ;incstack = 0
  6598                           ; Regs used in _Lcd_Delay5us: []
  6599  0003  2804               	nop2	;2 cycle nop
  6600  0004  2805               	nop2	;2 cycle nop
  6601  0005  0000               	nop
  6602                           
  6603                           ;HD44780.c: 150: _delay((unsigned long)((5)*(4000000/4000000.0)));
  6604  0006  2807               	nop2	;2 cycle nop
  6605  0007  2808               	nop2	;2 cycle nop
  6606  0008  0000               	nop
  6607  0009  0008               	return
  6608  000A                     __end_of_Lcd_Delay5us:	
  6609                           
  6610                           	psect	text32
  6611  08E8                     __ptext32:	
  6612 ;; *************** function _Lcd_Delay5500us *****************
  6613 ;; Defined at:
  6614 ;;		line 152 in file "libs/HD44780.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;		None
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;		None
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  1    wreg      void 
  6621 ;; Registers used:
  6622 ;;		wreg
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6628 ;;      Params:         0       0       0       0       0
  6629 ;;      Locals:         0       0       0       0       0
  6630 ;;      Temps:          2       0       0       0       0
  6631 ;;      Totals:         2       0       0       0       0
  6632 ;;Total ram usage:        2 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; This function calls:
  6635 ;;		Nothing
  6636 ;; This function is called by:
  6637 ;;		_Lcd_Init
  6638 ;;		_Lcd_CharCP
  6639 ;;		_Lcd_Command
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           
  6644                           ;psect for function _Lcd_Delay5500us
  6645  08E8                     _Lcd_Delay5500us:	
  6646                           
  6647                           ;HD44780.c: 153: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6648                           
  6649                           ;incstack = 0
  6650                           ; Regs used in _Lcd_Delay5500us: [wreg]
  6651  08E8  3008               	movlw	8
  6652  08E9  00F1               	movwf	??_Lcd_Delay5500us+1
  6653  08EA  3023               	movlw	35
  6654  08EB  00F0               	movwf	??_Lcd_Delay5500us
  6655  08EC                     u4307:	
  6656  08EC  0BF0               	decfsz	??_Lcd_Delay5500us,f
  6657  08ED  28EC               	goto	u4307
  6658  08EE  0BF1               	decfsz	??_Lcd_Delay5500us+1,f
  6659  08EF  28EC               	goto	u4307
  6660  08F0  0008               	return
  6661  08F1                     __end_of_Lcd_Delay5500us:	
  6662                           
  6663                           	psect	text33
  6664  0AFC                     __ptext33:	
  6665 ;; *************** function _I2C_ReadAtAddress *****************
  6666 ;; Defined at:
  6667 ;;		line 55 in file "libs/gsk_i2c.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  DevID           1    wreg     unsigned char 
  6670 ;;  IntAdd          1    6[COMMON] unsigned char 
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;  DevID           1   10[COMMON] unsigned char 
  6673 ;;  data            1    9[COMMON] unsigned char 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      unsigned char 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0, pclath, cstack
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6683 ;;      Params:         1       0       0       0       0
  6684 ;;      Locals:         2       0       0       0       0
  6685 ;;      Temps:          2       0       0       0       0
  6686 ;;      Totals:         5       0       0       0       0
  6687 ;;Total ram usage:        5 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    2
  6690 ;; This function calls:
  6691 ;;		_I2C_Master_Read
  6692 ;;		_I2C_Master_Start
  6693 ;;		_I2C_Master_Stop
  6694 ;;		_I2C_Master_Write
  6695 ;; This function is called by:
  6696 ;;		_DisplayTimeFromRTC
  6697 ;;		_ReadRTCAsSec
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           
  6702                           ;psect for function _I2C_ReadAtAddress
  6703  0AFC                     _I2C_ReadAtAddress:	
  6704                           
  6705                           ;incstack = 0
  6706                           ; Regs used in _I2C_ReadAtAddress: [wreg+status,2+status,0+pclath+cstack]
  6707                           ;I2C_ReadAtAddress@DevID stored from wreg
  6708  0AFC  00FA               	movwf	I2C_ReadAtAddress@DevID
  6709                           
  6710                           ;gsk_i2c.c: 57: I2C_Master_Start();
  6711  0AFD  120A  158A  20C9  120A  158A  	fcall	_I2C_Master_Start
  6712                           
  6713                           ;gsk_i2c.c: 58: I2C_Master_Write(DevID);
  6714  0B02  087A               	movf	I2C_ReadAtAddress@DevID,w
  6715  0B03  00F7               	movwf	??_I2C_ReadAtAddress
  6716  0B04  01F8               	clrf	??_I2C_ReadAtAddress+1
  6717  0B05  0877               	movf	??_I2C_ReadAtAddress,w
  6718  0B06  00F0               	movwf	I2C_Master_Write@d
  6719  0B07  0878               	movf	??_I2C_ReadAtAddress+1,w
  6720  0B08  00F1               	movwf	I2C_Master_Write@d+1
  6721  0B09  120A  158A  20D7  120A  158A  	fcall	_I2C_Master_Write
  6722                           
  6723                           ;gsk_i2c.c: 59: I2C_Master_Write(IntAdd);
  6724  0B0E  0876               	movf	I2C_ReadAtAddress@IntAdd,w
  6725  0B0F  00F7               	movwf	??_I2C_ReadAtAddress
  6726  0B10  01F8               	clrf	??_I2C_ReadAtAddress+1
  6727  0B11  0877               	movf	??_I2C_ReadAtAddress,w
  6728  0B12  00F0               	movwf	I2C_Master_Write@d
  6729  0B13  0878               	movf	??_I2C_ReadAtAddress+1,w
  6730  0B14  00F1               	movwf	I2C_Master_Write@d+1
  6731  0B15  120A  158A  20D7  120A  158A  	fcall	_I2C_Master_Write
  6732                           
  6733                           ;gsk_i2c.c: 60: I2C_Master_Stop();
  6734  0B1A  120A  158A  20D0  120A  158A  	fcall	_I2C_Master_Stop
  6735                           
  6736                           ;gsk_i2c.c: 62: I2C_Master_Start();
  6737  0B1F  120A  158A  20C9  120A  158A  	fcall	_I2C_Master_Start
  6738                           
  6739                           ;gsk_i2c.c: 63: I2C_Master_Write(DevID+1);
  6740  0B24  087A               	movf	I2C_ReadAtAddress@DevID,w
  6741  0B25  3E01               	addlw	1
  6742  0B26  00F0               	movwf	I2C_Master_Write@d
  6743  0B27  3000               	movlw	0
  6744  0B28  1803               	skipnc
  6745  0B29  3001               	movlw	1
  6746  0B2A  00F1               	movwf	I2C_Master_Write@d+1
  6747  0B2B  120A  158A  20D7  120A  158A  	fcall	_I2C_Master_Write
  6748                           
  6749                           ;gsk_i2c.c: 64: char data = I2C_Master_Read(0);
  6750  0B30  3000               	movlw	0
  6751  0B31  00F0               	movwf	I2C_Master_Read@a
  6752  0B32  00F1               	movwf	I2C_Master_Read@a+1
  6753  0B33  120A  158A  2137  120A  158A  	fcall	_I2C_Master_Read
  6754  0B38  0870               	movf	?_I2C_Master_Read,w
  6755  0B39  00F7               	movwf	??_I2C_ReadAtAddress
  6756  0B3A  0877               	movf	??_I2C_ReadAtAddress,w
  6757  0B3B  00F9               	movwf	I2C_ReadAtAddress@data
  6758                           
  6759                           ;gsk_i2c.c: 65: I2C_Master_Stop();
  6760  0B3C  120A  158A  20D0   	fcall	_I2C_Master_Stop
  6761                           
  6762                           ;gsk_i2c.c: 66: return data;
  6763  0B3F  0879               	movf	I2C_ReadAtAddress@data,w
  6764  0B40  0008               	return
  6765  0B41                     __end_of_I2C_ReadAtAddress:	
  6766                           
  6767                           	psect	text34
  6768  08D7                     __ptext34:	
  6769 ;; *************** function _I2C_Master_Write *****************
  6770 ;; Defined at:
  6771 ;;		line 36 in file "libs/gsk_i2c.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  d               2    0[COMMON] unsigned int 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;		None
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0, pclath, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6785 ;;      Params:         2       0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0
  6788 ;;      Totals:         2       0       0       0       0
  6789 ;;Total ram usage:        2 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    1
  6792 ;; This function calls:
  6793 ;;		_I2C_Master_Wait
  6794 ;; This function is called by:
  6795 ;;		_I2C_ReadAtAddress
  6796 ;;		_I2C_WriteAtAddress
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _I2C_Master_Write
  6802  08D7                     _I2C_Master_Write:	
  6803                           
  6804                           ;gsk_i2c.c: 38: I2C_Master_Wait();
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6808  08D7  120A  158A  20DF   	fcall	_I2C_Master_Wait
  6809                           
  6810                           ;gsk_i2c.c: 39: SSPBUF = d;
  6811  08DA  0870               	movf	I2C_Master_Write@d,w
  6812  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  6813  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  6814  08DD  0093               	movwf	19	;volatile
  6815  08DE  0008               	return
  6816  08DF                     __end_of_I2C_Master_Write:	
  6817                           
  6818                           	psect	text35
  6819  08D0                     __ptext35:	
  6820 ;; *************** function _I2C_Master_Stop *****************
  6821 ;; Defined at:
  6822 ;;		line 30 in file "libs/gsk_i2c.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;		None
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;		None
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  1    wreg      void 
  6829 ;; Registers used:
  6830 ;;		wreg, status,2, status,0, pclath, cstack
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6836 ;;      Params:         0       0       0       0       0
  6837 ;;      Locals:         0       0       0       0       0
  6838 ;;      Temps:          0       0       0       0       0
  6839 ;;      Totals:         0       0       0       0       0
  6840 ;;Total ram usage:        0 bytes
  6841 ;; Hardware stack levels used:    1
  6842 ;; Hardware stack levels required when called:    1
  6843 ;; This function calls:
  6844 ;;		_I2C_Master_Wait
  6845 ;; This function is called by:
  6846 ;;		_I2C_ReadAtAddress
  6847 ;;		_I2C_WriteAtAddress
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           
  6852                           ;psect for function _I2C_Master_Stop
  6853  08D0                     _I2C_Master_Stop:	
  6854                           
  6855                           ;gsk_i2c.c: 32: I2C_Master_Wait();
  6856                           
  6857                           ;incstack = 0
  6858                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6859  08D0  120A  158A  20DF   	fcall	_I2C_Master_Wait
  6860                           
  6861                           ;gsk_i2c.c: 33: PEN = 1;
  6862  08D3  1683               	bsf	3,5	;RP0=1, select bank1
  6863  08D4  1303               	bcf	3,6	;RP1=0, select bank1
  6864  08D5  1511               	bsf	17,2	;volatile
  6865  08D6  0008               	return
  6866  08D7                     __end_of_I2C_Master_Stop:	
  6867                           
  6868                           	psect	text36
  6869  08C9                     __ptext36:	
  6870 ;; *************** function _I2C_Master_Start *****************
  6871 ;; Defined at:
  6872 ;;		line 18 in file "libs/gsk_i2c.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;		None
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;		None
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1    wreg      void 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2, status,0, pclath, cstack
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6886 ;;      Params:         0       0       0       0       0
  6887 ;;      Locals:         0       0       0       0       0
  6888 ;;      Temps:          0       0       0       0       0
  6889 ;;      Totals:         0       0       0       0       0
  6890 ;;Total ram usage:        0 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    1
  6893 ;; This function calls:
  6894 ;;		_I2C_Master_Wait
  6895 ;; This function is called by:
  6896 ;;		_I2C_ReadAtAddress
  6897 ;;		_I2C_WriteAtAddress
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           
  6902                           ;psect for function _I2C_Master_Start
  6903  08C9                     _I2C_Master_Start:	
  6904                           
  6905                           ;gsk_i2c.c: 20: I2C_Master_Wait();
  6906                           
  6907                           ;incstack = 0
  6908                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6909  08C9  120A  158A  20DF   	fcall	_I2C_Master_Wait
  6910                           
  6911                           ;gsk_i2c.c: 21: SEN = 1;
  6912  08CC  1683               	bsf	3,5	;RP0=1, select bank1
  6913  08CD  1303               	bcf	3,6	;RP1=0, select bank1
  6914  08CE  1411               	bsf	17,0	;volatile
  6915  08CF  0008               	return
  6916  08D0                     __end_of_I2C_Master_Start:	
  6917                           
  6918                           	psect	text37
  6919  0937                     __ptext37:	
  6920 ;; *************** function _I2C_Master_Read *****************
  6921 ;; Defined at:
  6922 ;;		line 42 in file "libs/gsk_i2c.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  a               2    0[COMMON] unsigned short 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  temp            2    4[COMMON] unsigned short 
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  2    0[COMMON] unsigned short 
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0, pclath, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6936 ;;      Params:         2       0       0       0       0
  6937 ;;      Locals:         2       0       0       0       0
  6938 ;;      Temps:          2       0       0       0       0
  6939 ;;      Totals:         6       0       0       0       0
  6940 ;;Total ram usage:        6 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    1
  6943 ;; This function calls:
  6944 ;;		_I2C_Master_Wait
  6945 ;; This function is called by:
  6946 ;;		_I2C_ReadAtAddress
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           
  6951                           ;psect for function _I2C_Master_Read
  6952  0937                     _I2C_Master_Read:	
  6953                           
  6954                           ;gsk_i2c.c: 44: unsigned short temp;
  6955                           ;gsk_i2c.c: 45: I2C_Master_Wait();
  6956                           
  6957                           ;incstack = 0
  6958                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  6959  0937  120A  158A  20DF  120A  158A  	fcall	_I2C_Master_Wait
  6960                           
  6961                           ;gsk_i2c.c: 46: RCEN = 1;
  6962  093C  1683               	bsf	3,5	;RP0=1, select bank1
  6963  093D  1303               	bcf	3,6	;RP1=0, select bank1
  6964  093E  1591               	bsf	17,3	;volatile
  6965                           
  6966                           ;gsk_i2c.c: 47: I2C_Master_Wait();
  6967  093F  120A  158A  20DF  120A  158A  	fcall	_I2C_Master_Wait
  6968                           
  6969                           ;gsk_i2c.c: 48: temp = SSPBUF;
  6970  0944  1283               	bcf	3,5	;RP0=0, select bank0
  6971  0945  1303               	bcf	3,6	;RP1=0, select bank0
  6972  0946  0813               	movf	19,w	;volatile
  6973  0947  00F2               	movwf	??_I2C_Master_Read
  6974  0948  01F3               	clrf	??_I2C_Master_Read+1
  6975  0949  0872               	movf	??_I2C_Master_Read,w
  6976  094A  00F4               	movwf	I2C_Master_Read@temp
  6977  094B  0873               	movf	??_I2C_Master_Read+1,w
  6978  094C  00F5               	movwf	I2C_Master_Read@temp+1
  6979                           
  6980                           ;gsk_i2c.c: 49: I2C_Master_Wait();
  6981  094D  120A  158A  20DF  120A  158A  	fcall	_I2C_Master_Wait
  6982                           
  6983                           ;gsk_i2c.c: 50: ACKDT = (a)?0:1;
  6984  0952  0870               	movf	I2C_Master_Read@a,w
  6985  0953  0471               	iorwf	I2C_Master_Read@a+1,w
  6986  0954  1D03               	btfss	3,2
  6987  0955  295A               	goto	u2960
  6988  0956  1683               	bsf	3,5	;RP0=1, select bank1
  6989  0957  1303               	bcf	3,6	;RP1=0, select bank1
  6990  0958  1691               	bsf	17,5	;volatile
  6991  0959  295D               	goto	l2114
  6992  095A                     u2960:	
  6993  095A  1683               	bsf	3,5	;RP0=1, select bank1
  6994  095B  1303               	bcf	3,6	;RP1=0, select bank1
  6995  095C  1291               	bcf	17,5	;volatile
  6996  095D                     l2114:	
  6997                           
  6998                           ;gsk_i2c.c: 51: ACKEN = 1;
  6999  095D  1611               	bsf	17,4	;volatile
  7000                           
  7001                           ;gsk_i2c.c: 52: return temp;
  7002  095E  0875               	movf	I2C_Master_Read@temp+1,w
  7003  095F  00F1               	movwf	?_I2C_Master_Read+1
  7004  0960  0874               	movf	I2C_Master_Read@temp,w
  7005  0961  00F0               	movwf	?_I2C_Master_Read
  7006  0962  0008               	return
  7007  0963                     __end_of_I2C_Master_Read:	
  7008                           
  7009                           	psect	text38
  7010  08DF                     __ptext38:	
  7011 ;; *************** function _I2C_Master_Wait *****************
  7012 ;; Defined at:
  7013 ;;		line 13 in file "libs/gsk_i2c.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7027 ;;      Params:         0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0
  7030 ;;      Totals:         0       0       0       0       0
  7031 ;;Total ram usage:        0 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_I2C_Master_Start
  7037 ;;		_I2C_Master_Stop
  7038 ;;		_I2C_Master_Write
  7039 ;;		_I2C_Master_Read
  7040 ;;		_I2C_Master_RepeatedStart
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           
  7045                           ;psect for function _I2C_Master_Wait
  7046  08DF                     _I2C_Master_Wait:	
  7047  08DF                     l299:	
  7048                           ;gsk_i2c.c: 15: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7049                           
  7050                           ;incstack = 0
  7051                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7052                           
  7053  08DF  1683               	bsf	3,5	;RP0=1, select bank1
  7054  08E0  1303               	bcf	3,6	;RP1=0, select bank1
  7055  08E1  1914               	btfsc	20,2	;volatile
  7056  08E2  28DF               	goto	l299
  7057  08E3  0811               	movf	17,w	;volatile
  7058  08E4  391F               	andlw	31
  7059  08E5  1903               	btfsc	3,2
  7060  08E6  0008               	return
  7061  08E7  28DF               	goto	l299
  7062  08E8                     __end_of_I2C_Master_Wait:	
  7063  007E                     btemp	set	126	;btemp
  7064  007E                     wtemp	set	126
  7065  007E                     wtemp0	set	126
  7066  0080                     wtemp1	set	128
  7067  0082                     wtemp2	set	130
  7068  0084                     wtemp3	set	132
  7069  0086                     wtemp4	set	134
  7070  0088                     wtemp5	set	136
  7071  007F                     wtemp6	set	127
  7072  007E                     ttemp	set	126
  7073  007E                     ttemp0	set	126
  7074  0081                     ttemp1	set	129
  7075  0084                     ttemp2	set	132
  7076  0087                     ttemp3	set	135
  7077  007F                     ttemp4	set	127
  7078  007E                     ltemp	set	126
  7079  007E                     ltemp0	set	126
  7080  0082                     ltemp1	set	130
  7081  0086                     ltemp2	set	134
  7082  0080                     ltemp3	set	128


Data Sizes:
    Strings     19
    Constant    14
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     30      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    Lcd_Text@buffer	PTR unsigned char  size(1) Largest target is 7
		 -> STR_5(CODE[7]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), 
		 -> STR_1(CODE[5]), 

    UART_ReadValidTimeFromGPS_TO@Output	PTR unsigned char  size(1) Largest target is 6
		 -> main@Data(BANK1[6]), 

    UART_ReadFromGPS_TO@Output	PTR unsigned char  size(1) Largest target is 6
		 -> main@Data(BANK1[6]), 


Critical Paths under _main in COMMON

    _WriteLongInt->___lldiv
    _Lcd_WriteChar->___lldiv
    _UART_ReadValidTimeFromGPS_TO->_UART_ReadFromGPS_TO
    _UART_ReadFromGPS_TO->_UART_Read_TO
    _UART_Init->___altoft
    _trunc->___altoft
    ___fttol->___altoft
    ___altoft->___ftpack
    ___ftadd->___altoft
    ___ftmul->___altoft
    ___ftdiv->___altoft
    _ReadRTCAsSec->___lmul
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_Init->_Lcd_Command
    _I2C_Master_Init->___lldiv
    _Lcd_Int->___lwdiv
    ___lwdiv->___wmul
    ___bmul->___lldiv
    _Lcd_Command->_Lcd_Delay5500us
    _Lcd_CharCP->_Lcd_Delay5500us
    _I2C_ReadAtAddress->_I2C_Master_Read

Critical Paths under _main in BANK0

    _WriteLongInt->_Lcd_WriteChar
    _Lcd_WriteChar->___bmul
    _UART_Init->_round
    _round->___ftneg
    _trunc->___fttol
    ___fttol->___ftadd
    ___ftneg->_trunc
    ___ftadd->___ftdiv
    ___ftmul->___altoft
    ___ftdiv->___ftmul
    _DisplayTimeFromRTC->_Lcd_Int
    _Lcd_Int->___bmul

Critical Paths under _main in BANK1

    _main->_UART_Init

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   28075
                                             12 BANK1     18    18      0
                 _DisplayTimeFromRTC
                    _I2C_Master_Init
                        _Lcd_Command
                           _Lcd_Init
                           _Lcd_Text
                      _Lcd_WriteChar
                       _ReadRTCAsSec
                          _UART_Init
       _UART_ReadValidTimeFromGPS_TO
                       _WriteLongInt
 ---------------------------------------------------------------------------------
 (1) _WriteLongInt                                        10     4      6    1874
                                              9 BANK0     10     4      6
                      _Lcd_WriteChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        5     3      2     722
                                              4 BANK0      5     3      2
                         _Lcd_CharCP
                        _Lcd_Command
                             ___bmul (ARG)
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_ReadValidTimeFromGPS_TO                         4     3      1     814
                                              9 COMMON     4     3      1
                _UART_ReadFromGPS_TO
 ---------------------------------------------------------------------------------
 (2) _UART_ReadFromGPS_TO                                  8     7      1     397
                                              1 COMMON     8     7      1
                       _UART_Read_TO
 ---------------------------------------------------------------------------------
 (3) _UART_Read_TO                                         1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           12     8      4   15792
                                              0 BANK1     12     8      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                6     3      3    6140
                                             73 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                                9     6      3    2892
                                             61 BANK0      9     6      3
                           ___altoft
                            ___ftadd (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     314
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     358
                                             47 BANK0     14    10      4
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1951
                                              8 COMMON     6     2      4
                                              0 BANK0      2     2      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     138
                                             70 BANK0      3     0      3
                            ___ftadd (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2945
                                             34 BANK0     13     7      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2139
                                              2 BANK0     16    10      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2093
                                             18 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadRTCAsSec                                        24    20      4    1916
                                              0 BANK0     24    20      4
                  _I2C_ReadAtAddress
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     198
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             5     3      2    1063
                                              4 COMMON     5     3      2
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              4 COMMON     2     2      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     555
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _DisplayTimeFromRTC                                   6     5      1    4651
                                             13 BANK0      6     5      1
                  _I2C_ReadAtAddress
                            _Lcd_Int
 ---------------------------------------------------------------------------------
 (2) _Lcd_Int                                              9     6      3    3354
                                              4 BANK0      9     6      3
                         _Lcd_CharCP
                        _Lcd_Command
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_CharCP                                           2     2      0     176
                                              2 COMMON     2     2      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5500us                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadAtAddress                                    5     4      1     845
                                              6 COMMON     5     4      1
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     340
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2      98
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayTimeFromRTC
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _Lcd_Int
       _Lcd_CharCP
         _Lcd_Delay5500us
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5500us
         _Lcd_Delay5us
       ___awdiv
       ___bmul
         ___lldiv (ARG)
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _I2C_Master_Init
     ___lldiv
   _Lcd_Command
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
   _Lcd_WriteChar
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     ___bmul (ARG)
       ___lldiv (ARG)
     ___lldiv (ARG)
   _ReadRTCAsSec
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___lmul
     ___wmul
   _UART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _round
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _frexp (ARG)
   _UART_ReadValidTimeFromGPS_TO
     _UART_ReadFromGPS_TO
       _UART_Read_TO
   _WriteLongInt
     _Lcd_WriteChar
       _Lcd_CharCP
         _Lcd_Delay5500us
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5500us
         _Lcd_Delay5us
       ___bmul (ARG)
         ___lldiv (ARG)
       ___lldiv (ARG)
     ___bmul
       ___lldiv (ARG)
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1E      20       7       40.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7D      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Aug 25 17:36:39 2016

                       Lcd_Int@tempVal 002B                           ___altoft@exp 0020  
                                    pc 0002                         ___bmul@product 0022  
                          __CFG_CP$OFF 0000                          ___altoft@sign 0021  
            UART_ReadFromGPS_TO@Output 0076                           ___awdiv@sign 0076  
                                   fsr 0004                    ___wmul@multiplicand 0072  
           UART_ReadFromGPS_TO@TimeOut 0071                           ___ftadd@exp1 004E  
                         ___ftadd@exp2 004D                           ___ftadd@sign 004C  
                                  l140 08FD                                    l126 0C3B  
                                  l137 08F3                                    l420 0920  
                                  l195 0EEC                                    l196 0F14  
                                  l612 051D                                    l299 08DF  
                                  l581 0DF0                                    l672 0E9A  
                                  l588 0E05                                    l589 0E0D  
                                  _RA0 0028                                    _RA1 0029  
                                  _RA2 002A                                    _RA3 002B  
                                  _RA4 002C                                    _RC1 0039  
                                  _RA5 002D                                    _RC2 003A  
                                  _PEN 048A                           __CFG_CPD$OFF 0000  
                                  _SEN 0488                                    fsr0 0004  
                                  indf 0000                           __CFG_IESO$ON 0000  
                         __CFG_FOSC$HS 0000                    _UART_ReadFromGPS_TO 0BE4  
                  __end_of_Lcd_Command 1000                          ?_ReadRTCAsSec 0020  
                         __CFG_LVP$OFF 0000                           ___ftdiv@cntr 003C  
                         ___ftdiv@sign 0041                                   l2022 0FA2  
                                 l2032 0FC2                                   l2008 09D3  
                                 l2114 095D                                   l2034 0FD3  
                                 l2122 0918                                   l2202 04A5  
                                 l2050 08F6                                   l2036 0FE4  
                                 l2140 090D                                   l2220 04CE  
                                 l2060 0901                                   l2038 0FED  
                                 l2230 04F4                                   l2080 008E  
                                 l2136 0907                                   l2400 0311  
                                 l2240 0519                                   l2232 04F8  
                                 l2208 04B4                                   l2304 0B5D  
                                 l2320 096D                                   l2082 009F  
                                 l2162 0BA0                                   l2410 0373  
                                 l2226 04E3                                   l2322 0970  
                                 l2084 00A8                                   l2068 005D  
                                 l2180 0BCC                                   l2172 0BA8  
                                 l2156 0B95                                   l2500 040F  
                                 l2244 052F                                   l2228 04EF  
                                 l2316 0967                                   l2078 007D  
                                 l2174 0BB6                                   l2406 033A  
                                 l2422 0A45                                   l2238 050D  
                                 l2318 096A                                   l2326 0976  
                                 l2184 0BD7                                   l2280 0A09  
                                 l2440 0242                                   l2512 0437  
                                 l2504 041F                                   l2248 0541  
                                 l2328 0984                                   l2282 0A17  
                                 l2426 0A5B                                   l2258 0564  
                                 l2370 0C29                                   l2354 0BF8  
                                 l2188 0BDF                                   l2292 0A38  
                                 l2532 0CAC                                   l2460 029D  
                                 l2516 0447                                   l2364 0C15  
                                 l2390 02F7                                   l2542 0CE4  
                                 l2534 0CBC                                   l2446 0258  
                                 l2198 049E                                   l2288 0A2D  
                                 l2392 02FA                                   l1912 0DC9  
                                 l2368 0C24                                   l2394 02FD  
                                 l2546 0CF1                                   l1922 0DF5  
                                 l1914 0DD5                                   l2482 03BA  
                                 l2378 0C2E                                   l2722 0D7F  
                                 l2706 0C42                                   l2388 02F4  
                                 l1924 0DFF                                   l1916 0DDA  
                                 l1908 0DC2                                   l2468 02BC  
                                 l2740 0DA9                                   l2716 0D73  
                                 l2398 0303                                   l2734 0D9B  
                                 l2680 0A81                                   l2488 03D0  
                                 l2728 0D8D                                   l2816 0725  
                                 l2682 0A84                                   l2690 0A9B  
                                 l1954 0AD2                                   l2746 0DB7  
                                 l2834 0792                                   l2684 0A87  
                                 l1956 0AE4                                   l2836 07A2  
                                 l2678 0A7E                                   l1966 0E40  
                                 l2696 0AA1                                   l2688 0A8D  
                                 l1992 0E8F                                   l1984 0E72  
                                 l1994 0E9D                                   l1986 0E82  
                                 l1998 0EAB                                   STR_1 0820  
                                 STR_2 081B                                   STR_3 0825  
                                 STR_4 0825                                   STR_5 0814  
                                 _BRGH 04C2                                   _CREN 00C4  
                                 u3005 0928                                   u2215 0DCE  
                                 u3105 0BC3                                   u3115 0BCD  
                                 u2235 0DE9                                   u2405 0E73  
                                 u2510 0F7D                                   u2255 0DF8  
                                 u2600 0FBF                                   u2505 0F72  
                                 u2345 0AD7                                   u4130 0635  
                                 u3075 0BAB                                   u4131 0636  
                                 u4115 059A                                   u3235 04CF  
                                 u2435 0E91                                   u2540 0F8E  
                                 u2524 0F80                                   u4132 063B  
                                 u3405 0A0C                                   u4133 063C  
                                 u4125 05EE                                   u3325 050E  
                                 u2630 0FD0                                   u4150 068F  
                                 u2535 0F83                                   u3095 0BB7  
                                 u4151 0690                                   u2295 0E14  
                                 u2375 0E47                                   u2800 0049  
                                 u2480 0F6C                                   u4152 0695  
                                 u2625 0FC5                                   u3425 0A18  
                                 u4153 0696                                   u4145 065F  
                                 u3265 04E4                                   u2570 0F9F  
                                 u2554 0F91                                   u4307 08EC  
                                 u2475 0F61                                   u3435 0A24  
                                 u2740 0027                                   u2660 0FE1  
                                 u2565 0F94                                   u3445 0A2E  
                                 u4165 00D9                                   u2830 005A  
                                 u2814 004C                                   u2494 0F6F  
                                 u2735 001C                                   u2655 0FD6  
                                 u4175 0114                                   u3295 04F9  
                                 u2920 009C                                   u2680 0FEA  
                                 u2825 004F                                   u4185 014E  
                                 u3625 0A5D                                   u3705 02AF  
                                 u2770 0038                                   u2754 002A  
                __size_of_WriteLongInt 005D                                   u2915 0091  
                                 u2595 0FB4                                   u4267 0FA4  
                                 u3635 0A65                                   u3715 02BD  
                                 u2940 00A5                                   u2860 007A  
                                 u2765 002D                                   u4277 0FEF  
                                 u3805 0428                                   u2855 006F  
                                 u4287 005F                                   u2960 095A  
                                 u2784 003B                                   u4297 00AA  
                                 u3905 0CBE                                   u2890 008B  
                                 u2795 003E                                   u3915 0CD3  
                                 u3675 026A                                   u3755 03DC  
                                 _RCEN 048B                                   _RCIF 0065  
                                 u2885 0080                                   u3925 0CE5  
                                 u3685 027C                                   u3845 0448  
                                 u3765 03EE                                   u3695 029E  
                                 u3855 0450                                   u2995 0921  
                                 u3795 0420                                   u3885 0CB0  
                                 u3965 09A3                                   _SPEN 00C7  
                                 _RSEN 0489                                   _TRMT 04C1  
                                 _TXEN 04C5                                   _SYNC 04C4  
                    ??_Lcd_Delay5500us 0070                           __CFG_WRT$OFF 0000  
                        __CFG_FCMEN$ON 0000                                   _main 06AB  
                         ___ftpack@arg 0070                           ___ftpack@exp 0073  
                 __end_of_Lcd_Delay5us 000A                                   btemp 007E  
                                 ltemp 007E                                   start 0000  
                                 ttemp 007E                                   wtemp 007E  
                     _ReadRTCAsSec$806 0031                   ?_UART_ReadFromGPS_TO 0071  
                      __end_of_Lcd_Int 03A2                      ___bmul@multiplier 0023  
                        __CFG_MCLRE$ON 0000                           ___ftmul@cntr 0030  
                         ___ftmul@sign 0031                             _Lcd_CharCP 0014  
                         ___fttol@exp1 005C                           ___fttol@lval 0058  
                     ?_I2C_Master_Init 0020                       ?_I2C_Master_Read 0070  
                     ?_I2C_Master_Wait 0070                       ?_I2C_Master_Stop 0070  
                                ?_main 0070                                  _ACKEN 048C  
                                _ACKDT 048D                        __end_of___awdiv 0BE4  
                      __end_of___ftadd 057E                                  _BRG16 0C3B  
                        __CFG_WDTE$OFF 0000                        __end_of___ftdiv 02E2  
                      __end_of___ftneg 0014                                  _ANSEL 0188  
                      __end_of___lldiv 0CFA                        __end_of___ftmul 0475  
                      ___awdiv@divisor 0070                        __end_of___fttol 0EB4  
                      __end_of___lwdiv 0A3D                        ___awdiv@counter 0075  
                                _RCREG 001A                                  _SPBRG 0099  
                                _TRISA 0085                                  _TRISB 0086  
                                _TXREG 0019                           _WriteLongInt 0C3F  
                  ___lmul@multiplicand 0074                         ??_ReadRTCAsSec 0024  
                   __size_of_UART_Init 00B7                                  _frexp 09C7  
                                _errno 00BE                          ___ftpack@sign 0074  
                                _round 0CFA                                  main@i 00BC  
                                _trunc 0B41                         __CFG_BOREN$OFF 0000  
                                pclath 000A                                  ltemp0 007E  
                                ltemp1 0082                                  ltemp2 0086  
                                ltemp3 0080                                  ttemp0 007E  
                                ttemp1 0081                                  ttemp2 0084  
                                ttemp3 0087                                  ttemp4 007F  
                                status 0003                                  wtemp0 007E  
                                wtemp1 0080                                  wtemp2 0082  
                                wtemp3 0084                                  wtemp4 0086  
                                wtemp5 0088                                  wtemp6 007F  
                ??_UART_ReadFromGPS_TO 0072                       __end_of_Lcd_Init 0F59  
                     __end_of_Lcd_Text 0ABC                        __initialization 07FA  
                         __end_of_main 07FA                            _Lcd_Command 0F59  
                      ReadRTCAsSec@Out 0033                                 ??_main 00AC  
                        ___fttol@sign1 0057                         main@TempVar000 00BD  
                    ?_I2C_Master_Start 0070                      ?_I2C_Master_Write 0070  
                   ??_I2C_Master_Start 0070                     ??_I2C_Master_Write 0072  
                               ?_frexp 0070                       __end_of___altoft 0AFC  
                     ___awdiv@dividend 0072                       __end_of___ftpack 0E26  
                               ?_round 0069                                 _ANSELH 0189  
                               ?_trunc 005D                      _I2C_ReadAtAddress 0AFC  
                            ??_Lcd_Int 0027                                 _SPBRGH 009A  
                       Lcd_Text@buffer 0075                     ?_I2C_ReadAtAddress 0076  
                               _SSPADD 0093                                 _TRISC3 043B  
                               _TRISC4 043C                                 _SSPCON 0014  
                               _SSPBUF 0013                       WriteLongInt@size 002E  
                       __CFG_PWRTE$OFF 0000                    ??_I2C_ReadAtAddress 0077  
                    __end_of_UART_Init 022A                                 ___bmul 0903  
                          ?_Lcd_CharCP 0070                                 ___lmul 0A3D  
                               ___wmul 0916                              ??___awdiv 0074  
                            ??___ftadd 0048                              ??___ftdiv 0038  
                            ??___ftneg 007E                              ??___lldiv 0078  
                            ??___ftmul 0028                              ??___fttol 0053  
                            ??___lwdiv 007A                       ___awdiv@quotient 0077  
                __end_of_Lcd_WriteChar 0991                  ___ftmul@f3_as_product 002D  
            __end_of_I2C_ReadAtAddress 0B41                                 round@f 006C  
                               round@x 0069                                 trunc@i 0061  
                __size_of_Lcd_Delay5us 0007                                 trunc@x 005D  
          __size_of_DisplayTimeFromRTC 00B3                     Lcd_Command@command 0073  
              __end_of__initialization 07FC                             ___altoft@c 0078  
                           ___ftadd@f1 0042                             ___ftadd@f2 0045  
 __end_ofUART_ReadFromGPS_TO@StartCode 0814           UART_ReadFromGPS_TO@StartCode 080D  
                           ___ftdiv@f1 0035                             ___ftdiv@f2 0032  
                           ___ftdiv@f3 003D                             ___ftneg@f1 0066  
                  ___bmul@multiplicand 0020                             ___ftmul@f1 0022  
                           ___ftmul@f2 0025                             ___fttol@f1 004F  
                       __pcstackCOMMON 0070                   __end_of_ReadRTCAsSec 06AB  
                        __end_of_frexp 0A01                          __end_of_round 0D5A  
                        __end_of_trunc 0B8B                           _Lcd_Delay5us 0003  
                      _Lcd_Delay5500us 08E8                         Lcd_WriteChar@c 0025  
                       Lcd_WriteChar@x 0024                         Lcd_WriteChar@y 0027  
                            ?_Lcd_Init 0070                              ?_Lcd_Text 0074  
                              ??_frexp 0074                    __size_of_Lcd_CharCP 00AC  
                              ??_round 007E                                ??_trunc 0060  
                           __pbssBANK1 00BE                I2C_ReadAtAddress@IntAdd 0076  
                  UART_Read_TO@TimeOut 0070                             __pmaintext 06AB  
                              ?___bmul 0020                                ?___lmul 0070  
                              ?___wmul 0070                              ?___altoft 0078  
                       ___lmul@product 0079                              ?___ftpack 0070  
                           ??_Lcd_Init 0074             __size_of_I2C_ReadAtAddress 0045  
                           ??_Lcd_Text 0076                                _SSPCON2 0091  
                              _SSPSTAT 0094                             __stringtab 0800  
                        ?_UART_Read_TO 0070                                _Lcd_Int 02E2  
               ReadRTCAsSec@TempVar000 0037                        __size_of___bmul 0013  
                    Lcd_WriteChar@data 0028                                ___awdiv 0B8B  
                      __size_of___lmul 003F                                ___ftadd 0475  
                              ___ftdiv 022A                                ___ftneg 000A  
                              ___lldiv 0C9C                        __size_of___wmul 0021  
                              ___ftmul 03A2                                ___fttol 0E26  
                              ___lwdiv 0A01                __end_of_Lcd_Delay5500us 08F1  
                           ??___altoft 007C                             ??___ftpack 0075  
                         ?_Lcd_Command 0070                                __ptext1 0C3F  
                              __ptext2 0963                                __ptext3 0D5A  
                              __ptext4 0BE4                                __ptext5 08F1  
                              __ptext6 0173                                __ptext7 0CFA  
                              __ptext8 0B41                                __ptext9 09C7  
             __size_of_I2C_Master_Init 0036               __size_of_I2C_Master_Read 002C  
             __size_of_I2C_Master_Wait 0009               __size_of_I2C_Master_Stop 0007  
                 end_of_initialization 07FC                         ??_UART_Read_TO 0070  
          __end_of_UART_ReadFromGPS_TO 0C3F                  __size_of_ReadRTCAsSec 012D  
            __size_of_I2C_Master_Start 0007              __size_of_I2C_Master_Write 0008  
                      ___lldiv@divisor 0070                        ___lldiv@counter 007D  
 __end_of_UART_ReadValidTimeFromGPS_TO 0DBA  __size_of_UART_ReadValidTimeFromGPS_TO 0060  
         _UART_ReadValidTimeFromGPS_TO 0D5A                           ??_Lcd_CharCP 0072  
                     I2C_Master_Init@c 0020                       I2C_Master_Read@a 0070  
                            Lcd_Text@x 0074                              Lcd_Text@y 0077  
                            _UART_Init 0173    UART_ReadValidTimeFromGPS_TO@TimeOut 0079  
                            _TRISAbits 0085                              _TRISCbits 0087  
                         _ReadRTCAsSec 057E                             main@Second 00B8  
                   __end_of_Lcd_CharCP 00C0                            ___ftdiv@exp 0040  
                          ___ftmul@exp 002C          ?_UART_ReadValidTimeFromGPS_TO 0079  
                       __end_of___bmul 0916                         __end_of___lmul 0A7C  
                     ?_Lcd_Delay5500us 0070                         __end_of___wmul 0937  
                           ?_UART_Init 00A0                    start_initialization 07FA  
           __end_of_DisplayTimeFromRTC 0173      __end_ofUART_ReadFromGPS@StartCode 080D  
                    __size_of_Lcd_Init 00A5                      __size_of_Lcd_Text 0040  
                           frexp@value 0070                      ??_I2C_Master_Init 0024  
                    ??_I2C_Master_Read 0072                      ??_I2C_Master_Wait 0070  
                    ??_I2C_Master_Stop 0070                        WriteLongInt@Val 002A  
               __size_of_Lcd_WriteChar 002E                               ??___bmul 0021  
                             ??___lmul 0078                               ??___wmul 0074  
                 __end_of_UART_Read_TO 0903            UART_ReadFromGPS_TO@TempChar 0077  
                    __size_of___altoft 0040                      __size_of___ftpack 006C  
                        ?_WriteLongInt 0029                   __size_of_Lcd_Command 00A7  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                          WriteLongInt@x 0029  
                        WriteLongInt@y 0032                               ?_Lcd_Int 0024  
               I2C_ReadAtAddress@DevID 007A                       _I2C_Master_Start 08C9  
                     _I2C_Master_Write 08D7                       ___lwdiv@dividend 0078  
                             ?___awdiv 0070                               ?___ftadd 0042  
                             ?___ftdiv 0032                               ?___ftneg 0066  
                             ?___lldiv 0070                               ?___ftmul 0022  
                             ?___fttol 004F                               ?___lwdiv 0076  
                          ??_UART_Init 007E                              __pstrings 0800  
                       ??_WriteLongInt 002F         ??_UART_ReadValidTimeFromGPS_TO 007A  
                        _Lcd_WriteChar 0963                          _UART_Init$804 00A4  
                        _UART_Init$805 00A7                   UART_ReadFromGPS_TO@i 0074  
                     ___lwdiv@quotient 007B                         __size_of_frexp 003A  
                           UART_Init@x 00AA                         __size_of_round 0060  
                       __size_of_trunc 004A                         ___wmul@product 0074  
                  DisplayTimeFromRTC@x 002D                    DisplayTimeFromRTC@y 0031  
                             Lcd_Int@x 0024                               Lcd_Int@y 0029  
   UART_ReadValidTimeFromGPS_TO@Result 007B                      UART_Init@baudrate 00A0  
   UART_ReadValidTimeFromGPS_TO@Output 007C                           Lcd_Init@data 0075  
                          __stringbase 0805                         ?_Lcd_WriteChar 0024  
                    ___wmul@multiplier 0070                               _Lcd_Init 0EB4  
                             _Lcd_Text 0A7C                    I2C_Master_Read@temp 0074  
                    ___lmul@multiplier 0070                       __size_of_Lcd_Int 00C0  
                            frexp@eptr 0073                           Lcd_Text@data 0078  
         __size_of_UART_ReadFromGPS_TO 005B                 UART_ReadFromGPS_TO@Pos 0078  
                __size_of_UART_Read_TO 0012                       __size_of___awdiv 0059  
                     __size_of___ftadd 0109                       __size_of___ftdiv 00B8  
                     __size_of___ftneg 000A                       __size_of___lldiv 005E  
                             ___altoft 0ABC                       __size_of___ftmul 00D3  
                     __size_of___fttol 008E                       __size_of___lwdiv 003C  
                             ___ftpack 0DBA                     __end_of__stringtab 0806  
                        ?_Lcd_Delay5us 0070                        _I2C_Master_Init 0991  
                      _I2C_Master_Read 0937                        _I2C_Master_Wait 08DF  
                      _I2C_Master_Stop 08D0                  I2C_ReadAtAddress@data 0079  
                      ___lwdiv@divisor 0076                        ___lwdiv@counter 007D  
                             __ptext10 0E26                               __ptext11 0ABC  
                             __ptext20 0EB4                               __ptext12 000A  
                             __ptext21 0991                               __ptext13 0475  
                             __ptext30 0014                               __ptext22 0C9C  
                             __ptext14 03A2                               __ptext31 0003  
                             __ptext23 00C0                               __ptext15 022A  
                             __ptext32 08E8                               __ptext24 02E2  
                             __ptext16 0DBA                               __ptext33 0AFC  
                             __ptext25 0916                               __ptext17 057E  
                             __ptext34 08D7                               __ptext26 0A01  
                             __ptext18 0A3D                               __ptext35 08D0  
                             __ptext27 0903                               __ptext19 0A7C  
                             __ptext36 08C9                               __ptext28 0B8B  
                             __ptext37 0937                               __ptext29 0F59  
                             __ptext38 08DF                      __CFG_BOR4V$BOR21V 0000  
                          Lcd_CharCP@c 0073                           _UART_Read_TO 08F1  
                           trunc@expon 0064                          __size_of_main 014F  
                 __end_of_WriteLongInt 0C9C                     _DisplayTimeFromRTC 00C0  
            UART_ReadFromGPS@StartCode 0806                            Lcd_Int@data 002A  
                             main@Data 00B2                            Lcd_Int@size 0026  
                  ?_DisplayTimeFromRTC 002D                        ??_Lcd_WriteChar 0026  
                       ??_Lcd_Delay5us 0070               __end_of_I2C_Master_Start 08D0  
             __end_of_I2C_Master_Write 08DF               __size_of_Lcd_Delay5500us 0009  
                 ??_DisplayTimeFromRTC 002E                       ___lldiv@dividend 0074  
         DisplayTimeFromRTC@TempVar000 0032                              stringcode 0800  
                           Lcd_Int@val 0025                __end_of_I2C_Master_Init 09C7  
              __end_of_I2C_Master_Read 0963                __end_of_I2C_Master_Wait 08E8  
              __end_of_I2C_Master_Stop 08D7                          ??_Lcd_Command 0072  
                     ___lldiv@quotient 0079                      I2C_Master_Write@d 0070  
                             stringdir 0800                               stringtab 0800  
