

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Wed Mar 08 21:34:07 2017

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataEEDATA,global,class=EEDATA,space=3,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataEEDATA,global,class=EEDATA,space=3,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text12,local,class=CODE,merge=1,delta=2
    17                           	psect	text15,local,class=CODE,merge=1,delta=2
    18                           	psect	text24,local,class=CODE,merge=1,delta=2
    19                           	psect	text26,local,class=CODE,merge=1,delta=2
    20                           	psect	text28,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x3E,60,_STATE_1
    24                           	dabs	1,0x20,30,_STATE_PERIODS
    25                           	dabs	1,0x7A,6,_STATE_CUMULATIVE_PERIODS
    26                           	dabs	1,0x16B,4,_S
    27                           	dabs	1,0x16F,1,_C_D
    28                           	dabs	1,0x110,60,_STATE_2
    29                           	dabs	1,0x14C,12,_C
    30                           	dabs	1,0x167,4,_AUDIO
    31                           	dabs	1,0x164,3,_STATE_BREAKS
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  0087                     	;# 
    71  0089                     	;# 
    72  008C                     	;# 
    73  008D                     	;# 
    74  008E                     	;# 
    75  008F                     	;# 
    76  0090                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0093                     	;# 
    81  0093                     	;# 
    82  0094                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  0105                     	;# 
    95  0107                     	;# 
    96  0108                     	;# 
    97  0109                     	;# 
    98  010C                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  0185                     	;# 
   104  0187                     	;# 
   105  0188                     	;# 
   106  0189                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  008F                     	;# 
   152  0090                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0105                     	;# 
   171  0107                     	;# 
   172  0108                     	;# 
   173  0109                     	;# 
   174  010C                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  0185                     	;# 
   180  0187                     	;# 
   181  0188                     	;# 
   182  0189                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  0105                     	;# 
   247  0107                     	;# 
   248  0108                     	;# 
   249  0109                     	;# 
   250  010C                     	;# 
   251  010C                     	;# 
   252  010D                     	;# 
   253  010E                     	;# 
   254  010F                     	;# 
   255  0185                     	;# 
   256  0187                     	;# 
   257  0188                     	;# 
   258  0189                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0089                     	;# 
   300  008C                     	;# 
   301  008D                     	;# 
   302  008E                     	;# 
   303  008F                     	;# 
   304  0090                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0093                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0095                     	;# 
   312  0096                     	;# 
   313  0097                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009A                     	;# 
   317  009B                     	;# 
   318  009C                     	;# 
   319  009D                     	;# 
   320  009E                     	;# 
   321  009F                     	;# 
   322  0105                     	;# 
   323  0107                     	;# 
   324  0108                     	;# 
   325  0109                     	;# 
   326  010C                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  010F                     	;# 
   331  0185                     	;# 
   332  0187                     	;# 
   333  0188                     	;# 
   334  0189                     	;# 
   335  018C                     	;# 
   336  018D                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  000E                     	;# 
   351  000E                     	;# 
   352  000F                     	;# 
   353  0010                     	;# 
   354  0011                     	;# 
   355  0012                     	;# 
   356  0013                     	;# 
   357  0014                     	;# 
   358  0015                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  001D                     	;# 
   369  001E                     	;# 
   370  001F                     	;# 
   371  0081                     	;# 
   372  0085                     	;# 
   373  0086                     	;# 
   374  0087                     	;# 
   375  0089                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  008E                     	;# 
   379  008F                     	;# 
   380  0090                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0094                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009A                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  009F                     	;# 
   398  0105                     	;# 
   399  0107                     	;# 
   400  0108                     	;# 
   401  0109                     	;# 
   402  010C                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0185                     	;# 
   408  0187                     	;# 
   409  0188                     	;# 
   410  0189                     	;# 
   411  018C                     	;# 
   412  018D                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0009                     	;# 
   422  000A                     	;# 
   423  000B                     	;# 
   424  000C                     	;# 
   425  000D                     	;# 
   426  000E                     	;# 
   427  000E                     	;# 
   428  000F                     	;# 
   429  0010                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0013                     	;# 
   433  0014                     	;# 
   434  0015                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001B                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  001D                     	;# 
   445  001E                     	;# 
   446  001F                     	;# 
   447  0081                     	;# 
   448  0085                     	;# 
   449  0086                     	;# 
   450  0087                     	;# 
   451  0089                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  008E                     	;# 
   455  008F                     	;# 
   456  0090                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0094                     	;# 
   463  0095                     	;# 
   464  0096                     	;# 
   465  0097                     	;# 
   466  0098                     	;# 
   467  0099                     	;# 
   468  009A                     	;# 
   469  009B                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  009F                     	;# 
   474  0105                     	;# 
   475  0107                     	;# 
   476  0108                     	;# 
   477  0109                     	;# 
   478  010C                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  0185                     	;# 
   484  0187                     	;# 
   485  0188                     	;# 
   486  0189                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000D                     	;# 
   502  000E                     	;# 
   503  000E                     	;# 
   504  000F                     	;# 
   505  0010                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0013                     	;# 
   509  0014                     	;# 
   510  0015                     	;# 
   511  0015                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  001A                     	;# 
   517  001B                     	;# 
   518  001B                     	;# 
   519  001C                     	;# 
   520  001D                     	;# 
   521  001E                     	;# 
   522  001F                     	;# 
   523  0081                     	;# 
   524  0085                     	;# 
   525  0086                     	;# 
   526  0087                     	;# 
   527  0089                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  008F                     	;# 
   532  0090                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0096                     	;# 
   541  0097                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009A                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  009F                     	;# 
   550  0105                     	;# 
   551  0107                     	;# 
   552  0108                     	;# 
   553  0109                     	;# 
   554  010C                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  010F                     	;# 
   559  0185                     	;# 
   560  0187                     	;# 
   561  0188                     	;# 
   562  0189                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565                           
   566                           	psect	idataBANK1
   567  0000                     __pidataBANK1:	
   568                           
   569                           	psect	idataEEDATA
   570  0000                     __pidataEEDATA:	
   571  0000                     _EE_Settings:	
   572                           ;initializer for _EE_Settings
   573                           
   574  0000  0052               	db	82
   575  0001  0020               	db	32
   576  0002  0090               	db	144
   577  0003  0001               	db	1
   578  0004  0000               	db	0
   579  0005  0003               	db	3
   580  0006  0022               	db	34
   581  0007  0090               	db	144
   582  0008  0000               	db	0
   583  0009  0000               	db	0
   584  000A  0006               	db	6
   585  000B  000C               	db	12
   586  000C  0090               	db	144
   587  000D  0000               	db	0
   588  000E  0000               	db	0
   589  000F  0002               	db	2
   590  0010  0004               	db	4
   591  0011  0090               	db	144
   592  0012  0008               	db	8
   593  0013  0000               	db	0
   594  0014  0002               	db	2
   595  0015  0014               	db	20
   596  0016  0090               	db	144
   597  0017  0000               	db	0
   598  0018  0000               	db	0
   599  0019  0015               	db	21
   600  001A  0024               	db	36
   601  001B  0028               	db	40
   602  001C  0000               	db	0
   603  001D  0000               	db	0
   604  001E  0002               	db	2
   605  001F  0024               	db	36
   606  0020  0010               	db	16
   607  0021  0000               	db	0
   608  0022  0020               	db	32
   609  0023  0002               	db	2
   610  0024  0024               	db	36
   611  0025  0050               	db	80
   612  0026  0000               	db	0
   613  0027  0000               	db	0
   614  0028  0000               	db	0
   615  0029  0000               	db	0
   616  002A  0000               	db	0
   617  002B  0000               	db	0
   618  002C  0000               	db	0
   619  002D  0000               	db	0
   620  002E  0000               	db	0
   621  002F  0000               	db	0
   622  0030  0000               	db	0
   623  0031  0000               	db	0
   624  0032  0000               	db	0
   625  0033  0000               	db	0
   626  0034  0000               	db	0
   627  0035  0000               	db	0
   628  0036  0000               	db	0
   629  0037  0000               	db	0
   630  0038  0000               	db	0
   631  0039  0000               	db	0
   632  003A  0000               	db	0
   633  003B  0000               	db	0
   634  003C  0000               	db	0
   635  003D  0000               	db	0
   636  003E  0000               	db	0
   637  003F  0000               	db	0
   638  0040  0000               	db	0
   639  0041  0000               	db	0
   640  0042  0000               	db	0
   641  0043  0000               	db	0
   642  0044  0000               	db	0
   643  0045  0000               	db	0
   644  0046  0000               	db	0
   645  0047  0000               	db	0
   646  0048  0000               	db	0
   647  0049  0000               	db	0
   648  004A  0000               	db	0
   649  004B  0000               	db	0
   650  004C  0000               	db	0
   651  004D  0000               	db	0
   652  004E  0000               	db	0
   653  004F  0000               	db	0
   654  0050  0000               	db	0
   655  0051  0000               	db	0
   656  0052  0000               	db	0
   657  0053  0000               	db	0
   658  0054  0000               	db	0
   659  0055  0000               	db	0
   660  0056  0000               	db	0
   661  0057  0000               	db	0
   662  0058  0000               	db	0
   663  0059  0000               	db	0
   664  005A  0000               	db	0
   665  005B  0000               	db	0
   666  005C  0000               	db	0
   667  005D  0000               	db	0
   668  005E  0000               	db	0
   669  005F  0000               	db	0
   670  0060  0000               	db	0
   671  0061  0000               	db	0
   672  0062  0000               	db	0
   673  0063  0000               	db	0
   674  0064  0000               	db	0
   675  0065  0000               	db	0
   676  0066  0000               	db	0
   677  0067  0000               	db	0
   678  0068  0000               	db	0
   679  0069  0000               	db	0
   680  006A  0000               	db	0
   681  006B  0000               	db	0
   682  006C  0000               	db	0
   683  006D  0000               	db	0
   684  006E  0000               	db	0
   685  006F  0000               	db	0
   686  0070  0000               	db	0
   687  0071  0000               	db	0
   688  0072  0000               	db	0
   689  0073  0000               	db	0
   690  0074  0000               	db	0
   691  0075  0000               	db	0
   692  0076  0000               	db	0
   693  0077  0000               	db	0
   694  0078  0000               	db	0
   695  0079  0000               	db	0
   696  007A  0000               	db	0
   697  007B  0000               	db	0
   698  007C  0000               	db	0
   699  007D  0000               	db	0
   700  007E  0000               	db	0
   701  007F  0000               	db	0
   702  0080  0000               	db	0
   703  0081  0000               	db	0
   704  0082  0000               	db	0
   705  0083  0000               	db	0
   706  0084  0000               	db	0
   707  0085  0000               	db	0
   708  0086  0000               	db	0
   709  0087  0000               	db	0
   710  0088  0000               	db	0
   711  0089  0000               	db	0
   712  008A  0000               	db	0
   713  008B  0000               	db	0
   714  008C  0000               	db	0
   715  008D  0000               	db	0
   716  008E  0000               	db	0
   717  008F  0000               	db	0
   718  0090  0000               	db	0
   719  0091  0000               	db	0
   720  0092  0000               	db	0
   721  0093  0000               	db	0
   722  0094  0000               	db	0
   723  0095  0000               	db	0
   724  0096  0001               	db	1
   725  0097  0051               	db	81
   726  0098  007F               	db	127
   727  0099  0001               	db	1
   728  009A  0051               	db	81
   729  009B  007F               	db	127
   730  009C  0001               	db	1
   731  009D  0051               	db	81
   732  009E  007F               	db	127
   733  009F  00E5               	db	229
   734  00A0  0000               	db	0
   735  00A1  0000               	db	0
   736  00A2  0000               	db	0
   737  00A3  0008               	db	8
   738  00A4  0015               	db	21
   739  00A5  001E               	db	30
   740  00A6  0000               	db	0
   741  000B                     _INTCONbits	set	11
   742  0006                     _PORTB	set	6
   743  0013                     _SSPBUF	set	19
   744  0014                     _SSPCON	set	20
   745  0001                     _TMR0	set	1
   746  00C4                     _CREN	set	196
   747  0039                     _RC1	set	57
   748  00C7                     _SPEN	set	199
   749  0081                     _OPTION_REGbits	set	129
   750  0099                     _SPBRG	set	153
   751  009A                     _SPBRGH	set	154
   752  0093                     _SSPADD	set	147
   753  0091                     _SSPCON2	set	145
   754  0094                     _SSPSTAT	set	148
   755  0085                     _TRISA	set	133
   756  0086                     _TRISB	set	134
   757  0087                     _TRISC	set	135
   758  048D                     _ACKDT	set	1165
   759  048C                     _ACKEN	set	1164
   760  04C2                     _BRGH	set	1218
   761  048A                     _PEN	set	1162
   762  048B                     _RCEN	set	1163
   763  0488                     _SEN	set	1160
   764  04C4                     _SYNC	set	1220
   765  043B                     _TRISC3	set	1083
   766  043C                     _TRISC4	set	1084
   767  04C5                     _TXEN	set	1221
   768  010D                     _EEADR	set	269
   769  010C                     _EEDATA	set	268
   770  0188                     _ANSEL	set	392
   771  0189                     _ANSELH	set	393
   772  018C                     _EECON1	set	396
   773  0C3B                     _BRG16	set	3131
   774  0C60                     _RD	set	3168
   775  0C61                     _WR	set	3169
   776                           
   777                           ; #config settings
   778  0000                     
   779                           	psect	cinit
   780  0011                     start_initialization:	
   781  0011                     __initialization:	
   782                           
   783                           ; Initialize objects allocated to BANK1
   784  0011  1683               	bsf	3,5	;RP0=1, select bank1
   785                           
   786                           ;initializer for _PREV_CYCLE_TYPE
   787  0012  3002               	movlw	2
   788  0013  00EC               	movwf	__pdataBANK1& (0+127)
   789                           
   790                           ; Clear objects allocated to BANK1
   791  0014  01EA               	clrf	__pbssBANK1& (0+127)
   792  0015  01EB               	clrf	(__pbssBANK1+1)& (0+127)
   793  0016                     end_of_initialization:	
   794                           ;End of C runtime variable initialization code
   795                           
   796  0016                     __end_of__initialization:	
   797  0016  0183               	clrf	3
   798  0017  120A  118A  2EF6   	ljmp	_main	;jump to C main() function
   799                           
   800                           	psect	dataEEDATA
   801  0000                     __pdataEEDATA:	
   802                           
   803                           	psect	bssBANK1
   804  00EA                     __pbssBANK1:	
   805  00EA                     _CYCLE_TYPE:	
   806  00EA                     	ds	1
   807  00EB                     _FLAGS:	
   808  00EB                     	ds	1
   809                           
   810                           	psect	dataBANK1
   811  00EC                     __pdataBANK1:	
   812  00EC                     _PREV_CYCLE_TYPE:	
   813  00EC                     	ds	1
   814                           
   815                           	psect	inittext
   816  079B                     init_fetch0:	
   817                           ;	Called with low address in FSR and high address in W
   818                           
   819  079B  087E               	movf	126,w
   820  079C  008A               	movwf	10
   821  079D  087F               	movf	127,w
   822  079E  0082               	movwf	2
   823  079F                     init_ram0:	
   824                           ;Called with:
   825                           ;	high address of idata address in btemp 
   826                           ;	low address of idata address in btemp+1 
   827                           ;	low address of data in FSR
   828                           ;	high address + 1 of data in btemp-1
   829                           
   830  079F  279B  120A  118A   	fcall	init_fetch0
   831  07A2  0080               	movwf	0
   832  07A3  0A84               	incf	4,f
   833  07A4  0804               	movf	4,w
   834  07A5  067D               	xorwf	125,w
   835  07A6  1903               	btfsc	3,2
   836  07A7  3400               	retlw	0
   837  07A8  0AFF               	incf	127,f
   838  07A9  1903               	btfsc	3,2
   839  07AA  0AFE               	incf	126,f
   840  07AB  2F9F               	goto	init_ram0
   841                           
   842                           	psect	cstackBANK3
   843  0190                     __pcstackBANK3:	
   844  0190                     trunc@i:	
   845                           
   846                           ; 3 bytes @ 0x0
   847  0190                     	ds	3
   848  0193                     trunc@expon:	
   849                           
   850                           ; 2 bytes @ 0x3
   851  0193                     	ds	2
   852  0195                     ?___ftsub:	
   853  0195                     ___ftsub@f2:	
   854                           ; 3 bytes @ 0x5
   855                           
   856                           
   857                           ; 3 bytes @ 0x5
   858  0195                     	ds	3
   859  0198                     ___ftsub@f1:	
   860                           
   861                           ; 3 bytes @ 0x8
   862  0198                     	ds	3
   863  019B                     ?_round:	
   864  019B                     round@x:	
   865                           ; 3 bytes @ 0xB
   866                           
   867                           
   868                           ; 3 bytes @ 0xB
   869  019B                     	ds	3
   870  019E                     round@f:	
   871                           
   872                           ; 3 bytes @ 0xE
   873  019E                     	ds	3
   874  01A1                     ?_UART_Init:	
   875  01A1                     UART_Init@baudrate:	
   876                           ; 1 bytes @ 0x11
   877                           
   878                           
   879                           ; 4 bytes @ 0x11
   880  01A1                     	ds	4
   881  01A5                     _UART_Init$1796:	
   882                           
   883                           ; 3 bytes @ 0x15
   884  01A5                     	ds	3
   885  01A8                     _UART_Init$1797:	
   886                           
   887                           ; 3 bytes @ 0x18
   888  01A8                     	ds	3
   889  01AB                     UART_Init@x:	
   890                           
   891                           ; 2 bytes @ 0x1B
   892  01AB                     	ds	2
   893                           
   894                           	psect	cstackBANK1
   895  00A0                     __pcstackBANK1:	
   896  00A0                     ?_ReadVars:	
   897  00A0                     ?_I2C_Master_Wait:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  00A0                     ?_I2C_Master_Start:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  00A0                     ?_I2C_Master_Stop:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  00A0                     ?_GetCumulativePeriodsForStates:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  00A0                     ?_main:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  00A0                     ?_tc_int:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  00A0                     ??_tc_int:	
   916                           ; 1 bytes @ 0x0
   917                           
   918                           
   919                           ; 1 bytes @ 0x0
   920  00A0                     	ds	2
   921  00A2                     ??_eeprom_read:	
   922  00A2                     ??_GetPrevCycle:	
   923                           ; 1 bytes @ 0x2
   924                           
   925  00A2                     ??_I2C_Master_Wait:	
   926                           ; 1 bytes @ 0x2
   927                           
   928  00A2                     ??_I2C_Master_Start:	
   929                           ; 1 bytes @ 0x2
   930                           
   931  00A2                     ??_I2C_Master_Stop:	
   932                           ; 1 bytes @ 0x2
   933                           
   934  00A2                     ?_I2C_Master_Write:	
   935                           ; 1 bytes @ 0x2
   936                           
   937  00A2                     ?___bmul:	
   938                           ; 1 bytes @ 0x2
   939                           
   940  00A2                     ?_I2C_Master_Read:	
   941                           ; 1 bytes @ 0x2
   942                           
   943  00A2                     ?___wmul:	
   944                           ; 2 bytes @ 0x2
   945                           
   946  00A2                     ?___ftpack:	
   947                           ; 2 bytes @ 0x2
   948                           
   949  00A2                     ?_frexp:	
   950                           ; 3 bytes @ 0x2
   951                           
   952  00A2                     ?___lmul:	
   953                           ; 3 bytes @ 0x2
   954                           
   955  00A2                     ?___lldiv:	
   956                           ; 4 bytes @ 0x2
   957                           
   958  00A2                     GetPrevCycle@PrevCycle:	
   959                           ; 4 bytes @ 0x2
   960                           
   961  00A2                     eeprom_read@addr:	
   962                           ; 1 bytes @ 0x2
   963                           
   964  00A2                     ___bmul@multiplicand:	
   965                           ; 1 bytes @ 0x2
   966                           
   967  00A2                     I2C_Master_Write@d:	
   968                           ; 1 bytes @ 0x2
   969                           
   970  00A2                     I2C_Master_Read@a:	
   971                           ; 2 bytes @ 0x2
   972                           
   973  00A2                     ___wmul@multiplier:	
   974                           ; 2 bytes @ 0x2
   975                           
   976  00A2                     ___ftpack@arg:	
   977                           ; 2 bytes @ 0x2
   978                           
   979  00A2                     frexp@value:	
   980                           ; 3 bytes @ 0x2
   981                           
   982  00A2                     ___lmul@multiplier:	
   983                           ; 3 bytes @ 0x2
   984                           
   985  00A2                     ___lldiv@divisor:	
   986                           ; 4 bytes @ 0x2
   987                           
   988                           
   989                           ; 4 bytes @ 0x2
   990  00A2                     	ds	1
   991  00A3                     ??___bmul:	
   992  00A3                     GetPrevCycle@cycle:	
   993                           ; 1 bytes @ 0x3
   994                           
   995  00A3                     ___bmul@product:	
   996                           ; 1 bytes @ 0x3
   997                           
   998                           
   999                           ; 1 bytes @ 0x3
  1000  00A3                     	ds	1
  1001  00A4                     ??_I2C_Master_Write:	
  1002  00A4                     ??_I2C_Master_Read:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005  00A4                     ??_GetCumulativePeriodsForStates:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008  00A4                     ___bmul@multiplier:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011  00A4                     I2C_Master_Read@temp:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014  00A4                     ___wmul@multiplicand:	
  1015                           ; 2 bytes @ 0x4
  1016                           
  1017                           
  1018                           ; 2 bytes @ 0x4
  1019  00A4                     	ds	1
  1020  00A5                     ??_ReadVars:	
  1021  00A5                     ___ftpack@exp:	
  1022                           ; 1 bytes @ 0x5
  1023                           
  1024  00A5                     frexp@eptr:	
  1025                           ; 1 bytes @ 0x5
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x5
  1029  00A5                     	ds	1
  1030  00A6                     ?_I2C_ReadAtAddress:	
  1031  00A6                     ??_frexp:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034  00A6                     ??___wmul:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037  00A6                     I2C_ReadAtAddress@IntAdd:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040  00A6                     ___ftpack@sign:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043  00A6                     ___wmul@product:	
  1044                           ; 1 bytes @ 0x6
  1045                           
  1046  00A6                     ___lmul@multiplicand:	
  1047                           ; 2 bytes @ 0x6
  1048                           
  1049  00A6                     ___lldiv@dividend:	
  1050                           ; 4 bytes @ 0x6
  1051                           
  1052                           
  1053                           ; 4 bytes @ 0x6
  1054  00A6                     	ds	1
  1055  00A7                     ??_I2C_ReadAtAddress:	
  1056  00A7                     ??___ftpack:	
  1057                           ; 1 bytes @ 0x7
  1058                           
  1059  00A7                     I2C_ReadAtAddress@data:	
  1060                           ; 1 bytes @ 0x7
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x7
  1064  00A7                     	ds	1
  1065  00A8                     I2C_ReadAtAddress@DevID:	
  1066  00A8                     GetCumulativePeriodsForStates@j:	
  1067                           ; 1 bytes @ 0x8
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x8
  1071  00A8                     	ds	1
  1072  00A9                     GetCumulativePeriodsForStates@i:	
  1073                           
  1074                           ; 1 bytes @ 0x9
  1075  00A9                     	ds	1
  1076  00AA                     ??___lmul:	
  1077  00AA                     ??___lldiv:	
  1078                           ; 1 bytes @ 0xA
  1079                           
  1080  00AA                     ?___altoft:	
  1081                           ; 1 bytes @ 0xA
  1082                           
  1083  00AA                     ___lmul@product:	
  1084                           ; 3 bytes @ 0xA
  1085                           
  1086  00AA                     ___altoft@c:	
  1087                           ; 4 bytes @ 0xA
  1088                           
  1089  00AA                     ___lldiv@quotient:	
  1090                           ; 4 bytes @ 0xA
  1091                           
  1092                           
  1093                           ; 4 bytes @ 0xA
  1094  00AA                     	ds	4
  1095  00AE                     ??___altoft:	
  1096  00AE                     ?_ReadRTCAsSec:	
  1097                           ; 1 bytes @ 0xE
  1098                           
  1099  00AE                     ___altoft@exp:	
  1100                           ; 4 bytes @ 0xE
  1101                           
  1102  00AE                     ___lldiv@counter:	
  1103                           ; 1 bytes @ 0xE
  1104                           
  1105                           
  1106                           ; 1 bytes @ 0xE
  1107  00AE                     	ds	1
  1108  00AF                     ?_I2C_Master_Init:	
  1109  00AF                     ___altoft@sign:	
  1110                           ; 1 bytes @ 0xF
  1111                           
  1112  00AF                     I2C_Master_Init@c:	
  1113                           ; 1 bytes @ 0xF
  1114                           
  1115                           
  1116                           ; 4 bytes @ 0xF
  1117  00AF                     	ds	1
  1118  00B0                     ?___ftmul:	
  1119  00B0                     ___ftmul@f1:	
  1120                           ; 3 bytes @ 0x10
  1121                           
  1122                           
  1123                           ; 3 bytes @ 0x10
  1124  00B0                     	ds	2
  1125  00B2                     ??_ReadRTCAsSec:	
  1126                           
  1127                           ; 1 bytes @ 0x12
  1128  00B2                     	ds	1
  1129  00B3                     ??_I2C_Master_Init:	
  1130  00B3                     ___ftmul@f2:	
  1131                           ; 1 bytes @ 0x13
  1132                           
  1133                           
  1134                           ; 3 bytes @ 0x13
  1135  00B3                     	ds	1
  1136  00B4                     ReadVars@j:	
  1137                           
  1138                           ; 1 bytes @ 0x14
  1139  00B4                     	ds	1
  1140  00B5                     ReadVars@i:	
  1141                           
  1142                           ; 1 bytes @ 0x15
  1143  00B5                     	ds	1
  1144  00B6                     ??___ftmul:	
  1145                           
  1146                           ; 1 bytes @ 0x16
  1147  00B6                     	ds	3
  1148  00B9                     ___ftmul@exp:	
  1149  00B9                     _ReadRTCAsSec$1794:	
  1150                           ; 1 bytes @ 0x19
  1151                           
  1152                           
  1153                           ; 2 bytes @ 0x19
  1154  00B9                     	ds	1
  1155  00BA                     ___ftmul@f3_as_product:	
  1156                           
  1157                           ; 3 bytes @ 0x1A
  1158  00BA                     	ds	1
  1159  00BB                     ReadRTCAsSec@Out:	
  1160                           
  1161                           ; 4 bytes @ 0x1B
  1162  00BB                     	ds	2
  1163  00BD                     ___ftmul@cntr:	
  1164                           
  1165                           ; 1 bytes @ 0x1D
  1166  00BD                     	ds	1
  1167  00BE                     ___ftmul@sign:	
  1168                           
  1169                           ; 1 bytes @ 0x1E
  1170  00BE                     	ds	1
  1171  00BF                     ?___ftdiv:	
  1172  00BF                     ReadRTCAsSec@TempVar000:	
  1173                           ; 3 bytes @ 0x1F
  1174                           
  1175  00BF                     ___ftdiv@f2:	
  1176                           ; 1 bytes @ 0x1F
  1177                           
  1178                           
  1179                           ; 3 bytes @ 0x1F
  1180  00BF                     	ds	3
  1181  00C2                     ___ftdiv@f1:	
  1182                           
  1183                           ; 3 bytes @ 0x22
  1184  00C2                     	ds	3
  1185  00C5                     ??___ftdiv:	
  1186                           
  1187                           ; 1 bytes @ 0x25
  1188  00C5                     	ds	3
  1189  00C8                     ___ftdiv@cntr:	
  1190                           
  1191                           ; 1 bytes @ 0x28
  1192  00C8                     	ds	1
  1193  00C9                     ___ftdiv@f3:	
  1194                           
  1195                           ; 3 bytes @ 0x29
  1196  00C9                     	ds	3
  1197  00CC                     ___ftdiv@exp:	
  1198                           
  1199                           ; 1 bytes @ 0x2C
  1200  00CC                     	ds	1
  1201  00CD                     ___ftdiv@sign:	
  1202                           
  1203                           ; 1 bytes @ 0x2D
  1204  00CD                     	ds	1
  1205  00CE                     ?___ftadd:	
  1206  00CE                     ___ftadd@f1:	
  1207                           ; 3 bytes @ 0x2E
  1208                           
  1209                           
  1210                           ; 3 bytes @ 0x2E
  1211  00CE                     	ds	3
  1212  00D1                     ___ftadd@f2:	
  1213                           
  1214                           ; 3 bytes @ 0x31
  1215  00D1                     	ds	3
  1216  00D4                     ??___ftadd:	
  1217                           
  1218                           ; 1 bytes @ 0x34
  1219  00D4                     	ds	3
  1220  00D7                     ___ftadd@sign:	
  1221                           
  1222                           ; 1 bytes @ 0x37
  1223  00D7                     	ds	1
  1224  00D8                     ___ftadd@exp2:	
  1225                           
  1226                           ; 1 bytes @ 0x38
  1227  00D8                     	ds	1
  1228  00D9                     ___ftadd@exp1:	
  1229                           
  1230                           ; 1 bytes @ 0x39
  1231  00D9                     	ds	1
  1232  00DA                     ?___fttol:	
  1233  00DA                     ___fttol@f1:	
  1234                           ; 4 bytes @ 0x3A
  1235                           
  1236                           
  1237                           ; 3 bytes @ 0x3A
  1238  00DA                     	ds	4
  1239  00DE                     ??___fttol:	
  1240                           
  1241                           ; 1 bytes @ 0x3E
  1242  00DE                     	ds	3
  1243  00E1                     ___fttol@sign1:	
  1244                           
  1245                           ; 1 bytes @ 0x41
  1246  00E1                     	ds	1
  1247  00E2                     ___fttol@lval:	
  1248                           
  1249                           ; 4 bytes @ 0x42
  1250  00E2                     	ds	4
  1251  00E6                     ___fttol@exp1:	
  1252                           
  1253                           ; 1 bytes @ 0x46
  1254  00E6                     	ds	1
  1255  00E7                     ?_trunc:	
  1256  00E7                     trunc@x:	
  1257                           ; 3 bytes @ 0x47
  1258                           
  1259                           
  1260                           ; 3 bytes @ 0x47
  1261  00E7                     	ds	3
  1262  00EA                     ??_round:	
  1263  00EA                     ??_trunc:	
  1264                           ; 1 bytes @ 0x4A
  1265                           
  1266  00EA                     ??_UART_Init:	
  1267                           ; 1 bytes @ 0x4A
  1268                           
  1269  00EA                     ??_main:	
  1270                           ; 1 bytes @ 0x4A
  1271                           
  1272  00EA                     ??___ftsub:	
  1273                           ; 1 bytes @ 0x4A
  1274                           
  1275                           
  1276                           	psect	cstackCOMMON
  1277  0000                     __pcstackCOMMON:	
  1278                           ; 1 bytes @ 0x4A
  1279                           
  1280  0000                     ?_eeprom_read:	
  1281  0000                     ?_GetPrevCycle:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284                           
  1285                           	psect	maintext
  1286  06F6                     __pmaintext:	
  1287                           ; 1 bytes @ 0x0
  1288 ;;
  1289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1290 ;;
  1291 ;; *************** function _main *****************
  1292 ;; Defined at:
  1293 ;;		line 4 in file "main.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  GPSData         6    0        unsigned char [6]
  1298 ;;  PrevRTCSyncT    4    0        long 
  1299 ;;  TimeSinceThe    4    0        long 
  1300 ;;  SyncC           2    0        short 
  1301 ;;  SyncM           2    0        short 
  1302 ;;  SyncX_2         2    0        short 
  1303 ;;  SyncX_1         2    0        short 
  1304 ;;  SyncY_2         2    0        short 
  1305 ;;  SyncY_1         2    0        short 
  1306 ;;  NumberOfSyst    2    0        unsigned short 
  1307 ;;  LoadRTCAfter    2    0        unsigned short 
  1308 ;;  GPS_On_Time_    2    0        unsigned short 
  1309 ;;  SecError        2    0        short 
  1310 ;;  OutForThePor    2    0        unsigned char [2]
  1311 ;;  StateAudioSp    2    0        unsigned short 
  1312 ;;  StateAudioNo    2    0        unsigned short 
  1313 ;;  State2OnOffC    2    0        unsigned short 
  1314 ;;  l               2    0        unsigned short 
  1315 ;;  k               2    0        unsigned short 
  1316 ;;  ReadyForCalc    1    0        enum E1647
  1317 ;;  AdjustMilliS    1    0        unsigned char 
  1318 ;;  DiffInSecond    1    0        char 
  1319 ;;  StateSecRema    1    0        unsigned char 
  1320 ;;  j               1    0        unsigned char 
  1321 ;;  i               1    0        unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : B00/0
  1328 ;;		On exit  : 200/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:      BANK1   BANK3  BANK2l
  1331 ;;      Params:         0       0       0
  1332 ;;      Locals:         0       0       0
  1333 ;;      Temps:          0       0       0
  1334 ;;      Totals:         0       0       0
  1335 ;;Total ram usage:        0 bytes
  1336 ;; Hardware stack levels required when called:    6
  1337 ;; This function calls:
  1338 ;;		_GetCumulativePeriodsForStates
  1339 ;;		_I2C_Master_Init
  1340 ;;		_ReadRTCAsSec
  1341 ;;		_ReadVars
  1342 ;;		_UART_Init
  1343 ;; This function is called by:
  1344 ;;		Startup code after reset
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _main
  1350  06F6                     _main:	
  1351                           
  1352                           ;main.c: 9: ANSEL = 0x00;
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1356  06F6  1683               	bsf	3,5	;RP0=1, select bank3
  1357  06F7  1703               	bsf	3,6	;RP1=1, select bank3
  1358  06F8  0188               	clrf	8	;volatile
  1359                           
  1360                           ;main.c: 10: ANSELH = 0x00;
  1361  06F9  0189               	clrf	9	;volatile
  1362                           
  1363                           ;main.c: 11: TRISA = 0x00;
  1364  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  1365  06FB  0185               	clrf	5	;volatile
  1366                           
  1367                           ;main.c: 12: TRISB = 0x00;
  1368  06FC  0186               	clrf	6	;volatile
  1369                           
  1370                           ;main.c: 13: TRISC = 0x00;
  1371  06FD  0187               	clrf	7	;volatile
  1372                           
  1373                           ;main.c: 14: RC1 = 0;
  1374  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  1375  06FF  1087               	bcf	7,1	;volatile
  1376                           
  1377                           ;main.c: 15: ReadVars();
  1378  0700  120A  118A  257D  120A  118A  	fcall	_ReadVars
  1379                           
  1380                           ;main.c: 16: STATE_BREAKS[3-1] = 0;
  1381  0705  3000               	movlw	0
  1382  0706  1283               	bcf	3,5	;RP0=0, select bank2
  1383  0707  1703               	bsf	3,6	;RP1=1, select bank2
  1384  0708  00E6               	movwf	102	;volatile
  1385                           
  1386                           ;main.c: 17: GetCumulativePeriodsForStates();
  1387  0709  120A  118A  274B  120A  118A  	fcall	_GetCumulativePeriodsForStates
  1388                           
  1389                           ;main.c: 22: I2C_Master_Init(400000);
  1390  070E  3000               	movlw	0
  1391  070F  00B2               	movwf	(I2C_Master_Init@c+3)^(0+128)
  1392  0710  3006               	movlw	6
  1393  0711  00B1               	movwf	(I2C_Master_Init@c+2)^(0+128)
  1394  0712  301A               	movlw	26
  1395  0713  00B0               	movwf	(I2C_Master_Init@c+1)^(0+128)
  1396  0714  3080               	movlw	128
  1397  0715  00AF               	movwf	I2C_Master_Init@c^(0+128)
  1398  0716  120A  118A  2682  120A  118A  	fcall	_I2C_Master_Init
  1399                           
  1400                           ;main.c: 23: S = ReadRTCAsSec();
  1401  071B  120A  118A  2417  120A  118A  	fcall	_ReadRTCAsSec
  1402  0720  0831               	movf	(?_ReadRTCAsSec+3)^(0+128),w
  1403  0721  1283               	bcf	3,5	;RP0=0, select bank2
  1404  0722  1703               	bsf	3,6	;RP1=1, select bank2
  1405  0723  00EE               	movwf	110	;volatile
  1406  0724  1683               	bsf	3,5	;RP0=1, select bank1
  1407  0725  1303               	bcf	3,6	;RP1=0, select bank1
  1408  0726  0830               	movf	(?_ReadRTCAsSec+2)^(0+128),w
  1409  0727  1283               	bcf	3,5	;RP0=0, select bank2
  1410  0728  1703               	bsf	3,6	;RP1=1, select bank2
  1411  0729  00ED               	movwf	109	;volatile
  1412  072A  1683               	bsf	3,5	;RP0=1, select bank1
  1413  072B  1303               	bcf	3,6	;RP1=0, select bank1
  1414  072C  082F               	movf	(?_ReadRTCAsSec+1)^(0+128),w
  1415  072D  1283               	bcf	3,5	;RP0=0, select bank2
  1416  072E  1703               	bsf	3,6	;RP1=1, select bank2
  1417  072F  00EC               	movwf	108	;volatile
  1418  0730  1683               	bsf	3,5	;RP0=1, select bank1
  1419  0731  1303               	bcf	3,6	;RP1=0, select bank1
  1420  0732  082E               	movf	?_ReadRTCAsSec^(0+128),w
  1421  0733  1283               	bcf	3,5	;RP0=0, select bank2
  1422  0734  1703               	bsf	3,6	;RP1=1, select bank2
  1423  0735  00EB               	movwf	107	;volatile
  1424                           
  1425                           ;main.c: 43: BOOL ReadyForCalcOfSystemSync=0;
  1426  0736  1683               	bsf	3,5	;RP0=1, select bank3
  1427  0737  3025               	movlw	37
  1428  0738  01A4               	clrf	(UART_Init@baudrate+3)^(0+384)
  1429  0739  01A3               	clrf	(UART_Init@baudrate+2)^(0+384)
  1430  073A  00A2               	movwf	(UART_Init@baudrate+1)^(0+384)
  1431  073B  3080               	movlw	128
  1432  073C  00A1               	movwf	UART_Init@baudrate^(0+384)
  1433  073D  120A  118A  201A  120A  118A  	fcall	_UART_Init
  1434                           
  1435                           ;main.c: 44: char GPSData[6];
  1436                           ;main.c: 46: INTCONbits.T0IE = 1;
  1437  0742  168B               	bsf	11,5	;volatile
  1438                           
  1439                           ;main.c: 47: OPTION_REGbits.INTEDG = 0;
  1440  0743  1301               	bcf	1,6	;volatile
  1441                           
  1442                           ;main.c: 48: INTCONbits.INTE = 1;
  1443  0744  160B               	bsf	11,4	;volatile
  1444                           
  1445                           ;main.c: 49: INTCONbits. GIE = 1;
  1446  0745  178B               	bsf	11,7	;volatile
  1447                           
  1448                           ;main.c: 50: OPTION_REGbits.PS = 0x01;
  1449  0746  0801               	movf	1,w	;volatile
  1450  0747  39F8               	andlw	-8
  1451  0748  3801               	iorlw	1
  1452  0749  0081               	movwf	1	;volatile
  1453  074A                     l606:	
  1454                           ;main.c: 51: while (1) {
  1455                           
  1456  074A  2F4A               	goto	l606
  1457  074B                     __end_of_main:	
  1458                           
  1459                           	psect	text1
  1460  001A                     __ptext1:	
  1461 ;; *************** function _UART_Init *****************
  1462 ;; Defined at:
  1463 ;;		line 3 in file "libs/gsk_usart.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  baudrate        4   17[BANK3 ] const long 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  x               2   27[BANK3 ] unsigned int 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      unsigned char 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 300/B00
  1474 ;;		On exit  : 300/100
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:      BANK1   BANK3  BANK2l
  1477 ;;      Params:         0       4       0
  1478 ;;      Locals:         0       8       0
  1479 ;;      Temps:          0       0       0
  1480 ;;      Totals:         0      12       0
  1481 ;;Total ram usage:       12 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    5
  1484 ;; This function calls:
  1485 ;;		___altoft
  1486 ;;		___ftadd
  1487 ;;		___ftdiv
  1488 ;;		___ftmul
  1489 ;;		___fttol
  1490 ;;		_round
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _UART_Init
  1498  001A                     _UART_Init:	
  1499                           
  1500                           ;gsk_usart.c: 4: uint16_t x;
  1501                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1505  001A  3024               	movlw	36
  1506  001B  1303               	bcf	3,6	;RP1=0, select bank1
  1507  001C  00C2               	movwf	___ftdiv@f1^(0+128)
  1508  001D  3074               	movlw	116
  1509  001E  00C3               	movwf	(___ftdiv@f1+1)^(0+128)
  1510  001F  304A               	movlw	74
  1511  0020  00C4               	movwf	(___ftdiv@f1+2)^(0+128)
  1512  0021  1703               	bsf	3,6	;RP1=1, select bank3
  1513  0022  0824               	movf	(UART_Init@baudrate+3)^(0+384),w
  1514  0023  1303               	bcf	3,6	;RP1=0, select bank1
  1515  0024  00AD               	movwf	(___altoft@c+3)^(0+128)
  1516  0025  1703               	bsf	3,6	;RP1=1, select bank3
  1517  0026  0823               	movf	(UART_Init@baudrate+2)^(0+384),w
  1518  0027  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0028  00AC               	movwf	(___altoft@c+2)^(0+128)
  1520  0029  1703               	bsf	3,6	;RP1=1, select bank3
  1521  002A  0822               	movf	(UART_Init@baudrate+1)^(0+384),w
  1522  002B  1303               	bcf	3,6	;RP1=0, select bank1
  1523  002C  00AB               	movwf	(___altoft@c+1)^(0+128)
  1524  002D  1703               	bsf	3,6	;RP1=1, select bank3
  1525  002E  0821               	movf	UART_Init@baudrate^(0+384),w
  1526  002F  1303               	bcf	3,6	;RP1=0, select bank1
  1527  0030  00AA               	movwf	___altoft@c^(0+128)
  1528  0031  21F4  120A  118A   	fcall	___altoft
  1529  0034  082A               	movf	?___altoft^(0+128),w
  1530  0035  00B3               	movwf	___ftmul@f2^(0+128)
  1531  0036  082B               	movf	(?___altoft+1)^(0+128),w
  1532  0037  00B4               	movwf	(___ftmul@f2+1)^(0+128)
  1533  0038  082C               	movf	(?___altoft+2)^(0+128),w
  1534  0039  00B5               	movwf	(___ftmul@f2+2)^(0+128)
  1535  003A  3080               	movlw	128
  1536  003B  01B0               	clrf	___ftmul@f1^(0+128)
  1537  003C  00B1               	movwf	(___ftmul@f1+1)^(0+128)
  1538  003D  3040               	movlw	64
  1539  003E  00B2               	movwf	(___ftmul@f1+2)^(0+128)
  1540  003F  2328  120A  118A   	fcall	___ftmul
  1541  0042  0830               	movf	?___ftmul^(0+128),w
  1542  0043  00BF               	movwf	___ftdiv@f2^(0+128)
  1543  0044  0831               	movf	(?___ftmul+1)^(0+128),w
  1544  0045  00C0               	movwf	(___ftdiv@f2+1)^(0+128)
  1545  0046  0832               	movf	(?___ftmul+2)^(0+128),w
  1546  0047  00C1               	movwf	(___ftdiv@f2+2)^(0+128)
  1547  0048  22C0  120A  118A   	fcall	___ftdiv
  1548  004B  083F               	movf	?___ftdiv^(0+128),w
  1549  004C  1703               	bsf	3,6	;RP1=1, select bank3
  1550  004D  00A5               	movwf	_UART_Init$1796^(0+384)
  1551  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1552  004F  0840               	movf	(?___ftdiv+1)^(0+128),w
  1553  0050  1703               	bsf	3,6	;RP1=1, select bank3
  1554  0051  00A6               	movwf	(_UART_Init$1796+1)^(0+384)
  1555  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1556  0053  0841               	movf	(?___ftdiv+2)^(0+128),w
  1557  0054  1703               	bsf	3,6	;RP1=1, select bank3
  1558  0055  00A7               	movwf	(_UART_Init$1796+2)^(0+384)
  1559                           
  1560                           ;gsk_usart.c: 4: uint16_t x;
  1561                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  1562  0056  0825               	movf	_UART_Init$1796^(0+384),w
  1563  0057  009B               	movwf	round@x^(0+384)
  1564  0058  0826               	movf	(_UART_Init$1796+1)^(0+384),w
  1565  0059  009C               	movwf	(round@x+1)^(0+384)
  1566  005A  0827               	movf	(_UART_Init$1796+2)^(0+384),w
  1567  005B  009D               	movwf	(round@x+2)^(0+384)
  1568  005C  2099  120A  118A   	fcall	_round
  1569  005F  081B               	movf	?_round^(0+384),w
  1570  0060  00A8               	movwf	_UART_Init$1797^(0+384)
  1571  0061  081C               	movf	(?_round+1)^(0+384),w
  1572  0062  00A9               	movwf	(_UART_Init$1797+1)^(0+384)
  1573  0063  081D               	movf	(?_round+2)^(0+384),w
  1574  0064  00AA               	movwf	(_UART_Init$1797+2)^(0+384)
  1575                           
  1576                           ;gsk_usart.c: 4: uint16_t x;
  1577                           ;gsk_usart.c: 5: x = round(4000000/(baudrate*4.0))-1;
  1578  0065  0828               	movf	_UART_Init$1797^(0+384),w
  1579  0066  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0067  00D1               	movwf	___ftadd@f2^(0+128)
  1581  0068  1703               	bsf	3,6	;RP1=1, select bank3
  1582  0069  0829               	movf	(_UART_Init$1797+1)^(0+384),w
  1583  006A  1303               	bcf	3,6	;RP1=0, select bank1
  1584  006B  00D2               	movwf	(___ftadd@f2+1)^(0+128)
  1585  006C  1703               	bsf	3,6	;RP1=1, select bank3
  1586  006D  082A               	movf	(_UART_Init$1797+2)^(0+384),w
  1587  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1588  006F  00D3               	movwf	(___ftadd@f2+2)^(0+128)
  1589  0070  3080               	movlw	128
  1590  0071  01CE               	clrf	___ftadd@f1^(0+128)
  1591  0072  00CF               	movwf	(___ftadd@f1+1)^(0+128)
  1592  0073  30BF               	movlw	191
  1593  0074  00D0               	movwf	(___ftadd@f1+2)^(0+128)
  1594  0075  2134  120A  118A   	fcall	___ftadd
  1595  0078  084E               	movf	?___ftadd^(0+128),w
  1596  0079  00DA               	movwf	___fttol@f1^(0+128)
  1597  007A  084F               	movf	(?___ftadd+1)^(0+128),w
  1598  007B  00DB               	movwf	(___fttol@f1+1)^(0+128)
  1599  007C  0850               	movf	(?___ftadd+2)^(0+128),w
  1600  007D  00DC               	movwf	(___fttol@f1+2)^(0+128)
  1601  007E  2223               	fcall	___fttol
  1602  007F  085B               	movf	(?___fttol^(0+128)+1),w
  1603  0080  1703               	bsf	3,6	;RP1=1, select bank3
  1604  0081  00AC               	movwf	(UART_Init@x+1)^(0+384)
  1605  0082  1303               	bcf	3,6	;RP1=0, select bank1
  1606  0083  085A               	movf	?___fttol^(0+128),w
  1607  0084  1703               	bsf	3,6	;RP1=1, select bank3
  1608  0085  00AB               	movwf	UART_Init@x^(0+384)
  1609                           
  1610                           ;gsk_usart.c: 6: SPBRG = x;
  1611  0086  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0087  0099               	movwf	25	;volatile
  1613                           
  1614                           ;gsk_usart.c: 7: SPBRGH = (x>>8);
  1615  0088  1703               	bsf	3,6	;RP1=1, select bank3
  1616  0089  082C               	movf	(UART_Init@x^(0+384)+1),w
  1617  008A  1303               	bcf	3,6	;RP1=0, select bank1
  1618  008B  009A               	movwf	26	;volatile
  1619                           
  1620                           ;gsk_usart.c: 8: BRGH = 1;
  1621  008C  1518               	bsf	24,2	;volatile
  1622                           
  1623                           ;gsk_usart.c: 9: BRG16 = 1;
  1624  008D  1703               	bsf	3,6	;RP1=1, select bank3
  1625  008E  1587               	bsf	7,3	;volatile
  1626                           
  1627                           ;gsk_usart.c: 10: CREN = 1;
  1628  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1629  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0091  1618               	bsf	24,4	;volatile
  1631                           
  1632                           ;gsk_usart.c: 11: SYNC = 0;
  1633  0092  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0093  1218               	bcf	24,4	;volatile
  1635                           
  1636                           ;gsk_usart.c: 12: SPEN = 1;
  1637  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0095  1798               	bsf	24,7	;volatile
  1639                           
  1640                           ;gsk_usart.c: 15: TXEN = 1;
  1641  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1642  0097  1698               	bsf	24,5	;volatile
  1643  0098  0008               	return
  1644  0099                     __end_of_UART_Init:	
  1645  0099                     __ptext2:	
  1646 ;; *************** function _round *****************
  1647 ;; Defined at:
  1648 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\round.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  x               3   11[BANK3 ] unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  f               3   14[BANK3 ] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  3   11[BANK3 ] unsigned char 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 300/B00
  1659 ;;		On exit  : 300/300
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:      BANK1   BANK3  BANK2l
  1662 ;;      Params:         0       3       0
  1663 ;;      Locals:         0       3       0
  1664 ;;      Temps:          0       0       0
  1665 ;;      Totals:         0       6       0
  1666 ;;Total ram usage:        6 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    4
  1669 ;; This function calls:
  1670 ;;		___ftadd
  1671 ;;		___ftsub
  1672 ;;		_trunc
  1673 ;; This function is called by:
  1674 ;;		_UART_Init
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _round
  1680  0099                     _round:	
  1681                           
  1682                           ;incstack = 0
  1683                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1684  0099  23C0  120A  118A   	fcall	PL2	;call to abstracted procedure
  1685  009C  20F0  120A  118A   	fcall	_trunc
  1686  009F  1303               	bcf	3,6	;RP1=0, select bank1
  1687  00A0  0867               	movf	?_trunc^(0+128),w
  1688  00A1  1703               	bsf	3,6	;RP1=1, select bank3
  1689  00A2  0095               	movwf	___ftsub@f2^(0+384)
  1690  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  1691  00A4  0868               	movf	(?_trunc+1)^(0+128),w
  1692  00A5  1703               	bsf	3,6	;RP1=1, select bank3
  1693  00A6  0096               	movwf	(___ftsub@f2+1)^(0+384)
  1694  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1695  00A8  0869               	movf	(?_trunc+2)^(0+128),w
  1696  00A9  1703               	bsf	3,6	;RP1=1, select bank3
  1697  00AA  0097               	movwf	(___ftsub@f2+2)^(0+384)
  1698  00AB  081B               	movf	round@x^(0+384),w
  1699  00AC  0098               	movwf	___ftsub@f1^(0+384)
  1700  00AD  081C               	movf	(round@x+1)^(0+384),w
  1701  00AE  0099               	movwf	(___ftsub@f1+1)^(0+384)
  1702  00AF  081D               	movf	(round@x+2)^(0+384),w
  1703  00B0  009A               	movwf	(___ftsub@f1+2)^(0+384)
  1704  00B1  2395  120A  118A   	fcall	___ftsub
  1705  00B4  0815               	movf	?___ftsub^(0+384),w
  1706  00B5  009E               	movwf	round@f^(0+384)
  1707  00B6  0816               	movf	(?___ftsub+1)^(0+384),w
  1708  00B7  009F               	movwf	(round@f+1)^(0+384)
  1709  00B8  0817               	movf	(?___ftsub+2)^(0+384),w
  1710  00B9  00A0               	movwf	(round@f+2)^(0+384)
  1711  00BA  081E               	movf	round@f^(0+384),w
  1712  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1713  00BC  00CE               	movwf	___ftadd@f1^(0+128)
  1714  00BD  1703               	bsf	3,6	;RP1=1, select bank3
  1715  00BE  081F               	movf	(round@f+1)^(0+384),w
  1716  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  1717  00C0  00CF               	movwf	(___ftadd@f1+1)^(0+128)
  1718  00C1  1703               	bsf	3,6	;RP1=1, select bank3
  1719  00C2  0820               	movf	(round@f+2)^(0+384),w
  1720  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  1721  00C4  00D0               	movwf	(___ftadd@f1+2)^(0+128)
  1722  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1723  00C6  081B               	movf	round@x^(0+384),w
  1724  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1725  00C8  00D1               	movwf	___ftadd@f2^(0+128)
  1726  00C9  1703               	bsf	3,6	;RP1=1, select bank3
  1727  00CA  081C               	movf	(round@x+1)^(0+384),w
  1728  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1729  00CC  00D2               	movwf	(___ftadd@f2+1)^(0+128)
  1730  00CD  1703               	bsf	3,6	;RP1=1, select bank3
  1731  00CE  081D               	movf	(round@x+2)^(0+384),w
  1732  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  1733  00D0  00D3               	movwf	(___ftadd@f2+2)^(0+128)
  1734  00D1  2134  120A  118A   	fcall	___ftadd
  1735  00D4  084E               	movf	?___ftadd^(0+128),w
  1736  00D5  1703               	bsf	3,6	;RP1=1, select bank3
  1737  00D6  009B               	movwf	round@x^(0+384)
  1738  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  1739  00D8  084F               	movf	(?___ftadd+1)^(0+128),w
  1740  00D9  1703               	bsf	3,6	;RP1=1, select bank3
  1741  00DA  009C               	movwf	(round@x+1)^(0+384)
  1742  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1743  00DC  0850               	movf	(?___ftadd+2)^(0+128),w
  1744  00DD  1703               	bsf	3,6	;RP1=1, select bank3
  1745  00DE  009D               	movwf	(round@x+2)^(0+384)
  1746  00DF  23C0  120A  118A   	fcall	PL2	;call to abstracted procedure
  1747  00E2  20F0               	fcall	_trunc
  1748  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1749  00E4  0867               	movf	?_trunc^(0+128),w
  1750  00E5  1703               	bsf	3,6	;RP1=1, select bank3
  1751  00E6  009B               	movwf	?_round^(0+384)
  1752  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1753  00E8  0868               	movf	(?_trunc+1)^(0+128),w
  1754  00E9  1703               	bsf	3,6	;RP1=1, select bank3
  1755  00EA  009C               	movwf	(?_round+1)^(0+384)
  1756  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1757  00EC  0869               	movf	(?_trunc+2)^(0+128),w
  1758  00ED  1703               	bsf	3,6	;RP1=1, select bank3
  1759  00EE  009D               	movwf	(?_round+2)^(0+384)
  1760  00EF  0008               	return
  1761  00F0                     __end_of_round:	
  1762  00F0                     __ptext3:	
  1763 ;; *************** function _trunc *****************
  1764 ;; Defined at:
  1765 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\trunc.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  x               3   71[BANK1 ] unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  i               3    0[BANK3 ] unsigned char 
  1770 ;;  expon           2    3[BANK3 ] int 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  3   71[BANK1 ] int 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 300/900
  1777 ;;		On exit  : 100/100
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:      BANK1   BANK3  BANK2l
  1780 ;;      Params:         3       0       0
  1781 ;;      Locals:         0       5       0
  1782 ;;      Temps:          0       0       0
  1783 ;;      Totals:         3       5       0
  1784 ;;Total ram usage:        8 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    3
  1787 ;; This function calls:
  1788 ;;		___altoft
  1789 ;;		___fttol
  1790 ;;		_frexp
  1791 ;; This function is called by:
  1792 ;;		_round
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _trunc
  1798  00F0                     _trunc:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1802  00F0  0867               	movf	trunc@x^(0+128),w
  1803  00F1  00A2               	movwf	frexp@value^(0+128)
  1804  00F2  0868               	movf	(trunc@x+1)^(0+128),w
  1805  00F3  00A3               	movwf	(frexp@value+1)^(0+128)
  1806  00F4  0869               	movf	(trunc@x+2)^(0+128),w
  1807  00F5  00A4               	movwf	(frexp@value+2)^(0+128)
  1808  00F6  3093               	movlw	(low (trunc@expon| (0+256)))& (0+255)
  1809  00F7  00A5               	movwf	frexp@eptr^(0+128)
  1810  00F8  23DE  120A  118A   	fcall	_frexp
  1811  00FB  1703               	bsf	3,6	;RP1=1, select bank3
  1812  00FC  1F94               	btfss	(trunc@expon+1)^(0+384),7
  1813  00FD  2903               	goto	l1922
  1814  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  1815  00FF  01E7               	clrf	?_trunc^(0+128)
  1816  0100  01E8               	clrf	(?_trunc+1)^(0+128)
  1817  0101  01E9               	clrf	(?_trunc+2)^(0+128)
  1818  0102  0008               	return
  1819  0103                     l1922:	
  1820  0103  3000               	movlw	0
  1821  0104  0214               	subwf	(trunc@expon+1)^(0+384),w
  1822  0105  3015               	movlw	21
  1823  0106  1903               	skipnz
  1824  0107  0213               	subwf	trunc@expon^(0+384),w
  1825  0108  1803               	btfsc	3,0
  1826  0109  0008               	return
  1827  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1828  010B  0867               	movf	trunc@x^(0+128),w
  1829  010C  00DA               	movwf	___fttol@f1^(0+128)
  1830  010D  0868               	movf	(trunc@x+1)^(0+128),w
  1831  010E  00DB               	movwf	(___fttol@f1+1)^(0+128)
  1832  010F  0869               	movf	(trunc@x+2)^(0+128),w
  1833  0110  00DC               	movwf	(___fttol@f1+2)^(0+128)
  1834  0111  2223  120A  118A   	fcall	___fttol
  1835  0114  085D               	movf	(?___fttol+3)^(0+128),w
  1836  0115  00AD               	movwf	(___altoft@c+3)^(0+128)
  1837  0116  085C               	movf	(?___fttol+2)^(0+128),w
  1838  0117  00AC               	movwf	(___altoft@c+2)^(0+128)
  1839  0118  085B               	movf	(?___fttol+1)^(0+128),w
  1840  0119  00AB               	movwf	(___altoft@c+1)^(0+128)
  1841  011A  085A               	movf	?___fttol^(0+128),w
  1842  011B  00AA               	movwf	___altoft@c^(0+128)
  1843  011C  21F4               	fcall	___altoft
  1844  011D  082A               	movf	?___altoft^(0+128),w
  1845  011E  1703               	bsf	3,6	;RP1=1, select bank3
  1846  011F  0090               	movwf	trunc@i^(0+384)
  1847  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1848  0121  082B               	movf	(?___altoft+1)^(0+128),w
  1849  0122  1703               	bsf	3,6	;RP1=1, select bank3
  1850  0123  0091               	movwf	(trunc@i+1)^(0+384)
  1851  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0125  082C               	movf	(?___altoft+2)^(0+128),w
  1853  0126  1703               	bsf	3,6	;RP1=1, select bank3
  1854  0127  0092               	movwf	(trunc@i+2)^(0+384)
  1855  0128  0810               	movf	trunc@i^(0+384),w
  1856  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1857  012A  00E7               	movwf	?_trunc^(0+128)
  1858  012B  1703               	bsf	3,6	;RP1=1, select bank3
  1859  012C  0811               	movf	(trunc@i+1)^(0+384),w
  1860  012D  1303               	bcf	3,6	;RP1=0, select bank1
  1861  012E  00E8               	movwf	(?_trunc+1)^(0+128)
  1862  012F  1703               	bsf	3,6	;RP1=1, select bank3
  1863  0130  0812               	movf	(trunc@i+2)^(0+384),w
  1864  0131  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0132  00E9               	movwf	(?_trunc+2)^(0+128)
  1866  0133  0008               	return
  1867  0134                     __end_of_trunc:	
  1868  0134                     __ptext8:	
  1869 ;; *************** function ___ftadd *****************
  1870 ;; Defined at:
  1871 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  f1              3   46[BANK1 ] float 
  1874 ;;  f2              3   49[BANK1 ] float 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  exp1            1   57[BANK1 ] unsigned char 
  1877 ;;  exp2            1   56[BANK1 ] unsigned char 
  1878 ;;  sign            1   55[BANK1 ] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  3   46[BANK1 ] float 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 300/900
  1885 ;;		On exit  : 300/100
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:      BANK1   BANK3  BANK2l
  1888 ;;      Params:         6       0       0
  1889 ;;      Locals:         3       0       0
  1890 ;;      Temps:          3       0       0
  1891 ;;      Totals:        12       0       0
  1892 ;;Total ram usage:       12 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    2
  1895 ;; This function calls:
  1896 ;;		___ftpack
  1897 ;; This function is called by:
  1898 ;;		_UART_Init
  1899 ;;		___ftsub
  1900 ;;		_round
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function ___ftadd
  1906  0134                     ___ftadd:	
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1910  0134  084E               	movf	___ftadd@f1^(0+128),w
  1911  0135  00D4               	movwf	??___ftadd^(0+128)
  1912  0136  084F               	movf	(___ftadd@f1+1)^(0+128),w
  1913  0137  00D5               	movwf	(??___ftadd^(0+128)+1)
  1914  0138  0850               	movf	(___ftadd@f1+2)^(0+128),w
  1915  0139  00D6               	movwf	(??___ftadd^(0+128)+2)
  1916  013A  1003               	clrc
  1917  013B  0D55               	rlf	(??___ftadd^(0+128)+1),w
  1918  013C  0D56               	rlf	(??___ftadd^(0+128)+2),w
  1919  013D  00D9               	movwf	___ftadd@exp1^(0+128)
  1920  013E  0851               	movf	___ftadd@f2^(0+128),w
  1921  013F  00D4               	movwf	??___ftadd^(0+128)
  1922  0140  0852               	movf	(___ftadd@f2+1)^(0+128),w
  1923  0141  00D5               	movwf	(??___ftadd^(0+128)+1)
  1924  0142  0853               	movf	(___ftadd@f2+2)^(0+128),w
  1925  0143  00D6               	movwf	(??___ftadd^(0+128)+2)
  1926  0144  1003               	clrc
  1927  0145  0D55               	rlf	(??___ftadd^(0+128)+1),w
  1928  0146  0D56               	rlf	(??___ftadd^(0+128)+2),w
  1929  0147  00D8               	movwf	___ftadd@exp2^(0+128)
  1930  0148  0859               	movf	___ftadd@exp1^(0+128),w
  1931  0149  1903               	btfsc	3,2
  1932  014A  2957               	goto	l1754
  1933  014B  0858               	movf	___ftadd@exp2^(0+128),w
  1934  014C  0259               	subwf	___ftadd@exp1^(0+128),w
  1935  014D  0858               	movf	___ftadd@exp2^(0+128),w
  1936  014E  1803               	skipnc
  1937  014F  295F               	goto	L1
  1938  0150  00D4               	movwf	??___ftadd^(0+128)
  1939  0151  0859               	movf	___ftadd@exp1^(0+128),w
  1940  0152  02D4               	subwf	??___ftadd^(0+128),f
  1941  0153  3019               	movlw	25
  1942  0154  0254               	subwf	??___ftadd^(0+128),w
  1943  0155  1C03               	skipc
  1944  0156  295E               	goto	l1758
  1945  0157                     l1754:	
  1946  0157  0851               	movf	___ftadd@f2^(0+128),w
  1947  0158  00CE               	movwf	?___ftadd^(0+128)
  1948  0159  0852               	movf	(___ftadd@f2+1)^(0+128),w
  1949  015A  00CF               	movwf	(?___ftadd+1)^(0+128)
  1950  015B  0853               	movf	(___ftadd@f2+2)^(0+128),w
  1951  015C  00D0               	movwf	(?___ftadd+2)^(0+128)
  1952  015D  0008               	return
  1953  015E                     l1758:	
  1954  015E  0858               	movf	___ftadd@exp2^(0+128),w
  1955  015F                     L1:	
  1956  015F  1903               	btfsc	3,2
  1957  0160  0008               	return
  1958  0161  0859               	movf	___ftadd@exp1^(0+128),w
  1959  0162  0258               	subwf	___ftadd@exp2^(0+128),w
  1960  0163  1803               	skipnc
  1961  0164  296D               	goto	l1764
  1962  0165  0859               	movf	___ftadd@exp1^(0+128),w
  1963  0166  00D4               	movwf	??___ftadd^(0+128)
  1964  0167  0858               	movf	___ftadd@exp2^(0+128),w
  1965  0168  02D4               	subwf	??___ftadd^(0+128),f
  1966  0169  3019               	movlw	25
  1967  016A  0254               	subwf	??___ftadd^(0+128),w
  1968  016B  1803               	btfsc	3,0
  1969  016C  0008               	return
  1970  016D                     l1764:	
  1971  016D  3006               	movlw	6
  1972  016E  00D7               	movwf	___ftadd@sign^(0+128)
  1973  016F  1BD0               	btfsc	(___ftadd@f1+2)^(0+128),7
  1974  0170  17D7               	bsf	___ftadd@sign^(0+128),7
  1975  0171  1BD3               	btfsc	(___ftadd@f2+2)^(0+128),7
  1976  0172  1757               	bsf	___ftadd@sign^(0+128),6
  1977  0173  17CF               	bsf	(___ftadd@f1^(0+128)+1),7
  1978  0174  01D0               	clrf	(___ftadd@f1+2)^(0+128)
  1979  0175  17D2               	bsf	(___ftadd@f2^(0+128)+1),7
  1980  0176  01D3               	clrf	(___ftadd@f2+2)^(0+128)
  1981  0177  0858               	movf	___ftadd@exp2^(0+128),w
  1982  0178  0259               	subwf	___ftadd@exp1^(0+128),w
  1983  0179  1803               	skipnc
  1984  017A  2994               	goto	l1786
  1985  017B                     l1776:	
  1986  017B  1003               	clrc
  1987  017C  0DD1               	rlf	___ftadd@f2^(0+128),f
  1988  017D  0DD2               	rlf	(___ftadd@f2+1)^(0+128),f
  1989  017E  0DD3               	rlf	(___ftadd@f2+2)^(0+128),f
  1990  017F  03D8               	decf	___ftadd@exp2^(0+128),f
  1991  0180  0858               	movf	___ftadd@exp2^(0+128),w
  1992  0181  0659               	xorwf	___ftadd@exp1^(0+128),w
  1993  0182  1903               	skipnz
  1994  0183  298F               	goto	l1784
  1995  0184  03D7               	decf	___ftadd@sign^(0+128),f
  1996  0185  0857               	movf	___ftadd@sign^(0+128),w
  1997  0186  3907               	andlw	7
  1998  0187  1903               	btfsc	3,2
  1999  0188  298F               	goto	l1784
  2000  0189  297B               	goto	l1776
  2001  018A                     l1782:	
  2002  018A  1003               	clrc
  2003  018B  0CD0               	rrf	(___ftadd@f1+2)^(0+128),f
  2004  018C  0CCF               	rrf	(___ftadd@f1+1)^(0+128),f
  2005  018D  0CCE               	rrf	___ftadd@f1^(0+128),f
  2006  018E  0AD9               	incf	___ftadd@exp1^(0+128),f
  2007  018F                     l1784:	
  2008  018F  0859               	movf	___ftadd@exp1^(0+128),w
  2009  0190  0658               	xorwf	___ftadd@exp2^(0+128),w
  2010  0191  1903               	btfsc	3,2
  2011  0192  29B0               	goto	l904
  2012  0193  298A               	goto	l1782
  2013  0194                     l1786:	
  2014  0194  0859               	movf	___ftadd@exp1^(0+128),w
  2015  0195  0258               	subwf	___ftadd@exp2^(0+128),w
  2016  0196  1803               	skipnc
  2017  0197  29B0               	goto	l904
  2018  0198                     l1788:	
  2019  0198  1003               	clrc
  2020  0199  0DCE               	rlf	___ftadd@f1^(0+128),f
  2021  019A  0DCF               	rlf	(___ftadd@f1+1)^(0+128),f
  2022  019B  0DD0               	rlf	(___ftadd@f1+2)^(0+128),f
  2023  019C  03D9               	decf	___ftadd@exp1^(0+128),f
  2024  019D  0858               	movf	___ftadd@exp2^(0+128),w
  2025  019E  0659               	xorwf	___ftadd@exp1^(0+128),w
  2026  019F  1903               	skipnz
  2027  01A0  29AC               	goto	l1796
  2028  01A1  03D7               	decf	___ftadd@sign^(0+128),f
  2029  01A2  0857               	movf	___ftadd@sign^(0+128),w
  2030  01A3  3907               	andlw	7
  2031  01A4  1903               	btfsc	3,2
  2032  01A5  29AC               	goto	l1796
  2033  01A6  2998               	goto	l1788
  2034  01A7                     l1794:	
  2035  01A7  1003               	clrc
  2036  01A8  0CD3               	rrf	(___ftadd@f2+2)^(0+128),f
  2037  01A9  0CD2               	rrf	(___ftadd@f2+1)^(0+128),f
  2038  01AA  0CD1               	rrf	___ftadd@f2^(0+128),f
  2039  01AB  0AD8               	incf	___ftadd@exp2^(0+128),f
  2040  01AC                     l1796:	
  2041  01AC  0859               	movf	___ftadd@exp1^(0+128),w
  2042  01AD  0658               	xorwf	___ftadd@exp2^(0+128),w
  2043  01AE  1D03               	skipz
  2044  01AF  29A7               	goto	l1794
  2045  01B0                     l904:	
  2046  01B0  1FD7               	btfss	___ftadd@sign^(0+128),7
  2047  01B1  29BB               	goto	l1802
  2048  01B2  30FF               	movlw	255
  2049  01B3  06CE               	xorwf	___ftadd@f1^(0+128),f
  2050  01B4  06CF               	xorwf	(___ftadd@f1+1)^(0+128),f
  2051  01B5  06D0               	xorwf	(___ftadd@f1+2)^(0+128),f
  2052  01B6  0ACE               	incf	___ftadd@f1^(0+128),f
  2053  01B7  1903               	skipnz
  2054  01B8  0ACF               	incf	(___ftadd@f1+1)^(0+128),f
  2055  01B9  1903               	skipnz
  2056  01BA  0AD0               	incf	(___ftadd@f1+2)^(0+128),f
  2057  01BB                     l1802:	
  2058  01BB  1F57               	btfss	___ftadd@sign^(0+128),6
  2059  01BC  29C6               	goto	l1808
  2060  01BD  30FF               	movlw	255
  2061  01BE  06D1               	xorwf	___ftadd@f2^(0+128),f
  2062  01BF  06D2               	xorwf	(___ftadd@f2+1)^(0+128),f
  2063  01C0  06D3               	xorwf	(___ftadd@f2+2)^(0+128),f
  2064  01C1  0AD1               	incf	___ftadd@f2^(0+128),f
  2065  01C2  1903               	skipnz
  2066  01C3  0AD2               	incf	(___ftadd@f2+1)^(0+128),f
  2067  01C4  1903               	skipnz
  2068  01C5  0AD3               	incf	(___ftadd@f2+2)^(0+128),f
  2069  01C6                     l1808:	
  2070  01C6  01D7               	clrf	___ftadd@sign^(0+128)
  2071  01C7  084E               	movf	___ftadd@f1^(0+128),w
  2072  01C8  07D1               	addwf	___ftadd@f2^(0+128),f
  2073  01C9  084F               	movf	(___ftadd@f1+1)^(0+128),w
  2074  01CA  1103               	clrz
  2075  01CB  1803               	skipnc
  2076  01CC  0A4F               	incf	(___ftadd@f1+1)^(0+128),w
  2077  01CD  1D03               	btfss	3,2
  2078  01CE  07D2               	addwf	(___ftadd@f2+1)^(0+128),f
  2079  01CF  0850               	movf	(___ftadd@f1+2)^(0+128),w
  2080  01D0  1103               	clrz
  2081  01D1  1803               	skipnc
  2082  01D2  0A50               	incf	(___ftadd@f1+2)^(0+128),w
  2083  01D3  1D03               	btfss	3,2
  2084  01D4  07D3               	addwf	(___ftadd@f2+2)^(0+128),f
  2085  01D5  1FD3               	btfss	(___ftadd@f2+2)^(0+128),7
  2086  01D6  29E2               	goto	l1820
  2087  01D7  30FF               	movlw	255
  2088  01D8  06D1               	xorwf	___ftadd@f2^(0+128),f
  2089  01D9  06D2               	xorwf	(___ftadd@f2+1)^(0+128),f
  2090  01DA  06D3               	xorwf	(___ftadd@f2+2)^(0+128),f
  2091  01DB  0AD1               	incf	___ftadd@f2^(0+128),f
  2092  01DC  1903               	skipnz
  2093  01DD  0AD2               	incf	(___ftadd@f2+1)^(0+128),f
  2094  01DE  1903               	skipnz
  2095  01DF  0AD3               	incf	(___ftadd@f2+2)^(0+128),f
  2096  01E0  01D7               	clrf	___ftadd@sign^(0+128)
  2097  01E1  0AD7               	incf	___ftadd@sign^(0+128),f
  2098  01E2                     l1820:	
  2099  01E2  0851               	movf	___ftadd@f2^(0+128),w
  2100  01E3  00A2               	movwf	___ftpack@arg^(0+128)
  2101  01E4  0852               	movf	(___ftadd@f2+1)^(0+128),w
  2102  01E5  00A3               	movwf	(___ftpack@arg+1)^(0+128)
  2103  01E6  0853               	movf	(___ftadd@f2+2)^(0+128),w
  2104  01E7  00A4               	movwf	(___ftpack@arg+2)^(0+128)
  2105  01E8  0859               	movf	___ftadd@exp1^(0+128),w
  2106  01E9  00A5               	movwf	___ftpack@exp^(0+128)
  2107  01EA  0857               	movf	___ftadd@sign^(0+128),w
  2108  01EB  00A6               	movwf	___ftpack@sign^(0+128)
  2109  01EC  227E               	fcall	___ftpack
  2110  01ED  0822               	movf	?___ftpack^(0+128),w
  2111  01EE  00CE               	movwf	?___ftadd^(0+128)
  2112  01EF  0823               	movf	(?___ftpack+1)^(0+128),w
  2113  01F0  00CF               	movwf	(?___ftadd+1)^(0+128)
  2114  01F1  0824               	movf	(?___ftpack+2)^(0+128),w
  2115  01F2  00D0               	movwf	(?___ftadd+2)^(0+128)
  2116  01F3  0008               	return
  2117  01F4                     __end_of___ftadd:	
  2118  01F4                     __ptext6:	
  2119 ;; *************** function ___altoft *****************
  2120 ;; Defined at:
  2121 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  c               4   10[BANK1 ] long 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  sign            1   15[BANK1 ] unsigned char 
  2126 ;;  exp             1   14[BANK1 ] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  3   10[BANK1 ] float 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 300/900
  2133 ;;		On exit  : 300/100
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:      BANK1   BANK3  BANK2l
  2136 ;;      Params:         4       0       0
  2137 ;;      Locals:         2       0       0
  2138 ;;      Temps:          0       0       0
  2139 ;;      Totals:         6       0       0
  2140 ;;Total ram usage:        6 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    2
  2143 ;; This function calls:
  2144 ;;		___ftpack
  2145 ;; This function is called by:
  2146 ;;		_UART_Init
  2147 ;;		_trunc
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function ___altoft
  2153  01F4                     ___altoft:	
  2154  01F4  308E               	movlw	142
  2155                           
  2156                           ;incstack = 0
  2157                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  2158  01F5  01AF               	clrf	___altoft@sign^(0+128)
  2159  01F6  00AE               	movwf	___altoft@exp^(0+128)
  2160  01F7  1FAD               	btfss	(___altoft@c+3)^(0+128),7
  2161  01F8  2A06               	goto	l1742
  2162  01F9  09AA               	comf	___altoft@c^(0+128),f
  2163  01FA  09AB               	comf	(___altoft@c+1)^(0+128),f
  2164  01FB  09AC               	comf	(___altoft@c+2)^(0+128),f
  2165  01FC  09AD               	comf	(___altoft@c+3)^(0+128),f
  2166  01FD  0AAA               	incf	___altoft@c^(0+128),f
  2167  01FE  1903               	skipnz
  2168  01FF  0AAB               	incf	(___altoft@c+1)^(0+128),f
  2169  0200  1903               	skipnz
  2170  0201  0AAC               	incf	(___altoft@c+2)^(0+128),f
  2171  0202  1903               	skipnz
  2172  0203  0AAD               	incf	(___altoft@c+3)^(0+128),f
  2173  0204  01AF               	clrf	___altoft@sign^(0+128)
  2174  0205  0AAF               	incf	___altoft@sign^(0+128),f
  2175  0206                     l1742:	
  2176  0206  30FF               	movlw	255
  2177  0207  052D               	andwf	(___altoft@c+3)^(0+128),w
  2178  0208  1903               	btfsc	3,2
  2179  0209  2A11               	goto	l1744
  2180  020A  1003               	clrc
  2181  020B  0CAD               	rrf	(___altoft@c+3)^(0+128),f
  2182  020C  0CAC               	rrf	(___altoft@c+2)^(0+128),f
  2183  020D  0CAB               	rrf	(___altoft@c+1)^(0+128),f
  2184  020E  0CAA               	rrf	___altoft@c^(0+128),f
  2185  020F  0AAE               	incf	___altoft@exp^(0+128),f
  2186  0210  2A06               	goto	l1742
  2187  0211                     l1744:	
  2188  0211  082A               	movf	___altoft@c^(0+128),w
  2189  0212  00A2               	movwf	___ftpack@arg^(0+128)
  2190  0213  082B               	movf	(___altoft@c+1)^(0+128),w
  2191  0214  00A3               	movwf	(___ftpack@arg+1)^(0+128)
  2192  0215  082C               	movf	(___altoft@c+2)^(0+128),w
  2193  0216  00A4               	movwf	(___ftpack@arg+2)^(0+128)
  2194  0217  082E               	movf	___altoft@exp^(0+128),w
  2195  0218  00A5               	movwf	___ftpack@exp^(0+128)
  2196  0219  082F               	movf	___altoft@sign^(0+128),w
  2197  021A  00A6               	movwf	___ftpack@sign^(0+128)
  2198  021B  227E               	fcall	___ftpack
  2199  021C  0822               	movf	?___ftpack^(0+128),w
  2200  021D  00AA               	movwf	?___altoft^(0+128)
  2201  021E  0823               	movf	(?___ftpack+1)^(0+128),w
  2202  021F  00AB               	movwf	(?___altoft+1)^(0+128)
  2203  0220  0824               	movf	(?___ftpack+2)^(0+128),w
  2204  0221  00AC               	movwf	(?___altoft+2)^(0+128)
  2205  0222  0008               	return
  2206  0223                     __end_of___altoft:	
  2207  0223                     __ptext5:	
  2208 ;; *************** function ___fttol *****************
  2209 ;; Defined at:
  2210 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  f1              3   58[BANK1 ] float 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  lval            4   66[BANK1 ] unsigned long 
  2215 ;;  exp1            1   70[BANK1 ] unsigned char 
  2216 ;;  sign1           1   65[BANK1 ] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  4   58[BANK1 ] long 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0
  2221 ;; Tracked objects:
  2222 ;;		On entry : 300/900
  2223 ;;		On exit  : 300/100
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:      BANK1   BANK3  BANK2l
  2226 ;;      Params:         4       0       0
  2227 ;;      Locals:         6       0       0
  2228 ;;      Temps:          3       0       0
  2229 ;;      Totals:        13       0       0
  2230 ;;Total ram usage:       13 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_UART_Init
  2237 ;;		_trunc
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function ___fttol
  2243  0223                     ___fttol:	
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2247  0223  23D7  120A  118A   	fcall	PL10	;call to abstracted procedure
  2248  0226  1003               	clrc
  2249  0227  0D5F               	rlf	(??___fttol^(0+128)+1),w
  2250  0228  0D60               	rlf	(??___fttol^(0+128)+2),w
  2251  0229  00E6               	movwf	___fttol@exp1^(0+128)
  2252  022A  0866               	movf	___fttol@exp1^(0+128),w
  2253  022B  1D03               	btfss	3,2
  2254  022C  2A32               	goto	l1828
  2255  022D                     l1826:	
  2256  022D  01DA               	clrf	?___fttol^(0+128)
  2257  022E  01DB               	clrf	(?___fttol+1)^(0+128)
  2258  022F  01DC               	clrf	(?___fttol+2)^(0+128)
  2259  0230  01DD               	clrf	(?___fttol+3)^(0+128)
  2260  0231  0008               	return
  2261  0232                     l1828:	
  2262  0232  23D7  120A  118A   	fcall	PL10	;call to abstracted procedure
  2263  0235  3017               	movlw	23
  2264  0236                     u1205:	
  2265  0236  1003               	clrc
  2266  0237  0CE0               	rrf	(??___fttol^(0+128)+2),f
  2267  0238  0CDF               	rrf	(??___fttol^(0+128)+1),f
  2268  0239  0CDE               	rrf	??___fttol^(0+128),f
  2269  023A  3EFF               	addlw	-1
  2270  023B  1D03               	skipz
  2271  023C  2A36               	goto	u1205
  2272  023D  085E               	movf	??___fttol^(0+128),w
  2273  023E  00E1               	movwf	___fttol@sign1^(0+128)
  2274  023F  17DB               	bsf	(___fttol@f1^(0+128)+1),7
  2275  0240  01DC               	clrf	(___fttol@f1+2)^(0+128)
  2276  0241  085A               	movf	___fttol@f1^(0+128),w
  2277  0242  00E2               	movwf	___fttol@lval^(0+128)
  2278  0243  085B               	movf	(___fttol@f1+1)^(0+128),w
  2279  0244  00E3               	movwf	(___fttol@lval^(0+128)+1)
  2280  0245  085C               	movf	(___fttol@f1+2)^(0+128),w
  2281  0246  00E4               	movwf	(___fttol@lval^(0+128)+2)
  2282  0247  308E               	movlw	142
  2283  0248  01E5               	clrf	(___fttol@lval^(0+128)+3)
  2284  0249  02E6               	subwf	___fttol@exp1^(0+128),f
  2285  024A  1FE6               	btfss	___fttol@exp1^(0+128),7
  2286  024B  2A59               	goto	l1848
  2287  024C  0866               	movf	___fttol@exp1^(0+128),w
  2288  024D  3A80               	xorlw	128
  2289  024E  3E8F               	addlw	143
  2290  024F  1C03               	btfss	3,0
  2291  0250  2A2D               	goto	l1826
  2292  0251                     l1844:	
  2293  0251  1003               	clrc
  2294  0252  0CE5               	rrf	(___fttol@lval+3)^(0+128),f
  2295  0253  0CE4               	rrf	(___fttol@lval+2)^(0+128),f
  2296  0254  0CE3               	rrf	(___fttol@lval+1)^(0+128),f
  2297  0255  0CE2               	rrf	___fttol@lval^(0+128),f
  2298  0256  0FE6               	incfsz	___fttol@exp1^(0+128),f
  2299  0257  2A51               	goto	l1844
  2300  0258  2A67               	goto	l1856
  2301  0259                     l1848:	
  2302  0259  3018               	movlw	24
  2303  025A  0266               	subwf	___fttol@exp1^(0+128),w
  2304  025B  1803               	btfsc	3,0
  2305  025C  2A2D               	goto	l1826
  2306  025D                     l1854:	
  2307  025D  0866               	movf	___fttol@exp1^(0+128),w
  2308  025E  1903               	btfsc	3,2
  2309  025F  2A67               	goto	l1856
  2310  0260  1003               	clrc
  2311  0261  0DE2               	rlf	___fttol@lval^(0+128),f
  2312  0262  0DE3               	rlf	(___fttol@lval+1)^(0+128),f
  2313  0263  0DE4               	rlf	(___fttol@lval+2)^(0+128),f
  2314  0264  0DE5               	rlf	(___fttol@lval+3)^(0+128),f
  2315  0265  03E6               	decf	___fttol@exp1^(0+128),f
  2316  0266  2A5D               	goto	l1854
  2317  0267                     l1856:	
  2318  0267  0861               	movf	___fttol@sign1^(0+128),w
  2319  0268  1903               	btfsc	3,2
  2320  0269  2A75               	goto	l1860
  2321  026A  09E2               	comf	___fttol@lval^(0+128),f
  2322  026B  09E3               	comf	(___fttol@lval+1)^(0+128),f
  2323  026C  09E4               	comf	(___fttol@lval+2)^(0+128),f
  2324  026D  09E5               	comf	(___fttol@lval+3)^(0+128),f
  2325  026E  0AE2               	incf	___fttol@lval^(0+128),f
  2326  026F  1903               	skipnz
  2327  0270  0AE3               	incf	(___fttol@lval+1)^(0+128),f
  2328  0271  1903               	skipnz
  2329  0272  0AE4               	incf	(___fttol@lval+2)^(0+128),f
  2330  0273  1903               	skipnz
  2331  0274  0AE5               	incf	(___fttol@lval+3)^(0+128),f
  2332  0275                     l1860:	
  2333  0275  0865               	movf	(___fttol@lval+3)^(0+128),w
  2334  0276  00DD               	movwf	(?___fttol+3)^(0+128)
  2335  0277  0864               	movf	(___fttol@lval+2)^(0+128),w
  2336  0278  00DC               	movwf	(?___fttol+2)^(0+128)
  2337  0279  0863               	movf	(___fttol@lval+1)^(0+128),w
  2338  027A  00DB               	movwf	(?___fttol+1)^(0+128)
  2339  027B  0862               	movf	___fttol@lval^(0+128),w
  2340  027C  00DA               	movwf	?___fttol^(0+128)
  2341  027D  0008               	return
  2342  027E                     __end_of___fttol:	
  2343  027E                     __ptext11:	
  2344 ;; *************** function ___ftpack *****************
  2345 ;; Defined at:
  2346 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  arg             3    2[BANK1 ] unsigned um
  2349 ;;  exp             1    5[BANK1 ] unsigned char 
  2350 ;;  sign            1    6[BANK1 ] unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  3    2[BANK1 ] float 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 300/900
  2359 ;;		On exit  : 300/100
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:      BANK1   BANK3  BANK2l
  2362 ;;      Params:         5       0       0
  2363 ;;      Locals:         0       0       0
  2364 ;;      Temps:          3       0       0
  2365 ;;      Totals:         8       0       0
  2366 ;;Total ram usage:        8 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    1
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		___altoft
  2373 ;;		___ftadd
  2374 ;;		___ftdiv
  2375 ;;		___ftmul
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function ___ftpack
  2381  027E                     ___ftpack:	
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2385  027E  0825               	movf	___ftpack@exp^(0+128),w
  2386  027F  1903               	btfsc	3,2
  2387  0280  2A86               	goto	l868
  2388  0281  0824               	movf	(___ftpack@arg+2)^(0+128),w
  2389  0282  0423               	iorwf	(___ftpack@arg+1)^(0+128),w
  2390  0283  0422               	iorwf	___ftpack@arg^(0+128),w
  2391  0284  1D03               	skipz
  2392  0285  2A8F               	goto	l1710
  2393  0286                     l868:	
  2394  0286  01A2               	clrf	?___ftpack^(0+128)
  2395  0287  01A3               	clrf	(?___ftpack+1)^(0+128)
  2396  0288  01A4               	clrf	(?___ftpack+2)^(0+128)
  2397  0289  0008               	return
  2398  028A                     l1708:	
  2399  028A  0AA5               	incf	___ftpack@exp^(0+128),f
  2400  028B  1003               	clrc
  2401  028C  0CA4               	rrf	(___ftpack@arg+2)^(0+128),f
  2402  028D  0CA3               	rrf	(___ftpack@arg+1)^(0+128),f
  2403  028E  0CA2               	rrf	___ftpack@arg^(0+128),f
  2404  028F                     l1710:	
  2405  028F  30FE               	movlw	254
  2406  0290  0524               	andwf	(___ftpack@arg+2)^(0+128),w
  2407  0291  1903               	btfsc	3,2
  2408  0292  2A9E               	goto	l1714
  2409  0293  2A8A               	goto	l1708
  2410  0294                     l1712:	
  2411  0294  0AA5               	incf	___ftpack@exp^(0+128),f
  2412  0295  0AA2               	incf	___ftpack@arg^(0+128),f
  2413  0296  1903               	skipnz
  2414  0297  0AA3               	incf	(___ftpack@arg+1)^(0+128),f
  2415  0298  1903               	skipnz
  2416  0299  0AA4               	incf	(___ftpack@arg+2)^(0+128),f
  2417  029A  1003               	clrc
  2418  029B  0CA4               	rrf	(___ftpack@arg+2)^(0+128),f
  2419  029C  0CA3               	rrf	(___ftpack@arg+1)^(0+128),f
  2420  029D  0CA2               	rrf	___ftpack@arg^(0+128),f
  2421  029E                     l1714:	
  2422  029E  30FF               	movlw	255
  2423  029F  0524               	andwf	(___ftpack@arg+2)^(0+128),w
  2424  02A0  1903               	btfsc	3,2
  2425  02A1  2AAC               	goto	l1718
  2426  02A2  2A94               	goto	l1712
  2427  02A3                     l1720:	
  2428  02A3  3002               	movlw	2
  2429  02A4  0225               	subwf	___ftpack@exp^(0+128),w
  2430  02A5  1C03               	btfss	3,0
  2431  02A6  2AAE               	goto	l880
  2432  02A7  03A5               	decf	___ftpack@exp^(0+128),f
  2433  02A8  1003               	clrc
  2434  02A9  0DA2               	rlf	___ftpack@arg^(0+128),f
  2435  02AA  0DA3               	rlf	(___ftpack@arg+1)^(0+128),f
  2436  02AB  0DA4               	rlf	(___ftpack@arg+2)^(0+128),f
  2437  02AC                     l1718:	
  2438  02AC  1FA3               	btfss	(___ftpack@arg+1)^(0+128),7
  2439  02AD  2AA3               	goto	l1720
  2440  02AE                     l880:	
  2441  02AE  1C25               	btfss	___ftpack@exp^(0+128),0
  2442  02AF  13A3               	bcf	(___ftpack@arg^(0+128)+1),7
  2443  02B0  1003               	clrc
  2444  02B1  0CA5               	rrf	___ftpack@exp^(0+128),f
  2445  02B2  0825               	movf	___ftpack@exp^(0+128),w
  2446  02B3  00A9               	movwf	(??___ftpack^(0+128)+2)
  2447  02B4  01A8               	clrf	(??___ftpack^(0+128)+1)
  2448  02B5  01A7               	clrf	??___ftpack^(0+128)
  2449  02B6  0827               	movf	??___ftpack^(0+128),w
  2450  02B7  04A2               	iorwf	___ftpack@arg^(0+128),f
  2451  02B8  0828               	movf	(??___ftpack+1)^(0+128),w
  2452  02B9  04A3               	iorwf	(___ftpack@arg+1)^(0+128),f
  2453  02BA  0829               	movf	(??___ftpack+2)^(0+128),w
  2454  02BB  04A4               	iorwf	(___ftpack@arg+2)^(0+128),f
  2455  02BC  0826               	movf	___ftpack@sign^(0+128),w
  2456  02BD  1D03               	btfss	3,2
  2457  02BE  17A4               	bsf	(___ftpack@arg^(0+128)+2),7
  2458  02BF  0008               	return
  2459  02C0                     __end_of___ftpack:	
  2460  02C0                     __ptext10:	
  2461 ;; *************** function ___ftdiv *****************
  2462 ;; Defined at:
  2463 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  f2              3   31[BANK1 ] float 
  2466 ;;  f1              3   34[BANK1 ] float 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  f3              3   41[BANK1 ] float 
  2469 ;;  sign            1   45[BANK1 ] unsigned char 
  2470 ;;  exp             1   44[BANK1 ] unsigned char 
  2471 ;;  cntr            1   40[BANK1 ] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  3   31[BANK1 ] float 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0, pclath, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 300/900
  2478 ;;		On exit  : 300/100
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:      BANK1   BANK3  BANK2l
  2481 ;;      Params:         6       0       0
  2482 ;;      Locals:         6       0       0
  2483 ;;      Temps:          3       0       0
  2484 ;;      Totals:        15       0       0
  2485 ;;Total ram usage:       15 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    2
  2488 ;; This function calls:
  2489 ;;		___ftpack
  2490 ;; This function is called by:
  2491 ;;		_UART_Init
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function ___ftdiv
  2497  02C0                     ___ftdiv:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2501  02C0  0842               	movf	___ftdiv@f1^(0+128),w
  2502  02C1  00C5               	movwf	??___ftdiv^(0+128)
  2503  02C2  0843               	movf	(___ftdiv@f1+1)^(0+128),w
  2504  02C3  00C6               	movwf	(??___ftdiv^(0+128)+1)
  2505  02C4  0844               	movf	(___ftdiv@f1+2)^(0+128),w
  2506  02C5  00C7               	movwf	(??___ftdiv^(0+128)+2)
  2507  02C6  1003               	clrc
  2508  02C7  0D46               	rlf	(??___ftdiv^(0+128)+1),w
  2509  02C8  0D47               	rlf	(??___ftdiv^(0+128)+2),w
  2510  02C9  00CC               	movwf	___ftdiv@exp^(0+128)
  2511  02CA  084C               	movf	___ftdiv@exp^(0+128),w
  2512  02CB  1D03               	btfss	3,2
  2513  02CC  2AD1               	goto	l2004
  2514  02CD  01BF               	clrf	?___ftdiv^(0+128)
  2515  02CE  01C0               	clrf	(?___ftdiv+1)^(0+128)
  2516  02CF  01C1               	clrf	(?___ftdiv+2)^(0+128)
  2517  02D0  0008               	return
  2518  02D1                     l2004:	
  2519  02D1  083F               	movf	___ftdiv@f2^(0+128),w
  2520  02D2  00C5               	movwf	??___ftdiv^(0+128)
  2521  02D3  0840               	movf	(___ftdiv@f2+1)^(0+128),w
  2522  02D4  00C6               	movwf	(??___ftdiv^(0+128)+1)
  2523  02D5  0841               	movf	(___ftdiv@f2+2)^(0+128),w
  2524  02D6  00C7               	movwf	(??___ftdiv^(0+128)+2)
  2525  02D7  1003               	clrc
  2526  02D8  0D46               	rlf	(??___ftdiv^(0+128)+1),w
  2527  02D9  0D47               	rlf	(??___ftdiv^(0+128)+2),w
  2528  02DA  00CD               	movwf	___ftdiv@sign^(0+128)
  2529  02DB  084D               	movf	___ftdiv@sign^(0+128),w
  2530  02DC  1D03               	btfss	3,2
  2531  02DD  2AE2               	goto	l922
  2532  02DE  01BF               	clrf	?___ftdiv^(0+128)
  2533  02DF  01C0               	clrf	(?___ftdiv+1)^(0+128)
  2534  02E0  01C1               	clrf	(?___ftdiv+2)^(0+128)
  2535  02E1  0008               	return
  2536  02E2                     l922:	
  2537  02E2  3089               	movlw	137
  2538  02E3  01C9               	clrf	___ftdiv@f3^(0+128)
  2539  02E4  01CA               	clrf	(___ftdiv@f3+1)^(0+128)
  2540  02E5  01CB               	clrf	(___ftdiv@f3+2)^(0+128)
  2541  02E6  074D               	addwf	___ftdiv@sign^(0+128),w
  2542  02E7  00C5               	movwf	??___ftdiv^(0+128)
  2543  02E8  02CC               	subwf	___ftdiv@exp^(0+128),f
  2544  02E9  0844               	movf	(___ftdiv@f1^(0+128)+2),w
  2545  02EA  00CD               	movwf	___ftdiv@sign^(0+128)
  2546  02EB  0841               	movf	(___ftdiv@f2^(0+128)+2),w
  2547  02EC  06CD               	xorwf	___ftdiv@sign^(0+128),f
  2548  02ED  3080               	movlw	128
  2549  02EE  05CD               	andwf	___ftdiv@sign^(0+128),f
  2550  02EF  3018               	movlw	24
  2551  02F0  17C3               	bsf	(___ftdiv@f1^(0+128)+1),7
  2552  02F1  01C4               	clrf	(___ftdiv@f1+2)^(0+128)
  2553  02F2  17C0               	bsf	(___ftdiv@f2^(0+128)+1),7
  2554  02F3  01C1               	clrf	(___ftdiv@f2+2)^(0+128)
  2555  02F4  00C8               	movwf	___ftdiv@cntr^(0+128)
  2556  02F5                     l2026:	
  2557  02F5  1003               	clrc
  2558  02F6  0DC9               	rlf	___ftdiv@f3^(0+128),f
  2559  02F7  0DCA               	rlf	(___ftdiv@f3+1)^(0+128),f
  2560  02F8  0DCB               	rlf	(___ftdiv@f3+2)^(0+128),f
  2561  02F9  0841               	movf	(___ftdiv@f2+2)^(0+128),w
  2562  02FA  0244               	subwf	(___ftdiv@f1+2)^(0+128),w
  2563  02FB  1D03               	skipz
  2564  02FC  2B03               	goto	u1445
  2565  02FD  0840               	movf	(___ftdiv@f2+1)^(0+128),w
  2566  02FE  0243               	subwf	(___ftdiv@f1+1)^(0+128),w
  2567  02FF  1D03               	skipz
  2568  0300  2B03               	goto	u1445
  2569  0301  083F               	movf	___ftdiv@f2^(0+128),w
  2570  0302  0242               	subwf	___ftdiv@f1^(0+128),w
  2571  0303                     u1445:	
  2572  0303  1C03               	skipc
  2573  0304  2B11               	goto	L2
  2574  0305  083F               	movf	___ftdiv@f2^(0+128),w
  2575  0306  02C2               	subwf	___ftdiv@f1^(0+128),f
  2576  0307  0840               	movf	(___ftdiv@f2+1)^(0+128),w
  2577  0308  1C03               	skipc
  2578  0309  0F40               	incfsz	(___ftdiv@f2+1)^(0+128),w
  2579  030A  02C3               	subwf	(___ftdiv@f1+1)^(0+128),f
  2580  030B  0841               	movf	(___ftdiv@f2+2)^(0+128),w
  2581  030C  1C03               	skipc
  2582  030D  0A41               	incf	(___ftdiv@f2+2)^(0+128),w
  2583  030E  02C4               	subwf	(___ftdiv@f1+2)^(0+128),f
  2584  030F  1449               	bsf	___ftdiv@f3^(0+128),0
  2585  0310  1003               	clrc
  2586  0311                     L2:	
  2587  0311  0DC2               	rlf	___ftdiv@f1^(0+128),f
  2588  0312  0DC3               	rlf	(___ftdiv@f1+1)^(0+128),f
  2589  0313  0DC4               	rlf	(___ftdiv@f1+2)^(0+128),f
  2590  0314  0BC8               	decfsz	___ftdiv@cntr^(0+128),f
  2591  0315  2AF5               	goto	l2026
  2592  0316  0849               	movf	___ftdiv@f3^(0+128),w
  2593  0317  00A2               	movwf	___ftpack@arg^(0+128)
  2594  0318  084A               	movf	(___ftdiv@f3+1)^(0+128),w
  2595  0319  00A3               	movwf	(___ftpack@arg+1)^(0+128)
  2596  031A  084B               	movf	(___ftdiv@f3+2)^(0+128),w
  2597  031B  00A4               	movwf	(___ftpack@arg+2)^(0+128)
  2598  031C  084C               	movf	___ftdiv@exp^(0+128),w
  2599  031D  00A5               	movwf	___ftpack@exp^(0+128)
  2600  031E  084D               	movf	___ftdiv@sign^(0+128),w
  2601  031F  00A6               	movwf	___ftpack@sign^(0+128)
  2602  0320  227E               	fcall	___ftpack
  2603  0321  0822               	movf	?___ftpack^(0+128),w
  2604  0322  00BF               	movwf	?___ftdiv^(0+128)
  2605  0323  0823               	movf	(?___ftpack+1)^(0+128),w
  2606  0324  00C0               	movwf	(?___ftdiv+1)^(0+128)
  2607  0325  0824               	movf	(?___ftpack+2)^(0+128),w
  2608  0326  00C1               	movwf	(?___ftdiv+2)^(0+128)
  2609  0327  0008               	return
  2610  0328                     __end_of___ftdiv:	
  2611  0328                     __ptext9:	
  2612 ;; *************** function ___ftmul *****************
  2613 ;; Defined at:
  2614 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  f1              3   16[BANK1 ] float 
  2617 ;;  f2              3   19[BANK1 ] float 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  f3_as_produc    3   26[BANK1 ] unsigned um
  2620 ;;  sign            1   30[BANK1 ] unsigned char 
  2621 ;;  cntr            1   29[BANK1 ] unsigned char 
  2622 ;;  exp             1   25[BANK1 ] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  3   16[BANK1 ] float 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, pclath, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 300/900
  2629 ;;		On exit  : 300/100
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:      BANK1   BANK3  BANK2l
  2632 ;;      Params:         6       0       0
  2633 ;;      Locals:         6       0       0
  2634 ;;      Temps:          3       0       0
  2635 ;;      Totals:        15       0       0
  2636 ;;Total ram usage:       15 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    2
  2639 ;; This function calls:
  2640 ;;		___ftpack
  2641 ;; This function is called by:
  2642 ;;		_UART_Init
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function ___ftmul
  2648  0328                     ___ftmul:	
  2649                           
  2650                           ;incstack = 0
  2651                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2652  0328  0830               	movf	___ftmul@f1^(0+128),w
  2653  0329  00B6               	movwf	??___ftmul^(0+128)
  2654  032A  0831               	movf	(___ftmul@f1+1)^(0+128),w
  2655  032B  00B7               	movwf	(??___ftmul^(0+128)+1)
  2656  032C  0832               	movf	(___ftmul@f1+2)^(0+128),w
  2657  032D  00B8               	movwf	(??___ftmul^(0+128)+2)
  2658  032E  1003               	clrc
  2659  032F  0D37               	rlf	(??___ftmul^(0+128)+1),w
  2660  0330  0D38               	rlf	(??___ftmul^(0+128)+2),w
  2661  0331  00B9               	movwf	___ftmul@exp^(0+128)
  2662  0332  0839               	movf	___ftmul@exp^(0+128),w
  2663  0333  1D03               	btfss	3,2
  2664  0334  2B39               	goto	l2044
  2665  0335  01B0               	clrf	?___ftmul^(0+128)
  2666  0336  01B1               	clrf	(?___ftmul+1)^(0+128)
  2667  0337  01B2               	clrf	(?___ftmul+2)^(0+128)
  2668  0338  0008               	return
  2669  0339                     l2044:	
  2670  0339  0833               	movf	___ftmul@f2^(0+128),w
  2671  033A  00B6               	movwf	??___ftmul^(0+128)
  2672  033B  0834               	movf	(___ftmul@f2+1)^(0+128),w
  2673  033C  00B7               	movwf	(??___ftmul^(0+128)+1)
  2674  033D  0835               	movf	(___ftmul@f2+2)^(0+128),w
  2675  033E  00B8               	movwf	(??___ftmul^(0+128)+2)
  2676  033F  1003               	clrc
  2677  0340  0D37               	rlf	(??___ftmul^(0+128)+1),w
  2678  0341  0D38               	rlf	(??___ftmul^(0+128)+2),w
  2679  0342  00BE               	movwf	___ftmul@sign^(0+128)
  2680  0343  083E               	movf	___ftmul@sign^(0+128),w
  2681  0344  1D03               	btfss	3,2
  2682  0345  2B4A               	goto	l2048
  2683  0346  01B0               	clrf	?___ftmul^(0+128)
  2684  0347  01B1               	clrf	(?___ftmul+1)^(0+128)
  2685  0348  01B2               	clrf	(?___ftmul+2)^(0+128)
  2686  0349  0008               	return
  2687  034A                     l2048:	
  2688  034A  083E               	movf	___ftmul@sign^(0+128),w
  2689  034B  3E7B               	addlw	123
  2690  034C  07B9               	addwf	___ftmul@exp^(0+128),f
  2691  034D  0832               	movf	(___ftmul@f1^(0+128)+2),w
  2692  034E  00BE               	movwf	___ftmul@sign^(0+128)
  2693  034F  0835               	movf	(___ftmul@f2^(0+128)+2),w
  2694  0350  06BE               	xorwf	___ftmul@sign^(0+128),f
  2695  0351  3080               	movlw	128
  2696  0352  05BE               	andwf	___ftmul@sign^(0+128),f
  2697  0353  3007               	movlw	7
  2698  0354  17B1               	bsf	(___ftmul@f1^(0+128)+1),7
  2699  0355  17B4               	bsf	(___ftmul@f2^(0+128)+1),7
  2700  0356  01B5               	clrf	(___ftmul@f2+2)^(0+128)
  2701  0357  01BA               	clrf	___ftmul@f3_as_product^(0+128)
  2702  0358  01BB               	clrf	(___ftmul@f3_as_product+1)^(0+128)
  2703  0359  01BC               	clrf	(___ftmul@f3_as_product+2)^(0+128)
  2704  035A  00BD               	movwf	___ftmul@cntr^(0+128)
  2705  035B                     l2066:	
  2706  035B  1C30               	btfss	___ftmul@f1^(0+128),0
  2707  035C  2B64               	goto	l2070
  2708  035D  23CC  120A  118A   	fcall	PL6	;call to abstracted procedure
  2709  0360  1803               	skipnc
  2710  0361  0A35               	incf	(___ftmul@f2+2)^(0+128),w
  2711  0362  1D03               	btfss	3,2
  2712  0363  07BC               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  2713  0364                     l2070:	
  2714  0364  1003               	clrc
  2715  0365  0CB2               	rrf	(___ftmul@f1+2)^(0+128),f
  2716  0366  0CB1               	rrf	(___ftmul@f1+1)^(0+128),f
  2717  0367  0CB0               	rrf	___ftmul@f1^(0+128),f
  2718  0368  1003               	clrc
  2719  0369  0DB3               	rlf	___ftmul@f2^(0+128),f
  2720  036A  0DB4               	rlf	(___ftmul@f2+1)^(0+128),f
  2721  036B  0DB5               	rlf	(___ftmul@f2+2)^(0+128),f
  2722  036C  0BBD               	decfsz	___ftmul@cntr^(0+128),f
  2723  036D  2B5B               	goto	l2066
  2724  036E  3009               	movlw	9
  2725  036F  00BD               	movwf	___ftmul@cntr^(0+128)
  2726  0370                     l2078:	
  2727  0370  1C30               	btfss	___ftmul@f1^(0+128),0
  2728  0371  2B79               	goto	l2082
  2729  0372  23CC  120A  118A   	fcall	PL6	;call to abstracted procedure
  2730  0375  1803               	skipnc
  2731  0376  0A35               	incf	(___ftmul@f2+2)^(0+128),w
  2732  0377  1D03               	btfss	3,2
  2733  0378  07BC               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  2734  0379                     l2082:	
  2735  0379  1003               	clrc
  2736  037A  0CB2               	rrf	(___ftmul@f1+2)^(0+128),f
  2737  037B  0CB1               	rrf	(___ftmul@f1+1)^(0+128),f
  2738  037C  0CB0               	rrf	___ftmul@f1^(0+128),f
  2739  037D  1003               	clrc
  2740  037E  0CBC               	rrf	(___ftmul@f3_as_product+2)^(0+128),f
  2741  037F  0CBB               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  2742  0380  0CBA               	rrf	___ftmul@f3_as_product^(0+128),f
  2743  0381  0BBD               	decfsz	___ftmul@cntr^(0+128),f
  2744  0382  2B70               	goto	l2078
  2745  0383  083A               	movf	___ftmul@f3_as_product^(0+128),w
  2746  0384  00A2               	movwf	___ftpack@arg^(0+128)
  2747  0385  083B               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  2748  0386  00A3               	movwf	(___ftpack@arg+1)^(0+128)
  2749  0387  083C               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  2750  0388  00A4               	movwf	(___ftpack@arg+2)^(0+128)
  2751  0389  0839               	movf	___ftmul@exp^(0+128),w
  2752  038A  00A5               	movwf	___ftpack@exp^(0+128)
  2753  038B  083E               	movf	___ftmul@sign^(0+128),w
  2754  038C  00A6               	movwf	___ftpack@sign^(0+128)
  2755  038D  227E               	fcall	___ftpack
  2756  038E  0822               	movf	?___ftpack^(0+128),w
  2757  038F  00B0               	movwf	?___ftmul^(0+128)
  2758  0390  0823               	movf	(?___ftpack+1)^(0+128),w
  2759  0391  00B1               	movwf	(?___ftmul+1)^(0+128)
  2760  0392  0824               	movf	(?___ftpack+2)^(0+128),w
  2761  0393  00B2               	movwf	(?___ftmul+2)^(0+128)
  2762  0394  0008               	return
  2763  0395                     __end_of___ftmul:	
  2764  0395                     __ptext7:	
  2765 ;; *************** function ___ftsub *****************
  2766 ;; Defined at:
  2767 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  f2              3    5[BANK3 ] float 
  2770 ;;  f1              3    8[BANK3 ] float 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  3    5[BANK3 ] float 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, pclath, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 300/B00
  2779 ;;		On exit  : 300/300
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:      BANK1   BANK3  BANK2l
  2782 ;;      Params:         0       6       0
  2783 ;;      Locals:         0       0       0
  2784 ;;      Temps:          0       0       0
  2785 ;;      Totals:         0       6       0
  2786 ;;Total ram usage:        6 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    3
  2789 ;; This function calls:
  2790 ;;		___ftadd
  2791 ;; This function is called by:
  2792 ;;		_round
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function ___ftsub
  2798  0395                     ___ftsub:	
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  2802  0395  0817               	movf	(___ftsub@f2+2)^(0+384),w
  2803  0396  0416               	iorwf	(___ftsub@f2+1)^(0+384),w
  2804  0397  0415               	iorwf	___ftsub@f2^(0+384),w
  2805  0398  1903               	skipnz
  2806  0399  2B9C               	goto	l1912
  2807  039A  3080               	movlw	128
  2808  039B  0697               	xorwf	(___ftsub@f2+2)^(0+384),f
  2809  039C                     l1912:	
  2810  039C  0818               	movf	___ftsub@f1^(0+384),w
  2811  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2812  039E  00CE               	movwf	___ftadd@f1^(0+128)
  2813  039F  1703               	bsf	3,6	;RP1=1, select bank3
  2814  03A0  0819               	movf	(___ftsub@f1+1)^(0+384),w
  2815  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2816  03A2  00CF               	movwf	(___ftadd@f1+1)^(0+128)
  2817  03A3  1703               	bsf	3,6	;RP1=1, select bank3
  2818  03A4  081A               	movf	(___ftsub@f1+2)^(0+384),w
  2819  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2820  03A6  00D0               	movwf	(___ftadd@f1+2)^(0+128)
  2821  03A7  1703               	bsf	3,6	;RP1=1, select bank3
  2822  03A8  0815               	movf	___ftsub@f2^(0+384),w
  2823  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2824  03AA  00D1               	movwf	___ftadd@f2^(0+128)
  2825  03AB  1703               	bsf	3,6	;RP1=1, select bank3
  2826  03AC  0816               	movf	(___ftsub@f2+1)^(0+384),w
  2827  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2828  03AE  00D2               	movwf	(___ftadd@f2+1)^(0+128)
  2829  03AF  1703               	bsf	3,6	;RP1=1, select bank3
  2830  03B0  0817               	movf	(___ftsub@f2+2)^(0+384),w
  2831  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2832  03B2  00D3               	movwf	(___ftadd@f2+2)^(0+128)
  2833  03B3  2134               	fcall	___ftadd
  2834  03B4  084E               	movf	?___ftadd^(0+128),w
  2835  03B5  1703               	bsf	3,6	;RP1=1, select bank3
  2836  03B6  0095               	movwf	?___ftsub^(0+384)
  2837  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2838  03B8  084F               	movf	(?___ftadd+1)^(0+128),w
  2839  03B9  1703               	bsf	3,6	;RP1=1, select bank3
  2840  03BA  0096               	movwf	(?___ftsub+1)^(0+384)
  2841  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2842  03BC  0850               	movf	(?___ftadd+2)^(0+128),w
  2843  03BD  1703               	bsf	3,6	;RP1=1, select bank3
  2844  03BE  0097               	movwf	(?___ftsub+2)^(0+384)
  2845  03BF  0008               	return
  2846  03C0                     __end_of___ftsub:	
  2847  03C0                     PL2:	
  2848  03C0  081B               	movf	round@x^(0+384),w
  2849  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2850  03C2  00E7               	movwf	trunc@x^(0+128)
  2851  03C3  1703               	bsf	3,6	;RP1=1, select bank3
  2852  03C4  081C               	movf	(round@x+1)^(0+384),w
  2853  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2854  03C6  00E8               	movwf	(trunc@x+1)^(0+128)
  2855  03C7  1703               	bsf	3,6	;RP1=1, select bank3
  2856  03C8  081D               	movf	(round@x+2)^(0+384),w
  2857  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2858  03CA  00E9               	movwf	(trunc@x+2)^(0+128)
  2859  03CB  0008               	return
  2860  03CC                     __end_ofPL2:	
  2861  03CC                     PL6:	
  2862  03CC  0833               	movf	___ftmul@f2^(0+128),w
  2863  03CD  07BA               	addwf	___ftmul@f3_as_product^(0+128),f
  2864  03CE  0834               	movf	(___ftmul@f2+1)^(0+128),w
  2865  03CF  1103               	clrz
  2866  03D0  1803               	skipnc
  2867  03D1  0A34               	incf	(___ftmul@f2+1)^(0+128),w
  2868  03D2  1D03               	btfss	3,2
  2869  03D3  07BB               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  2870  03D4  0835               	movf	(___ftmul@f2+2)^(0+128),w
  2871  03D5  1103               	clrz
  2872  03D6  0008               	return
  2873  03D7                     __end_ofPL6:	
  2874  03D7                     PL10:	
  2875  03D7  085A               	movf	___fttol@f1^(0+128),w
  2876  03D8  00DE               	movwf	??___fttol^(0+128)
  2877  03D9  085B               	movf	(___fttol@f1+1)^(0+128),w
  2878  03DA  00DF               	movwf	(??___fttol^(0+128)+1)
  2879  03DB  085C               	movf	(___fttol@f1+2)^(0+128),w
  2880  03DC  00E0               	movwf	(??___fttol^(0+128)+2)
  2881  03DD  0008               	return
  2882  03DE                     __end_ofPL10:	
  2883  03DE                     __ptext4:	
  2884 ;; *************** function _frexp *****************
  2885 ;; Defined at:
  2886 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  value           3    2[BANK1 ] int 
  2889 ;;  eptr            1    5[BANK1 ] PTR int 
  2890 ;;		 -> trunc@expon(2), 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  3    2[BANK1 ] PTR int 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2897 ;; Tracked objects:
  2898 ;;		On entry : 300/900
  2899 ;;		On exit  : B00/900
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:      BANK1   BANK3  BANK2l
  2902 ;;      Params:         4       0       0
  2903 ;;      Locals:         0       0       0
  2904 ;;      Temps:          2       0       0
  2905 ;;      Totals:         6       0       0
  2906 ;;Total ram usage:        6 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_trunc
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function _frexp
  2918  03DE                     _frexp:	
  2919                           
  2920                           ;incstack = 0
  2921                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  2922  03DE  0824               	movf	(frexp@value+2)^(0+128),w
  2923  03DF  0423               	iorwf	(frexp@value+1)^(0+128),w
  2924  03E0  0422               	iorwf	frexp@value^(0+128),w
  2925  03E1  1D03               	skipz
  2926  03E2  2BEA               	goto	l1870
  2927  03E3  0825               	movf	frexp@eptr^(0+128),w
  2928  03E4  0084               	movwf	4
  2929  03E5  1783               	bsf	3,7	;select IRP bank2
  2930  03E6  0180               	clrf	0
  2931  03E7  0A84               	incf	4,f
  2932  03E8  0180               	clrf	0
  2933  03E9  0008               	return
  2934  03EA                     l1870:	
  2935  03EA  0824               	movf	(frexp@value^(0+128)+2),w
  2936  03EB  397F               	andlw	127
  2937  03EC  00A6               	movwf	??_frexp^(0+128)
  2938  03ED  01A7               	clrf	(??_frexp^(0+128)+1)
  2939  03EE  1003               	clrc
  2940  03EF  0DA6               	rlf	??_frexp^(0+128),f
  2941  03F0  0DA7               	rlf	(??_frexp^(0+128)+1),f
  2942  03F1  0825               	movf	frexp@eptr^(0+128),w
  2943  03F2  0084               	movwf	4
  2944  03F3  0826               	movf	??_frexp^(0+128),w
  2945  03F4  1783               	bsf	3,7	;select IRP bank2
  2946  03F5  0080               	movwf	0
  2947  03F6  0A84               	incf	4,f
  2948  03F7  0827               	movf	(??_frexp+1)^(0+128),w
  2949  03F8  0080               	movwf	0
  2950  03F9  0D23               	rlf	(frexp@value^(0+128)+1),w
  2951  03FA  0D23               	rlf	(frexp@value^(0+128)+1),w
  2952  03FB  3901               	andlw	1
  2953  03FC  00A6               	movwf	??_frexp^(0+128)
  2954  03FD  01A7               	clrf	(??_frexp^(0+128)+1)
  2955  03FE  0825               	movf	frexp@eptr^(0+128),w
  2956  03FF  0084               	movwf	4
  2957  0400  0826               	movf	??_frexp^(0+128),w
  2958  0401  0480               	iorwf	0,f
  2959  0402  0A84               	incf	4,f
  2960  0403  0827               	movf	(??_frexp+1)^(0+128),w
  2961  0404  0480               	iorwf	0,f
  2962  0405  0825               	movf	frexp@eptr^(0+128),w
  2963  0406  0084               	movwf	4
  2964  0407  3082               	movlw	130
  2965  0408  0780               	addwf	0,f
  2966  0409  0F84               	incfsz	4,f
  2967  040A  0800               	movf	0,w
  2968  040B  1803               	skipnc
  2969  040C  0A00               	incf	0,w
  2970  040D  00FF               	movwf	127
  2971  040E  3EFF               	addlw	255
  2972  040F  0080               	movwf	0
  2973  0410  0384               	decf	4,f
  2974  0411  0824               	movf	(frexp@value^(0+128)+2),w
  2975  0412  3980               	andlw	-128
  2976  0413  383F               	iorlw	63
  2977  0414  00A4               	movwf	(frexp@value^(0+128)+2)
  2978  0415  13A3               	bcf	(frexp@value^(0+128)+1),7
  2979  0416  0008               	return
  2980  0417                     __end_of_frexp:	
  2981                           
  2982                           	psect	text12
  2983  057D                     __ptext12:	
  2984 ;; *************** function _ReadVars *****************
  2985 ;; Defined at:
  2986 ;;		line 8 in file "libs/eeprom.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  i               1   21[BANK1 ] unsigned char 
  2991 ;;  j               1   20[BANK1 ] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : B00/0
  2998 ;;		On exit  : 300/100
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:      BANK1   BANK3  BANK2l
  3001 ;;      Params:         0       0       0
  3002 ;;      Locals:         2       0       0
  3003 ;;      Temps:         15       0       0
  3004 ;;      Totals:        17       0       0
  3005 ;;Total ram usage:       17 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    2
  3008 ;; This function calls:
  3009 ;;		___bmul
  3010 ;;		_eeprom_read
  3011 ;; This function is called by:
  3012 ;;		_main
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           
  3017                           ;psect for function _ReadVars
  3018  057D                     _ReadVars:	
  3019                           
  3020                           ;eeprom.c: 9: C_D = eeprom_read(0xA6);
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _ReadVars: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3024  057D  30A6               	movlw	166
  3025  057E  264E  120A  118A   	fcall	_eeprom_read
  3026  0581  00EF               	movwf	111	;volatile
  3027                           
  3028                           ;eeprom.c: 15: UINT8 i, j;
  3029                           ;eeprom.c: 16: for (i=0; i<4; i++)
  3030  0582  1683               	bsf	3,5	;RP0=1, select bank1
  3031  0583  1303               	bcf	3,6	;RP1=0, select bank1
  3032  0584  01B5               	clrf	ReadVars@i^(0+128)
  3033  0585                     l2122:	
  3034  0585  3004               	movlw	4
  3035  0586  0235               	subwf	ReadVars@i^(0+128),w
  3036  0587  1803               	btfsc	3,0
  3037  0588  2D93               	goto	l2132
  3038                           
  3039                           ;eeprom.c: 17: AUDIO.v[0] = eeprom_read(0x9F+i);
  3040  0589  0835               	movf	ReadVars@i^(0+128),w
  3041  058A  3E9F               	addlw	159
  3042  058B  264E  120A  118A   	fcall	_eeprom_read
  3043  058E  00E7               	movwf	103	;volatile
  3044  058F  1683               	bsf	3,5	;RP0=1, select bank1
  3045  0590  1303               	bcf	3,6	;RP1=0, select bank1
  3046  0591  0AB5               	incf	ReadVars@i^(0+128),f
  3047  0592  2D85               	goto	l2122
  3048  0593                     l2132:	
  3049                           
  3050                           ;eeprom.c: 18: for (i = 0; i<3; i++) {
  3051  0593  01B5               	clrf	ReadVars@i^(0+128)
  3052  0594                     l2134:	
  3053  0594  3003               	movlw	3
  3054  0595  0235               	subwf	ReadVars@i^(0+128),w
  3055  0596  1803               	btfsc	3,0
  3056  0597  2E0D               	goto	l2146
  3057                           
  3058                           ;eeprom.c: 19: C[i] = (uint32_t) eeprom_read(0x96 + 3*i)*256*256
  3059                           ;eeprom.c: 20: + (uint16_t) eeprom_read(0x96 + 1 + 3*i)*256
  3060                           ;eeprom.c: 21: + eeprom_read(0x96 + 2 + 3*i);
  3061  0598  0835               	movf	ReadVars@i^(0+128),w
  3062  0599  0735               	addwf	ReadVars@i^(0+128),w
  3063  059A  0735               	addwf	ReadVars@i^(0+128),w
  3064  059B  3E98               	addlw	152
  3065  059C  264E  120A  118A   	fcall	_eeprom_read
  3066  059F  1683               	bsf	3,5	;RP0=1, select bank1
  3067  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  3068  05A1  00A5               	movwf	??_ReadVars^(0+128)
  3069  05A2  01A6               	clrf	(??_ReadVars^(0+128)+1)
  3070  05A3  01A7               	clrf	(??_ReadVars^(0+128)+2)
  3071  05A4  01A8               	clrf	(??_ReadVars^(0+128)+3)
  3072  05A5  0835               	movf	ReadVars@i^(0+128),w
  3073  05A6  0735               	addwf	ReadVars@i^(0+128),w
  3074  05A7  0735               	addwf	ReadVars@i^(0+128),w
  3075  05A8  3E97               	addlw	151
  3076  05A9  264E  120A  118A   	fcall	_eeprom_read
  3077  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  3078  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  3079  05AE  00A9               	movwf	(??_ReadVars+4)^(0+128)
  3080  05AF  01AA               	clrf	((??_ReadVars+4)^(0+128)+1)
  3081  05B0  00AA               	movwf	((??_ReadVars+4)^(0+128)+1)
  3082  05B1  01A9               	clrf	(??_ReadVars+4)^(0+128)
  3083  05B2  0829               	movf	(??_ReadVars+4)^(0+128),w
  3084  05B3  00AB               	movwf	(??_ReadVars+6)^(0+128)
  3085  05B4  082A               	movf	(??_ReadVars+5)^(0+128),w
  3086  05B5  00AC               	movwf	((??_ReadVars+6)^(0+128)+1)
  3087  05B6  01AD               	clrf	((??_ReadVars+6)^(0+128)+2)
  3088  05B7  01AE               	clrf	((??_ReadVars+6)^(0+128)+3)
  3089  05B8  0835               	movf	ReadVars@i^(0+128),w
  3090  05B9  0735               	addwf	ReadVars@i^(0+128),w
  3091  05BA  0735               	addwf	ReadVars@i^(0+128),w
  3092  05BB  3E96               	addlw	150
  3093  05BC  264E  120A  118A   	fcall	_eeprom_read
  3094  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3095  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  3096  05C1  00AF               	movwf	(??_ReadVars+10)^(0+128)
  3097  05C2  01B0               	clrf	((??_ReadVars+10)^(0+128)+1)
  3098  05C3  01B1               	clrf	((??_ReadVars+10)^(0+128)+2)
  3099  05C4  01B2               	clrf	((??_ReadVars+10)^(0+128)+3)
  3100  05C5  0830               	movf	((??_ReadVars+10)^(0+128)+1),w
  3101  05C6  00B2               	movwf	((??_ReadVars+10)^(0+128)+3)
  3102  05C7  082F               	movf	(??_ReadVars+10)^(0+128),w
  3103  05C8  00B1               	movwf	((??_ReadVars+10)^(0+128)+2)
  3104  05C9  01B0               	clrf	((??_ReadVars+10)^(0+128)+1)
  3105  05CA  01AF               	clrf	(??_ReadVars+10)^(0+128)
  3106  05CB  082F               	movf	(??_ReadVars+10)^(0+128),w
  3107  05CC  07AB               	addwf	(??_ReadVars+6)^(0+128),f
  3108  05CD  0830               	movf	(??_ReadVars+11)^(0+128),w
  3109  05CE  1803               	skipnc
  3110  05CF  0F30               	incfsz	(??_ReadVars+11)^(0+128),w
  3111  05D0  07AC               	addwf	((??_ReadVars+6)^(0+128)+1),f
  3112  05D1  0831               	movf	(??_ReadVars+12)^(0+128),w
  3113  05D2  1803               	skipnc
  3114  05D3  0F31               	incfsz	(??_ReadVars+12)^(0+128),w
  3115  05D4  07AD               	addwf	((??_ReadVars+6)^(0+128)+2),f
  3116  05D5  0832               	movf	(??_ReadVars+13)^(0+128),w
  3117  05D6  1803               	skipnc
  3118  05D7  0A32               	incf	(??_ReadVars+13)^(0+128),w
  3119  05D8  07AE               	addwf	((??_ReadVars+6)^(0+128)+3),f
  3120  05D9  082B               	movf	(??_ReadVars+6)^(0+128),w
  3121  05DA  07A5               	addwf	??_ReadVars^(0+128),f
  3122  05DB  082C               	movf	(??_ReadVars+7)^(0+128),w
  3123  05DC  1803               	skipnc
  3124  05DD  0F2C               	incfsz	(??_ReadVars+7)^(0+128),w
  3125  05DE  07A6               	addwf	(??_ReadVars^(0+128)+1),f
  3126  05DF  082D               	movf	(??_ReadVars+8)^(0+128),w
  3127  05E0  1803               	skipnc
  3128  05E1  0F2D               	incfsz	(??_ReadVars+8)^(0+128),w
  3129  05E2  07A7               	addwf	(??_ReadVars^(0+128)+2),f
  3130  05E3  082E               	movf	(??_ReadVars+9)^(0+128),w
  3131  05E4  1803               	skipnc
  3132  05E5  0A2E               	incf	(??_ReadVars+9)^(0+128),w
  3133  05E6  07A8               	addwf	(??_ReadVars^(0+128)+3),f
  3134  05E7  0835               	movf	ReadVars@i^(0+128),w
  3135  05E8  00B3               	movwf	(??_ReadVars+14)^(0+128)
  3136  05E9  3001               	movlw	1
  3137  05EA  1003               	clrc
  3138  05EB                     L3:	
  3139  05EB  0DB3               	rlf	(??_ReadVars+14)^(0+128),f
  3140  05EC  3EFF               	addlw	-1
  3141  05ED  1003               	clrc
  3142  05EE  1D03               	skipz
  3143  05EF  2DEB               	goto	L3
  3144  05F0  0D33               	rlf	(??_ReadVars+14)^(0+128),w
  3145  05F1  3E4C               	addlw	76
  3146  05F2  0084               	movwf	4
  3147  05F3  0825               	movf	??_ReadVars^(0+128),w
  3148  05F4  1783               	bsf	3,7	;select IRP bank2
  3149  05F5  0080               	movwf	0
  3150  05F6  0A84               	incf	4,f
  3151  05F7  0826               	movf	(??_ReadVars+1)^(0+128),w
  3152  05F8  0080               	movwf	0
  3153  05F9  0A84               	incf	4,f
  3154  05FA  0827               	movf	(??_ReadVars+2)^(0+128),w
  3155  05FB  0080               	movwf	0
  3156  05FC  0A84               	incf	4,f
  3157  05FD  0828               	movf	(??_ReadVars+3)^(0+128),w
  3158  05FE  0080               	movwf	0
  3159                           
  3160                           ;eeprom.c: 22: STATE_BREAKS[i] = eeprom_read(0xA3+i);
  3161  05FF  0835               	movf	ReadVars@i^(0+128),w
  3162  0600  3E64               	addlw	100
  3163  0601  0084               	movwf	4
  3164  0602  0835               	movf	ReadVars@i^(0+128),w
  3165  0603  3EA3               	addlw	163
  3166  0604  264E  120A  118A   	fcall	_eeprom_read
  3167  0607  1783               	bsf	3,7	;select IRP bank2
  3168  0608  0080               	movwf	0
  3169  0609  1683               	bsf	3,5	;RP0=1, select bank1
  3170  060A  1303               	bcf	3,6	;RP1=0, select bank1
  3171  060B  0AB5               	incf	ReadVars@i^(0+128),f
  3172  060C  2D94               	goto	l2134
  3173  060D                     l2146:	
  3174                           
  3175                           ;eeprom.c: 23: }
  3176                           ;eeprom.c: 24: for (i = 0; i<30; i++) {
  3177  060D  01B5               	clrf	ReadVars@i^(0+128)
  3178  060E                     l2148:	
  3179  060E  301E               	movlw	30
  3180  060F  0235               	subwf	ReadVars@i^(0+128),w
  3181  0610  1803               	btfsc	3,0
  3182  0611  0008               	return
  3183                           
  3184                           ;eeprom.c: 25: STATE_PERIODS[i] = eeprom_read(0x00
  3185                           ;eeprom.c: 26: + i*(1 + 2*2));
  3186  0612  0835               	movf	ReadVars@i^(0+128),w
  3187  0613  3E20               	addlw	32
  3188  0614  0084               	movwf	4
  3189  0615  3005               	movlw	5
  3190  0616  00A2               	movwf	___bmul@multiplicand^(0+128)
  3191  0617  0835               	movf	ReadVars@i^(0+128),w
  3192  0618  2668  120A  118A   	fcall	___bmul
  3193  061B  264E  120A  118A   	fcall	_eeprom_read
  3194  061E  1383               	bcf	3,7	;select IRP bank0
  3195  061F  0080               	movwf	0
  3196                           
  3197                           ;eeprom.c: 27: for (j = 0; j<2; j++) {
  3198  0620  1683               	bsf	3,5	;RP0=1, select bank1
  3199  0621  1303               	bcf	3,6	;RP1=0, select bank1
  3200  0622  01B4               	clrf	ReadVars@j^(0+128)
  3201  0623                     l2160:	
  3202                           
  3203                           ;eeprom.c: 28: STATE_1[i][j] = eeprom_read(0x00
  3204                           ;eeprom.c: 29: + i*(1 + 2*2)
  3205                           ;eeprom.c: 30: + (1 + j));
  3206  0623  0835               	movf	ReadVars@i^(0+128),w
  3207  0624  00A5               	movwf	??_ReadVars^(0+128)
  3208  0625  303E               	movlw	62
  3209  0626  2676  120A  118A   	fcall	PL4	;call to abstracted procedure
  3210  0629  2668  120A  118A   	fcall	___bmul
  3211  062C  0734               	addwf	ReadVars@j^(0+128),w
  3212  062D  3E01               	addlw	1
  3213  062E  264E  120A  118A   	fcall	_eeprom_read
  3214  0631  1383               	bcf	3,7	;select IRP bank0
  3215  0632  0080               	movwf	0
  3216                           
  3217                           ;eeprom.c: 31: STATE_2[i][j] = eeprom_read(0x00
  3218                           ;eeprom.c: 32: + i*(1 + 2*2)
  3219                           ;eeprom.c: 33: + (3 + j));
  3220  0633  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0634  1303               	bcf	3,6	;RP1=0, select bank1
  3222  0635  0835               	movf	ReadVars@i^(0+128),w
  3223  0636  00A5               	movwf	??_ReadVars^(0+128)
  3224  0637  3010               	movlw	16
  3225  0638  2676  120A  118A   	fcall	PL4	;call to abstracted procedure
  3226  063B  2668  120A  118A   	fcall	___bmul
  3227  063E  0734               	addwf	ReadVars@j^(0+128),w
  3228  063F  3E03               	addlw	3
  3229  0640  264E  120A  118A   	fcall	_eeprom_read
  3230  0643  1783               	bsf	3,7	;select IRP bank2
  3231  0644  0080               	movwf	0
  3232  0645  1683               	bsf	3,5	;RP0=1, select bank1
  3233  0646  1303               	bcf	3,6	;RP1=0, select bank1
  3234  0647  3002               	movlw	2
  3235  0648  0AB4               	incf	ReadVars@j^(0+128),f
  3236  0649  0234               	subwf	ReadVars@j^(0+128),w
  3237  064A  1C03               	skipc
  3238  064B  2E23               	goto	l2160
  3239  064C  0AB5               	incf	ReadVars@i^(0+128),f
  3240  064D  2E0E               	goto	l2148
  3241  064E                     __end_of_ReadVars:	
  3242  064E                     __ptext13:	
  3243 ;; *************** function _eeprom_read *****************
  3244 ;; Defined at:
  3245 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eeread.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  addr            1    wreg     unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  addr            1    2[BANK1 ] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      unsigned char 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 200/0
  3256 ;;		On exit  : 300/200
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:      BANK1   BANK3  BANK2l
  3259 ;;      Params:         0       0       0
  3260 ;;      Locals:         1       0       0
  3261 ;;      Temps:          0       0       0
  3262 ;;      Totals:         1       0       0
  3263 ;;Total ram usage:        1 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_ReadVars
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _eeprom_read
  3275  064E                     _eeprom_read:	
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3279                           ;eeprom_read@addr stored from wreg
  3280  064E  1683               	bsf	3,5	;RP0=1, select bank1
  3281  064F  00A2               	movwf	eeprom_read@addr^(0+128)
  3282  0650  2E52               	goto	l626
  3283  0651                     u1331:	
  3284  0651  1303               	bcf	3,6	;RP1=0, select bank1
  3285  0652                     l626:	
  3286  0652  0064               	clrwdt	;# 
  3287  0653  1683               	bsf	3,5	;RP0=1, select bank3
  3288  0654  1703               	bsf	3,6	;RP1=1, select bank3
  3289  0655  188C               	btfsc	12,1	;volsfr
  3290  0656  2E51               	goto	u1331
  3291  0657  1303               	bcf	3,6	;RP1=0, select bank1
  3292  0658  0822               	movf	eeprom_read@addr^(0+128),w
  3293  0659  1283               	bcf	3,5	;RP0=0, select bank2
  3294  065A  1703               	bsf	3,6	;RP1=1, select bank2
  3295  065B  008D               	movwf	13	;volatile
  3296  065C  303F               	movlw	63
  3297  065D  1683               	bsf	3,5	;RP0=1, select bank3
  3298  065E  058C               	andwf	12,f	;volsfr
  3299  065F  140C               	bsf	12,0	;volsfr
  3300  0660  1003               	clrc
  3301  0661  180C               	btfsc	12,0	;volsfr
  3302  0662  1403               	setc
  3303  0663  1803               	skipnc
  3304  0664  3001               	movlw	1
  3305  0665  1283               	bcf	3,5	;RP0=0, select bank2
  3306  0666  080C               	movf	12,w	;volatile
  3307  0667  0008               	return
  3308  0668                     __end_of_eeprom_read:	
  3309  0668                     __ptext14:	
  3310 ;; *************** function ___bmul *****************
  3311 ;; Defined at:
  3312 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  multiplier      1    wreg     unsigned char 
  3315 ;;  multiplicand    1    2[BANK1 ] unsigned char 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  multiplier      1    4[BANK1 ] unsigned char 
  3318 ;;  product         1    3[BANK1 ] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      unsigned char 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 300/100
  3325 ;;		On exit  : 300/100
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:      BANK1   BANK3  BANK2l
  3328 ;;      Params:         1       0       0
  3329 ;;      Locals:         2       0       0
  3330 ;;      Temps:          0       0       0
  3331 ;;      Totals:         3       0       0
  3332 ;;Total ram usage:        3 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    1
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_ReadVars
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function ___bmul
  3344  0668                     ___bmul:	
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3348                           ;___bmul@multiplier stored from wreg
  3349  0668  00A4               	movwf	___bmul@multiplier^(0+128)
  3350  0669  01A3               	clrf	___bmul@product^(0+128)
  3351  066A                     l1988:	
  3352  066A  0822               	movf	___bmul@multiplicand^(0+128),w
  3353  066B  1824               	btfsc	___bmul@multiplier^(0+128),0
  3354  066C  07A3               	addwf	___bmul@product^(0+128),f
  3355  066D  1003               	clrc
  3356  066E  0DA2               	rlf	___bmul@multiplicand^(0+128),f
  3357  066F  1003               	clrc
  3358  0670  0CA4               	rrf	___bmul@multiplier^(0+128),f
  3359  0671  0824               	movf	___bmul@multiplier^(0+128),w
  3360  0672  1D03               	btfss	3,2
  3361  0673  2E6A               	goto	l1988
  3362  0674  0823               	movf	___bmul@product^(0+128),w
  3363  0675  0008               	return
  3364  0676                     __end_of___bmul:	
  3365  0676                     PL4:	
  3366  0676  1003               	clrc
  3367  0677  0DA5               	rlf	??_ReadVars^(0+128),f
  3368  0678  0725               	addwf	??_ReadVars^(0+128),w
  3369  0679  00A6               	movwf	(??_ReadVars+1)^(0+128)
  3370  067A  0834               	movf	ReadVars@j^(0+128),w
  3371  067B  0726               	addwf	(??_ReadVars+1)^(0+128),w
  3372  067C  00A7               	movwf	(??_ReadVars+2)^(0+128)
  3373  067D  0084               	movwf	4
  3374  067E  3005               	movlw	5
  3375  067F  00A2               	movwf	___bmul@multiplicand^(0+128)
  3376  0680  0835               	movf	ReadVars@i^(0+128),w
  3377  0681  0008               	return
  3378  0682                     __end_ofPL4:	
  3379                           
  3380                           	psect	text15
  3381  0417                     __ptext15:	
  3382 ;; *************** function _ReadRTCAsSec *****************
  3383 ;; Defined at:
  3384 ;;		line 27 in file "libs/gsk_RTC_GPS.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  Out             4   27[BANK1 ] long 
  3389 ;;  TempVar000      1   31[BANK1 ] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  4   14[BANK1 ] long 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, pclath, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : B00/900
  3396 ;;		On exit  : 300/100
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:      BANK1   BANK3  BANK2l
  3399 ;;      Params:         4       0       0
  3400 ;;      Locals:         7       0       0
  3401 ;;      Temps:          7       0       0
  3402 ;;      Totals:        18       0       0
  3403 ;;Total ram usage:       18 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    4
  3406 ;; This function calls:
  3407 ;;		_I2C_ReadAtAddress
  3408 ;;		___lmul
  3409 ;;		___wmul
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _ReadRTCAsSec
  3417  0417                     _ReadRTCAsSec:	
  3418                           
  3419                           ;gsk_RTC_GPS.c: 30: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _ReadRTCAsSec: [wreg+status,2+status,0+pclath+cstack]
  3423  0417  3002               	movlw	2
  3424  0418  00A6               	movwf	I2C_ReadAtAddress@IntAdd^(0+128)
  3425  0419  30DE               	movlw	222
  3426  041A  24E3  120A  118A   	fcall	_I2C_ReadAtAddress
  3427  041D  00BF               	movwf	ReadRTCAsSec@TempVar000^(0+128)
  3428                           
  3429                           ;gsk_RTC_GPS.c: 31: Out = ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x03)*10);
  3430  041E  390F               	andlw	15
  3431  041F  00B2               	movwf	??_ReadRTCAsSec^(0+128)
  3432  0420  0E3F               	swapf	ReadRTCAsSec@TempVar000^(0+128),w
  3433  0421  390F               	andlw	15
  3434  0422  3903               	andlw	3
  3435  0423  00A2               	movwf	___wmul@multiplier^(0+128)
  3436  0424  300A               	movlw	10
  3437  0425  01A3               	clrf	(___wmul@multiplier+1)^(0+128)
  3438  0426  00A4               	movwf	___wmul@multiplicand^(0+128)
  3439  0427  01A5               	clrf	(___wmul@multiplicand+1)^(0+128)
  3440  0428  24CA  120A  118A   	fcall	___wmul
  3441  042B  0832               	movf	??_ReadRTCAsSec^(0+128),w
  3442  042C  0722               	addwf	?___wmul^(0+128),w
  3443  042D  00BB               	movwf	ReadRTCAsSec@Out^(0+128)
  3444  042E  3000               	movlw	0
  3445  042F  1803               	skipnc
  3446  0430  3001               	movlw	1
  3447  0431  0723               	addwf	(?___wmul+1)^(0+128),w
  3448  0432  00BC               	movwf	(ReadRTCAsSec@Out+1)^(0+128)
  3449  0433  01BD               	clrf	(ReadRTCAsSec@Out^(0+128)+2)
  3450  0434  1BBC               	btfsc	(ReadRTCAsSec@Out^(0+128)+1),7
  3451  0435  03BD               	decf	(ReadRTCAsSec@Out+2)^(0+128),f
  3452  0436  083D               	movf	(ReadRTCAsSec@Out^(0+128)+2),w
  3453  0437  00BE               	movwf	(ReadRTCAsSec@Out+3)^(0+128)
  3454                           
  3455                           ;gsk_RTC_GPS.c: 32: Out = Out*3600;
  3456  0438  300E               	movlw	14
  3457  0439  01A5               	clrf	(___lmul@multiplier+3)^(0+128)
  3458  043A  01A4               	clrf	(___lmul@multiplier+2)^(0+128)
  3459  043B  00A3               	movwf	(___lmul@multiplier+1)^(0+128)
  3460  043C  3010               	movlw	16
  3461  043D  00A2               	movwf	___lmul@multiplier^(0+128)
  3462  043E  083E               	movf	(ReadRTCAsSec@Out+3)^(0+128),w
  3463  043F  00A9               	movwf	(___lmul@multiplicand+3)^(0+128)
  3464  0440  083D               	movf	(ReadRTCAsSec@Out+2)^(0+128),w
  3465  0441  00A8               	movwf	(___lmul@multiplicand+2)^(0+128)
  3466  0442  083C               	movf	(ReadRTCAsSec@Out+1)^(0+128),w
  3467  0443  00A7               	movwf	(___lmul@multiplicand+1)^(0+128)
  3468  0444  083B               	movf	ReadRTCAsSec@Out^(0+128),w
  3469  0445  00A6               	movwf	___lmul@multiplicand^(0+128)
  3470  0446  2541  120A  118A   	fcall	___lmul
  3471  0449  0825               	movf	(?___lmul+3)^(0+128),w
  3472  044A  00BE               	movwf	(ReadRTCAsSec@Out+3)^(0+128)
  3473  044B  0824               	movf	(?___lmul+2)^(0+128),w
  3474  044C  00BD               	movwf	(ReadRTCAsSec@Out+2)^(0+128)
  3475  044D  0823               	movf	(?___lmul+1)^(0+128),w
  3476  044E  00BC               	movwf	(ReadRTCAsSec@Out+1)^(0+128)
  3477  044F  0822               	movf	?___lmul^(0+128),w
  3478  0450  00BB               	movwf	ReadRTCAsSec@Out^(0+128)
  3479  0451  30DE               	movlw	222
  3480                           
  3481                           ;gsk_RTC_GPS.c: 34: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
  3482  0452  01A6               	clrf	I2C_ReadAtAddress@IntAdd^(0+128)
  3483  0453  0AA6               	incf	I2C_ReadAtAddress@IntAdd^(0+128),f
  3484  0454  24E3  120A  118A   	fcall	_I2C_ReadAtAddress
  3485  0457  00BF               	movwf	ReadRTCAsSec@TempVar000^(0+128)
  3486                           
  3487                           ;gsk_RTC_GPS.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  3488  0458  2574  120A  118A   	fcall	PL8	;call to abstracted procedure
  3489  045B  24CA  120A  118A   	fcall	___wmul
  3490  045E  0823               	movf	(?___wmul+1)^(0+128),w
  3491  045F  00BA               	movwf	(_ReadRTCAsSec$1794+1)^(0+128)
  3492  0460  0822               	movf	?___wmul^(0+128),w
  3493  0461  00B9               	movwf	_ReadRTCAsSec$1794^(0+128)
  3494  0462  083F               	movf	ReadRTCAsSec@TempVar000^(0+128),w
  3495  0463  390F               	andlw	15
  3496  0464  07B9               	addwf	_ReadRTCAsSec$1794^(0+128),f
  3497  0465  1803               	skipnc
  3498  0466  0ABA               	incf	(_ReadRTCAsSec$1794+1)^(0+128),f
  3499                           
  3500                           ;gsk_RTC_GPS.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  3501  0467  083A               	movf	(_ReadRTCAsSec$1794+1)^(0+128),w
  3502  0468  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
  3503  0469  0839               	movf	_ReadRTCAsSec$1794^(0+128),w
  3504  046A  00A2               	movwf	___wmul@multiplier^(0+128)
  3505  046B  303C               	movlw	60
  3506  046C  00A4               	movwf	___wmul@multiplicand^(0+128)
  3507  046D  01A5               	clrf	(___wmul@multiplicand+1)^(0+128)
  3508  046E  24CA  120A  118A   	fcall	___wmul
  3509  0471  0822               	movf	?___wmul^(0+128),w
  3510  0472  00B2               	movwf	??_ReadRTCAsSec^(0+128)
  3511  0473  0823               	movf	(?___wmul+1)^(0+128),w
  3512  0474  00B3               	movwf	(??_ReadRTCAsSec^(0+128)+1)
  3513  0475  3000               	movlw	0
  3514  0476  1BB3               	btfsc	(??_ReadRTCAsSec^(0+128)+1),7
  3515  0477  30FF               	movlw	255
  3516  0478  00B4               	movwf	(??_ReadRTCAsSec^(0+128)+2)
  3517  0479  00B5               	movwf	(??_ReadRTCAsSec^(0+128)+3)
  3518  047A  0832               	movf	??_ReadRTCAsSec^(0+128),w
  3519  047B  07BB               	addwf	ReadRTCAsSec@Out^(0+128),f
  3520  047C  0833               	movf	(??_ReadRTCAsSec+1)^(0+128),w
  3521  047D  1103               	clrz
  3522  047E  1803               	skipnc
  3523  047F  3E01               	addlw	1
  3524  0480  1D03               	btfss	3,2
  3525  0481  07BC               	addwf	(ReadRTCAsSec@Out+1)^(0+128),f
  3526  0482  0834               	movf	(??_ReadRTCAsSec+2)^(0+128),w
  3527  0483  1103               	clrz
  3528  0484  1803               	skipnc
  3529  0485  3E01               	addlw	1
  3530  0486  1D03               	btfss	3,2
  3531  0487  07BD               	addwf	(ReadRTCAsSec@Out+2)^(0+128),f
  3532  0488  0835               	movf	(??_ReadRTCAsSec+3)^(0+128),w
  3533  0489  1103               	clrz
  3534  048A  1803               	skipnc
  3535  048B  3E01               	addlw	1
  3536  048C  1D03               	btfss	3,2
  3537  048D  07BE               	addwf	(ReadRTCAsSec@Out+3)^(0+128),f
  3538  048E  30DE               	movlw	222
  3539                           
  3540                           ;gsk_RTC_GPS.c: 37: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
  3541  048F  01A6               	clrf	I2C_ReadAtAddress@IntAdd^(0+128)
  3542  0490  24E3  120A  118A   	fcall	_I2C_ReadAtAddress
  3543  0493  00BF               	movwf	ReadRTCAsSec@TempVar000^(0+128)
  3544                           
  3545                           ;gsk_RTC_GPS.c: 38: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10);
  3546  0494  390F               	andlw	15
  3547  0495  00B2               	movwf	??_ReadRTCAsSec^(0+128)
  3548  0496  2574  120A  118A   	fcall	PL8	;call to abstracted procedure
  3549  0499  24CA  120A  118A   	fcall	___wmul
  3550  049C  0832               	movf	??_ReadRTCAsSec^(0+128),w
  3551  049D  0722               	addwf	?___wmul^(0+128),w
  3552  049E  00B3               	movwf	(??_ReadRTCAsSec+1)^(0+128)
  3553  049F  3000               	movlw	0
  3554  04A0  1803               	skipnc
  3555  04A1  3001               	movlw	1
  3556  04A2  0723               	addwf	(?___wmul+1)^(0+128),w
  3557  04A3  00B4               	movwf	(??_ReadRTCAsSec+2)^(0+128)
  3558  04A4  0833               	movf	(??_ReadRTCAsSec+1)^(0+128),w
  3559  04A5  00B5               	movwf	(??_ReadRTCAsSec+3)^(0+128)
  3560  04A6  0834               	movf	(??_ReadRTCAsSec+2)^(0+128),w
  3561  04A7  00B6               	movwf	((??_ReadRTCAsSec+3)^(0+128)+1)
  3562  04A8  3000               	movlw	0
  3563  04A9  1BB6               	btfsc	((??_ReadRTCAsSec+3)^(0+128)+1),7
  3564  04AA  30FF               	movlw	255
  3565  04AB  00B7               	movwf	((??_ReadRTCAsSec+3)^(0+128)+2)
  3566  04AC  00B8               	movwf	((??_ReadRTCAsSec+3)^(0+128)+3)
  3567  04AD  0835               	movf	(??_ReadRTCAsSec+3)^(0+128),w
  3568  04AE  07BB               	addwf	ReadRTCAsSec@Out^(0+128),f
  3569  04AF  0836               	movf	(??_ReadRTCAsSec+4)^(0+128),w
  3570  04B0  1103               	clrz
  3571  04B1  1803               	skipnc
  3572  04B2  3E01               	addlw	1
  3573  04B3  1D03               	btfss	3,2
  3574  04B4  07BC               	addwf	(ReadRTCAsSec@Out+1)^(0+128),f
  3575  04B5  0837               	movf	(??_ReadRTCAsSec+5)^(0+128),w
  3576  04B6  1103               	clrz
  3577  04B7  1803               	skipnc
  3578  04B8  3E01               	addlw	1
  3579  04B9  1D03               	btfss	3,2
  3580  04BA  07BD               	addwf	(ReadRTCAsSec@Out+2)^(0+128),f
  3581  04BB  0838               	movf	(??_ReadRTCAsSec+6)^(0+128),w
  3582  04BC  1103               	clrz
  3583  04BD  1803               	skipnc
  3584  04BE  3E01               	addlw	1
  3585  04BF  1D03               	btfss	3,2
  3586  04C0  07BE               	addwf	(ReadRTCAsSec@Out+3)^(0+128),f
  3587                           
  3588                           ;gsk_RTC_GPS.c: 39: return Out;
  3589  04C1  083E               	movf	(ReadRTCAsSec@Out+3)^(0+128),w
  3590  04C2  00B1               	movwf	(?_ReadRTCAsSec+3)^(0+128)
  3591  04C3  083D               	movf	(ReadRTCAsSec@Out+2)^(0+128),w
  3592  04C4  00B0               	movwf	(?_ReadRTCAsSec+2)^(0+128)
  3593  04C5  083C               	movf	(ReadRTCAsSec@Out+1)^(0+128),w
  3594  04C6  00AF               	movwf	(?_ReadRTCAsSec+1)^(0+128)
  3595  04C7  083B               	movf	ReadRTCAsSec@Out^(0+128),w
  3596  04C8  00AE               	movwf	?_ReadRTCAsSec^(0+128)
  3597  04C9  0008               	return
  3598  04CA                     __end_of_ReadRTCAsSec:	
  3599  04CA                     __ptext16:	
  3600 ;; *************** function ___wmul *****************
  3601 ;; Defined at:
  3602 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  multiplier      2    2[BANK1 ] unsigned int 
  3605 ;;  multiplicand    2    4[BANK1 ] unsigned int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  product         2    6[BANK1 ] unsigned int 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  2    2[BANK1 ] unsigned int 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 300/900
  3614 ;;		On exit  : 300/100
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:      BANK1   BANK3  BANK2l
  3617 ;;      Params:         4       0       0
  3618 ;;      Locals:         2       0       0
  3619 ;;      Temps:          0       0       0
  3620 ;;      Totals:         6       0       0
  3621 ;;Total ram usage:        6 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_ReadRTCAsSec
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function ___wmul
  3633  04CA                     ___wmul:	
  3634                           
  3635                           ;incstack = 0
  3636                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3637  04CA  01A6               	clrf	___wmul@product^(0+128)
  3638  04CB  01A7               	clrf	(___wmul@product+1)^(0+128)
  3639  04CC                     l1960:	
  3640  04CC  1C22               	btfss	___wmul@multiplier^(0+128),0
  3641  04CD  2CD4               	goto	l1964
  3642  04CE  0824               	movf	___wmul@multiplicand^(0+128),w
  3643  04CF  07A6               	addwf	___wmul@product^(0+128),f
  3644  04D0  1803               	skipnc
  3645  04D1  0AA7               	incf	(___wmul@product+1)^(0+128),f
  3646  04D2  0825               	movf	(___wmul@multiplicand+1)^(0+128),w
  3647  04D3  07A7               	addwf	(___wmul@product+1)^(0+128),f
  3648  04D4                     l1964:	
  3649  04D4  1003               	clrc
  3650  04D5  0DA4               	rlf	___wmul@multiplicand^(0+128),f
  3651  04D6  0DA5               	rlf	(___wmul@multiplicand+1)^(0+128),f
  3652  04D7  1003               	clrc
  3653  04D8  0CA3               	rrf	(___wmul@multiplier+1)^(0+128),f
  3654  04D9  0CA2               	rrf	___wmul@multiplier^(0+128),f
  3655  04DA  0822               	movf	___wmul@multiplier^(0+128),w
  3656  04DB  0423               	iorwf	(___wmul@multiplier+1)^(0+128),w
  3657  04DC  1D03               	btfss	3,2
  3658  04DD  2CCC               	goto	l1960
  3659  04DE  0827               	movf	(___wmul@product+1)^(0+128),w
  3660  04DF  00A3               	movwf	(?___wmul+1)^(0+128)
  3661  04E0  0826               	movf	___wmul@product^(0+128),w
  3662  04E1  00A2               	movwf	?___wmul^(0+128)
  3663  04E2  0008               	return
  3664  04E3                     __end_of___wmul:	
  3665  04E3                     __ptext18:	
  3666 ;; *************** function _I2C_ReadAtAddress *****************
  3667 ;; Defined at:
  3668 ;;		line 55 in file "libs/gsk_i2c.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  DevID           1    wreg     unsigned char 
  3671 ;;  IntAdd          1    6[BANK1 ] unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  DevID           1    8[BANK1 ] unsigned char 
  3674 ;;  data            1    7[BANK1 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      unsigned char 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 300/900
  3681 ;;		On exit  : 300/100
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:      BANK1   BANK3  BANK2l
  3684 ;;      Params:         1       0       0
  3685 ;;      Locals:         2       0       0
  3686 ;;      Temps:          0       0       0
  3687 ;;      Totals:         3       0       0
  3688 ;;Total ram usage:        3 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    3
  3691 ;; This function calls:
  3692 ;;		_I2C_Master_Read
  3693 ;;		_I2C_Master_Start
  3694 ;;		_I2C_Master_Stop
  3695 ;;		_I2C_Master_Write
  3696 ;; This function is called by:
  3697 ;;		_ReadRTCAsSec
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _I2C_ReadAtAddress
  3703  04E3                     _I2C_ReadAtAddress:	
  3704                           
  3705                           ;incstack = 0
  3706                           ; Regs used in _I2C_ReadAtAddress: [wreg+status,2+status,0+pclath+cstack]
  3707                           ;I2C_ReadAtAddress@DevID stored from wreg
  3708  04E3  00A8               	movwf	I2C_ReadAtAddress@DevID^(0+128)
  3709                           
  3710                           ;gsk_i2c.c: 57: I2C_Master_Start();
  3711  04E4  2513  120A  118A   	fcall	_I2C_Master_Start
  3712                           
  3713                           ;gsk_i2c.c: 58: I2C_Master_Write(DevID);
  3714  04E7  0828               	movf	I2C_ReadAtAddress@DevID^(0+128),w
  3715  04E8  00A2               	movwf	I2C_Master_Write@d^(0+128)
  3716  04E9  01A3               	clrf	(I2C_Master_Write@d+1)^(0+128)
  3717  04EA  250E  120A  118A   	fcall	_I2C_Master_Write
  3718                           
  3719                           ;gsk_i2c.c: 59: I2C_Master_Write(IntAdd);
  3720  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  3721  04EE  0826               	movf	I2C_ReadAtAddress@IntAdd^(0+128),w
  3722  04EF  00A2               	movwf	I2C_Master_Write@d^(0+128)
  3723  04F0  01A3               	clrf	(I2C_Master_Write@d+1)^(0+128)
  3724  04F1  250E  120A  118A   	fcall	_I2C_Master_Write
  3725                           
  3726                           ;gsk_i2c.c: 60: I2C_Master_Stop();
  3727  04F4  253E  120A  118A   	fcall	_I2C_Master_Stop
  3728                           
  3729                           ;gsk_i2c.c: 62: I2C_Master_Start();
  3730  04F7  2513  120A  118A   	fcall	_I2C_Master_Start
  3731                           
  3732                           ;gsk_i2c.c: 63: I2C_Master_Write(DevID+1);
  3733  04FA  0828               	movf	I2C_ReadAtAddress@DevID^(0+128),w
  3734  04FB  00A2               	movwf	I2C_Master_Write@d^(0+128)
  3735  04FC  01A3               	clrf	(I2C_Master_Write@d+1)^(0+128)
  3736  04FD  0AA2               	incf	I2C_Master_Write@d^(0+128),f
  3737  04FE  1903               	skipnz
  3738  04FF  0AA3               	incf	(I2C_Master_Write@d+1)^(0+128),f
  3739  0500  250E  120A  118A   	fcall	_I2C_Master_Write
  3740                           
  3741                           ;gsk_i2c.c: 64: char data = I2C_Master_Read(0);
  3742  0503  1683               	bsf	3,5	;RP0=1, select bank1
  3743  0504  01A2               	clrf	I2C_Master_Read@a^(0+128)
  3744  0505  01A3               	clrf	(I2C_Master_Read@a+1)^(0+128)
  3745  0506  2516  120A  118A   	fcall	_I2C_Master_Read
  3746  0509  0822               	movf	?_I2C_Master_Read^(0+128),w
  3747  050A  00A7               	movwf	I2C_ReadAtAddress@data^(0+128)
  3748                           
  3749                           ;gsk_i2c.c: 65: I2C_Master_Stop();
  3750  050B  253E               	fcall	_I2C_Master_Stop
  3751                           
  3752                           ;gsk_i2c.c: 66: return data;
  3753  050C  0827               	movf	I2C_ReadAtAddress@data^(0+128),w
  3754  050D  0008               	return
  3755  050E                     __end_of_I2C_ReadAtAddress:	
  3756  050E                     __ptext19:	
  3757 ;; *************** function _I2C_Master_Write *****************
  3758 ;; Defined at:
  3759 ;;		line 36 in file "libs/gsk_i2c.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  d               2    2[BANK1 ] unsigned int 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, pclath, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 300/900
  3770 ;;		On exit  : 300/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:      BANK1   BANK3  BANK2l
  3773 ;;      Params:         2       0       0
  3774 ;;      Locals:         0       0       0
  3775 ;;      Temps:          0       0       0
  3776 ;;      Totals:         2       0       0
  3777 ;;Total ram usage:        2 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    2
  3780 ;; This function calls:
  3781 ;;		_I2C_Master_Wait
  3782 ;; This function is called by:
  3783 ;;		_I2C_ReadAtAddress
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           
  3788                           ;psect for function _I2C_Master_Write
  3789  050E                     _I2C_Master_Write:	
  3790                           
  3791                           ;gsk_i2c.c: 38: I2C_Master_Wait();
  3792                           
  3793                           ;incstack = 0
  3794                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3795  050E  2536               	fcall	_I2C_Master_Wait
  3796                           
  3797                           ;gsk_i2c.c: 39: SSPBUF = d;
  3798  050F  0822               	movf	I2C_Master_Write@d^(0+128),w
  3799  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0511  0093               	movwf	19	;volatile
  3801  0512  0008               	return
  3802  0513                     __end_of_I2C_Master_Write:	
  3803  0513                     __ptext21:	
  3804 ;; *************** function _I2C_Master_Start *****************
  3805 ;; Defined at:
  3806 ;;		line 18 in file "libs/gsk_i2c.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 300/900
  3817 ;;		On exit  : 300/100
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:      BANK1   BANK3  BANK2l
  3820 ;;      Params:         0       0       0
  3821 ;;      Locals:         0       0       0
  3822 ;;      Temps:          0       0       0
  3823 ;;      Totals:         0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    2
  3827 ;; This function calls:
  3828 ;;		_I2C_Master_Wait
  3829 ;; This function is called by:
  3830 ;;		_I2C_ReadAtAddress
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _I2C_Master_Start
  3836  0513                     _I2C_Master_Start:	
  3837                           
  3838                           ;gsk_i2c.c: 20: I2C_Master_Wait();
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3842  0513  2536               	fcall	_I2C_Master_Wait
  3843                           
  3844                           ;gsk_i2c.c: 21: SEN = 1;
  3845  0514  1411               	bsf	17,0	;volatile
  3846  0515  0008               	return
  3847  0516                     __end_of_I2C_Master_Start:	
  3848  0516                     __ptext22:	
  3849 ;; *************** function _I2C_Master_Read *****************
  3850 ;; Defined at:
  3851 ;;		line 42 in file "libs/gsk_i2c.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  a               2    2[BANK1 ] unsigned short 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  temp            2    4[BANK1 ] unsigned short 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  2    2[BANK1 ] unsigned short 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 300/900
  3862 ;;		On exit  : 300/100
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:      BANK1   BANK3  BANK2l
  3865 ;;      Params:         2       0       0
  3866 ;;      Locals:         2       0       0
  3867 ;;      Temps:          0       0       0
  3868 ;;      Totals:         4       0       0
  3869 ;;Total ram usage:        4 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    2
  3872 ;; This function calls:
  3873 ;;		_I2C_Master_Wait
  3874 ;; This function is called by:
  3875 ;;		_I2C_ReadAtAddress
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _I2C_Master_Read
  3881  0516                     _I2C_Master_Read:	
  3882                           
  3883                           ;gsk_i2c.c: 44: unsigned short temp;
  3884                           ;gsk_i2c.c: 45: I2C_Master_Wait();
  3885                           
  3886                           ;incstack = 0
  3887                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3888  0516  2536  120A  118A   	fcall	_I2C_Master_Wait
  3889                           
  3890                           ;gsk_i2c.c: 46: RCEN = 1;
  3891  0519  1591               	bsf	17,3	;volatile
  3892                           
  3893                           ;gsk_i2c.c: 47: I2C_Master_Wait();
  3894  051A  2536  120A  118A   	fcall	_I2C_Master_Wait
  3895                           
  3896                           ;gsk_i2c.c: 48: temp = SSPBUF;
  3897  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3898  051E  0813               	movf	19,w	;volatile
  3899  051F  1683               	bsf	3,5	;RP0=1, select bank1
  3900  0520  00A4               	movwf	I2C_Master_Read@temp^(0+128)
  3901  0521  01A5               	clrf	(I2C_Master_Read@temp+1)^(0+128)
  3902                           
  3903                           ;gsk_i2c.c: 49: I2C_Master_Wait();
  3904  0522  2536  120A  118A   	fcall	_I2C_Master_Wait
  3905                           
  3906                           ;gsk_i2c.c: 50: ACKDT = (a)?0:1;
  3907  0525  0822               	movf	I2C_Master_Read@a^(0+128),w
  3908  0526  0423               	iorwf	(I2C_Master_Read@a+1)^(0+128),w
  3909  0527  1D03               	btfss	3,2
  3910  0528  2D2D               	goto	u1280
  3911  0529  1683               	bsf	3,5	;RP0=1, select bank1
  3912  052A  1303               	bcf	3,6	;RP1=0, select bank1
  3913  052B  1691               	bsf	17,5	;volatile
  3914  052C  2D30               	goto	l1902
  3915  052D                     u1280:	
  3916  052D  1683               	bsf	3,5	;RP0=1, select bank1
  3917  052E  1303               	bcf	3,6	;RP1=0, select bank1
  3918  052F  1291               	bcf	17,5	;volatile
  3919  0530                     l1902:	
  3920                           
  3921                           ;gsk_i2c.c: 51: ACKEN = 1;
  3922  0530  1611               	bsf	17,4	;volatile
  3923                           
  3924                           ;gsk_i2c.c: 52: return temp;
  3925  0531  0825               	movf	(I2C_Master_Read@temp+1)^(0+128),w
  3926  0532  00A3               	movwf	(?_I2C_Master_Read+1)^(0+128)
  3927  0533  0824               	movf	I2C_Master_Read@temp^(0+128),w
  3928  0534  00A2               	movwf	?_I2C_Master_Read^(0+128)
  3929  0535  0008               	return
  3930  0536                     __end_of_I2C_Master_Read:	
  3931  0536                     __ptext23:	
  3932 ;; *************** function _I2C_Master_Wait *****************
  3933 ;; Defined at:
  3934 ;;		line 13 in file "libs/gsk_i2c.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2
  3943 ;; Tracked objects:
  3944 ;;		On entry : 200/900
  3945 ;;		On exit  : 300/100
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:      BANK1   BANK3  BANK2l
  3948 ;;      Params:         0       0       0
  3949 ;;      Locals:         0       0       0
  3950 ;;      Temps:          0       0       0
  3951 ;;      Totals:         0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_I2C_Master_Start
  3959 ;;		_I2C_Master_Stop
  3960 ;;		_I2C_Master_Write
  3961 ;;		_I2C_Master_Read
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           
  3966                           ;psect for function _I2C_Master_Wait
  3967  0536                     _I2C_Master_Wait:	
  3968  0536                     l286:	
  3969                           ;gsk_i2c.c: 15: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3970                           
  3971                           ;incstack = 0
  3972                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3973                           
  3974  0536  1683               	bsf	3,5	;RP0=1, select bank1
  3975  0537  1914               	btfsc	20,2	;volatile
  3976  0538  2D36               	goto	l286
  3977  0539  0811               	movf	17,w	;volatile
  3978  053A  391F               	andlw	31
  3979  053B  1903               	btfsc	3,2
  3980  053C  0008               	return
  3981  053D  2D36               	goto	l286
  3982  053E                     __end_of_I2C_Master_Wait:	
  3983  053E                     __ptext20:	
  3984 ;; *************** function _I2C_Master_Stop *****************
  3985 ;; Defined at:
  3986 ;;		line 30 in file "libs/gsk_i2c.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 200/800
  3997 ;;		On exit  : 300/100
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:      BANK1   BANK3  BANK2l
  4000 ;;      Params:         0       0       0
  4001 ;;      Locals:         0       0       0
  4002 ;;      Temps:          0       0       0
  4003 ;;      Totals:         0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    2
  4007 ;; This function calls:
  4008 ;;		_I2C_Master_Wait
  4009 ;; This function is called by:
  4010 ;;		_I2C_ReadAtAddress
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _I2C_Master_Stop
  4016  053E                     _I2C_Master_Stop:	
  4017                           
  4018                           ;gsk_i2c.c: 32: I2C_Master_Wait();
  4019                           
  4020                           ;incstack = 0
  4021                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4022  053E  2536               	fcall	_I2C_Master_Wait
  4023                           
  4024                           ;gsk_i2c.c: 33: PEN = 1;
  4025  053F  1511               	bsf	17,2	;volatile
  4026  0540  0008               	return
  4027  0541                     __end_of_I2C_Master_Stop:	
  4028  0541                     __ptext17:	
  4029 ;; *************** function ___lmul *****************
  4030 ;; Defined at:
  4031 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  multiplier      4    2[BANK1 ] unsigned long 
  4034 ;;  multiplicand    4    6[BANK1 ] unsigned long 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  product         4   10[BANK1 ] unsigned long 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  4    2[BANK1 ] unsigned long 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 300/900
  4043 ;;		On exit  : 300/100
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:      BANK1   BANK3  BANK2l
  4046 ;;      Params:         8       0       0
  4047 ;;      Locals:         4       0       0
  4048 ;;      Temps:          0       0       0
  4049 ;;      Totals:        12       0       0
  4050 ;;Total ram usage:       12 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_ReadRTCAsSec
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function ___lmul
  4062  0541                     ___lmul:	
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4066  0541  01AA               	clrf	___lmul@product^(0+128)
  4067  0542  01AB               	clrf	(___lmul@product+1)^(0+128)
  4068  0543  01AC               	clrf	(___lmul@product+2)^(0+128)
  4069  0544  01AD               	clrf	(___lmul@product+3)^(0+128)
  4070  0545                     l723:	
  4071  0545  1C22               	btfss	___lmul@multiplier^(0+128),0
  4072  0546  2D5B               	goto	l1978
  4073  0547  0826               	movf	___lmul@multiplicand^(0+128),w
  4074  0548  07AA               	addwf	___lmul@product^(0+128),f
  4075  0549  0827               	movf	(___lmul@multiplicand+1)^(0+128),w
  4076  054A  1103               	clrz
  4077  054B  1803               	skipnc
  4078  054C  3E01               	addlw	1
  4079  054D  1D03               	btfss	3,2
  4080  054E  07AB               	addwf	(___lmul@product+1)^(0+128),f
  4081  054F  0828               	movf	(___lmul@multiplicand+2)^(0+128),w
  4082  0550  1103               	clrz
  4083  0551  1803               	skipnc
  4084  0552  3E01               	addlw	1
  4085  0553  1D03               	btfss	3,2
  4086  0554  07AC               	addwf	(___lmul@product+2)^(0+128),f
  4087  0555  0829               	movf	(___lmul@multiplicand+3)^(0+128),w
  4088  0556  1103               	clrz
  4089  0557  1803               	skipnc
  4090  0558  3E01               	addlw	1
  4091  0559  1D03               	btfss	3,2
  4092  055A  07AD               	addwf	(___lmul@product+3)^(0+128),f
  4093  055B                     l1978:	
  4094  055B  1003               	clrc
  4095  055C  0DA6               	rlf	___lmul@multiplicand^(0+128),f
  4096  055D  0DA7               	rlf	(___lmul@multiplicand+1)^(0+128),f
  4097  055E  0DA8               	rlf	(___lmul@multiplicand+2)^(0+128),f
  4098  055F  0DA9               	rlf	(___lmul@multiplicand+3)^(0+128),f
  4099  0560  1003               	clrc
  4100  0561  0CA5               	rrf	(___lmul@multiplier+3)^(0+128),f
  4101  0562  0CA4               	rrf	(___lmul@multiplier+2)^(0+128),f
  4102  0563  0CA3               	rrf	(___lmul@multiplier+1)^(0+128),f
  4103  0564  0CA2               	rrf	___lmul@multiplier^(0+128),f
  4104  0565  0825               	movf	(___lmul@multiplier+3)^(0+128),w
  4105  0566  0424               	iorwf	(___lmul@multiplier+2)^(0+128),w
  4106  0567  0423               	iorwf	(___lmul@multiplier+1)^(0+128),w
  4107  0568  0422               	iorwf	___lmul@multiplier^(0+128),w
  4108  0569  1D03               	skipz
  4109  056A  2D45               	goto	l723
  4110  056B  082D               	movf	(___lmul@product+3)^(0+128),w
  4111  056C  00A5               	movwf	(?___lmul+3)^(0+128)
  4112  056D  082C               	movf	(___lmul@product+2)^(0+128),w
  4113  056E  00A4               	movwf	(?___lmul+2)^(0+128)
  4114  056F  082B               	movf	(___lmul@product+1)^(0+128),w
  4115  0570  00A3               	movwf	(?___lmul+1)^(0+128)
  4116  0571  082A               	movf	___lmul@product^(0+128),w
  4117  0572  00A2               	movwf	?___lmul^(0+128)
  4118  0573  0008               	return
  4119  0574                     __end_of___lmul:	
  4120  0574                     PL8:	
  4121  0574  0E3F               	swapf	ReadRTCAsSec@TempVar000^(0+128),w
  4122  0575  390F               	andlw	15
  4123  0576  3907               	andlw	7
  4124  0577  00A2               	movwf	___wmul@multiplier^(0+128)
  4125  0578  300A               	movlw	10
  4126  0579  01A3               	clrf	(___wmul@multiplier+1)^(0+128)
  4127  057A  00A4               	movwf	___wmul@multiplicand^(0+128)
  4128  057B  01A5               	clrf	(___wmul@multiplicand+1)^(0+128)
  4129  057C  0008               	return
  4130  057D                     __end_ofPL8:	
  4131                           
  4132                           	psect	text24
  4133  0682                     __ptext24:	
  4134 ;; *************** function _I2C_Master_Init *****************
  4135 ;; Defined at:
  4136 ;;		line 3 in file "libs/gsk_i2c.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  c               4   15[BANK1 ] const unsigned long 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0, pclath, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : B00/900
  4147 ;;		On exit  : B00/900
  4148 ;;		Unchanged: 800/0
  4149 ;; Data sizes:      BANK1   BANK3  BANK2l
  4150 ;;      Params:         4       0       0
  4151 ;;      Locals:         0       0       0
  4152 ;;      Temps:          4       0       0
  4153 ;;      Totals:         8       0       0
  4154 ;;Total ram usage:        8 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    2
  4157 ;; This function calls:
  4158 ;;		___lldiv
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           
  4165                           ;psect for function _I2C_Master_Init
  4166  0682                     _I2C_Master_Init:	
  4167                           
  4168                           ;gsk_i2c.c: 5: SSPCON = 0b00101000;
  4169                           
  4170                           ;incstack = 0
  4171                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4172  0682  3028               	movlw	40
  4173  0683  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0684  0094               	movwf	20	;volatile
  4175                           
  4176                           ;gsk_i2c.c: 6: SSPCON2 = 0;
  4177  0685  1683               	bsf	3,5	;RP0=1, select bank1
  4178  0686  0191               	clrf	17	;volatile
  4179                           
  4180                           ;gsk_i2c.c: 7: SSPADD = (4000000/(4*c))-1;
  4181  0687  082F               	movf	I2C_Master_Init@c^(0+128),w
  4182  0688  00B3               	movwf	??_I2C_Master_Init^(0+128)
  4183  0689  0830               	movf	(I2C_Master_Init@c+1)^(0+128),w
  4184  068A  00B4               	movwf	(??_I2C_Master_Init^(0+128)+1)
  4185  068B  0831               	movf	(I2C_Master_Init@c+2)^(0+128),w
  4186  068C  00B5               	movwf	(??_I2C_Master_Init^(0+128)+2)
  4187  068D  0832               	movf	(I2C_Master_Init@c+3)^(0+128),w
  4188  068E  00B6               	movwf	(??_I2C_Master_Init^(0+128)+3)
  4189  068F  3002               	movlw	2
  4190  0690                     u1675:	
  4191  0690  1003               	clrc
  4192  0691  0DB3               	rlf	??_I2C_Master_Init^(0+128),f
  4193  0692  0DB4               	rlf	(??_I2C_Master_Init^(0+128)+1),f
  4194  0693  0DB5               	rlf	(??_I2C_Master_Init^(0+128)+2),f
  4195  0694  0DB6               	rlf	(??_I2C_Master_Init^(0+128)+3),f
  4196  0695  3EFF               	addlw	-1
  4197  0696  1D03               	skipz
  4198  0697  2E90               	goto	u1675
  4199  0698  0836               	movf	(??_I2C_Master_Init+3)^(0+128),w
  4200  0699  00A5               	movwf	(___lldiv@divisor+3)^(0+128)
  4201  069A  0835               	movf	(??_I2C_Master_Init+2)^(0+128),w
  4202  069B  00A4               	movwf	(___lldiv@divisor+2)^(0+128)
  4203  069C  0834               	movf	(??_I2C_Master_Init+1)^(0+128),w
  4204  069D  00A3               	movwf	(___lldiv@divisor+1)^(0+128)
  4205  069E  0833               	movf	??_I2C_Master_Init^(0+128),w
  4206  069F  00A2               	movwf	___lldiv@divisor^(0+128)
  4207  06A0  303D               	movlw	61
  4208  06A1  01A9               	clrf	(___lldiv@dividend+3)^(0+128)
  4209  06A2  00A8               	movwf	(___lldiv@dividend+2)^(0+128)
  4210  06A3  3009               	movlw	9
  4211  06A4  00A7               	movwf	(___lldiv@dividend+1)^(0+128)
  4212  06A5  01A6               	clrf	___lldiv@dividend^(0+128)
  4213  06A6  26AE               	fcall	___lldiv
  4214  06A7  0822               	movf	?___lldiv^(0+128),w
  4215  06A8  3EFF               	addlw	255
  4216  06A9  0093               	movwf	19	;volatile
  4217                           
  4218                           ;gsk_i2c.c: 8: SSPSTAT = 0;
  4219  06AA  0194               	clrf	20	;volatile
  4220                           
  4221                           ;gsk_i2c.c: 9: TRISC3 = 1;
  4222  06AB  1587               	bsf	7,3	;volatile
  4223                           
  4224                           ;gsk_i2c.c: 10: TRISC4 = 1;
  4225  06AC  1607               	bsf	7,4	;volatile
  4226  06AD  0008               	return
  4227  06AE                     __end_of_I2C_Master_Init:	
  4228  06AE                     __ptext25:	
  4229 ;; *************** function ___lldiv *****************
  4230 ;; Defined at:
  4231 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  divisor         4    2[BANK1 ] unsigned long 
  4234 ;;  dividend        4    6[BANK1 ] unsigned long 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  quotient        4   10[BANK1 ] unsigned long 
  4237 ;;  counter         1   14[BANK1 ] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  4    2[BANK1 ] unsigned long 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0
  4242 ;; Tracked objects:
  4243 ;;		On entry : B00/900
  4244 ;;		On exit  : B00/900
  4245 ;;		Unchanged: 800/0
  4246 ;; Data sizes:      BANK1   BANK3  BANK2l
  4247 ;;      Params:         8       0       0
  4248 ;;      Locals:         5       0       0
  4249 ;;      Temps:          0       0       0
  4250 ;;      Totals:        13       0       0
  4251 ;;Total ram usage:       13 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_I2C_Master_Init
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           
  4262                           ;psect for function ___lldiv
  4263  06AE                     ___lldiv:	
  4264                           
  4265                           ;incstack = 0
  4266                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4267  06AE  01AA               	clrf	___lldiv@quotient^(0+128)
  4268  06AF  01AB               	clrf	(___lldiv@quotient+1)^(0+128)
  4269  06B0  01AC               	clrf	(___lldiv@quotient+2)^(0+128)
  4270  06B1  01AD               	clrf	(___lldiv@quotient+3)^(0+128)
  4271  06B2  0825               	movf	(___lldiv@divisor+3)^(0+128),w
  4272  06B3  0424               	iorwf	(___lldiv@divisor+2)^(0+128),w
  4273  06B4  0423               	iorwf	(___lldiv@divisor+1)^(0+128),w
  4274  06B5  0422               	iorwf	___lldiv@divisor^(0+128),w
  4275  06B6  1903               	skipnz
  4276  06B7  2EED               	goto	l2114
  4277  06B8  01AE               	clrf	___lldiv@counter^(0+128)
  4278  06B9                     L4:	
  4279  06B9  0AAE               	incf	___lldiv@counter^(0+128),f
  4280  06BA  1BA5               	btfsc	(___lldiv@divisor+3)^(0+128),7
  4281  06BB  2EC2               	goto	l2102
  4282  06BC  1003               	clrc
  4283  06BD  0DA2               	rlf	___lldiv@divisor^(0+128),f
  4284  06BE  0DA3               	rlf	(___lldiv@divisor+1)^(0+128),f
  4285  06BF  0DA4               	rlf	(___lldiv@divisor+2)^(0+128),f
  4286  06C0  0DA5               	rlf	(___lldiv@divisor+3)^(0+128),f
  4287  06C1  2EB9               	goto	L4
  4288  06C2                     l2102:	
  4289  06C2  1003               	clrc
  4290  06C3  0DAA               	rlf	___lldiv@quotient^(0+128),f
  4291  06C4  0DAB               	rlf	(___lldiv@quotient+1)^(0+128),f
  4292  06C5  0DAC               	rlf	(___lldiv@quotient+2)^(0+128),f
  4293  06C6  0DAD               	rlf	(___lldiv@quotient+3)^(0+128),f
  4294  06C7  0825               	movf	(___lldiv@divisor+3)^(0+128),w
  4295  06C8  0229               	subwf	(___lldiv@dividend+3)^(0+128),w
  4296  06C9  1D03               	skipz
  4297  06CA  2ED5               	goto	u1565
  4298  06CB  0824               	movf	(___lldiv@divisor+2)^(0+128),w
  4299  06CC  0228               	subwf	(___lldiv@dividend+2)^(0+128),w
  4300  06CD  1D03               	skipz
  4301  06CE  2ED5               	goto	u1565
  4302  06CF  0823               	movf	(___lldiv@divisor+1)^(0+128),w
  4303  06D0  0227               	subwf	(___lldiv@dividend+1)^(0+128),w
  4304  06D1  1D03               	skipz
  4305  06D2  2ED5               	goto	u1565
  4306  06D3  0822               	movf	___lldiv@divisor^(0+128),w
  4307  06D4  0226               	subwf	___lldiv@dividend^(0+128),w
  4308  06D5                     u1565:	
  4309  06D5  1C03               	skipc
  4310  06D6  2EE7               	goto	L5
  4311  06D7  0822               	movf	___lldiv@divisor^(0+128),w
  4312  06D8  02A6               	subwf	___lldiv@dividend^(0+128),f
  4313  06D9  0823               	movf	(___lldiv@divisor+1)^(0+128),w
  4314  06DA  1C03               	skipc
  4315  06DB  0F23               	incfsz	(___lldiv@divisor+1)^(0+128),w
  4316  06DC  02A7               	subwf	(___lldiv@dividend+1)^(0+128),f
  4317  06DD  0824               	movf	(___lldiv@divisor+2)^(0+128),w
  4318  06DE  1C03               	skipc
  4319  06DF  0F24               	incfsz	(___lldiv@divisor+2)^(0+128),w
  4320  06E0  02A8               	subwf	(___lldiv@dividend+2)^(0+128),f
  4321  06E1  0825               	movf	(___lldiv@divisor+3)^(0+128),w
  4322  06E2  1C03               	skipc
  4323  06E3  0F25               	incfsz	(___lldiv@divisor+3)^(0+128),w
  4324  06E4  02A9               	subwf	(___lldiv@dividend+3)^(0+128),f
  4325  06E5  142A               	bsf	___lldiv@quotient^(0+128),0
  4326  06E6  1003               	clrc
  4327  06E7                     L5:	
  4328  06E7  0CA5               	rrf	(___lldiv@divisor+3)^(0+128),f
  4329  06E8  0CA4               	rrf	(___lldiv@divisor+2)^(0+128),f
  4330  06E9  0CA3               	rrf	(___lldiv@divisor+1)^(0+128),f
  4331  06EA  0CA2               	rrf	___lldiv@divisor^(0+128),f
  4332  06EB  0BAE               	decfsz	___lldiv@counter^(0+128),f
  4333  06EC  2EC2               	goto	l2102
  4334  06ED                     l2114:	
  4335  06ED  082D               	movf	(___lldiv@quotient+3)^(0+128),w
  4336  06EE  00A5               	movwf	(?___lldiv+3)^(0+128)
  4337  06EF  082C               	movf	(___lldiv@quotient+2)^(0+128),w
  4338  06F0  00A4               	movwf	(?___lldiv+2)^(0+128)
  4339  06F1  082B               	movf	(___lldiv@quotient+1)^(0+128),w
  4340  06F2  00A3               	movwf	(?___lldiv+1)^(0+128)
  4341  06F3  082A               	movf	___lldiv@quotient^(0+128),w
  4342  06F4  00A2               	movwf	?___lldiv^(0+128)
  4343  06F5  0008               	return
  4344  06F6                     __end_of___lldiv:	
  4345                           
  4346                           	psect	text26
  4347  074B                     __ptext26:	
  4348 ;; *************** function _GetCumulativePeriodsForStates *****************
  4349 ;; Defined at:
  4350 ;;		line 3 in file "libs/gsk_algo_funcs.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  i               1    9[BANK1 ] unsigned char 
  4355 ;;  j               1    8[BANK1 ] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 300/200
  4362 ;;		On exit  : B00/900
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:      BANK1   BANK3  BANK2l
  4365 ;;      Params:         0       0       0
  4366 ;;      Locals:         2       0       0
  4367 ;;      Temps:          4       0       0
  4368 ;;      Totals:         6       0       0
  4369 ;;Total ram usage:        6 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    2
  4372 ;; This function calls:
  4373 ;;		_GetPrevCycle
  4374 ;; This function is called by:
  4375 ;;		_main
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function _GetCumulativePeriodsForStates
  4381  074B                     _GetCumulativePeriodsForStates:	
  4382                           
  4383                           ;gsk_algo_funcs.c: 4: char i, j;
  4384                           ;gsk_algo_funcs.c: 5: for (i=0; i< 2; i++) {
  4385                           
  4386                           ;incstack = 0
  4387                           ; Regs used in _GetCumulativePeriodsForStates: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
  4388  074B  1683               	bsf	3,5	;RP0=1, select bank1
  4389  074C  1303               	bcf	3,6	;RP1=0, select bank1
  4390  074D  01A9               	clrf	GetCumulativePeriodsForStates@i^(0+128)
  4391  074E                     l2204:	
  4392                           
  4393                           ;gsk_algo_funcs.c: 6: STATE_CUMULATIVE_PERIODS[i] = 0;
  4394  074E  1003               	clrc
  4395  074F  0D29               	rlf	GetCumulativePeriodsForStates@i^(0+128),w
  4396  0750  3E7A               	addlw	122
  4397  0751  0084               	movwf	4
  4398  0752  1383               	bcf	3,7	;select IRP bank0
  4399  0753  0180               	clrf	0
  4400  0754  0A84               	incf	4,f
  4401  0755  0180               	clrf	0
  4402                           
  4403                           ;gsk_algo_funcs.c: 7: if (i==0)
  4404  0756  0829               	movf	GetCumulativePeriodsForStates@i^(0+128),w
  4405  0757  1D03               	btfss	3,2
  4406  0758  2F5B               	goto	l2210
  4407                           
  4408                           ;gsk_algo_funcs.c: 8: j = 0;
  4409  0759  01A8               	clrf	GetCumulativePeriodsForStates@j^(0+128)
  4410  075A  2F64               	goto	l2216
  4411  075B                     l2210:	
  4412                           
  4413                           ;gsk_algo_funcs.c: 9: else
  4414                           ;gsk_algo_funcs.c: 10: j = STATE_BREAKS[GetPrevCycle(i)];
  4415  075B  0829               	movf	GetCumulativePeriodsForStates@i^(0+128),w
  4416  075C  2791  120A  118A   	fcall	_GetPrevCycle
  4417  075F  3E64               	addlw	100
  4418  0760  0084               	movwf	4
  4419  0761  1783               	bsf	3,7	;select IRP bank2
  4420  0762  0800               	movf	0,w
  4421  0763  00A8               	movwf	GetCumulativePeriodsForStates@j^(0+128)
  4422  0764                     l2216:	
  4423  0764  0829               	movf	GetCumulativePeriodsForStates@i^(0+128),w
  4424  0765  3E64               	addlw	100
  4425  0766  0084               	movwf	4
  4426  0767  1783               	bsf	3,7	;select IRP bank2
  4427  0768  0800               	movf	0,w
  4428  0769  0228               	subwf	GetCumulativePeriodsForStates@j^(0+128),w
  4429  076A  1803               	btfsc	3,0
  4430  076B  2F8B               	goto	l2218
  4431                           
  4432                           ;gsk_algo_funcs.c: 12: STATE_CUMULATIVE_PERIODS[i] = STATE_CUMULATIVE_PERIODS[i]
  4433                           ;gsk_algo_funcs.c: 13: + STATE_PERIODS[j];
  4434  076C  1003               	clrc
  4435  076D  0D29               	rlf	GetCumulativePeriodsForStates@i^(0+128),w
  4436  076E  3E7A               	addlw	122
  4437  076F  0084               	movwf	4
  4438  0770  1383               	bcf	3,7	;select IRP bank0
  4439  0771  0800               	movf	0,w
  4440  0772  00A4               	movwf	??_GetCumulativePeriodsForStates^(0+128)
  4441  0773  0A84               	incf	4,f
  4442  0774  0800               	movf	0,w
  4443  0775  00A5               	movwf	(??_GetCumulativePeriodsForStates^(0+128)+1)
  4444  0776  0828               	movf	GetCumulativePeriodsForStates@j^(0+128),w
  4445  0777  3E20               	addlw	32
  4446  0778  0084               	movwf	4
  4447  0779  0800               	movf	0,w
  4448  077A  0724               	addwf	??_GetCumulativePeriodsForStates^(0+128),w
  4449  077B  00A6               	movwf	(??_GetCumulativePeriodsForStates+2)^(0+128)
  4450  077C  0825               	movf	(??_GetCumulativePeriodsForStates+1)^(0+128),w
  4451  077D  1803               	skipnc
  4452  077E  0A25               	incf	(??_GetCumulativePeriodsForStates+1)^(0+128),w
  4453  077F  00A7               	movwf	((??_GetCumulativePeriodsForStates+2)^(0+128)+1)
  4454  0780  1003               	clrc
  4455  0781  0D29               	rlf	GetCumulativePeriodsForStates@i^(0+128),w
  4456  0782  3E7A               	addlw	122
  4457  0783  0084               	movwf	4
  4458  0784  0826               	movf	(??_GetCumulativePeriodsForStates+2)^(0+128),w
  4459  0785  0080               	movwf	0
  4460  0786  0A84               	incf	4,f
  4461  0787  0827               	movf	((??_GetCumulativePeriodsForStates+2)^(0+128)+1),w
  4462  0788  0080               	movwf	0
  4463  0789  0AA8               	incf	GetCumulativePeriodsForStates@j^(0+128),f
  4464  078A  2F64               	goto	l2216
  4465  078B                     l2218:	
  4466  078B  3002               	movlw	2
  4467  078C  0AA9               	incf	GetCumulativePeriodsForStates@i^(0+128),f
  4468  078D  0229               	subwf	GetCumulativePeriodsForStates@i^(0+128),w
  4469  078E  1803               	btfsc	3,0
  4470  078F  0008               	return
  4471  0790  2F4E               	goto	l2204
  4472  0791                     __end_of_GetCumulativePeriodsForStates:	
  4473  0791                     __ptext27:	
  4474 ;; *************** function _GetPrevCycle *****************
  4475 ;; Defined at:
  4476 ;;		line 18 in file "libs/gsk_algo_funcs.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  cycle           1    wreg     unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  cycle           1    3[BANK1 ] unsigned char 
  4481 ;;  PrevCycle       1    2[BANK1 ] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      unsigned char 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : B00/100
  4488 ;;		On exit  : B00/100
  4489 ;;		Unchanged: 800/0
  4490 ;; Data sizes:      BANK1   BANK3  BANK2l
  4491 ;;      Params:         0       0       0
  4492 ;;      Locals:         2       0       0
  4493 ;;      Temps:          0       0       0
  4494 ;;      Totals:         2       0       0
  4495 ;;Total ram usage:        2 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_GetCumulativePeriodsForStates
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _GetPrevCycle
  4507  0791                     _GetPrevCycle:	
  4508                           
  4509                           ;incstack = 0
  4510                           ; Regs used in _GetPrevCycle: [wreg+status,2+status,0]
  4511                           ;GetPrevCycle@cycle stored from wreg
  4512  0791  00A3               	movwf	GetPrevCycle@cycle^(0+128)
  4513                           
  4514                           ;gsk_algo_funcs.c: 19: UINT8 PrevCycle;
  4515                           ;gsk_algo_funcs.c: 20: if (cycle > 0)
  4516  0792  0823               	movf	GetPrevCycle@cycle^(0+128),w
  4517  0793  1903               	btfsc	3,2
  4518  0794  2F98               	goto	l1954
  4519                           
  4520                           ;gsk_algo_funcs.c: 21: PrevCycle = cycle - 1;
  4521  0795  0823               	movf	GetPrevCycle@cycle^(0+128),w
  4522  0796  3EFF               	addlw	255
  4523  0797  2F99               	goto	L6
  4524  0798                     l1954:	
  4525                           
  4526                           ;gsk_algo_funcs.c: 22: else
  4527                           ;gsk_algo_funcs.c: 23: PrevCycle = 3 - 1;
  4528  0798  3002               	movlw	2
  4529  0799                     L6:	
  4530  0799  00A2               	movwf	GetPrevCycle@PrevCycle^(0+128)
  4531                           
  4532                           ;gsk_algo_funcs.c: 24: return PrevCycle;
  4533  079A  0008               	return
  4534  079B                     __end_of_GetPrevCycle:	
  4535                           
  4536                           	psect	text28
  4537  07AC                     __ptext28:	
  4538 ;; *************** function _tc_int *****************
  4539 ;; Defined at:
  4540 ;;		line 56 in file "main.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 300/100
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:      BANK1   BANK3  BANK2l
  4554 ;;      Params:         0       0       0
  4555 ;;      Locals:         0       0       0
  4556 ;;      Temps:          2       0       0
  4557 ;;      Totals:         2       0       0
  4558 ;;Total ram usage:        2 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		Interrupt level 1
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function _tc_int
  4569  07AC                     _tc_int:	
  4570                           
  4571                           ;main.c: 58: if(INTCONbits.T0IF && INTCONbits.T0IE)
  4572  07AC  190B               	btfsc	11,2	;volatile
  4573  07AD  1E8B               	btfss	11,5	;volatile
  4574  07AE  2FB5               	goto	i1l613
  4575                           
  4576                           ;main.c: 59: {
  4577                           ;main.c: 60: TMR0 -= 250;
  4578  07AF  30FA               	movlw	250
  4579  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4580  07B1  0281               	subwf	1,f	;volatile
  4581                           
  4582                           ;main.c: 61: INTCONbits.T0IF = 0;
  4583  07B2  110B               	bcf	11,2	;volatile
  4584                           
  4585                           ;main.c: 62: PORTB = 0x40;
  4586  07B3  3040               	movlw	64
  4587  07B4  0086               	movwf	6	;volatile
  4588  07B5                     i1l613:	
  4589  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  4590  07B6  0821               	movf	(??_tc_int+1)^(0+128),w
  4591  07B7  008A               	movwf	10
  4592  07B8  0E20               	swapf	??_tc_int^(0+128),w
  4593  07B9  0083               	movwf	3
  4594  07BA  0EFE               	swapf	126,f
  4595  07BB  0E7E               	swapf	126,w
  4596  07BC  0009               	retfie
  4597  07BD                     __end_of_tc_int:	
  4598  007E                     btemp	set	126	;btemp
  4599  007E                     wtemp	set	126
  4600  007E                     wtemp0	set	126
  4601  0080                     wtemp1	set	128
  4602  0082                     wtemp2	set	130
  4603  0084                     wtemp3	set	132
  4604  0086                     wtemp4	set	134
  4605  0088                     wtemp5	set	136
  4606  007F                     wtemp6	set	127
  4607  007E                     ttemp	set	126
  4608  007E                     ttemp0	set	126
  4609  0081                     ttemp1	set	129
  4610  0084                     ttemp2	set	132
  4611  0087                     ttemp3	set	135
  4612  007F                     ttemp4	set	127
  4613  007E                     ltemp	set	126
  4614  007E                     ltemp0	set	126
  4615  0082                     ltemp1	set	130
  4616  0086                     ltemp2	set	134
  4617  0080                     ltemp3	set	128
  4618                           
  4619                           	psect	intentry
  4620  0004                     __pintentry:	
  4621                           ;incstack = 0
  4622                           ; Regs used in _tc_int: [wreg+status,2+status,0]
  4623                           
  4624  0004                     interrupt_function:	
  4625  007E                     saved_w	set	btemp
  4626  0004  00FE               	movwf	btemp
  4627  0005  0E03               	swapf	3,w
  4628  0006  1683               	bsf	3,5	;RP0=1, select bank1
  4629  0007  1303               	bcf	3,6	;RP1=0, select bank1
  4630  0008  00A0               	movwf	??_tc_int^(0+128)
  4631  0009  080A               	movf	10,w
  4632  000A  00A1               	movwf	(??_tc_int+1)^(0+128)
  4633  000B  120A  118A  2FAC   	ljmp	_tc_int


Data Sizes:
    Strings     0
    Constant    0
    Data        168
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    BANK1            80     74      77
    BANK3            96     29      29
    BANK2l           12      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK3[2]), 


Critical Paths under _main in BANK1

    _round->_trunc
    _trunc->___fttol
    ___fttol->___ftadd
    ___altoft->___ftpack
    ___ftsub->_trunc
    ___ftadd->___ftdiv
    ___ftmul->___altoft
    ___ftdiv->___ftmul
    _ReadVars->___bmul
    _ReadRTCAsSec->___lmul
    _I2C_ReadAtAddress->_I2C_Master_Read
    _I2C_Master_Init->___lldiv
    _GetCumulativePeriodsForStates->_GetPrevCycle

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_UART_Init
    _UART_Init->_round
    _round->___ftsub
    ___ftsub->_trunc

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2l

    None.

Critical Paths under _tc_int in BANK2l

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0   22526
      _GetCumulativePeriodsForStates
                    _I2C_Master_Init
                       _ReadRTCAsSec
                           _ReadVars
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           12     8      4   18868
                                             17 BANK3     12     8      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                6     3      3    9106
                                             11 BANK3      6     3      3
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftsub
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                                8     5      3    2932
                                             71 BANK1      3     0      3
                                              0 BANK3      5     5      0
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     314
                                              2 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             13     9      4     398
                                             58 BANK1     13     9      4
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             6     2      4    1951
                                             10 BANK1      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3038
                                              5 BANK3      6     0      6
                            ___ftadd
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    2865
                                             46 BANK1     12     6      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2221
                                             16 BANK1     15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2095
                                             31 BANK1     15     9      6
                           ___altoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              2 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReadVars                                            17    17      0     951
                                              5 BANK1     17    17      0
                             ___bmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          1     1      0      22
                                              2 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     371
                                              2 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _ReadRTCAsSec                                        18    14      4    2071
                                             14 BANK1     18    14      4
                  _I2C_ReadAtAddress
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     596
                                              2 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     438
                                              2 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadAtAddress                                    3     2      1     829
                                              6 BANK1      3     2      1
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     323
                                              2 BANK1      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2      98
                                              2 BANK1      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     343
                                             15 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     268
                                              2 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _GetCumulativePeriodsForStates                        6     6      0     293
                                              4 BANK1      6     6      0
                       _GetPrevCycle
 ---------------------------------------------------------------------------------
 (2) _GetPrevCycle                                         2     2      0      68
                                              2 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tc_int                                               2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetCumulativePeriodsForStates
     _GetPrevCycle
   _I2C_Master_Init
     ___lldiv
   _ReadRTCAsSec
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___lmul
     ___wmul
   _ReadVars
     ___bmul
     _eeprom_read
   _UART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _round
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___fttol
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _frexp

 _tc_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1D      1D       5       30.2%
BITBANK3            60      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2l               C      0       0       7        0.0%
BITBANK2l            C      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4A      4D       3       96.3%
BITBANK1            50      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6A       8        0.0%
ABS                  0      0      6A       1        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       0        0.0%
EEDATA             100      0      A7       0       65.2%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Mar 08 21:34:07 2017

                          ___altoft@exp 00AE                                       _C 014C  
                                     _S 016B                                       pc 0002  
                        ___bmul@product 00A3                             __CFG_CP$OFF 0000  
                                    PL2 03C0                                      PL4 0676  
                                    PL6 03CC                                      PL8 0574  
                         ___altoft@sign 00AF                                      _RD 0C60  
                                    _WR 0C61                                      fsr 0004  
                   ___wmul@multiplicand 00A4                            ___ftadd@exp1 00D9  
                          ___ftadd@exp2 00D8                                     PL10 03D7  
                          ___ftadd@sign 00D7                                     l286 0536  
                                   l606 074A                                     l626 0652  
                                   l723 0545                                     l904 01B0  
                                   l922 02E2                                     l880 02AE  
                                   l868 0286                                     _RC1 0039  
                                   _C_D 016F                                     _PEN 048A  
                          __CFG_CPD$OFF 0000                                     _SEN 0488  
                                   fsr0 0004                                     indf 0000  
                          __CFG_IESO$ON 0000                            __CFG_FOSC$HS 0000  
                     GetPrevCycle@cycle 00A3                           ?_ReadRTCAsSec 00AE  
                          __CFG_LVP$OFF 0000                            ___ftdiv@cntr 00C8  
                          ___ftdiv@sign 00CD                                    l2004 02D1  
                                  l2102 06C2                                    l2210 075B  
                                  l2114 06ED                                    l2122 0585  
                                  l2026 02F5                                    l2204 074E  
                                  l2132 0593                                    l2044 0339  
                                  l2134 0594                                    l2070 0364  
                                  l2216 0764                                    l2160 0623  
                                  l2048 034A                                    l2218 078B  
                                  l2146 060D                                    l2082 0379  
                                  l2066 035B                                    l2148 060E  
                                  l1710 028F                                    l2078 0370  
                                  l1720 02A3                                    l1712 0294  
                                  l1714 029E                                    l1802 01BB  
                                  l1708 028A                                    l1820 01E2  
                                  l1902 0530                                    l1718 02AC  
                                  l1742 0206                                    l1808 01C6  
                                  l1912 039C                                    l1744 0211  
                                  l1754 0157                                    l1826 022D  
                                  l1922 0103                                    l1764 016D  
                                  l1860 0275                                    l1844 0251  
                                  l1828 0232                                    l1782 018A  
                                  l1758 015E                                    l1854 025D  
                                  l1870 03EA                                    l1960 04CC  
                                  l1784 018F                                    l1776 017B  
                                  l1856 0267                                    l1848 0259  
                                  l1954 0798                                    l1794 01A7  
                                  l1786 0194                                    l1964 04D4  
                                  l1796 01AC                                    l1788 0198  
                                  l1978 055B                                    l1988 066A  
                                  _BRGH 04C2                                    _CREN 00C4  
                                  u1205 0236                                    u1331 0651  
                                  u1280 052D                                    u1445 0303  
                                  u1565 06D5                                    u1675 0690  
                                  _RCEN 048B                                    _TMR0 0001  
                                  _SPEN 00C7                                    _TXEN 04C5  
                                  _SYNC 04C4                            __CFG_WRT$OFF 0000  
                         __CFG_FCMEN$ON 0000                                    _main 06F6  
                          ___ftpack@arg 00A2                            ___ftpack@exp 00A5  
                                  btemp 007E                                    ltemp 007E  
                                  start 000E                                    ttemp 007E  
                                  wtemp 007E                       ___bmul@multiplier 00A4  
                         __CFG_MCLRE$ON 0000                            ___ftmul@cntr 00BD  
                          ___ftmul@sign 00BE                            ___fttol@exp1 00E6  
                          ___fttol@lval 00E2                        ?_I2C_Master_Init 00AF  
                      ?_I2C_Master_Read 00A2                        ?_I2C_Master_Wait 00A0  
                      ?_I2C_Master_Stop 00A0                                   ?_main 00A0  
                                 _ACKEN 048C                                   _ACKDT 048D  
                                 _EEADR 010D                         __end_of___ftadd 01F4  
                                 _BRG16 0C3B                           __CFG_WDTE$OFF 0000  
                       __end_of___ftdiv 0328                                   _ANSEL 0188  
                       __end_of___lldiv 06F6                                   _FLAGS 00EB  
                  __end_of_GetPrevCycle 079B                                   _AUDIO 0167  
                       __end_of___ftmul 0395                         __end_of___ftsub 03C0  
                       __end_of___fttol 027E                                   i1l613 07B5  
                                 _SPBRG 0099                                   _PORTB 0006  
                                 _TRISA 0085                                   _TRISB 0086  
                                 _TRISC 0087                     ___lmul@multiplicand 00A6  
                        ??_ReadRTCAsSec 00B2                      __size_of_UART_Init 007F  
                                 _frexp 03DE                           ___ftpack@sign 00A6  
                                 _round 0099                                   _trunc 00F0  
                        __CFG_BOREN$OFF 0000                                   pclath 000A  
                                 ltemp0 007E                                   ltemp1 0082  
                                 ltemp2 0086                                   ltemp3 0080  
                                 ttemp0 007E                                   ttemp1 0081  
                                 ttemp2 0084                                   ttemp3 0087  
                                 ttemp4 007F                                   status 0003  
                                 wtemp0 007E                                   wtemp1 0080  
                                 wtemp2 0082                                   wtemp3 0084  
                                 wtemp4 0086                                   wtemp5 0088  
                                 wtemp6 007F                       _ReadRTCAsSec$1794 00B9  
                       __initialization 0011                            __end_of_main 074B  
                      __end_of_ReadVars 064E                         ReadRTCAsSec@Out 00BB  
                                ??_main 00EA                           ___fttol@sign1 00E1  
                     ?_I2C_Master_Start 00A0                       ?_I2C_Master_Write 00A2  
                    ??_I2C_Master_Start 00A2                      ??_I2C_Master_Write 00A4  
                                ?_frexp 00A2                        __end_of___altoft 0223  
                                _EEDATA 010C                                  _EECON1 018C  
                      __end_of___ftpack 02C0                                  ?_round 019B  
                                _ANSELH 0189                                  ?_trunc 00E7  
                     _I2C_ReadAtAddress 04E3                                  _SPBRGH 009A  
                    ?_I2C_ReadAtAddress 00A6                                  _SSPADD 0093  
                                _TRISC3 043B                                  _TRISC4 043C  
                                _SSPCON 0014                                  _SSPBUF 0013  
                        __CFG_PWRTE$OFF 0000                    __size_of_eeprom_read 001A  
                   ??_I2C_ReadAtAddress 00A7                       __end_of_UART_Init 0099  
                                ___bmul 0668                                  ___lmul 0541  
                                ___wmul 04CA                               ??___ftadd 00D4  
                             ??___ftdiv 00C5                               ??___lldiv 00AA  
                             ??___ftmul 00B6                               ??___ftsub 00EA  
                             ??___fttol 00DE                                  _tc_int 07AC  
                 ___ftmul@f3_as_product 00BA                            __pdataEEDATA 0000  
                                saved_w 007E               __end_of_I2C_ReadAtAddress 050E  
                                round@f 019E                                  round@x 019B  
                                trunc@i 0190                                  trunc@x 00E7  
               __end_of__initialization 0016                              ___altoft@c 00AA  
                       eeprom_read@addr 00A2                              ___ftadd@f1 00CE  
                            ___ftadd@f2 00D1                              ___ftdiv@f1 00C2  
                            ___ftdiv@f2 00BF                              ___ftdiv@f3 00C9  
                   ___bmul@multiplicand 00A2                              ___ftmul@f1 00B0  
                            ___ftmul@f2 00B3                              ___ftsub@f1 0198  
                            ___ftsub@f2 0195                              ___fttol@f1 00DA  
                        __pcstackCOMMON 0000                    __end_of_ReadRTCAsSec 04CA  
                          __pidataBANK1 0000                   __size_of_GetPrevCycle 000A  
                         __end_of_frexp 0417                           __end_of_round 00F0  
                         __end_of_trunc 0134                              __end_ofPL2 03CC  
                            __end_ofPL4 0682                              __end_ofPL6 03D7  
                            __end_ofPL8 057D                          _OPTION_REGbits 0081  
                               ??_frexp 00A6                                 ??_round 00EA  
                               ??_trunc 00EA                              __pbssBANK1 00EA  
                             ?_ReadVars 00A0                 I2C_ReadAtAddress@IntAdd 00A6  
                          _GetPrevCycle 0791                              __pmaintext 06F6  
                               ?___bmul 00A2                                 ?___lmul 00A2  
                               ?___wmul 00A2                              __pintentry 0004  
                             ?___altoft 00AA                          ___lmul@product 00AA  
                               ?_tc_int 00A0                               ?___ftpack 00A2  
            __size_of_I2C_ReadAtAddress 002B                                 _STATE_1 003E  
                               _STATE_2 0110                                 _SSPCON2 0091  
                               _SSPSTAT 0094                          _UART_Init$1796 01A5  
                        _UART_Init$1797 01A8                              ??_ReadVars 00A5  
                ReadRTCAsSec@TempVar000 00BF                         __size_of___bmul 000E  
                       __size_of___lmul 0033                                 ___ftadd 0134  
                               ___ftdiv 02C0                                 ___lldiv 06AE  
                       __size_of___wmul 0019                                 ___ftmul 0328  
                               ___ftsub 0395                                 ___fttol 0223  
                            ??___altoft 00AE                              ??___ftpack 00A7  
                       __size_of_tc_int 0011                                 __ptext1 001A  
                               __ptext2 0099                                 __ptext3 00F0  
                               __ptext4 03DE                                 __ptext5 0223  
                               __ptext6 01F4                                 __ptext7 0395  
                               __ptext8 0134                                 __ptext9 0328  
              __size_of_I2C_Master_Init 002C                __size_of_I2C_Master_Read 0020  
              __size_of_I2C_Master_Wait 0008                __size_of_I2C_Master_Stop 0003  
                  end_of_initialization 0016                   GetPrevCycle@PrevCycle 00A2  
       ??_GetCumulativePeriodsForStates 00A4                   __size_of_ReadRTCAsSec 00B3  
             __size_of_I2C_Master_Start 0003               __size_of_I2C_Master_Write 0005  
                       ___lldiv@divisor 00A2                         ___lldiv@counter 00AE  
                      I2C_Master_Init@c 00AF                        I2C_Master_Read@a 00A2  
                             _UART_Init 001A                            _ReadRTCAsSec 0417  
                           ___ftdiv@exp 00CC                           ??_eeprom_read 00A2  
                             ReadVars@i 00B5                               ReadVars@j 00B4  
                           ___ftmul@exp 00B9                          __end_of___bmul 0676  
                        __end_of___lmul 0574                           __pidataEEDATA 0000  
                        __end_of___wmul 04E3                              ?_UART_Init 01A1  
                        __end_of_tc_int 07BD                _STATE_CUMULATIVE_PERIODS 007A  
                           __end_ofPL10 03DE                     start_initialization 0011  
                            frexp@value 00A2                       ??_I2C_Master_Init 00B3  
                     ??_I2C_Master_Read 00A4                       ??_I2C_Master_Wait 00A2  
                     ??_I2C_Master_Stop 00A2                       __size_of_ReadVars 00D1  
 __end_of_GetCumulativePeriodsForStates 0791  __size_of_GetCumulativePeriodsForStates 0046  
         _GetCumulativePeriodsForStates 074B                                ??___bmul 00A3  
                              ??___lmul 00AA                                ??___wmul 00A6  
                   __end_of_eeprom_read 0668                              init_fetch0 079B  
                           __pdataBANK1 00EC                                ??_tc_int 00A0  
                     __size_of___altoft 002F                       __size_of___ftpack 0042  
                             ___latbits 0002                           __pcstackBANK1 00A0  
                         __pcstackBANK3 0190                  I2C_ReadAtAddress@DevID 00A8  
                      _I2C_Master_Start 0513                        _I2C_Master_Write 050E  
                       _PREV_CYCLE_TYPE 00EC                                ?___ftadd 00CE  
                              ?___ftdiv 00BF                                ?___lldiv 00A2  
                              ?___ftmul 00B0                                ?___ftsub 0195  
                              ?___fttol 00DA                             ??_UART_Init 00EA  
                        __size_of_frexp 0039                              UART_Init@x 01AB  
                        __size_of_round 0057                          __size_of_trunc 0044  
                     interrupt_function 0004                          ___wmul@product 00A6  
                           _eeprom_read 064E          ?_GetCumulativePeriodsForStates 00A0  
                     UART_Init@baudrate 01A1                       ___wmul@multiplier 00A2  
                           _EE_Settings 0000                     I2C_Master_Read@temp 00A4  
                     ___lmul@multiplier 00A2                                _ReadVars 057D  
                             frexp@eptr 00A5                           _STATE_PERIODS 0020  
                      __size_of___ftadd 00C0                        __size_of___ftdiv 0068  
                      __size_of___lldiv 0048                                ___altoft 01F4  
                      __size_of___ftmul 006D                        __size_of___ftsub 002B  
                      __size_of___fttol 005B                                ___ftpack 027E  
                       _I2C_Master_Init 0682                         _I2C_Master_Read 0516  
                       _I2C_Master_Wait 0536                         _I2C_Master_Stop 053E  
                 I2C_ReadAtAddress@data 00A7                                __ptext10 02C0  
                              __ptext11 027E                                __ptext20 053E  
                              __ptext12 057D                                __ptext21 0513  
                              __ptext13 064E                                __ptext22 0516  
                              __ptext14 0668                                __ptext23 0536  
                              __ptext15 0417                                __ptext24 0682  
                              __ptext16 04CA                                __ptext25 06AE  
                              __ptext17 0541                                __ptext26 074B  
                              __ptext18 04E3                                __ptext27 0791  
                              __ptext19 050E                                __ptext28 07AC  
                     __CFG_BOR4V$BOR21V 0000                              trunc@expon 0193  
                         __size_of_main 0055                           ?_GetPrevCycle 0000  
                            _CYCLE_TYPE 00EA          GetCumulativePeriodsForStates@i 00A9  
        GetCumulativePeriodsForStates@j 00A8                            _STATE_BREAKS 0164  
              __end_of_I2C_Master_Start 0516                __end_of_I2C_Master_Write 0513  
                            _INTCONbits 000B                                init_ram0 079F  
                              intlevel1 0000                          ??_GetPrevCycle 00A2  
                      ___lldiv@dividend 00A6                 __end_of_I2C_Master_Init 06AE  
               __end_of_I2C_Master_Read 0536                 __end_of_I2C_Master_Wait 053E  
               __end_of_I2C_Master_Stop 0541                        ___lldiv@quotient 00AA  
                     I2C_Master_Write@d 00A2                            ?_eeprom_read 0000  
