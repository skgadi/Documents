

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Sun Nov 06 22:00:46 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataEEDATA,global,class=EEDATA,space=3,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
     9                           	psect	dataEEDATA,global,class=EEDATA,space=3,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text24,local,class=CODE,merge=1,delta=2
    24                           	psect	text29,local,class=CODE,merge=1,delta=2
    25                           	psect	text32,local,class=CODE,merge=1,delta=2
    26                           	psect	pa_nodes,global,class=CODE,delta=2
    27                           	dabs	1,0x190,60,_STATE_3
    28                           	dabs	1,0x1CC,30,_STATE_PERIODS
    29                           	dabs	1,0x20,12,_C
    30                           	dabs	1,0xA0,60,_STATE_1
    31                           	dabs	1,0x110,60,_STATE_2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  000E                     	;# 
    49  000F                     	;# 
    50  0010                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0014                     	;# 
    55  0015                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  0019                     	;# 
    61  001A                     	;# 
    62  001B                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001D                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  0086                     	;# 
    71  0087                     	;# 
    72  0088                     	;# 
    73  0089                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  008F                     	;# 
    78  0090                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0093                     	;# 
    82  0093                     	;# 
    83  0093                     	;# 
    84  0094                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  0105                     	;# 
    97  0107                     	;# 
    98  0108                     	;# 
    99  0109                     	;# 
   100  010C                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  0185                     	;# 
   106  0187                     	;# 
   107  0188                     	;# 
   108  0189                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  008F                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0093                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  0105                     	;# 
   175  0107                     	;# 
   176  0108                     	;# 
   177  0109                     	;# 
   178  010C                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0185                     	;# 
   184  0187                     	;# 
   185  0188                     	;# 
   186  0189                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0008                     	;# 
   276  0009                     	;# 
   277  000A                     	;# 
   278  000B                     	;# 
   279  000C                     	;# 
   280  000D                     	;# 
   281  000E                     	;# 
   282  000E                     	;# 
   283  000F                     	;# 
   284  0010                     	;# 
   285  0011                     	;# 
   286  0012                     	;# 
   287  0013                     	;# 
   288  0014                     	;# 
   289  0015                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0017                     	;# 
   293  0018                     	;# 
   294  0019                     	;# 
   295  001A                     	;# 
   296  001B                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001D                     	;# 
   300  001E                     	;# 
   301  001F                     	;# 
   302  0081                     	;# 
   303  0085                     	;# 
   304  0086                     	;# 
   305  0087                     	;# 
   306  0088                     	;# 
   307  0089                     	;# 
   308  008C                     	;# 
   309  008D                     	;# 
   310  008E                     	;# 
   311  008F                     	;# 
   312  0090                     	;# 
   313  0091                     	;# 
   314  0092                     	;# 
   315  0093                     	;# 
   316  0093                     	;# 
   317  0093                     	;# 
   318  0094                     	;# 
   319  0095                     	;# 
   320  0096                     	;# 
   321  0097                     	;# 
   322  0098                     	;# 
   323  0099                     	;# 
   324  009A                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  009F                     	;# 
   330  0105                     	;# 
   331  0107                     	;# 
   332  0108                     	;# 
   333  0109                     	;# 
   334  010C                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  0185                     	;# 
   340  0187                     	;# 
   341  0188                     	;# 
   342  0189                     	;# 
   343  018C                     	;# 
   344  018D                     	;# 
   345  0000                     	;# 
   346  0001                     	;# 
   347  0002                     	;# 
   348  0003                     	;# 
   349  0004                     	;# 
   350  0005                     	;# 
   351  0006                     	;# 
   352  0007                     	;# 
   353  0008                     	;# 
   354  0009                     	;# 
   355  000A                     	;# 
   356  000B                     	;# 
   357  000C                     	;# 
   358  000D                     	;# 
   359  000E                     	;# 
   360  000E                     	;# 
   361  000F                     	;# 
   362  0010                     	;# 
   363  0011                     	;# 
   364  0012                     	;# 
   365  0013                     	;# 
   366  0014                     	;# 
   367  0015                     	;# 
   368  0015                     	;# 
   369  0016                     	;# 
   370  0017                     	;# 
   371  0018                     	;# 
   372  0019                     	;# 
   373  001A                     	;# 
   374  001B                     	;# 
   375  001B                     	;# 
   376  001C                     	;# 
   377  001D                     	;# 
   378  001E                     	;# 
   379  001F                     	;# 
   380  0081                     	;# 
   381  0085                     	;# 
   382  0086                     	;# 
   383  0087                     	;# 
   384  0088                     	;# 
   385  0089                     	;# 
   386  008C                     	;# 
   387  008D                     	;# 
   388  008E                     	;# 
   389  008F                     	;# 
   390  0090                     	;# 
   391  0091                     	;# 
   392  0092                     	;# 
   393  0093                     	;# 
   394  0093                     	;# 
   395  0093                     	;# 
   396  0094                     	;# 
   397  0095                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  009F                     	;# 
   408  0105                     	;# 
   409  0107                     	;# 
   410  0108                     	;# 
   411  0109                     	;# 
   412  010C                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  0185                     	;# 
   418  0187                     	;# 
   419  0188                     	;# 
   420  0189                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000D                     	;# 
   437  000E                     	;# 
   438  000E                     	;# 
   439  000F                     	;# 
   440  0010                     	;# 
   441  0011                     	;# 
   442  0012                     	;# 
   443  0013                     	;# 
   444  0014                     	;# 
   445  0015                     	;# 
   446  0015                     	;# 
   447  0016                     	;# 
   448  0017                     	;# 
   449  0018                     	;# 
   450  0019                     	;# 
   451  001A                     	;# 
   452  001B                     	;# 
   453  001B                     	;# 
   454  001C                     	;# 
   455  001D                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  0081                     	;# 
   459  0085                     	;# 
   460  0086                     	;# 
   461  0087                     	;# 
   462  0088                     	;# 
   463  0089                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  008F                     	;# 
   468  0090                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0093                     	;# 
   473  0093                     	;# 
   474  0094                     	;# 
   475  0095                     	;# 
   476  0096                     	;# 
   477  0097                     	;# 
   478  0098                     	;# 
   479  0099                     	;# 
   480  009A                     	;# 
   481  009B                     	;# 
   482  009C                     	;# 
   483  009D                     	;# 
   484  009E                     	;# 
   485  009F                     	;# 
   486  0105                     	;# 
   487  0107                     	;# 
   488  0108                     	;# 
   489  0109                     	;# 
   490  010C                     	;# 
   491  010C                     	;# 
   492  010D                     	;# 
   493  010E                     	;# 
   494  010F                     	;# 
   495  0185                     	;# 
   496  0187                     	;# 
   497  0188                     	;# 
   498  0189                     	;# 
   499  018C                     	;# 
   500  018D                     	;# 
   501                           
   502                           	psect	idataBANK0
   503  0000                     __pidataBANK0:	
   504                           
   505                           	psect	idataEEDATA
   506  0000                     __pidataEEDATA:	
   507  0000                     _EE_STATES:	
   508                           ;initializer for _EE_STATES
   509                           
   510  0000  000A               	db	10
   511  0001  0008               	db	8
   512  0002  0009               	db	9
   513  0003  0002               	db	2
   514  0004  0000               	db	0
   515  0005  0000               	db	0
   516  0006  0000               	db	0
   517  0007  0003               	db	3
   518  0008  000C               	db	12
   519  0009  0009               	db	9
   520  000A  0000               	db	0
   521  000B  0000               	db	0
   522  000C  0000               	db	0
   523  000D  0000               	db	0
   524  000E  000A               	db	10
   525  000F  0001               	db	1
   526  0010  0009               	db	9
   527  0011  0000               	db	0
   528  0012  0020               	db	32
   529  0013  0000               	db	0
   530  0014  0000               	db	0
   531  0015  0003               	db	3
   532  0016  0001               	db	1
   533  0017  000D               	db	13
   534  0018  0000               	db	0
   535  0019  0000               	db	0
   536  001A  0000               	db	0
   537  001B  0000               	db	0
   538  001C  000A               	db	10
   539  001D  0009               	db	9
   540  001E  0008               	db	8
   541  001F  0010               	db	16
   542  0020  0000               	db	0
   543  0021  0000               	db	0
   544  0022  0000               	db	0
   545  0023  0003               	db	3
   546  0024  0009               	db	9
   547  0025  000A               	db	10
   548  0026  0000               	db	0
   549  0027  0000               	db	0
   550  0028  0000               	db	0
   551  0029  0000               	db	0
   552  002A  000A               	db	10
   553  002B  0009               	db	9
   554  002C  0001               	db	1
   555  002D  0000               	db	0
   556  002E  0000               	db	0
   557  002F  0020               	db	32
   558  0030  0000               	db	0
   559  0031  0003               	db	3
   560  0032  0009               	db	9
   561  0033  0011               	db	17
   562  0034  0000               	db	0
   563  0035  0000               	db	0
   564  0036  0000               	db	0
   565  0037  0000               	db	0
   566  0038  000A               	db	10
   567  0039  0000               	db	0
   568  003A  0000               	db	0
   569  003B  0000               	db	0
   570  003C  0000               	db	0
   571  003D  0000               	db	0
   572  003E  0000               	db	0
   573  003F  0003               	db	3
   574  0040  0000               	db	0
   575  0041  0000               	db	0
   576  0042  0000               	db	0
   577  0043  0000               	db	0
   578  0044  0000               	db	0
   579  0045  0000               	db	0
   580  0046  000A               	db	10
   581  0047  0000               	db	0
   582  0048  0000               	db	0
   583  0049  0000               	db	0
   584  004A  0000               	db	0
   585  004B  0000               	db	0
   586  004C  0000               	db	0
   587  004D  0003               	db	3
   588  004E  0000               	db	0
   589  004F  0000               	db	0
   590  0050  0000               	db	0
   591  0051  0000               	db	0
   592  0052  0000               	db	0
   593  0053  0000               	db	0
   594  0054  000A               	db	10
   595  0055  0000               	db	0
   596  0056  0000               	db	0
   597  0057  0000               	db	0
   598  0058  0000               	db	0
   599  0059  0000               	db	0
   600  005A  0000               	db	0
   601  005B  0003               	db	3
   602  005C  0000               	db	0
   603  005D  0000               	db	0
   604  005E  0000               	db	0
   605  005F  0000               	db	0
   606  0060  0000               	db	0
   607  0061  0000               	db	0
   608  0062  000A               	db	10
   609  0063  0000               	db	0
   610  0064  0000               	db	0
   611  0065  0000               	db	0
   612  0066  0000               	db	0
   613  0067  0000               	db	0
   614  0068  0000               	db	0
   615  0069  0003               	db	3
   616  006A  0000               	db	0
   617  006B  0000               	db	0
   618  006C  0000               	db	0
   619  006D  0000               	db	0
   620  006E  0000               	db	0
   621  006F  0000               	db	0
   622  0070  000A               	db	10
   623  0071  0000               	db	0
   624  0072  0000               	db	0
   625  0073  0000               	db	0
   626  0074  0000               	db	0
   627  0075  0000               	db	0
   628  0076  0000               	db	0
   629  0077  0003               	db	3
   630  0078  0000               	db	0
   631  0079  0000               	db	0
   632  007A  0000               	db	0
   633  007B  0000               	db	0
   634  007C  0000               	db	0
   635  007D  0000               	db	0
   636  007E  000A               	db	10
   637  007F  0000               	db	0
   638  0080  0000               	db	0
   639  0081  0000               	db	0
   640  0082  0000               	db	0
   641  0083  0000               	db	0
   642  0084  0000               	db	0
   643  0085  0003               	db	3
   644  0086  0000               	db	0
   645  0087  0000               	db	0
   646  0088  0000               	db	0
   647  0089  0000               	db	0
   648  008A  0000               	db	0
   649  008B  0000               	db	0
   650  008C  000A               	db	10
   651  008D  0000               	db	0
   652  008E  0000               	db	0
   653  008F  0000               	db	0
   654  0090  0000               	db	0
   655  0091  0000               	db	0
   656  0092  0000               	db	0
   657  0093  0003               	db	3
   658  0094  0000               	db	0
   659  0095  0000               	db	0
   660  0096  0000               	db	0
   661  0097  0000               	db	0
   662  0098  0000               	db	0
   663  0099  0000               	db	0
   664  009A  000A               	db	10
   665  009B  0000               	db	0
   666  009C  0000               	db	0
   667  009D  0000               	db	0
   668  009E  0000               	db	0
   669  009F  0000               	db	0
   670  00A0  0000               	db	0
   671  00A1  0003               	db	3
   672  00A2  0000               	db	0
   673  00A3  0000               	db	0
   674  00A4  0000               	db	0
   675  00A5  0000               	db	0
   676  00A6  0000               	db	0
   677  00A7  0000               	db	0
   678  00A8  0000               	db	0
   679  00A9  0000               	db	0
   680  00AA  0000               	db	0
   681  00AB  0000               	db	0
   682  00AC  0000               	db	0
   683  00AD  0000               	db	0
   684  00AE  0000               	db	0
   685  00AF  0000               	db	0
   686  00B0  0000               	db	0
   687  00B1  0000               	db	0
   688  00B2  0000               	db	0
   689  00B3  0000               	db	0
   690  00B4  0000               	db	0
   691  00B5  0000               	db	0
   692  00B6  0000               	db	0
   693  00B7  0000               	db	0
   694  00B8  0000               	db	0
   695  00B9  0000               	db	0
   696  00BA  0000               	db	0
   697  00BB  0000               	db	0
   698  00BC  0000               	db	0
   699  00BD  0000               	db	0
   700  00BE  0000               	db	0
   701  00BF  0000               	db	0
   702  00C0  0000               	db	0
   703  00C1  0000               	db	0
   704  00C2  0000               	db	0
   705  00C3  0000               	db	0
   706  00C4  0000               	db	0
   707  00C5  0000               	db	0
   708  00C6  0000               	db	0
   709  00C7  0000               	db	0
   710  00C8  0000               	db	0
   711  00C9  0000               	db	0
   712  00CA  0000               	db	0
   713  00CB  0000               	db	0
   714  00CC  0000               	db	0
   715  00CD  0000               	db	0
   716  00CE  0000               	db	0
   717  00CF  0000               	db	0
   718  00D0  0000               	db	0
   719  00D1  0000               	db	0
   720  00D2                     _EE_C:	
   721                           ;initializer for _EE_C
   722                           
   723  00D2  0001               	db	1
   724  00D3  0051               	db	81
   725  00D4  007F               	db	127
   726  00D5  0000               	db	0
   727  00D6  0027               	db	39
   728  00D7  000F               	db	15
   729  00D8  0000               	db	0
   730  00D9  0075               	db	117
   731  00DA  002F               	db	47
   732  00DB                     _EE_STATE_BREAKS:	
   733                           ;initializer for _EE_STATE_BREAKS
   734                           
   735  00DB  0008               	db	8
   736  00DC  000F               	db	15
   737  00DD  001E               	db	30
   738  0006                     _PORTB	set	6
   739  0007                     _PORTC	set	7
   740  0013                     _SSPBUF	set	19
   741  0014                     _SSPCON	set	20
   742  0028                     _RA0	set	40
   743  0029                     _RA1	set	41
   744  002A                     _RA2	set	42
   745  002B                     _RA3	set	43
   746  002C                     _RA4	set	44
   747  002D                     _RA5	set	45
   748  0039                     _RC1	set	57
   749  0093                     _SSPADD	set	147
   750  0091                     _SSPCON2	set	145
   751  0094                     _SSPSTAT	set	148
   752  0085                     _TRISAbits	set	133
   753  048D                     _ACKDT	set	1165
   754  048C                     _ACKEN	set	1164
   755  048A                     _PEN	set	1162
   756  048B                     _RCEN	set	1163
   757  0488                     _SEN	set	1160
   758  043B                     _TRISC3	set	1083
   759  043C                     _TRISC4	set	1084
   760  010D                     _EEADR	set	269
   761  010C                     _EEDATA	set	268
   762  0188                     _ANSEL	set	392
   763  0189                     _ANSELH	set	393
   764  018C                     _EECON1	set	396
   765  0C60                     _RD	set	3168
   766  0C61                     _WR	set	3169
   767                           
   768                           	psect	strings
   769  0800                     __pstrings:	
   770  0800                     stringtab:	
   771  0800                     __stringtab:	
   772  0800                     stringcode:	
   773                           ;	String table - string pointers are 1 byte each
   774                           
   775  0800                     stringdir:	
   776  0800  3008               	movlw	high stringdir
   777  0801  008A               	movwf	10
   778  0802  0804               	movf	4,w
   779  0803  0A84               	incf	4,f
   780  0804  0782               	addwf	2,f
   781  0805                     __stringbase:	
   782  0805  3400               	retlw	0
   783  0806                     __end_of__stringtab:	
   784  0806                     STR_2:	
   785  0806  3443               	retlw	67	;'C'
   786  0807  342D               	retlw	45	;'-'
   787  0808  3453               	retlw	83	;'S'
   788  0809  3474               	retlw	116	;'t'
   789  080A  342D               	retlw	45	;'-'
   790  080B  3453               	retlw	83	;'S'
   791  080C  3465               	retlw	101	;'e'
   792  080D  342F               	retlw	47	;'/'
   793  080E  3450               	retlw	80	;'P'
   794  080F  3472               	retlw	114	;'r'
   795  0810  3420               	retlw	32	;' '
   796  0811  3400               	retlw	0
   797  0812                     STR_1:	
   798  0812  3420               	retlw	32	;' '
   799  0813  3420               	retlw	32	;' '
   800  0814  3420               	retlw	32	;' '
   801  0815  342D               	retlw	45	;'-'
   802  0816  3420               	retlw	32	;' '
   803  0817  3420               	retlw	32	;' '
   804  0818  3420               	retlw	32	;' '
   805  0819  3400               	retlw	0
   806                           
   807                           ; #config settings
   808  0000                     
   809                           	psect	cinit
   810  07E8                     start_initialization:	
   811  07E8                     __initialization:	
   812                           
   813                           ;initializer for _PREV_CYCLE_TYPE
   814  07E8  3002               	movlw	2
   815  07E9  00EF               	movwf	__pdataBANK0& (0+127)
   816                           
   817                           ; Clear objects allocated to BANK1
   818  07EA  1683               	bsf	3,5	;RP0=1, select bank1
   819  07EB  01DC               	clrf	__pbssBANK1& (0+127)
   820  07EC  01DD               	clrf	(__pbssBANK1+1)& (0+127)
   821  07ED  01DE               	clrf	(__pbssBANK1+2)& (0+127)
   822  07EE  01DF               	clrf	(__pbssBANK1+3)& (0+127)
   823  07EF  01E0               	clrf	(__pbssBANK1+4)& (0+127)
   824  07F0  01E1               	clrf	(__pbssBANK1+5)& (0+127)
   825  07F1  01E2               	clrf	(__pbssBANK1+6)& (0+127)
   826  07F2  01E3               	clrf	(__pbssBANK1+7)& (0+127)
   827  07F3  01E4               	clrf	(__pbssBANK1+8)& (0+127)
   828  07F4  01E5               	clrf	(__pbssBANK1+9)& (0+127)
   829  07F5  01E6               	clrf	(__pbssBANK1+10)& (0+127)
   830                           
   831                           ; Clear objects allocated to BANK0
   832  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   833  07F7  01EA               	clrf	__pbssBANK0& (0+127)
   834  07F8  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   835  07F9  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   836  07FA  01ED               	clrf	(__pbssBANK0+3)& (0+127)
   837  07FB  01EE               	clrf	(__pbssBANK0+4)& (0+127)
   838  07FC                     end_of_initialization:	
   839                           ;End of C runtime variable initialization code
   840                           
   841  07FC                     __end_of__initialization:	
   842  07FC  0183               	clrf	3
   843  07FD  120A  118A  28AC   	ljmp	_main	;jump to C main() function
   844                           
   845                           	psect	bssEEDATA
   846  00DE                     __pbssEEDATA:	
   847  00DE                     _EE_C_D:	
   848  00DE  0000               	db	0
   849                           
   850                           	psect	dataEEDATA
   851  0000                     __pdataEEDATA:	
   852                           
   853                           	psect	bssBANK0
   854  006A                     __pbssBANK0:	
   855  006A                     _S:	
   856  006A                     	ds	4
   857  006E                     _CYCLE_TYPE:	
   858  006E                     	ds	1
   859                           
   860                           	psect	dataBANK0
   861  006F                     __pdataBANK0:	
   862  006F                     _PREV_CYCLE_TYPE:	
   863  006F                     	ds	1
   864                           
   865                           	psect	bssBANK1
   866  00DC                     __pbssBANK1:	
   867  00DC                     _STATE_CUMULATIVE_PERIODS:	
   868  00DC                     	ds	6
   869  00E2                     _STATE_BREAKS:	
   870  00E2                     	ds	3
   871  00E5                     _CONFIG0:	
   872  00E5                     	ds	1
   873  00E6                     _C_D:	
   874  00E6                     	ds	1
   875                           
   876                           	psect	inittext
   877  0004                     init_fetch0:	
   878                           ;	Called with low address in FSR and high address in W
   879                           
   880  0004  087E               	movf	126,w
   881  0005  008A               	movwf	10
   882  0006  087F               	movf	127,w
   883  0007  0082               	movwf	2
   884  0008                     init_ram0:	
   885                           ;Called with:
   886                           ;	high address of idata address in btemp 
   887                           ;	low address of idata address in btemp+1 
   888                           ;	low address of data in FSR
   889                           ;	high address + 1 of data in btemp-1
   890                           
   891  0008  2004  120A  118A   	fcall	init_fetch0
   892  000B  0080               	movwf	0
   893  000C  0A84               	incf	4,f
   894  000D  0804               	movf	4,w
   895  000E  067D               	xorwf	125,w
   896  000F  1903               	btfsc	3,2
   897  0010  3400               	retlw	0
   898  0011  0AFF               	incf	127,f
   899  0012  1903               	btfsc	3,2
   900  0013  0AFE               	incf	126,f
   901  0014  2808               	goto	init_ram0
   902                           
   903                           	psect	cstackCOMMON
   904  0070                     __pcstackCOMMON:	
   905  0070                     ?_Lcd_Delay5500us:	
   906  0070                     ??_Lcd_Delay5500us:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_Lcd_Delay5us:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ??_Lcd_Delay5us:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_Lcd_Command:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ??_Lcd_Command:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_Lcd_CharCP:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ??_Lcd_CharCP:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_eeprom_read:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ??_eeprom_read:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_GetPrevCycle:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ??_GetPrevCycle:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?_Lcd_Init:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?_ReadVars:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_I2C_Master_Wait:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ??_I2C_Master_Wait:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_I2C_Master_Start:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ??_I2C_Master_Start:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_I2C_Master_Stop:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ??_I2C_Master_Stop:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_I2C_Master_Write:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?_GetCumulativePeriodsForStates:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_GetCycle:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_SwitchGPS:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ??_SwitchGPS:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_main:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_I2C_Master_Read:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?___wmul:	
   985                           ; 2 bytes @ 0x0
   986                           
   987  0070                     ?___ftpack:	
   988                           ; 2 bytes @ 0x0
   989                           
   990  0070                     ?___lmul:	
   991                           ; 3 bytes @ 0x0
   992                           
   993  0070                     ?___aldiv:	
   994                           ; 4 bytes @ 0x0
   995                           
   996  0070                     ?___almod:	
   997                           ; 4 bytes @ 0x0
   998                           
   999  0070                     ?___lldiv:	
  1000                           ; 4 bytes @ 0x0
  1001                           
  1002  0070                     GetPrevCycle@PrevCycle:	
  1003                           ; 4 bytes @ 0x0
  1004                           
  1005  0070                     SwitchGPS@a:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     eeprom_read@addr:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     I2C_Master_Write@d:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     I2C_Master_Read@a:	
  1015                           ; 2 bytes @ 0x0
  1016                           
  1017  0070                     ___wmul@multiplier:	
  1018                           ; 2 bytes @ 0x0
  1019                           
  1020  0070                     ___ftpack@arg:	
  1021                           ; 2 bytes @ 0x0
  1022                           
  1023  0070                     ___lmul@multiplier:	
  1024                           ; 3 bytes @ 0x0
  1025                           
  1026  0070                     ___aldiv@divisor:	
  1027                           ; 4 bytes @ 0x0
  1028                           
  1029  0070                     ___almod@divisor:	
  1030                           ; 4 bytes @ 0x0
  1031                           
  1032  0070                     ___lldiv@divisor:	
  1033                           ; 4 bytes @ 0x0
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x0
  1037  0070                     	ds	1
  1038  0071                     Lcd_CharCP@c:	
  1039  0071                     Lcd_Command@command:	
  1040                           ; 1 bytes @ 0x1
  1041                           
  1042  0071                     GetPrevCycle@cycle:	
  1043                           ; 1 bytes @ 0x1
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x1
  1047  0071                     	ds	1
  1048  0072                     ??_Lcd_Init:	
  1049  0072                     ?_Lcd_Text:	
  1050                           ; 1 bytes @ 0x2
  1051                           
  1052  0072                     ??_I2C_Master_Write:	
  1053                           ; 1 bytes @ 0x2
  1054                           
  1055  0072                     ??_I2C_Master_Read:	
  1056                           ; 1 bytes @ 0x2
  1057                           
  1058  0072                     ??_GetCumulativePeriodsForStates:	
  1059                           ; 1 bytes @ 0x2
  1060                           
  1061  0072                     ??_GetCycle:	
  1062                           ; 1 bytes @ 0x2
  1063                           
  1064  0072                     Lcd_Init@data:	
  1065                           ; 1 bytes @ 0x2
  1066                           
  1067  0072                     Lcd_Text@x:	
  1068                           ; 1 bytes @ 0x2
  1069                           
  1070  0072                     I2C_Master_Read@temp:	
  1071                           ; 1 bytes @ 0x2
  1072                           
  1073  0072                     ___wmul@multiplicand:	
  1074                           ; 2 bytes @ 0x2
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x2
  1078  0072                     	ds	1
  1079  0073                     Lcd_Text@buffer:	
  1080  0073                     ___ftpack@exp:	
  1081                           ; 1 bytes @ 0x3
  1082                           
  1083                           
  1084                           ; 1 bytes @ 0x3
  1085  0073                     	ds	1
  1086  0074                     ?_I2C_ReadAtAddress:	
  1087  0074                     ??_Lcd_Text:	
  1088                           ; 1 bytes @ 0x4
  1089                           
  1090  0074                     ??___wmul:	
  1091                           ; 1 bytes @ 0x4
  1092                           
  1093  0074                     Lcd_Text@y:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096  0074                     I2C_ReadAtAddress@IntAdd:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099  0074                     ___ftpack@sign:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102  0074                     ___wmul@product:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  0074                     ___lmul@multiplicand:	
  1106                           ; 2 bytes @ 0x4
  1107                           
  1108  0074                     ___aldiv@dividend:	
  1109                           ; 4 bytes @ 0x4
  1110                           
  1111  0074                     ___almod@dividend:	
  1112                           ; 4 bytes @ 0x4
  1113                           
  1114  0074                     ___lldiv@dividend:	
  1115                           ; 4 bytes @ 0x4
  1116                           
  1117                           
  1118                           ; 4 bytes @ 0x4
  1119  0074                     	ds	1
  1120  0075                     ??_I2C_ReadAtAddress:	
  1121  0075                     ??___ftpack:	
  1122                           ; 1 bytes @ 0x5
  1123                           
  1124  0075                     Lcd_Text@data:	
  1125                           ; 1 bytes @ 0x5
  1126                           
  1127  0075                     I2C_ReadAtAddress@data:	
  1128                           ; 1 bytes @ 0x5
  1129                           
  1130                           
  1131                           ; 1 bytes @ 0x5
  1132  0075                     	ds	1
  1133  0076                     I2C_ReadAtAddress@DevID:	
  1134  0076                     GetCumulativePeriodsForStates@j:	
  1135                           ; 1 bytes @ 0x6
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x6
  1139  0076                     	ds	1
  1140  0077                     GetCumulativePeriodsForStates@i:	
  1141                           
  1142                           ; 1 bytes @ 0x7
  1143  0077                     	ds	1
  1144  0078                     ??___lmul:	
  1145  0078                     ??___aldiv:	
  1146                           ; 1 bytes @ 0x8
  1147                           
  1148  0078                     ??___almod:	
  1149                           ; 1 bytes @ 0x8
  1150                           
  1151  0078                     ??___lldiv:	
  1152                           ; 1 bytes @ 0x8
  1153                           
  1154  0078                     ?___awtoft:	
  1155                           ; 1 bytes @ 0x8
  1156                           
  1157  0078                     ___aldiv@counter:	
  1158                           ; 3 bytes @ 0x8
  1159                           
  1160  0078                     ___almod@counter:	
  1161                           ; 1 bytes @ 0x8
  1162                           
  1163  0078                     ___awtoft@c:	
  1164                           ; 1 bytes @ 0x8
  1165                           
  1166  0078                     ___lmul@product:	
  1167                           ; 2 bytes @ 0x8
  1168                           
  1169  0078                     ___lldiv@quotient:	
  1170                           ; 4 bytes @ 0x8
  1171                           
  1172                           
  1173                           ; 4 bytes @ 0x8
  1174  0078                     	ds	1
  1175  0079                     ___aldiv@sign:	
  1176  0079                     ___almod@sign:	
  1177                           ; 1 bytes @ 0x9
  1178                           
  1179                           
  1180                           ; 1 bytes @ 0x9
  1181  0079                     	ds	1
  1182  007A                     ___aldiv@quotient:	
  1183                           
  1184                           ; 4 bytes @ 0xA
  1185  007A                     	ds	1
  1186  007B                     ??___awtoft:	
  1187  007B                     ___awtoft@sign:	
  1188                           ; 1 bytes @ 0xB
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0xB
  1192  007B                     	ds	1
  1193  007C                     GetCycle@PrevCycle:	
  1194  007C                     ___lldiv@counter:	
  1195                           ; 1 bytes @ 0xC
  1196                           
  1197                           
  1198                           ; 1 bytes @ 0xC
  1199  007C                     	ds	1
  1200  007D                     GetCycle@i:	
  1201                           
  1202                           ; 1 bytes @ 0xD
  1203  007D                     	ds	1
  1204  007E                     ??_Lcd_WriteChar:	
  1205  007E                     ??___bmul:	
  1206                           ; 1 bytes @ 0xE
  1207                           
  1208                           
  1209                           	psect	cstackBANK0
  1210  002C                     __pcstackBANK0:	
  1211                           ; 1 bytes @ 0xE
  1212                           
  1213  002C                     ?_I2C_Master_Init:	
  1214  002C                     ?___bmul:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  002C                     ?___ftmul:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  002C                     ?_ReadRTCAsSec:	
  1221                           ; 3 bytes @ 0x0
  1222                           
  1223  002C                     ___bmul@multiplicand:	
  1224                           ; 4 bytes @ 0x0
  1225                           
  1226  002C                     ___ftmul@f1:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  002C                     I2C_Master_Init@c:	
  1230                           ; 3 bytes @ 0x0
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0x0
  1234  002C                     	ds	1
  1235  002D                     ___bmul@product:	
  1236                           
  1237                           ; 1 bytes @ 0x1
  1238  002D                     	ds	1
  1239  002E                     ___bmul@multiplier:	
  1240                           
  1241                           ; 1 bytes @ 0x2
  1242  002E                     	ds	1
  1243  002F                     ?_Lcd_WriteChar:	
  1244  002F                     ??_ReadVars:	
  1245                           ; 1 bytes @ 0x3
  1246                           
  1247  002F                     Lcd_WriteChar@x:	
  1248                           ; 1 bytes @ 0x3
  1249                           
  1250  002F                     ___ftmul@f2:	
  1251                           ; 1 bytes @ 0x3
  1252                           
  1253                           
  1254                           ; 3 bytes @ 0x3
  1255  002F                     	ds	1
  1256  0030                     ??_ReadRTCAsSec:	
  1257  0030                     ??_I2C_Master_Init:	
  1258                           ; 1 bytes @ 0x4
  1259                           
  1260  0030                     Lcd_WriteChar@c:	
  1261                           ; 1 bytes @ 0x4
  1262                           
  1263                           
  1264                           ; 1 bytes @ 0x4
  1265  0030                     	ds	1
  1266  0031                     Lcd_WriteChar@y:	
  1267                           
  1268                           ; 1 bytes @ 0x5
  1269  0031                     	ds	1
  1270  0032                     ??___ftmul:	
  1271  0032                     Lcd_WriteChar@data:	
  1272                           ; 1 bytes @ 0x6
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x6
  1276  0032                     	ds	1
  1277  0033                     ?_WriteLongInt:	
  1278  0033                     ?_Lcd_Disp_Bin:	
  1279                           ; 1 bytes @ 0x7
  1280                           
  1281  0033                     WriteLongInt@x:	
  1282                           ; 1 bytes @ 0x7
  1283                           
  1284  0033                     Lcd_Disp_Bin@x:	
  1285                           ; 1 bytes @ 0x7
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0x7
  1289  0033                     	ds	1
  1290  0034                     Lcd_Disp_Bin@val:	
  1291  0034                     WriteLongInt@Val:	
  1292                           ; 1 bytes @ 0x8
  1293                           
  1294                           
  1295                           ; 4 bytes @ 0x8
  1296  0034                     	ds	1
  1297  0035                     Lcd_Disp_Bin@DispChar:	
  1298  0035                     ___ftmul@exp:	
  1299                           ; 1 bytes @ 0x9
  1300                           
  1301                           
  1302                           ; 1 bytes @ 0x9
  1303  0035                     	ds	1
  1304  0036                     ??_Lcd_Disp_Bin:	
  1305  0036                     ___ftmul@f3_as_product:	
  1306                           ; 1 bytes @ 0xA
  1307                           
  1308                           
  1309                           ; 3 bytes @ 0xA
  1310  0036                     	ds	1
  1311  0037                     Lcd_Disp_Bin@y:	
  1312  0037                     _ReadRTCAsSec$889:	
  1313                           ; 1 bytes @ 0xB
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0xB
  1317  0037                     	ds	1
  1318  0038                     WriteLongInt@size:	
  1319  0038                     Lcd_Disp_Bin@i:	
  1320                           ; 1 bytes @ 0xC
  1321                           
  1322                           
  1323                           ; 1 bytes @ 0xC
  1324  0038                     	ds	1
  1325  0039                     WriteLongInt@Sign:	
  1326  0039                     ___ftmul@cntr:	
  1327                           ; 1 bytes @ 0xD
  1328                           
  1329  0039                     ReadRTCAsSec@Out:	
  1330                           ; 1 bytes @ 0xD
  1331                           
  1332                           
  1333                           ; 4 bytes @ 0xD
  1334  0039                     	ds	1
  1335  003A                     ??_WriteLongInt:	
  1336  003A                     ___ftmul@sign:	
  1337                           ; 1 bytes @ 0xE
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0xE
  1341  003A                     	ds	1
  1342  003B                     ?___fttol:	
  1343  003B                     WriteLongInt@POS:	
  1344                           ; 4 bytes @ 0xF
  1345                           
  1346  003B                     ___fttol@f1:	
  1347                           ; 1 bytes @ 0xF
  1348                           
  1349                           
  1350                           ; 3 bytes @ 0xF
  1351  003B                     	ds	1
  1352  003C                     WriteLongInt@y:	
  1353                           
  1354                           ; 1 bytes @ 0x10
  1355  003C                     	ds	1
  1356  003D                     ReadRTCAsSec@TempVar000:	
  1357                           
  1358                           ; 1 bytes @ 0x11
  1359  003D                     	ds	1
  1360  003E                     ReadVars@j:	
  1361                           
  1362                           ; 1 bytes @ 0x12
  1363  003E                     	ds	1
  1364  003F                     ??___fttol:	
  1365  003F                     ReadVars@i:	
  1366                           ; 1 bytes @ 0x13
  1367                           
  1368                           
  1369                           ; 1 bytes @ 0x13
  1370  003F                     	ds	3
  1371  0042                     ___fttol@sign1:	
  1372                           
  1373                           ; 1 bytes @ 0x16
  1374  0042                     	ds	1
  1375  0043                     ___fttol@lval:	
  1376                           
  1377                           ; 4 bytes @ 0x17
  1378  0043                     	ds	4
  1379  0047                     ___fttol@exp1:	
  1380                           
  1381                           ; 1 bytes @ 0x1B
  1382  0047                     	ds	1
  1383  0048                     ??_main:	
  1384                           
  1385                           ; 1 bytes @ 0x1C
  1386  0048                     	ds	10
  1387  0052                     main@GPS_On_Time_Counter:	
  1388                           
  1389                           ; 2 bytes @ 0x26
  1390  0052                     	ds	2
  1391  0054                     main@TimeSinceTheStartOfCycle:	
  1392                           
  1393                           ; 4 bytes @ 0x28
  1394  0054                     	ds	4
  1395  0058                     main@k:	
  1396                           
  1397                           ; 2 bytes @ 0x2C
  1398  0058                     	ds	2
  1399  005A                     main@StateSecRemaining:	
  1400                           
  1401                           ; 1 bytes @ 0x2E
  1402  005A                     	ds	1
  1403  005B                     main@State2OnOffCounter:	
  1404                           
  1405                           ; 2 bytes @ 0x2F
  1406  005B                     	ds	2
  1407  005D                     main@StateAudioNormalOnOffCounter:	
  1408                           
  1409                           ; 2 bytes @ 0x31
  1410  005D                     	ds	2
  1411  005F                     main@StateAudioSplOnOffCounter:	
  1412                           
  1413                           ; 2 bytes @ 0x33
  1414  005F                     	ds	2
  1415  0061                     main@DiffInSecond:	
  1416                           
  1417                           ; 1 bytes @ 0x35
  1418  0061                     	ds	1
  1419  0062                     main@j:	
  1420                           
  1421                           ; 1 bytes @ 0x36
  1422  0062                     	ds	1
  1423  0063                     main@SecError:	
  1424                           
  1425                           ; 2 bytes @ 0x37
  1426  0063                     	ds	2
  1427  0065                     main@OutForThePorts:	
  1428                           
  1429                           ; 2 bytes @ 0x39
  1430  0065                     	ds	2
  1431  0067                     main@i:	
  1432                           
  1433                           ; 1 bytes @ 0x3B
  1434  0067                     	ds	1
  1435  0068                     main@l:	
  1436                           
  1437                           ; 2 bytes @ 0x3C
  1438  0068                     	ds	2
  1439                           
  1440                           	psect	maintext
  1441  00AC                     __pmaintext:	
  1442 ;;
  1443 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  1444 ;;
  1445 ;; *************** function _main *****************
  1446 ;; Defined at:
  1447 ;;		line 4 in file "main.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  GPSData         6    0        unsigned char [6]
  1452 ;;  TimeSinceThe    4   40[BANK0 ] long 
  1453 ;;  l               2   60[BANK0 ] unsigned short 
  1454 ;;  OutForThePor    2   57[BANK0 ] unsigned char [2]
  1455 ;;  SecError        2   55[BANK0 ] short 
  1456 ;;  StateAudioSp    2   51[BANK0 ] unsigned short 
  1457 ;;  StateAudioNo    2   49[BANK0 ] unsigned short 
  1458 ;;  State2OnOffC    2   47[BANK0 ] unsigned short 
  1459 ;;  k               2   44[BANK0 ] unsigned short 
  1460 ;;  GPS_On_Time_    2   38[BANK0 ] unsigned short 
  1461 ;;  i               1   59[BANK0 ] unsigned char 
  1462 ;;  j               1   54[BANK0 ] unsigned char 
  1463 ;;  DiffInSecond    1   53[BANK0 ] unsigned char 
  1464 ;;  StateSecRema    1   46[BANK0 ] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : B00/0
  1471 ;;		On exit  : B00/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         0      24       0       0       0
  1476 ;;      Temps:          0      10       0       0       0
  1477 ;;      Totals:         0      34       0       0       0
  1478 ;;Total ram usage:       34 bytes
  1479 ;; Hardware stack levels required when called:    4
  1480 ;; This function calls:
  1481 ;;		_GetCumulativePeriodsForStates
  1482 ;;		_GetCycle
  1483 ;;		_I2C_Master_Init
  1484 ;;		_Lcd_Disp_Bin
  1485 ;;		_Lcd_Init
  1486 ;;		_Lcd_Text
  1487 ;;		_ReadRTCAsSec
  1488 ;;		_ReadVars
  1489 ;;		_SwitchGPS
  1490 ;;		_WriteLongInt
  1491 ;;		___almod
  1492 ;;		___awtoft
  1493 ;;		___ftmul
  1494 ;;		___fttol
  1495 ;; This function is called by:
  1496 ;;		Startup code after reset
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _main
  1502  00AC                     _main:	
  1503                           
  1504                           ;main.c: 7: Lcd_Init();
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1508  00AC  120A  118A  25D5  120A  118A  	fcall	_Lcd_Init
  1509                           
  1510                           ;main.c: 9: ReadVars();
  1511  00B1  120A  118A  26CD  120A  118A  	fcall	_ReadVars
  1512                           
  1513                           ;main.c: 10: STATE_BREAKS[3-1] = 0;
  1514  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  1515  00B7  01E4               	clrf	(_STATE_BREAKS^(0+128)+2)	;volatile
  1516                           
  1517                           ;main.c: 11: GetCumulativePeriodsForStates();
  1518  00B8  120A  158A  256B  120A  118A  	fcall	_GetCumulativePeriodsForStates
  1519                           
  1520                           ;main.c: 16: I2C_Master_Init(400000);
  1521  00BD  3000               	movlw	0
  1522  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1523  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1524  00C0  00AF               	movwf	I2C_Master_Init@c+3
  1525  00C1  3006               	movlw	6
  1526  00C2  00AE               	movwf	I2C_Master_Init@c+2
  1527  00C3  301A               	movlw	26
  1528  00C4  00AD               	movwf	I2C_Master_Init@c+1
  1529  00C5  3080               	movlw	128
  1530  00C6  00AC               	movwf	I2C_Master_Init@c
  1531  00C7  120A  118A  2037  120A  118A  	fcall	_I2C_Master_Init
  1532                           
  1533                           ;main.c: 17: S = ReadRTCAsSec();
  1534  00CC  120A  158A  269A  120A  118A  	fcall	_ReadRTCAsSec
  1535  00D1  23FD               	fcall	PL26	;call to abstracted procedure
  1536  00D2  300D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1537                           
  1538                           ;main.c: 22: Lcd_Text(1,1,"   -   ");
  1539  00D3  01F2               	clrf	Lcd_Text@x
  1540  00D4  0AF2               	incf	Lcd_Text@x,f
  1541  00D5  00F3               	movwf	Lcd_Text@buffer
  1542  00D6  3001               	movlw	1
  1543  00D7  120A  118A  250C  120A  118A  	fcall	_Lcd_Text
  1544  00DC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1545                           
  1546                           ;main.c: 23: Lcd_Text(2,1,"C-St-Se/Pr ");
  1547  00DD  01F2               	clrf	Lcd_Text@x
  1548  00DE  0AF2               	incf	Lcd_Text@x,f
  1549  00DF  00F3               	movwf	Lcd_Text@buffer
  1550  00E0  3002               	movlw	2
  1551  00E1  120A  118A  250C  120A  118A  	fcall	_Lcd_Text
  1552                           
  1553                           ;main.c: 26: UINT8 i, j, StateSecRemaining;
  1554                           ;main.c: 27: UINT16 k, l, State2OnOffCounter=0, StateAudioNormalOnOffCounter=0, StateAud
      +                          ioSplOnOffCounter=0;
  1555  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1556  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1557  00E8  01DB               	clrf	main@State2OnOffCounter
  1558  00E9  01DC               	clrf	main@State2OnOffCounter+1
  1559  00EA  01DD               	clrf	main@StateAudioNormalOnOffCounter
  1560  00EB  01DE               	clrf	main@StateAudioNormalOnOffCounter+1
  1561  00EC  01DF               	clrf	main@StateAudioSplOnOffCounter
  1562  00ED  01E0               	clrf	main@StateAudioSplOnOffCounter+1
  1563  00EE                     l2570:	
  1564                           
  1565                           ;main.c: 36: GetCycle();
  1566  00EE  120A  158A  25AF  120A  118A  	fcall	_GetCycle
  1567                           
  1568                           ;main.c: 38: if (CONFIG0 & 0x01)
  1569  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1570  00F4  1C65               	btfss	_CONFIG0^(0+128),0	;volatile
  1571  00F5  2914               	goto	l2578
  1572                           
  1573                           ;main.c: 39: S = ReadRTCAsSec() + C_D;
  1574  00F6  120A  158A  269A  120A  118A  	fcall	_ReadRTCAsSec
  1575  00FB  23FD  120A  118A   	fcall	PL26	;call to abstracted procedure
  1576  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  1577  00FF  0866               	movf	_C_D^(0+128),w	;volatile
  1578  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0101  07EA               	addwf	_S,f	;volatile
  1580  0102  01FF               	clrf	127
  1581  0103  3980               	andlw	128
  1582  0104  1D03               	skipz
  1583  0105  03FF               	decf	127,f
  1584  0106  087F               	movf	127,w
  1585  0107  1803               	skipnc
  1586  0108  0A7F               	incf	127,w
  1587  0109  1D03               	skipz
  1588  010A  07EB               	addwf	_S+1,f	;volatile
  1589  010B  087F               	movf	127,w
  1590  010C  1803               	skipnc
  1591  010D  0A7F               	incf	127,w
  1592  010E  1D03               	skipz
  1593  010F  07EC               	addwf	_S+2,f	;volatile
  1594  0110  087F               	movf	127,w
  1595  0111  1803               	skipnc
  1596  0112  0A7F               	incf	127,w
  1597  0113  07ED               	addwf	_S+3,f	;volatile
  1598  0114                     l2578:	
  1599                           
  1600                           ;main.c: 40: if (CONFIG0 & 0x02) {
  1601  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0115  1CE5               	btfss	_CONFIG0^(0+128),1	;volatile
  1603  0116  2921               	goto	l2584
  1604                           
  1605                           ;main.c: 41: SwitchGPS(1);
  1606  0117  3001               	movlw	1
  1607  0118  120A  158A  23C0  120A  118A  	fcall	_SwitchGPS
  1608                           
  1609                           ;main.c: 42: GPS_On_Time_Counter++;
  1610  011D  0AD2               	incf	main@GPS_On_Time_Counter,f
  1611  011E  1903               	skipnz
  1612  011F  0AD3               	incf	main@GPS_On_Time_Counter+1,f
  1613                           
  1614                           ;main.c: 43: } else {
  1615  0120  2929               	goto	l2590
  1616  0121                     l2584:	
  1617                           
  1618                           ;main.c: 44: SwitchGPS(0);
  1619  0121  3000               	movlw	0
  1620  0122  120A  158A  23C0  120A  118A  	fcall	_SwitchGPS
  1621                           
  1622                           ;main.c: 45: GPS_On_Time_Counter=0;
  1623  0127  01D2               	clrf	main@GPS_On_Time_Counter
  1624  0128  01D3               	clrf	main@GPS_On_Time_Counter+1
  1625  0129                     l2590:	
  1626                           
  1627                           ;main.c: 49: }
  1628                           ;main.c: 51: (CYCLE_TYPE==0) ? (i = 0) : (i = STATE_BREAKS[CYCLE_TYPE-1]);
  1629  0129  086E               	movf	_CYCLE_TYPE,w	;volatile
  1630  012A  1D03               	btfss	3,2
  1631  012B  292E               	goto	l2594
  1632  012C  01E7               	clrf	main@i
  1633  012D  2934               	goto	l2596
  1634  012E                     l2594:	
  1635  012E  086E               	movf	_CYCLE_TYPE,w
  1636  012F  3EE1               	addlw	(low ((_STATE_BREAKS| 0+255)))& (0+255)
  1637  0130  0084               	movwf	4
  1638  0131  1383               	bcf	3,7	;select IRP bank1
  1639  0132  0800               	movf	0,w
  1640  0133  00E7               	movwf	main@i
  1641  0134                     l2596:	
  1642                           
  1643                           ;main.c: 53: if (C[PREV_CYCLE_TYPE] < C[PREV_CYCLE_TYPE])
  1644  0134  086F               	movf	_PREV_CYCLE_TYPE,w	;volatile
  1645  0135  00C8               	movwf	??_main
  1646  0136  3001               	movlw	1
  1647  0137  1003               	clrc
  1648  0138                     L1:	
  1649  0138  0DC8               	rlf	??_main,f
  1650  0139  3EFF               	addlw	-1
  1651  013A  1003               	clrc
  1652  013B  1D03               	skipz
  1653  013C  2938               	goto	L1
  1654  013D  0D48               	rlf	??_main,w
  1655  013E  3E20               	addlw	32
  1656  013F  0084               	movwf	4
  1657  0140  1383               	bcf	3,7	;select IRP bank0
  1658  0141  0800               	movf	0,w
  1659  0142  00C9               	movwf	??_main+1
  1660  0143  0A84               	incf	4,f
  1661  0144  0800               	movf	0,w
  1662  0145  00CA               	movwf	??_main+2
  1663  0146  0A84               	incf	4,f
  1664  0147  0800               	movf	0,w
  1665  0148  00CB               	movwf	??_main+3
  1666  0149  0A84               	incf	4,f
  1667  014A  0800               	movf	0,w
  1668  014B  00CC               	movwf	??_main+4
  1669  014C  086F               	movf	_PREV_CYCLE_TYPE,w	;volatile
  1670  014D  00CD               	movwf	??_main+5
  1671  014E  3001               	movlw	1
  1672  014F  1003               	clrc
  1673  0150                     L2:	
  1674  0150  0DCD               	rlf	??_main+5,f
  1675  0151  3EFF               	addlw	-1
  1676  0152  1003               	clrc
  1677  0153  1D03               	skipz
  1678  0154  2950               	goto	L2
  1679  0155  0D4D               	rlf	??_main+5,w
  1680  0156  3E20               	addlw	32
  1681  0157  0084               	movwf	4
  1682  0158  0800               	movf	0,w
  1683  0159  00CE               	movwf	??_main+6
  1684  015A  0A84               	incf	4,f
  1685  015B  0800               	movf	0,w
  1686  015C  00CF               	movwf	??_main+7
  1687  015D  0A84               	incf	4,f
  1688  015E  0800               	movf	0,w
  1689  015F  00D0               	movwf	??_main+8
  1690  0160  0A84               	incf	4,f
  1691  0161  0800               	movf	0,w
  1692  0162  00D1               	movwf	??_main+9
  1693  0163  3A80               	xorlw	128
  1694  0164  00FF               	movwf	127
  1695  0165  084C               	movf	??_main+4,w
  1696  0166  3A80               	xorlw	128
  1697  0167  027F               	subwf	127,w
  1698  0168  1D03               	skipz
  1699  0169  2974               	goto	u2963
  1700  016A  084B               	movf	??_main+3,w
  1701  016B  0250               	subwf	??_main+8,w
  1702  016C  1D03               	skipz
  1703  016D  2974               	goto	u2963
  1704  016E  084A               	movf	??_main+2,w
  1705  016F  024F               	subwf	??_main+7,w
  1706  0170  1D03               	skipz
  1707  0171  2974               	goto	u2963
  1708  0172  0849               	movf	??_main+1,w
  1709  0173  024E               	subwf	??_main+6,w
  1710  0174                     u2963:	
  1711  0174  1803               	skipnc
  1712  0175  297D               	goto	l2602
  1713                           
  1714                           ;main.c: 54: TimeSinceTheStartOfCycle = S - C[PREV_CYCLE_TYPE];
  1715  0176  2385  120A  118A   	fcall	PL2	;call to abstracted procedure
  1716  0179  1C03               	skipc
  1717  017A  0F4C               	incfsz	??_main+4,w
  1718  017B  02D7               	subwf	main@TimeSinceTheStartOfCycle+3,f
  1719  017C  2991               	goto	l2608
  1720  017D                     l2602:	
  1721                           
  1722                           ;main.c: 55: else
  1723                           ;main.c: 56: TimeSinceTheStartOfCycle = S + (86400 - C[PREV_CYCLE_TYPE]);
  1724  017D  2385  120A  118A   	fcall	PL2	;call to abstracted procedure
  1725  0180  1C03               	skipc
  1726  0181  0F4C               	incfsz	??_main+4,w
  1727  0182  02D7               	subwf	main@TimeSinceTheStartOfCycle+3,f
  1728  0183  3080               	movlw	128
  1729  0184  07D4               	addwf	main@TimeSinceTheStartOfCycle,f
  1730  0185  3051               	movlw	81
  1731  0186  1803               	skipnc
  1732  0187  3052               	movlw	82
  1733  0188  07D5               	addwf	main@TimeSinceTheStartOfCycle+1,f
  1734  0189  3001               	movlw	1
  1735  018A  1803               	skipnc
  1736  018B  3002               	movlw	2
  1737  018C  07D6               	addwf	main@TimeSinceTheStartOfCycle+2,f
  1738  018D  3000               	movlw	0
  1739  018E  1803               	skipnc
  1740  018F  3001               	movlw	1
  1741  0190  07D7               	addwf	main@TimeSinceTheStartOfCycle+3,f
  1742  0191                     l2608:	
  1743                           
  1744                           ;main.c: 57: SecError = TimeSinceTheStartOfCycle%STATE_CUMULATIVE_PERIODS[CYCLE_TYPE];
  1745  0191  23E2               	fcall	PL12	;call to abstracted procedure
  1746  0192  0848               	movf	??_main,w
  1747  0193  00F0               	movwf	___almod@divisor
  1748  0194  0849               	movf	??_main+1,w
  1749  0195  00F1               	movwf	___almod@divisor+1
  1750  0196  01F2               	clrf	___almod@divisor+2
  1751  0197  01F3               	clrf	___almod@divisor+3
  1752  0198  0857               	movf	main@TimeSinceTheStartOfCycle+3,w
  1753  0199  00F7               	movwf	___almod@dividend+3
  1754  019A  0856               	movf	main@TimeSinceTheStartOfCycle+2,w
  1755  019B  00F6               	movwf	___almod@dividend+2
  1756  019C  0855               	movf	main@TimeSinceTheStartOfCycle+1,w
  1757  019D  00F5               	movwf	___almod@dividend+1
  1758  019E  0854               	movf	main@TimeSinceTheStartOfCycle,w
  1759  019F  00F4               	movwf	___almod@dividend
  1760  01A0  120A  158A  242D  120A  118A  	fcall	___almod
  1761  01A5  0871               	movf	?___almod+1,w
  1762  01A6  00E4               	movwf	main@SecError+1
  1763  01A7  0870               	movf	?___almod,w
  1764  01A8  00E3               	movwf	main@SecError
  1765                           
  1766                           ;main.c: 58: if (SecError > (STATE_CUMULATIVE_PERIODS[CYCLE_TYPE]/2))
  1767  01A9  23E2  120A  118A   	fcall	PL12	;call to abstracted procedure
  1768  01AC  1003               	clrc
  1769  01AD  0CC9               	rrf	??_main+1,f
  1770  01AE  0CC8               	rrf	??_main,f
  1771  01AF  0864               	movf	main@SecError+1,w
  1772  01B0  0249               	subwf	??_main+1,w
  1773  01B1  1D03               	skipz
  1774  01B2  29B5               	goto	u3015
  1775  01B3  0863               	movf	main@SecError,w
  1776  01B4  0248               	subwf	??_main,w
  1777  01B5                     u3015:	
  1778  01B5  1803               	skipnc
  1779  01B6  29C0               	goto	l2746
  1780                           
  1781                           ;main.c: 59: SecError -= STATE_CUMULATIVE_PERIODS[CYCLE_TYPE];
  1782  01B7  23E2  120A  118A   	fcall	PL12	;call to abstracted procedure
  1783  01BA  0848               	movf	??_main,w
  1784  01BB  02E3               	subwf	main@SecError,f
  1785  01BC  0849               	movf	??_main+1,w
  1786  01BD  1C03               	skipc
  1787  01BE  03E4               	decf	main@SecError+1,f
  1788  01BF  02E4               	subwf	main@SecError+1,f
  1789  01C0                     l2746:	
  1790  01C0  086E               	movf	_CYCLE_TYPE,w
  1791  01C1  3EE2               	addlw	(low (_STATE_BREAKS| 0))& (0+255)
  1792  01C2  0084               	movwf	4
  1793  01C3  1383               	bcf	3,7	;select IRP bank1
  1794  01C4  0800               	movf	0,w
  1795  01C5  0267               	subwf	main@i,w
  1796  01C6  1803               	btfsc	3,0
  1797  01C7  28EE               	goto	l2570
  1798                           
  1799                           ;main.c: 61: DiffInSecond = 0;
  1800  01C8  01E1               	clrf	main@DiffInSecond
  1801                           
  1802                           ;main.c: 62: for (j=0; j<(STATE_PERIODS[i] + DiffInSecond); j++) {
  1803  01C9  01E2               	clrf	main@j
  1804  01CA                     l2742:	
  1805  01CA  0867               	movf	main@i,w
  1806  01CB  3ECC               	addlw	204
  1807  01CC  0084               	movwf	4
  1808  01CD  1783               	bsf	3,7	;select IRP bank3
  1809  01CE  0800               	movf	0,w
  1810  01CF  0761               	addwf	main@DiffInSecond,w
  1811  01D0  00C8               	movwf	??_main
  1812  01D1  01C9               	clrf	??_main+1
  1813  01D2  0DC9               	rlf	??_main+1,f
  1814  01D3  0849               	movf	??_main+1,w
  1815  01D4  3A80               	xorlw	128
  1816  01D5  3C80               	sublw	128
  1817  01D6  1D03               	skipz
  1818  01D7  29DA               	goto	u3195
  1819  01D8  0848               	movf	??_main,w
  1820  01D9  0262               	subwf	main@j,w
  1821  01DA                     u3195:	
  1822  01DA  1803               	btfsc	3,0
  1823  01DB  2B81               	goto	l2744
  1824                           
  1825                           ;main.c: 63: StateSecRemaining = STATE_PERIODS[i]-j;
  1826  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1827  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1828  01DE  0867               	movf	main@i,w
  1829  01DF  3ECC               	addlw	204
  1830  01E0  0084               	movwf	4
  1831  01E1  0862               	movf	main@j,w
  1832  01E2  1783               	bsf	3,7	;select IRP bank3
  1833  01E3  0200               	subwf	0,w
  1834  01E4  00DA               	movwf	main@StateSecRemaining
  1835                           
  1836                           ;main.c: 65: WriteLongInt(2, 1, CYCLE_TYPE , 1, 0);
  1837  01E5  01B3               	clrf	WriteLongInt@x
  1838  01E6  0AB3               	incf	WriteLongInt@x,f
  1839  01E7  086E               	movf	_CYCLE_TYPE,w	;volatile
  1840  01E8  00B4               	movwf	WriteLongInt@Val
  1841  01E9  3002               	movlw	2
  1842  01EA  01B5               	clrf	WriteLongInt@Val+1
  1843  01EB  01B6               	clrf	WriteLongInt@Val+2
  1844  01EC  01B7               	clrf	WriteLongInt@Val+3
  1845  01ED  01B8               	clrf	WriteLongInt@size
  1846  01EE  0AB8               	incf	WriteLongInt@size,f
  1847  01EF  01B9               	clrf	WriteLongInt@Sign
  1848  01F0  120A  118A  2406  120A  118A  	fcall	_WriteLongInt
  1849                           
  1850                           ;main.c: 66: WriteLongInt(2, 3, i, 2, 0);
  1851  01F5  3003               	movlw	3
  1852  01F6  00B3               	movwf	WriteLongInt@x
  1853  01F7  0867               	movf	main@i,w
  1854  01F8  23F5               	fcall	PL20	;call to abstracted procedure
  1855  01F9  120A  118A  2406  120A  118A  	fcall	_WriteLongInt
  1856                           
  1857                           ;main.c: 67: WriteLongInt(2, 6, j, 2, 0);
  1858  01FE  3006               	movlw	6
  1859  01FF  00B3               	movwf	WriteLongInt@x
  1860  0200  0862               	movf	main@j,w
  1861  0201  23F5               	fcall	PL20	;call to abstracted procedure
  1862  0202  120A  118A  2406  120A  118A  	fcall	_WriteLongInt
  1863                           
  1864                           ;main.c: 68: WriteLongInt(2, 9, STATE_PERIODS[i], 2, 0);
  1865  0207  3009               	movlw	9
  1866  0208  00B3               	movwf	WriteLongInt@x
  1867  0209  0867               	movf	main@i,w
  1868  020A  3ECC               	addlw	204
  1869  020B  0084               	movwf	4
  1870  020C  1783               	bsf	3,7	;select IRP bank3
  1871  020D  0800               	movf	0,w
  1872  020E  23F5               	fcall	PL20	;call to abstracted procedure
  1873  020F  120A  118A  2406  120A  118A  	fcall	_WriteLongInt
  1874                           
  1875                           ;main.c: 69: WriteLongInt(2, 11, SecError, 5, 1);
  1876  0214  300B               	movlw	11
  1877  0215  00B3               	movwf	WriteLongInt@x
  1878  0216  0863               	movf	main@SecError,w
  1879  0217  00B4               	movwf	WriteLongInt@Val
  1880  0218  0864               	movf	main@SecError+1,w
  1881  0219  00B5               	movwf	WriteLongInt@Val+1
  1882  021A  3000               	movlw	0
  1883  021B  1BB5               	btfsc	WriteLongInt@Val+1,7
  1884  021C  30FF               	movlw	255
  1885  021D  00B6               	movwf	WriteLongInt@Val+2
  1886  021E  00B7               	movwf	WriteLongInt@Val+3
  1887  021F  3005               	movlw	5
  1888  0220  00B8               	movwf	WriteLongInt@size
  1889  0221  3002               	movlw	2
  1890  0222  01B9               	clrf	WriteLongInt@Sign
  1891  0223  0AB9               	incf	WriteLongInt@Sign,f
  1892  0224  120A  118A  2406  120A  118A  	fcall	_WriteLongInt
  1893                           
  1894                           ;main.c: 70: for (l=0; l<2; l++) {
  1895  0229  01E8               	clrf	main@l
  1896  022A  01E9               	clrf	main@l+1
  1897  022B                     l2630:	
  1898  022B  3000               	movlw	0
  1899  022C  0269               	subwf	main@l+1,w
  1900  022D  3002               	movlw	2
  1901  022E  1903               	skipnz
  1902  022F  0268               	subwf	main@l,w
  1903  0230  1803               	btfsc	3,0
  1904  0231  2A7A               	goto	l2640
  1905                           
  1906                           ;main.c: 71: Lcd_Disp_Bin(1, 8*l+1, 0xff, 0x30);
  1907  0232  0868               	movf	main@l,w
  1908  0233  00C8               	movwf	??_main
  1909  0234  1003               	clrc
  1910  0235  0DC8               	rlf	??_main,f
  1911  0236  1003               	clrc
  1912  0237  0DC8               	rlf	??_main,f
  1913  0238  1003               	clrc
  1914  0239  0D48               	rlf	??_main,w
  1915  023A  3E01               	addlw	1
  1916  023B  00B3               	movwf	Lcd_Disp_Bin@x
  1917  023C  30FF               	movlw	255
  1918  023D  00B4               	movwf	Lcd_Disp_Bin@val
  1919  023E  3030               	movlw	48
  1920  023F  00B5               	movwf	Lcd_Disp_Bin@DispChar
  1921  0240  3001               	movlw	1
  1922  0241  120A  118A  2015  120A  118A  	fcall	_Lcd_Disp_Bin
  1923                           
  1924                           ;main.c: 72: Lcd_Disp_Bin(1, 8*l+1, STATE_1[i][l], 0x31);
  1925  0246  23CC  120A  118A   	fcall	PL8	;call to abstracted procedure
  1926  0249  30A0               	movlw	160
  1927  024A  23EC               	fcall	PL14	;call to abstracted procedure
  1928  024B  1383               	bcf	3,7	;select IRP bank1
  1929  024C  0800               	movf	0,w
  1930  024D  00B4               	movwf	Lcd_Disp_Bin@val
  1931  024E  3031               	movlw	49
  1932  024F  00B5               	movwf	Lcd_Disp_Bin@DispChar
  1933  0250  3001               	movlw	1
  1934  0251  120A  118A  2015  120A  118A  	fcall	_Lcd_Disp_Bin
  1935                           
  1936                           ;main.c: 73: Lcd_Disp_Bin(1, 8*l+1, STATE_2[i][l], 0x32);
  1937  0256  23CC  120A  118A   	fcall	PL8	;call to abstracted procedure
  1938  0259  3010               	movlw	16
  1939  025A  23EC               	fcall	PL14	;call to abstracted procedure
  1940  025B  1783               	bsf	3,7	;select IRP bank2
  1941  025C  0800               	movf	0,w
  1942  025D  00B4               	movwf	Lcd_Disp_Bin@val
  1943  025E  3032               	movlw	50
  1944  025F  00B5               	movwf	Lcd_Disp_Bin@DispChar
  1945  0260  3001               	movlw	1
  1946  0261  120A  118A  2015  120A  118A  	fcall	_Lcd_Disp_Bin
  1947                           
  1948                           ;main.c: 74: Lcd_Disp_Bin(1, 8*l+1, STATE_3[i][l], 0x33);
  1949  0266  23CC  120A  118A   	fcall	PL8	;call to abstracted procedure
  1950  0269  3090               	movlw	144
  1951  026A  23EC               	fcall	PL14	;call to abstracted procedure
  1952  026B  1783               	bsf	3,7	;select IRP bank3
  1953  026C  0800               	movf	0,w
  1954  026D  00B4               	movwf	Lcd_Disp_Bin@val
  1955  026E  3033               	movlw	51
  1956  026F  00B5               	movwf	Lcd_Disp_Bin@DispChar
  1957  0270  3001               	movlw	1
  1958  0271  120A  118A  2015  120A  118A  	fcall	_Lcd_Disp_Bin
  1959  0276  0AE8               	incf	main@l,f
  1960  0277  1903               	skipnz
  1961  0278  0AE9               	incf	main@l+1,f
  1962  0279  2A2B               	goto	l2630
  1963  027A                     l2640:	
  1964                           
  1965                           ;main.c: 75: }
  1966                           ;main.c: 77: for (k=0; k<1000; k++) {
  1967  027A  01D8               	clrf	main@k
  1968  027B  01D9               	clrf	main@k+1
  1969  027C                     l2642:	
  1970  027C  3003               	movlw	3
  1971  027D  0259               	subwf	main@k+1,w
  1972  027E  30E8               	movlw	232
  1973  027F  1903               	skipnz
  1974  0280  0258               	subwf	main@k,w
  1975  0281  1803               	btfsc	3,0
  1976  0282  2B28               	goto	l2728
  1977                           
  1978                           ;main.c: 78: for (l=0; l<2; l++)
  1979  0283  01E8               	clrf	main@l
  1980  0284  01E9               	clrf	main@l+1
  1981  0285                     l2648:	
  1982  0285  3000               	movlw	0
  1983  0286  0269               	subwf	main@l+1,w
  1984  0287  3002               	movlw	2
  1985  0288  1903               	skipnz
  1986  0289  0268               	subwf	main@l,w
  1987  028A  1803               	btfsc	3,0
  1988  028B  2A9E               	goto	l2658
  1989                           
  1990                           ;main.c: 79: OutForThePorts[l] = STATE_1[i][l];
  1991  028C  0867               	movf	main@i,w
  1992  028D  00C8               	movwf	??_main
  1993  028E  30A0               	movlw	160
  1994  028F  23D9  120A  118A   	fcall	PL10	;call to abstracted procedure
  1995  0292  1383               	bcf	3,7	;select IRP bank1
  1996  0293  0800               	movf	0,w
  1997  0294  00CB               	movwf	??_main+3
  1998  0295  0868               	movf	main@l,w
  1999  0296  3E65               	addlw	(low (main@OutForThePorts| 0))& (0+255)
  2000  0297  0084               	movwf	4
  2001  0298  084B               	movf	??_main+3,w
  2002  0299  0080               	movwf	0
  2003  029A  0AE8               	incf	main@l,f
  2004  029B  1903               	skipnz
  2005  029C  0AE9               	incf	main@l+1,f
  2006  029D  2A85               	goto	l2648
  2007  029E                     l2658:	
  2008                           
  2009                           ;main.c: 80: if (StateSecRemaining <= 2) {
  2010  029E  3003               	movlw	3
  2011  029F  025A               	subwf	main@StateSecRemaining,w
  2012  02A0  1803               	skipnc
  2013  02A1  2ACB               	goto	l2674
  2014                           
  2015                           ;main.c: 81: if (State2OnOffCounter < 50) {
  2016  02A2  3000               	movlw	0
  2017  02A3  025C               	subwf	main@State2OnOffCounter+1,w
  2018  02A4  3032               	movlw	50
  2019  02A5  1903               	skipnz
  2020  02A6  025B               	subwf	main@State2OnOffCounter,w
  2021  02A7  1803               	skipnc
  2022  02A8  2ACB               	goto	l2674
  2023                           
  2024                           ;main.c: 82: for (l=0; l<2; l++)
  2025  02A9  01E8               	clrf	main@l
  2026  02AA  01E9               	clrf	main@l+1
  2027  02AB                     l2664:	
  2028  02AB  3000               	movlw	0
  2029  02AC  0269               	subwf	main@l+1,w
  2030  02AD  3002               	movlw	2
  2031  02AE  1903               	skipnz
  2032  02AF  0268               	subwf	main@l,w
  2033  02B0  1803               	btfsc	3,0
  2034  02B1  2ACB               	goto	l2674
  2035                           
  2036                           ;main.c: 83: OutForThePorts[l] = (OutForThePorts[l] | STATE_2[i][l]);
  2037  02B2  0867               	movf	main@i,w
  2038  02B3  00C8               	movwf	??_main
  2039  02B4  3010               	movlw	16
  2040  02B5  23D9  120A  118A   	fcall	PL10	;call to abstracted procedure
  2041  02B8  1783               	bsf	3,7	;select IRP bank2
  2042  02B9  0800               	movf	0,w
  2043  02BA  00CB               	movwf	??_main+3
  2044  02BB  0868               	movf	main@l,w
  2045  02BC  3E65               	addlw	(low (main@OutForThePorts| 0))& (0+255)
  2046  02BD  0084               	movwf	4
  2047  02BE  1383               	bcf	3,7	;select IRP bank0
  2048  02BF  0800               	movf	0,w
  2049  02C0  044B               	iorwf	??_main+3,w
  2050  02C1  00CC               	movwf	??_main+4
  2051  02C2  0868               	movf	main@l,w
  2052  02C3  3E65               	addlw	(low (main@OutForThePorts| 0))& (0+255)
  2053  02C4  0084               	movwf	4
  2054  02C5  084C               	movf	??_main+4,w
  2055  02C6  0080               	movwf	0
  2056  02C7  0AE8               	incf	main@l,f
  2057  02C8  1903               	skipnz
  2058  02C9  0AE9               	incf	main@l+1,f
  2059  02CA  2AAB               	goto	l2664
  2060  02CB                     l2674:	
  2061                           
  2062                           ;main.c: 84: }
  2063                           ;main.c: 85: }
  2064                           ;main.c: 86: if (StateSecRemaining <= 3) {
  2065  02CB  3004               	movlw	4
  2066  02CC  025A               	subwf	main@StateSecRemaining,w
  2067                           
  2068                           ;main.c: 87: if ((StateAudioNormalOnOffCounter) < 50) {
  2069  02CD  3000               	movlw	0
  2070  02CE  1803               	skipnc
  2071  02CF  2AE5               	goto	L5
  2072  02D0  025E               	subwf	main@StateAudioNormalOnOffCounter+1,w
  2073  02D1  3032               	movlw	50
  2074  02D2  1903               	skipnz
  2075  02D3  025D               	subwf	main@StateAudioNormalOnOffCounter,w
  2076  02D4  1803               	skipnc
  2077  02D5  2AFA               	goto	l2704
  2078                           
  2079                           ;main.c: 88: for (l=0; l<2; l++)
  2080  02D6  01E8               	clrf	main@l
  2081  02D7  01E9               	clrf	main@l+1
  2082  02D8                     l2680:	
  2083  02D8  3000               	movlw	0
  2084  02D9  0269               	subwf	main@l+1,w
  2085  02DA  3002               	movlw	2
  2086  02DB  1903               	skipnz
  2087  02DC  0268               	subwf	main@l,w
  2088  02DD  1803               	btfsc	3,0
  2089  02DE  2AFA               	goto	l2704
  2090                           
  2091                           ;main.c: 89: OutForThePorts[l] = (OutForThePorts[l] | STATE_3[i][l]);
  2092  02DF  23B0  120A  118A   	fcall	PL6	;call to abstracted procedure
  2093  02E2  1903               	skipnz
  2094  02E3  0AE9               	incf	main@l+1,f
  2095  02E4  2AD8               	goto	l2680
  2096  02E5                     L5:	
  2097                           ;main.c: 92: if ((StateAudioSplOnOffCounter) < 50) {
  2098                           
  2099  02E5  0260               	subwf	main@StateAudioSplOnOffCounter+1,w
  2100  02E6  3032               	movlw	50
  2101  02E7  1903               	skipnz
  2102  02E8  025F               	subwf	main@StateAudioSplOnOffCounter,w
  2103  02E9  1803               	skipnc
  2104  02EA  2AFA               	goto	l2704
  2105                           
  2106                           ;main.c: 93: for (l=0; l<2; l++)
  2107  02EB  01E8               	clrf	main@l
  2108  02EC  01E9               	clrf	main@l+1
  2109  02ED                     l2694:	
  2110  02ED  3000               	movlw	0
  2111  02EE  0269               	subwf	main@l+1,w
  2112  02EF  3002               	movlw	2
  2113  02F0  1903               	skipnz
  2114  02F1  0268               	subwf	main@l,w
  2115  02F2  1803               	btfsc	3,0
  2116  02F3  2AFA               	goto	l2704
  2117                           
  2118                           ;main.c: 94: OutForThePorts[l] = (OutForThePorts[l] | STATE_3[i][l]);
  2119  02F4  23B0  120A  118A   	fcall	PL6	;call to abstracted procedure
  2120  02F7  1903               	skipnz
  2121  02F8  0AE9               	incf	main@l+1,f
  2122  02F9  2AED               	goto	l2694
  2123  02FA                     l2704:	
  2124                           
  2125                           ;main.c: 95: }
  2126                           ;main.c: 96: }
  2127                           ;main.c: 97: State2OnOffCounter++;
  2128  02FA  0ADB               	incf	main@State2OnOffCounter,f
  2129  02FB  1903               	skipnz
  2130  02FC  0ADC               	incf	main@State2OnOffCounter+1,f
  2131                           
  2132                           ;main.c: 98: StateAudioNormalOnOffCounter++;
  2133  02FD  0ADD               	incf	main@StateAudioNormalOnOffCounter,f
  2134  02FE  1903               	skipnz
  2135  02FF  0ADE               	incf	main@StateAudioNormalOnOffCounter+1,f
  2136                           
  2137                           ;main.c: 99: StateAudioSplOnOffCounter++;
  2138  0300  0ADF               	incf	main@StateAudioSplOnOffCounter,f
  2139  0301  1903               	skipnz
  2140  0302  0AE0               	incf	main@StateAudioSplOnOffCounter+1,f
  2141                           
  2142                           ;main.c: 100: if (State2OnOffCounter >= (50
  2143                           ;main.c: 101: + 50))
  2144  0303  3000               	movlw	0
  2145  0304  025C               	subwf	main@State2OnOffCounter+1,w
  2146  0305  3064               	movlw	100
  2147  0306  1903               	skipnz
  2148  0307  025B               	subwf	main@State2OnOffCounter,w
  2149  0308  1C03               	skipc
  2150  0309  2B0C               	goto	l2710
  2151                           
  2152                           ;main.c: 102: State2OnOffCounter=0;
  2153  030A  01DB               	clrf	main@State2OnOffCounter
  2154  030B  01DC               	clrf	main@State2OnOffCounter+1
  2155  030C                     l2710:	
  2156                           
  2157                           ;main.c: 103: if (StateAudioNormalOnOffCounter >= (50
  2158                           ;main.c: 104: + 50))
  2159  030C  3000               	movlw	0
  2160  030D  025E               	subwf	main@StateAudioNormalOnOffCounter+1,w
  2161  030E  3064               	movlw	100
  2162  030F  1903               	skipnz
  2163  0310  025D               	subwf	main@StateAudioNormalOnOffCounter,w
  2164  0311  1C03               	skipc
  2165  0312  2B15               	goto	l2714
  2166                           
  2167                           ;main.c: 105: StateAudioNormalOnOffCounter=0;
  2168  0313  01DD               	clrf	main@StateAudioNormalOnOffCounter
  2169  0314  01DE               	clrf	main@StateAudioNormalOnOffCounter+1
  2170  0315                     l2714:	
  2171                           
  2172                           ;main.c: 106: if (StateAudioSplOnOffCounter >= (50
  2173                           ;main.c: 107: + 50))
  2174  0315  3000               	movlw	0
  2175  0316  0260               	subwf	main@StateAudioSplOnOffCounter+1,w
  2176  0317  3064               	movlw	100
  2177  0318  1903               	skipnz
  2178  0319  025F               	subwf	main@StateAudioSplOnOffCounter,w
  2179  031A  1C03               	skipc
  2180  031B  2B1E               	goto	l2718
  2181                           
  2182                           ;main.c: 108: StateAudioSplOnOffCounter=0;
  2183  031C  01DF               	clrf	main@StateAudioSplOnOffCounter
  2184  031D  01E0               	clrf	main@StateAudioSplOnOffCounter+1
  2185  031E                     l2718:	
  2186                           
  2187                           ;main.c: 110: PORTB = OutForThePorts[0];
  2188  031E  0865               	movf	main@OutForThePorts,w
  2189  031F  0086               	movwf	6	;volatile
  2190                           
  2191                           ;main.c: 111: PORTC = OutForThePorts[1];
  2192  0320  0866               	movf	main@OutForThePorts+1,w
  2193  0321  0087               	movwf	7	;volatile
  2194                           
  2195                           ;main.c: 113: (_delay((unsigned long)((0)*(4000000/4000000.0))));
  2196  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0324  0AD8               	incf	main@k,f
  2199  0325  1903               	skipnz
  2200  0326  0AD9               	incf	main@k+1,f
  2201  0327  2A7C               	goto	l2642
  2202  0328                     l2728:	
  2203                           
  2204                           ;main.c: 114: }
  2205                           ;main.c: 115: if (j==0) {
  2206  0328  0862               	movf	main@j,w
  2207  0329  1D03               	btfss	3,2
  2208  032A  2B61               	goto	l2736
  2209                           
  2210                           ;main.c: 116: DiffInSecond = 0.1*(SecError);
  2211  032B  0864               	movf	main@SecError+1,w
  2212  032C  00F9               	movwf	___awtoft@c+1
  2213  032D  0863               	movf	main@SecError,w
  2214  032E  00F8               	movwf	___awtoft@c
  2215  032F  120A  158A  2496  120A  118A  	fcall	___awtoft
  2216  0334  0878               	movf	?___awtoft,w
  2217  0335  00AF               	movwf	___ftmul@f2
  2218  0336  0879               	movf	?___awtoft+1,w
  2219  0337  00B0               	movwf	___ftmul@f2+1
  2220  0338  087A               	movf	?___awtoft+2,w
  2221  0339  00B1               	movwf	___ftmul@f2+2
  2222  033A  30CD               	movlw	205
  2223  033B  00AC               	movwf	___ftmul@f1
  2224  033C  30CC               	movlw	204
  2225  033D  00AD               	movwf	___ftmul@f1+1
  2226  033E  303D               	movlw	61
  2227  033F  00AE               	movwf	___ftmul@f1+2
  2228  0340  120A  158A  24B1  120A  118A  	fcall	___ftmul
  2229  0345  082C               	movf	?___ftmul,w
  2230  0346  00BB               	movwf	___fttol@f1
  2231  0347  082D               	movf	?___ftmul+1,w
  2232  0348  00BC               	movwf	___fttol@f1+1
  2233  0349  082E               	movf	?___ftmul+2,w
  2234  034A  00BD               	movwf	___fttol@f1+2
  2235  034B  120A  158A  23CB  120A  118A  	fcall	___fttol
  2236  0350  083B               	movf	?___fttol,w
  2237  0351  00E1               	movwf	main@DiffInSecond
  2238                           
  2239                           ;main.c: 117: if (SecError<DiffInSecond)
  2240  0352  0864               	movf	main@SecError+1,w
  2241  0353  3A80               	xorlw	128
  2242  0354  00C8               	movwf	??_main
  2243  0355  3080               	movlw	128
  2244  0356  0248               	subwf	??_main,w
  2245  0357  1D03               	skipz
  2246  0358  2B5B               	goto	u3175
  2247  0359  0861               	movf	main@DiffInSecond,w
  2248  035A  0263               	subwf	main@SecError,w
  2249  035B                     u3175:	
  2250  035B  1803               	skipnc
  2251  035C  2B61               	goto	l2736
  2252                           
  2253                           ;main.c: 118: DiffInSecond = SecError;
  2254  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2255  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2256  035F  0863               	movf	main@SecError,w
  2257  0360  00E1               	movwf	main@DiffInSecond
  2258  0361                     l2736:	
  2259                           
  2260                           ;main.c: 119: }
  2261                           ;main.c: 120: S++;
  2262  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0363  0AEA               	incf	_S,f	;volatile
  2265  0364  1903               	skipnz
  2266  0365  0AEB               	incf	_S+1,f	;volatile
  2267  0366  1903               	skipnz
  2268  0367  0AEC               	incf	_S+2,f	;volatile
  2269  0368  1903               	skipnz
  2270  0369  0AED               	incf	_S+3,f	;volatile
  2271                           
  2272                           ;main.c: 121: if (S>=86400)
  2273  036A  1BED               	btfsc	_S+3,7	;volatile
  2274  036B  2B7F               	goto	l2740
  2275  036C  086D               	movf	_S+3,w	;volatile
  2276  036D  1D03               	btfss	3,2
  2277  036E  2B7B               	goto	l2738
  2278  036F  3001               	movlw	1
  2279  0370  026C               	subwf	_S+2,w	;volatile
  2280  0371  1D03               	skipz
  2281  0372  2B79               	goto	u3183
  2282  0373  3051               	movlw	81
  2283  0374  026B               	subwf	_S+1,w	;volatile
  2284  0375  1D03               	skipz
  2285  0376  2B79               	goto	u3183
  2286  0377  3080               	movlw	128
  2287  0378  026A               	subwf	_S,w	;volatile
  2288  0379                     u3183:	
  2289  0379  1C03               	btfss	3,0
  2290  037A  2B7F               	goto	l2740
  2291  037B                     l2738:	
  2292                           
  2293                           ;main.c: 122: S=0;
  2294  037B  01EA               	clrf	_S	;volatile
  2295  037C  01EB               	clrf	_S+1	;volatile
  2296  037D  01EC               	clrf	_S+2	;volatile
  2297  037E  01ED               	clrf	_S+3	;volatile
  2298  037F                     l2740:	
  2299  037F  0AE2               	incf	main@j,f
  2300  0380  29CA               	goto	l2742
  2301  0381                     l2744:	
  2302  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0383  0AE7               	incf	main@i,f
  2305  0384  29C0               	goto	l2746
  2306  0385                     __end_of_main:	
  2307  0385                     PL2:	
  2308  0385  086D               	movf	_S+3,w	;volatile
  2309  0386  00D7               	movwf	main@TimeSinceTheStartOfCycle+3
  2310  0387  086C               	movf	_S+2,w	;volatile
  2311  0388  00D6               	movwf	main@TimeSinceTheStartOfCycle+2
  2312  0389  086B               	movf	_S+1,w	;volatile
  2313  038A  00D5               	movwf	main@TimeSinceTheStartOfCycle+1
  2314  038B  086A               	movf	_S,w	;volatile
  2315  038C  00D4               	movwf	main@TimeSinceTheStartOfCycle
  2316  038D  086F               	movf	_PREV_CYCLE_TYPE,w	;volatile
  2317  038E  00C8               	movwf	??_main
  2318  038F  3001               	movlw	1
  2319  0390  1003               	clrc
  2320  0391                     L3:	
  2321  0391  0DC8               	rlf	??_main,f
  2322  0392  3EFF               	addlw	-1
  2323  0393  1003               	clrc
  2324  0394  1D03               	skipz
  2325  0395  2B91               	goto	L3
  2326  0396  0D48               	rlf	??_main,w
  2327  0397  3E20               	addlw	32
  2328  0398  0084               	movwf	4
  2329  0399  0800               	movf	0,w
  2330  039A  00C9               	movwf	??_main+1
  2331  039B  0A84               	incf	4,f
  2332  039C  0800               	movf	0,w
  2333  039D  00CA               	movwf	??_main+2
  2334  039E  0A84               	incf	4,f
  2335  039F  0800               	movf	0,w
  2336  03A0  00CB               	movwf	??_main+3
  2337  03A1  0A84               	incf	4,f
  2338  03A2  0800               	movf	0,w
  2339  03A3  00CC               	movwf	??_main+4
  2340  03A4  0849               	movf	??_main+1,w
  2341  03A5  02D4               	subwf	main@TimeSinceTheStartOfCycle,f
  2342  03A6  084A               	movf	??_main+2,w
  2343  03A7  1C03               	skipc
  2344  03A8  0F4A               	incfsz	??_main+2,w
  2345  03A9  02D5               	subwf	main@TimeSinceTheStartOfCycle+1,f
  2346  03AA  084B               	movf	??_main+3,w
  2347  03AB  1C03               	skipc
  2348  03AC  0F4B               	incfsz	??_main+3,w
  2349  03AD  02D6               	subwf	main@TimeSinceTheStartOfCycle+2,f
  2350  03AE  084C               	movf	??_main+4,w
  2351  03AF  0008               	return
  2352  03B0                     __end_ofPL2:	
  2353  03B0                     PL6:	
  2354  03B0  0867               	movf	main@i,w
  2355  03B1  00C8               	movwf	??_main
  2356  03B2  3090               	movlw	144
  2357  03B3  1003               	clrc
  2358  03B4  0DC8               	rlf	??_main,f
  2359  03B5  0748               	addwf	??_main,w
  2360  03B6  00C9               	movwf	??_main+1
  2361  03B7  0868               	movf	main@l,w
  2362  03B8  0749               	addwf	??_main+1,w
  2363  03B9  00CA               	movwf	??_main+2
  2364  03BA  0084               	movwf	4
  2365  03BB  1783               	bsf	3,7	;select IRP bank3
  2366  03BC  0800               	movf	0,w
  2367  03BD  00CB               	movwf	??_main+3
  2368  03BE  0868               	movf	main@l,w
  2369  03BF  3E65               	addlw	(low (main@OutForThePorts| 0))& (0+255)
  2370  03C0  0084               	movwf	4
  2371  03C1  1383               	bcf	3,7	;select IRP bank0
  2372  03C2  0800               	movf	0,w
  2373  03C3  044B               	iorwf	??_main+3,w
  2374  03C4  00CC               	movwf	??_main+4
  2375  03C5  0868               	movf	main@l,w
  2376  03C6  3E65               	addlw	(low (main@OutForThePorts| 0))& (0+255)
  2377  03C7  0084               	movwf	4
  2378  03C8  084C               	movf	??_main+4,w
  2379  03C9  0080               	movwf	0
  2380  03CA  0AE8               	incf	main@l,f
  2381  03CB  0008               	return
  2382  03CC                     __end_ofPL6:	
  2383  03CC                     PL8:	
  2384  03CC  0868               	movf	main@l,w
  2385  03CD  00C8               	movwf	??_main
  2386  03CE  1003               	clrc
  2387  03CF  0DC8               	rlf	??_main,f
  2388  03D0  1003               	clrc
  2389  03D1  0DC8               	rlf	??_main,f
  2390  03D2  1003               	clrc
  2391  03D3  0D48               	rlf	??_main,w
  2392  03D4  3E01               	addlw	1
  2393  03D5  00B3               	movwf	Lcd_Disp_Bin@x
  2394  03D6  0867               	movf	main@i,w
  2395  03D7  00C9               	movwf	??_main+1
  2396  03D8  0008               	return
  2397  03D9                     __end_ofPL8:	
  2398  03D9                     PL10:	
  2399  03D9  1003               	clrc
  2400  03DA  0DC8               	rlf	??_main,f
  2401  03DB  0748               	addwf	??_main,w
  2402  03DC  00C9               	movwf	??_main+1
  2403  03DD  0868               	movf	main@l,w
  2404  03DE  0749               	addwf	??_main+1,w
  2405  03DF  00CA               	movwf	??_main+2
  2406  03E0  0084               	movwf	4
  2407  03E1  0008               	return
  2408  03E2                     __end_ofPL10:	
  2409  03E2                     PL12:	
  2410  03E2  1003               	clrc
  2411  03E3  0D6E               	rlf	_CYCLE_TYPE,w	;volatile
  2412  03E4  3EDC               	addlw	(low (_STATE_CUMULATIVE_PERIODS| 0))& (0+255)
  2413  03E5  0084               	movwf	4
  2414  03E6  0800               	movf	0,w
  2415  03E7  00C8               	movwf	??_main
  2416  03E8  0A84               	incf	4,f
  2417  03E9  0800               	movf	0,w
  2418  03EA  00C9               	movwf	??_main+1
  2419  03EB  0008               	return
  2420  03EC                     __end_ofPL12:	
  2421  03EC                     PL14:	
  2422  03EC  1003               	clrc
  2423  03ED  0DC9               	rlf	??_main+1,f
  2424  03EE  0749               	addwf	??_main+1,w
  2425  03EF  00CA               	movwf	??_main+2
  2426  03F0  0868               	movf	main@l,w
  2427  03F1  074A               	addwf	??_main+2,w
  2428  03F2  00CB               	movwf	??_main+3
  2429  03F3  0084               	movwf	4
  2430  03F4  0008               	return
  2431  03F5                     __end_ofPL14:	
  2432  03F5                     PL20:	
  2433  03F5  00B4               	movwf	WriteLongInt@Val
  2434  03F6  3002               	movlw	2
  2435  03F7  01B5               	clrf	WriteLongInt@Val+1
  2436  03F8  01B6               	clrf	WriteLongInt@Val+2
  2437  03F9  01B7               	clrf	WriteLongInt@Val+3
  2438  03FA  00B8               	movwf	WriteLongInt@size
  2439  03FB  01B9               	clrf	WriteLongInt@Sign
  2440  03FC  0008               	return
  2441  03FD                     __end_ofPL20:	
  2442  03FD                     PL26:	
  2443  03FD  082F               	movf	?_ReadRTCAsSec+3,w
  2444  03FE  00ED               	movwf	_S+3	;volatile
  2445  03FF  082E               	movf	?_ReadRTCAsSec+2,w
  2446  0400  00EC               	movwf	_S+2	;volatile
  2447  0401  082D               	movf	?_ReadRTCAsSec+1,w
  2448  0402  00EB               	movwf	_S+1	;volatile
  2449  0403  082C               	movf	?_ReadRTCAsSec,w
  2450  0404  00EA               	movwf	_S	;volatile
  2451  0405  0008               	return
  2452  0406                     __end_ofPL26:	
  2453                           
  2454                           	psect	text1
  2455  0BCB                     __ptext1:	
  2456 ;; *************** function ___fttol *****************
  2457 ;; Defined at:
  2458 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  f1              3   15[BANK0 ] float 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  lval            4   23[BANK0 ] unsigned long 
  2463 ;;  exp1            1   27[BANK0 ] unsigned char 
  2464 ;;  sign1           1   22[BANK0 ] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  4   15[BANK0 ] long 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 300/800
  2471 ;;		On exit  : 300/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  2474 ;;      Params:         0       4       0       0       0
  2475 ;;      Locals:         0       6       0       0       0
  2476 ;;      Temps:          0       3       0       0       0
  2477 ;;      Totals:         0      13       0       0       0
  2478 ;;Total ram usage:       13 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function ___fttol
  2489  0BCB                     ___fttol:	
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2493  0BCB  2426  120A  158A   	fcall	PL38	;call to abstracted procedure
  2494  0BCE  1003               	clrc
  2495  0BCF  0D40               	rlf	??___fttol+1,w
  2496  0BD0  0D41               	rlf	??___fttol+2,w
  2497  0BD1  00C7               	movwf	___fttol@exp1
  2498  0BD2  0847               	movf	___fttol@exp1,w
  2499  0BD3  1D03               	btfss	3,2
  2500  0BD4  2BDA               	goto	l2512
  2501  0BD5                     l2510:	
  2502  0BD5  01BB               	clrf	?___fttol
  2503  0BD6  01BC               	clrf	?___fttol+1
  2504  0BD7  01BD               	clrf	?___fttol+2
  2505  0BD8  01BE               	clrf	?___fttol+3
  2506  0BD9  0008               	return
  2507  0BDA                     l2512:	
  2508  0BDA  2426  120A  158A   	fcall	PL38	;call to abstracted procedure
  2509  0BDD  3017               	movlw	23
  2510  0BDE                     u2845:	
  2511  0BDE  1003               	clrc
  2512  0BDF  0CC1               	rrf	??___fttol+2,f
  2513  0BE0  0CC0               	rrf	??___fttol+1,f
  2514  0BE1  0CBF               	rrf	??___fttol,f
  2515  0BE2  3EFF               	addlw	-1
  2516  0BE3  1D03               	skipz
  2517  0BE4  2BDE               	goto	u2845
  2518  0BE5  083F               	movf	??___fttol,w
  2519  0BE6  00C2               	movwf	___fttol@sign1
  2520  0BE7  17BC               	bsf	___fttol@f1+1,7
  2521  0BE8  01BD               	clrf	___fttol@f1+2
  2522  0BE9  083B               	movf	___fttol@f1,w
  2523  0BEA  00C3               	movwf	___fttol@lval
  2524  0BEB  083C               	movf	___fttol@f1+1,w
  2525  0BEC  00C4               	movwf	___fttol@lval+1
  2526  0BED  083D               	movf	___fttol@f1+2,w
  2527  0BEE  00C5               	movwf	___fttol@lval+2
  2528  0BEF  308E               	movlw	142
  2529  0BF0  01C6               	clrf	___fttol@lval+3
  2530  0BF1  02C7               	subwf	___fttol@exp1,f
  2531  0BF2  1FC7               	btfss	___fttol@exp1,7
  2532  0BF3  2C01               	goto	l2532
  2533  0BF4  0847               	movf	___fttol@exp1,w
  2534  0BF5  3A80               	xorlw	128
  2535  0BF6  3E8F               	addlw	143
  2536  0BF7  1C03               	btfss	3,0
  2537  0BF8  2BD5               	goto	l2510
  2538  0BF9                     l2528:	
  2539  0BF9  1003               	clrc
  2540  0BFA  0CC6               	rrf	___fttol@lval+3,f
  2541  0BFB  0CC5               	rrf	___fttol@lval+2,f
  2542  0BFC  0CC4               	rrf	___fttol@lval+1,f
  2543  0BFD  0CC3               	rrf	___fttol@lval,f
  2544  0BFE  0FC7               	incfsz	___fttol@exp1,f
  2545  0BFF  2BF9               	goto	l2528
  2546  0C00  2C0F               	goto	l2540
  2547  0C01                     l2532:	
  2548  0C01  3018               	movlw	24
  2549  0C02  0247               	subwf	___fttol@exp1,w
  2550  0C03  1803               	btfsc	3,0
  2551  0C04  2BD5               	goto	l2510
  2552  0C05                     l2538:	
  2553  0C05  0847               	movf	___fttol@exp1,w
  2554  0C06  1903               	btfsc	3,2
  2555  0C07  2C0F               	goto	l2540
  2556  0C08  1003               	clrc
  2557  0C09  0DC3               	rlf	___fttol@lval,f
  2558  0C0A  0DC4               	rlf	___fttol@lval+1,f
  2559  0C0B  0DC5               	rlf	___fttol@lval+2,f
  2560  0C0C  0DC6               	rlf	___fttol@lval+3,f
  2561  0C0D  03C7               	decf	___fttol@exp1,f
  2562  0C0E  2C05               	goto	l2538
  2563  0C0F                     l2540:	
  2564  0C0F  0842               	movf	___fttol@sign1,w
  2565  0C10  1903               	btfsc	3,2
  2566  0C11  2C1D               	goto	l2544
  2567  0C12  09C3               	comf	___fttol@lval,f
  2568  0C13  09C4               	comf	___fttol@lval+1,f
  2569  0C14  09C5               	comf	___fttol@lval+2,f
  2570  0C15  09C6               	comf	___fttol@lval+3,f
  2571  0C16  0AC3               	incf	___fttol@lval,f
  2572  0C17  1903               	skipnz
  2573  0C18  0AC4               	incf	___fttol@lval+1,f
  2574  0C19  1903               	skipnz
  2575  0C1A  0AC5               	incf	___fttol@lval+2,f
  2576  0C1B  1903               	skipnz
  2577  0C1C  0AC6               	incf	___fttol@lval+3,f
  2578  0C1D                     l2544:	
  2579  0C1D  0846               	movf	___fttol@lval+3,w
  2580  0C1E  00BE               	movwf	?___fttol+3
  2581  0C1F  0845               	movf	___fttol@lval+2,w
  2582  0C20  00BD               	movwf	?___fttol+2
  2583  0C21  0844               	movf	___fttol@lval+1,w
  2584  0C22  00BC               	movwf	?___fttol+1
  2585  0C23  0843               	movf	___fttol@lval,w
  2586  0C24  00BB               	movwf	?___fttol
  2587  0C25  0008               	return
  2588  0C26                     __end_of___fttol:	
  2589  0C26                     PL38:	
  2590  0C26  083B               	movf	___fttol@f1,w
  2591  0C27  00BF               	movwf	??___fttol
  2592  0C28  083C               	movf	___fttol@f1+1,w
  2593  0C29  00C0               	movwf	??___fttol+1
  2594  0C2A  083D               	movf	___fttol@f1+2,w
  2595  0C2B  00C1               	movwf	??___fttol+2
  2596  0C2C  0008               	return
  2597  0C2D                     __end_ofPL38:	
  2598                           
  2599                           	psect	text3
  2600  0C96                     __ptext3:	
  2601 ;; *************** function ___awtoft *****************
  2602 ;; Defined at:
  2603 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  c               2    8[COMMON] int 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  sign            1   11[COMMON] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  3    8[COMMON] float 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 300/800
  2614 ;;		On exit  : 300/0
  2615 ;;		Unchanged: 300/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  2617 ;;      Params:         3       0       0       0       0
  2618 ;;      Locals:         1       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0
  2620 ;;      Totals:         4       0       0       0       0
  2621 ;;Total ram usage:        4 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    1
  2624 ;; This function calls:
  2625 ;;		___ftpack
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function ___awtoft
  2633  0C96                     ___awtoft:	
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2637  0C96  01FB               	clrf	___awtoft@sign
  2638  0C97  1FF9               	btfss	___awtoft@c+1,7
  2639  0C98  2CA0               	goto	l2452
  2640  0C99  09F8               	comf	___awtoft@c,f
  2641  0C9A  09F9               	comf	___awtoft@c+1,f
  2642  0C9B  0AF8               	incf	___awtoft@c,f
  2643  0C9C  1903               	skipnz
  2644  0C9D  0AF9               	incf	___awtoft@c+1,f
  2645  0C9E  01FB               	clrf	___awtoft@sign
  2646  0C9F  0AFB               	incf	___awtoft@sign,f
  2647  0CA0                     l2452:	
  2648  0CA0  0878               	movf	___awtoft@c,w
  2649  0CA1  00F0               	movwf	___ftpack@arg
  2650  0CA2  0879               	movf	___awtoft@c+1,w
  2651  0CA3  00F1               	movwf	___ftpack@arg+1
  2652  0CA4  308E               	movlw	142
  2653  0CA5  01F2               	clrf	___ftpack@arg+2
  2654  0CA6  00F3               	movwf	___ftpack@exp
  2655  0CA7  087B               	movf	___awtoft@sign,w
  2656  0CA8  00F4               	movwf	___ftpack@sign
  2657  0CA9  251E               	fcall	___ftpack
  2658  0CAA  0870               	movf	?___ftpack,w
  2659  0CAB  00F8               	movwf	?___awtoft
  2660  0CAC  0871               	movf	?___ftpack+1,w
  2661  0CAD  00F9               	movwf	?___awtoft+1
  2662  0CAE  0872               	movf	?___ftpack+2,w
  2663  0CAF  00FA               	movwf	?___awtoft+2
  2664  0CB0  0008               	return
  2665  0CB1                     __end_of___awtoft:	
  2666  0CB1                     __ptext2:	
  2667 ;; *************** function ___ftmul *****************
  2668 ;; Defined at:
  2669 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  f1              3    0[BANK0 ] float 
  2672 ;;  f2              3    3[BANK0 ] float 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  f3_as_produc    3   10[BANK0 ] unsigned um
  2675 ;;  sign            1   14[BANK0 ] unsigned char 
  2676 ;;  cntr            1   13[BANK0 ] unsigned char 
  2677 ;;  exp             1    9[BANK0 ] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  3    0[BANK0 ] float 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 300/800
  2684 ;;		On exit  : 300/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  2687 ;;      Params:         0       6       0       0       0
  2688 ;;      Locals:         0       6       0       0       0
  2689 ;;      Temps:          0       3       0       0       0
  2690 ;;      Totals:         0      15       0       0       0
  2691 ;;Total ram usage:       15 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    1
  2694 ;; This function calls:
  2695 ;;		___ftpack
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function ___ftmul
  2703  0CB1                     ___ftmul:	
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2707  0CB1  082C               	movf	___ftmul@f1,w
  2708  0CB2  00B2               	movwf	??___ftmul
  2709  0CB3  082D               	movf	___ftmul@f1+1,w
  2710  0CB4  00B3               	movwf	??___ftmul+1
  2711  0CB5  082E               	movf	___ftmul@f1+2,w
  2712  0CB6  00B4               	movwf	??___ftmul+2
  2713  0CB7  1003               	clrc
  2714  0CB8  0D33               	rlf	??___ftmul+1,w
  2715  0CB9  0D34               	rlf	??___ftmul+2,w
  2716  0CBA  00B5               	movwf	___ftmul@exp
  2717  0CBB  0835               	movf	___ftmul@exp,w
  2718  0CBC  1D03               	btfss	3,2
  2719  0CBD  2CC2               	goto	l2460
  2720  0CBE  01AC               	clrf	?___ftmul
  2721  0CBF  01AD               	clrf	?___ftmul+1
  2722  0CC0  01AE               	clrf	?___ftmul+2
  2723  0CC1  0008               	return
  2724  0CC2                     l2460:	
  2725  0CC2  082F               	movf	___ftmul@f2,w
  2726  0CC3  00B2               	movwf	??___ftmul
  2727  0CC4  0830               	movf	___ftmul@f2+1,w
  2728  0CC5  00B3               	movwf	??___ftmul+1
  2729  0CC6  0831               	movf	___ftmul@f2+2,w
  2730  0CC7  00B4               	movwf	??___ftmul+2
  2731  0CC8  1003               	clrc
  2732  0CC9  0D33               	rlf	??___ftmul+1,w
  2733  0CCA  0D34               	rlf	??___ftmul+2,w
  2734  0CCB  00BA               	movwf	___ftmul@sign
  2735  0CCC  083A               	movf	___ftmul@sign,w
  2736  0CCD  1D03               	btfss	3,2
  2737  0CCE  2CD3               	goto	l2464
  2738  0CCF  01AC               	clrf	?___ftmul
  2739  0CD0  01AD               	clrf	?___ftmul+1
  2740  0CD1  01AE               	clrf	?___ftmul+2
  2741  0CD2  0008               	return
  2742  0CD3                     l2464:	
  2743  0CD3  083A               	movf	___ftmul@sign,w
  2744  0CD4  3E7B               	addlw	123
  2745  0CD5  07B5               	addwf	___ftmul@exp,f
  2746  0CD6  082E               	movf	___ftmul@f1+2,w
  2747  0CD7  00BA               	movwf	___ftmul@sign
  2748  0CD8  0831               	movf	___ftmul@f2+2,w
  2749  0CD9  06BA               	xorwf	___ftmul@sign,f
  2750  0CDA  3080               	movlw	128
  2751  0CDB  05BA               	andwf	___ftmul@sign,f
  2752  0CDC  3007               	movlw	7
  2753  0CDD  17AD               	bsf	___ftmul@f1+1,7
  2754  0CDE  17B0               	bsf	___ftmul@f2+1,7
  2755  0CDF  01B1               	clrf	___ftmul@f2+2
  2756  0CE0  01B6               	clrf	___ftmul@f3_as_product
  2757  0CE1  01B7               	clrf	___ftmul@f3_as_product+1
  2758  0CE2  01B8               	clrf	___ftmul@f3_as_product+2
  2759  0CE3  00B9               	movwf	___ftmul@cntr
  2760  0CE4                     l2482:	
  2761  0CE4  1C2C               	btfss	___ftmul@f1,0
  2762  0CE5  2CED               	goto	l2486
  2763  0CE6  2560  120A  158A   	fcall	PL18	;call to abstracted procedure
  2764  0CE9  1803               	skipnc
  2765  0CEA  0A31               	incf	___ftmul@f2+2,w
  2766  0CEB  1D03               	btfss	3,2
  2767  0CEC  07B8               	addwf	___ftmul@f3_as_product+2,f
  2768  0CED                     l2486:	
  2769  0CED  1003               	clrc
  2770  0CEE  0CAE               	rrf	___ftmul@f1+2,f
  2771  0CEF  0CAD               	rrf	___ftmul@f1+1,f
  2772  0CF0  0CAC               	rrf	___ftmul@f1,f
  2773  0CF1  1003               	clrc
  2774  0CF2  0DAF               	rlf	___ftmul@f2,f
  2775  0CF3  0DB0               	rlf	___ftmul@f2+1,f
  2776  0CF4  0DB1               	rlf	___ftmul@f2+2,f
  2777  0CF5  0BB9               	decfsz	___ftmul@cntr,f
  2778  0CF6  2CE4               	goto	l2482
  2779  0CF7  3009               	movlw	9
  2780  0CF8  00B9               	movwf	___ftmul@cntr
  2781  0CF9                     l2494:	
  2782  0CF9  1C2C               	btfss	___ftmul@f1,0
  2783  0CFA  2D02               	goto	l2498
  2784  0CFB  2560  120A  158A   	fcall	PL18	;call to abstracted procedure
  2785  0CFE  1803               	skipnc
  2786  0CFF  0A31               	incf	___ftmul@f2+2,w
  2787  0D00  1D03               	btfss	3,2
  2788  0D01  07B8               	addwf	___ftmul@f3_as_product+2,f
  2789  0D02                     l2498:	
  2790  0D02  1003               	clrc
  2791  0D03  0CAE               	rrf	___ftmul@f1+2,f
  2792  0D04  0CAD               	rrf	___ftmul@f1+1,f
  2793  0D05  0CAC               	rrf	___ftmul@f1,f
  2794  0D06  1003               	clrc
  2795  0D07  0CB8               	rrf	___ftmul@f3_as_product+2,f
  2796  0D08  0CB7               	rrf	___ftmul@f3_as_product+1,f
  2797  0D09  0CB6               	rrf	___ftmul@f3_as_product,f
  2798  0D0A  0BB9               	decfsz	___ftmul@cntr,f
  2799  0D0B  2CF9               	goto	l2494
  2800  0D0C  0836               	movf	___ftmul@f3_as_product,w
  2801  0D0D  00F0               	movwf	___ftpack@arg
  2802  0D0E  0837               	movf	___ftmul@f3_as_product+1,w
  2803  0D0F  00F1               	movwf	___ftpack@arg+1
  2804  0D10  0838               	movf	___ftmul@f3_as_product+2,w
  2805  0D11  00F2               	movwf	___ftpack@arg+2
  2806  0D12  0835               	movf	___ftmul@exp,w
  2807  0D13  00F3               	movwf	___ftpack@exp
  2808  0D14  083A               	movf	___ftmul@sign,w
  2809  0D15  00F4               	movwf	___ftpack@sign
  2810  0D16  251E               	fcall	___ftpack
  2811  0D17  0870               	movf	?___ftpack,w
  2812  0D18  00AC               	movwf	?___ftmul
  2813  0D19  0871               	movf	?___ftpack+1,w
  2814  0D1A  00AD               	movwf	?___ftmul+1
  2815  0D1B  0872               	movf	?___ftpack+2,w
  2816  0D1C  00AE               	movwf	?___ftmul+2
  2817  0D1D  0008               	return
  2818  0D1E                     __end_of___ftmul:	
  2819  0D1E                     __ptext4:	
  2820 ;; *************** function ___ftpack *****************
  2821 ;; Defined at:
  2822 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  arg             3    0[COMMON] unsigned um
  2825 ;;  exp             1    3[COMMON] unsigned char 
  2826 ;;  sign            1    4[COMMON] unsigned char 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  3    0[COMMON] float 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 300/800
  2835 ;;		On exit  : 300/0
  2836 ;;		Unchanged: 300/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  2838 ;;      Params:         5       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0
  2840 ;;      Temps:          3       0       0       0       0
  2841 ;;      Totals:         8       0       0       0       0
  2842 ;;Total ram usage:        8 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		___awtoft
  2848 ;;		___ftmul
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function ___ftpack
  2854  0D1E                     ___ftpack:	
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2858  0D1E  0873               	movf	___ftpack@exp,w
  2859  0D1F  1903               	btfsc	3,2
  2860  0D20  2D26               	goto	l766
  2861  0D21  0872               	movf	___ftpack@arg+2,w
  2862  0D22  0471               	iorwf	___ftpack@arg+1,w
  2863  0D23  0470               	iorwf	___ftpack@arg,w
  2864  0D24  1D03               	skipz
  2865  0D25  2D2F               	goto	l2056
  2866  0D26                     l766:	
  2867  0D26  01F0               	clrf	?___ftpack
  2868  0D27  01F1               	clrf	?___ftpack+1
  2869  0D28  01F2               	clrf	?___ftpack+2
  2870  0D29  0008               	return
  2871  0D2A                     l2054:	
  2872  0D2A  0AF3               	incf	___ftpack@exp,f
  2873  0D2B  1003               	clrc
  2874  0D2C  0CF2               	rrf	___ftpack@arg+2,f
  2875  0D2D  0CF1               	rrf	___ftpack@arg+1,f
  2876  0D2E  0CF0               	rrf	___ftpack@arg,f
  2877  0D2F                     l2056:	
  2878  0D2F  30FE               	movlw	254
  2879  0D30  0572               	andwf	___ftpack@arg+2,w
  2880  0D31  1903               	btfsc	3,2
  2881  0D32  2D3E               	goto	l2060
  2882  0D33  2D2A               	goto	l2054
  2883  0D34                     l2058:	
  2884  0D34  0AF3               	incf	___ftpack@exp,f
  2885  0D35  0AF0               	incf	___ftpack@arg,f
  2886  0D36  1903               	skipnz
  2887  0D37  0AF1               	incf	___ftpack@arg+1,f
  2888  0D38  1903               	skipnz
  2889  0D39  0AF2               	incf	___ftpack@arg+2,f
  2890  0D3A  1003               	clrc
  2891  0D3B  0CF2               	rrf	___ftpack@arg+2,f
  2892  0D3C  0CF1               	rrf	___ftpack@arg+1,f
  2893  0D3D  0CF0               	rrf	___ftpack@arg,f
  2894  0D3E                     l2060:	
  2895  0D3E  30FF               	movlw	255
  2896  0D3F  0572               	andwf	___ftpack@arg+2,w
  2897  0D40  1903               	btfsc	3,2
  2898  0D41  2D4C               	goto	l2064
  2899  0D42  2D34               	goto	l2058
  2900  0D43                     l2066:	
  2901  0D43  3002               	movlw	2
  2902  0D44  0273               	subwf	___ftpack@exp,w
  2903  0D45  1C03               	btfss	3,0
  2904  0D46  2D4E               	goto	l778
  2905  0D47  03F3               	decf	___ftpack@exp,f
  2906  0D48  1003               	clrc
  2907  0D49  0DF0               	rlf	___ftpack@arg,f
  2908  0D4A  0DF1               	rlf	___ftpack@arg+1,f
  2909  0D4B  0DF2               	rlf	___ftpack@arg+2,f
  2910  0D4C                     l2064:	
  2911  0D4C  1FF1               	btfss	___ftpack@arg+1,7
  2912  0D4D  2D43               	goto	l2066
  2913  0D4E                     l778:	
  2914  0D4E  1C73               	btfss	___ftpack@exp,0
  2915  0D4F  13F1               	bcf	___ftpack@arg+1,7
  2916  0D50  1003               	clrc
  2917  0D51  0CF3               	rrf	___ftpack@exp,f
  2918  0D52  0873               	movf	___ftpack@exp,w
  2919  0D53  00F7               	movwf	??___ftpack+2
  2920  0D54  01F6               	clrf	??___ftpack+1
  2921  0D55  01F5               	clrf	??___ftpack
  2922  0D56  0875               	movf	??___ftpack,w
  2923  0D57  04F0               	iorwf	___ftpack@arg,f
  2924  0D58  0876               	movf	??___ftpack+1,w
  2925  0D59  04F1               	iorwf	___ftpack@arg+1,f
  2926  0D5A  0877               	movf	??___ftpack+2,w
  2927  0D5B  04F2               	iorwf	___ftpack@arg+2,f
  2928  0D5C  0874               	movf	___ftpack@sign,w
  2929  0D5D  1D03               	btfss	3,2
  2930  0D5E  17F2               	bsf	___ftpack@arg+2,7
  2931  0D5F  0008               	return
  2932  0D60                     __end_of___ftpack:	
  2933  0D60                     PL18:	
  2934  0D60  082F               	movf	___ftmul@f2,w
  2935  0D61  07B6               	addwf	___ftmul@f3_as_product,f
  2936  0D62  0830               	movf	___ftmul@f2+1,w
  2937  0D63  1103               	clrz
  2938  0D64  1803               	skipnc
  2939  0D65  0A30               	incf	___ftmul@f2+1,w
  2940  0D66  1D03               	btfss	3,2
  2941  0D67  07B7               	addwf	___ftmul@f3_as_product+1,f
  2942  0D68  0831               	movf	___ftmul@f2+2,w
  2943  0D69  1103               	clrz
  2944  0D6A  0008               	return
  2945  0D6B                     __end_ofPL18:	
  2946                           
  2947                           	psect	text5
  2948  0C2D                     __ptext5:	
  2949 ;; *************** function ___almod *****************
  2950 ;; Defined at:
  2951 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\almod.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  divisor         4    0[COMMON] long 
  2954 ;;  dividend        4    4[COMMON] long 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  sign            1    9[COMMON] unsigned char 
  2957 ;;  counter         1    8[COMMON] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  4    0[COMMON] long 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0
  2962 ;; Tracked objects:
  2963 ;;		On entry : B00/0
  2964 ;;		On exit  : B00/0
  2965 ;;		Unchanged: B00/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  2967 ;;      Params:         8       0       0       0       0
  2968 ;;      Locals:         2       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0
  2970 ;;      Totals:        10       0       0       0       0
  2971 ;;Total ram usage:       10 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function ___almod
  2982  0C2D                     ___almod:	
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2986  0C2D  01F9               	clrf	___almod@sign
  2987  0C2E  1FF7               	btfss	___almod@dividend+3,7
  2988  0C2F  2C3D               	goto	l678
  2989  0C30  09F4               	comf	___almod@dividend,f
  2990  0C31  09F5               	comf	___almod@dividend+1,f
  2991  0C32  09F6               	comf	___almod@dividend+2,f
  2992  0C33  09F7               	comf	___almod@dividend+3,f
  2993  0C34  0AF4               	incf	___almod@dividend,f
  2994  0C35  1903               	skipnz
  2995  0C36  0AF5               	incf	___almod@dividend+1,f
  2996  0C37  1903               	skipnz
  2997  0C38  0AF6               	incf	___almod@dividend+2,f
  2998  0C39  1903               	skipnz
  2999  0C3A  0AF7               	incf	___almod@dividend+3,f
  3000  0C3B  01F9               	clrf	___almod@sign
  3001  0C3C  0AF9               	incf	___almod@sign,f
  3002  0C3D                     l678:	
  3003  0C3D  1FF3               	btfss	___almod@divisor+3,7
  3004  0C3E  2C4A               	goto	l2420
  3005  0C3F  09F0               	comf	___almod@divisor,f
  3006  0C40  09F1               	comf	___almod@divisor+1,f
  3007  0C41  09F2               	comf	___almod@divisor+2,f
  3008  0C42  09F3               	comf	___almod@divisor+3,f
  3009  0C43  0AF0               	incf	___almod@divisor,f
  3010  0C44  1903               	skipnz
  3011  0C45  0AF1               	incf	___almod@divisor+1,f
  3012  0C46  1903               	skipnz
  3013  0C47  0AF2               	incf	___almod@divisor+2,f
  3014  0C48  1903               	skipnz
  3015  0C49  0AF3               	incf	___almod@divisor+3,f
  3016  0C4A                     l2420:	
  3017  0C4A  0873               	movf	___almod@divisor+3,w
  3018  0C4B  0472               	iorwf	___almod@divisor+2,w
  3019  0C4C  0471               	iorwf	___almod@divisor+1,w
  3020  0C4D  0470               	iorwf	___almod@divisor,w
  3021  0C4E  1903               	skipnz
  3022  0C4F  2C7F               	goto	l2436
  3023  0C50  01F8               	clrf	___almod@counter
  3024  0C51                     L6:	
  3025  0C51  0AF8               	incf	___almod@counter,f
  3026  0C52  1BF3               	btfsc	___almod@divisor+3,7
  3027  0C53  2C5A               	goto	l2428
  3028  0C54  1003               	clrc
  3029  0C55  0DF0               	rlf	___almod@divisor,f
  3030  0C56  0DF1               	rlf	___almod@divisor+1,f
  3031  0C57  0DF2               	rlf	___almod@divisor+2,f
  3032  0C58  0DF3               	rlf	___almod@divisor+3,f
  3033  0C59  2C51               	goto	L6
  3034  0C5A                     l2428:	
  3035  0C5A  0873               	movf	___almod@divisor+3,w
  3036  0C5B  0277               	subwf	___almod@dividend+3,w
  3037  0C5C  1D03               	skipz
  3038  0C5D  2C68               	goto	u2715
  3039  0C5E  0872               	movf	___almod@divisor+2,w
  3040  0C5F  0276               	subwf	___almod@dividend+2,w
  3041  0C60  1D03               	skipz
  3042  0C61  2C68               	goto	u2715
  3043  0C62  0871               	movf	___almod@divisor+1,w
  3044  0C63  0275               	subwf	___almod@dividend+1,w
  3045  0C64  1D03               	skipz
  3046  0C65  2C68               	goto	u2715
  3047  0C66  0870               	movf	___almod@divisor,w
  3048  0C67  0274               	subwf	___almod@dividend,w
  3049  0C68                     u2715:	
  3050  0C68  1C03               	skipc
  3051  0C69  2C79               	goto	L7
  3052  0C6A  0870               	movf	___almod@divisor,w
  3053  0C6B  02F4               	subwf	___almod@dividend,f
  3054  0C6C  0871               	movf	___almod@divisor+1,w
  3055  0C6D  1C03               	skipc
  3056  0C6E  0F71               	incfsz	___almod@divisor+1,w
  3057  0C6F  02F5               	subwf	___almod@dividend+1,f
  3058  0C70  0872               	movf	___almod@divisor+2,w
  3059  0C71  1C03               	skipc
  3060  0C72  0F72               	incfsz	___almod@divisor+2,w
  3061  0C73  02F6               	subwf	___almod@dividend+2,f
  3062  0C74  0873               	movf	___almod@divisor+3,w
  3063  0C75  1C03               	skipc
  3064  0C76  0F73               	incfsz	___almod@divisor+3,w
  3065  0C77  02F7               	subwf	___almod@dividend+3,f
  3066  0C78  1003               	clrc
  3067  0C79                     L7:	
  3068  0C79  0CF3               	rrf	___almod@divisor+3,f
  3069  0C7A  0CF2               	rrf	___almod@divisor+2,f
  3070  0C7B  0CF1               	rrf	___almod@divisor+1,f
  3071  0C7C  0CF0               	rrf	___almod@divisor,f
  3072  0C7D  0BF8               	decfsz	___almod@counter,f
  3073  0C7E  2C5A               	goto	l2428
  3074  0C7F                     l2436:	
  3075  0C7F  0879               	movf	___almod@sign,w
  3076  0C80  1903               	btfsc	3,2
  3077  0C81  2C8D               	goto	l2440
  3078  0C82  09F4               	comf	___almod@dividend,f
  3079  0C83  09F5               	comf	___almod@dividend+1,f
  3080  0C84  09F6               	comf	___almod@dividend+2,f
  3081  0C85  09F7               	comf	___almod@dividend+3,f
  3082  0C86  0AF4               	incf	___almod@dividend,f
  3083  0C87  1903               	skipnz
  3084  0C88  0AF5               	incf	___almod@dividend+1,f
  3085  0C89  1903               	skipnz
  3086  0C8A  0AF6               	incf	___almod@dividend+2,f
  3087  0C8B  1903               	skipnz
  3088  0C8C  0AF7               	incf	___almod@dividend+3,f
  3089  0C8D                     l2440:	
  3090  0C8D  0877               	movf	___almod@dividend+3,w
  3091  0C8E  00F3               	movwf	?___almod+3
  3092  0C8F  0876               	movf	___almod@dividend+2,w
  3093  0C90  00F2               	movwf	?___almod+2
  3094  0C91  0875               	movf	___almod@dividend+1,w
  3095  0C92  00F1               	movwf	?___almod+1
  3096  0C93  0874               	movf	___almod@dividend,w
  3097  0C94  00F0               	movwf	?___almod
  3098  0C95  0008               	return
  3099  0C96                     __end_of___almod:	
  3100                           
  3101                           	psect	text6
  3102  0406                     __ptext6:	
  3103 ;; *************** function _WriteLongInt *****************
  3104 ;; Defined at:
  3105 ;;		line 183 in file "libs/HD44780.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  y               1    wreg     unsigned char 
  3108 ;;  x               1    7[BANK0 ] unsigned char 
  3109 ;;  Val             4    8[BANK0 ] long 
  3110 ;;  size            1   12[BANK0 ] char 
  3111 ;;  Sign            1   13[BANK0 ] unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  y               1   16[BANK0 ] unsigned char 
  3114 ;;  POS             1   15[BANK0 ] char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 300/800
  3121 ;;		On exit  : 300/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  3124 ;;      Params:         0       7       0       0       0
  3125 ;;      Locals:         0       2       0       0       0
  3126 ;;      Temps:          0       1       0       0       0
  3127 ;;      Totals:         0      10       0       0       0
  3128 ;;Total ram usage:       10 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    3
  3131 ;; This function calls:
  3132 ;;		_Lcd_WriteChar
  3133 ;;		___aldiv
  3134 ;;		___bmul
  3135 ;;		___lmul
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function _WriteLongInt
  3143  0406                     _WriteLongInt:	
  3144                           
  3145                           ;incstack = 0
  3146                           ; Regs used in _WriteLongInt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3147                           ;WriteLongInt@y stored from wreg
  3148  0406  00BC               	movwf	WriteLongInt@y
  3149                           
  3150                           ;HD44780.c: 184: int8_t POS = 0;
  3151  0407  01BB               	clrf	WriteLongInt@POS
  3152                           
  3153                           ;HD44780.c: 185: if (Sign) {
  3154  0408  0839               	movf	WriteLongInt@Sign,w
  3155  0409  1903               	btfsc	3,2
  3156  040A  2C38               	goto	l2272
  3157                           
  3158                           ;HD44780.c: 186: POS++;
  3159  040B  0ABB               	incf	WriteLongInt@POS,f
  3160                           
  3161                           ;HD44780.c: 187: if (Val<0) {
  3162  040C  1FB7               	btfss	WriteLongInt@Val+3,7
  3163  040D  2C30               	goto	l2264
  3164                           
  3165                           ;HD44780.c: 188: Lcd_WriteChar (y, x, 0x2D);
  3166  040E  0833               	movf	WriteLongInt@x,w
  3167  040F  00AF               	movwf	Lcd_WriteChar@x
  3168  0410  302D               	movlw	45
  3169  0411  00B0               	movwf	Lcd_WriteChar@c
  3170  0412  083C               	movf	WriteLongInt@y,w
  3171  0413  2472               	fcall	_Lcd_WriteChar
  3172                           
  3173                           ;HD44780.c: 189: Val=-1*Val;
  3174  0414  30FF               	movlw	255
  3175  0415  00F0               	movwf	___lmul@multiplier
  3176  0416  00F1               	movwf	___lmul@multiplier+1
  3177  0417  00F2               	movwf	___lmul@multiplier+2
  3178  0418  00F3               	movwf	___lmul@multiplier+3
  3179  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3180  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3181  041B  0837               	movf	WriteLongInt@Val+3,w
  3182  041C  00F7               	movwf	___lmul@multiplicand+3
  3183  041D  0836               	movf	WriteLongInt@Val+2,w
  3184  041E  00F6               	movwf	___lmul@multiplicand+2
  3185  041F  0835               	movf	WriteLongInt@Val+1,w
  3186  0420  00F5               	movwf	___lmul@multiplicand+1
  3187  0421  0834               	movf	WriteLongInt@Val,w
  3188  0422  00F4               	movwf	___lmul@multiplicand
  3189  0423  120A  158A  27C4  120A  118A  	fcall	___lmul
  3190  0428  0873               	movf	?___lmul+3,w
  3191  0429  00B7               	movwf	WriteLongInt@Val+3
  3192  042A  0872               	movf	?___lmul+2,w
  3193  042B  00B6               	movwf	WriteLongInt@Val+2
  3194  042C  0871               	movf	?___lmul+1,w
  3195  042D  00B5               	movwf	WriteLongInt@Val+1
  3196  042E  0870               	movf	?___lmul,w
  3197  042F  2C70               	goto	L8
  3198  0430                     l2264:	
  3199                           ;HD44780.c: 190: } else
  3200                           
  3201                           
  3202                           ;HD44780.c: 191: Lcd_WriteChar (y, x, 0x2B);
  3203  0430  0833               	movf	WriteLongInt@x,w
  3204  0431  00AF               	movwf	Lcd_WriteChar@x
  3205  0432  302B               	movlw	43
  3206  0433  00B0               	movwf	Lcd_WriteChar@c
  3207  0434  083C               	movf	WriteLongInt@y,w
  3208  0435  2472  120A  118A   	fcall	_Lcd_WriteChar
  3209  0438                     l2272:	
  3210  0438  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0439  1303               	bcf	3,6	;RP1=0, select bank0
  3212  043A  0838               	movf	WriteLongInt@size,w
  3213  043B  1903               	btfsc	3,2
  3214  043C  0008               	return
  3215                           
  3216                           ;HD44780.c: 194: size--;
  3217  043D  03B8               	decf	WriteLongInt@size,f
  3218                           
  3219                           ;HD44780.c: 195: Lcd_WriteChar (y, x+size+POS, ((Val - ((Val/10)*10))+0x30));
  3220  043E  083B               	movf	WriteLongInt@POS,w
  3221  043F  0738               	addwf	WriteLongInt@size,w
  3222  0440  00BA               	movwf	??_WriteLongInt
  3223  0441  0833               	movf	WriteLongInt@x,w
  3224  0442  073A               	addwf	??_WriteLongInt,w
  3225  0443  00AF               	movwf	Lcd_WriteChar@x
  3226  0444  30F6               	movlw	246
  3227  0445  00AC               	movwf	___bmul@multiplicand
  3228  0446  27CA  120A  118A   	fcall	PL30	;call to abstracted procedure
  3229  0449  300A               	movlw	10
  3230  044A  00F0               	movwf	___aldiv@divisor
  3231  044B  01F1               	clrf	___aldiv@divisor+1
  3232  044C  01F2               	clrf	___aldiv@divisor+2
  3233  044D  01F3               	clrf	___aldiv@divisor+3
  3234  044E  2497  120A  118A   	fcall	___aldiv
  3235  0451  0870               	movf	?___aldiv,w
  3236  0452  279E  120A  118A   	fcall	___bmul
  3237  0455  0734               	addwf	WriteLongInt@Val,w
  3238  0456  3E30               	addlw	48
  3239  0457  00B0               	movwf	Lcd_WriteChar@c
  3240  0458  083C               	movf	WriteLongInt@y,w
  3241  0459  2472  120A  118A   	fcall	_Lcd_WriteChar
  3242                           
  3243                           ;HD44780.c: 196: Val = Val/10;
  3244  045C  300A               	movlw	10
  3245  045D  00F0               	movwf	___aldiv@divisor
  3246  045E  01F1               	clrf	___aldiv@divisor+1
  3247  045F  01F2               	clrf	___aldiv@divisor+2
  3248  0460  01F3               	clrf	___aldiv@divisor+3
  3249  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0463  27CA  120A  118A   	fcall	PL30	;call to abstracted procedure
  3252  0466  2497  120A  118A   	fcall	___aldiv
  3253  0469  0873               	movf	?___aldiv+3,w
  3254  046A  00B7               	movwf	WriteLongInt@Val+3
  3255  046B  0872               	movf	?___aldiv+2,w
  3256  046C  00B6               	movwf	WriteLongInt@Val+2
  3257  046D  0871               	movf	?___aldiv+1,w
  3258  046E  00B5               	movwf	WriteLongInt@Val+1
  3259  046F  0870               	movf	?___aldiv,w
  3260  0470                     L8:	
  3261  0470  00B4               	movwf	WriteLongInt@Val
  3262  0471  2C38               	goto	l2272
  3263  0472                     __end_of_WriteLongInt:	
  3264  0472                     __ptext25:	
  3265 ;; *************** function _Lcd_WriteChar *****************
  3266 ;; Defined at:
  3267 ;;		line 99 in file "libs/HD44780.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  y               1    wreg     unsigned char 
  3270 ;;  x               1    3[BANK0 ] unsigned char 
  3271 ;;  c               1    4[BANK0 ] unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  y               1    5[BANK0 ] unsigned char 
  3274 ;;  data            1    6[BANK0 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 300/800
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  3284 ;;      Params:         0       2       0       0       0
  3285 ;;      Locals:         0       2       0       0       0
  3286 ;;      Temps:          0       0       0       0       0
  3287 ;;      Totals:         0       4       0       0       0
  3288 ;;Total ram usage:        4 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    2
  3291 ;; This function calls:
  3292 ;;		_Lcd_CharCP
  3293 ;;		_Lcd_Command
  3294 ;; This function is called by:
  3295 ;;		_WriteLongInt
  3296 ;;		_Lcd_Disp_Bin
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           
  3301                           ;psect for function _Lcd_WriteChar
  3302  0472                     _Lcd_WriteChar:	
  3303                           
  3304                           ;incstack = 0
  3305                           ; Regs used in _Lcd_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3306                           ;Lcd_WriteChar@y stored from wreg
  3307  0472  00B1               	movwf	Lcd_WriteChar@y
  3308                           
  3309                           ;HD44780.c: 100: unsigned char data;
  3310                           ;HD44780.c: 101: switch(y) {
  3311  0473  2C81               	goto	l1986
  3312  0474                     l1976:	
  3313  0474  082F               	movf	Lcd_WriteChar@x,w
  3314  0475  3E7F               	addlw	127
  3315  0476  2C7F               	goto	L17
  3316  0477                     l1978:	
  3317  0477  082F               	movf	Lcd_WriteChar@x,w
  3318  0478  3EBF               	addlw	191
  3319  0479  2C7F               	goto	L17
  3320  047A                     l1980:	
  3321  047A  082F               	movf	Lcd_WriteChar@x,w
  3322  047B  3E93               	addlw	147
  3323  047C  2C7F               	goto	L17
  3324  047D                     l1982:	
  3325  047D  082F               	movf	Lcd_WriteChar@x,w
  3326  047E  3ED3               	addlw	211
  3327  047F                     L17:	
  3328  047F  00B2               	movwf	Lcd_WriteChar@data
  3329  0480  2C8F               	goto	l1988
  3330  0481                     l1986:	
  3331  0481  0831               	movf	Lcd_WriteChar@y,w
  3332                           
  3333                           ; Switch size 1, requested type "space"
  3334                           ; Number of cases is 4, Range of values is 1 to 4
  3335                           ; switch strategies available:
  3336                           ; Name         Instructions Cycles
  3337                           ; simple_byte           13     7 (average)
  3338                           ; direct_byte           23    11 (fixed)
  3339                           ; jumptable            263     9 (fixed)
  3340                           ;	Chosen strategy is simple_byte
  3341  0482  3A01               	xorlw	1	; case 1
  3342  0483  1903               	skipnz
  3343  0484  2C74               	goto	l1976
  3344  0485  3A03               	xorlw	3	; case 2
  3345  0486  1903               	skipnz
  3346  0487  2C77               	goto	l1978
  3347  0488  3A01               	xorlw	1	; case 3
  3348  0489  1903               	skipnz
  3349  048A  2C7A               	goto	l1980
  3350  048B  3A07               	xorlw	7	; case 4
  3351  048C  1903               	skipnz
  3352  048D  2C7D               	goto	l1982
  3353  048E  2C8F               	goto	l1988
  3354  048F                     l1988:	
  3355                           
  3356                           ;HD44780.c: 108: Lcd_Command(data);
  3357  048F  0832               	movf	Lcd_WriteChar@data,w
  3358  0490  2635  120A  118A   	fcall	_Lcd_Command
  3359                           
  3360                           ;HD44780.c: 109: Lcd_CharCP(c);
  3361  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0495  0830               	movf	Lcd_WriteChar@c,w
  3364  0496  2D41               	ljmp	_Lcd_CharCP
  3365  0497                     __end_of_Lcd_WriteChar:	
  3366  0497                     __ptext7:	
  3367 ;; *************** function ___aldiv *****************
  3368 ;; Defined at:
  3369 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  divisor         4    0[COMMON] long 
  3372 ;;  dividend        4    4[COMMON] long 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  quotient        4   10[COMMON] long 
  3375 ;;  sign            1    9[COMMON] unsigned char 
  3376 ;;  counter         1    8[COMMON] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  4    0[COMMON] long 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 300/800
  3383 ;;		On exit  : 300/0
  3384 ;;		Unchanged: 300/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  3386 ;;      Params:         8       0       0       0       0
  3387 ;;      Locals:         6       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0
  3389 ;;      Totals:        14       0       0       0       0
  3390 ;;Total ram usage:       14 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_WriteLongInt
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function ___aldiv
  3401  0497                     ___aldiv:	
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3405  0497  01F9               	clrf	___aldiv@sign
  3406  0498  1FF3               	btfss	___aldiv@divisor+3,7
  3407  0499  2CA7               	goto	l665
  3408  049A  09F0               	comf	___aldiv@divisor,f
  3409  049B  09F1               	comf	___aldiv@divisor+1,f
  3410  049C  09F2               	comf	___aldiv@divisor+2,f
  3411  049D  09F3               	comf	___aldiv@divisor+3,f
  3412  049E  0AF0               	incf	___aldiv@divisor,f
  3413  049F  1903               	skipnz
  3414  04A0  0AF1               	incf	___aldiv@divisor+1,f
  3415  04A1  1903               	skipnz
  3416  04A2  0AF2               	incf	___aldiv@divisor+2,f
  3417  04A3  1903               	skipnz
  3418  04A4  0AF3               	incf	___aldiv@divisor+3,f
  3419  04A5  01F9               	clrf	___aldiv@sign
  3420  04A6  0AF9               	incf	___aldiv@sign,f
  3421  04A7                     l665:	
  3422  04A7  1FF7               	btfss	___aldiv@dividend+3,7
  3423  04A8  2CB6               	goto	l2084
  3424  04A9  09F4               	comf	___aldiv@dividend,f
  3425  04AA  09F5               	comf	___aldiv@dividend+1,f
  3426  04AB  09F6               	comf	___aldiv@dividend+2,f
  3427  04AC  09F7               	comf	___aldiv@dividend+3,f
  3428  04AD  0AF4               	incf	___aldiv@dividend,f
  3429  04AE  1903               	skipnz
  3430  04AF  0AF5               	incf	___aldiv@dividend+1,f
  3431  04B0  1903               	skipnz
  3432  04B1  0AF6               	incf	___aldiv@dividend+2,f
  3433  04B2  1903               	skipnz
  3434  04B3  0AF7               	incf	___aldiv@dividend+3,f
  3435  04B4  3001               	movlw	1
  3436  04B5  06F9               	xorwf	___aldiv@sign,f
  3437  04B6                     l2084:	
  3438  04B6  01FA               	clrf	___aldiv@quotient
  3439  04B7  01FB               	clrf	___aldiv@quotient+1
  3440  04B8  01FC               	clrf	___aldiv@quotient+2
  3441  04B9  01FD               	clrf	___aldiv@quotient+3
  3442  04BA  0873               	movf	___aldiv@divisor+3,w
  3443  04BB  0472               	iorwf	___aldiv@divisor+2,w
  3444  04BC  0471               	iorwf	___aldiv@divisor+1,w
  3445  04BD  0470               	iorwf	___aldiv@divisor,w
  3446  04BE  1903               	skipnz
  3447  04BF  2CF5               	goto	l2106
  3448  04C0  01F8               	clrf	___aldiv@counter
  3449  04C1                     L9:	
  3450  04C1  0AF8               	incf	___aldiv@counter,f
  3451  04C2  1BF3               	btfsc	___aldiv@divisor+3,7
  3452  04C3  2CCA               	goto	l2094
  3453  04C4  1003               	clrc
  3454  04C5  0DF0               	rlf	___aldiv@divisor,f
  3455  04C6  0DF1               	rlf	___aldiv@divisor+1,f
  3456  04C7  0DF2               	rlf	___aldiv@divisor+2,f
  3457  04C8  0DF3               	rlf	___aldiv@divisor+3,f
  3458  04C9  2CC1               	goto	L9
  3459  04CA                     l2094:	
  3460  04CA  1003               	clrc
  3461  04CB  0DFA               	rlf	___aldiv@quotient,f
  3462  04CC  0DFB               	rlf	___aldiv@quotient+1,f
  3463  04CD  0DFC               	rlf	___aldiv@quotient+2,f
  3464  04CE  0DFD               	rlf	___aldiv@quotient+3,f
  3465  04CF  0873               	movf	___aldiv@divisor+3,w
  3466  04D0  0277               	subwf	___aldiv@dividend+3,w
  3467  04D1  1D03               	skipz
  3468  04D2  2CDD               	goto	u2265
  3469  04D3  0872               	movf	___aldiv@divisor+2,w
  3470  04D4  0276               	subwf	___aldiv@dividend+2,w
  3471  04D5  1D03               	skipz
  3472  04D6  2CDD               	goto	u2265
  3473  04D7  0871               	movf	___aldiv@divisor+1,w
  3474  04D8  0275               	subwf	___aldiv@dividend+1,w
  3475  04D9  1D03               	skipz
  3476  04DA  2CDD               	goto	u2265
  3477  04DB  0870               	movf	___aldiv@divisor,w
  3478  04DC  0274               	subwf	___aldiv@dividend,w
  3479  04DD                     u2265:	
  3480  04DD  1C03               	skipc
  3481  04DE  2CEF               	goto	L10
  3482  04DF  0870               	movf	___aldiv@divisor,w
  3483  04E0  02F4               	subwf	___aldiv@dividend,f
  3484  04E1  0871               	movf	___aldiv@divisor+1,w
  3485  04E2  1C03               	skipc
  3486  04E3  0F71               	incfsz	___aldiv@divisor+1,w
  3487  04E4  02F5               	subwf	___aldiv@dividend+1,f
  3488  04E5  0872               	movf	___aldiv@divisor+2,w
  3489  04E6  1C03               	skipc
  3490  04E7  0F72               	incfsz	___aldiv@divisor+2,w
  3491  04E8  02F6               	subwf	___aldiv@dividend+2,f
  3492  04E9  0873               	movf	___aldiv@divisor+3,w
  3493  04EA  1C03               	skipc
  3494  04EB  0F73               	incfsz	___aldiv@divisor+3,w
  3495  04EC  02F7               	subwf	___aldiv@dividend+3,f
  3496  04ED  147A               	bsf	___aldiv@quotient,0
  3497  04EE  1003               	clrc
  3498  04EF                     L10:	
  3499  04EF  0CF3               	rrf	___aldiv@divisor+3,f
  3500  04F0  0CF2               	rrf	___aldiv@divisor+2,f
  3501  04F1  0CF1               	rrf	___aldiv@divisor+1,f
  3502  04F2  0CF0               	rrf	___aldiv@divisor,f
  3503  04F3  0BF8               	decfsz	___aldiv@counter,f
  3504  04F4  2CCA               	goto	l2094
  3505  04F5                     l2106:	
  3506  04F5  0879               	movf	___aldiv@sign,w
  3507  04F6  1903               	btfsc	3,2
  3508  04F7  2D03               	goto	l2110
  3509  04F8  09FA               	comf	___aldiv@quotient,f
  3510  04F9  09FB               	comf	___aldiv@quotient+1,f
  3511  04FA  09FC               	comf	___aldiv@quotient+2,f
  3512  04FB  09FD               	comf	___aldiv@quotient+3,f
  3513  04FC  0AFA               	incf	___aldiv@quotient,f
  3514  04FD  1903               	skipnz
  3515  04FE  0AFB               	incf	___aldiv@quotient+1,f
  3516  04FF  1903               	skipnz
  3517  0500  0AFC               	incf	___aldiv@quotient+2,f
  3518  0501  1903               	skipnz
  3519  0502  0AFD               	incf	___aldiv@quotient+3,f
  3520  0503                     l2110:	
  3521  0503  087D               	movf	___aldiv@quotient+3,w
  3522  0504  00F3               	movwf	?___aldiv+3
  3523  0505  087C               	movf	___aldiv@quotient+2,w
  3524  0506  00F2               	movwf	?___aldiv+2
  3525  0507  087B               	movf	___aldiv@quotient+1,w
  3526  0508  00F1               	movwf	?___aldiv+1
  3527  0509  087A               	movf	___aldiv@quotient,w
  3528  050A  00F0               	movwf	?___aldiv
  3529  050B  0008               	return
  3530  050C                     __end_of___aldiv:	
  3531  050C                     __ptext21:	
  3532 ;; *************** function _Lcd_Text *****************
  3533 ;; Defined at:
  3534 ;;		line 76 in file "libs/HD44780.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  y               1    wreg     unsigned char 
  3537 ;;  x               1    2[COMMON] unsigned char 
  3538 ;;  buffer          1    3[COMMON] PTR unsigned char 
  3539 ;;		 -> STR_2(12), STR_1(8), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  y               1    4[COMMON] unsigned char 
  3542 ;;  data            1    5[COMMON] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  3552 ;;      Params:         2       0       0       0       0
  3553 ;;      Locals:         2       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0
  3555 ;;      Totals:         4       0       0       0       0
  3556 ;;Total ram usage:        4 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    2
  3559 ;; This function calls:
  3560 ;;		_Lcd_CharCP
  3561 ;;		_Lcd_Command
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _Lcd_Text
  3569  050C                     _Lcd_Text:	
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in _Lcd_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3573                           ;Lcd_Text@y stored from wreg
  3574  050C  00F4               	movwf	Lcd_Text@y
  3575                           
  3576                           ;HD44780.c: 77: unsigned char data;
  3577                           ;HD44780.c: 78: switch(y){
  3578  050D  2D1B               	goto	l2242
  3579  050E                     l2232:	
  3580  050E  0872               	movf	Lcd_Text@x,w
  3581  050F  3E7F               	addlw	127
  3582  0510  2D19               	goto	L14
  3583  0511                     l2234:	
  3584  0511  0872               	movf	Lcd_Text@x,w
  3585  0512  3EBF               	addlw	191
  3586  0513  2D19               	goto	L14
  3587  0514                     l2236:	
  3588  0514  0872               	movf	Lcd_Text@x,w
  3589  0515  3E93               	addlw	147
  3590  0516  2D19               	goto	L14
  3591  0517                     l2238:	
  3592  0517  0872               	movf	Lcd_Text@x,w
  3593  0518  3ED3               	addlw	211
  3594  0519                     L14:	
  3595  0519  00F5               	movwf	Lcd_Text@data
  3596  051A  2D29               	goto	l2244
  3597  051B                     l2242:	
  3598  051B  0874               	movf	Lcd_Text@y,w
  3599                           
  3600                           ; Switch size 1, requested type "space"
  3601                           ; Number of cases is 4, Range of values is 1 to 4
  3602                           ; switch strategies available:
  3603                           ; Name         Instructions Cycles
  3604                           ; simple_byte           13     7 (average)
  3605                           ; direct_byte           23    11 (fixed)
  3606                           ; jumptable            263     9 (fixed)
  3607                           ;	Chosen strategy is simple_byte
  3608  051C  3A01               	xorlw	1	; case 1
  3609  051D  1903               	skipnz
  3610  051E  2D0E               	goto	l2232
  3611  051F  3A03               	xorlw	3	; case 2
  3612  0520  1903               	skipnz
  3613  0521  2D11               	goto	l2234
  3614  0522  3A01               	xorlw	1	; case 3
  3615  0523  1903               	skipnz
  3616  0524  2D14               	goto	l2236
  3617  0525  3A07               	xorlw	7	; case 4
  3618  0526  1903               	skipnz
  3619  0527  2D17               	goto	l2238
  3620  0528  2D29               	goto	l2244
  3621  0529                     l2244:	
  3622                           
  3623                           ;HD44780.c: 84: Lcd_Command(data);
  3624  0529  0875               	movf	Lcd_Text@data,w
  3625  052A  2635               	fcall	_Lcd_Command
  3626  052B                     l2250:	
  3627                           ;HD44780.c: 85: while(*buffer)
  3628                           
  3629  052B  0873               	movf	Lcd_Text@buffer,w
  3630  052C  0084               	movwf	4
  3631  052D  120A  158A  2000  120A  118A  	fcall	stringdir
  3632  0532  3A00               	xorlw	0
  3633  0533  1903               	btfsc	3,2
  3634  0534  0008               	return
  3635                           
  3636                           ;HD44780.c: 86: {
  3637                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  3638  0535  0873               	movf	Lcd_Text@buffer,w
  3639  0536  0084               	movwf	4
  3640  0537  120A  158A  2000  120A  118A  	fcall	stringdir
  3641  053C  2541  120A  118A   	fcall	_Lcd_CharCP
  3642                           
  3643                           ;HD44780.c: 88: buffer++;
  3644  053F  0AF3               	incf	Lcd_Text@buffer,f
  3645  0540  2D2B               	goto	l2250
  3646  0541                     __end_of_Lcd_Text:	
  3647  0541                     __ptext27:	
  3648 ;; *************** function _Lcd_CharCP *****************
  3649 ;; Defined at:
  3650 ;;		line 116 in file "libs/HD44780.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  c               1    wreg     unsigned char 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  c               1    1[COMMON] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0, pclath, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  3664 ;;      Params:         0       0       0       0       0
  3665 ;;      Locals:         1       0       0       0       0
  3666 ;;      Temps:          1       0       0       0       0
  3667 ;;      Totals:         2       0       0       0       0
  3668 ;;Total ram usage:        2 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    1
  3671 ;; This function calls:
  3672 ;;		_Lcd_Delay5us
  3673 ;; This function is called by:
  3674 ;;		_Lcd_Text
  3675 ;;		_Lcd_WriteChar
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           
  3680                           ;psect for function _Lcd_CharCP
  3681  0541                     _Lcd_CharCP:	
  3682                           
  3683                           ;incstack = 0
  3684                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0+pclath+cstack]
  3685                           ;Lcd_CharCP@c stored from wreg
  3686  0541  00F1               	movwf	Lcd_CharCP@c
  3687                           
  3688                           ;HD44780.c: 117: RA1 = 0; RA0 = 1;
  3689  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3691  0544  1085               	bcf	5,1	;volatile
  3692  0545  1405               	bsf	5,0	;volatile
  3693                           
  3694                           ;HD44780.c: 118: RA5 = (c & 0b10000000)>>7; RA4 = (c & 0b01000000)>>6;
  3695  0546  0871               	movf	Lcd_CharCP@c,w
  3696  0547  00F0               	movwf	??_Lcd_CharCP
  3697  0548  3007               	movlw	7
  3698  0549                     u1835:	
  3699  0549  1003               	clrc
  3700  054A  0CF0               	rrf	??_Lcd_CharCP,f
  3701  054B  3EFF               	addlw	-1
  3702  054C  1D03               	skipz
  3703  054D  2D49               	goto	u1835
  3704  054E  1C70               	btfss	??_Lcd_CharCP,0
  3705  054F  2D54               	goto	u1840
  3706  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0552  1685               	bsf	5,5	;volatile
  3709  0553  2D57               	goto	u1854
  3710  0554                     u1840:	
  3711  0554  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0555  1303               	bcf	3,6	;RP1=0, select bank0
  3713  0556  1285               	bcf	5,5	;volatile
  3714  0557                     u1854:	
  3715  0557  0871               	movf	Lcd_CharCP@c,w
  3716  0558  00F0               	movwf	??_Lcd_CharCP
  3717  0559  3006               	movlw	6
  3718  055A                     u1865:	
  3719  055A  1003               	clrc
  3720  055B  0CF0               	rrf	??_Lcd_CharCP,f
  3721  055C  3EFF               	addlw	-1
  3722  055D  1D03               	skipz
  3723  055E  2D5A               	goto	u1865
  3724  055F  1C70               	btfss	??_Lcd_CharCP,0
  3725  0560  2D65               	goto	u1870
  3726  0561  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0562  1303               	bcf	3,6	;RP1=0, select bank0
  3728  0563  1605               	bsf	5,4	;volatile
  3729  0564  2D68               	goto	u1884
  3730  0565                     u1870:	
  3731  0565  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0566  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0567  1205               	bcf	5,4	;volatile
  3734  0568                     u1884:	
  3735                           
  3736                           ;HD44780.c: 119: RA3 = (c & 0b00100000)>>5; RA2 = (c & 0b00010000)>>4;
  3737  0568  0871               	movf	Lcd_CharCP@c,w
  3738  0569  00F0               	movwf	??_Lcd_CharCP
  3739  056A  3005               	movlw	5
  3740  056B                     u1895:	
  3741  056B  1003               	clrc
  3742  056C  0CF0               	rrf	??_Lcd_CharCP,f
  3743  056D  3EFF               	addlw	-1
  3744  056E  1D03               	skipz
  3745  056F  2D6B               	goto	u1895
  3746  0570  1C70               	btfss	??_Lcd_CharCP,0
  3747  0571  2D76               	goto	u1900
  3748  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0573  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0574  1585               	bsf	5,3	;volatile
  3751  0575  2D79               	goto	u1914
  3752  0576                     u1900:	
  3753  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0578  1185               	bcf	5,3	;volatile
  3756  0579                     u1914:	
  3757  0579  0871               	movf	Lcd_CharCP@c,w
  3758  057A  00F0               	movwf	??_Lcd_CharCP
  3759  057B  3004               	movlw	4
  3760  057C                     u1925:	
  3761  057C  1003               	clrc
  3762  057D  0CF0               	rrf	??_Lcd_CharCP,f
  3763  057E  3EFF               	addlw	-1
  3764  057F  1D03               	skipz
  3765  0580  2D7C               	goto	u1925
  3766  0581  1C70               	btfss	??_Lcd_CharCP,0
  3767  0582  2D87               	goto	u1930
  3768  0583  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0584  1303               	bcf	3,6	;RP1=0, select bank0
  3770  0585  1505               	bsf	5,2	;volatile
  3771  0586  2D8A               	goto	l1922
  3772  0587                     u1930:	
  3773  0587  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0588  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0589  1105               	bcf	5,2	;volatile
  3776  058A                     l1922:	
  3777                           
  3778                           ;HD44780.c: 120: _delay(10);
  3779  058A  3003               	movlw	3
  3780  058B  00F0               	movwf	??_Lcd_CharCP
  3781  058C                     u3247:	
  3782  058C  0BF0               	decfsz	??_Lcd_CharCP,f
  3783  058D  2D8C               	goto	u3247
  3784                           
  3785                           ;HD44780.c: 121: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  3786  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3787  058F  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0590  1485               	bsf	5,1	;volatile
  3789  0591  26C9  120A  118A   	fcall	_Lcd_Delay5us
  3790  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0595  1303               	bcf	3,6	;RP1=0, select bank0
  3792  0596  1085               	bcf	5,1	;volatile
  3793                           
  3794                           ;HD44780.c: 122: RA5 = (c & 0b00001000)>>3; RA4 = (c & 0b00000100)>>2;
  3795  0597  27DA  120A  118A   	fcall	PL34	;call to abstracted procedure
  3796  059A  1003               	clrc
  3797  059B  0CF0               	rrf	??_Lcd_CharCP,f
  3798  059C  1C70               	btfss	??_Lcd_CharCP,0
  3799  059D  2DA2               	goto	u1950
  3800  059E  1283               	bcf	3,5	;RP0=0, select bank0
  3801  059F  1303               	bcf	3,6	;RP1=0, select bank0
  3802  05A0  1685               	bsf	5,5	;volatile
  3803  05A1  2DA5               	goto	l1932
  3804  05A2                     u1950:	
  3805  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3806  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3807  05A4  1285               	bcf	5,5	;volatile
  3808  05A5                     l1932:	
  3809  05A5  27DA  120A  118A   	fcall	PL34	;call to abstracted procedure
  3810  05A8  1C70               	btfss	??_Lcd_CharCP,0
  3811  05A9  2DAE               	goto	u1970
  3812  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3813  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  3814  05AC  1605               	bsf	5,4	;volatile
  3815  05AD  2DB1               	goto	l1934
  3816  05AE                     u1970:	
  3817  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  3818  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  3819  05B0  1205               	bcf	5,4	;volatile
  3820  05B1                     l1934:	
  3821                           
  3822                           ;HD44780.c: 123: RA3 = (c & 0b00000010)>>1; RA2 = (c & 0b00000001);
  3823  05B1  0871               	movf	Lcd_CharCP@c,w
  3824  05B2  00F0               	movwf	??_Lcd_CharCP
  3825  05B3  1003               	clrc
  3826  05B4  0CF0               	rrf	??_Lcd_CharCP,f
  3827  05B5  1C70               	btfss	??_Lcd_CharCP,0
  3828  05B6  2DBB               	goto	u1990
  3829  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  3830  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  3831  05B9  1585               	bsf	5,3	;volatile
  3832  05BA  2DBE               	goto	l1936
  3833  05BB                     u1990:	
  3834  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3835  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  3836  05BD  1185               	bcf	5,3	;volatile
  3837  05BE                     l1936:	
  3838  05BE  1C71               	btfss	Lcd_CharCP@c,0
  3839  05BF  2DC4               	goto	u2010
  3840  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3841  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3842  05C2  1505               	bsf	5,2	;volatile
  3843  05C3  2DC7               	goto	l1938
  3844  05C4                     u2010:	
  3845  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3846  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3847  05C6  1105               	bcf	5,2	;volatile
  3848  05C7                     l1938:	
  3849                           
  3850                           ;HD44780.c: 124: _delay(10);
  3851  05C7  3003               	movlw	3
  3852  05C8  00F0               	movwf	??_Lcd_CharCP
  3853  05C9                     u3257:	
  3854  05C9  0BF0               	decfsz	??_Lcd_CharCP,f
  3855  05CA  2DC9               	goto	u3257
  3856                           
  3857                           ;HD44780.c: 125: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  3858  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3859  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  3860  05CD  1485               	bsf	5,1	;volatile
  3861  05CE  26C9  120A  118A   	fcall	_Lcd_Delay5us
  3862  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3863  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3864  05D3  1085               	bcf	5,1	;volatile
  3865                           
  3866                           ;HD44780.c: 126: Lcd_Delay5us();
  3867  05D4  2EC9               	ljmp	l1886
  3868  05D5                     __end_of_Lcd_CharCP:	
  3869  05D5                     __ptext22:	
  3870 ;; *************** function _Lcd_Init *****************
  3871 ;; Defined at:
  3872 ;;		line 17 in file "libs/HD44780.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  data            1    2[COMMON] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : B00/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  3886 ;;      Params:         0       0       0       0       0
  3887 ;;      Locals:         1       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0
  3889 ;;      Totals:         1       0       0       0       0
  3890 ;;Total ram usage:        1 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		_Lcd_Command
  3895 ;;		_Lcd_Delay5500us
  3896 ;;		_Lcd_Delay5us
  3897 ;; This function is called by:
  3898 ;;		_main
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function _Lcd_Init
  3904  05D5                     _Lcd_Init:	
  3905                           
  3906                           ;HD44780.c: 19: ANSEL = 0x00;
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3910  05D5  1683               	bsf	3,5	;RP0=1, select bank3
  3911  05D6  1703               	bsf	3,6	;RP1=1, select bank3
  3912  05D7  0188               	clrf	8	;volatile
  3913                           
  3914                           ;HD44780.c: 20: ANSELH = 0x00;
  3915  05D8  0189               	clrf	9	;volatile
  3916                           
  3917                           ;HD44780.c: 23: unsigned char data;
  3918                           ;HD44780.c: 24: TRISAbits.TRISA5 = 0; TRISAbits.TRISA4 = 0; TRISAbits.TRISA3 = 0; TRISAb
      +                          its.TRISA2 = 0; TRISAbits.TRISA1 = 0; TRISAbits.TRISA0 = 0;
  3919  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  3920  05DA  27D3  120A  118A   	fcall	PL32	;call to abstracted procedure
  3921                           
  3922                           ;HD44780.c: 25: RA5 = 0; RA4 = 0; RA3 = 0; RA2 = 0; RA1 = 0; RA0 = 0;
  3923  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3924  05DE  27D3  120A  118A   	fcall	PL32	;call to abstracted procedure
  3925                           
  3926                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  3927  05E1  262C  120A  118A   	fcall	_Lcd_Delay5500us
  3928  05E4  262C  120A  118A   	fcall	_Lcd_Delay5500us
  3929  05E7  262C  120A  118A   	fcall	_Lcd_Delay5500us
  3930                           
  3931                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  3932  05EA  262C  120A  118A   	fcall	_Lcd_Delay5500us
  3933  05ED  262C  120A  118A   	fcall	_Lcd_Delay5500us
  3934  05F0  262C  120A  118A   	fcall	_Lcd_Delay5500us
  3935                           
  3936                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  3937  05F3  01F2               	clrf	Lcd_Init@data
  3938  05F4  0AF2               	incf	Lcd_Init@data,f
  3939  05F5                     l63:	
  3940                           
  3941                           ;HD44780.c: 29: {
  3942                           ;HD44780.c: 30: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 0; RA0 = 0;
  3943  05F5  27B8  120A  118A   	fcall	PL24	;call to abstracted procedure
  3944                           
  3945                           ;HD44780.c: 31: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 1; RA0 = 0;
  3946  05F8  1285               	bcf	5,5	;volatile
  3947  05F9  1205               	bcf	5,4	;volatile
  3948  05FA  1585               	bsf	5,3	;volatile
  3949  05FB  1505               	bsf	5,2	;volatile
  3950  05FC  1485               	bsf	5,1	;volatile
  3951  05FD  1005               	bcf	5,0	;volatile
  3952                           
  3953                           ;HD44780.c: 32: Lcd_Delay5us();
  3954  05FE  26C9  120A  118A   	fcall	_Lcd_Delay5us
  3955                           
  3956                           ;HD44780.c: 33: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 1; RA1 = 0; RA0 = 0;
  3957  0601  27B8  120A  118A   	fcall	PL24	;call to abstracted procedure
  3958                           
  3959                           ;HD44780.c: 34: Lcd_Delay5500us();
  3960  0604  262C  120A  118A   	fcall	_Lcd_Delay5500us
  3961  0607  3004               	movlw	4
  3962  0608  0AF2               	incf	Lcd_Init@data,f
  3963  0609  0272               	subwf	Lcd_Init@data,w
  3964  060A  1C03               	skipc
  3965  060B  2DF5               	goto	l63
  3966                           
  3967                           ;HD44780.c: 35: }
  3968                           ;HD44780.c: 36: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 0; RA0 = 0;
  3969  060C  27C1  120A  118A   	fcall	PL28	;call to abstracted procedure
  3970                           
  3971                           ;HD44780.c: 37: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 1; RA0 = 0;
  3972  060F  1285               	bcf	5,5	;volatile
  3973  0610  1205               	bcf	5,4	;volatile
  3974  0611  1585               	bsf	5,3	;volatile
  3975  0612  1105               	bcf	5,2	;volatile
  3976  0613  1485               	bsf	5,1	;volatile
  3977  0614  1005               	bcf	5,0	;volatile
  3978                           
  3979                           ;HD44780.c: 38: Lcd_Delay5us();
  3980  0615  26C9  120A  118A   	fcall	_Lcd_Delay5us
  3981                           
  3982                           ;HD44780.c: 39: RA5 = 0; RA4 = 0; RA3 = 1; RA2 = 0; RA1 = 0; RA0 = 0;
  3983  0618  27C1  120A  118A   	fcall	PL28	;call to abstracted procedure
  3984                           
  3985                           ;HD44780.c: 40: Lcd_Delay5500us();
  3986  061B  262C  120A  118A   	fcall	_Lcd_Delay5500us
  3987  061E  3028               	movlw	40
  3988  061F  2635  120A  118A   	fcall	_Lcd_Command
  3989  0622  3010               	movlw	16
  3990  0623  2635  120A  118A   	fcall	_Lcd_Command
  3991  0626  3001               	movlw	1
  3992  0627  2635  120A  118A   	fcall	_Lcd_Command
  3993  062A  300F               	movlw	15
  3994  062B  2E35               	ljmp	_Lcd_Command
  3995  062C                     __end_of_Lcd_Init:	
  3996  062C                     __ptext23:	
  3997 ;; *************** function _Lcd_Delay5500us *****************
  3998 ;; Defined at:
  3999 ;;		line 153 in file "libs/HD44780.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  4013 ;;      Params:         0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0
  4015 ;;      Temps:          2       0       0       0       0
  4016 ;;      Totals:         2       0       0       0       0
  4017 ;;Total ram usage:        2 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_Lcd_Init
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           
  4027                           ;psect for function _Lcd_Delay5500us
  4028  062C                     _Lcd_Delay5500us:	
  4029                           
  4030                           ;HD44780.c: 154: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in _Lcd_Delay5500us: [wreg]
  4034  062C  3008               	movlw	8
  4035  062D  00F1               	movwf	??_Lcd_Delay5500us+1
  4036  062E  3023               	movlw	35
  4037  062F  00F0               	movwf	??_Lcd_Delay5500us
  4038  0630                     u3217:	
  4039  0630  0BF0               	decfsz	??_Lcd_Delay5500us,f
  4040  0631  2E30               	goto	u3217
  4041  0632  0BF1               	decfsz	??_Lcd_Delay5500us+1,f
  4042  0633  2E30               	goto	u3217
  4043  0634  0008               	return
  4044  0635                     __end_of_Lcd_Delay5500us:	
  4045  0635                     __ptext26:	
  4046 ;; *************** function _Lcd_Command *****************
  4047 ;; Defined at:
  4048 ;;		line 133 in file "libs/HD44780.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  command         1    wreg     unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  command         1    1[COMMON] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0, pclath, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  4062 ;;      Params:         0       0       0       0       0
  4063 ;;      Locals:         1       0       0       0       0
  4064 ;;      Temps:          1       0       0       0       0
  4065 ;;      Totals:         2       0       0       0       0
  4066 ;;Total ram usage:        2 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    1
  4069 ;; This function calls:
  4070 ;;		_Lcd_Delay5us
  4071 ;; This function is called by:
  4072 ;;		_Lcd_Init
  4073 ;;		_Lcd_Text
  4074 ;;		_Lcd_WriteChar
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           
  4079                           ;psect for function _Lcd_Command
  4080  0635                     _Lcd_Command:	
  4081                           
  4082                           ;incstack = 0
  4083                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+pclath+cstack]
  4084                           ;Lcd_Command@command stored from wreg
  4085  0635  00F1               	movwf	Lcd_Command@command
  4086                           
  4087                           ;HD44780.c: 134: RA1 = 0; RA0 = 0;
  4088  0636  1283               	bcf	3,5	;RP0=0, select bank0
  4089  0637  1303               	bcf	3,6	;RP1=0, select bank0
  4090  0638  1085               	bcf	5,1	;volatile
  4091  0639  1005               	bcf	5,0	;volatile
  4092                           
  4093                           ;HD44780.c: 135: RA5 = (command & 0b10000000)>>7; RA4 = (command & 0b01000000)>>6;
  4094  063A  0871               	movf	Lcd_Command@command,w
  4095  063B  00F0               	movwf	??_Lcd_Command
  4096  063C  3007               	movlw	7
  4097  063D                     u1635:	
  4098  063D  1003               	clrc
  4099  063E  0CF0               	rrf	??_Lcd_Command,f
  4100  063F  3EFF               	addlw	-1
  4101  0640  1D03               	skipz
  4102  0641  2E3D               	goto	u1635
  4103  0642  1C70               	btfss	??_Lcd_Command,0
  4104  0643  2E48               	goto	u1640
  4105  0644  1283               	bcf	3,5	;RP0=0, select bank0
  4106  0645  1303               	bcf	3,6	;RP1=0, select bank0
  4107  0646  1685               	bsf	5,5	;volatile
  4108  0647  2E4B               	goto	u1654
  4109  0648                     u1640:	
  4110  0648  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0649  1303               	bcf	3,6	;RP1=0, select bank0
  4112  064A  1285               	bcf	5,5	;volatile
  4113  064B                     u1654:	
  4114  064B  0871               	movf	Lcd_Command@command,w
  4115  064C  00F0               	movwf	??_Lcd_Command
  4116  064D  3006               	movlw	6
  4117  064E                     u1665:	
  4118  064E  1003               	clrc
  4119  064F  0CF0               	rrf	??_Lcd_Command,f
  4120  0650  3EFF               	addlw	-1
  4121  0651  1D03               	skipz
  4122  0652  2E4E               	goto	u1665
  4123  0653  1C70               	btfss	??_Lcd_Command,0
  4124  0654  2E59               	goto	u1670
  4125  0655  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0656  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0657  1605               	bsf	5,4	;volatile
  4128  0658  2E5C               	goto	u1684
  4129  0659                     u1670:	
  4130  0659  1283               	bcf	3,5	;RP0=0, select bank0
  4131  065A  1303               	bcf	3,6	;RP1=0, select bank0
  4132  065B  1205               	bcf	5,4	;volatile
  4133  065C                     u1684:	
  4134                           
  4135                           ;HD44780.c: 136: RA3 = (command & 0b00100000)>>5; RA2 = (command & 0b00010000)>>4;
  4136  065C  0871               	movf	Lcd_Command@command,w
  4137  065D  00F0               	movwf	??_Lcd_Command
  4138  065E  3005               	movlw	5
  4139  065F                     u1695:	
  4140  065F  1003               	clrc
  4141  0660  0CF0               	rrf	??_Lcd_Command,f
  4142  0661  3EFF               	addlw	-1
  4143  0662  1D03               	skipz
  4144  0663  2E5F               	goto	u1695
  4145  0664  1C70               	btfss	??_Lcd_Command,0
  4146  0665  2E6A               	goto	u1700
  4147  0666  1283               	bcf	3,5	;RP0=0, select bank0
  4148  0667  1303               	bcf	3,6	;RP1=0, select bank0
  4149  0668  1585               	bsf	5,3	;volatile
  4150  0669  2E6D               	goto	u1714
  4151  066A                     u1700:	
  4152  066A  1283               	bcf	3,5	;RP0=0, select bank0
  4153  066B  1303               	bcf	3,6	;RP1=0, select bank0
  4154  066C  1185               	bcf	5,3	;volatile
  4155  066D                     u1714:	
  4156  066D  0871               	movf	Lcd_Command@command,w
  4157  066E  00F0               	movwf	??_Lcd_Command
  4158  066F  3004               	movlw	4
  4159  0670                     u1725:	
  4160  0670  1003               	clrc
  4161  0671  0CF0               	rrf	??_Lcd_Command,f
  4162  0672  3EFF               	addlw	-1
  4163  0673  1D03               	skipz
  4164  0674  2E70               	goto	u1725
  4165  0675  1C70               	btfss	??_Lcd_Command,0
  4166  0676  2E7B               	goto	u1730
  4167  0677  1283               	bcf	3,5	;RP0=0, select bank0
  4168  0678  1303               	bcf	3,6	;RP1=0, select bank0
  4169  0679  1505               	bsf	5,2	;volatile
  4170  067A  2E7E               	goto	l1896
  4171  067B                     u1730:	
  4172  067B  1283               	bcf	3,5	;RP0=0, select bank0
  4173  067C  1303               	bcf	3,6	;RP1=0, select bank0
  4174  067D  1105               	bcf	5,2	;volatile
  4175  067E                     l1896:	
  4176                           
  4177                           ;HD44780.c: 137: _delay(10);
  4178  067E  3003               	movlw	3
  4179  067F  00F0               	movwf	??_Lcd_Command
  4180  0680                     u3227:	
  4181  0680  0BF0               	decfsz	??_Lcd_Command,f
  4182  0681  2E80               	goto	u3227
  4183                           
  4184                           ;HD44780.c: 138: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  4185  0682  1283               	bcf	3,5	;RP0=0, select bank0
  4186  0683  1303               	bcf	3,6	;RP1=0, select bank0
  4187  0684  1485               	bsf	5,1	;volatile
  4188  0685  26C9  120A  118A   	fcall	_Lcd_Delay5us
  4189  0688  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0689  1303               	bcf	3,6	;RP1=0, select bank0
  4191  068A  1085               	bcf	5,1	;volatile
  4192                           
  4193                           ;HD44780.c: 139: RA5 = (command & 0b00001000)>>3; RA4 = (command & 0b00000100)>>2;
  4194  068B  27E1  120A  118A   	fcall	PL36	;call to abstracted procedure
  4195  068E  1003               	clrc
  4196  068F  0CF0               	rrf	??_Lcd_Command,f
  4197  0690  1C70               	btfss	??_Lcd_Command,0
  4198  0691  2E96               	goto	u1750
  4199  0692  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0693  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0694  1685               	bsf	5,5	;volatile
  4202  0695  2E99               	goto	l1906
  4203  0696                     u1750:	
  4204  0696  1283               	bcf	3,5	;RP0=0, select bank0
  4205  0697  1303               	bcf	3,6	;RP1=0, select bank0
  4206  0698  1285               	bcf	5,5	;volatile
  4207  0699                     l1906:	
  4208  0699  27E1  120A  118A   	fcall	PL36	;call to abstracted procedure
  4209  069C  1C70               	btfss	??_Lcd_Command,0
  4210  069D  2EA2               	goto	u1770
  4211  069E  1283               	bcf	3,5	;RP0=0, select bank0
  4212  069F  1303               	bcf	3,6	;RP1=0, select bank0
  4213  06A0  1605               	bsf	5,4	;volatile
  4214  06A1  2EA5               	goto	l1908
  4215  06A2                     u1770:	
  4216  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4217  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  4218  06A4  1205               	bcf	5,4	;volatile
  4219  06A5                     l1908:	
  4220                           
  4221                           ;HD44780.c: 140: RA3 = (command & 0b00000010)>>1; RA2 = (command & 0b00000001);
  4222  06A5  0871               	movf	Lcd_Command@command,w
  4223  06A6  00F0               	movwf	??_Lcd_Command
  4224  06A7  1003               	clrc
  4225  06A8  0CF0               	rrf	??_Lcd_Command,f
  4226  06A9  1C70               	btfss	??_Lcd_Command,0
  4227  06AA  2EAF               	goto	u1790
  4228  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  4229  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  4230  06AD  1585               	bsf	5,3	;volatile
  4231  06AE  2EB2               	goto	l1910
  4232  06AF                     u1790:	
  4233  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  4234  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  4235  06B1  1185               	bcf	5,3	;volatile
  4236  06B2                     l1910:	
  4237  06B2  1C71               	btfss	Lcd_Command@command,0
  4238  06B3  2EB8               	goto	u1810
  4239  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  4240  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  4241  06B6  1505               	bsf	5,2	;volatile
  4242  06B7  2EBB               	goto	l1912
  4243  06B8                     u1810:	
  4244  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  4245  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  4246  06BA  1105               	bcf	5,2	;volatile
  4247  06BB                     l1912:	
  4248                           
  4249                           ;HD44780.c: 141: _delay(10);
  4250  06BB  3003               	movlw	3
  4251  06BC  00F0               	movwf	??_Lcd_Command
  4252  06BD                     u3237:	
  4253  06BD  0BF0               	decfsz	??_Lcd_Command,f
  4254  06BE  2EBD               	goto	u3237
  4255                           
  4256                           ;HD44780.c: 142: RA1 = 1; Lcd_Delay5us(); RA1 = 0;
  4257  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  4258  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  4259  06C1  1485               	bsf	5,1	;volatile
  4260  06C2  26C9  120A  118A   	fcall	_Lcd_Delay5us
  4261  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  4262  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  4263  06C7  1085               	bcf	5,1	;volatile
  4264                           
  4265                           ;HD44780.c: 144: Lcd_Delay5us();
  4266  06C8  2EC9               	ljmp	l1886
  4267  06C9                     __end_of_Lcd_Command:	
  4268  06C9                     __ptext28:	
  4269 ;; *************** function _Lcd_Delay5us *****************
  4270 ;; Defined at:
  4271 ;;		line 150 in file "libs/HD44780.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		None
  4280 ;; Tracked objects:
  4281 ;;		On entry : 300/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  4285 ;;      Params:         0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0
  4288 ;;      Totals:         0       0       0       0       0
  4289 ;;Total ram usage:        0 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_Lcd_Init
  4295 ;;		_Lcd_CharCP
  4296 ;;		_Lcd_Command
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           
  4301                           ;psect for function _Lcd_Delay5us
  4302  06C9                     _Lcd_Delay5us:	
  4303  06C9                     l1886:	
  4304                           ;incstack = 0
  4305                           ; Regs used in _Lcd_Delay5us: []
  4306                           
  4307                           
  4308                           ;HD44780.c: 151: _delay((unsigned long)((5)*(4000000/4000000.0)));
  4309  06C9  2ECA               	nop2	;2 cycle nop
  4310  06CA  2ECB               	nop2	;2 cycle nop
  4311  06CB  0000               	nop
  4312  06CC  0008               	return
  4313  06CD                     __end_of_Lcd_Delay5us:	
  4314  06CD                     __ptext9:	
  4315 ;; *************** function _ReadVars *****************
  4316 ;; Defined at:
  4317 ;;		line 7 in file "libs/eeprom.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  i               1   19[BANK0 ] unsigned char 
  4322 ;;  j               1   18[BANK0 ] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 300/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  4332 ;;      Params:         0       0       0       0       0
  4333 ;;      Locals:         0       2       0       0       0
  4334 ;;      Temps:          0      15       0       0       0
  4335 ;;      Totals:         0      17       0       0       0
  4336 ;;Total ram usage:       17 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    1
  4339 ;; This function calls:
  4340 ;;		___bmul
  4341 ;;		_eeprom_read
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _ReadVars
  4349  06CD                     _ReadVars:	
  4350                           
  4351                           ;eeprom.c: 8: C_D = eeprom_read(0xDE);
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _ReadVars: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4355  06CD  30DE               	movlw	222
  4356  06CE  2789  120A  118A   	fcall	_eeprom_read
  4357  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  4358  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  4359  06D3  00E6               	movwf	_C_D^(0+128)	;volatile
  4360                           
  4361                           ;eeprom.c: 9: UINT8 i, j;
  4362                           ;eeprom.c: 10: for (i = 0; i<3; i++) {
  4363  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  4364  06D5  01BF               	clrf	ReadVars@i
  4365  06D6                     l2292:	
  4366  06D6  3003               	movlw	3
  4367  06D7  023F               	subwf	ReadVars@i,w
  4368  06D8  1803               	btfsc	3,0
  4369  06D9  2F4B               	goto	l2304
  4370                           
  4371                           ;eeprom.c: 11: C[i] = (uint32_t) eeprom_read(0xD2 + 3*i)*256*256
  4372                           ;eeprom.c: 12: + (uint16_t) eeprom_read(0xD2 + 1 + 3*i)*256
  4373                           ;eeprom.c: 13: + eeprom_read(0xD2 + 2 + 3*i);
  4374  06DA  083F               	movf	ReadVars@i,w
  4375  06DB  073F               	addwf	ReadVars@i,w
  4376  06DC  073F               	addwf	ReadVars@i,w
  4377  06DD  3ED4               	addlw	212
  4378  06DE  2789  120A  118A   	fcall	_eeprom_read
  4379  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  4380  06E2  00AF               	movwf	??_ReadVars
  4381  06E3  01B0               	clrf	??_ReadVars+1
  4382  06E4  01B1               	clrf	??_ReadVars+2
  4383  06E5  01B2               	clrf	??_ReadVars+3
  4384  06E6  083F               	movf	ReadVars@i,w
  4385  06E7  073F               	addwf	ReadVars@i,w
  4386  06E8  073F               	addwf	ReadVars@i,w
  4387  06E9  3ED3               	addlw	211
  4388  06EA  2789  120A  118A   	fcall	_eeprom_read
  4389  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  4390  06EE  00B3               	movwf	??_ReadVars+4
  4391  06EF  01B4               	clrf	??_ReadVars+5
  4392  06F0  00B4               	movwf	??_ReadVars+5
  4393  06F1  01B3               	clrf	??_ReadVars+4
  4394  06F2  0833               	movf	??_ReadVars+4,w
  4395  06F3  00B5               	movwf	??_ReadVars+6
  4396  06F4  0834               	movf	??_ReadVars+5,w
  4397  06F5  00B6               	movwf	??_ReadVars+7
  4398  06F6  01B7               	clrf	??_ReadVars+8
  4399  06F7  01B8               	clrf	??_ReadVars+9
  4400  06F8  083F               	movf	ReadVars@i,w
  4401  06F9  073F               	addwf	ReadVars@i,w
  4402  06FA  073F               	addwf	ReadVars@i,w
  4403  06FB  3ED2               	addlw	210
  4404  06FC  2789  120A  118A   	fcall	_eeprom_read
  4405  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  4406  0700  00B9               	movwf	??_ReadVars+10
  4407  0701  01BA               	clrf	??_ReadVars+11
  4408  0702  01BB               	clrf	??_ReadVars+12
  4409  0703  01BC               	clrf	??_ReadVars+13
  4410  0704  083A               	movf	??_ReadVars+11,w
  4411  0705  00BC               	movwf	??_ReadVars+13
  4412  0706  0839               	movf	??_ReadVars+10,w
  4413  0707  00BB               	movwf	??_ReadVars+12
  4414  0708  01BA               	clrf	??_ReadVars+11
  4415  0709  01B9               	clrf	??_ReadVars+10
  4416  070A  0839               	movf	??_ReadVars+10,w
  4417  070B  07B5               	addwf	??_ReadVars+6,f
  4418  070C  083A               	movf	??_ReadVars+11,w
  4419  070D  1803               	skipnc
  4420  070E  0F3A               	incfsz	??_ReadVars+11,w
  4421  070F  07B6               	addwf	??_ReadVars+7,f
  4422  0710  083B               	movf	??_ReadVars+12,w
  4423  0711  1803               	skipnc
  4424  0712  0F3B               	incfsz	??_ReadVars+12,w
  4425  0713  07B7               	addwf	??_ReadVars+8,f
  4426  0714  083C               	movf	??_ReadVars+13,w
  4427  0715  1803               	skipnc
  4428  0716  0A3C               	incf	??_ReadVars+13,w
  4429  0717  07B8               	addwf	??_ReadVars+9,f
  4430  0718  0835               	movf	??_ReadVars+6,w
  4431  0719  07AF               	addwf	??_ReadVars,f
  4432  071A  0836               	movf	??_ReadVars+7,w
  4433  071B  1803               	skipnc
  4434  071C  0F36               	incfsz	??_ReadVars+7,w
  4435  071D  07B0               	addwf	??_ReadVars+1,f
  4436  071E  0837               	movf	??_ReadVars+8,w
  4437  071F  1803               	skipnc
  4438  0720  0F37               	incfsz	??_ReadVars+8,w
  4439  0721  07B1               	addwf	??_ReadVars+2,f
  4440  0722  0838               	movf	??_ReadVars+9,w
  4441  0723  1803               	skipnc
  4442  0724  0A38               	incf	??_ReadVars+9,w
  4443  0725  07B2               	addwf	??_ReadVars+3,f
  4444  0726  083F               	movf	ReadVars@i,w
  4445  0727  00BD               	movwf	??_ReadVars+14
  4446  0728  3001               	movlw	1
  4447  0729  1003               	clrc
  4448  072A                     L11:	
  4449  072A  0DBD               	rlf	??_ReadVars+14,f
  4450  072B  3EFF               	addlw	-1
  4451  072C  1003               	clrc
  4452  072D  1D03               	skipz
  4453  072E  2F2A               	goto	L11
  4454  072F  0D3D               	rlf	??_ReadVars+14,w
  4455  0730  3E20               	addlw	32
  4456  0731  0084               	movwf	4
  4457  0732  082F               	movf	??_ReadVars,w
  4458  0733  1383               	bcf	3,7	;select IRP bank0
  4459  0734  0080               	movwf	0
  4460  0735  0A84               	incf	4,f
  4461  0736  0830               	movf	??_ReadVars+1,w
  4462  0737  0080               	movwf	0
  4463  0738  0A84               	incf	4,f
  4464  0739  0831               	movf	??_ReadVars+2,w
  4465  073A  0080               	movwf	0
  4466  073B  0A84               	incf	4,f
  4467  073C  0832               	movf	??_ReadVars+3,w
  4468  073D  0080               	movwf	0
  4469                           
  4470                           ;eeprom.c: 14: STATE_BREAKS[i] = eeprom_read(0xDB+i);
  4471  073E  083F               	movf	ReadVars@i,w
  4472  073F  3EE2               	addlw	(low (_STATE_BREAKS| 0))& (0+255)
  4473  0740  0084               	movwf	4
  4474  0741  083F               	movf	ReadVars@i,w
  4475  0742  3EDB               	addlw	219
  4476  0743  2789  120A  118A   	fcall	_eeprom_read
  4477  0746  1383               	bcf	3,7	;select IRP bank1
  4478  0747  0080               	movwf	0
  4479  0748  1303               	bcf	3,6	;RP1=0, select bank0
  4480  0749  0ABF               	incf	ReadVars@i,f
  4481  074A  2ED6               	goto	l2292
  4482  074B                     l2304:	
  4483                           
  4484                           ;eeprom.c: 15: }
  4485                           ;eeprom.c: 16: for (i = 0; i<30; i++) {
  4486  074B  01BF               	clrf	ReadVars@i
  4487  074C                     l2306:	
  4488  074C  301E               	movlw	30
  4489  074D  023F               	subwf	ReadVars@i,w
  4490  074E  1803               	btfsc	3,0
  4491  074F  0008               	return
  4492                           
  4493                           ;eeprom.c: 17: STATE_PERIODS[i] = eeprom_read(0x00
  4494                           ;eeprom.c: 18: + i*(1 + 2*3));
  4495  0750  083F               	movf	ReadVars@i,w
  4496  0751  3ECC               	addlw	204
  4497  0752  0084               	movwf	4
  4498  0753  3007               	movlw	7
  4499  0754  00AC               	movwf	___bmul@multiplicand
  4500  0755  083F               	movf	ReadVars@i,w
  4501  0756  279E  120A  118A   	fcall	___bmul
  4502  0759  2789  120A  118A   	fcall	_eeprom_read
  4503  075C  1783               	bsf	3,7	;select IRP bank3
  4504  075D  0080               	movwf	0
  4505                           
  4506                           ;eeprom.c: 19: for (j = 0; j<2; j++) {
  4507  075E  1303               	bcf	3,6	;RP1=0, select bank0
  4508  075F  01BE               	clrf	ReadVars@j
  4509  0760                     l2318:	
  4510                           
  4511                           ;eeprom.c: 20: STATE_1[i][j] = eeprom_read(0x00
  4512                           ;eeprom.c: 21: + i*(1 + 2*3)
  4513                           ;eeprom.c: 22: + (1 + j));
  4514  0760  083F               	movf	ReadVars@i,w
  4515  0761  00AF               	movwf	??_ReadVars
  4516  0762  30A0               	movlw	160
  4517  0763  27AC  120A  118A   	fcall	PL16	;call to abstracted procedure
  4518  0766  279E  120A  118A   	fcall	___bmul
  4519  0769  073E               	addwf	ReadVars@j,w
  4520  076A  3E01               	addlw	1
  4521  076B  2789  120A  118A   	fcall	_eeprom_read
  4522  076E  1383               	bcf	3,7	;select IRP bank1
  4523  076F  0080               	movwf	0
  4524                           
  4525                           ;eeprom.c: 23: STATE_2[i][j] = eeprom_read(0x00
  4526                           ;eeprom.c: 24: + i*(1 + 2*3)
  4527                           ;eeprom.c: 25: + (3 + j));
  4528  0770  1303               	bcf	3,6	;RP1=0, select bank0
  4529  0771  083F               	movf	ReadVars@i,w
  4530  0772  00AF               	movwf	??_ReadVars
  4531  0773  3010               	movlw	16
  4532  0774  27AC  120A  118A   	fcall	PL16	;call to abstracted procedure
  4533  0777  279E  120A  118A   	fcall	___bmul
  4534  077A  073E               	addwf	ReadVars@j,w
  4535  077B  3E03               	addlw	3
  4536  077C  2789  120A  118A   	fcall	_eeprom_read
  4537  077F  1783               	bsf	3,7	;select IRP bank2
  4538  0780  0080               	movwf	0
  4539  0781  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0782  3002               	movlw	2
  4541  0783  0ABE               	incf	ReadVars@j,f
  4542  0784  023E               	subwf	ReadVars@j,w
  4543  0785  1C03               	skipc
  4544  0786  2F60               	goto	l2318
  4545  0787  0ABF               	incf	ReadVars@i,f
  4546  0788  2F4C               	goto	l2306
  4547  0789                     __end_of_ReadVars:	
  4548  0789                     __ptext10:	
  4549 ;; *************** function _eeprom_read *****************
  4550 ;; Defined at:
  4551 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eeread.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  addr            1    wreg     unsigned char 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  addr            1    0[COMMON] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      unsigned char 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 300/200
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  4565 ;;      Params:         0       0       0       0       0
  4566 ;;      Locals:         1       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0
  4568 ;;      Totals:         1       0       0       0       0
  4569 ;;Total ram usage:        1 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_ReadVars
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _eeprom_read
  4580  0789                     _eeprom_read:	
  4581                           
  4582                           ;incstack = 0
  4583                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4584                           ;eeprom_read@addr stored from wreg
  4585  0789  00F0               	movwf	eeprom_read@addr
  4586  078A                     l524:	
  4587  078A  0064               	clrwdt	;# 
  4588  078B  1683               	bsf	3,5	;RP0=1, select bank3
  4589  078C  1703               	bsf	3,6	;RP1=1, select bank3
  4590  078D  188C               	btfsc	12,1	;volsfr
  4591  078E  2F8A               	goto	l524
  4592  078F  0870               	movf	eeprom_read@addr,w
  4593  0790  1283               	bcf	3,5	;RP0=0, select bank2
  4594  0791  008D               	movwf	13	;volatile
  4595  0792  303F               	movlw	63
  4596  0793  1683               	bsf	3,5	;RP0=1, select bank3
  4597  0794  058C               	andwf	12,f	;volsfr
  4598  0795  140C               	bsf	12,0	;volsfr
  4599  0796  1003               	clrc
  4600  0797  180C               	btfsc	12,0	;volsfr
  4601  0798  1403               	setc
  4602  0799  1803               	skipnc
  4603  079A  3001               	movlw	1
  4604  079B  1283               	bcf	3,5	;RP0=0, select bank2
  4605  079C  080C               	movf	12,w	;volatile
  4606  079D  0008               	return
  4607  079E                     __end_of_eeprom_read:	
  4608  079E                     __ptext11:	
  4609 ;; *************** function ___bmul *****************
  4610 ;; Defined at:
  4611 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  multiplier      1    wreg     unsigned char 
  4614 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  multiplier      1    2[BANK0 ] unsigned char 
  4617 ;;  product         1    1[BANK0 ] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      unsigned char 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0
  4622 ;; Tracked objects:
  4623 ;;		On entry : 300/800
  4624 ;;		On exit  : 300/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  4627 ;;      Params:         0       1       0       0       0
  4628 ;;      Locals:         0       2       0       0       0
  4629 ;;      Temps:          0       0       0       0       0
  4630 ;;      Totals:         0       3       0       0       0
  4631 ;;Total ram usage:        3 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_WriteLongInt
  4637 ;;		_ReadVars
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           
  4642                           ;psect for function ___bmul
  4643  079E                     ___bmul:	
  4644                           
  4645                           ;incstack = 0
  4646                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4647                           ;___bmul@multiplier stored from wreg
  4648  079E  00AE               	movwf	___bmul@multiplier
  4649  079F  01AD               	clrf	___bmul@product
  4650  07A0                     l2038:	
  4651  07A0  082C               	movf	___bmul@multiplicand,w
  4652  07A1  182E               	btfsc	___bmul@multiplier,0
  4653  07A2  07AD               	addwf	___bmul@product,f
  4654  07A3  1003               	clrc
  4655  07A4  0DAC               	rlf	___bmul@multiplicand,f
  4656  07A5  1003               	clrc
  4657  07A6  0CAE               	rrf	___bmul@multiplier,f
  4658  07A7  082E               	movf	___bmul@multiplier,w
  4659  07A8  1D03               	btfss	3,2
  4660  07A9  2FA0               	goto	l2038
  4661  07AA  082D               	movf	___bmul@product,w
  4662  07AB  0008               	return
  4663  07AC                     __end_of___bmul:	
  4664  07AC                     PL16:	
  4665  07AC  1003               	clrc
  4666  07AD  0DAF               	rlf	??_ReadVars,f
  4667  07AE  072F               	addwf	??_ReadVars,w
  4668  07AF  00B0               	movwf	??_ReadVars+1
  4669  07B0  083E               	movf	ReadVars@j,w
  4670  07B1  0730               	addwf	??_ReadVars+1,w
  4671  07B2  00B1               	movwf	??_ReadVars+2
  4672  07B3  0084               	movwf	4
  4673  07B4  3007               	movlw	7
  4674  07B5  00AC               	movwf	___bmul@multiplicand
  4675  07B6  083F               	movf	ReadVars@i,w
  4676  07B7  0008               	return
  4677  07B8                     __end_ofPL16:	
  4678  07B8                     PL24:	
  4679  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  4680  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  4681  07BA  1285               	bcf	5,5	;volatile
  4682  07BB  1205               	bcf	5,4	;volatile
  4683  07BC  1585               	bsf	5,3	;volatile
  4684  07BD  1505               	bsf	5,2	;volatile
  4685  07BE  1085               	bcf	5,1	;volatile
  4686  07BF  1005               	bcf	5,0	;volatile
  4687  07C0  0008               	return
  4688  07C1                     __end_ofPL24:	
  4689  07C1                     PL28:	
  4690  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  4691  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  4692  07C3  1285               	bcf	5,5	;volatile
  4693  07C4  1205               	bcf	5,4	;volatile
  4694  07C5  1585               	bsf	5,3	;volatile
  4695  07C6  1105               	bcf	5,2	;volatile
  4696  07C7  1085               	bcf	5,1	;volatile
  4697  07C8  1005               	bcf	5,0	;volatile
  4698  07C9  0008               	return
  4699  07CA                     __end_ofPL28:	
  4700  07CA                     PL30:	
  4701  07CA  0837               	movf	WriteLongInt@Val+3,w
  4702  07CB  00F7               	movwf	___aldiv@dividend+3
  4703  07CC  0836               	movf	WriteLongInt@Val+2,w
  4704  07CD  00F6               	movwf	___aldiv@dividend+2
  4705  07CE  0835               	movf	WriteLongInt@Val+1,w
  4706  07CF  00F5               	movwf	___aldiv@dividend+1
  4707  07D0  0834               	movf	WriteLongInt@Val,w
  4708  07D1  00F4               	movwf	___aldiv@dividend
  4709  07D2  0008               	return
  4710  07D3                     __end_ofPL30:	
  4711  07D3                     PL32:	
  4712  07D3  1285               	bcf	5,5	;volatile
  4713  07D4  1205               	bcf	5,4	;volatile
  4714  07D5  1185               	bcf	5,3	;volatile
  4715  07D6  1105               	bcf	5,2	;volatile
  4716  07D7  1085               	bcf	5,1	;volatile
  4717  07D8  1005               	bcf	5,0	;volatile
  4718  07D9  0008               	return
  4719  07DA                     __end_ofPL32:	
  4720  07DA                     PL34:	
  4721  07DA  0871               	movf	Lcd_CharCP@c,w
  4722  07DB  00F0               	movwf	??_Lcd_CharCP
  4723  07DC  1003               	clrc
  4724  07DD  0CF0               	rrf	??_Lcd_CharCP,f
  4725  07DE  1003               	clrc
  4726  07DF  0CF0               	rrf	??_Lcd_CharCP,f
  4727  07E0  0008               	return
  4728  07E1                     __end_ofPL34:	
  4729  07E1                     PL36:	
  4730  07E1  0871               	movf	Lcd_Command@command,w
  4731  07E2  00F0               	movwf	??_Lcd_Command
  4732  07E3  1003               	clrc
  4733  07E4  0CF0               	rrf	??_Lcd_Command,f
  4734  07E5  1003               	clrc
  4735  07E6  0CF0               	rrf	??_Lcd_Command,f
  4736  07E7  0008               	return
  4737  07E8                     __end_ofPL36:	
  4738                           
  4739                           	psect	text8
  4740  0BC0                     __ptext8:	
  4741 ;; *************** function _SwitchGPS *****************
  4742 ;; Defined at:
  4743 ;;		line 51 in file "libs/gsk_algo_funcs.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  a               1    wreg     unsigned char 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  a               1    0[COMMON] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg
  4752 ;; Tracked objects:
  4753 ;;		On entry : 300/100
  4754 ;;		On exit  : 300/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  4757 ;;      Params:         0       0       0       0       0
  4758 ;;      Locals:         1       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0
  4760 ;;      Totals:         1       0       0       0       0
  4761 ;;Total ram usage:        1 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function _SwitchGPS
  4772  0BC0                     _SwitchGPS:	
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in _SwitchGPS: [wreg]
  4776                           ;SwitchGPS@a stored from wreg
  4777  0BC0  00F0               	movwf	SwitchGPS@a
  4778                           
  4779                           ;gsk_algo_funcs.c: 52: RC1 = a;
  4780  0BC1  1C70               	btfss	SwitchGPS@a,0
  4781  0BC2  2BC7               	goto	u2650
  4782  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  4783  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  4784  0BC5  1487               	bsf	7,1	;volatile
  4785  0BC6  0008               	return
  4786  0BC7                     u2650:	
  4787  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  4788  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  4789  0BC9  1087               	bcf	7,1	;volatile
  4790  0BCA  0008               	return
  4791  0BCB                     __end_of_SwitchGPS:	
  4792                           
  4793                           	psect	text12
  4794  0E9A                     __ptext12:	
  4795 ;; *************** function _ReadRTCAsSec *****************
  4796 ;; Defined at:
  4797 ;;		line 27 in file "libs/gsk_RTC_GPS.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  Out             4   13[BANK0 ] long 
  4802 ;;  TempVar000      1   17[BANK0 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  4    0[BANK0 ] long 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 300/100
  4809 ;;		On exit  : 300/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  4812 ;;      Params:         0       4       0       0       0
  4813 ;;      Locals:         0       7       0       0       0
  4814 ;;      Temps:          0       7       0       0       0
  4815 ;;      Totals:         0      18       0       0       0
  4816 ;;Total ram usage:       18 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    3
  4819 ;; This function calls:
  4820 ;;		_I2C_ReadAtAddress
  4821 ;;		___lmul
  4822 ;;		___wmul
  4823 ;; This function is called by:
  4824 ;;		_main
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _ReadRTCAsSec
  4830  0E9A                     _ReadRTCAsSec:	
  4831                           
  4832                           ;gsk_RTC_GPS.c: 30: TempVar000 = I2C_ReadAtAddress(0xde, 0x02);
  4833                           
  4834                           ;incstack = 0
  4835                           ; Regs used in _ReadRTCAsSec: [wreg+status,2+status,0+pclath+cstack]
  4836  0E9A  3002               	movlw	2
  4837  0E9B  00F4               	movwf	I2C_ReadAtAddress@IntAdd
  4838  0E9C  30DE               	movlw	222
  4839  0E9D  2769  120A  158A   	fcall	_I2C_ReadAtAddress
  4840  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  4841  0EA1  00BD               	movwf	ReadRTCAsSec@TempVar000
  4842                           
  4843                           ;gsk_RTC_GPS.c: 31: Out = ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x03)*10);
  4844  0EA2  390F               	andlw	15
  4845  0EA3  00B0               	movwf	??_ReadRTCAsSec
  4846  0EA4  0E3D               	swapf	ReadRTCAsSec@TempVar000,w
  4847  0EA5  390F               	andlw	15
  4848  0EA6  3903               	andlw	3
  4849  0EA7  00F0               	movwf	___wmul@multiplier
  4850  0EA8  300A               	movlw	10
  4851  0EA9  01F1               	clrf	___wmul@multiplier+1
  4852  0EAA  00F2               	movwf	___wmul@multiplicand
  4853  0EAB  01F3               	clrf	___wmul@multiplicand+1
  4854  0EAC  2750  120A  158A   	fcall	___wmul
  4855  0EAF  0830               	movf	??_ReadRTCAsSec,w
  4856  0EB0  0770               	addwf	?___wmul,w
  4857  0EB1  00B9               	movwf	ReadRTCAsSec@Out
  4858  0EB2  3000               	movlw	0
  4859  0EB3  1803               	skipnc
  4860  0EB4  3001               	movlw	1
  4861  0EB5  0771               	addwf	?___wmul+1,w
  4862  0EB6  00BA               	movwf	ReadRTCAsSec@Out+1
  4863  0EB7  01BB               	clrf	ReadRTCAsSec@Out+2
  4864  0EB8  1BBA               	btfsc	ReadRTCAsSec@Out+1,7
  4865  0EB9  03BB               	decf	ReadRTCAsSec@Out+2,f
  4866  0EBA  083B               	movf	ReadRTCAsSec@Out+2,w
  4867  0EBB  00BC               	movwf	ReadRTCAsSec@Out+3
  4868                           
  4869                           ;gsk_RTC_GPS.c: 32: Out = Out*3600;
  4870  0EBC  300E               	movlw	14
  4871  0EBD  01F3               	clrf	___lmul@multiplier+3
  4872  0EBE  01F2               	clrf	___lmul@multiplier+2
  4873  0EBF  00F1               	movwf	___lmul@multiplier+1
  4874  0EC0  3010               	movlw	16
  4875  0EC1  00F0               	movwf	___lmul@multiplier
  4876  0EC2  083C               	movf	ReadRTCAsSec@Out+3,w
  4877  0EC3  00F7               	movwf	___lmul@multiplicand+3
  4878  0EC4  083B               	movf	ReadRTCAsSec@Out+2,w
  4879  0EC5  00F6               	movwf	___lmul@multiplicand+2
  4880  0EC6  083A               	movf	ReadRTCAsSec@Out+1,w
  4881  0EC7  00F5               	movwf	___lmul@multiplicand+1
  4882  0EC8  0839               	movf	ReadRTCAsSec@Out,w
  4883  0EC9  00F4               	movwf	___lmul@multiplicand
  4884  0ECA  27C4  120A  158A   	fcall	___lmul
  4885  0ECD  0873               	movf	?___lmul+3,w
  4886  0ECE  00BC               	movwf	ReadRTCAsSec@Out+3
  4887  0ECF  0872               	movf	?___lmul+2,w
  4888  0ED0  00BB               	movwf	ReadRTCAsSec@Out+2
  4889  0ED1  0871               	movf	?___lmul+1,w
  4890  0ED2  00BA               	movwf	ReadRTCAsSec@Out+1
  4891  0ED3  0870               	movf	?___lmul,w
  4892  0ED4  00B9               	movwf	ReadRTCAsSec@Out
  4893  0ED5  30DE               	movlw	222
  4894                           
  4895                           ;gsk_RTC_GPS.c: 34: TempVar000 = I2C_ReadAtAddress(0xde, 0x01);
  4896  0ED6  01F4               	clrf	I2C_ReadAtAddress@IntAdd
  4897  0ED7  0AF4               	incf	I2C_ReadAtAddress@IntAdd,f
  4898  0ED8  2769  120A  158A   	fcall	_I2C_ReadAtAddress
  4899  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  4900  0EDC  00BD               	movwf	ReadRTCAsSec@TempVar000
  4901                           
  4902                           ;gsk_RTC_GPS.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  4903  0EDD  27F7  120A  158A   	fcall	PL22	;call to abstracted procedure
  4904  0EE0  2750  120A  158A   	fcall	___wmul
  4905  0EE3  0871               	movf	?___wmul+1,w
  4906  0EE4  00B8               	movwf	_ReadRTCAsSec$889+1
  4907  0EE5  0870               	movf	?___wmul,w
  4908  0EE6  00B7               	movwf	_ReadRTCAsSec$889
  4909  0EE7  083D               	movf	ReadRTCAsSec@TempVar000,w
  4910  0EE8  390F               	andlw	15
  4911  0EE9  07B7               	addwf	_ReadRTCAsSec$889,f
  4912  0EEA  1803               	skipnc
  4913  0EEB  0AB8               	incf	_ReadRTCAsSec$889+1,f
  4914                           
  4915                           ;gsk_RTC_GPS.c: 35: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10)*60;
  4916  0EEC  0838               	movf	_ReadRTCAsSec$889+1,w
  4917  0EED  00F1               	movwf	___wmul@multiplier+1
  4918  0EEE  0837               	movf	_ReadRTCAsSec$889,w
  4919  0EEF  00F0               	movwf	___wmul@multiplier
  4920  0EF0  303C               	movlw	60
  4921  0EF1  00F2               	movwf	___wmul@multiplicand
  4922  0EF2  01F3               	clrf	___wmul@multiplicand+1
  4923  0EF3  2750  120A  158A   	fcall	___wmul
  4924  0EF6  0870               	movf	?___wmul,w
  4925  0EF7  00B0               	movwf	??_ReadRTCAsSec
  4926  0EF8  0871               	movf	?___wmul+1,w
  4927  0EF9  00B1               	movwf	??_ReadRTCAsSec+1
  4928  0EFA  3000               	movlw	0
  4929  0EFB  1BB1               	btfsc	??_ReadRTCAsSec+1,7
  4930  0EFC  30FF               	movlw	255
  4931  0EFD  00B2               	movwf	??_ReadRTCAsSec+2
  4932  0EFE  00B3               	movwf	??_ReadRTCAsSec+3
  4933  0EFF  0830               	movf	??_ReadRTCAsSec,w
  4934  0F00  07B9               	addwf	ReadRTCAsSec@Out,f
  4935  0F01  0831               	movf	??_ReadRTCAsSec+1,w
  4936  0F02  1103               	clrz
  4937  0F03  1803               	skipnc
  4938  0F04  3E01               	addlw	1
  4939  0F05  1D03               	btfss	3,2
  4940  0F06  07BA               	addwf	ReadRTCAsSec@Out+1,f
  4941  0F07  0832               	movf	??_ReadRTCAsSec+2,w
  4942  0F08  1103               	clrz
  4943  0F09  1803               	skipnc
  4944  0F0A  3E01               	addlw	1
  4945  0F0B  1D03               	btfss	3,2
  4946  0F0C  07BB               	addwf	ReadRTCAsSec@Out+2,f
  4947  0F0D  0833               	movf	??_ReadRTCAsSec+3,w
  4948  0F0E  1103               	clrz
  4949  0F0F  1803               	skipnc
  4950  0F10  3E01               	addlw	1
  4951  0F11  1D03               	btfss	3,2
  4952  0F12  07BC               	addwf	ReadRTCAsSec@Out+3,f
  4953  0F13  30DE               	movlw	222
  4954                           
  4955                           ;gsk_RTC_GPS.c: 37: TempVar000 = I2C_ReadAtAddress(0xde, 0x00);
  4956  0F14  01F4               	clrf	I2C_ReadAtAddress@IntAdd
  4957  0F15  2769  120A  158A   	fcall	_I2C_ReadAtAddress
  4958  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  4959  0F19  00BD               	movwf	ReadRTCAsSec@TempVar000
  4960                           
  4961                           ;gsk_RTC_GPS.c: 38: Out = Out + ((TempVar000 & 0x0f) + (TempVar000>>4 & 0x07)*10);
  4962  0F1A  390F               	andlw	15
  4963  0F1B  00B0               	movwf	??_ReadRTCAsSec
  4964  0F1C  27F7  120A  158A   	fcall	PL22	;call to abstracted procedure
  4965  0F1F  2750  120A  158A   	fcall	___wmul
  4966  0F22  0830               	movf	??_ReadRTCAsSec,w
  4967  0F23  0770               	addwf	?___wmul,w
  4968  0F24  00B1               	movwf	??_ReadRTCAsSec+1
  4969  0F25  3000               	movlw	0
  4970  0F26  1803               	skipnc
  4971  0F27  3001               	movlw	1
  4972  0F28  0771               	addwf	?___wmul+1,w
  4973  0F29  00B2               	movwf	??_ReadRTCAsSec+2
  4974  0F2A  0831               	movf	??_ReadRTCAsSec+1,w
  4975  0F2B  00B3               	movwf	??_ReadRTCAsSec+3
  4976  0F2C  0832               	movf	??_ReadRTCAsSec+2,w
  4977  0F2D  00B4               	movwf	??_ReadRTCAsSec+4
  4978  0F2E  3000               	movlw	0
  4979  0F2F  1BB4               	btfsc	??_ReadRTCAsSec+4,7
  4980  0F30  30FF               	movlw	255
  4981  0F31  00B5               	movwf	??_ReadRTCAsSec+5
  4982  0F32  00B6               	movwf	??_ReadRTCAsSec+6
  4983  0F33  0833               	movf	??_ReadRTCAsSec+3,w
  4984  0F34  07B9               	addwf	ReadRTCAsSec@Out,f
  4985  0F35  0834               	movf	??_ReadRTCAsSec+4,w
  4986  0F36  1103               	clrz
  4987  0F37  1803               	skipnc
  4988  0F38  3E01               	addlw	1
  4989  0F39  1D03               	btfss	3,2
  4990  0F3A  07BA               	addwf	ReadRTCAsSec@Out+1,f
  4991  0F3B  0835               	movf	??_ReadRTCAsSec+5,w
  4992  0F3C  1103               	clrz
  4993  0F3D  1803               	skipnc
  4994  0F3E  3E01               	addlw	1
  4995  0F3F  1D03               	btfss	3,2
  4996  0F40  07BB               	addwf	ReadRTCAsSec@Out+2,f
  4997  0F41  0836               	movf	??_ReadRTCAsSec+6,w
  4998  0F42  1103               	clrz
  4999  0F43  1803               	skipnc
  5000  0F44  3E01               	addlw	1
  5001  0F45  1D03               	btfss	3,2
  5002  0F46  07BC               	addwf	ReadRTCAsSec@Out+3,f
  5003                           
  5004                           ;gsk_RTC_GPS.c: 39: return Out;
  5005  0F47  083C               	movf	ReadRTCAsSec@Out+3,w
  5006  0F48  00AF               	movwf	?_ReadRTCAsSec+3
  5007  0F49  083B               	movf	ReadRTCAsSec@Out+2,w
  5008  0F4A  00AE               	movwf	?_ReadRTCAsSec+2
  5009  0F4B  083A               	movf	ReadRTCAsSec@Out+1,w
  5010  0F4C  00AD               	movwf	?_ReadRTCAsSec+1
  5011  0F4D  0839               	movf	ReadRTCAsSec@Out,w
  5012  0F4E  00AC               	movwf	?_ReadRTCAsSec
  5013  0F4F  0008               	return
  5014  0F50                     __end_of_ReadRTCAsSec:	
  5015  0F50                     __ptext13:	
  5016 ;; *************** function ___wmul *****************
  5017 ;; Defined at:
  5018 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  multiplier      2    0[COMMON] unsigned int 
  5021 ;;  multiplicand    2    2[COMMON] unsigned int 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  product         2    4[COMMON] unsigned int 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  2    0[COMMON] unsigned int 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0
  5028 ;; Tracked objects:
  5029 ;;		On entry : 300/0
  5030 ;;		On exit  : 300/0
  5031 ;;		Unchanged: 300/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5033 ;;      Params:         4       0       0       0       0
  5034 ;;      Locals:         2       0       0       0       0
  5035 ;;      Temps:          0       0       0       0       0
  5036 ;;      Totals:         6       0       0       0       0
  5037 ;;Total ram usage:        6 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; This function calls:
  5040 ;;		Nothing
  5041 ;; This function is called by:
  5042 ;;		_ReadRTCAsSec
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           
  5047                           ;psect for function ___wmul
  5048  0F50                     ___wmul:	
  5049                           
  5050                           ;incstack = 0
  5051                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5052  0F50  01F4               	clrf	___wmul@product
  5053  0F51  01F5               	clrf	___wmul@product+1
  5054  0F52                     l2010:	
  5055  0F52  1C70               	btfss	___wmul@multiplier,0
  5056  0F53  2F5A               	goto	l2014
  5057  0F54  0872               	movf	___wmul@multiplicand,w
  5058  0F55  07F4               	addwf	___wmul@product,f
  5059  0F56  1803               	skipnc
  5060  0F57  0AF5               	incf	___wmul@product+1,f
  5061  0F58  0873               	movf	___wmul@multiplicand+1,w
  5062  0F59  07F5               	addwf	___wmul@product+1,f
  5063  0F5A                     l2014:	
  5064  0F5A  1003               	clrc
  5065  0F5B  0DF2               	rlf	___wmul@multiplicand,f
  5066  0F5C  0DF3               	rlf	___wmul@multiplicand+1,f
  5067  0F5D  1003               	clrc
  5068  0F5E  0CF1               	rrf	___wmul@multiplier+1,f
  5069  0F5F  0CF0               	rrf	___wmul@multiplier,f
  5070  0F60  0870               	movf	___wmul@multiplier,w
  5071  0F61  0471               	iorwf	___wmul@multiplier+1,w
  5072  0F62  1D03               	btfss	3,2
  5073  0F63  2F52               	goto	l2010
  5074  0F64  0875               	movf	___wmul@product+1,w
  5075  0F65  00F1               	movwf	?___wmul+1
  5076  0F66  0874               	movf	___wmul@product,w
  5077  0F67  00F0               	movwf	?___wmul
  5078  0F68  0008               	return
  5079  0F69                     __end_of___wmul:	
  5080  0F69                     __ptext15:	
  5081 ;; *************** function _I2C_ReadAtAddress *****************
  5082 ;; Defined at:
  5083 ;;		line 55 in file "libs/gsk_i2c.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  DevID           1    wreg     unsigned char 
  5086 ;;  IntAdd          1    4[COMMON] unsigned char 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  DevID           1    6[COMMON] unsigned char 
  5089 ;;  data            1    5[COMMON] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      unsigned char 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0, pclath, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 200/100
  5096 ;;		On exit  : 300/100
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5099 ;;      Params:         1       0       0       0       0
  5100 ;;      Locals:         2       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0
  5102 ;;      Totals:         3       0       0       0       0
  5103 ;;Total ram usage:        3 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    2
  5106 ;; This function calls:
  5107 ;;		_I2C_Master_Read
  5108 ;;		_I2C_Master_Start
  5109 ;;		_I2C_Master_Stop
  5110 ;;		_I2C_Master_Write
  5111 ;; This function is called by:
  5112 ;;		_ReadRTCAsSec
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           
  5117                           ;psect for function _I2C_ReadAtAddress
  5118  0F69                     _I2C_ReadAtAddress:	
  5119                           
  5120                           ;incstack = 0
  5121                           ; Regs used in _I2C_ReadAtAddress: [wreg+status,2+status,0+pclath+cstack]
  5122                           ;I2C_ReadAtAddress@DevID stored from wreg
  5123  0F69  00F6               	movwf	I2C_ReadAtAddress@DevID
  5124                           
  5125                           ;gsk_i2c.c: 57: I2C_Master_Start();
  5126  0F6A  2797  120A  158A   	fcall	_I2C_Master_Start
  5127                           
  5128                           ;gsk_i2c.c: 58: I2C_Master_Write(DevID);
  5129  0F6D  0876               	movf	I2C_ReadAtAddress@DevID,w
  5130  0F6E  00F0               	movwf	I2C_Master_Write@d
  5131  0F6F  01F1               	clrf	I2C_Master_Write@d+1
  5132  0F70  2792  120A  158A   	fcall	_I2C_Master_Write
  5133                           
  5134                           ;gsk_i2c.c: 59: I2C_Master_Write(IntAdd);
  5135  0F73  0874               	movf	I2C_ReadAtAddress@IntAdd,w
  5136  0F74  00F0               	movwf	I2C_Master_Write@d
  5137  0F75  01F1               	clrf	I2C_Master_Write@d+1
  5138  0F76  2792  120A  158A   	fcall	_I2C_Master_Write
  5139                           
  5140                           ;gsk_i2c.c: 60: I2C_Master_Stop();
  5141  0F79  27C1  120A  158A   	fcall	_I2C_Master_Stop
  5142                           
  5143                           ;gsk_i2c.c: 62: I2C_Master_Start();
  5144  0F7C  2797  120A  158A   	fcall	_I2C_Master_Start
  5145                           
  5146                           ;gsk_i2c.c: 63: I2C_Master_Write(DevID+1);
  5147  0F7F  0876               	movf	I2C_ReadAtAddress@DevID,w
  5148  0F80  00F0               	movwf	I2C_Master_Write@d
  5149  0F81  01F1               	clrf	I2C_Master_Write@d+1
  5150  0F82  0AF0               	incf	I2C_Master_Write@d,f
  5151  0F83  1903               	skipnz
  5152  0F84  0AF1               	incf	I2C_Master_Write@d+1,f
  5153  0F85  2792  120A  158A   	fcall	_I2C_Master_Write
  5154                           
  5155                           ;gsk_i2c.c: 64: char data = I2C_Master_Read(0);
  5156  0F88  01F0               	clrf	I2C_Master_Read@a
  5157  0F89  01F1               	clrf	I2C_Master_Read@a+1
  5158  0F8A  279A  120A  158A   	fcall	_I2C_Master_Read
  5159  0F8D  0870               	movf	?_I2C_Master_Read,w
  5160  0F8E  00F5               	movwf	I2C_ReadAtAddress@data
  5161                           
  5162                           ;gsk_i2c.c: 65: I2C_Master_Stop();
  5163  0F8F  27C1               	fcall	_I2C_Master_Stop
  5164                           
  5165                           ;gsk_i2c.c: 66: return data;
  5166  0F90  0875               	movf	I2C_ReadAtAddress@data,w
  5167  0F91  0008               	return
  5168  0F92                     __end_of_I2C_ReadAtAddress:	
  5169  0F92                     __ptext16:	
  5170 ;; *************** function _I2C_Master_Write *****************
  5171 ;; Defined at:
  5172 ;;		line 36 in file "libs/gsk_i2c.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  d               2    0[COMMON] unsigned int 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 200/100
  5183 ;;		On exit  : 300/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5186 ;;      Params:         2       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0
  5189 ;;      Totals:         2       0       0       0       0
  5190 ;;Total ram usage:        2 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    1
  5193 ;; This function calls:
  5194 ;;		_I2C_Master_Wait
  5195 ;; This function is called by:
  5196 ;;		_I2C_ReadAtAddress
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           
  5201                           ;psect for function _I2C_Master_Write
  5202  0F92                     _I2C_Master_Write:	
  5203                           
  5204                           ;gsk_i2c.c: 38: I2C_Master_Wait();
  5205                           
  5206                           ;incstack = 0
  5207                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5208  0F92  27B9               	fcall	_I2C_Master_Wait
  5209                           
  5210                           ;gsk_i2c.c: 39: SSPBUF = d;
  5211  0F93  0870               	movf	I2C_Master_Write@d,w
  5212  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  5213  0F95  0093               	movwf	19	;volatile
  5214  0F96  0008               	return
  5215  0F97                     __end_of_I2C_Master_Write:	
  5216  0F97                     __ptext18:	
  5217 ;; *************** function _I2C_Master_Start *****************
  5218 ;; Defined at:
  5219 ;;		line 18 in file "libs/gsk_i2c.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;		None
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;		None
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  1    wreg      void 
  5226 ;; Registers used:
  5227 ;;		wreg, status,2, status,0, pclath, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 200/100
  5230 ;;		On exit  : 300/100
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5233 ;;      Params:         0       0       0       0       0
  5234 ;;      Locals:         0       0       0       0       0
  5235 ;;      Temps:          0       0       0       0       0
  5236 ;;      Totals:         0       0       0       0       0
  5237 ;;Total ram usage:        0 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    1
  5240 ;; This function calls:
  5241 ;;		_I2C_Master_Wait
  5242 ;; This function is called by:
  5243 ;;		_I2C_ReadAtAddress
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function _I2C_Master_Start
  5249  0F97                     _I2C_Master_Start:	
  5250                           
  5251                           ;gsk_i2c.c: 20: I2C_Master_Wait();
  5252                           
  5253                           ;incstack = 0
  5254                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5255  0F97  27B9               	fcall	_I2C_Master_Wait
  5256                           
  5257                           ;gsk_i2c.c: 21: SEN = 1;
  5258  0F98  1411               	bsf	17,0	;volatile
  5259  0F99  0008               	return
  5260  0F9A                     __end_of_I2C_Master_Start:	
  5261  0F9A                     __ptext19:	
  5262 ;; *************** function _I2C_Master_Read *****************
  5263 ;; Defined at:
  5264 ;;		line 42 in file "libs/gsk_i2c.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  a               2    0[COMMON] unsigned short 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  temp            2    2[COMMON] unsigned short 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  2    0[COMMON] unsigned short 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0, pclath, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 300/0
  5275 ;;		On exit  : 300/100
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5278 ;;      Params:         2       0       0       0       0
  5279 ;;      Locals:         2       0       0       0       0
  5280 ;;      Temps:          0       0       0       0       0
  5281 ;;      Totals:         4       0       0       0       0
  5282 ;;Total ram usage:        4 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    1
  5285 ;; This function calls:
  5286 ;;		_I2C_Master_Wait
  5287 ;; This function is called by:
  5288 ;;		_I2C_ReadAtAddress
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           
  5293                           ;psect for function _I2C_Master_Read
  5294  0F9A                     _I2C_Master_Read:	
  5295                           
  5296                           ;gsk_i2c.c: 44: unsigned short temp;
  5297                           ;gsk_i2c.c: 45: I2C_Master_Wait();
  5298                           
  5299                           ;incstack = 0
  5300                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5301  0F9A  27B9  120A  158A   	fcall	_I2C_Master_Wait
  5302                           
  5303                           ;gsk_i2c.c: 46: RCEN = 1;
  5304  0F9D  1591               	bsf	17,3	;volatile
  5305                           
  5306                           ;gsk_i2c.c: 47: I2C_Master_Wait();
  5307  0F9E  27B9  120A  158A   	fcall	_I2C_Master_Wait
  5308                           
  5309                           ;gsk_i2c.c: 48: temp = SSPBUF;
  5310  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  5311  0FA2  0813               	movf	19,w	;volatile
  5312  0FA3  00F2               	movwf	I2C_Master_Read@temp
  5313  0FA4  01F3               	clrf	I2C_Master_Read@temp+1
  5314                           
  5315                           ;gsk_i2c.c: 49: I2C_Master_Wait();
  5316  0FA5  27B9  120A  158A   	fcall	_I2C_Master_Wait
  5317                           
  5318                           ;gsk_i2c.c: 50: ACKDT = (a)?0:1;
  5319  0FA8  0870               	movf	I2C_Master_Read@a,w
  5320  0FA9  0471               	iorwf	I2C_Master_Read@a+1,w
  5321  0FAA  1D03               	btfss	3,2
  5322  0FAB  2FB0               	goto	u2030
  5323  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  5324  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  5325  0FAE  1691               	bsf	17,5	;volatile
  5326  0FAF  2FB3               	goto	l1966
  5327  0FB0                     u2030:	
  5328  0FB0  1683               	bsf	3,5	;RP0=1, select bank1
  5329  0FB1  1303               	bcf	3,6	;RP1=0, select bank1
  5330  0FB2  1291               	bcf	17,5	;volatile
  5331  0FB3                     l1966:	
  5332                           
  5333                           ;gsk_i2c.c: 51: ACKEN = 1;
  5334  0FB3  1611               	bsf	17,4	;volatile
  5335                           
  5336                           ;gsk_i2c.c: 52: return temp;
  5337  0FB4  0873               	movf	I2C_Master_Read@temp+1,w
  5338  0FB5  00F1               	movwf	?_I2C_Master_Read+1
  5339  0FB6  0872               	movf	I2C_Master_Read@temp,w
  5340  0FB7  00F0               	movwf	?_I2C_Master_Read
  5341  0FB8  0008               	return
  5342  0FB9                     __end_of_I2C_Master_Read:	
  5343  0FB9                     __ptext20:	
  5344 ;; *************** function _I2C_Master_Wait *****************
  5345 ;; Defined at:
  5346 ;;		line 13 in file "libs/gsk_i2c.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2
  5355 ;; Tracked objects:
  5356 ;;		On entry : 200/100
  5357 ;;		On exit  : 300/100
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5360 ;;      Params:         0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_I2C_Master_Start
  5370 ;;		_I2C_Master_Stop
  5371 ;;		_I2C_Master_Write
  5372 ;;		_I2C_Master_Read
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           
  5377                           ;psect for function _I2C_Master_Wait
  5378  0FB9                     _I2C_Master_Wait:	
  5379  0FB9                     l308:	
  5380                           ;gsk_i2c.c: 15: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5381                           
  5382                           ;incstack = 0
  5383                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5384                           
  5385  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  5386  0FBA  1914               	btfsc	20,2	;volatile
  5387  0FBB  2FB9               	goto	l308
  5388  0FBC  0811               	movf	17,w	;volatile
  5389  0FBD  391F               	andlw	31
  5390  0FBE  1903               	btfsc	3,2
  5391  0FBF  0008               	return
  5392  0FC0  2FB9               	goto	l308
  5393  0FC1                     __end_of_I2C_Master_Wait:	
  5394  0FC1                     __ptext17:	
  5395 ;; *************** function _I2C_Master_Stop *****************
  5396 ;; Defined at:
  5397 ;;		line 30 in file "libs/gsk_i2c.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 200/0
  5408 ;;		On exit  : 300/100
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5411 ;;      Params:         0       0       0       0       0
  5412 ;;      Locals:         0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0
  5414 ;;      Totals:         0       0       0       0       0
  5415 ;;Total ram usage:        0 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    1
  5418 ;; This function calls:
  5419 ;;		_I2C_Master_Wait
  5420 ;; This function is called by:
  5421 ;;		_I2C_ReadAtAddress
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _I2C_Master_Stop
  5427  0FC1                     _I2C_Master_Stop:	
  5428                           
  5429                           ;gsk_i2c.c: 32: I2C_Master_Wait();
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5433  0FC1  27B9               	fcall	_I2C_Master_Wait
  5434                           
  5435                           ;gsk_i2c.c: 33: PEN = 1;
  5436  0FC2  1511               	bsf	17,2	;volatile
  5437  0FC3  0008               	return
  5438  0FC4                     __end_of_I2C_Master_Stop:	
  5439  0FC4                     __ptext14:	
  5440 ;; *************** function ___lmul *****************
  5441 ;; Defined at:
  5442 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  multiplier      4    0[COMMON] unsigned long 
  5445 ;;  multiplicand    4    4[COMMON] unsigned long 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  product         4    8[COMMON] unsigned long 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  4    0[COMMON] unsigned long 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 300/800
  5454 ;;		On exit  : 300/0
  5455 ;;		Unchanged: 300/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5457 ;;      Params:         8       0       0       0       0
  5458 ;;      Locals:         4       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0
  5460 ;;      Totals:        12       0       0       0       0
  5461 ;;Total ram usage:       12 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_WriteLongInt
  5467 ;;		_ReadRTCAsSec
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function ___lmul
  5473  0FC4                     ___lmul:	
  5474                           
  5475                           ;incstack = 0
  5476                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5477  0FC4  01F8               	clrf	___lmul@product
  5478  0FC5  01F9               	clrf	___lmul@product+1
  5479  0FC6  01FA               	clrf	___lmul@product+2
  5480  0FC7  01FB               	clrf	___lmul@product+3
  5481  0FC8                     l621:	
  5482  0FC8  1C70               	btfss	___lmul@multiplier,0
  5483  0FC9  2FDE               	goto	l2028
  5484  0FCA  0874               	movf	___lmul@multiplicand,w
  5485  0FCB  07F8               	addwf	___lmul@product,f
  5486  0FCC  0875               	movf	___lmul@multiplicand+1,w
  5487  0FCD  1103               	clrz
  5488  0FCE  1803               	skipnc
  5489  0FCF  3E01               	addlw	1
  5490  0FD0  1D03               	btfss	3,2
  5491  0FD1  07F9               	addwf	___lmul@product+1,f
  5492  0FD2  0876               	movf	___lmul@multiplicand+2,w
  5493  0FD3  1103               	clrz
  5494  0FD4  1803               	skipnc
  5495  0FD5  3E01               	addlw	1
  5496  0FD6  1D03               	btfss	3,2
  5497  0FD7  07FA               	addwf	___lmul@product+2,f
  5498  0FD8  0877               	movf	___lmul@multiplicand+3,w
  5499  0FD9  1103               	clrz
  5500  0FDA  1803               	skipnc
  5501  0FDB  3E01               	addlw	1
  5502  0FDC  1D03               	btfss	3,2
  5503  0FDD  07FB               	addwf	___lmul@product+3,f
  5504  0FDE                     l2028:	
  5505  0FDE  1003               	clrc
  5506  0FDF  0DF4               	rlf	___lmul@multiplicand,f
  5507  0FE0  0DF5               	rlf	___lmul@multiplicand+1,f
  5508  0FE1  0DF6               	rlf	___lmul@multiplicand+2,f
  5509  0FE2  0DF7               	rlf	___lmul@multiplicand+3,f
  5510  0FE3  1003               	clrc
  5511  0FE4  0CF3               	rrf	___lmul@multiplier+3,f
  5512  0FE5  0CF2               	rrf	___lmul@multiplier+2,f
  5513  0FE6  0CF1               	rrf	___lmul@multiplier+1,f
  5514  0FE7  0CF0               	rrf	___lmul@multiplier,f
  5515  0FE8  0873               	movf	___lmul@multiplier+3,w
  5516  0FE9  0472               	iorwf	___lmul@multiplier+2,w
  5517  0FEA  0471               	iorwf	___lmul@multiplier+1,w
  5518  0FEB  0470               	iorwf	___lmul@multiplier,w
  5519  0FEC  1D03               	skipz
  5520  0FED  2FC8               	goto	l621
  5521  0FEE  087B               	movf	___lmul@product+3,w
  5522  0FEF  00F3               	movwf	?___lmul+3
  5523  0FF0  087A               	movf	___lmul@product+2,w
  5524  0FF1  00F2               	movwf	?___lmul+2
  5525  0FF2  0879               	movf	___lmul@product+1,w
  5526  0FF3  00F1               	movwf	?___lmul+1
  5527  0FF4  0878               	movf	___lmul@product,w
  5528  0FF5  00F0               	movwf	?___lmul
  5529  0FF6  0008               	return
  5530  0FF7                     __end_of___lmul:	
  5531  0FF7                     PL22:	
  5532  0FF7  0E3D               	swapf	ReadRTCAsSec@TempVar000,w
  5533  0FF8  390F               	andlw	15
  5534  0FF9  3907               	andlw	7
  5535  0FFA  00F0               	movwf	___wmul@multiplier
  5536  0FFB  300A               	movlw	10
  5537  0FFC  01F1               	clrf	___wmul@multiplier+1
  5538  0FFD  00F2               	movwf	___wmul@multiplicand
  5539  0FFE  01F3               	clrf	___wmul@multiplicand+1
  5540  0FFF  0008               	return
  5541  1000                     __end_ofPL22:	
  5542                           
  5543                           	psect	text24
  5544  0015                     __ptext24:	
  5545 ;; *************** function _Lcd_Disp_Bin *****************
  5546 ;; Defined at:
  5547 ;;		line 200 in file "libs/HD44780.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  y               1    wreg     unsigned char 
  5550 ;;  x               1    7[BANK0 ] unsigned char 
  5551 ;;  val             1    8[BANK0 ] unsigned char 
  5552 ;;  DispChar        1    9[BANK0 ] unsigned char 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  y               1   11[BANK0 ] unsigned char 
  5555 ;;  i               1   12[BANK0 ] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 300/800
  5562 ;;		On exit  : 300/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5565 ;;      Params:         0       3       0       0       0
  5566 ;;      Locals:         0       2       0       0       0
  5567 ;;      Temps:          0       1       0       0       0
  5568 ;;      Totals:         0       6       0       0       0
  5569 ;;Total ram usage:        6 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    3
  5572 ;; This function calls:
  5573 ;;		_Lcd_WriteChar
  5574 ;; This function is called by:
  5575 ;;		_main
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           
  5580                           ;psect for function _Lcd_Disp_Bin
  5581  0015                     _Lcd_Disp_Bin:	
  5582                           
  5583                           ;incstack = 0
  5584                           ; Regs used in _Lcd_Disp_Bin: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5585                           ;Lcd_Disp_Bin@y stored from wreg
  5586  0015  00B7               	movwf	Lcd_Disp_Bin@y
  5587                           
  5588                           ;HD44780.c: 201: for (char i=0; i<8; i++){
  5589  0016  01B8               	clrf	Lcd_Disp_Bin@i
  5590  0017                     l2280:	
  5591                           
  5592                           ;HD44780.c: 202: if ((val) & (0x01<<i))
  5593  0017  3001               	movlw	1
  5594  0018  00B6               	movwf	??_Lcd_Disp_Bin
  5595  0019  0A38               	incf	Lcd_Disp_Bin@i,w
  5596  001A  281D               	goto	u2384
  5597  001B                     u2385:	
  5598  001B  1003               	clrc
  5599  001C  0DB6               	rlf	??_Lcd_Disp_Bin,f
  5600  001D                     u2384:	
  5601  001D  3EFF               	addlw	-1
  5602  001E  1D03               	skipz
  5603  001F  281B               	goto	u2385
  5604  0020  0836               	movf	??_Lcd_Disp_Bin,w
  5605  0021  0534               	andwf	Lcd_Disp_Bin@val,w
  5606  0022  1903               	btfsc	3,2
  5607  0023  282F               	goto	l2284
  5608                           
  5609                           ;HD44780.c: 203: Lcd_WriteChar(y, x+i, DispChar);
  5610  0024  0838               	movf	Lcd_Disp_Bin@i,w
  5611  0025  0733               	addwf	Lcd_Disp_Bin@x,w
  5612  0026  00AF               	movwf	Lcd_WriteChar@x
  5613  0027  0835               	movf	Lcd_Disp_Bin@DispChar,w
  5614  0028  00B0               	movwf	Lcd_WriteChar@c
  5615  0029  0837               	movf	Lcd_Disp_Bin@y,w
  5616  002A  120A  118A  2472  120A  118A  	fcall	_Lcd_WriteChar
  5617  002F                     l2284:	
  5618  002F  1283               	bcf	3,5	;RP0=0, select bank0
  5619  0030  1303               	bcf	3,6	;RP1=0, select bank0
  5620  0031  3008               	movlw	8
  5621  0032  0AB8               	incf	Lcd_Disp_Bin@i,f
  5622  0033  0238               	subwf	Lcd_Disp_Bin@i,w
  5623  0034  1803               	btfsc	3,0
  5624  0035  0008               	return
  5625  0036  2817               	goto	l2280
  5626  0037                     __end_of_Lcd_Disp_Bin:	
  5627                           
  5628                           	psect	text29
  5629  0037                     __ptext29:	
  5630 ;; *************** function _I2C_Master_Init *****************
  5631 ;; Defined at:
  5632 ;;		line 3 in file "libs/gsk_i2c.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  c               4    0[BANK0 ] const unsigned long 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0, pclath, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : B00/0
  5643 ;;		On exit  : B00/100
  5644 ;;		Unchanged: 800/0
  5645 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5646 ;;      Params:         0       4       0       0       0
  5647 ;;      Locals:         0       0       0       0       0
  5648 ;;      Temps:          0       4       0       0       0
  5649 ;;      Totals:         0       8       0       0       0
  5650 ;;Total ram usage:        8 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    1
  5653 ;; This function calls:
  5654 ;;		___lldiv
  5655 ;; This function is called by:
  5656 ;;		_main
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           
  5661                           ;psect for function _I2C_Master_Init
  5662  0037                     _I2C_Master_Init:	
  5663                           
  5664                           ;gsk_i2c.c: 5: SSPCON = 0b00101000;
  5665                           
  5666                           ;incstack = 0
  5667                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5668  0037  3028               	movlw	40
  5669  0038  0094               	movwf	20	;volatile
  5670                           
  5671                           ;gsk_i2c.c: 6: SSPCON2 = 0;
  5672  0039  1683               	bsf	3,5	;RP0=1, select bank1
  5673  003A  0191               	clrf	17	;volatile
  5674                           
  5675                           ;gsk_i2c.c: 7: SSPADD = (4000000/(4*c))-1;
  5676  003B  1283               	bcf	3,5	;RP0=0, select bank0
  5677  003C  082C               	movf	I2C_Master_Init@c,w
  5678  003D  00B0               	movwf	??_I2C_Master_Init
  5679  003E  082D               	movf	I2C_Master_Init@c+1,w
  5680  003F  00B1               	movwf	??_I2C_Master_Init+1
  5681  0040  082E               	movf	I2C_Master_Init@c+2,w
  5682  0041  00B2               	movwf	??_I2C_Master_Init+2
  5683  0042  082F               	movf	I2C_Master_Init@c+3,w
  5684  0043  00B3               	movwf	??_I2C_Master_Init+3
  5685  0044  3002               	movlw	2
  5686  0045                     u2495:	
  5687  0045  1003               	clrc
  5688  0046  0DB0               	rlf	??_I2C_Master_Init,f
  5689  0047  0DB1               	rlf	??_I2C_Master_Init+1,f
  5690  0048  0DB2               	rlf	??_I2C_Master_Init+2,f
  5691  0049  0DB3               	rlf	??_I2C_Master_Init+3,f
  5692  004A  3EFF               	addlw	-1
  5693  004B  1D03               	skipz
  5694  004C  2845               	goto	u2495
  5695  004D  0833               	movf	??_I2C_Master_Init+3,w
  5696  004E  00F3               	movwf	___lldiv@divisor+3
  5697  004F  0832               	movf	??_I2C_Master_Init+2,w
  5698  0050  00F2               	movwf	___lldiv@divisor+2
  5699  0051  0831               	movf	??_I2C_Master_Init+1,w
  5700  0052  00F1               	movwf	___lldiv@divisor+1
  5701  0053  0830               	movf	??_I2C_Master_Init,w
  5702  0054  00F0               	movwf	___lldiv@divisor
  5703  0055  303D               	movlw	61
  5704  0056  01F7               	clrf	___lldiv@dividend+3
  5705  0057  00F6               	movwf	___lldiv@dividend+2
  5706  0058  3009               	movlw	9
  5707  0059  00F5               	movwf	___lldiv@dividend+1
  5708  005A  01F4               	clrf	___lldiv@dividend
  5709  005B  2064               	fcall	___lldiv
  5710  005C  0870               	movf	?___lldiv,w
  5711  005D  3EFF               	addlw	255
  5712  005E  1683               	bsf	3,5	;RP0=1, select bank1
  5713  005F  0093               	movwf	19	;volatile
  5714                           
  5715                           ;gsk_i2c.c: 8: SSPSTAT = 0;
  5716  0060  0194               	clrf	20	;volatile
  5717                           
  5718                           ;gsk_i2c.c: 9: TRISC3 = 1;
  5719  0061  1587               	bsf	7,3	;volatile
  5720                           
  5721                           ;gsk_i2c.c: 10: TRISC4 = 1;
  5722  0062  1607               	bsf	7,4	;volatile
  5723  0063  0008               	return
  5724  0064                     __end_of_I2C_Master_Init:	
  5725  0064                     __ptext30:	
  5726 ;; *************** function ___lldiv *****************
  5727 ;; Defined at:
  5728 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  divisor         4    0[COMMON] unsigned long 
  5731 ;;  dividend        4    4[COMMON] unsigned long 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  quotient        4    8[COMMON] unsigned long 
  5734 ;;  counter         1   12[COMMON] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  4    0[COMMON] unsigned long 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0
  5739 ;; Tracked objects:
  5740 ;;		On entry : B00/0
  5741 ;;		On exit  : B00/0
  5742 ;;		Unchanged: B00/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5744 ;;      Params:         8       0       0       0       0
  5745 ;;      Locals:         5       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0
  5747 ;;      Totals:        13       0       0       0       0
  5748 ;;Total ram usage:       13 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_I2C_Master_Init
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function ___lldiv
  5759  0064                     ___lldiv:	
  5760                           
  5761                           ;incstack = 0
  5762                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5763  0064  01F8               	clrf	___lldiv@quotient
  5764  0065  01F9               	clrf	___lldiv@quotient+1
  5765  0066  01FA               	clrf	___lldiv@quotient+2
  5766  0067  01FB               	clrf	___lldiv@quotient+3
  5767  0068  0873               	movf	___lldiv@divisor+3,w
  5768  0069  0472               	iorwf	___lldiv@divisor+2,w
  5769  006A  0471               	iorwf	___lldiv@divisor+1,w
  5770  006B  0470               	iorwf	___lldiv@divisor,w
  5771  006C  1903               	skipnz
  5772  006D  28A3               	goto	l2136
  5773  006E  01FC               	clrf	___lldiv@counter
  5774  006F                     L18:	
  5775  006F  0AFC               	incf	___lldiv@counter,f
  5776  0070  1BF3               	btfsc	___lldiv@divisor+3,7
  5777  0071  2878               	goto	l2124
  5778  0072  1003               	clrc
  5779  0073  0DF0               	rlf	___lldiv@divisor,f
  5780  0074  0DF1               	rlf	___lldiv@divisor+1,f
  5781  0075  0DF2               	rlf	___lldiv@divisor+2,f
  5782  0076  0DF3               	rlf	___lldiv@divisor+3,f
  5783  0077  286F               	goto	L18
  5784  0078                     l2124:	
  5785  0078  1003               	clrc
  5786  0079  0DF8               	rlf	___lldiv@quotient,f
  5787  007A  0DF9               	rlf	___lldiv@quotient+1,f
  5788  007B  0DFA               	rlf	___lldiv@quotient+2,f
  5789  007C  0DFB               	rlf	___lldiv@quotient+3,f
  5790  007D  0873               	movf	___lldiv@divisor+3,w
  5791  007E  0277               	subwf	___lldiv@dividend+3,w
  5792  007F  1D03               	skipz
  5793  0080  288B               	goto	u2315
  5794  0081  0872               	movf	___lldiv@divisor+2,w
  5795  0082  0276               	subwf	___lldiv@dividend+2,w
  5796  0083  1D03               	skipz
  5797  0084  288B               	goto	u2315
  5798  0085  0871               	movf	___lldiv@divisor+1,w
  5799  0086  0275               	subwf	___lldiv@dividend+1,w
  5800  0087  1D03               	skipz
  5801  0088  288B               	goto	u2315
  5802  0089  0870               	movf	___lldiv@divisor,w
  5803  008A  0274               	subwf	___lldiv@dividend,w
  5804  008B                     u2315:	
  5805  008B  1C03               	skipc
  5806  008C  289D               	goto	L19
  5807  008D  0870               	movf	___lldiv@divisor,w
  5808  008E  02F4               	subwf	___lldiv@dividend,f
  5809  008F  0871               	movf	___lldiv@divisor+1,w
  5810  0090  1C03               	skipc
  5811  0091  0F71               	incfsz	___lldiv@divisor+1,w
  5812  0092  02F5               	subwf	___lldiv@dividend+1,f
  5813  0093  0872               	movf	___lldiv@divisor+2,w
  5814  0094  1C03               	skipc
  5815  0095  0F72               	incfsz	___lldiv@divisor+2,w
  5816  0096  02F6               	subwf	___lldiv@dividend+2,f
  5817  0097  0873               	movf	___lldiv@divisor+3,w
  5818  0098  1C03               	skipc
  5819  0099  0F73               	incfsz	___lldiv@divisor+3,w
  5820  009A  02F7               	subwf	___lldiv@dividend+3,f
  5821  009B  1478               	bsf	___lldiv@quotient,0
  5822  009C  1003               	clrc
  5823  009D                     L19:	
  5824  009D  0CF3               	rrf	___lldiv@divisor+3,f
  5825  009E  0CF2               	rrf	___lldiv@divisor+2,f
  5826  009F  0CF1               	rrf	___lldiv@divisor+1,f
  5827  00A0  0CF0               	rrf	___lldiv@divisor,f
  5828  00A1  0BFC               	decfsz	___lldiv@counter,f
  5829  00A2  2878               	goto	l2124
  5830  00A3                     l2136:	
  5831  00A3  087B               	movf	___lldiv@quotient+3,w
  5832  00A4  00F3               	movwf	?___lldiv+3
  5833  00A5  087A               	movf	___lldiv@quotient+2,w
  5834  00A6  00F2               	movwf	?___lldiv+2
  5835  00A7  0879               	movf	___lldiv@quotient+1,w
  5836  00A8  00F1               	movwf	?___lldiv+1
  5837  00A9  0878               	movf	___lldiv@quotient,w
  5838  00AA  00F0               	movwf	?___lldiv
  5839  00AB  0008               	return
  5840  00AC                     __end_of___lldiv:	
  5841                           
  5842                           	psect	text32
  5843  0D6B                     __ptext32:	
  5844 ;; *************** function _GetCumulativePeriodsForStates *****************
  5845 ;; Defined at:
  5846 ;;		line 3 in file "libs/gsk_algo_funcs.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;		None
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  i               1    7[COMMON] unsigned char 
  5851 ;;  j               1    6[COMMON] unsigned char 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      void 
  5854 ;; Registers used:
  5855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 300/100
  5858 ;;		On exit  : 800/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5861 ;;      Params:         0       0       0       0       0
  5862 ;;      Locals:         2       0       0       0       0
  5863 ;;      Temps:          4       0       0       0       0
  5864 ;;      Totals:         6       0       0       0       0
  5865 ;;Total ram usage:        6 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    1
  5868 ;; This function calls:
  5869 ;;		_GetPrevCycle
  5870 ;; This function is called by:
  5871 ;;		_main
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           
  5876                           ;psect for function _GetCumulativePeriodsForStates
  5877  0D6B                     _GetCumulativePeriodsForStates:	
  5878                           
  5879                           ;gsk_algo_funcs.c: 4: char i, j;
  5880                           ;gsk_algo_funcs.c: 5: for (i=0; i< 3; i++) {
  5881                           
  5882                           ;incstack = 0
  5883                           ; Regs used in _GetCumulativePeriodsForStates: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
  5884  0D6B  01F7               	clrf	GetCumulativePeriodsForStates@i
  5885  0D6C                     l2362:	
  5886                           
  5887                           ;gsk_algo_funcs.c: 6: STATE_CUMULATIVE_PERIODS[i] = 0;
  5888  0D6C  1003               	clrc
  5889  0D6D  0D77               	rlf	GetCumulativePeriodsForStates@i,w
  5890  0D6E  3EDC               	addlw	(low (_STATE_CUMULATIVE_PERIODS| 0))& (0+255)
  5891  0D6F  0084               	movwf	4
  5892  0D70  1383               	bcf	3,7	;select IRP bank1
  5893  0D71  0180               	clrf	0
  5894  0D72  0A84               	incf	4,f
  5895  0D73  0180               	clrf	0
  5896                           
  5897                           ;gsk_algo_funcs.c: 7: if (i==0)
  5898  0D74  0877               	movf	GetCumulativePeriodsForStates@i,w
  5899  0D75  1D03               	btfss	3,2
  5900  0D76  2D79               	goto	l2368
  5901                           
  5902                           ;gsk_algo_funcs.c: 8: j = 0;
  5903  0D77  01F6               	clrf	GetCumulativePeriodsForStates@j
  5904  0D78  2D82               	goto	l2374
  5905  0D79                     l2368:	
  5906                           
  5907                           ;gsk_algo_funcs.c: 9: else
  5908                           ;gsk_algo_funcs.c: 10: j = STATE_BREAKS[GetPrevCycle(i)];
  5909  0D79  0877               	movf	GetCumulativePeriodsForStates@i,w
  5910  0D7A  2679  120A  158A   	fcall	_GetPrevCycle
  5911  0D7D  3EE2               	addlw	(low (_STATE_BREAKS| 0))& (0+255)
  5912  0D7E  0084               	movwf	4
  5913  0D7F  1383               	bcf	3,7	;select IRP bank1
  5914  0D80  0800               	movf	0,w
  5915  0D81  00F6               	movwf	GetCumulativePeriodsForStates@j
  5916  0D82                     l2374:	
  5917  0D82  0877               	movf	GetCumulativePeriodsForStates@i,w
  5918  0D83  3EE2               	addlw	(low (_STATE_BREAKS| 0))& (0+255)
  5919  0D84  0084               	movwf	4
  5920  0D85  0800               	movf	0,w
  5921  0D86  0276               	subwf	GetCumulativePeriodsForStates@j,w
  5922  0D87  1803               	btfsc	3,0
  5923  0D88  2DA9               	goto	l2376
  5924                           
  5925                           ;gsk_algo_funcs.c: 12: STATE_CUMULATIVE_PERIODS[i] = STATE_CUMULATIVE_PERIODS[i]
  5926                           ;gsk_algo_funcs.c: 13: + STATE_PERIODS[j];
  5927  0D89  1003               	clrc
  5928  0D8A  0D77               	rlf	GetCumulativePeriodsForStates@i,w
  5929  0D8B  3EDC               	addlw	(low (_STATE_CUMULATIVE_PERIODS| 0))& (0+255)
  5930  0D8C  0084               	movwf	4
  5931  0D8D  0800               	movf	0,w
  5932  0D8E  00F2               	movwf	??_GetCumulativePeriodsForStates
  5933  0D8F  0A84               	incf	4,f
  5934  0D90  0800               	movf	0,w
  5935  0D91  00F3               	movwf	??_GetCumulativePeriodsForStates+1
  5936  0D92  0876               	movf	GetCumulativePeriodsForStates@j,w
  5937  0D93  3ECC               	addlw	204
  5938  0D94  0084               	movwf	4
  5939  0D95  1783               	bsf	3,7	;select IRP bank3
  5940  0D96  0800               	movf	0,w
  5941  0D97  0772               	addwf	??_GetCumulativePeriodsForStates,w
  5942  0D98  00F4               	movwf	??_GetCumulativePeriodsForStates+2
  5943  0D99  0873               	movf	??_GetCumulativePeriodsForStates+1,w
  5944  0D9A  1803               	skipnc
  5945  0D9B  0A73               	incf	??_GetCumulativePeriodsForStates+1,w
  5946  0D9C  00F5               	movwf	??_GetCumulativePeriodsForStates+3
  5947  0D9D  1003               	clrc
  5948  0D9E  0D77               	rlf	GetCumulativePeriodsForStates@i,w
  5949  0D9F  3EDC               	addlw	(low (_STATE_CUMULATIVE_PERIODS| 0))& (0+255)
  5950  0DA0  0084               	movwf	4
  5951  0DA1  0874               	movf	??_GetCumulativePeriodsForStates+2,w
  5952  0DA2  1383               	bcf	3,7	;select IRP bank1
  5953  0DA3  0080               	movwf	0
  5954  0DA4  0A84               	incf	4,f
  5955  0DA5  0875               	movf	??_GetCumulativePeriodsForStates+3,w
  5956  0DA6  0080               	movwf	0
  5957  0DA7  0AF6               	incf	GetCumulativePeriodsForStates@j,f
  5958  0DA8  2D82               	goto	l2374
  5959  0DA9                     l2376:	
  5960  0DA9  3003               	movlw	3
  5961  0DAA  0AF7               	incf	GetCumulativePeriodsForStates@i,f
  5962  0DAB  0277               	subwf	GetCumulativePeriodsForStates@i,w
  5963  0DAC  1803               	btfsc	3,0
  5964  0DAD  0008               	return
  5965  0DAE  2D6C               	goto	l2362
  5966  0DAF                     __end_of_GetCumulativePeriodsForStates:	
  5967  0DAF                     __ptext31:	
  5968 ;; *************** function _GetCycle *****************
  5969 ;; Defined at:
  5970 ;;		line 27 in file "libs/gsk_algo_funcs.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  i               1   13[COMMON] unsigned char 
  5975 ;;  PrevCycle       1   12[COMMON] unsigned char 
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 300/0
  5982 ;;		On exit  : 300/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  5985 ;;      Params:         0       0       0       0       0
  5986 ;;      Locals:         2       0       0       0       0
  5987 ;;      Temps:         10       0       0       0       0
  5988 ;;      Totals:        12       0       0       0       0
  5989 ;;Total ram usage:       12 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    1
  5992 ;; This function calls:
  5993 ;;		_GetPrevCycle
  5994 ;; This function is called by:
  5995 ;;		_main
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function _GetCycle
  6001  0DAF                     _GetCycle:	
  6002                           
  6003                           ;gsk_algo_funcs.c: 28: char PrevCycle;
  6004                           ;gsk_algo_funcs.c: 29: for (char i = 0; i < 3; i++) {
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in _GetCycle: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6008  0DAF  01FD               	clrf	GetCycle@i
  6009  0DB0                     l2386:	
  6010                           
  6011                           ;gsk_algo_funcs.c: 30: PrevCycle = GetPrevCycle(i);
  6012  0DB0  087D               	movf	GetCycle@i,w
  6013  0DB1  2679  120A  158A   	fcall	_GetPrevCycle
  6014  0DB4  00FC               	movwf	GetCycle@PrevCycle
  6015                           
  6016                           ;gsk_algo_funcs.c: 31: if (C[PrevCycle] <= C[i]) {
  6017  0DB5  00F2               	movwf	??_GetCycle
  6018  0DB6  3001               	movlw	1
  6019  0DB7  1003               	clrc
  6020  0DB8                     L20:	
  6021  0DB8  0DF2               	rlf	??_GetCycle,f
  6022  0DB9  3EFF               	addlw	-1
  6023  0DBA  1003               	clrc
  6024  0DBB  1D03               	skipz
  6025  0DBC  2DB8               	goto	L20
  6026  0DBD  0D72               	rlf	??_GetCycle,w
  6027  0DBE  3E20               	addlw	32
  6028  0DBF  0084               	movwf	4
  6029  0DC0  1383               	bcf	3,7	;select IRP bank0
  6030  0DC1  0800               	movf	0,w
  6031  0DC2  00F3               	movwf	??_GetCycle+1
  6032  0DC3  0A84               	incf	4,f
  6033  0DC4  0800               	movf	0,w
  6034  0DC5  00F4               	movwf	??_GetCycle+2
  6035  0DC6  0A84               	incf	4,f
  6036  0DC7  0800               	movf	0,w
  6037  0DC8  00F5               	movwf	??_GetCycle+3
  6038  0DC9  0A84               	incf	4,f
  6039  0DCA  0800               	movf	0,w
  6040  0DCB  00F6               	movwf	??_GetCycle+4
  6041  0DCC  087D               	movf	GetCycle@i,w
  6042  0DCD  00F7               	movwf	??_GetCycle+5
  6043  0DCE  3001               	movlw	1
  6044  0DCF  1003               	clrc
  6045  0DD0                     L21:	
  6046  0DD0  0DF7               	rlf	??_GetCycle+5,f
  6047  0DD1  3EFF               	addlw	-1
  6048  0DD2  1003               	clrc
  6049  0DD3  1D03               	skipz
  6050  0DD4  2DD0               	goto	L21
  6051  0DD5  0D77               	rlf	??_GetCycle+5,w
  6052  0DD6  3E20               	addlw	32
  6053  0DD7  0084               	movwf	4
  6054  0DD8  0800               	movf	0,w
  6055  0DD9  00F8               	movwf	??_GetCycle+6
  6056  0DDA  0A84               	incf	4,f
  6057  0DDB  0800               	movf	0,w
  6058  0DDC  00F9               	movwf	??_GetCycle+7
  6059  0DDD  0A84               	incf	4,f
  6060  0DDE  0800               	movf	0,w
  6061  0DDF  00FA               	movwf	??_GetCycle+8
  6062  0DE0  0A84               	incf	4,f
  6063  0DE1  0800               	movf	0,w
  6064  0DE2  00FB               	movwf	??_GetCycle+9
  6065  0DE3  3A80               	xorlw	128
  6066  0DE4  00FF               	movwf	127
  6067  0DE5  0876               	movf	??_GetCycle+4,w
  6068  0DE6  3A80               	xorlw	128
  6069  0DE7  027F               	subwf	127,w
  6070  0DE8  1D03               	skipz
  6071  0DE9  2DF4               	goto	u2553
  6072  0DEA  0875               	movf	??_GetCycle+3,w
  6073  0DEB  027A               	subwf	??_GetCycle+8,w
  6074  0DEC  1D03               	skipz
  6075  0DED  2DF4               	goto	u2553
  6076  0DEE  0874               	movf	??_GetCycle+2,w
  6077  0DEF  0279               	subwf	??_GetCycle+7,w
  6078  0DF0  1D03               	skipz
  6079  0DF1  2DF4               	goto	u2553
  6080  0DF2  0873               	movf	??_GetCycle+1,w
  6081  0DF3  0278               	subwf	??_GetCycle+6,w
  6082  0DF4                     u2553:	
  6083                           
  6084                           ;gsk_algo_funcs.c: 32: if ((S>C[PrevCycle]) && (S<=C[i])) {
  6085  0DF4  087C               	movf	GetCycle@PrevCycle,w
  6086  0DF5  00F2               	movwf	??_GetCycle
  6087  0DF6  3001               	movlw	1
  6088  0DF7  1C03               	skipc
  6089  0DF8  2E31               	goto	L24
  6090  0DF9  1003               	clrc
  6091  0DFA                     L22:	
  6092  0DFA  0DF2               	rlf	??_GetCycle,f
  6093  0DFB  3EFF               	addlw	-1
  6094  0DFC  1003               	clrc
  6095  0DFD  1D03               	skipz
  6096  0DFE  2DFA               	goto	L22
  6097  0DFF  2683  120A  158A   	fcall	PL4	;call to abstracted procedure
  6098  0E02  2694  120A  158A   	fcall	PL40	;call to abstracted procedure
  6099  0E05  1D03               	skipz
  6100  0E06  2E11               	goto	u2573
  6101  0E07  086C               	movf	_S+2,w	;volatile
  6102  0E08  0275               	subwf	??_GetCycle+3,w
  6103  0E09  1D03               	skipz
  6104  0E0A  2E11               	goto	u2573
  6105  0E0B  086B               	movf	_S+1,w	;volatile
  6106  0E0C  0274               	subwf	??_GetCycle+2,w
  6107  0E0D  1D03               	skipz
  6108  0E0E  2E11               	goto	u2573
  6109  0E0F  086A               	movf	_S,w	;volatile
  6110  0E10  0273               	subwf	??_GetCycle+1,w
  6111  0E11                     u2573:	
  6112  0E11  1803               	skipnc
  6113  0E12  2E6E               	goto	l2404
  6114  0E13  087D               	movf	GetCycle@i,w
  6115  0E14  00F2               	movwf	??_GetCycle
  6116  0E15  3001               	movlw	1
  6117  0E16  1003               	clrc
  6118  0E17                     L23:	
  6119  0E17  0DF2               	rlf	??_GetCycle,f
  6120  0E18  3EFF               	addlw	-1
  6121  0E19  1003               	clrc
  6122  0E1A  1D03               	skipz
  6123  0E1B  2E17               	goto	L23
  6124  0E1C  2683  120A  158A   	fcall	PL4	;call to abstracted procedure
  6125  0E1F  086D               	movf	_S+3,w	;volatile
  6126  0E20  3A80               	xorlw	128
  6127  0E21  027F               	subwf	127,w
  6128  0E22  1D03               	skipz
  6129  0E23  2E2E               	goto	u2593
  6130  0E24  086C               	movf	_S+2,w	;volatile
  6131  0E25  0275               	subwf	??_GetCycle+3,w
  6132  0E26  1D03               	skipz
  6133  0E27  2E2E               	goto	u2593
  6134  0E28  086B               	movf	_S+1,w	;volatile
  6135  0E29  0274               	subwf	??_GetCycle+2,w
  6136  0E2A  1D03               	skipz
  6137  0E2B  2E2E               	goto	u2593
  6138  0E2C  086A               	movf	_S,w	;volatile
  6139  0E2D  0273               	subwf	??_GetCycle+1,w
  6140  0E2E                     u2593:	
  6141  0E2E  1803               	btfsc	3,0
  6142  0E2F  2E6C               	goto	l2394
  6143  0E30  2E6E               	goto	l2404
  6144  0E31                     L24:	
  6145                           ;gsk_algo_funcs.c: 36: if (((S>C[PrevCycle]) && (S<=86400)) || (S<=86400)) {
  6146                           
  6147  0E31  0DF2               	rlf	??_GetCycle,f
  6148  0E32  3EFF               	addlw	-1
  6149  0E33  1003               	clrc
  6150  0E34  1D03               	skipz
  6151  0E35  2E31               	goto	L24
  6152  0E36  2683  120A  158A   	fcall	PL4	;call to abstracted procedure
  6153  0E39  2694  120A  158A   	fcall	PL40	;call to abstracted procedure
  6154  0E3C  1D03               	skipz
  6155  0E3D  2E48               	goto	u2613
  6156  0E3E  086C               	movf	_S+2,w	;volatile
  6157  0E3F  0275               	subwf	??_GetCycle+3,w
  6158  0E40  1D03               	skipz
  6159  0E41  2E48               	goto	u2613
  6160  0E42  086B               	movf	_S+1,w	;volatile
  6161  0E43  0274               	subwf	??_GetCycle+2,w
  6162  0E44  1D03               	skipz
  6163  0E45  2E48               	goto	u2613
  6164  0E46  086A               	movf	_S,w	;volatile
  6165  0E47  0273               	subwf	??_GetCycle+1,w
  6166  0E48                     u2613:	
  6167  0E48  1803               	skipnc
  6168  0E49  2E5B               	goto	l2400
  6169  0E4A  1BED               	btfsc	_S+3,7	;volatile
  6170  0E4B  2E6C               	goto	l2394
  6171  0E4C  086D               	movf	_S+3,w	;volatile
  6172  0E4D  1D03               	btfss	3,2
  6173  0E4E  2E5B               	goto	l2400
  6174  0E4F  3001               	movlw	1
  6175  0E50  026C               	subwf	_S+2,w	;volatile
  6176  0E51  1D03               	skipz
  6177  0E52  2E59               	goto	u2623
  6178  0E53  3051               	movlw	81
  6179  0E54  026B               	subwf	_S+1,w	;volatile
  6180  0E55  1D03               	skipz
  6181  0E56  2E59               	goto	u2623
  6182  0E57  3081               	movlw	129
  6183  0E58  026A               	subwf	_S,w	;volatile
  6184  0E59                     u2623:	
  6185  0E59  1C03               	btfss	3,0
  6186  0E5A  2E6C               	goto	l2394
  6187  0E5B                     l2400:	
  6188  0E5B  1BED               	btfsc	_S+3,7	;volatile
  6189  0E5C  2E6C               	goto	l2394
  6190  0E5D  086D               	movf	_S+3,w	;volatile
  6191  0E5E  1D03               	btfss	3,2
  6192  0E5F  2E6E               	goto	l2404
  6193  0E60  3001               	movlw	1
  6194  0E61  026C               	subwf	_S+2,w	;volatile
  6195  0E62  1D03               	skipz
  6196  0E63  2E6A               	goto	u2633
  6197  0E64  3051               	movlw	81
  6198  0E65  026B               	subwf	_S+1,w	;volatile
  6199  0E66  1D03               	skipz
  6200  0E67  2E6A               	goto	u2633
  6201  0E68  3081               	movlw	129
  6202  0E69  026A               	subwf	_S,w	;volatile
  6203  0E6A                     u2633:	
  6204  0E6A  1803               	btfsc	3,0
  6205  0E6B  2E6E               	goto	l2404
  6206  0E6C                     l2394:	
  6207                           
  6208                           ;gsk_algo_funcs.c: 33: CYCLE_TYPE = i;
  6209  0E6C  087D               	movf	GetCycle@i,w
  6210  0E6D  00EE               	movwf	_CYCLE_TYPE	;volatile
  6211  0E6E                     l2404:	
  6212  0E6E  3003               	movlw	3
  6213  0E6F  0AFD               	incf	GetCycle@i,f
  6214  0E70  027D               	subwf	GetCycle@i,w
  6215  0E71  1C03               	skipc
  6216  0E72  2DB0               	goto	l2386
  6217                           
  6218                           ;gsk_algo_funcs.c: 38: }
  6219                           ;gsk_algo_funcs.c: 39: }
  6220                           ;gsk_algo_funcs.c: 40: }
  6221                           ;gsk_algo_funcs.c: 41: PREV_CYCLE_TYPE = GetPrevCycle(CYCLE_TYPE);
  6222  0E73  086E               	movf	_CYCLE_TYPE,w	;volatile
  6223  0E74  2679               	fcall	_GetPrevCycle
  6224  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  6225  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  6226  0E77  00EF               	movwf	_PREV_CYCLE_TYPE	;volatile
  6227  0E78  0008               	return
  6228  0E79                     __end_of_GetCycle:	
  6229  0E79                     __ptext33:	
  6230 ;; *************** function _GetPrevCycle *****************
  6231 ;; Defined at:
  6232 ;;		line 18 in file "libs/gsk_algo_funcs.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  cycle           1    wreg     unsigned char 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  cycle           1    1[COMMON] unsigned char 
  6237 ;;  PrevCycle       1    0[COMMON] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      unsigned char 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMMON   BANK0   BANK1  BANK3h   BANK2
  6247 ;;      Params:         0       0       0       0       0
  6248 ;;      Locals:         2       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0
  6250 ;;      Totals:         2       0       0       0       0
  6251 ;;Total ram usage:        2 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_GetCumulativePeriodsForStates
  6257 ;;		_GetCycle
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           
  6262                           ;psect for function _GetPrevCycle
  6263  0E79                     _GetPrevCycle:	
  6264                           
  6265                           ;incstack = 0
  6266                           ; Regs used in _GetPrevCycle: [wreg+status,2+status,0]
  6267                           ;GetPrevCycle@cycle stored from wreg
  6268  0E79  00F1               	movwf	GetPrevCycle@cycle
  6269                           
  6270                           ;gsk_algo_funcs.c: 19: UINT8 PrevCycle;
  6271                           ;gsk_algo_funcs.c: 20: if (cycle > 0)
  6272  0E7A  0871               	movf	GetPrevCycle@cycle,w
  6273  0E7B  1903               	btfsc	3,2
  6274  0E7C  2E80               	goto	l2004
  6275                           
  6276                           ;gsk_algo_funcs.c: 21: PrevCycle = cycle - 1;
  6277  0E7D  0871               	movf	GetPrevCycle@cycle,w
  6278  0E7E  3EFF               	addlw	255
  6279  0E7F  2E81               	goto	L27
  6280  0E80                     l2004:	
  6281                           
  6282                           ;gsk_algo_funcs.c: 22: else
  6283                           ;gsk_algo_funcs.c: 23: PrevCycle = 3 - 1;
  6284  0E80  3002               	movlw	2
  6285  0E81                     L27:	
  6286  0E81  00F0               	movwf	GetPrevCycle@PrevCycle
  6287                           
  6288                           ;gsk_algo_funcs.c: 24: return PrevCycle;
  6289  0E82  0008               	return
  6290  0E83                     __end_of_GetPrevCycle:	
  6291  007E                     btemp	set	126	;btemp
  6292  007E                     wtemp	set	126
  6293  007E                     wtemp0	set	126
  6294  0080                     wtemp1	set	128
  6295  0082                     wtemp2	set	130
  6296  0084                     wtemp3	set	132
  6297  0086                     wtemp4	set	134
  6298  0088                     wtemp5	set	136
  6299  007F                     wtemp6	set	127
  6300  007E                     ttemp	set	126
  6301  007E                     ttemp0	set	126
  6302  0081                     ttemp1	set	129
  6303  0084                     ttemp2	set	132
  6304  0087                     ttemp3	set	135
  6305  007F                     ttemp4	set	127
  6306  007E                     ltemp	set	126
  6307  007E                     ltemp0	set	126
  6308  0082                     ltemp1	set	130
  6309  0086                     ltemp2	set	134
  6310  0080                     ltemp3	set	128
  6311  0E83                     PL4:	
  6312  0E83  0D72               	rlf	??_GetCycle,w
  6313  0E84  3E20               	addlw	32
  6314  0E85  0084               	movwf	4
  6315  0E86  0800               	movf	0,w
  6316  0E87  00F3               	movwf	??_GetCycle+1
  6317  0E88  0A84               	incf	4,f
  6318  0E89  0800               	movf	0,w
  6319  0E8A  00F4               	movwf	??_GetCycle+2
  6320  0E8B  0A84               	incf	4,f
  6321  0E8C  0800               	movf	0,w
  6322  0E8D  00F5               	movwf	??_GetCycle+3
  6323  0E8E  0A84               	incf	4,f
  6324  0E8F  0800               	movf	0,w
  6325  0E90  00F6               	movwf	??_GetCycle+4
  6326  0E91  3A80               	xorlw	128
  6327  0E92  00FF               	movwf	127
  6328  0E93  0008               	return
  6329  0E94                     __end_ofPL4:	
  6330  0E94                     PL40:	
  6331  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  6332  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  6333  0E96  086D               	movf	_S+3,w	;volatile
  6334  0E97  3A80               	xorlw	128
  6335  0E98  027F               	subwf	127,w
  6336  0E99  0008               	return
  6337  0E9A                     __end_ofPL40:	


Data Sizes:
    Strings     20
    Constant    0
    Data        223
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            68     62      68
    BANK1            20      0      11
    BANK3h            6      0       0
    BANK2            36      0       0

Pointer List with Targets:

    Lcd_Text@buffer	PTR unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_GetCycle
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _WriteLongInt->___aldiv
    ___bmul->___aldiv
    _ReadRTCAsSec->___lmul
    _I2C_ReadAtAddress->_I2C_Master_Read
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_Init->_Lcd_Command
    _Lcd_Init->_Lcd_Delay5500us
    _Lcd_WriteChar->___aldiv
    _I2C_Master_Init->___lldiv
    _GetCycle->_GetPrevCycle
    _GetCumulativePeriodsForStates->_GetPrevCycle

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftmul
    _WriteLongInt->_Lcd_WriteChar
    _ReadVars->___bmul
    _Lcd_Disp_Bin->_Lcd_WriteChar
    _Lcd_WriteChar->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3h

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   16856
                                             28 BANK0     34    34      0
      _GetCumulativePeriodsForStates
                           _GetCycle
                    _I2C_Master_Init
                       _Lcd_Disp_Bin
                           _Lcd_Init
                           _Lcd_Text
                       _ReadRTCAsSec
                           _ReadVars
                          _SwitchGPS
                       _WriteLongInt
                            ___almod
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             13     9      4     385
                                             15 BANK0     13     9      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2143
                                              0 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1773
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8     402
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (1) _WriteLongInt                                        10     3      7    3769
                                              7 BANK0     10     3      7
                      _Lcd_WriteChar
                            ___aldiv
                             ___bmul
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     592
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SwitchGPS                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadVars                                            17    17      0     896
                                              3 BANK0     17    17      0
                             ___bmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     384
                                              0 BANK0      3     2      1
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ReadRTCAsSec                                        18    14      4    2097
                                              0 BANK0     18    14      4
                  _I2C_ReadAtAddress
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     596
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     464
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadAtAddress                                    3     2      1     829
                                              4 COMMON     3     2      1
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     323
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2      98
                                              0 COMMON     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             4     2      2     745
                                              2 COMMON     4     2      2
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     314
                                              2 COMMON     1     1      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Delay5500us                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Disp_Bin                                         6     3      3    1748
                                              7 BANK0      6     3      3
                      _Lcd_WriteChar
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     2      2     934
                                              3 BANK0      4     2      2
                         _Lcd_CharCP
                        _Lcd_Command
                            ___aldiv (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          2     2      0     176
                                              0 COMMON     2     2      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_CharCP                                           2     2      0     176
                                              0 COMMON     2     2      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     343
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     268
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _GetCycle                                            12    12      0     291
                                              2 COMMON    12    12      0
                       _GetPrevCycle
 ---------------------------------------------------------------------------------
 (1) _GetCumulativePeriodsForStates                        6     6      0     293
                                              2 COMMON     6     6      0
                       _GetPrevCycle
 ---------------------------------------------------------------------------------
 (2) _GetPrevCycle                                         2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetCumulativePeriodsForStates
     _GetPrevCycle
   _GetCycle
     _GetPrevCycle
   _I2C_Master_Init
     ___lldiv
   _Lcd_Disp_Bin
     _Lcd_WriteChar
       _Lcd_CharCP
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5us
       ___aldiv (ARG)
       ___bmul (ARG)
         ___aldiv (ARG)
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5us
   _ReadRTCAsSec
     _I2C_ReadAtAddress
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___lmul
     ___wmul
   _ReadVars
     ___bmul
       ___aldiv (ARG)
     _eeprom_read
   _SwitchGPS
   _WriteLongInt
     _Lcd_WriteChar
       _Lcd_CharCP
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5us
       ___aldiv (ARG)
       ___bmul (ARG)
         ___aldiv (ARG)
     ___aldiv
     ___bmul
       ___aldiv (ARG)
     ___lmul
   ___almod
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BITBANK3h            6      0       0       8        0.0%
BANK3h               6      0       0       9        0.0%
BANK2               24      0       0      11        0.0%
BITBANK2            24      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               14      0       B       7       55.0%
BITBANK1            14      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               44     3E      44       5      100.0%
BITBANK0            44      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5D      12        0.0%
ABS                  0      0      5D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0      DF       0       87.1%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Nov 06 22:00:46 2016

                                     _C 0020                                       _S 006A  
                                     pc 0002                          ___bmul@product 002D  
                           __CFG_CP$OFF 0000                                      PL2 0385  
                                    PL4 0E83                                      PL6 03B0  
                                    PL8 03CC                                      l63 05F5  
                                    _RD 0C60                                      _WR 0C61  
                                    fsr 0004                     ___wmul@multiplicand 0072  
                                   PL10 03D9                                     PL20 03F5  
                                   PL12 03E2                                     PL30 07CA  
                                   PL22 0FF7                                     PL14 03EC  
                                   PL40 0E94                                     PL32 07D3  
                                   PL24 07B8                                     PL16 07AC  
                                   PL34 07DA                                     PL26 03FD  
                                   PL18 0D60                                     PL36 07E1  
                                   PL28 07C1                                     PL38 0C26  
                                   l308 0FB9                                     l524 078A  
                                   l621 0FC8                                     l665 04A7  
                                   l678 0C3D                                     l766 0D26  
                                   l778 0D4E                                     _RA0 0028  
                                   _RA1 0029                                     _RA2 002A  
                                   _RA3 002B                                     _RA4 002C  
                                   _RC1 0039                                     _RA5 002D  
                                   _C_D 00E6                                     _PEN 048A  
                          __CFG_CPD$OFF 0000                                     _SEN 0488  
                          main@SecError 0063                                     fsr0 0004  
                                   indf 0000                            __CFG_IESO$ON 0000  
                          __CFG_FOSC$HS 0000                       GetCycle@PrevCycle 007C  
                   __end_of_Lcd_Command 06C9                       GetPrevCycle@cycle 0071  
                         ?_ReadRTCAsSec 002C                            __CFG_LVP$OFF 0000  
                      main@DiffInSecond 0061                                    l2010 0F52  
                                  l2004 0E80                                    l2014 0F5A  
                                  l2110 0503                                    l2106 04F5  
                                  l2124 0078                                    l2028 0FDE  
                                  l2060 0D3E                                    l2038 07A0  
                                  l2054 0D2A                                    l2400 0E5B  
                                  l2136 00A3                                    l2232 050E  
                                  l2304 074B                                    l2064 0D4C  
                                  l2056 0D2F                                    l2250 052B  
                                  l2234 0511                                    l2242 051B  
                                  l2306 074C                                    l2066 0D43  
                                  l2058 0D34                                    l2404 0E6E  
                                  l2236 0514                                    l2244 0529  
                                  l2084 04B6                                    l2420 0C4A  
                                  l2238 0517                                    l2318 0760  
                                  l2094 04CA                                    l2510 0BD5  
                                  l2280 0017                                    l2264 0430  
                                  l2272 0438                                    l2440 0C8D  
                                  l2512 0BDA                                    l2362 0D6C  
                                  l2602 017D                                    l2284 002F  
                                  l2292 06D6                                    l2428 0C5A  
                                  l2436 0C7F                                    l2452 0CA0  
                                  l2460 0CC2                                    l2540 0C0F  
                                  l2532 0C01                                    l2374 0D82  
                                  l1910 06B2                                    l2710 030C  
                                  l2630 022B                                    l2376 0DA9  
                                  l2368 0D79                                    l1912 06BB  
                                  l2464 0CD3                                    l2544 0C1D  
                                  l2528 0BF9                                    l2704 02FA  
                                  l2640 027A                                    l2608 0191  
                                  l2394 0E6C                                    l2386 0DB0  
                                  l1922 058A                                    l1906 0699  
                                  l2482 0CE4                                    l2538 0C05  
                                  l2714 0315                                    l2642 027C  
                                  l2570 00EE                                    l1932 05A5  
                                  l1908 06A5                                    l2740 037F  
                                  l1934 05B1                                    l2494 0CF9  
                                  l2486 0CED                                    l2718 031E  
                                  l2742 01CA                                    l2590 0129  
                                  l1936 05BE                                    l2744 0381  
                                  l2736 0361                                    l2680 02D8  
                                  l2664 02AB                                    l2648 0285  
                                  l2728 0328                                    l2584 0121  
                                  l1938 05C7                                    l2498 0D02  
                                  l2738 037B                                    l2674 02CB  
                                  l2658 029E                                    l2746 01C0  
                                  l2594 012E                                    l2578 0114  
                                  l1980 047A                                    l2596 0134  
                                  l1886 06C9                                    l1982 047D  
                                  l1966 0FB3                                    l2694 02ED  
                                  l1896 067E                                    l1976 0474  
                                  l1978 0477                                    l1986 0481  
                                  l1988 048F                                    STR_1 0812  
                                  STR_2 0806                                    _EE_C 00D2  
                                  u2010 05C4                                    u2030 0FB0  
                                  u3015 01B5                                    u2315 008B  
                                  u1700 066A                                    u1640 0648  
                                  u3217 0630                                    u2265 04DD  
                                  u1810 06B8                                    u1730 067B  
                                  u1714 066D                                    u3227 0680  
                                  u1635 063D                                    u1900 0576  
                                  u2613 0E48                                    u3237 06BD  
                                  u1725 0670                                    u1750 0696  
                                  u1670 0659                                    u1654 064B  
                                  u2623 0E59                                    u3247 058C  
                                  u3183 0379                                    u3175 035B  
                                  u1840 0554                                    u2384 001D  
                                  u2633 0E6A                                    u2553 0DF4  
                                  u3257 05C9                                    u1665 064E  
                                  u2385 001B                                    u1930 0587  
                                  u1914 0579                                    u1770 06A2  
                                  u2650 0BC7                                    u1835 0549  
                                  u2715 0C68                                    u3195 01DA  
                                  u1684 065C                                    u2573 0E11  
                                  u1925 057C                                    u1950 05A2  
                                  u1870 0565                                    u1854 0557  
                                  u1790 06AF                                    u2495 0045  
                                  u1695 065F                                    u2593 0E2E  
                                  u1865 055A                                    u1970 05AE  
                 __size_of_WriteLongInt 006C                                    u1884 0568  
                                  u2845 0BDE                                    u1990 05BB  
                                  u1895 056B                                    u2963 0174  
                                  _RCEN 048B                       ??_Lcd_Delay5500us 0070  
                          __CFG_WRT$OFF 0000                           __CFG_FCMEN$ON 0000  
                                  _main 00AC                            ___ftpack@arg 0070  
                          ___ftpack@exp 0073                    __end_of_Lcd_Delay5us 06CD  
                                  btemp 007E                                    ltemp 007E  
                                  start 0000                                    ttemp 007E  
                                  wtemp 007E                        _ReadRTCAsSec$889 0037  
                  __end_of_Lcd_Disp_Bin 0037                       ___bmul@multiplier 002E  
                         __CFG_MCLRE$ON 0000                            ___ftmul@cntr 0039  
                          ___ftmul@sign 003A                              _Lcd_CharCP 0541  
                          ___fttol@exp1 0047                            ___fttol@lval 0043  
                      ?_I2C_Master_Init 002C                        ?_I2C_Master_Read 0070  
                      ?_I2C_Master_Wait 0070                        ?_I2C_Master_Stop 0070  
                       __end_of___aldiv 050C                         __end_of___almod 0C96  
                                 ?_main 0070                                   _ACKEN 048C  
                                 _ACKDT 048D                                   _EEADR 010D  
                         __CFG_WDTE$OFF 0000                                   _ANSEL 0188  
                       __end_of___lldiv 00AC                    __end_of_GetPrevCycle 0E83  
                       __end_of___ftmul 0D1E                         __end_of___fttol 0C26  
                                 _PORTB 0006                                   _PORTC 0007  
                          _WriteLongInt 0406                     ___lmul@multiplicand 0074  
                        ??_ReadRTCAsSec 0030                           ___awtoft@sign 007B  
                         ___ftpack@sign 0074                                   main@i 0067  
                                 main@j 0062                                   main@k 0058  
                                 main@l 0068                          __CFG_BOREN$OFF 0000  
                                 pclath 000A                                   ltemp0 007E  
                                 ltemp1 0082                                   ltemp2 0086  
                                 ltemp3 0080                                   ttemp0 007E  
                                 ttemp1 0081                                   ttemp2 0084  
                                 ttemp3 0087                                   ttemp4 007F  
                                 status 0003                                   wtemp0 007E  
                                 wtemp1 0080                                   wtemp2 0082  
                                 wtemp3 0084                                   wtemp4 0086  
                                 wtemp5 0088                                   wtemp6 007F  
                      __end_of_GetCycle 0E79                        __end_of_Lcd_Init 062C  
                      __end_of_Lcd_Text 0541                         __initialization 07E8  
                          __end_of_main 0385                        __end_of_ReadVars 0789  
                           _Lcd_Command 0635           main@StateAudioSplOnOffCounter 005F  
                       ReadRTCAsSec@Out 0039                                  ??_main 0048  
                         ___fttol@sign1 0042                       ?_I2C_Master_Start 0070  
                     ?_I2C_Master_Write 0070                      ??_I2C_Master_Start 0070  
                    ??_I2C_Master_Write 0072                                  _EEDATA 010C  
                                _EECON1 018C                        __end_of___awtoft 0CB1  
                      __end_of___ftpack 0D60                                  _ANSELH 0189  
                                _EE_C_D 00DE                       _I2C_ReadAtAddress 0F69  
                      WriteLongInt@Sign 0039                          Lcd_Text@buffer 0073  
                    ?_I2C_ReadAtAddress 0074                                  _SSPADD 0093  
                                _TRISC3 043B                                  _TRISC4 043C  
                                _SSPCON 0014                                  _SSPBUF 0013  
                      WriteLongInt@size 0038                          __CFG_PWRTE$OFF 0000  
                  __size_of_eeprom_read 0015                     ??_I2C_ReadAtAddress 0075  
                                ___bmul 079E                             ?_Lcd_CharCP 0070  
                                ___lmul 0FC4                               ??___aldiv 0078  
                             ??___almod 0078                                  ___wmul 0F50  
                             ??___lldiv 0078                               ??___ftmul 0032  
                             ??___fttol 003F                   __end_of_Lcd_WriteChar 0497  
                 ___ftmul@f3_as_product 0036                            __pdataEEDATA 0000  
             __end_of_I2C_ReadAtAddress 0F92                   __size_of_Lcd_Delay5us 0004  
                    Lcd_Command@command 0071                      __size_of_SwitchGPS 000B  
                 __size_of_Lcd_Disp_Bin 0022                 __end_of__initialization 07FC  
                 main@StateSecRemaining 005A                         eeprom_read@addr 0070  
                            ___awtoft@c 0078                     ___bmul@multiplicand 002C  
                            ___ftmul@f1 002C                              ___ftmul@f2 002F  
                            ___fttol@f1 003B                          __pcstackCOMMON 0070  
                  __end_of_ReadRTCAsSec 0F50                            __pidataBANK0 0000  
                 __size_of_GetPrevCycle 000A                              __end_ofPL2 03B0  
                            __end_ofPL4 0E94                              __end_ofPL6 03CC  
                            __end_ofPL8 03D9                            _Lcd_Delay5us 06C9  
                       _Lcd_Delay5500us 062C                            _Lcd_Disp_Bin 0015  
                        Lcd_WriteChar@c 0030                               ?_GetCycle 0070  
                        Lcd_WriteChar@x 002F                          Lcd_WriteChar@y 0031  
                            SwitchGPS@a 0070                               ?_Lcd_Init 0070  
                             ?_Lcd_Text 0072                     __size_of_Lcd_CharCP 0094  
                            __pbssBANK0 006A                              __pbssBANK1 00DC  
                             ?_ReadVars 0070                 I2C_ReadAtAddress@IntAdd 0074  
                          _GetPrevCycle 0E79                              __pmaintext 00AC  
                               ?___bmul 002C                                 ?___lmul 0070  
                               ?___wmul 0070                          ___lmul@product 0078  
                             ?___awtoft 0078                               ?___ftpack 0070  
                     __end_of_SwitchGPS 0BCB        main@StateAudioNormalOnOffCounter 005D  
                               _CONFIG0 00E5                              ??_GetCycle 0072  
                            ??_Lcd_Init 0072              __size_of_I2C_ReadAtAddress 0029  
                            ??_Lcd_Text 0074                                 _STATE_1 00A0  
                               _STATE_2 0110                                 _STATE_3 0190  
                               _SSPCON2 0091                                 _SSPSTAT 0094  
                            __stringtab 0800                         _EE_STATE_BREAKS 00DB  
                            ??_ReadVars 002F                  ReadRTCAsSec@TempVar000 003D  
                               ___aldiv 0497                         __size_of___bmul 000E  
                               ___almod 0C2D                       Lcd_WriteChar@data 0032  
                       __size_of___lmul 0033                                 ___lldiv 0064  
                       __size_of___wmul 0019                                 ___ftmul 0CB1  
                               ___fttol 0BCB                 __end_of_Lcd_Delay5500us 0635  
                            ??___awtoft 007B                              ??___ftpack 0075  
                          ?_Lcd_Command 0070                                 __ptext1 0BCB  
                               __ptext2 0CB1                                 __ptext3 0C96  
                               __ptext4 0D1E                                 __ptext5 0C2D  
                               __ptext6 0406                                 __ptext7 0497  
                               __ptext8 0BC0                                 __ptext9 06CD  
                             _EE_STATES 0000                        ___aldiv@dividend 0074  
              __size_of_I2C_Master_Init 002D                __size_of_I2C_Master_Read 001F  
              __size_of_I2C_Master_Wait 0008                __size_of_I2C_Master_Stop 0003  
                  end_of_initialization 07FC                   GetPrevCycle@PrevCycle 0070  
       ??_GetCumulativePeriodsForStates 0072                   __size_of_ReadRTCAsSec 00B6  
                  Lcd_Disp_Bin@DispChar 0035               __size_of_I2C_Master_Start 0003  
             __size_of_I2C_Master_Write 0005                         ___lldiv@divisor 0070  
                             GetCycle@i 007D                         ___lldiv@counter 007C  
                         Lcd_Disp_Bin@i 0038                           Lcd_Disp_Bin@x 0033  
                         Lcd_Disp_Bin@y 0037                            ??_Lcd_CharCP 0070  
                      ___aldiv@quotient 007A                        I2C_Master_Init@c 002C  
                      I2C_Master_Read@a 0070                               Lcd_Text@x 0072  
                             Lcd_Text@y 0074                               _TRISAbits 0085  
                          _ReadRTCAsSec 0E9A                      __end_of_Lcd_CharCP 05D5  
                         ??_eeprom_read 0070                               ReadVars@i 003F  
                             ReadVars@j 003E                             ___ftmul@exp 0035  
                        __end_of___bmul 07AC                          __end_of___lmul 0FF7  
                      ?_Lcd_Delay5500us 0070                           __pidataEEDATA 0000  
                        __end_of___wmul 0F69                _STATE_CUMULATIVE_PERIODS 00DC  
                           __end_ofPL10 03E2                             __end_ofPL20 03FD  
                           __end_ofPL12 03EC                             __end_ofPL30 07D3  
                           __end_ofPL22 1000                             __end_ofPL14 03F5  
                           __end_ofPL40 0E9A                             __end_ofPL32 07DA  
                           __end_ofPL24 07C1                             __end_ofPL16 07B8  
                           __end_ofPL34 07E1                             __end_ofPL26 0406  
                           __end_ofPL18 0D6B                             __end_ofPL36 07E8  
                           __end_ofPL28 07CA                             __end_ofPL38 0C2D  
                   start_initialization 07E8                       __size_of_GetCycle 00CA  
                     __size_of_Lcd_Init 0057                       __size_of_Lcd_Text 0035  
                     ??_I2C_Master_Init 0030                       ??_I2C_Master_Read 0072  
                     ??_I2C_Master_Wait 0070                       ??_I2C_Master_Stop 0070  
                       WriteLongInt@POS 003B                         WriteLongInt@Val 0034  
                __size_of_Lcd_WriteChar 0025                       __size_of_ReadVars 00BC  
 __end_of_GetCumulativePeriodsForStates 0DAF  __size_of_GetCumulativePeriodsForStates 0044  
         _GetCumulativePeriodsForStates 0D6B                                ??___bmul 007E  
                              ??___lmul 0078                                ??___wmul 0074  
                   __end_of_eeprom_read 079E                              init_fetch0 0004  
                           __pdataBANK0 006F                       __size_of___awtoft 001B  
                     __size_of___ftpack 0042                             __pbssEEDATA 00DE  
                         ?_WriteLongInt 0033                    __size_of_Lcd_Command 0094  
                             _SwitchGPS 0BC0                               ___latbits 0002  
               main@GPS_On_Time_Counter 0052                           __pcstackBANK0 002C  
                         WriteLongInt@x 0033                           WriteLongInt@y 003C  
                main@State2OnOffCounter 005B                  I2C_ReadAtAddress@DevID 0076  
                      _I2C_Master_Start 0F97                        _I2C_Master_Write 0F92  
                              ?___aldiv 0070                                ?___almod 0070  
                       _PREV_CYCLE_TYPE 006F                                ?___lldiv 0070  
                              ?___ftmul 002C                                ?___fttol 003B  
                      ___almod@dividend 0074                               __pstrings 0800  
                        ??_WriteLongInt 003A                           _Lcd_WriteChar 0472  
                            ?_SwitchGPS 0070                         ___aldiv@divisor 0070  
                       ___aldiv@counter 0078                          ___wmul@product 0074  
                           _eeprom_read 0789                      main@OutForThePorts 0065  
        ?_GetCumulativePeriodsForStates 0070                            Lcd_Init@data 0072  
                           __stringbase 0805                          ?_Lcd_WriteChar 002F  
                     ___wmul@multiplier 0070                                _GetCycle 0DAF  
                              _Lcd_Init 05D5                                _Lcd_Text 050C  
                   I2C_Master_Read@temp 0072                       ___lmul@multiplier 0070  
                              _ReadVars 06CD                            Lcd_Text@data 0075  
                         _STATE_PERIODS 01CC            main@TimeSinceTheStartOfCycle 0054  
                      __size_of___aldiv 0075                        __size_of___almod 0069  
                      __size_of___lldiv 0048                        __size_of___ftmul 006D  
                      __size_of___fttol 005B                                ___awtoft 0C96  
                              ___ftpack 0D1E                      __end_of__stringtab 0806  
                         ?_Lcd_Delay5us 0070                         _I2C_Master_Init 0037  
                       _I2C_Master_Read 0F9A                         _I2C_Master_Wait 0FB9  
                           ??_SwitchGPS 0070                         _I2C_Master_Stop 0FC1  
                         ?_Lcd_Disp_Bin 0033                   I2C_ReadAtAddress@data 0075  
                              __ptext10 0789                                __ptext11 079E  
                              __ptext20 0FB9                                __ptext12 0E9A  
                              __ptext21 050C                                __ptext13 0F50  
                              __ptext30 0064                                __ptext22 05D5  
                              __ptext14 0FC4                                __ptext31 0DAF  
                              __ptext23 062C                                __ptext15 0F69  
                              __ptext32 0D6B                                __ptext24 0015  
                              __ptext16 0F92                                __ptext33 0E79  
                              __ptext25 0472                                __ptext17 0FC1  
                              __ptext26 0635                                __ptext18 0F97  
                              __ptext27 0541                                __ptext19 0F9A  
                              __ptext28 06C9                                __ptext29 0037  
                     __CFG_BOR4V$BOR21V 0000                         ___almod@divisor 0070  
                       ___almod@counter 0078                             Lcd_CharCP@c 0071  
                         __size_of_main 02D9                           ?_GetPrevCycle 0070  
                            _CYCLE_TYPE 006E                    __end_of_WriteLongInt 0472  
                       Lcd_Disp_Bin@val 0034          GetCumulativePeriodsForStates@i 0077  
        GetCumulativePeriodsForStates@j 0076                         ??_Lcd_WriteChar 007E  
                        ??_Lcd_Delay5us 0070                            _STATE_BREAKS 00E2  
              __end_of_I2C_Master_Start 0F9A                          ??_Lcd_Disp_Bin 0036  
              __end_of_I2C_Master_Write 0F97                __size_of_Lcd_Delay5500us 0009  
                              init_ram0 0008                          ??_GetPrevCycle 0070  
                      ___lldiv@dividend 0074                               stringcode 0800  
               __end_of_I2C_Master_Init 0064                 __end_of_I2C_Master_Read 0FB9  
               __end_of_I2C_Master_Wait 0FC1                 __end_of_I2C_Master_Stop 0FC4  
                         ??_Lcd_Command 0070                        ___lldiv@quotient 0078  
                     I2C_Master_Write@d 0070                                stringdir 0800  
                              stringtab 0800                            ___aldiv@sign 0079  
                          ___almod@sign 0079                            ?_eeprom_read 0070  
