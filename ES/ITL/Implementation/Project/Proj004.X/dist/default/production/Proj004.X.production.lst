

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Jun 27 13:16:13 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F26K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 1.42
    54                           ; Generated 13/04/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F26K40 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  001E48                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for Timer_1ms@F11309
    93  001E48  2D                 	db	45
    94  001E49  2D                 	db	45
    95  001E4A  2D                 	db	45
    96  001E4B  2D                 	db	45
    97  001E4C  2D                 	db	45
    98  001E4D  2D                 	db	45
    99  001E4E  00                 	db	0
   100                           
   101                           ;initializer for _GLOBAL_CENTURY
   102  001E4F  14                 	db	20
   103                           
   104                           	psect	idataBANK0
   105  001D7C                     __pidataBANK0:
   106                           	opt stack 0
   107                           
   108                           ;initializer for GetDay@t
   109  001D7C  0000               	dw	0
   110  001D7E  0003               	dw	3
   111  001D80  0002               	dw	2
   112  001D82  0005               	dw	5
   113  001D84  0000               	dw	0
   114  001D86  0003               	dw	3
   115  001D88  0005               	dw	5
   116  001D8A  0001               	dw	1
   117  001D8C  0004               	dw	4
   118  001D8E  0006               	dw	6
   119  001D90  0002               	dw	2
   120  001D92  0004               	dw	4
   121                           
   122                           ;initializer for Timer_1ms@F11311
   123  001D94  2D                 	db	45
   124  001D95  2D                 	db	45
   125  001D96  2D                 	db	45
   126  001D97  2D                 	db	45
   127  001D98  2D                 	db	45
   128  001D99  2D                 	db	45
   129  001D9A  00                 	db	0
   130                           
   131                           ;initializer for main@F11312
   132  001D9B  30                 	db	48
   133  001D9C  30                 	db	48
   134  001D9D  30                 	db	48
   135  001D9E  30                 	db	48
   136  001D9F  30                 	db	48
   137  001DA0  30                 	db	48
   138  001DA1  00                 	db	0
   139                           
   140                           	psect	smallconst
   141  000F00                     __psmallconst:
   142                           	opt stack 0
   143  000F00  00                 	db	0
   144  000F01                     ReadDateTimeFromBuffer@F11323:
   145                           	opt stack 0
   146  000F01  24                 	db	36
   147  000F02  47                 	db	71
   148  000F03  50                 	db	80
   149  000F04  52                 	db	82
   150  000F05  4D                 	db	77
   151  000F06  43                 	db	67
   152  000F07  2C                 	db	44
   153  000F08                     __end_ofReadDateTimeFromBuffer@F11323:
   154                           	opt stack 0
   155  000F08                     ReadTimeFromBuffer@F11315:
   156                           	opt stack 0
   157  000F08  24                 	db	36
   158  000F09  47                 	db	71
   159  000F0A  50                 	db	80
   160  000F0B  52                 	db	82
   161  000F0C  4D                 	db	77
   162  000F0D  43                 	db	67
   163  000F0E  2C                 	db	44
   164  000F0F                     __end_ofReadTimeFromBuffer@F11315:
   165                           	opt stack 0
   166  000F0F                     ReadGPSTime@F11309:
   167                           	opt stack 0
   168  000F0F  24                 	db	36
   169  000F10  47                 	db	71
   170  000F11  50                 	db	80
   171  000F12  52                 	db	82
   172  000F13  4D                 	db	77
   173  000F14  43                 	db	67
   174  000F15  2C                 	db	44
   175  000F16                     __end_ofReadGPSTime@F11309:
   176                           	opt stack 0
   177  0000                     _PIR3bits	set	3789
   178  0000                     _PIE0bits	set	3778
   179  0000                     _PIR0bits	set	3786
   180  0000                     _OSCTUNE	set	3805
   181  0000                     _OSCFRQ	set	3806
   182  0000                     _OSCEN	set	3804
   183  0000                     _OSCCON3	set	3802
   184  0000                     _OSCCON1	set	3800
   185  0000                     _RX1PPSbits	set	3765
   186  0000                     _PPSLOCKbits	set	3744
   187  0000                     _PPSLOCK	set	3744
   188  0000                     _PIE3bits	set	3781
   189  0000                     _PLLR	set	30424
   190  0000                     _ODCONC	set	3871
   191  0000                     _ODCONB	set	3863
   192  0000                     _ODCONA	set	3855
   193  0000                     _WPUC	set	3872
   194  0000                     _WPUA	set	3856
   195  0000                     _WPUB	set	3864
   196  0000                     _WPUE	set	3885
   197  0000                     _ANSELA	set	3857
   198  0000                     _ANSELB	set	3865
   199  0000                     _ANSELC	set	3873
   200  0000                     _LATCbits	set	3973
   201  0000                     _INTCONbits	set	4082
   202  0000                     _T0CON0bits	set	4053
   203  0000                     _TMR0L	set	4051
   204  0000                     _TMR0H	set	4052
   205  0000                     _T0CON1	set	4054
   206  0000                     _T0CON0	set	4053
   207  0000                     _TRISC	set	3978
   208  0000                     _TRISB	set	3977
   209  0000                     _TRISA	set	3976
   210  0000                     _LATC	set	3973
   211  0000                     _LATB	set	3972
   212  0000                     _LATA	set	3971
   213  0000                     _RC1REG	set	3993
   214  0000                     _RC1STAbits	set	3997
   215  0000                     _TX1REG	set	3994
   216  0000                     _SP1BRGH	set	3996
   217  0000                     _SP1BRGL	set	3995
   218  0000                     _TX1STA	set	3998
   219  0000                     _RC1STA	set	3997
   220  0000                     _BAUD1CON	set	3999
   221  0000                     _LATAbits	set	3971
   222  0000                     _TRISAbits	set	3976
   223  0000                     _GIE	set	32663
   224                           
   225                           ; #config settings
   226  000F16  00                 	db	0	; dummy byte at the end
   227  0000                     
   228                           	psect	cinit
   229  001B70                     __pcinit:
   230                           	opt stack 0
   231  001B70                     start_initialization:
   232                           	opt stack 0
   233  001B70                     __initialization:
   234                           	opt stack 0
   235                           
   236                           ; Initialize objects allocated to BANK0 (38 bytes)
   237                           ; load TBLPTR registers with __pidataBANK0
   238  001B70  0E7C               	movlw	low __pidataBANK0
   239  001B72  6EF6               	movwf	tblptrl,c
   240  001B74  0E1D               	movlw	high __pidataBANK0
   241  001B76  6EF7               	movwf	tblptrh,c
   242  001B78  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   243  001B7A  6EF8               	movwf	tblptru,c
   244  001B7C  EE00  F0A0         	lfsr	0,__pdataBANK0
   245  001B80  EE10 F026          	lfsr	1,38
   246  001B84                     copy_data0:
   247  001B84  0009               	tblrd		*+
   248  001B86  CFF5 FFEE          	movff	tablat,postinc0
   249  001B8A  50E5               	movf	postdec1,w,c
   250  001B8C  50E1               	movf	fsr1l,w,c
   251  001B8E  E1FA               	bnz	copy_data0
   252                           
   253                           ; Initialize objects allocated to COMRAM (8 bytes)
   254                           ; load TBLPTR registers with __pidataCOMRAM
   255  001B90  0E48               	movlw	low __pidataCOMRAM
   256  001B92  6EF6               	movwf	tblptrl,c
   257  001B94  0E1E               	movlw	high __pidataCOMRAM
   258  001B96  6EF7               	movwf	tblptrh,c
   259  001B98  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   260  001B9A  6EF8               	movwf	tblptru,c
   261  001B9C  EE00  F054         	lfsr	0,__pdataCOMRAM
   262  001BA0  EE10 F008          	lfsr	1,8
   263  001BA4                     copy_data1:
   264  001BA4  0009               	tblrd		*+
   265  001BA6  CFF5 FFEE          	movff	tablat,postinc0
   266  001BAA  50E5               	movf	postdec1,w,c
   267  001BAC  50E1               	movf	fsr1l,w,c
   268  001BAE  E1FA               	bnz	copy_data1
   269                           
   270                           ; Clear objects allocated to BANK0 (64 bytes)
   271  001BB0  EE00  F060         	lfsr	0,__pbssBANK0
   272  001BB4  0E40               	movlw	64
   273  001BB6                     clear_0:
   274  001BB6  6AEE               	clrf	postinc0,c
   275  001BB8  06E8               	decf	wreg,f,c
   276  001BBA  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to COMRAM (20 bytes)
   279  001BBC  EE00  F040         	lfsr	0,__pbssCOMRAM
   280  001BC0  0E14               	movlw	20
   281  001BC2                     clear_1:
   282  001BC2  6AEE               	clrf	postinc0,c
   283  001BC4  06E8               	decf	wreg,f,c
   284  001BC6  E1FD               	bnz	clear_1
   285  001BC8                     end_of_initialization:
   286                           	opt stack 0
   287  001BC8                     __end_of__initialization:
   288                           	opt stack 0
   289  001BC8  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   290  001BCA  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   291  001BCC  0100               	movlb	0
   292  001BCE  EF60  F00E         	goto	_main	;jump to C main() function
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           postdec1	equ	0xFE5
   300                           fsr1l	equ	0xFE1
   301                           
   302                           	psect	bssCOMRAM
   303  000040                     __pbssCOMRAM:
   304                           	opt stack 0
   305  000040                     _eusart1TxBuffer:
   306                           	opt stack 0
   307  000040                     	ds	8
   308  000048                     _TMR0_InterruptHandler:
   309                           	opt stack 0
   310  000048                     	ds	2
   311  00004A                     _GLOBAL_USARTSIZE:
   312                           	opt stack 0
   313  00004A                     	ds	2
   314  00004C                     _GLOBAL_I:
   315                           	opt stack 0
   316  00004C                     	ds	2
   317  00004E                     _eusart1RxCount:
   318                           	opt stack 0
   319  00004E                     	ds	1
   320  00004F                     _eusart1RxTail:
   321                           	opt stack 0
   322  00004F                     	ds	1
   323  000050                     _eusart1RxHead:
   324                           	opt stack 0
   325  000050                     	ds	1
   326  000051                     _eusart1TxBufferRemaining:
   327                           	opt stack 0
   328  000051                     	ds	1
   329  000052                     _eusart1TxTail:
   330                           	opt stack 0
   331  000052                     	ds	1
   332  000053                     _eusart1TxHead:
   333                           	opt stack 0
   334  000053                     	ds	1
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	dataCOMRAM
   345  000054                     __pdataCOMRAM:
   346                           	opt stack 0
   347  000054                     Timer_1ms@F11309:
   348                           	opt stack 0
   349  000054                     	ds	7
   350  00005B                     _GLOBAL_CENTURY:
   351                           	opt stack 0
   352  00005B                     	ds	1
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	bssBANK0
   363  000060                     __pbssBANK0:
   364                           	opt stack 0
   365  000060                     _eusart1RxBuffer:
   366                           	opt stack 0
   367  000060                     	ds	64
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           postdec1	equ	0xFE5
   375                           fsr1l	equ	0xFE1
   376                           
   377                           	psect	dataBANK0
   378  0000A0                     __pdataBANK0:
   379                           	opt stack 0
   380  0000A0                     GetDay@t:
   381                           	opt stack 0
   382  0000A0                     	ds	24
   383  0000B8                     Timer_1ms@F11311:
   384                           	opt stack 0
   385  0000B8                     	ds	7
   386  0000BF                     main@F11312:
   387                           	opt stack 0
   388  0000BF                     	ds	7
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           postdec1	equ	0xFE5
   396                           fsr1l	equ	0xFE1
   397                           
   398                           	psect	cstackBANK0
   399  0000C6                     __pcstackBANK0:
   400                           	opt stack 0
   401  0000C6                     ??_Lcd_Delay5500us:
   402  0000C6                     ??_Lcd_Command:
   403  0000C6                     PIN_MANAGER_Initialize@state:
   404                           	opt stack 0
   405  0000C6                     TMR0_SetInterruptHandler@InterruptHandler:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x0
   409  0000C6                     	ds	2
   410  0000C8                     Lcd_Command@command:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x2
   414  0000C8                     	ds	1
   415  0000C9                     Lcd_Init@data:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x3
   419  0000C9                     	ds	1
   420  0000CA                     main@s:
   421                           	opt stack 0
   422                           
   423                           ; 7 bytes @ 0x4
   424  0000CA                     	ds	7
   425                           tblptru	equ	0xFF8
   426                           tblptrh	equ	0xFF7
   427                           tblptrl	equ	0xFF6
   428                           tablat	equ	0xFF5
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           postdec1	equ	0xFE5
   432                           fsr1l	equ	0xFE1
   433                           
   434                           	psect	cstackCOMRAM
   435  000001                     __pcstackCOMRAM:
   436                           	opt stack 0
   437  000001                     ??_Lcd_CharCP:
   438  000001                     ??i2_Lcd_Command:
   439  000001                     ?___wmul:
   440                           	opt stack 0
   441  000001                     ?___awdiv:
   442                           	opt stack 0
   443  000001                     ReadTimeFromBuffer@Output:
   444                           	opt stack 0
   445  000001                     ReadDateTimeFromBuffer@Date:
   446                           	opt stack 0
   447  000001                     ValidateDateTime@Date:
   448                           	opt stack 0
   449  000001                     ___wmul@multiplier:
   450                           	opt stack 0
   451  000001                     ___awdiv@dividend:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x0
   455  000001                     	ds	2
   456  000003                     ??_ReadTimeFromBuffer:
   457  000003                     Lcd_CharCP@c:
   458                           	opt stack 0
   459  000003                     i2Lcd_Command@command:
   460                           	opt stack 0
   461  000003                     ReadDateTimeFromBuffer@Time:
   462                           	opt stack 0
   463  000003                     ValidateDateTime@Time:
   464                           	opt stack 0
   465  000003                     ___wmul@multiplicand:
   466                           	opt stack 0
   467  000003                     ___awdiv@divisor:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x2
   471  000003                     	ds	1
   472  000004                     Lcd_Text@x:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x3
   476  000004                     	ds	1
   477  000005                     ??_ReadDateTimeFromBuffer:
   478  000005                     ??_ValidateDateTime:
   479  000005                     ___awdiv@counter:
   480                           	opt stack 0
   481  000005                     Lcd_Text@buffer:
   482                           	opt stack 0
   483  000005                     ___wmul@product:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x4
   487  000005                     	ds	1
   488  000006                     ValidateDateTime@Item:
   489                           	opt stack 0
   490  000006                     ___awdiv@sign:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x5
   494  000006                     	ds	1
   495  000007                     ?___lwdiv:
   496                           	opt stack 0
   497  000007                     Lcd_Text@y:
   498                           	opt stack 0
   499  000007                     ___awdiv@quotient:
   500                           	opt stack 0
   501  000007                     ___lwdiv@dividend:
   502                           	opt stack 0
   503  000007                     ReadTimeFromBuffer@StartCode:
   504                           	opt stack 0
   505                           
   506                           ; 7 bytes @ 0x6
   507  000007                     	ds	1
   508  000008                     Lcd_Text@data:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x7
   512  000008                     	ds	1
   513  000009                     ?___awmod:
   514                           	opt stack 0
   515  000009                     ___awmod@dividend:
   516                           	opt stack 0
   517  000009                     ___lwdiv@divisor:
   518                           	opt stack 0
   519  000009                     ReadDateTimeFromBuffer@StartCode:
   520                           	opt stack 0
   521                           
   522                           ; 7 bytes @ 0x8
   523  000009                     	ds	2
   524  00000B                     ___awmod@divisor:
   525                           	opt stack 0
   526  00000B                     ___lwdiv@quotient:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0xA
   530  00000B                     	ds	2
   531  00000D                     ___awmod@counter:
   532                           	opt stack 0
   533  00000D                     ___lwdiv@counter:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0xC
   537  00000D                     	ds	1
   538  00000E                     ReadTimeFromBuffer@TempChar:
   539                           	opt stack 0
   540  00000E                     ___awmod@sign:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0xD
   544  00000E                     	ds	1
   545  00000F                     ReadTimeFromBuffer@i:
   546                           	opt stack 0
   547  00000F                     GetDay@Date:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xE
   551  00000F                     	ds	1
   552  000010                     ReadDateTimeFromBuffer@Commas:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0xF
   556  000010                     	ds	1
   557  000011                     ??_GetDay:
   558  000011                     ReadTimeFromBuffer@Pos:
   559                           	opt stack 0
   560  000011                     ReadDateTimeFromBuffer@TempChar:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x10
   564  000011                     	ds	1
   565  000012                     ReadDateTimeFromBuffer@i:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x11
   569  000012                     	ds	2
   570  000014                     ReadDateTimeFromBuffer@Pos:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x13
   574  000014                     	ds	5
   575  000019                     GetDay@d:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x18
   579  000019                     	ds	1
   580  00001A                     GetDay@m:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x19
   584  00001A                     	ds	1
   585  00001B                     GetDay@y:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x1A
   589  00001B                     	ds	2
   590  00001D                     Lcd_Int@x:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x1C
   594  00001D                     	ds	1
   595  00001E                     Lcd_Int@val:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x1D
   599  00001E                     	ds	1
   600  00001F                     Lcd_Int@size:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x1E
   604  00001F                     	ds	1
   605  000020                     Lcd_Int@y:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x1F
   609  000020                     	ds	1
   610  000021                     Lcd_Int@data:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x20
   614  000021                     	ds	1
   615  000022                     Lcd_Int@tempVal:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x21
   619  000022                     	ds	2
   620  000024                     Timer_1ms@Time:
   621                           	opt stack 0
   622                           
   623                           ; 7 bytes @ 0x23
   624  000024                     	ds	7
   625  00002B                     Timer_1ms@Date:
   626                           	opt stack 0
   627                           
   628                           ; 7 bytes @ 0x2A
   629  00002B                     	ds	7
   630  000032                     ??_INTERRUPT_InterruptManager:
   631                           
   632                           ; 1 bytes @ 0x31
   633  000032                     	ds	14
   634                           tblptru	equ	0xFF8
   635                           tblptrh	equ	0xFF7
   636                           tblptrl	equ	0xFF6
   637                           tablat	equ	0xFF5
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           postdec1	equ	0xFE5
   641                           fsr1l	equ	0xFE1
   642                           
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   645 ;;
   646 ;; *************** function _main *****************
   647 ;; Defined at:
   648 ;;		line 51 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  s               7    4[BANK0 ] unsigned char [7]
   653 ;;  i               1    0        char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   664 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   666 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   667 ;;Total ram usage:        7 bytes
   668 ;; Hardware stack levels required when called:   10
   669 ;; This function calls:
   670 ;;		_Lcd_Init
   671 ;;		_SYSTEM_Initialize
   672 ;;		_TMR0_SetInterruptHandler
   673 ;; This function is called by:
   674 ;;		Startup code after reset
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text0
   679  001CC0                     __ptext0:
   680                           	opt stack 0
   681  001CC0                     _main:
   682                           	opt stack 21
   683                           
   684                           ;main.c: 54: SYSTEM_Initialize();
   685                           
   686                           ;incstack = 0
   687  001CC0  EC06  F00F         	call	_SYSTEM_Initialize	;wreg free
   688                           
   689                           ;main.c: 85: (INTCONbits.GIE = 1);
   690  001CC4  8EF2               	bsf	intcon,7,c	;volatile
   691                           
   692                           ;main.c: 86: (INTCONbits.PEIE = 0);
   693  001CC6  9CF2               	bcf	intcon,6,c	;volatile
   694                           
   695                           ;main.c: 87: TMR0_SetInterruptHandler(Timer_1ms);
   696  001CC8  0E72               	movlw	low _Timer_1ms
   697  001CCA  0100               	movlb	0	; () banked
   698  001CCC  6FC6               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
   699  001CCE  0E17               	movlw	high _Timer_1ms
   700  001CD0  0100               	movlb	0	; () banked
   701  001CD2  6FC7               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   702  001CD4  EC1A  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
   703                           
   704                           ;main.c: 88: Lcd_Init();
   705  001CD8  EC2C  F00C         	call	_Lcd_Init	;wreg free
   706                           
   707                           ;main.c: 89: INT8 i;
   708                           ;main.c: 90: char s[] = "000000";
   709  001CDC  EE20  F0BF         	lfsr	2,main@F11312
   710  001CE0  EE10  F0CA         	lfsr	1,main@s
   711  001CE4  0E06               	movlw	6
   712  001CE6                     u2101:
   713  001CE6  CFDB FFE3          	movff	plusw2,plusw1
   714  001CEA  06E8               	decf	wreg,f,c
   715  001CEC  E2FC               	bc	u2101
   716                           
   717                           ;main.c: 91: LATCbits.LC1=ON;
   718  001CEE  8285               	bsf	3973,1,c	;volatile
   719  001CF0                     l432:
   720                           
   721                           ;main.c: 94: {
   722  001CF0  D7FF               	goto	l432
   723  001CF2                     __end_of_main:
   724                           	opt stack 0
   725                           tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           intcon	equ	0xFF2
   730                           postinc0	equ	0xFEE
   731                           wreg	equ	0xFE8
   732                           postdec1	equ	0xFE5
   733                           plusw1	equ	0xFE3
   734                           fsr1l	equ	0xFE1
   735                           plusw2	equ	0xFDB
   736                           
   737 ;; *************** function _SYSTEM_Initialize *****************
   738 ;; Defined at:
   739 ;;		line 107 in file "mcc_generated_files/mcc.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    9
   760 ;; This function calls:
   761 ;;		_EUSART1_Initialize
   762 ;;		_INTERRUPT_Initialize
   763 ;;		_OSCILLATOR_Initialize
   764 ;;		_PIN_MANAGER_Initialize
   765 ;;		_TMR0_Initialize
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text1
   772  001E0C                     __ptext1:
   773                           	opt stack 0
   774  001E0C                     _SYSTEM_Initialize:
   775                           	opt stack 21
   776                           
   777                           ;mcc.c: 110: INTERRUPT_Initialize();
   778                           
   779                           ;incstack = 0
   780  001E0C  EC32  F00F         	call	_INTERRUPT_Initialize	;wreg free
   781                           
   782                           ;mcc.c: 111: PIN_MANAGER_Initialize();
   783  001E10  ECF3  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
   784                           
   785                           ;mcc.c: 112: OSCILLATOR_Initialize();
   786  001E14  ECD1  F00E         	call	_OSCILLATOR_Initialize	;wreg free
   787                           
   788                           ;mcc.c: 113: TMR0_Initialize();
   789  001E18  EC91  F00E         	call	_TMR0_Initialize	;wreg free
   790                           
   791                           ;mcc.c: 114: EUSART1_Initialize();
   792  001E1C  EC43  F00E         	call	_EUSART1_Initialize	;wreg free
   793  001E20  0012               	return		;funcret
   794  001E22                     __end_of_SYSTEM_Initialize:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           intcon	equ	0xFF2
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           postdec1	equ	0xFE5
   804                           plusw1	equ	0xFE3
   805                           fsr1l	equ	0xFE1
   806                           plusw2	equ	0xFDB
   807                           
   808 ;; *************** function _TMR0_Initialize *****************
   809 ;; Defined at:
   810 ;;		line 60 in file "mcc_generated_files/tmr0.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    8
   831 ;; This function calls:
   832 ;;		_TMR0_SetInterruptHandler
   833 ;;		_TMR0_StartTimer
   834 ;; This function is called by:
   835 ;;		_SYSTEM_Initialize
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text2
   840  001D22                     __ptext2:
   841                           	opt stack 0
   842  001D22                     _TMR0_Initialize:
   843                           	opt stack 21
   844                           
   845                           ;tmr0.c: 65: T0CON0 = 0x07;
   846                           
   847                           ;incstack = 0
   848  001D22  0E07               	movlw	7
   849  001D24  6ED5               	movwf	4053,c	;volatile
   850                           
   851                           ;tmr0.c: 68: T0CON1 = 0x50;
   852  001D26  0E50               	movlw	80
   853  001D28  6ED6               	movwf	4054,c	;volatile
   854                           
   855                           ;tmr0.c: 71: TMR0H = 0x7C;
   856  001D2A  0E7C               	movlw	124
   857  001D2C  6ED4               	movwf	4052,c	;volatile
   858                           
   859                           ;tmr0.c: 74: TMR0L = 0x00;
   860  001D2E  0E00               	movlw	0
   861  001D30  6ED3               	movwf	4051,c	;volatile
   862                           
   863                           ;tmr0.c: 77: PIR0bits.TMR0IF = 0;
   864  001D32  010E               	movlb	14	; () banked
   865  001D34  9BCA               	bcf	202,5,b	;volatile
   866                           
   867                           ; BSR set to: 14
   868                           ;tmr0.c: 80: PIE0bits.TMR0IE = 1;
   869  001D36  010E               	movlb	14	; () banked
   870  001D38  8BC2               	bsf	194,5,b	;volatile
   871                           
   872                           ; BSR set to: 14
   873                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
   874  001D3A  0E68               	movlw	low _TMR0_DefaultInterruptHandler
   875  001D3C  0100               	movlb	0	; () banked
   876  001D3E  6FC6               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
   877  001D40  0E1E               	movlw	high _TMR0_DefaultInterruptHandler
   878  001D42  0100               	movlb	0	; () banked
   879  001D44  6FC7               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   880  001D46  EC1A  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
   881                           
   882                           ;tmr0.c: 86: TMR0_StartTimer();
   883  001D4A  EC30  F00F         	call	_TMR0_StartTimer	;wreg free
   884  001D4E  0012               	return		;funcret
   885  001D50                     __end_of_TMR0_Initialize:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           intcon	equ	0xFF2
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           postdec1	equ	0xFE5
   895                           plusw1	equ	0xFE3
   896                           fsr1l	equ	0xFE1
   897                           plusw2	equ	0xFDB
   898                           
   899 ;; *************** function _TMR0_StartTimer *****************
   900 ;; Defined at:
   901 ;;		line 89 in file "mcc_generated_files/tmr0.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		None
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    7
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_TMR0_Initialize
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text3
   930  001E60                     __ptext3:
   931                           	opt stack 0
   932  001E60                     _TMR0_StartTimer:
   933                           	opt stack 21
   934                           
   935                           ;tmr0.c: 92: T0CON0bits.T0EN = 1;
   936                           
   937                           ;incstack = 0
   938  001E60  8ED5               	bsf	4053,7,c	;volatile
   939  001E62  0012               	return		;funcret
   940  001E64                     __end_of_TMR0_StartTimer:
   941                           	opt stack 0
   942                           tblptru	equ	0xFF8
   943                           tblptrh	equ	0xFF7
   944                           tblptrl	equ	0xFF6
   945                           tablat	equ	0xFF5
   946                           intcon	equ	0xFF2
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           plusw1	equ	0xFE3
   951                           fsr1l	equ	0xFE1
   952                           plusw2	equ	0xFDB
   953                           
   954 ;; *************** function _TMR0_SetInterruptHandler *****************
   955 ;; Defined at:
   956 ;;		line 144 in file "mcc_generated_files/tmr0.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  InterruptHan    2    0[BANK0 ] PTR void 
   959 ;;		 -> Timer_1ms(1), TMR0_DefaultInterruptHandler(1), 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   974 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   975 ;;Total ram usage:        2 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    7
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_TMR0_Initialize
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text4
   987  001E34                     __ptext4:
   988                           	opt stack 0
   989  001E34                     _TMR0_SetInterruptHandler:
   990                           	opt stack 23
   991                           
   992                           ;tmr0.c: 145: TMR0_InterruptHandler = InterruptHandler;
   993                           
   994                           ;incstack = 0
   995  001E34  C0C6  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   996  001E38  C0C7  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   997  001E3C  0012               	return		;funcret
   998  001E3E                     __end_of_TMR0_SetInterruptHandler:
   999                           	opt stack 0
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           intcon	equ	0xFF2
  1005                           postinc0	equ	0xFEE
  1006                           wreg	equ	0xFE8
  1007                           postdec1	equ	0xFE5
  1008                           plusw1	equ	0xFE3
  1009                           fsr1l	equ	0xFE1
  1010                           plusw2	equ	0xFDB
  1011                           
  1012 ;; *************** function _PIN_MANAGER_Initialize *****************
  1013 ;; Defined at:
  1014 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  state           1    0[BANK0 ] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1029 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1031 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1032 ;;Total ram usage:        1 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    7
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_SYSTEM_Initialize
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text5
  1043  0019E6                     __ptext5:
  1044                           	opt stack 0
  1045  0019E6                     _PIN_MANAGER_Initialize:
  1046                           	opt stack 22
  1047                           
  1048                           ;pin_manager.c: 56: LATA = 0x00;
  1049                           
  1050                           ;incstack = 0
  1051  0019E6  0E00               	movlw	0
  1052  0019E8  6E83               	movwf	3971,c	;volatile
  1053                           
  1054                           ;pin_manager.c: 57: LATB = 0x00;
  1055  0019EA  0E00               	movlw	0
  1056  0019EC  6E84               	movwf	3972,c	;volatile
  1057                           
  1058                           ;pin_manager.c: 58: LATC = 0x00;
  1059  0019EE  0E00               	movlw	0
  1060  0019F0  6E85               	movwf	3973,c	;volatile
  1061                           
  1062                           ;pin_manager.c: 63: TRISA = 0xC0;
  1063  0019F2  0EC0               	movlw	192
  1064  0019F4  6E88               	movwf	3976,c	;volatile
  1065                           
  1066                           ;pin_manager.c: 64: TRISB = 0x00;
  1067  0019F6  0E00               	movlw	0
  1068  0019F8  6E89               	movwf	3977,c	;volatile
  1069                           
  1070                           ;pin_manager.c: 65: TRISC = 0xC0;
  1071  0019FA  0EC0               	movlw	192
  1072  0019FC  6E8A               	movwf	3978,c	;volatile
  1073                           
  1074                           ;pin_manager.c: 70: ANSELC = 0x7F;
  1075  0019FE  0E7F               	movlw	127
  1076  001A00  010F               	movlb	15	; () banked
  1077  001A02  6F21               	movwf	33,b	;volatile
  1078                           
  1079                           ; BSR set to: 15
  1080                           ;pin_manager.c: 71: ANSELB = 0xFF;
  1081  001A04  010F               	movlb	15	; () banked
  1082  001A06  6919               	setf	25,b	;volatile
  1083                           
  1084                           ; BSR set to: 15
  1085                           ;pin_manager.c: 72: ANSELA = 0xFF;
  1086  001A08  010F               	movlb	15	; () banked
  1087  001A0A  6911               	setf	17,b	;volatile
  1088                           
  1089                           ;pin_manager.c: 77: WPUE = 0x00;
  1090  001A0C  0E00               	movlw	0
  1091  001A0E  010F               	movlb	15	; () banked
  1092  001A10  6F2D               	movwf	45,b	;volatile
  1093                           
  1094                           ;pin_manager.c: 78: WPUB = 0x00;
  1095  001A12  0E00               	movlw	0
  1096  001A14  010F               	movlb	15	; () banked
  1097  001A16  6F18               	movwf	24,b	;volatile
  1098                           
  1099                           ;pin_manager.c: 79: WPUA = 0x00;
  1100  001A18  0E00               	movlw	0
  1101  001A1A  010F               	movlb	15	; () banked
  1102  001A1C  6F10               	movwf	16,b	;volatile
  1103                           
  1104                           ;pin_manager.c: 80: WPUC = 0x00;
  1105  001A1E  0E00               	movlw	0
  1106  001A20  010F               	movlb	15	; () banked
  1107  001A22  6F20               	movwf	32,b	;volatile
  1108                           
  1109                           ;pin_manager.c: 85: ODCONA = 0x00;
  1110  001A24  0E00               	movlw	0
  1111  001A26  010F               	movlb	15	; () banked
  1112  001A28  6F0F               	movwf	15,b	;volatile
  1113                           
  1114                           ;pin_manager.c: 86: ODCONB = 0x00;
  1115  001A2A  0E00               	movlw	0
  1116  001A2C  010F               	movlb	15	; () banked
  1117  001A2E  6F17               	movwf	23,b	;volatile
  1118                           
  1119                           ;pin_manager.c: 87: ODCONC = 0x00;
  1120  001A30  0E00               	movlw	0
  1121  001A32  010F               	movlb	15	; () banked
  1122  001A34  6F1F               	movwf	31,b	;volatile
  1123                           
  1124                           ;pin_manager.c: 94: bool state = GIE;
  1125  001A36  0E00               	movlw	0
  1126  001A38  BEF2               	btfsc	intcon,7,c	;volatile
  1127  001A3A  0E01               	movlw	1
  1128  001A3C  0100               	movlb	0	; () banked
  1129  001A3E  6FC6               	movwf	PIN_MANAGER_Initialize@state& (0+255),b
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;pin_manager.c: 95: GIE = 0;
  1133  001A40  9EF2               	bcf	intcon,7,c	;volatile
  1134                           
  1135                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  1136  001A42  0E55               	movlw	85
  1137  001A44  010E               	movlb	14	; () banked
  1138  001A46  6FA0               	movwf	160,b	;volatile
  1139                           
  1140                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  1141  001A48  0EAA               	movlw	170
  1142  001A4A  010E               	movlb	14	; () banked
  1143  001A4C  6FA0               	movwf	160,b	;volatile
  1144                           
  1145                           ; BSR set to: 14
  1146                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  1147  001A4E  010E               	movlb	14	; () banked
  1148  001A50  91A0               	bcf	160,0,b	;volatile
  1149                           
  1150                           ; BSR set to: 14
  1151                           ;pin_manager.c: 100: RX1PPSbits.RXPPS = 0x17;
  1152  001A52  010E               	movlb	14	; () banked
  1153  001A54  81B5               	bsf	181,0,b	;volatile
  1154  001A56  83B5               	bsf	181,1,b	;volatile
  1155  001A58  85B5               	bsf	181,2,b	;volatile
  1156  001A5A  97B5               	bcf	181,3,b	;volatile
  1157  001A5C  89B5               	bsf	181,4,b	;volatile
  1158                           
  1159                           ;pin_manager.c: 102: PPSLOCK = 0x55;
  1160  001A5E  0E55               	movlw	85
  1161  001A60  010E               	movlb	14	; () banked
  1162  001A62  6FA0               	movwf	160,b	;volatile
  1163                           
  1164                           ;pin_manager.c: 103: PPSLOCK = 0xAA;
  1165  001A64  0EAA               	movlw	170
  1166  001A66  010E               	movlb	14	; () banked
  1167  001A68  6FA0               	movwf	160,b	;volatile
  1168                           
  1169                           ; BSR set to: 14
  1170                           ;pin_manager.c: 104: PPSLOCKbits.PPSLOCKED = 0x01;
  1171  001A6A  010E               	movlb	14	; () banked
  1172  001A6C  81A0               	bsf	160,0,b	;volatile
  1173                           
  1174                           ; BSR set to: 14
  1175                           ;pin_manager.c: 106: GIE = state;
  1176  001A6E  0100               	movlb	0	; () banked
  1177  001A70  A1C6               	btfss	PIN_MANAGER_Initialize@state& (0+255),0,b
  1178  001A72  D002               	goto	u1750
  1179  001A74  8EF2               	bsf	intcon,7,c	;volatile
  1180  001A76  0012               	return	
  1181  001A78                     u1750:
  1182  001A78  9EF2               	bcf	intcon,7,c	;volatile
  1183  001A7A  0012               	return		;funcret
  1184  001A7C                     __end_of_PIN_MANAGER_Initialize:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           intcon	equ	0xFF2
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           postdec1	equ	0xFE5
  1194                           plusw1	equ	0xFE3
  1195                           fsr1l	equ	0xFE1
  1196                           plusw2	equ	0xFDB
  1197                           
  1198 ;; *************** function _OSCILLATOR_Initialize *****************
  1199 ;; Defined at:
  1200 ;;		line 117 in file "mcc_generated_files/mcc.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    7
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_SYSTEM_Initialize
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text6
  1229  001DA2                     __ptext6:
  1230                           	opt stack 0
  1231  001DA2                     _OSCILLATOR_Initialize:
  1232                           	opt stack 22
  1233                           
  1234                           ;mcc.c: 120: OSCCON1 = 0x22;
  1235                           
  1236                           ;incstack = 0
  1237  001DA2  0E22               	movlw	34
  1238  001DA4  010E               	movlb	14	; () banked
  1239  001DA6  6FD8               	movwf	216,b	;volatile
  1240                           
  1241                           ;mcc.c: 122: OSCCON3 = 0x00;
  1242  001DA8  0E00               	movlw	0
  1243  001DAA  010E               	movlb	14	; () banked
  1244  001DAC  6FDA               	movwf	218,b	;volatile
  1245                           
  1246                           ;mcc.c: 124: OSCEN = 0x00;
  1247  001DAE  0E00               	movlw	0
  1248  001DB0  010E               	movlb	14	; () banked
  1249  001DB2  6FDC               	movwf	220,b	;volatile
  1250                           
  1251                           ;mcc.c: 126: OSCFRQ = 0x05;
  1252  001DB4  0E05               	movlw	5
  1253  001DB6  010E               	movlb	14	; () banked
  1254  001DB8  6FDE               	movwf	222,b	;volatile
  1255                           
  1256                           ;mcc.c: 128: OSCTUNE = 0x00;
  1257  001DBA  0E00               	movlw	0
  1258  001DBC  010E               	movlb	14	; () banked
  1259  001DBE  6FDD               	movwf	221,b	;volatile
  1260  001DC0                     l319:
  1261                           
  1262                           ; BSR set to: 14
  1263  001DC0  010E               	movlb	14	; () banked
  1264  001DC2  B1DB               	btfsc	219,0,b	;volatile
  1265  001DC4  0012               	return	
  1266  001DC6  D7FC               	goto	l319
  1267  001DC8                     __end_of_OSCILLATOR_Initialize:
  1268                           	opt stack 0
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           intcon	equ	0xFF2
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           postdec1	equ	0xFE5
  1277                           plusw1	equ	0xFE3
  1278                           fsr1l	equ	0xFE1
  1279                           plusw2	equ	0xFDB
  1280                           
  1281 ;; *************** function _INTERRUPT_Initialize *****************
  1282 ;; Defined at:
  1283 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		None
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    7
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_SYSTEM_Initialize
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text7
  1312  001E64                     __ptext7:
  1313                           	opt stack 0
  1314  001E64                     _INTERRUPT_Initialize:
  1315                           	opt stack 22
  1316                           
  1317                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  1318                           
  1319                           ; BSR set to: 14
  1320                           ;incstack = 0
  1321  001E64  9AF2               	bcf	intcon,5,c	;volatile
  1322  001E66  0012               	return		;funcret
  1323  001E68                     __end_of_INTERRUPT_Initialize:
  1324                           	opt stack 0
  1325                           tblptru	equ	0xFF8
  1326                           tblptrh	equ	0xFF7
  1327                           tblptrl	equ	0xFF6
  1328                           tablat	equ	0xFF5
  1329                           intcon	equ	0xFF2
  1330                           postinc0	equ	0xFEE
  1331                           wreg	equ	0xFE8
  1332                           postdec1	equ	0xFE5
  1333                           plusw1	equ	0xFE3
  1334                           fsr1l	equ	0xFE1
  1335                           plusw2	equ	0xFDB
  1336                           
  1337 ;; *************** function _EUSART1_Initialize *****************
  1338 ;; Defined at:
  1339 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    7
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_SYSTEM_Initialize
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text8
  1368  001C86                     __ptext8:
  1369                           	opt stack 0
  1370  001C86                     _EUSART1_Initialize:
  1371                           	opt stack 22
  1372                           
  1373                           ;eusart1.c: 78: PIE3bits.RC1IE = 0;
  1374                           
  1375                           ;incstack = 0
  1376  001C86  010E               	movlb	14	; () banked
  1377  001C88  9BC5               	bcf	197,5,b	;volatile
  1378                           
  1379                           ;eusart1.c: 79: PIE3bits.TX1IE = 0;
  1380  001C8A  010E               	movlb	14	; () banked
  1381  001C8C  99C5               	bcf	197,4,b	;volatile
  1382                           
  1383                           ; BSR set to: 14
  1384                           ;eusart1.c: 84: BAUD1CON = 0x08;
  1385  001C8E  0E08               	movlw	8
  1386  001C90  6E9F               	movwf	3999,c	;volatile
  1387                           
  1388                           ;eusart1.c: 87: RC1STA = 0x90;
  1389  001C92  0E90               	movlw	144
  1390  001C94  6E9D               	movwf	3997,c	;volatile
  1391                           
  1392                           ;eusart1.c: 90: TX1STA = 0x04;
  1393  001C96  0E04               	movlw	4
  1394  001C98  6E9E               	movwf	3998,c	;volatile
  1395                           
  1396                           ;eusart1.c: 93: SP1BRGL = 0x67;
  1397  001C9A  0E67               	movlw	103
  1398  001C9C  6E9B               	movwf	3995,c	;volatile
  1399                           
  1400                           ;eusart1.c: 96: SP1BRGH = 0x00;
  1401  001C9E  0E00               	movlw	0
  1402  001CA0  6E9C               	movwf	3996,c	;volatile
  1403                           
  1404                           ;eusart1.c: 100: eusart1TxHead = 0;
  1405  001CA2  0E00               	movlw	0
  1406  001CA4  6E53               	movwf	_eusart1TxHead,c	;volatile
  1407                           
  1408                           ;eusart1.c: 101: eusart1TxTail = 0;
  1409  001CA6  0E00               	movlw	0
  1410  001CA8  6E52               	movwf	_eusart1TxTail,c	;volatile
  1411                           
  1412                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1413  001CAA  0E08               	movlw	8
  1414  001CAC  6E51               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1415                           
  1416                           ;eusart1.c: 104: eusart1RxHead = 0;
  1417  001CAE  0E00               	movlw	0
  1418  001CB0  6E50               	movwf	_eusart1RxHead,c	;volatile
  1419                           
  1420                           ;eusart1.c: 105: eusart1RxTail = 0;
  1421  001CB2  0E00               	movlw	0
  1422  001CB4  6E4F               	movwf	_eusart1RxTail,c	;volatile
  1423                           
  1424                           ;eusart1.c: 106: eusart1RxCount = 0;
  1425  001CB6  0E00               	movlw	0
  1426  001CB8  6E4E               	movwf	_eusart1RxCount,c	;volatile
  1427                           
  1428                           ; BSR set to: 14
  1429                           ;eusart1.c: 109: PIE3bits.RC1IE = 1;
  1430  001CBA  010E               	movlb	14	; () banked
  1431  001CBC  8BC5               	bsf	197,5,b	;volatile
  1432                           
  1433                           ; BSR set to: 14
  1434  001CBE  0012               	return		;funcret
  1435  001CC0                     __end_of_EUSART1_Initialize:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           intcon	equ	0xFF2
  1442                           postinc0	equ	0xFEE
  1443                           wreg	equ	0xFE8
  1444                           postdec1	equ	0xFE5
  1445                           plusw1	equ	0xFE3
  1446                           fsr1l	equ	0xFE1
  1447                           plusw2	equ	0xFDB
  1448                           
  1449 ;; *************** function _Lcd_Init *****************
  1450 ;; Defined at:
  1451 ;;		line 17 in file "libs/HD44780.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  data            1    3[BANK0 ] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1469 ;;Total ram usage:        1 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    9
  1472 ;; This function calls:
  1473 ;;		_Lcd_Command
  1474 ;;		_Lcd_Delay5500us
  1475 ;;		_Lcd_Delay5us
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text9
  1482  001858                     __ptext9:
  1483                           	opt stack 0
  1484  001858                     _Lcd_Init:
  1485                           	opt stack 21
  1486                           
  1487                           ;HD44780.c: 23: unsigned char data;
  1488                           ;HD44780.c: 24: TRISAbits.TRISA5 = 0; TRISAbits.TRISA4 = 0; TRISAbits.TRISA3 = 0; TRISAb
      +                          its.TRISA2 = 0; TRISAbits.TRISA1 = 0; TRISAbits.TRISA0 = 0;
  1489                           
  1490                           ; BSR set to: 14
  1491                           ;incstack = 0
  1492  001858  9A88               	bcf	3976,5,c	;volatile
  1493  00185A  9888               	bcf	3976,4,c	;volatile
  1494  00185C  9688               	bcf	3976,3,c	;volatile
  1495  00185E  9488               	bcf	3976,2,c	;volatile
  1496  001860  9288               	bcf	3976,1,c	;volatile
  1497  001862  9088               	bcf	3976,0,c	;volatile
  1498                           
  1499                           ;HD44780.c: 25: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 0; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  1500  001864  9A83               	bcf	3971,5,c	;volatile
  1501  001866  9883               	bcf	3971,4,c	;volatile
  1502  001868  9683               	bcf	3971,3,c	;volatile
  1503  00186A  9483               	bcf	3971,2,c	;volatile
  1504  00186C  9283               	bcf	3971,1,c	;volatile
  1505  00186E  9083               	bcf	3971,0,c	;volatile
  1506                           
  1507                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  1508  001870  EC11  F00F         	call	_Lcd_Delay5500us	;wreg free
  1509  001874  EC11  F00F         	call	_Lcd_Delay5500us	;wreg free
  1510  001878  EC11  F00F         	call	_Lcd_Delay5500us	;wreg free
  1511                           
  1512                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  1513  00187C  EC11  F00F         	call	_Lcd_Delay5500us	;wreg free
  1514  001880  EC11  F00F         	call	_Lcd_Delay5500us	;wreg free
  1515  001884  EC11  F00F         	call	_Lcd_Delay5500us	;wreg free
  1516                           
  1517                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  1518  001888  0E01               	movlw	1
  1519  00188A  0100               	movlb	0	; () banked
  1520  00188C  6FC9               	movwf	Lcd_Init@data& (0+255),b
  1521  00188E                     l2425:
  1522                           
  1523                           ; BSR set to: 0
  1524  00188E  0E03               	movlw	3
  1525  001890  0100               	movlb	0	; () banked
  1526  001892  65C9               	cpfsgt	Lcd_Init@data& (0+255),b
  1527  001894  D001               	goto	l23
  1528  001896  D019               	goto	l24
  1529  001898                     l23:
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;HD44780.c: 29: {
  1533                           ;HD44780.c: 30: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  1534  001898  9A83               	bcf	3971,5,c	;volatile
  1535  00189A  9883               	bcf	3971,4,c	;volatile
  1536  00189C  8683               	bsf	3971,3,c	;volatile
  1537  00189E  8483               	bsf	3971,2,c	;volatile
  1538  0018A0  9283               	bcf	3971,1,c	;volatile
  1539  0018A2  9083               	bcf	3971,0,c	;volatile
  1540                           
  1541                           ;HD44780.c: 31: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 1; LATAbits.LA0 = 0;
  1542  0018A4  9A83               	bcf	3971,5,c	;volatile
  1543  0018A6  9883               	bcf	3971,4,c	;volatile
  1544  0018A8  8683               	bsf	3971,3,c	;volatile
  1545  0018AA  8483               	bsf	3971,2,c	;volatile
  1546  0018AC  8283               	bsf	3971,1,c	;volatile
  1547  0018AE  9083               	bcf	3971,0,c	;volatile
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;HD44780.c: 32: Lcd_Delay5us();
  1551  0018B0  EC28  F00F         	call	_Lcd_Delay5us	;wreg free
  1552                           
  1553                           ;HD44780.c: 33: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  1554  0018B4  9A83               	bcf	3971,5,c	;volatile
  1555  0018B6  9883               	bcf	3971,4,c	;volatile
  1556  0018B8  8683               	bsf	3971,3,c	;volatile
  1557  0018BA  8483               	bsf	3971,2,c	;volatile
  1558  0018BC  9283               	bcf	3971,1,c	;volatile
  1559  0018BE  9083               	bcf	3971,0,c	;volatile
  1560                           
  1561                           ;HD44780.c: 34: Lcd_Delay5500us();
  1562  0018C0  EC11  F00F         	call	_Lcd_Delay5500us	;wreg free
  1563  0018C4  0100               	movlb	0	; () banked
  1564  0018C6  2BC9               	incf	Lcd_Init@data& (0+255),f,b
  1565  0018C8  D7E2               	goto	l2425
  1566  0018CA                     l24:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;HD44780.c: 35: }
  1570                           ;HD44780.c: 36: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  1571  0018CA  9A83               	bcf	3971,5,c	;volatile
  1572  0018CC  9883               	bcf	3971,4,c	;volatile
  1573  0018CE  8683               	bsf	3971,3,c	;volatile
  1574  0018D0  9483               	bcf	3971,2,c	;volatile
  1575  0018D2  9283               	bcf	3971,1,c	;volatile
  1576  0018D4  9083               	bcf	3971,0,c	;volatile
  1577                           
  1578                           ;HD44780.c: 37: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 1; LATAbits.LA0 = 0;
  1579  0018D6  9A83               	bcf	3971,5,c	;volatile
  1580  0018D8  9883               	bcf	3971,4,c	;volatile
  1581  0018DA  8683               	bsf	3971,3,c	;volatile
  1582  0018DC  9483               	bcf	3971,2,c	;volatile
  1583  0018DE  8283               	bsf	3971,1,c	;volatile
  1584  0018E0  9083               	bcf	3971,0,c	;volatile
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;HD44780.c: 38: Lcd_Delay5us();
  1588  0018E2  EC28  F00F         	call	_Lcd_Delay5us	;wreg free
  1589                           
  1590                           ;HD44780.c: 39: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  1591  0018E6  9A83               	bcf	3971,5,c	;volatile
  1592  0018E8  9883               	bcf	3971,4,c	;volatile
  1593  0018EA  8683               	bsf	3971,3,c	;volatile
  1594  0018EC  9483               	bcf	3971,2,c	;volatile
  1595  0018EE  9283               	bcf	3971,1,c	;volatile
  1596  0018F0  9083               	bcf	3971,0,c	;volatile
  1597                           
  1598                           ;HD44780.c: 40: Lcd_Delay5500us();
  1599  0018F2  EC11  F00F         	call	_Lcd_Delay5500us	;wreg free
  1600                           
  1601                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  1602  0018F6  0E28               	movlw	40
  1603  0018F8  0100               	movlb	0	; () banked
  1604  0018FA  6FC9               	movwf	Lcd_Init@data& (0+255),b
  1605                           
  1606                           ; BSR set to: 0
  1607  0018FC  0100               	movlb	0	; () banked
  1608  0018FE  51C9               	movf	Lcd_Init@data& (0+255),w,b
  1609  001900  EC47  F008         	call	_Lcd_Command
  1610                           
  1611                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  1612  001904  0E10               	movlw	16
  1613  001906  0100               	movlb	0	; () banked
  1614  001908  6FC9               	movwf	Lcd_Init@data& (0+255),b
  1615                           
  1616                           ; BSR set to: 0
  1617  00190A  0100               	movlb	0	; () banked
  1618  00190C  51C9               	movf	Lcd_Init@data& (0+255),w,b
  1619  00190E  EC47  F008         	call	_Lcd_Command
  1620                           
  1621                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  1622  001912  0E01               	movlw	1
  1623  001914  0100               	movlb	0	; () banked
  1624  001916  6FC9               	movwf	Lcd_Init@data& (0+255),b
  1625                           
  1626                           ; BSR set to: 0
  1627  001918  0100               	movlb	0	; () banked
  1628  00191A  51C9               	movf	Lcd_Init@data& (0+255),w,b
  1629  00191C  EC47  F008         	call	_Lcd_Command
  1630                           
  1631                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  1632  001920  0E0F               	movlw	15
  1633  001922  0100               	movlb	0	; () banked
  1634  001924  6FC9               	movwf	Lcd_Init@data& (0+255),b
  1635                           
  1636                           ; BSR set to: 0
  1637  001926  0100               	movlb	0	; () banked
  1638  001928  51C9               	movf	Lcd_Init@data& (0+255),w,b
  1639  00192A  EC47  F008         	call	_Lcd_Command
  1640  00192E  0012               	return		;funcret
  1641  001930                     __end_of_Lcd_Init:
  1642                           	opt stack 0
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           intcon	equ	0xFF2
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           postdec1	equ	0xFE5
  1651                           plusw1	equ	0xFE3
  1652                           fsr1l	equ	0xFE1
  1653                           plusw2	equ	0xFDB
  1654                           
  1655 ;; *************** function _Lcd_Delay5500us *****************
  1656 ;; Defined at:
  1657 ;;		line 153 in file "libs/HD44780.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;Total ram usage:        1 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    7
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_Lcd_Init
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text10
  1686  001E22                     __ptext10:
  1687                           	opt stack 0
  1688  001E22                     _Lcd_Delay5500us:
  1689                           	opt stack 22
  1690                           
  1691                           ;HD44780.c: 154: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  1692                           
  1693                           ;incstack = 0
  1694  001E22  0E08               	movlw	8
  1695  001E24  0100               	movlb	0	; () banked
  1696  001E26  6FC6               	movwf	??_Lcd_Delay5500us& (0+255),b
  1697  001E28  0E23               	movlw	35
  1698  001E2A                     u2117:
  1699  001E2A  2EE8               	decfsz	wreg,f,c
  1700  001E2C  D7FE               	bra	u2117
  1701  001E2E  2FC6               	decfsz	??_Lcd_Delay5500us& (0+255),f,b
  1702  001E30  D7FC               	bra	u2117
  1703  001E32  0012               	return		;funcret
  1704  001E34                     __end_of_Lcd_Delay5500us:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           plusw1	equ	0xFE3
  1715                           fsr1l	equ	0xFE1
  1716                           plusw2	equ	0xFDB
  1717                           
  1718 ;; *************** function _Lcd_Command *****************
  1719 ;; Defined at:
  1720 ;;		line 133 in file "libs/HD44780.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  command         1    wreg     unsigned char 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  command         1    2[BANK0 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1738 ;;Total ram usage:        3 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    8
  1741 ;; This function calls:
  1742 ;;		_Lcd_Delay5us
  1743 ;; This function is called by:
  1744 ;;		_Lcd_Init
  1745 ;;		_Lcd_ConstText
  1746 ;;		_Lcd_WriteChar
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text11
  1751  00108E                     __ptext11:
  1752                           	opt stack 0
  1753  00108E                     _Lcd_Command:
  1754                           	opt stack 21
  1755                           
  1756                           ;incstack = 0
  1757                           ;Lcd_Command@command stored from wreg
  1758  00108E  0100               	movlb	0	; () banked
  1759  001090  6FC8               	movwf	Lcd_Command@command& (0+255),b
  1760                           
  1761                           ;HD44780.c: 134: LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  1762  001092  9283               	bcf	3971,1,c	;volatile
  1763  001094  9083               	bcf	3971,0,c	;volatile
  1764                           
  1765                           ;HD44780.c: 135: LATAbits.LA5 = (command & 0b10000000)>>7; LATAbits.LA4 = (command & 0b0
      +                          1000000)>>6;
  1766  001096  0100               	movlb	0	; () banked
  1767  001098  6BC6               	clrf	??_Lcd_Command& (0+255),b
  1768  00109A  AFC8               	btfss	Lcd_Command@command& (0+255),7,b
  1769  00109C  D002               	bra	u1725
  1770  00109E  0100               	movlb	0	; () banked
  1771  0010A0  2BC6               	incf	??_Lcd_Command& (0+255),f,b
  1772  0010A2                     u1725:
  1773  0010A2  0E01               	movlw	1
  1774  0010A4  0100               	movlb	0	; () banked
  1775  0010A6  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1776  0010A8  0100               	movlb	0	; () banked
  1777  0010AA  3BC6               	swapf	??_Lcd_Command& (0+255),f,b
  1778  0010AC  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1779  0010AE  5083               	movf	3971,w,c	;volatile
  1780  0010B0  0100               	movlb	0	; () banked
  1781  0010B2  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1782  0010B4  0BDF               	andlw	-33
  1783  0010B6  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1784  0010B8  6E83               	movwf	3971,c	;volatile
  1785  0010BA  C0C8  F0C6         	movff	Lcd_Command@command,??_Lcd_Command
  1786  0010BE  0E06               	movlw	6
  1787  0010C0  0100               	movlb	0	; () banked
  1788  0010C2  6FC7               	movwf	(??_Lcd_Command+1)& (0+255),b
  1789  0010C4                     u1735:
  1790  0010C4  0100               	movlb	0	; () banked
  1791  0010C6  90D8               	bcf	status,0,c
  1792  0010C8  33C6               	rrcf	??_Lcd_Command& (0+255),f,b
  1793  0010CA  0100               	movlb	0	; () banked
  1794  0010CC  2FC7               	decfsz	(??_Lcd_Command+1)& (0+255),f,b
  1795  0010CE  D7FA               	goto	u1735
  1796  0010D0  0E01               	movlw	1
  1797  0010D2  0100               	movlb	0	; () banked
  1798  0010D4  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1799  0010D6  0100               	movlb	0	; () banked
  1800  0010D8  3BC6               	swapf	??_Lcd_Command& (0+255),f,b
  1801  0010DA  5083               	movf	3971,w,c	;volatile
  1802  0010DC  0100               	movlb	0	; () banked
  1803  0010DE  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1804  0010E0  0BEF               	andlw	-17
  1805  0010E2  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1806  0010E4  6E83               	movwf	3971,c	;volatile
  1807                           
  1808                           ;HD44780.c: 136: LATAbits.LA3 = (command & 0b00100000)>>5; LATAbits.LA2 = (command & 0b0
      +                          0010000)>>4;
  1809  0010E6  C0C8  F0C6         	movff	Lcd_Command@command,??_Lcd_Command
  1810  0010EA  0E05               	movlw	5
  1811  0010EC  0100               	movlb	0	; () banked
  1812  0010EE  6FC7               	movwf	(??_Lcd_Command+1)& (0+255),b
  1813  0010F0                     u1745:
  1814  0010F0  0100               	movlb	0	; () banked
  1815  0010F2  90D8               	bcf	status,0,c
  1816  0010F4  33C6               	rrcf	??_Lcd_Command& (0+255),f,b
  1817  0010F6  0100               	movlb	0	; () banked
  1818  0010F8  2FC7               	decfsz	(??_Lcd_Command+1)& (0+255),f,b
  1819  0010FA  D7FA               	goto	u1745
  1820  0010FC  0E01               	movlw	1
  1821  0010FE  0100               	movlb	0	; () banked
  1822  001100  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1823  001102  0100               	movlb	0	; () banked
  1824  001104  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1825  001106  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1826  001108  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1827  00110A  5083               	movf	3971,w,c	;volatile
  1828  00110C  0100               	movlb	0	; () banked
  1829  00110E  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1830  001110  0BF7               	andlw	-9
  1831  001112  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1832  001114  6E83               	movwf	3971,c	;volatile
  1833  001116  C0C8  F0C6         	movff	Lcd_Command@command,??_Lcd_Command
  1834  00111A  0100               	movlb	0	; () banked
  1835  00111C  3BC6               	swapf	??_Lcd_Command& (0+255),f,b
  1836  00111E  0E0F               	movlw	15
  1837  001120  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1838  001122  0E01               	movlw	1
  1839  001124  0100               	movlb	0	; () banked
  1840  001126  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1841  001128  0100               	movlb	0	; () banked
  1842  00112A  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1843  00112C  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1844  00112E  5083               	movf	3971,w,c	;volatile
  1845  001130  0100               	movlb	0	; () banked
  1846  001132  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1847  001134  0BFB               	andlw	-5
  1848  001136  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1849  001138  6E83               	movwf	3971,c	;volatile
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;HD44780.c: 137: _delay(10);
  1853  00113A  0E03               	movlw	3
  1854  00113C                     u2127:
  1855  00113C  2EE8               	decfsz	wreg,f,c
  1856  00113E  D7FE               	bra	u2127
  1857  001140  F000               	nop	
  1858                           
  1859                           ;HD44780.c: 138: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  1860  001142  8283               	bsf	3971,1,c	;volatile
  1861  001144  EC28  F00F         	call	_Lcd_Delay5us	;wreg free
  1862  001148  9283               	bcf	3971,1,c	;volatile
  1863                           
  1864                           ;HD44780.c: 139: LATAbits.LA5 = (command & 0b00001000)>>3; LATAbits.LA4 = (command & 0b0
      +                          0000100)>>2;
  1865  00114A  C0C8  F0C6         	movff	Lcd_Command@command,??_Lcd_Command
  1866  00114E  0100               	movlb	0	; () banked
  1867  001150  90D8               	bcf	status,0,c
  1868  001152  33C6               	rrcf	??_Lcd_Command& (0+255),f,b
  1869  001154  0100               	movlb	0	; () banked
  1870  001156  90D8               	bcf	status,0,c
  1871  001158  33C6               	rrcf	??_Lcd_Command& (0+255),f,b
  1872  00115A  0100               	movlb	0	; () banked
  1873  00115C  90D8               	bcf	status,0,c
  1874  00115E  33C6               	rrcf	??_Lcd_Command& (0+255),f,b
  1875  001160  0E01               	movlw	1
  1876  001162  0100               	movlb	0	; () banked
  1877  001164  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1878  001166  0100               	movlb	0	; () banked
  1879  001168  3BC6               	swapf	??_Lcd_Command& (0+255),f,b
  1880  00116A  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1881  00116C  5083               	movf	3971,w,c	;volatile
  1882  00116E  0100               	movlb	0	; () banked
  1883  001170  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1884  001172  0BDF               	andlw	-33
  1885  001174  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1886  001176  6E83               	movwf	3971,c	;volatile
  1887                           
  1888                           ; BSR set to: 0
  1889  001178  C0C8  F0C6         	movff	Lcd_Command@command,??_Lcd_Command
  1890  00117C  0100               	movlb	0	; () banked
  1891  00117E  90D8               	bcf	status,0,c
  1892  001180  33C6               	rrcf	??_Lcd_Command& (0+255),f,b
  1893  001182  0100               	movlb	0	; () banked
  1894  001184  90D8               	bcf	status,0,c
  1895  001186  33C6               	rrcf	??_Lcd_Command& (0+255),f,b
  1896  001188  0E01               	movlw	1
  1897  00118A  0100               	movlb	0	; () banked
  1898  00118C  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1899  00118E  0100               	movlb	0	; () banked
  1900  001190  3BC6               	swapf	??_Lcd_Command& (0+255),f,b
  1901  001192  5083               	movf	3971,w,c	;volatile
  1902  001194  0100               	movlb	0	; () banked
  1903  001196  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1904  001198  0BEF               	andlw	-17
  1905  00119A  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1906  00119C  6E83               	movwf	3971,c	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;HD44780.c: 140: LATAbits.LA3 = (command & 0b00000010)>>1; LATAbits.LA2 = (command & 0b0
      +                          0000001);
  1910  00119E  C0C8  F0C6         	movff	Lcd_Command@command,??_Lcd_Command
  1911  0011A2  0100               	movlb	0	; () banked
  1912  0011A4  90D8               	bcf	status,0,c
  1913  0011A6  33C6               	rrcf	??_Lcd_Command& (0+255),f,b
  1914  0011A8  0E01               	movlw	1
  1915  0011AA  0100               	movlb	0	; () banked
  1916  0011AC  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1917  0011AE  0100               	movlb	0	; () banked
  1918  0011B0  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1919  0011B2  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1920  0011B4  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1921  0011B6  5083               	movf	3971,w,c	;volatile
  1922  0011B8  0100               	movlb	0	; () banked
  1923  0011BA  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1924  0011BC  0BF7               	andlw	-9
  1925  0011BE  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1926  0011C0  6E83               	movwf	3971,c	;volatile
  1927                           
  1928                           ; BSR set to: 0
  1929  0011C2  C0C8  F0C6         	movff	Lcd_Command@command,??_Lcd_Command
  1930  0011C6  0E01               	movlw	1
  1931  0011C8  0100               	movlb	0	; () banked
  1932  0011CA  17C6               	andwf	??_Lcd_Command& (0+255),f,b
  1933  0011CC  0100               	movlb	0	; () banked
  1934  0011CE  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1935  0011D0  47C6               	rlncf	??_Lcd_Command& (0+255),f,b
  1936  0011D2  5083               	movf	3971,w,c	;volatile
  1937  0011D4  0100               	movlb	0	; () banked
  1938  0011D6  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1939  0011D8  0BFB               	andlw	-5
  1940  0011DA  19C6               	xorwf	??_Lcd_Command& (0+255),w,b
  1941  0011DC  6E83               	movwf	3971,c	;volatile
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;HD44780.c: 141: _delay(10);
  1945  0011DE  0E03               	movlw	3
  1946  0011E0                     u2137:
  1947  0011E0  2EE8               	decfsz	wreg,f,c
  1948  0011E2  D7FE               	bra	u2137
  1949  0011E4  F000               	nop	
  1950                           
  1951                           ;HD44780.c: 142: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  1952  0011E6  8283               	bsf	3971,1,c	;volatile
  1953  0011E8  EC28  F00F         	call	_Lcd_Delay5us	;wreg free
  1954  0011EC  9283               	bcf	3971,1,c	;volatile
  1955                           
  1956                           ;HD44780.c: 144: Lcd_Delay5us();
  1957  0011EE  EC28  F00F         	call	_Lcd_Delay5us	;wreg free
  1958  0011F2  0012               	return		;funcret
  1959  0011F4                     __end_of_Lcd_Command:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           intcon	equ	0xFF2
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postdec1	equ	0xFE5
  1969                           plusw1	equ	0xFE3
  1970                           fsr1l	equ	0xFE1
  1971                           plusw2	equ	0xFDB
  1972                           status	equ	0xFD8
  1973                           
  1974 ;; *************** function _Lcd_Delay5us *****************
  1975 ;; Defined at:
  1976 ;;		line 150 in file "libs/HD44780.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		None
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    7
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_Lcd_Init
  2001 ;;		_Lcd_Command
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text12
  2006  001E50                     __ptext12:
  2007                           	opt stack 0
  2008  001E50                     _Lcd_Delay5us:
  2009                           	opt stack 22
  2010                           
  2011                           ;HD44780.c: 151: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2012                           
  2013                           ;incstack = 0
  2014  001E50  D000               	nop2		;2 cycle nop
  2015  001E52  D000               	nop2		;2 cycle nop
  2016  001E54  F000               	nop	
  2017  001E56  0012               	return		;funcret
  2018  001E58                     __end_of_Lcd_Delay5us:
  2019                           	opt stack 0
  2020                           tblptru	equ	0xFF8
  2021                           tblptrh	equ	0xFF7
  2022                           tblptrl	equ	0xFF6
  2023                           tablat	equ	0xFF5
  2024                           intcon	equ	0xFF2
  2025                           postinc0	equ	0xFEE
  2026                           wreg	equ	0xFE8
  2027                           postdec1	equ	0xFE5
  2028                           plusw1	equ	0xFE3
  2029                           fsr1l	equ	0xFE1
  2030                           plusw2	equ	0xFDB
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _INTERRUPT_InterruptManager *****************
  2034 ;; Defined at:
  2035 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2051 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2052 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2053 ;;Total ram usage:       14 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    6
  2056 ;; This function calls:
  2057 ;;		_EUSART1_Receive_ISR
  2058 ;;		_EUSART1_Transmit_ISR
  2059 ;;		_TMR0_ISR
  2060 ;; This function is called by:
  2061 ;;		Interrupt level 2
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	intcode
  2066  000008                     __pintcode:
  2067                           	opt stack 0
  2068  000008                     _INTERRUPT_InterruptManager:
  2069                           	opt stack 21
  2070                           
  2071                           ;incstack = 0
  2072  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2073  00000A  CFFA F032          	movff	pclath,??_INTERRUPT_InterruptManager
  2074  00000E  CFFB F033          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2075  000012  CFE9 F034          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2076  000016  CFEA F035          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2077  00001A  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2078  00001E  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2079  000022  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2080  000026  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2081  00002A  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2082  00002E  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2083  000032  CFF6 F03C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2084  000036  CFF7 F03D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2085  00003A  CFF8 F03E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2086  00003E  CFF5 F03F          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2087                           
  2088                           ;interrupt_manager.c: 60: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  2089  000042  010E               	movlb	14	; () banked
  2090  000044  ABC2               	btfss	194,5,b	;volatile
  2091  000046  D006               	goto	i2l401
  2092                           
  2093                           ; BSR set to: 14
  2094  000048  010E               	movlb	14	; () banked
  2095  00004A  ABCA               	btfss	202,5,b	;volatile
  2096  00004C  D003               	goto	i2l401
  2097                           
  2098                           ; BSR set to: 14
  2099                           ;interrupt_manager.c: 61: {
  2100                           ;interrupt_manager.c: 62: TMR0_ISR();
  2101  00004E  EC1F  F00F         	call	_TMR0_ISR	;wreg free
  2102                           
  2103                           ;interrupt_manager.c: 63: }
  2104  000052  D014               	goto	i2l407
  2105  000054                     i2l401:
  2106                           
  2107                           ; BSR set to: 14
  2108                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE3bits.TX1IE == 1 && PIR3bit
      +                          s.TX1IF == 1)
  2109  000054  ACF2               	btfss	intcon,6,c	;volatile
  2110  000056  D009               	goto	i2l403
  2111                           
  2112                           ; BSR set to: 14
  2113  000058  010E               	movlb	14	; () banked
  2114  00005A  A9C5               	btfss	197,4,b	;volatile
  2115  00005C  D006               	goto	i2l403
  2116                           
  2117                           ; BSR set to: 14
  2118  00005E  010E               	movlb	14	; () banked
  2119  000060  A9CD               	btfss	205,4,b	;volatile
  2120  000062  D003               	goto	i2l403
  2121                           
  2122                           ; BSR set to: 14
  2123                           ;interrupt_manager.c: 65: {
  2124                           ;interrupt_manager.c: 66: EUSART1_Transmit_ISR();
  2125  000064  EC79  F00E         	call	_EUSART1_Transmit_ISR	;wreg free
  2126                           
  2127                           ;interrupt_manager.c: 67: }
  2128  000068  D009               	goto	i2l407
  2129  00006A                     i2l403:
  2130                           
  2131                           ; BSR set to: 14
  2132                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE3bits.RC1IE == 1 && PIR3bit
      +                          s.RC1IF == 1)
  2133  00006A  ACF2               	btfss	intcon,6,c	;volatile
  2134  00006C  D007               	goto	i2l407
  2135                           
  2136                           ; BSR set to: 14
  2137  00006E  010E               	movlb	14	; () banked
  2138  000070  ABC5               	btfss	197,5,b	;volatile
  2139  000072  D004               	goto	i2l407
  2140                           
  2141                           ; BSR set to: 14
  2142  000074  010E               	movlb	14	; () banked
  2143  000076  BBCD               	btfsc	205,5,b	;volatile
  2144                           
  2145                           ; BSR set to: 14
  2146                           ;interrupt_manager.c: 69: {
  2147                           ;interrupt_manager.c: 70: EUSART1_Receive_ISR();
  2148  000078  ECA8  F00E         	call	_EUSART1_Receive_ISR	;wreg free
  2149  00007C                     i2l407:
  2150  00007C  C03F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2151  000080  C03E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2152  000084  C03D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2153  000088  C03C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2154  00008C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2155  000090  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2156  000094  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2157  000098  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2158  00009C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2159  0000A0  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2160  0000A4  C035  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2161  0000A8  C034  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2162  0000AC  C033  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2163  0000B0  C032  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2164  0000B4  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2165  0000B6  0011               	retfie		f
  2166  0000B8                     __end_of_INTERRUPT_InterruptManager:
  2167                           	opt stack 0
  2168                           pclatu	equ	0xFFB
  2169                           pclath	equ	0xFFA
  2170                           tblptru	equ	0xFF8
  2171                           tblptrh	equ	0xFF7
  2172                           tblptrl	equ	0xFF6
  2173                           tablat	equ	0xFF5
  2174                           prodh	equ	0xFF4
  2175                           prodl	equ	0xFF3
  2176                           intcon	equ	0xFF2
  2177                           postinc0	equ	0xFEE
  2178                           fsr0h	equ	0xFEA
  2179                           fsr0l	equ	0xFE9
  2180                           wreg	equ	0xFE8
  2181                           postdec1	equ	0xFE5
  2182                           plusw1	equ	0xFE3
  2183                           fsr1h	equ	0xFE2
  2184                           fsr1l	equ	0xFE1
  2185                           plusw2	equ	0xFDB
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _TMR0_ISR *****************
  2191 ;; Defined at:
  2192 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    5
  2213 ;; This function calls:
  2214 ;;		_TMR0_CallBack
  2215 ;; This function is called by:
  2216 ;;		_INTERRUPT_InterruptManager
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text14
  2221  001E3E                     __ptext14:
  2222                           	opt stack 0
  2223  001E3E                     _TMR0_ISR:
  2224                           	opt stack 21
  2225                           
  2226                           ;tmr0.c: 126: PIR0bits.TMR0IF = 0;
  2227                           
  2228                           ;incstack = 0
  2229  001E3E  010E               	movlb	14	; () banked
  2230  001E40  9BCA               	bcf	202,5,b	;volatile
  2231                           
  2232                           ; BSR set to: 14
  2233                           ;tmr0.c: 129: TMR0_CallBack();
  2234  001E42  ECF7  F00E         	call	_TMR0_CallBack	;wreg free
  2235  001E46  0012               	return		;funcret
  2236  001E48                     __end_of_TMR0_ISR:
  2237                           	opt stack 0
  2238                           pclatu	equ	0xFFB
  2239                           pclath	equ	0xFFA
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           prodh	equ	0xFF4
  2245                           prodl	equ	0xFF3
  2246                           intcon	equ	0xFF2
  2247                           postinc0	equ	0xFEE
  2248                           fsr0h	equ	0xFEA
  2249                           fsr0l	equ	0xFE9
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           plusw1	equ	0xFE3
  2253                           fsr1h	equ	0xFE2
  2254                           fsr1l	equ	0xFE1
  2255                           plusw2	equ	0xFDB
  2256                           fsr2h	equ	0xFDA
  2257                           fsr2l	equ	0xFD9
  2258                           status	equ	0xFD8
  2259                           
  2260 ;; *************** function _TMR0_CallBack *****************
  2261 ;; Defined at:
  2262 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    4
  2283 ;; This function calls:
  2284 ;;		Absolute function
  2285 ;;		_TMR0_DefaultInterruptHandler
  2286 ;;		_Timer_1ms
  2287 ;; This function is called by:
  2288 ;;		_TMR0_ISR
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text15
  2293  001DEE                     __ptext15:
  2294                           	opt stack 0
  2295  001DEE                     _TMR0_CallBack:
  2296                           	opt stack 21
  2297                           
  2298                           ;tmr0.c: 138: if(TMR0_InterruptHandler)
  2299                           
  2300                           ;incstack = 0
  2301  001DEE  5048               	movf	_TMR0_InterruptHandler,w,c
  2302  001DF0  1049               	iorwf	_TMR0_InterruptHandler+1,w,c
  2303  001DF2  B4D8               	btfsc	status,2,c
  2304  001DF4  0012               	return	
  2305                           
  2306                           ;tmr0.c: 139: {
  2307                           ;tmr0.c: 140: TMR0_InterruptHandler();
  2308  001DF6  D801               	call	i2u179_48
  2309  001DF8  0012               	return	
  2310  001DFA                     i2u179_48:
  2311  001DFA  0005               	push	
  2312  001DFC  6EFA               	movwf	pclath,c
  2313  001DFE  5048               	movf	_TMR0_InterruptHandler,w,c
  2314  001E00  6EFD               	movwf	tosl,c
  2315  001E02  5049               	movf	_TMR0_InterruptHandler+1,w,c
  2316  001E04  6EFE               	movwf	tosh,c
  2317  001E06  6AFF               	clrf	tosu,c
  2318  001E08  50FA               	movf	pclath,w,c
  2319  001E0A  0012               	return		;indir
  2320  001E0C                     __end_of_TMR0_CallBack:
  2321                           	opt stack 0
  2322                           tosu	equ	0xFFF
  2323                           tosh	equ	0xFFE
  2324                           tosl	equ	0xFFD
  2325                           pclatu	equ	0xFFB
  2326                           pclath	equ	0xFFA
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           prodh	equ	0xFF4
  2332                           prodl	equ	0xFF3
  2333                           intcon	equ	0xFF2
  2334                           postinc0	equ	0xFEE
  2335                           fsr0h	equ	0xFEA
  2336                           fsr0l	equ	0xFE9
  2337                           wreg	equ	0xFE8
  2338                           postdec1	equ	0xFE5
  2339                           plusw1	equ	0xFE3
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           plusw2	equ	0xFDB
  2343                           fsr2h	equ	0xFDA
  2344                           fsr2l	equ	0xFD9
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2348 ;; Defined at:
  2349 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		None
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;Total ram usage:        0 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_TMR0_Initialize
  2373 ;;		_TMR0_CallBack
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text16
  2378  001E68                     __ptext16:
  2379                           	opt stack 0
  2380  001E68                     _TMR0_DefaultInterruptHandler:
  2381                           	opt stack 24
  2382                           
  2383                           ;incstack = 0
  2384  001E68  0012               	return		;funcret
  2385  001E6A                     __end_of_TMR0_DefaultInterruptHandler:
  2386                           	opt stack 0
  2387                           tosu	equ	0xFFF
  2388                           tosh	equ	0xFFE
  2389                           tosl	equ	0xFFD
  2390                           pclatu	equ	0xFFB
  2391                           pclath	equ	0xFFA
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           intcon	equ	0xFF2
  2399                           postinc0	equ	0xFEE
  2400                           fsr0h	equ	0xFEA
  2401                           fsr0l	equ	0xFE9
  2402                           wreg	equ	0xFE8
  2403                           postdec1	equ	0xFE5
  2404                           plusw1	equ	0xFE3
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           plusw2	equ	0xFDB
  2408                           fsr2h	equ	0xFDA
  2409                           fsr2l	equ	0xFD9
  2410                           status	equ	0xFD8
  2411                           
  2412 ;; *************** function _Timer_1ms *****************
  2413 ;; Defined at:
  2414 ;;		line 3 in file "libs/projMain.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  Date            7   42[COMRAM] unsigned char [7]
  2419 ;;  Time            7   35[COMRAM] unsigned char [7]
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2430 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2432 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2433 ;;Total ram usage:       14 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    3
  2436 ;; This function calls:
  2437 ;;		_GetDay
  2438 ;;		_Lcd_Int
  2439 ;;		_Lcd_Text
  2440 ;;		_ReadDateTimeFromBuffer
  2441 ;;		_ReadTimeFromBuffer
  2442 ;;		_ValidateDateTime
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;;		_TMR0_CallBack
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text17
  2450  001772                     __ptext17:
  2451                           	opt stack 0
  2452  001772                     _Timer_1ms:
  2453                           	opt stack 21
  2454                           
  2455                           ;projMain.c: 5: GLOBAL_I++;
  2456                           
  2457                           ;incstack = 0
  2458  001772  4A4C               	infsnz	_GLOBAL_I,f,c
  2459  001774  2A4D               	incf	_GLOBAL_I+1,f,c
  2460                           
  2461                           ;projMain.c: 6: if (GLOBAL_I==1000) {
  2462  001776  0EE8               	movlw	232
  2463  001778  184C               	xorwf	_GLOBAL_I,w,c
  2464  00177A  E10B               	bnz	i2l462
  2465  00177C  0E03               	movlw	3
  2466  00177E  184D               	xorwf	_GLOBAL_I+1,w,c
  2467  001780  A4D8               	btfss	status,2,c
  2468  001782  D007               	goto	i2l462
  2469                           
  2470                           ;projMain.c: 7: GLOBAL_I -= 1000;
  2471  001784  0E18               	movlw	24
  2472  001786  264C               	addwf	_GLOBAL_I,f,c
  2473  001788  0EFC               	movlw	252
  2474  00178A  224D               	addwfc	_GLOBAL_I+1,f,c
  2475                           
  2476                           ;projMain.c: 8: LATB ^= 0xFF;
  2477  00178C  0EFF               	movlw	255
  2478  00178E  1A84               	xorwf	3972,f,c	;volatile
  2479                           
  2480                           ;projMain.c: 9: (INTCONbits.PEIE = 1);
  2481  001790  8CF2               	bsf	intcon,6,c	;volatile
  2482  001792                     i2l462:
  2483                           
  2484                           ;projMain.c: 10: }
  2485                           ;projMain.c: 11: if (eusart1RxCount>63) {
  2486  001792  0E3F               	movlw	63
  2487  001794  644E               	cpfsgt	_eusart1RxCount,c	;volatile
  2488  001796  0012               	return	
  2489                           
  2490                           ;projMain.c: 15: char Date[] = "------";
  2491  001798  EE20  F054         	lfsr	2,Timer_1ms@F11309
  2492  00179C  EE10  F02B         	lfsr	1,Timer_1ms@Date
  2493  0017A0  0E06               	movlw	6
  2494  0017A2                     i2u169_41:
  2495  0017A2  CFDB FFE3          	movff	plusw2,plusw1
  2496  0017A6  06E8               	decf	wreg,f,c
  2497  0017A8  E2FC               	bc	i2u169_41
  2498                           
  2499                           ;projMain.c: 16: char Time[] = "------";
  2500  0017AA  EE20  F0B8         	lfsr	2,Timer_1ms@F11311
  2501  0017AE  EE10  F024         	lfsr	1,Timer_1ms@Time
  2502  0017B2  0E06               	movlw	6
  2503  0017B4                     i2u170_41:
  2504  0017B4  CFDB FFE3          	movff	plusw2,plusw1
  2505  0017B8  06E8               	decf	wreg,f,c
  2506  0017BA  E2FC               	bc	i2u170_41
  2507                           
  2508                           ;projMain.c: 17: Lcd_Int(1, 1, eusart1RxCount, 3);
  2509  0017BC  0E01               	movlw	1
  2510  0017BE  6E1D               	movwf	Lcd_Int@x,c
  2511  0017C0  C04E  F01E         	movff	_eusart1RxCount,Lcd_Int@val	;volatile
  2512  0017C4  0E03               	movlw	3
  2513  0017C6  6E1F               	movwf	Lcd_Int@size,c
  2514  0017C8  0E01               	movlw	1
  2515  0017CA  EC3F  F00B         	call	_Lcd_Int
  2516                           
  2517                           ;projMain.c: 18: ReadDateTimeFromBuffer(Date, Time);
  2518  0017CE  0E2B               	movlw	low Timer_1ms@Date
  2519  0017D0  6E01               	movwf	ReadDateTimeFromBuffer@Date,c
  2520  0017D2  0E00               	movlw	high Timer_1ms@Date
  2521  0017D4  6E02               	movwf	ReadDateTimeFromBuffer@Date+1,c
  2522  0017D6  0E24               	movlw	low Timer_1ms@Time
  2523  0017D8  6E03               	movwf	ReadDateTimeFromBuffer@Time,c
  2524  0017DA  0E00               	movlw	high Timer_1ms@Time
  2525  0017DC  6E04               	movwf	ReadDateTimeFromBuffer@Time+1,c
  2526  0017DE  EC94  F009         	call	_ReadDateTimeFromBuffer	;wreg free
  2527                           
  2528                           ;projMain.c: 19: if (ValidateDateTime(Date, Time)) {
  2529  0017E2  0E2B               	movlw	low Timer_1ms@Date
  2530  0017E4  6E01               	movwf	ValidateDateTime@Date,c
  2531  0017E6  0E00               	movlw	high Timer_1ms@Date
  2532  0017E8  6E02               	movwf	ValidateDateTime@Date+1,c
  2533  0017EA  0E24               	movlw	low Timer_1ms@Time
  2534  0017EC  6E03               	movwf	ValidateDateTime@Time,c
  2535  0017EE  0E00               	movlw	high Timer_1ms@Time
  2536  0017F0  6E04               	movwf	ValidateDateTime@Time+1,c
  2537  0017F2  ECFA  F008         	call	_ValidateDateTime	;wreg free
  2538  0017F6  0900               	iorlw	0
  2539  0017F8  B4D8               	btfsc	status,2,c
  2540  0017FA  D026               	goto	i2l2341
  2541                           
  2542                           ;projMain.c: 20: Lcd_Text(2,1, Time);
  2543  0017FC  0E01               	movlw	1
  2544  0017FE  6E04               	movwf	Lcd_Text@x,c
  2545  001800  0E24               	movlw	low Timer_1ms@Time
  2546  001802  6E05               	movwf	Lcd_Text@buffer,c
  2547  001804  0E00               	movlw	high Timer_1ms@Time
  2548  001806  6E06               	movwf	Lcd_Text@buffer+1,c
  2549  001808  0E02               	movlw	2
  2550  00180A  ECE9  F00D         	call	_Lcd_Text
  2551                           
  2552                           ;projMain.c: 21: ReadTimeFromBuffer(Time);
  2553  00180E  0E24               	movlw	low Timer_1ms@Time
  2554  001810  6E01               	movwf	ReadTimeFromBuffer@Output,c
  2555  001812  0E00               	movlw	high Timer_1ms@Time
  2556  001814  6E02               	movwf	ReadTimeFromBuffer@Output+1,c
  2557  001816  EC98  F00C         	call	_ReadTimeFromBuffer	;wreg free
  2558                           
  2559                           ;projMain.c: 22: Lcd_Text(2,8, Date);
  2560  00181A  0E08               	movlw	8
  2561  00181C  6E04               	movwf	Lcd_Text@x,c
  2562  00181E  0E2B               	movlw	low Timer_1ms@Date
  2563  001820  6E05               	movwf	Lcd_Text@buffer,c
  2564  001822  0E00               	movlw	high Timer_1ms@Date
  2565  001824  6E06               	movwf	Lcd_Text@buffer+1,c
  2566  001826  0E02               	movlw	2
  2567  001828  ECE9  F00D         	call	_Lcd_Text
  2568                           
  2569                           ;projMain.c: 23: Lcd_Int(1, 5, GetDay(Date), 3);
  2570  00182C  0E05               	movlw	5
  2571  00182E  6E1D               	movwf	Lcd_Int@x,c
  2572  001830  0E2B               	movlw	low Timer_1ms@Date
  2573  001832  6E0F               	movwf	GetDay@Date,c
  2574  001834  0E00               	movlw	high Timer_1ms@Date
  2575  001836  6E10               	movwf	GetDay@Date+1,c
  2576  001838  EC8C  F007         	call	_GetDay	;wreg free
  2577  00183C  6E1E               	movwf	Lcd_Int@val,c
  2578  00183E  0E03               	movlw	3
  2579  001840  6E1F               	movwf	Lcd_Int@size,c
  2580  001842  0E01               	movlw	1
  2581  001844  EC3F  F00B         	call	_Lcd_Int
  2582  001848                     i2l2341:
  2583                           
  2584                           ;projMain.c: 24: }
  2585                           ;projMain.c: 25: (INTCONbits.PEIE = 0);
  2586  001848  9CF2               	bcf	intcon,6,c	;volatile
  2587                           
  2588                           ;projMain.c: 26: eusart1RxCount=0;
  2589  00184A  0E00               	movlw	0
  2590  00184C  6E4E               	movwf	_eusart1RxCount,c	;volatile
  2591                           
  2592                           ;projMain.c: 27: GLOBAL_USARTSIZE = 0;
  2593  00184E  0E00               	movlw	0
  2594  001850  6E4B               	movwf	_GLOBAL_USARTSIZE+1,c
  2595  001852  0E00               	movlw	0
  2596  001854  6E4A               	movwf	_GLOBAL_USARTSIZE,c
  2597  001856  0012               	return	
  2598  001858                     __end_of_Timer_1ms:
  2599                           	opt stack 0
  2600                           tosu	equ	0xFFF
  2601                           tosh	equ	0xFFE
  2602                           tosl	equ	0xFFD
  2603                           pclatu	equ	0xFFB
  2604                           pclath	equ	0xFFA
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           intcon	equ	0xFF2
  2612                           postinc0	equ	0xFEE
  2613                           fsr0h	equ	0xFEA
  2614                           fsr0l	equ	0xFE9
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           plusw1	equ	0xFE3
  2618                           fsr1h	equ	0xFE2
  2619                           fsr1l	equ	0xFE1
  2620                           plusw2	equ	0xFDB
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _ValidateDateTime *****************
  2626 ;; Defined at:
  2627 ;;		line 89 in file "libs/gps.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  Date            2    0[COMRAM] PTR unsigned char 
  2630 ;;		 -> Timer_1ms@Date(7), 
  2631 ;;  Time            2    2[COMRAM] PTR unsigned char 
  2632 ;;		 -> Timer_1ms@Time(7), 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  Item            1    5[COMRAM] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      enum E11045
  2637 ;; Registers used:
  2638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2647 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2648 ;;Total ram usage:        6 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_Timer_1ms
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text18
  2658  0011F4                     __ptext18:
  2659                           	opt stack 0
  2660  0011F4                     _ValidateDateTime:
  2661                           	opt stack 23
  2662                           
  2663                           ;gps.c: 97: UINT8 Item = (Date[0]-0x30)*10 + (Date[1]-0x30);
  2664                           
  2665                           ;incstack = 0
  2666  0011F4  EE20 F001          	lfsr	2,1
  2667  0011F8  5001               	movf	ValidateDateTime@Date,w,c
  2668  0011FA  26D9               	addwf	fsr2l,f,c
  2669  0011FC  5002               	movf	ValidateDateTime@Date+1,w,c
  2670  0011FE  22DA               	addwfc	fsr2h,f,c
  2671  001200  50DF               	movf	indf2,w,c
  2672  001202  6E05               	movwf	??_ValidateDateTime& (0+255),c
  2673  001204  C001  FFD9         	movff	ValidateDateTime@Date,fsr2l
  2674  001208  C002  FFDA         	movff	ValidateDateTime@Date+1,fsr2h
  2675  00120C  50DF               	movf	indf2,w,c
  2676  00120E  0FD0               	addlw	208
  2677  001210  0D0A               	mullw	10
  2678  001212  50F3               	movf	prodl,w,c
  2679  001214  2405               	addwf	??_ValidateDateTime,w,c
  2680  001216  0FD0               	addlw	208
  2681  001218  6E06               	movwf	ValidateDateTime@Item,c
  2682                           
  2683                           ;gps.c: 98: if (Item>31) return 0;
  2684  00121A  0E1F               	movlw	31
  2685  00121C  6406               	cpfsgt	ValidateDateTime@Item,c
  2686  00121E  D002               	goto	i2l2267
  2687  001220  0E00               	movlw	0
  2688  001222  0012               	return	
  2689  001224                     i2l2267:
  2690                           
  2691                           ;gps.c: 99: Item = (Date[2]-0x30)*10 + (Date[3]-0x30);
  2692  001224  EE20 F003          	lfsr	2,3
  2693  001228  5001               	movf	ValidateDateTime@Date,w,c
  2694  00122A  26D9               	addwf	fsr2l,f,c
  2695  00122C  5002               	movf	ValidateDateTime@Date+1,w,c
  2696  00122E  22DA               	addwfc	fsr2h,f,c
  2697  001230  50DF               	movf	indf2,w,c
  2698  001232  6E05               	movwf	??_ValidateDateTime& (0+255),c
  2699  001234  EE20 F002          	lfsr	2,2
  2700  001238  5001               	movf	ValidateDateTime@Date,w,c
  2701  00123A  26D9               	addwf	fsr2l,f,c
  2702  00123C  5002               	movf	ValidateDateTime@Date+1,w,c
  2703  00123E  22DA               	addwfc	fsr2h,f,c
  2704  001240  50DF               	movf	indf2,w,c
  2705  001242  0FD0               	addlw	208
  2706  001244  0D0A               	mullw	10
  2707  001246  50F3               	movf	prodl,w,c
  2708  001248  2405               	addwf	??_ValidateDateTime,w,c
  2709  00124A  0FD0               	addlw	208
  2710  00124C  6E06               	movwf	ValidateDateTime@Item,c
  2711                           
  2712                           ;gps.c: 100: if (Item>12) return 0;
  2713  00124E  0E0C               	movlw	12
  2714  001250  6406               	cpfsgt	ValidateDateTime@Item,c
  2715  001252  D002               	goto	i2l2275
  2716  001254  0E00               	movlw	0
  2717  001256  0012               	return	
  2718  001258                     i2l2275:
  2719                           
  2720                           ;gps.c: 101: Item = (Date[4]-0x30)*10 + (Date[5]-0x30);
  2721  001258  EE20 F005          	lfsr	2,5
  2722  00125C  5001               	movf	ValidateDateTime@Date,w,c
  2723  00125E  26D9               	addwf	fsr2l,f,c
  2724  001260  5002               	movf	ValidateDateTime@Date+1,w,c
  2725  001262  22DA               	addwfc	fsr2h,f,c
  2726  001264  50DF               	movf	indf2,w,c
  2727  001266  6E05               	movwf	??_ValidateDateTime& (0+255),c
  2728  001268  EE20 F004          	lfsr	2,4
  2729  00126C  5001               	movf	ValidateDateTime@Date,w,c
  2730  00126E  26D9               	addwf	fsr2l,f,c
  2731  001270  5002               	movf	ValidateDateTime@Date+1,w,c
  2732  001272  22DA               	addwfc	fsr2h,f,c
  2733  001274  50DF               	movf	indf2,w,c
  2734  001276  0FD0               	addlw	208
  2735  001278  0D0A               	mullw	10
  2736  00127A  50F3               	movf	prodl,w,c
  2737  00127C  2405               	addwf	??_ValidateDateTime,w,c
  2738  00127E  0FD0               	addlw	208
  2739  001280  6E06               	movwf	ValidateDateTime@Item,c
  2740                           
  2741                           ;gps.c: 102: if (Item>99) return 0;
  2742  001282  0E63               	movlw	99
  2743  001284  6406               	cpfsgt	ValidateDateTime@Item,c
  2744  001286  D002               	goto	i2l2283
  2745  001288  0E00               	movlw	0
  2746  00128A  0012               	return	
  2747  00128C                     i2l2283:
  2748                           
  2749                           ;gps.c: 104: Item = (Time[0]-0x30)*10 + (Time[1]-0x30);
  2750  00128C  EE20 F001          	lfsr	2,1
  2751  001290  5003               	movf	ValidateDateTime@Time,w,c
  2752  001292  26D9               	addwf	fsr2l,f,c
  2753  001294  5004               	movf	ValidateDateTime@Time+1,w,c
  2754  001296  22DA               	addwfc	fsr2h,f,c
  2755  001298  50DF               	movf	indf2,w,c
  2756  00129A  6E05               	movwf	??_ValidateDateTime& (0+255),c
  2757  00129C  C003  FFD9         	movff	ValidateDateTime@Time,fsr2l
  2758  0012A0  C004  FFDA         	movff	ValidateDateTime@Time+1,fsr2h
  2759  0012A4  50DF               	movf	indf2,w,c
  2760  0012A6  0FD0               	addlw	208
  2761  0012A8  0D0A               	mullw	10
  2762  0012AA  50F3               	movf	prodl,w,c
  2763  0012AC  2405               	addwf	??_ValidateDateTime,w,c
  2764  0012AE  0FD0               	addlw	208
  2765  0012B0  6E06               	movwf	ValidateDateTime@Item,c
  2766                           
  2767                           ;gps.c: 105: if (Item>23) return 0;
  2768  0012B2  0E17               	movlw	23
  2769  0012B4  6406               	cpfsgt	ValidateDateTime@Item,c
  2770  0012B6  D002               	goto	i2l2291
  2771  0012B8  0E00               	movlw	0
  2772  0012BA  0012               	return	
  2773  0012BC                     i2l2291:
  2774                           
  2775                           ;gps.c: 106: Item = (Time[2]-0x30)*10 + (Time[3]-0x30);
  2776  0012BC  EE20 F003          	lfsr	2,3
  2777  0012C0  5003               	movf	ValidateDateTime@Time,w,c
  2778  0012C2  26D9               	addwf	fsr2l,f,c
  2779  0012C4  5004               	movf	ValidateDateTime@Time+1,w,c
  2780  0012C6  22DA               	addwfc	fsr2h,f,c
  2781  0012C8  50DF               	movf	indf2,w,c
  2782  0012CA  6E05               	movwf	??_ValidateDateTime& (0+255),c
  2783  0012CC  EE20 F002          	lfsr	2,2
  2784  0012D0  5003               	movf	ValidateDateTime@Time,w,c
  2785  0012D2  26D9               	addwf	fsr2l,f,c
  2786  0012D4  5004               	movf	ValidateDateTime@Time+1,w,c
  2787  0012D6  22DA               	addwfc	fsr2h,f,c
  2788  0012D8  50DF               	movf	indf2,w,c
  2789  0012DA  0FD0               	addlw	208
  2790  0012DC  0D0A               	mullw	10
  2791  0012DE  50F3               	movf	prodl,w,c
  2792  0012E0  2405               	addwf	??_ValidateDateTime,w,c
  2793  0012E2  0FD0               	addlw	208
  2794  0012E4  6E06               	movwf	ValidateDateTime@Item,c
  2795                           
  2796                           ;gps.c: 107: if (Item>59) return 0;
  2797  0012E6  0E3B               	movlw	59
  2798  0012E8  6406               	cpfsgt	ValidateDateTime@Item,c
  2799  0012EA  D002               	goto	i2l2299
  2800  0012EC  0E00               	movlw	0
  2801  0012EE  0012               	return	
  2802  0012F0                     i2l2299:
  2803                           
  2804                           ;gps.c: 108: Item = (Time[4]-0x30)*10 + (Time[5]-0x30);
  2805  0012F0  EE20 F005          	lfsr	2,5
  2806  0012F4  5003               	movf	ValidateDateTime@Time,w,c
  2807  0012F6  26D9               	addwf	fsr2l,f,c
  2808  0012F8  5004               	movf	ValidateDateTime@Time+1,w,c
  2809  0012FA  22DA               	addwfc	fsr2h,f,c
  2810  0012FC  50DF               	movf	indf2,w,c
  2811  0012FE  6E05               	movwf	??_ValidateDateTime& (0+255),c
  2812  001300  EE20 F004          	lfsr	2,4
  2813  001304  5003               	movf	ValidateDateTime@Time,w,c
  2814  001306  26D9               	addwf	fsr2l,f,c
  2815  001308  5004               	movf	ValidateDateTime@Time+1,w,c
  2816  00130A  22DA               	addwfc	fsr2h,f,c
  2817  00130C  50DF               	movf	indf2,w,c
  2818  00130E  0FD0               	addlw	208
  2819  001310  0D0A               	mullw	10
  2820  001312  50F3               	movf	prodl,w,c
  2821  001314  2405               	addwf	??_ValidateDateTime,w,c
  2822  001316  0FD0               	addlw	208
  2823  001318  6E06               	movwf	ValidateDateTime@Item,c
  2824                           
  2825                           ;gps.c: 109: if (Item>59) return 0;
  2826  00131A  0E3B               	movlw	59
  2827  00131C  6406               	cpfsgt	ValidateDateTime@Item,c
  2828  00131E  D002               	goto	i2l2307
  2829  001320  0E00               	movlw	0
  2830  001322  0012               	return	
  2831  001324                     i2l2307:
  2832                           
  2833                           ;gps.c: 111: return 1;
  2834  001324  0E01               	movlw	1
  2835  001326  0012               	return	
  2836  001328                     __end_of_ValidateDateTime:
  2837                           	opt stack 0
  2838                           tosu	equ	0xFFF
  2839                           tosh	equ	0xFFE
  2840                           tosl	equ	0xFFD
  2841                           pclatu	equ	0xFFB
  2842                           pclath	equ	0xFFA
  2843                           tblptru	equ	0xFF8
  2844                           tblptrh	equ	0xFF7
  2845                           tblptrl	equ	0xFF6
  2846                           tablat	equ	0xFF5
  2847                           prodh	equ	0xFF4
  2848                           prodl	equ	0xFF3
  2849                           intcon	equ	0xFF2
  2850                           postinc0	equ	0xFEE
  2851                           fsr0h	equ	0xFEA
  2852                           fsr0l	equ	0xFE9
  2853                           wreg	equ	0xFE8
  2854                           postdec1	equ	0xFE5
  2855                           plusw1	equ	0xFE3
  2856                           fsr1h	equ	0xFE2
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           plusw2	equ	0xFDB
  2860                           fsr2h	equ	0xFDA
  2861                           fsr2l	equ	0xFD9
  2862                           status	equ	0xFD8
  2863                           
  2864 ;; *************** function _ReadTimeFromBuffer *****************
  2865 ;; Defined at:
  2866 ;;		line 23 in file "libs/gps.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  Output          2    0[COMRAM] PTR unsigned char 
  2869 ;;		 -> Timer_1ms@Time(7), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  i               2   14[COMRAM] int 
  2872 ;;  StartCode       7    6[COMRAM] const unsigned char [7]
  2873 ;;  Pos             1   16[COMRAM] unsigned char 
  2874 ;;  TempChar        1   13[COMRAM] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2885 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;Total ram usage:       17 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_Timer_1ms
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text19
  2898  001930                     __ptext19:
  2899                           	opt stack 0
  2900  001930                     _ReadTimeFromBuffer:
  2901                           	opt stack 23
  2902                           
  2903                           ;gps.c: 26: const char StartCode[7]="$GPRMC,";
  2904                           
  2905                           ;incstack = 0
  2906  001930  0E08               	movlw	low ReadTimeFromBuffer@F11315
  2907  001932  6EF6               	movwf	tblptrl,c
  2908  001934                     	if	1	;There is more than 1 active tblptr byte
  2909  001934  0E0F               	movlw	high ReadTimeFromBuffer@F11315
  2910  001936  6EF7               	movwf	tblptrh,c
  2911  001938                     	endif
  2912  001938                     	if	1	;There are 3 active tblptr bytes
  2913  001938  0E00               	movlw	low (ReadTimeFromBuffer@F11315 shr (0+16))
  2914  00193A  6EF8               	movwf	tblptru,c
  2915  00193C                     	endif
  2916  00193C  EE20  F007         	lfsr	2,ReadTimeFromBuffer@StartCode
  2917  001940  0E06               	movlw	6
  2918  001942                     i2u138_40:
  2919  001942  0009               	tblrd		*+
  2920  001944  CFF5 FFDE          	movff	tablat,postinc2
  2921  001948  06E8               	decf	wreg,f,c
  2922  00194A  E2FB               	bc	i2u138_40
  2923                           
  2924                           ;gps.c: 27: char Pos=0x00;
  2925  00194C  0E00               	movlw	0
  2926  00194E  6E11               	movwf	ReadTimeFromBuffer@Pos,c
  2927                           
  2928                           ;gps.c: 28: char TempChar = 0x00;
  2929  001950  0E00               	movlw	0
  2930  001952  6E0E               	movwf	ReadTimeFromBuffer@TempChar,c
  2931                           
  2932                           ;gps.c: 29: for(INT i=0; i<64; i++) {
  2933  001954  0E00               	movlw	0
  2934  001956  6E10               	movwf	ReadTimeFromBuffer@i+1,c
  2935  001958  0E00               	movlw	0
  2936  00195A  6E0F               	movwf	ReadTimeFromBuffer@i,c
  2937  00195C                     i2l2153:
  2938  00195C  BE10               	btfsc	ReadTimeFromBuffer@i+1,7,c
  2939  00195E  D006               	goto	i2l2157
  2940  001960  5010               	movf	ReadTimeFromBuffer@i+1,w,c
  2941  001962  E140               	bnz	i2l137
  2942  001964  0E40               	movlw	64
  2943  001966  5C0F               	subwf	ReadTimeFromBuffer@i,w,c
  2944  001968  B0D8               	btfsc	status,0,c
  2945  00196A  0012               	return	
  2946  00196C                     i2l2157:
  2947                           
  2948                           ;gps.c: 31: TempChar = eusart1RxBuffer[i];
  2949  00196C  0E60               	movlw	low _eusart1RxBuffer
  2950  00196E  240F               	addwf	ReadTimeFromBuffer@i,w,c
  2951  001970  6ED9               	movwf	fsr2l,c
  2952  001972  0E00               	movlw	high _eusart1RxBuffer
  2953  001974  2010               	addwfc	ReadTimeFromBuffer@i+1,w,c
  2954  001976  6EDA               	movwf	fsr2h,c
  2955  001978  50DF               	movf	indf2,w,c
  2956  00197A  6E0E               	movwf	ReadTimeFromBuffer@TempChar,c
  2957                           
  2958                           ;gps.c: 32: if ((Pos>=0x07) & (Pos<=0x0c)) {
  2959  00197C  0E06               	movlw	6
  2960  00197E  6411               	cpfsgt	ReadTimeFromBuffer@Pos,c
  2961  001980  D017               	goto	i2l2167
  2962  001982  0E0D               	movlw	13
  2963  001984  6011               	cpfslt	ReadTimeFromBuffer@Pos,c
  2964  001986  D014               	goto	i2l2167
  2965                           
  2966                           ;gps.c: 33: Output[Pos-0x07]= TempChar;
  2967  001988  0EF9               	movlw	249
  2968  00198A  6E03               	movwf	??_ReadTimeFromBuffer& (0+255),c
  2969  00198C  0EFF               	movlw	255
  2970  00198E  6E04               	movwf	(??_ReadTimeFromBuffer+1)& (0+255),c
  2971  001990  5011               	movf	ReadTimeFromBuffer@Pos,w,c
  2972  001992  6E05               	movwf	(??_ReadTimeFromBuffer+2)& (0+255),c
  2973  001994  6A06               	clrf	(??_ReadTimeFromBuffer+3)& (0+255),c
  2974  001996  5003               	movf	??_ReadTimeFromBuffer,w,c
  2975  001998  2605               	addwf	??_ReadTimeFromBuffer+2,f,c
  2976  00199A  5004               	movf	??_ReadTimeFromBuffer+1,w,c
  2977  00199C  2206               	addwfc	??_ReadTimeFromBuffer+3,f,c
  2978  00199E  5005               	movf	??_ReadTimeFromBuffer+2,w,c
  2979  0019A0  2401               	addwf	ReadTimeFromBuffer@Output,w,c
  2980  0019A2  6ED9               	movwf	fsr2l,c
  2981  0019A4  5006               	movf	??_ReadTimeFromBuffer+3,w,c
  2982  0019A6  2002               	addwfc	ReadTimeFromBuffer@Output+1,w,c
  2983  0019A8  6EDA               	movwf	fsr2h,c
  2984  0019AA  C00E  FFDF         	movff	ReadTimeFromBuffer@TempChar,indf2
  2985  0019AE  D00F               	goto	i2l2171
  2986  0019B0                     i2l2167:
  2987  0019B0  5011               	movf	ReadTimeFromBuffer@Pos,w,c
  2988  0019B2  0D01               	mullw	1
  2989  0019B4  0E07               	movlw	low ReadTimeFromBuffer@StartCode
  2990  0019B6  24F3               	addwf	prodl,w,c
  2991  0019B8  6ED9               	movwf	fsr2l,c
  2992  0019BA  0E00               	movlw	high ReadTimeFromBuffer@StartCode
  2993  0019BC  20F4               	addwfc	prodh,w,c
  2994  0019BE  6EDA               	movwf	fsr2h,c
  2995  0019C0  500E               	movf	ReadTimeFromBuffer@TempChar,w,c
  2996  0019C2  18DE               	xorwf	postinc2,w,c
  2997  0019C4  A4D8               	btfss	status,2,c
  2998  0019C6  D005               	goto	i2l2173
  2999  0019C8  0E07               	movlw	7
  3000  0019CA  6011               	cpfslt	ReadTimeFromBuffer@Pos,c
  3001  0019CC  D002               	goto	i2l2173
  3002  0019CE                     i2l2171:
  3003                           
  3004                           ;gps.c: 36: Pos++;
  3005  0019CE  2A11               	incf	ReadTimeFromBuffer@Pos,f,c
  3006                           
  3007                           ;gps.c: 37: } else if (Pos>0x0c)
  3008  0019D0  D006               	goto	i2l2181
  3009  0019D2                     i2l2173:
  3010  0019D2  0E0C               	movlw	12
  3011  0019D4  6411               	cpfsgt	ReadTimeFromBuffer@Pos,c
  3012  0019D6  D001               	goto	i2l2179
  3013  0019D8  0012               	return	
  3014  0019DA                     i2l2179:
  3015                           
  3016                           ;gps.c: 39: else
  3017                           ;gps.c: 40: Pos=0;
  3018  0019DA  0E00               	movlw	0
  3019  0019DC  6E11               	movwf	ReadTimeFromBuffer@Pos,c
  3020  0019DE                     i2l2181:
  3021  0019DE  4A0F               	infsnz	ReadTimeFromBuffer@i,f,c
  3022  0019E0  2A10               	incf	ReadTimeFromBuffer@i+1,f,c
  3023  0019E2  D7BC               	goto	i2l2153
  3024  0019E4                     i2l137:
  3025  0019E4  0012               	return		;funcret
  3026  0019E6                     __end_of_ReadTimeFromBuffer:
  3027                           	opt stack 0
  3028                           tosu	equ	0xFFF
  3029                           tosh	equ	0xFFE
  3030                           tosl	equ	0xFFD
  3031                           pclatu	equ	0xFFB
  3032                           pclath	equ	0xFFA
  3033                           tblptru	equ	0xFF8
  3034                           tblptrh	equ	0xFF7
  3035                           tblptrl	equ	0xFF6
  3036                           tablat	equ	0xFF5
  3037                           prodh	equ	0xFF4
  3038                           prodl	equ	0xFF3
  3039                           intcon	equ	0xFF2
  3040                           postinc0	equ	0xFEE
  3041                           fsr0h	equ	0xFEA
  3042                           fsr0l	equ	0xFE9
  3043                           wreg	equ	0xFE8
  3044                           postdec1	equ	0xFE5
  3045                           plusw1	equ	0xFE3
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           postinc2	equ	0xFDE
  3050                           plusw2	equ	0xFDB
  3051                           fsr2h	equ	0xFDA
  3052                           fsr2l	equ	0xFD9
  3053                           status	equ	0xFD8
  3054                           
  3055 ;; *************** function _ReadDateTimeFromBuffer *****************
  3056 ;; Defined at:
  3057 ;;		line 44 in file "libs/gps.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  Date            2    0[COMRAM] PTR unsigned char 
  3060 ;;		 -> Timer_1ms@Date(7), 
  3061 ;;  Time            2    2[COMRAM] PTR unsigned char 
  3062 ;;		 -> Timer_1ms@Time(7), 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  StartCode       7    8[COMRAM] const unsigned char [7]
  3065 ;;  i               2   17[COMRAM] int 
  3066 ;;  Pos             1   19[COMRAM] unsigned char 
  3067 ;;  TempChar        1   16[COMRAM] unsigned char 
  3068 ;;  Commas          1   15[COMRAM] unsigned char 
  3069 ;;  day             1    0        unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3080 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3081 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3082 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;Total ram usage:       20 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_Timer_1ms
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text20
  3093  001328                     __ptext20:
  3094                           	opt stack 0
  3095  001328                     _ReadDateTimeFromBuffer:
  3096                           	opt stack 23
  3097                           
  3098                           ;gps.c: 45: char day;
  3099                           ;gps.c: 46: const char StartCode[7]="$GPRMC,";
  3100                           
  3101                           ;incstack = 0
  3102  001328  0E01               	movlw	low ReadDateTimeFromBuffer@F11323
  3103  00132A  6EF6               	movwf	tblptrl,c
  3104  00132C                     	if	1	;There is more than 1 active tblptr byte
  3105  00132C  0E0F               	movlw	high ReadDateTimeFromBuffer@F11323
  3106  00132E  6EF7               	movwf	tblptrh,c
  3107  001330                     	endif
  3108  001330                     	if	1	;There are 3 active tblptr bytes
  3109  001330  0E00               	movlw	low (ReadDateTimeFromBuffer@F11323 shr (0+16))
  3110  001332  6EF8               	movwf	tblptru,c
  3111  001334                     	endif
  3112  001334  EE20  F009         	lfsr	2,ReadDateTimeFromBuffer@StartCode
  3113  001338  0E06               	movlw	6
  3114  00133A                     i2u146_40:
  3115  00133A  0009               	tblrd		*+
  3116  00133C  CFF5 FFDE          	movff	tablat,postinc2
  3117  001340  06E8               	decf	wreg,f,c
  3118  001342  E2FB               	bc	i2u146_40
  3119                           
  3120                           ;gps.c: 47: char Pos=0x00;
  3121  001344  0E00               	movlw	0
  3122  001346  6E14               	movwf	ReadDateTimeFromBuffer@Pos,c
  3123                           
  3124                           ;gps.c: 48: char TempChar = 0x00;
  3125  001348  0E00               	movlw	0
  3126  00134A  6E11               	movwf	ReadDateTimeFromBuffer@TempChar,c
  3127                           
  3128                           ;gps.c: 49: INT i;
  3129                           ;gps.c: 50: for(i=0; i<64; i++) {
  3130  00134C  0E00               	movlw	0
  3131  00134E  6E13               	movwf	ReadDateTimeFromBuffer@i+1,c
  3132  001350  0E00               	movlw	0
  3133  001352  6E12               	movwf	ReadDateTimeFromBuffer@i,c
  3134  001354                     i2l2193:
  3135  001354  BE13               	btfsc	ReadDateTimeFromBuffer@i+1,7,c
  3136  001356  D006               	goto	i2l2197
  3137  001358  5013               	movf	ReadDateTimeFromBuffer@i+1,w,c
  3138  00135A  E140               	bnz	i2l2225
  3139  00135C  0E40               	movlw	64
  3140  00135E  5C12               	subwf	ReadDateTimeFromBuffer@i,w,c
  3141  001360  B0D8               	btfsc	status,0,c
  3142  001362  D03C               	goto	i2l2225
  3143  001364                     i2l2197:
  3144                           
  3145                           ;gps.c: 52: TempChar = eusart1RxBuffer[i];
  3146  001364  0E60               	movlw	low _eusart1RxBuffer
  3147  001366  2412               	addwf	ReadDateTimeFromBuffer@i,w,c
  3148  001368  6ED9               	movwf	fsr2l,c
  3149  00136A  0E00               	movlw	high _eusart1RxBuffer
  3150  00136C  2013               	addwfc	ReadDateTimeFromBuffer@i+1,w,c
  3151  00136E  6EDA               	movwf	fsr2h,c
  3152  001370  50DF               	movf	indf2,w,c
  3153  001372  6E11               	movwf	ReadDateTimeFromBuffer@TempChar,c
  3154                           
  3155                           ;gps.c: 53: if ((Pos>=0x07) & (Pos<=0x0c)) {
  3156  001374  0E06               	movlw	6
  3157  001376  6414               	cpfsgt	ReadDateTimeFromBuffer@Pos,c
  3158  001378  D017               	goto	i2l2207
  3159  00137A  0E0D               	movlw	13
  3160  00137C  6014               	cpfslt	ReadDateTimeFromBuffer@Pos,c
  3161  00137E  D014               	goto	i2l2207
  3162                           
  3163                           ;gps.c: 54: Time[Pos-0x07]= TempChar;
  3164  001380  0EF9               	movlw	249
  3165  001382  6E05               	movwf	??_ReadDateTimeFromBuffer& (0+255),c
  3166  001384  0EFF               	movlw	255
  3167  001386  6E06               	movwf	(??_ReadDateTimeFromBuffer+1)& (0+255),c
  3168  001388  5014               	movf	ReadDateTimeFromBuffer@Pos,w,c
  3169  00138A  6E07               	movwf	(??_ReadDateTimeFromBuffer+2)& (0+255),c
  3170  00138C  6A08               	clrf	(??_ReadDateTimeFromBuffer+3)& (0+255),c
  3171  00138E  5005               	movf	??_ReadDateTimeFromBuffer,w,c
  3172  001390  2607               	addwf	??_ReadDateTimeFromBuffer+2,f,c
  3173  001392  5006               	movf	??_ReadDateTimeFromBuffer+1,w,c
  3174  001394  2208               	addwfc	??_ReadDateTimeFromBuffer+3,f,c
  3175  001396  5007               	movf	??_ReadDateTimeFromBuffer+2,w,c
  3176  001398  2403               	addwf	ReadDateTimeFromBuffer@Time,w,c
  3177  00139A  6ED9               	movwf	fsr2l,c
  3178  00139C  5008               	movf	??_ReadDateTimeFromBuffer+3,w,c
  3179  00139E  2004               	addwfc	ReadDateTimeFromBuffer@Time+1,w,c
  3180  0013A0  6EDA               	movwf	fsr2h,c
  3181  0013A2  C011  FFDF         	movff	ReadDateTimeFromBuffer@TempChar,indf2
  3182  0013A6  D00F               	goto	i2l2211
  3183  0013A8                     i2l2207:
  3184  0013A8  5014               	movf	ReadDateTimeFromBuffer@Pos,w,c
  3185  0013AA  0D01               	mullw	1
  3186  0013AC  0E09               	movlw	low ReadDateTimeFromBuffer@StartCode
  3187  0013AE  24F3               	addwf	prodl,w,c
  3188  0013B0  6ED9               	movwf	fsr2l,c
  3189  0013B2  0E00               	movlw	high ReadDateTimeFromBuffer@StartCode
  3190  0013B4  20F4               	addwfc	prodh,w,c
  3191  0013B6  6EDA               	movwf	fsr2h,c
  3192  0013B8  5011               	movf	ReadDateTimeFromBuffer@TempChar,w,c
  3193  0013BA  18DE               	xorwf	postinc2,w,c
  3194  0013BC  A4D8               	btfss	status,2,c
  3195  0013BE  D005               	goto	i2l2213
  3196  0013C0  0E07               	movlw	7
  3197  0013C2  6014               	cpfslt	ReadDateTimeFromBuffer@Pos,c
  3198  0013C4  D002               	goto	i2l2213
  3199  0013C6                     i2l2211:
  3200                           
  3201                           ;gps.c: 57: Pos++;
  3202  0013C6  2A14               	incf	ReadDateTimeFromBuffer@Pos,f,c
  3203                           
  3204                           ;gps.c: 58: } else if (Pos>0x0c)
  3205  0013C8  D006               	goto	i2l2221
  3206  0013CA                     i2l2213:
  3207  0013CA  0E0C               	movlw	12
  3208  0013CC  6414               	cpfsgt	ReadDateTimeFromBuffer@Pos,c
  3209  0013CE  D001               	goto	i2l2219
  3210  0013D0  D005               	goto	i2l2225
  3211  0013D2                     i2l2219:
  3212                           
  3213                           ;gps.c: 60: else
  3214                           ;gps.c: 61: Pos=0;
  3215  0013D2  0E00               	movlw	0
  3216  0013D4  6E14               	movwf	ReadDateTimeFromBuffer@Pos,c
  3217  0013D6                     i2l2221:
  3218  0013D6  4A12               	infsnz	ReadDateTimeFromBuffer@i,f,c
  3219  0013D8  2A13               	incf	ReadDateTimeFromBuffer@i+1,f,c
  3220  0013DA  D7BC               	goto	i2l2193
  3221  0013DC                     i2l2225:
  3222                           
  3223                           ;gps.c: 62: }
  3224                           ;gps.c: 63: Pos=0;
  3225  0013DC  0E00               	movlw	0
  3226  0013DE  6E14               	movwf	ReadDateTimeFromBuffer@Pos,c
  3227                           
  3228                           ;gps.c: 64: UINT8 Commas=0;
  3229  0013E0  0E00               	movlw	0
  3230  0013E2  6E10               	movwf	ReadDateTimeFromBuffer@Commas,c
  3231  0013E4                     i2l2227:
  3232                           
  3233                           ;gps.c: 65: for (; i<64; i++) {
  3234  0013E4  BE13               	btfsc	ReadDateTimeFromBuffer@i+1,7,c
  3235  0013E6  D006               	goto	i2l2231
  3236  0013E8  5013               	movf	ReadDateTimeFromBuffer@i+1,w,c
  3237  0013EA  E132               	bnz	i2l158
  3238  0013EC  0E40               	movlw	64
  3239  0013EE  5C12               	subwf	ReadDateTimeFromBuffer@i,w,c
  3240  0013F0  B0D8               	btfsc	status,0,c
  3241  0013F2  0012               	return	
  3242  0013F4                     i2l2231:
  3243                           
  3244                           ;gps.c: 66: TempChar = eusart1RxBuffer[i];
  3245  0013F4  0E60               	movlw	low _eusart1RxBuffer
  3246  0013F6  2412               	addwf	ReadDateTimeFromBuffer@i,w,c
  3247  0013F8  6ED9               	movwf	fsr2l,c
  3248  0013FA  0E00               	movlw	high _eusart1RxBuffer
  3249  0013FC  2013               	addwfc	ReadDateTimeFromBuffer@i+1,w,c
  3250  0013FE  6EDA               	movwf	fsr2h,c
  3251  001400  50DF               	movf	indf2,w,c
  3252  001402  6E11               	movwf	ReadDateTimeFromBuffer@TempChar,c
  3253                           
  3254                           ;gps.c: 67: if (Commas<8) {
  3255  001404  0E08               	movlw	8
  3256  001406  6010               	cpfslt	ReadDateTimeFromBuffer@Commas,c
  3257  001408  D00C               	goto	i2l2239
  3258                           
  3259                           ;gps.c: 68: if (eusart1RxBuffer[i] == 0x2C)
  3260  00140A  0E60               	movlw	low _eusart1RxBuffer
  3261  00140C  2412               	addwf	ReadDateTimeFromBuffer@i,w,c
  3262  00140E  6ED9               	movwf	fsr2l,c
  3263  001410  0E00               	movlw	high _eusart1RxBuffer
  3264  001412  2013               	addwfc	ReadDateTimeFromBuffer@i+1,w,c
  3265  001414  6EDA               	movwf	fsr2h,c
  3266  001416  0E2C               	movlw	44
  3267  001418  18DE               	xorwf	postinc2,w,c
  3268  00141A  A4D8               	btfss	status,2,c
  3269  00141C  D016               	goto	i2l2245
  3270                           
  3271                           ;gps.c: 69: Commas++;
  3272  00141E  2A10               	incf	ReadDateTimeFromBuffer@Commas,f,c
  3273                           
  3274                           ;gps.c: 70: } else {
  3275  001420  D014               	goto	i2l2245
  3276  001422                     i2l2239:
  3277                           
  3278                           ;gps.c: 71: if (Pos<6) {
  3279  001422  0E06               	movlw	6
  3280  001424  6014               	cpfslt	ReadDateTimeFromBuffer@Pos,c
  3281  001426  0012               	return	
  3282                           
  3283                           ;gps.c: 72: Date[Pos] = eusart1RxBuffer[i];
  3284  001428  0E60               	movlw	low _eusart1RxBuffer
  3285  00142A  2412               	addwf	ReadDateTimeFromBuffer@i,w,c
  3286  00142C  6ED9               	movwf	fsr2l,c
  3287  00142E  0E00               	movlw	high _eusart1RxBuffer
  3288  001430  2013               	addwfc	ReadDateTimeFromBuffer@i+1,w,c
  3289  001432  6EDA               	movwf	fsr2h,c
  3290  001434  5014               	movf	ReadDateTimeFromBuffer@Pos,w,c
  3291  001436  0D01               	mullw	1
  3292  001438  50F3               	movf	prodl,w,c
  3293  00143A  2401               	addwf	ReadDateTimeFromBuffer@Date,w,c
  3294  00143C  6EE1               	movwf	fsr1l,c
  3295  00143E  50F4               	movf	prodh,w,c
  3296  001440  2002               	addwfc	ReadDateTimeFromBuffer@Date+1,w,c
  3297  001442  6EE2               	movwf	fsr1h,c
  3298  001444  CFDF FFE7          	movff	indf2,indf1
  3299                           
  3300                           ;gps.c: 73: Pos++;
  3301  001448  2A14               	incf	ReadDateTimeFromBuffer@Pos,f,c
  3302  00144A                     i2l2245:
  3303  00144A  4A12               	infsnz	ReadDateTimeFromBuffer@i,f,c
  3304  00144C  2A13               	incf	ReadDateTimeFromBuffer@i+1,f,c
  3305  00144E  D7CA               	goto	i2l2227
  3306  001450                     i2l158:
  3307  001450  0012               	return		;funcret
  3308  001452                     __end_of_ReadDateTimeFromBuffer:
  3309                           	opt stack 0
  3310                           tosu	equ	0xFFF
  3311                           tosh	equ	0xFFE
  3312                           tosl	equ	0xFFD
  3313                           pclatu	equ	0xFFB
  3314                           pclath	equ	0xFFA
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           prodh	equ	0xFF4
  3320                           prodl	equ	0xFF3
  3321                           intcon	equ	0xFF2
  3322                           postinc0	equ	0xFEE
  3323                           fsr0h	equ	0xFEA
  3324                           fsr0l	equ	0xFE9
  3325                           wreg	equ	0xFE8
  3326                           indf1	equ	0xFE7
  3327                           postdec1	equ	0xFE5
  3328                           plusw1	equ	0xFE3
  3329                           fsr1h	equ	0xFE2
  3330                           fsr1l	equ	0xFE1
  3331                           indf2	equ	0xFDF
  3332                           postinc2	equ	0xFDE
  3333                           plusw2	equ	0xFDB
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function _Lcd_Text *****************
  3339 ;; Defined at:
  3340 ;;		line 76 in file "libs/HD44780.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  y               1    wreg     unsigned char 
  3343 ;;  x               1    3[COMRAM] unsigned char 
  3344 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  3345 ;;		 -> Timer_1ms@Time(7), Timer_1ms@Date(7), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  y               1    6[COMRAM] unsigned char 
  3348 ;;  data            1    7[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3358 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3361 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3362 ;;Total ram usage:        5 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    2
  3365 ;; This function calls:
  3366 ;;		_Lcd_CharCP
  3367 ;;		i2_Lcd_Command
  3368 ;; This function is called by:
  3369 ;;		_Timer_1ms
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text21
  3374  001BD2                     __ptext21:
  3375                           	opt stack 0
  3376  001BD2                     _Lcd_Text:
  3377                           	opt stack 21
  3378                           
  3379                           ;incstack = 0
  3380                           ;Lcd_Text@y stored from wreg
  3381  001BD2  6E07               	movwf	Lcd_Text@y,c
  3382                           
  3383                           ;HD44780.c: 77: unsigned char data;
  3384                           ;HD44780.c: 78: switch(y){
  3385  001BD4  D00D               	goto	i2l2099
  3386  001BD6                     i2l2089:
  3387  001BD6  5004               	movf	Lcd_Text@x,w,c
  3388  001BD8  0F7F               	addlw	127
  3389  001BDA  D008               	goto	L3
  3390  001BDC                     i2l2091:
  3391  001BDC  5004               	movf	Lcd_Text@x,w,c
  3392  001BDE  0FBF               	addlw	191
  3393  001BE0  D005               	goto	L3
  3394  001BE2                     i2l2093:
  3395  001BE2  5004               	movf	Lcd_Text@x,w,c
  3396  001BE4  0F93               	addlw	147
  3397  001BE6  D002               	goto	L3
  3398  001BE8                     i2l2095:
  3399  001BE8  5004               	movf	Lcd_Text@x,w,c
  3400  001BEA  0FD3               	addlw	211
  3401  001BEC                     L3:
  3402  001BEC  6E08               	movwf	Lcd_Text@data,c
  3403                           
  3404                           ;HD44780.c: 83: default: break;}
  3405  001BEE  D00D               	goto	i2l2101
  3406  001BF0                     i2l2099:
  3407  001BF0  5007               	movf	Lcd_Text@y,w,c
  3408                           
  3409                           ; Switch size 1, requested type "space"
  3410                           ; Number of cases is 4, Range of values is 1 to 4
  3411                           ; switch strategies available:
  3412                           ; Name         Instructions Cycles
  3413                           ; simple_byte           13     7 (average)
  3414                           ;	Chosen strategy is simple_byte
  3415  001BF2  0A01               	xorlw	1	; case 1
  3416  001BF4  B4D8               	btfsc	status,2,c
  3417  001BF6  D7EF               	goto	i2l2089
  3418  001BF8  0A03               	xorlw	3	; case 2
  3419  001BFA  B4D8               	btfsc	status,2,c
  3420  001BFC  D7EF               	goto	i2l2091
  3421  001BFE  0A01               	xorlw	1	; case 3
  3422  001C00  B4D8               	btfsc	status,2,c
  3423  001C02  D7EF               	goto	i2l2093
  3424  001C04  0A07               	xorlw	7	; case 4
  3425  001C06  B4D8               	btfsc	status,2,c
  3426  001C08  D7EF               	goto	i2l2095
  3427  001C0A                     i2l2101:
  3428                           
  3429                           ;HD44780.c: 84: Lcd_Command(data);
  3430  001C0A  5008               	movf	Lcd_Text@data,w,c
  3431  001C0C  EC29  F00A         	call	i2_Lcd_Command
  3432                           
  3433                           ;HD44780.c: 85: while(*buffer)
  3434  001C10  D009               	goto	i2l2107
  3435  001C12                     i2l2103:
  3436                           
  3437                           ;HD44780.c: 86: {
  3438                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  3439  001C12  C005  FFD9         	movff	Lcd_Text@buffer,fsr2l
  3440  001C16  C006  FFDA         	movff	Lcd_Text@buffer+1,fsr2h
  3441  001C1A  50DF               	movf	indf2,w,c
  3442  001C1C  ECB4  F00A         	call	_Lcd_CharCP
  3443                           
  3444                           ;HD44780.c: 88: buffer++;
  3445  001C20  4A05               	infsnz	Lcd_Text@buffer,f,c
  3446  001C22  2A06               	incf	Lcd_Text@buffer+1,f,c
  3447  001C24                     i2l2107:
  3448  001C24  C005  FFD9         	movff	Lcd_Text@buffer,fsr2l
  3449  001C28  C006  FFDA         	movff	Lcd_Text@buffer+1,fsr2h
  3450  001C2C  50DF               	movf	indf2,w,c
  3451  001C2E  B4D8               	btfsc	status,2,c
  3452  001C30  0012               	return	
  3453  001C32  D7EF               	goto	i2l2103
  3454  001C34                     __end_of_Lcd_Text:
  3455                           	opt stack 0
  3456                           tosu	equ	0xFFF
  3457                           tosh	equ	0xFFE
  3458                           tosl	equ	0xFFD
  3459                           pclatu	equ	0xFFB
  3460                           pclath	equ	0xFFA
  3461                           tblptru	equ	0xFF8
  3462                           tblptrh	equ	0xFF7
  3463                           tblptrl	equ	0xFF6
  3464                           tablat	equ	0xFF5
  3465                           prodh	equ	0xFF4
  3466                           prodl	equ	0xFF3
  3467                           intcon	equ	0xFF2
  3468                           postinc0	equ	0xFEE
  3469                           fsr0h	equ	0xFEA
  3470                           fsr0l	equ	0xFE9
  3471                           wreg	equ	0xFE8
  3472                           indf1	equ	0xFE7
  3473                           postdec1	equ	0xFE5
  3474                           plusw1	equ	0xFE3
  3475                           fsr1h	equ	0xFE2
  3476                           fsr1l	equ	0xFE1
  3477                           indf2	equ	0xFDF
  3478                           postinc2	equ	0xFDE
  3479                           plusw2	equ	0xFDB
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _Lcd_Int *****************
  3485 ;; Defined at:
  3486 ;;		line 157 in file "libs/HD44780.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  y               1    wreg     unsigned char 
  3489 ;;  x               1   28[COMRAM] unsigned char 
  3490 ;;  val             1   29[COMRAM] unsigned char 
  3491 ;;  size            1   30[COMRAM] unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  y               1   31[COMRAM] unsigned char 
  3494 ;;  tempVal         2   33[COMRAM] unsigned int 
  3495 ;;  data            1   32[COMRAM] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3505 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3506 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3508 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3509 ;;Total ram usage:        7 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    2
  3512 ;; This function calls:
  3513 ;;		_Lcd_CharCP
  3514 ;;		___awdiv
  3515 ;;		___lwdiv
  3516 ;;		___wmul
  3517 ;;		i2_Lcd_Command
  3518 ;; This function is called by:
  3519 ;;		_Timer_1ms
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text22
  3524  00167E                     __ptext22:
  3525                           	opt stack 0
  3526  00167E                     _Lcd_Int:
  3527                           	opt stack 21
  3528                           
  3529                           ;incstack = 0
  3530                           ;Lcd_Int@y stored from wreg
  3531  00167E  6E20               	movwf	Lcd_Int@y,c
  3532                           
  3533                           ;HD44780.c: 158: if ((size>0) && (size<=3)) {
  3534  001680  501F               	movf	Lcd_Int@size,w,c
  3535  001682  B4D8               	btfsc	status,2,c
  3536  001684  0012               	return	
  3537  001686  0E04               	movlw	4
  3538  001688  601F               	cpfslt	Lcd_Int@size,c
  3539  00168A  0012               	return	
  3540                           
  3541                           ;HD44780.c: 159: unsigned int tempVal=val;
  3542  00168C  C01E  F022         	movff	Lcd_Int@val,Lcd_Int@tempVal
  3543  001690  6A23               	clrf	Lcd_Int@tempVal+1,c
  3544                           
  3545                           ;HD44780.c: 160: unsigned char data;
  3546                           ;HD44780.c: 161: switch(y){
  3547  001692  D00D               	goto	i2l2125
  3548  001694                     i2l2115:
  3549  001694  501D               	movf	Lcd_Int@x,w,c
  3550  001696  0F7F               	addlw	127
  3551  001698  D008               	goto	L6
  3552  00169A                     i2l2117:
  3553  00169A  501D               	movf	Lcd_Int@x,w,c
  3554  00169C  0FBF               	addlw	191
  3555  00169E  D005               	goto	L6
  3556  0016A0                     i2l2119:
  3557  0016A0  501D               	movf	Lcd_Int@x,w,c
  3558  0016A2  0F93               	addlw	147
  3559  0016A4  D002               	goto	L6
  3560  0016A6                     i2l2121:
  3561  0016A6  501D               	movf	Lcd_Int@x,w,c
  3562  0016A8  0FD3               	addlw	211
  3563  0016AA                     L6:
  3564  0016AA  6E21               	movwf	Lcd_Int@data,c
  3565                           
  3566                           ;HD44780.c: 166: default: break;}
  3567  0016AC  D00D               	goto	i2l2127
  3568  0016AE                     i2l2125:
  3569  0016AE  5020               	movf	Lcd_Int@y,w,c
  3570                           
  3571                           ; Switch size 1, requested type "space"
  3572                           ; Number of cases is 4, Range of values is 1 to 4
  3573                           ; switch strategies available:
  3574                           ; Name         Instructions Cycles
  3575                           ; simple_byte           13     7 (average)
  3576                           ;	Chosen strategy is simple_byte
  3577  0016B0  0A01               	xorlw	1	; case 1
  3578  0016B2  B4D8               	btfsc	status,2,c
  3579  0016B4  D7EF               	goto	i2l2115
  3580  0016B6  0A03               	xorlw	3	; case 2
  3581  0016B8  B4D8               	btfsc	status,2,c
  3582  0016BA  D7EF               	goto	i2l2117
  3583  0016BC  0A01               	xorlw	1	; case 3
  3584  0016BE  B4D8               	btfsc	status,2,c
  3585  0016C0  D7EF               	goto	i2l2119
  3586  0016C2  0A07               	xorlw	7	; case 4
  3587  0016C4  B4D8               	btfsc	status,2,c
  3588  0016C6  D7EF               	goto	i2l2121
  3589  0016C8                     i2l2127:
  3590                           
  3591                           ;HD44780.c: 167: Lcd_Command(data);
  3592  0016C8  5021               	movf	Lcd_Int@data,w,c
  3593  0016CA  EC29  F00A         	call	i2_Lcd_Command
  3594                           
  3595                           ;HD44780.c: 168: if (size>=3){
  3596  0016CE  0E02               	movlw	2
  3597  0016D0  641F               	cpfsgt	Lcd_Int@size,c
  3598  0016D2  D011               	goto	i2l2133
  3599                           
  3600                           ;HD44780.c: 169: tempVal = val/100;
  3601  0016D4  C01E  F001         	movff	Lcd_Int@val,___awdiv@dividend
  3602  0016D8  6A02               	clrf	___awdiv@dividend+1,c
  3603  0016DA  0E00               	movlw	0
  3604  0016DC  6E04               	movwf	___awdiv@divisor+1,c
  3605  0016DE  0E64               	movlw	100
  3606  0016E0  6E03               	movwf	___awdiv@divisor,c
  3607  0016E2  EC3E  F00D         	call	___awdiv	;wreg free
  3608  0016E6  C001  F022         	movff	?___awdiv,Lcd_Int@tempVal
  3609  0016EA  C002  F023         	movff	?___awdiv+1,Lcd_Int@tempVal+1
  3610                           
  3611                           ;HD44780.c: 170: Lcd_CharCP(0x30+(tempVal));
  3612  0016EE  5022               	movf	Lcd_Int@tempVal,w,c
  3613  0016F0  0F30               	addlw	48
  3614  0016F2  ECB4  F00A         	call	_Lcd_CharCP
  3615  0016F6                     i2l2133:
  3616                           
  3617                           ;HD44780.c: 171: }
  3618                           ;HD44780.c: 172: if (size>=2){
  3619  0016F6  0E01               	movlw	1
  3620  0016F8  641F               	cpfsgt	Lcd_Int@size,c
  3621  0016FA  D022               	goto	i2l2139
  3622                           
  3623                           ;HD44780.c: 173: tempVal = (val-tempVal*100)/10;
  3624  0016FC  C022  F001         	movff	Lcd_Int@tempVal,___wmul@multiplier
  3625  001700  C023  F002         	movff	Lcd_Int@tempVal+1,___wmul@multiplier+1
  3626  001704  0E00               	movlw	0
  3627  001706  6E04               	movwf	___wmul@multiplicand+1,c
  3628  001708  0E64               	movlw	100
  3629  00170A  6E03               	movwf	___wmul@multiplicand,c
  3630  00170C  ECE4  F00E         	call	___wmul	;wreg free
  3631  001710  1E01               	comf	?___wmul,f,c
  3632  001712  1E02               	comf	?___wmul+1,f,c
  3633  001714  4A01               	infsnz	?___wmul,f,c
  3634  001716  2A02               	incf	?___wmul+1,f,c
  3635  001718  501E               	movf	Lcd_Int@val,w,c
  3636  00171A  2401               	addwf	?___wmul,w,c
  3637  00171C  6E07               	movwf	___lwdiv@dividend,c
  3638  00171E  0E00               	movlw	0
  3639  001720  2002               	addwfc	?___wmul+1,w,c
  3640  001722  6E08               	movwf	___lwdiv@dividend+1,c
  3641  001724  0E00               	movlw	0
  3642  001726  6E0A               	movwf	___lwdiv@divisor+1,c
  3643  001728  0E0A               	movlw	10
  3644  00172A  6E09               	movwf	___lwdiv@divisor,c
  3645  00172C  EC1A  F00E         	call	___lwdiv	;wreg free
  3646  001730  C007  F022         	movff	?___lwdiv,Lcd_Int@tempVal
  3647  001734  C008  F023         	movff	?___lwdiv+1,Lcd_Int@tempVal+1
  3648                           
  3649                           ;HD44780.c: 174: Lcd_CharCP(0x30+(tempVal));
  3650  001738  5022               	movf	Lcd_Int@tempVal,w,c
  3651  00173A  0F30               	addlw	48
  3652  00173C  ECB4  F00A         	call	_Lcd_CharCP
  3653  001740                     i2l2139:
  3654                           
  3655                           ;HD44780.c: 175: }
  3656                           ;HD44780.c: 176: if (size>=1){
  3657  001740  501F               	movf	Lcd_Int@size,w,c
  3658  001742  B4D8               	btfsc	status,2,c
  3659  001744  0012               	return	
  3660                           
  3661                           ;HD44780.c: 177: tempVal = val/10;
  3662  001746  C01E  F001         	movff	Lcd_Int@val,___awdiv@dividend
  3663  00174A  6A02               	clrf	___awdiv@dividend+1,c
  3664  00174C  0E00               	movlw	0
  3665  00174E  6E04               	movwf	___awdiv@divisor+1,c
  3666  001750  0E0A               	movlw	10
  3667  001752  6E03               	movwf	___awdiv@divisor,c
  3668  001754  EC3E  F00D         	call	___awdiv	;wreg free
  3669  001758  C001  F022         	movff	?___awdiv,Lcd_Int@tempVal
  3670  00175C  C002  F023         	movff	?___awdiv+1,Lcd_Int@tempVal+1
  3671                           
  3672                           ;HD44780.c: 178: Lcd_CharCP(0x30+(val - tempVal*10));
  3673  001760  5022               	movf	Lcd_Int@tempVal,w,c
  3674  001762  0D0A               	mullw	10
  3675  001764  50F3               	movf	prodl,w,c
  3676  001766  0800               	sublw	0
  3677  001768  241E               	addwf	Lcd_Int@val,w,c
  3678  00176A  0F30               	addlw	48
  3679  00176C  ECB4  F00A         	call	_Lcd_CharCP
  3680  001770  0012               	return	
  3681  001772                     __end_of_Lcd_Int:
  3682                           	opt stack 0
  3683                           tosu	equ	0xFFF
  3684                           tosh	equ	0xFFE
  3685                           tosl	equ	0xFFD
  3686                           pclatu	equ	0xFFB
  3687                           pclath	equ	0xFFA
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           prodh	equ	0xFF4
  3693                           prodl	equ	0xFF3
  3694                           intcon	equ	0xFF2
  3695                           postinc0	equ	0xFEE
  3696                           fsr0h	equ	0xFEA
  3697                           fsr0l	equ	0xFE9
  3698                           wreg	equ	0xFE8
  3699                           indf1	equ	0xFE7
  3700                           postdec1	equ	0xFE5
  3701                           plusw1	equ	0xFE3
  3702                           fsr1h	equ	0xFE2
  3703                           fsr1l	equ	0xFE1
  3704                           indf2	equ	0xFDF
  3705                           postinc2	equ	0xFDE
  3706                           plusw2	equ	0xFDB
  3707                           fsr2h	equ	0xFDA
  3708                           fsr2l	equ	0xFD9
  3709                           status	equ	0xFD8
  3710                           
  3711 ;; *************** function i2_Lcd_Command *****************
  3712 ;; Defined at:
  3713 ;;		line 133 in file "libs/HD44780.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  command         1    wreg     unsigned char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  command         1    2[COMRAM] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;Total ram usage:        3 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    1
  3734 ;; This function calls:
  3735 ;;		i2_Lcd_Delay5us
  3736 ;; This function is called by:
  3737 ;;		_Lcd_Text
  3738 ;;		_Lcd_Int
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text23
  3743  001452                     __ptext23:
  3744                           	opt stack 0
  3745  001452                     i2_Lcd_Command:
  3746                           	opt stack 21
  3747                           
  3748                           ;incstack = 0
  3749                           ;i2Lcd_Command@command stored from wreg
  3750  001452  6E03               	movwf	i2Lcd_Command@command,c
  3751                           
  3752                           ;HD44780.c: 134: LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3753  001454  9283               	bcf	3971,1,c	;volatile
  3754  001456  9083               	bcf	3971,0,c	;volatile
  3755                           
  3756                           ;HD44780.c: 135: LATAbits.LA5 = (command & 0b10000000)>>7; LATAbits.LA4 = (command & 0b0
      +                          1000000)>>6;
  3757  001458  6A01               	clrf	??i2_Lcd_Command& (0+255),c
  3758  00145A  AE03               	btfss	i2Lcd_Command@command,7,c
  3759  00145C  D001               	bra	i2u129_45
  3760  00145E  2A01               	incf	??i2_Lcd_Command& (0+255),f,c
  3761  001460                     i2u129_45:
  3762  001460  0E01               	movlw	1
  3763  001462  1601               	andwf	??i2_Lcd_Command,f,c
  3764  001464  3A01               	swapf	??i2_Lcd_Command,f,c
  3765  001466  4601               	rlncf	??i2_Lcd_Command,f,c
  3766  001468  5083               	movf	3971,w,c	;volatile
  3767  00146A  1801               	xorwf	??i2_Lcd_Command,w,c
  3768  00146C  0BDF               	andlw	-33
  3769  00146E  1801               	xorwf	??i2_Lcd_Command,w,c
  3770  001470  6E83               	movwf	3971,c	;volatile
  3771  001472  C003  F001         	movff	i2Lcd_Command@command,??i2_Lcd_Command
  3772  001476  0E06               	movlw	6
  3773  001478  6E02               	movwf	(??i2_Lcd_Command+1)& (0+255),c
  3774  00147A                     i2u130_45:
  3775  00147A  90D8               	bcf	status,0,c
  3776  00147C  3201               	rrcf	??i2_Lcd_Command,f,c
  3777  00147E  2E02               	decfsz	(??i2_Lcd_Command+1)& (0+255),f,c
  3778  001480  D7FC               	goto	i2u130_45
  3779  001482  0E01               	movlw	1
  3780  001484  1601               	andwf	??i2_Lcd_Command,f,c
  3781  001486  3A01               	swapf	??i2_Lcd_Command,f,c
  3782  001488  5083               	movf	3971,w,c	;volatile
  3783  00148A  1801               	xorwf	??i2_Lcd_Command,w,c
  3784  00148C  0BEF               	andlw	-17
  3785  00148E  1801               	xorwf	??i2_Lcd_Command,w,c
  3786  001490  6E83               	movwf	3971,c	;volatile
  3787                           
  3788                           ;HD44780.c: 136: LATAbits.LA3 = (command & 0b00100000)>>5; LATAbits.LA2 = (command & 0b0
      +                          0010000)>>4;
  3789  001492  C003  F001         	movff	i2Lcd_Command@command,??i2_Lcd_Command
  3790  001496  0E05               	movlw	5
  3791  001498  6E02               	movwf	(??i2_Lcd_Command+1)& (0+255),c
  3792  00149A                     i2u131_45:
  3793  00149A  90D8               	bcf	status,0,c
  3794  00149C  3201               	rrcf	??i2_Lcd_Command,f,c
  3795  00149E  2E02               	decfsz	(??i2_Lcd_Command+1)& (0+255),f,c
  3796  0014A0  D7FC               	goto	i2u131_45
  3797  0014A2  0E01               	movlw	1
  3798  0014A4  1601               	andwf	??i2_Lcd_Command,f,c
  3799  0014A6  4601               	rlncf	??i2_Lcd_Command,f,c
  3800  0014A8  4601               	rlncf	??i2_Lcd_Command,f,c
  3801  0014AA  4601               	rlncf	??i2_Lcd_Command,f,c
  3802  0014AC  5083               	movf	3971,w,c	;volatile
  3803  0014AE  1801               	xorwf	??i2_Lcd_Command,w,c
  3804  0014B0  0BF7               	andlw	-9
  3805  0014B2  1801               	xorwf	??i2_Lcd_Command,w,c
  3806  0014B4  6E83               	movwf	3971,c	;volatile
  3807  0014B6  C003  F001         	movff	i2Lcd_Command@command,??i2_Lcd_Command
  3808  0014BA  3A01               	swapf	??i2_Lcd_Command,f,c
  3809  0014BC  0E0F               	movlw	15
  3810  0014BE  1601               	andwf	??i2_Lcd_Command,f,c
  3811  0014C0  0E01               	movlw	1
  3812  0014C2  1601               	andwf	??i2_Lcd_Command,f,c
  3813  0014C4  4601               	rlncf	??i2_Lcd_Command,f,c
  3814  0014C6  4601               	rlncf	??i2_Lcd_Command,f,c
  3815  0014C8  5083               	movf	3971,w,c	;volatile
  3816  0014CA  1801               	xorwf	??i2_Lcd_Command,w,c
  3817  0014CC  0BFB               	andlw	-5
  3818  0014CE  1801               	xorwf	??i2_Lcd_Command,w,c
  3819  0014D0  6E83               	movwf	3971,c	;volatile
  3820                           
  3821                           ;HD44780.c: 137: _delay(10);
  3822  0014D2  0E03               	movlw	3
  3823  0014D4                     i2u214_47:
  3824  0014D4  2EE8               	decfsz	wreg,f,c
  3825  0014D6  D7FE               	bra	i2u214_47
  3826  0014D8  F000               	nop	
  3827                           
  3828                           ;HD44780.c: 138: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  3829  0014DA  8283               	bsf	3971,1,c	;volatile
  3830  0014DC  EC2C  F00F         	call	i2_Lcd_Delay5us	;wreg free
  3831  0014E0  9283               	bcf	3971,1,c	;volatile
  3832                           
  3833                           ;HD44780.c: 139: LATAbits.LA5 = (command & 0b00001000)>>3; LATAbits.LA4 = (command & 0b0
      +                          0000100)>>2;
  3834  0014E2  C003  F001         	movff	i2Lcd_Command@command,??i2_Lcd_Command
  3835  0014E6  90D8               	bcf	status,0,c
  3836  0014E8  3201               	rrcf	??i2_Lcd_Command,f,c
  3837  0014EA  90D8               	bcf	status,0,c
  3838  0014EC  3201               	rrcf	??i2_Lcd_Command,f,c
  3839  0014EE  90D8               	bcf	status,0,c
  3840  0014F0  3201               	rrcf	??i2_Lcd_Command,f,c
  3841  0014F2  0E01               	movlw	1
  3842  0014F4  1601               	andwf	??i2_Lcd_Command,f,c
  3843  0014F6  3A01               	swapf	??i2_Lcd_Command,f,c
  3844  0014F8  4601               	rlncf	??i2_Lcd_Command,f,c
  3845  0014FA  5083               	movf	3971,w,c	;volatile
  3846  0014FC  1801               	xorwf	??i2_Lcd_Command,w,c
  3847  0014FE  0BDF               	andlw	-33
  3848  001500  1801               	xorwf	??i2_Lcd_Command,w,c
  3849  001502  6E83               	movwf	3971,c	;volatile
  3850  001504  C003  F001         	movff	i2Lcd_Command@command,??i2_Lcd_Command
  3851  001508  90D8               	bcf	status,0,c
  3852  00150A  3201               	rrcf	??i2_Lcd_Command,f,c
  3853  00150C  90D8               	bcf	status,0,c
  3854  00150E  3201               	rrcf	??i2_Lcd_Command,f,c
  3855  001510  0E01               	movlw	1
  3856  001512  1601               	andwf	??i2_Lcd_Command,f,c
  3857  001514  3A01               	swapf	??i2_Lcd_Command,f,c
  3858  001516  5083               	movf	3971,w,c	;volatile
  3859  001518  1801               	xorwf	??i2_Lcd_Command,w,c
  3860  00151A  0BEF               	andlw	-17
  3861  00151C  1801               	xorwf	??i2_Lcd_Command,w,c
  3862  00151E  6E83               	movwf	3971,c	;volatile
  3863                           
  3864                           ;HD44780.c: 140: LATAbits.LA3 = (command & 0b00000010)>>1; LATAbits.LA2 = (command & 0b0
      +                          0000001);
  3865  001520  C003  F001         	movff	i2Lcd_Command@command,??i2_Lcd_Command
  3866  001524  90D8               	bcf	status,0,c
  3867  001526  3201               	rrcf	??i2_Lcd_Command,f,c
  3868  001528  0E01               	movlw	1
  3869  00152A  1601               	andwf	??i2_Lcd_Command,f,c
  3870  00152C  4601               	rlncf	??i2_Lcd_Command,f,c
  3871  00152E  4601               	rlncf	??i2_Lcd_Command,f,c
  3872  001530  4601               	rlncf	??i2_Lcd_Command,f,c
  3873  001532  5083               	movf	3971,w,c	;volatile
  3874  001534  1801               	xorwf	??i2_Lcd_Command,w,c
  3875  001536  0BF7               	andlw	-9
  3876  001538  1801               	xorwf	??i2_Lcd_Command,w,c
  3877  00153A  6E83               	movwf	3971,c	;volatile
  3878  00153C  C003  F001         	movff	i2Lcd_Command@command,??i2_Lcd_Command
  3879  001540  0E01               	movlw	1
  3880  001542  1601               	andwf	??i2_Lcd_Command,f,c
  3881  001544  4601               	rlncf	??i2_Lcd_Command,f,c
  3882  001546  4601               	rlncf	??i2_Lcd_Command,f,c
  3883  001548  5083               	movf	3971,w,c	;volatile
  3884  00154A  1801               	xorwf	??i2_Lcd_Command,w,c
  3885  00154C  0BFB               	andlw	-5
  3886  00154E  1801               	xorwf	??i2_Lcd_Command,w,c
  3887  001550  6E83               	movwf	3971,c	;volatile
  3888                           
  3889                           ;HD44780.c: 141: _delay(10);
  3890  001552  0E03               	movlw	3
  3891  001554                     i2u215_47:
  3892  001554  2EE8               	decfsz	wreg,f,c
  3893  001556  D7FE               	bra	i2u215_47
  3894  001558  F000               	nop	
  3895                           
  3896                           ;HD44780.c: 142: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  3897  00155A  8283               	bsf	3971,1,c	;volatile
  3898  00155C  EC2C  F00F         	call	i2_Lcd_Delay5us	;wreg free
  3899  001560  9283               	bcf	3971,1,c	;volatile
  3900                           
  3901                           ;HD44780.c: 144: Lcd_Delay5us();
  3902  001562  EC2C  F00F         	call	i2_Lcd_Delay5us	;wreg free
  3903  001566  0012               	return		;funcret
  3904  001568                     __end_ofi2_Lcd_Command:
  3905                           	opt stack 0
  3906                           tosu	equ	0xFFF
  3907                           tosh	equ	0xFFE
  3908                           tosl	equ	0xFFD
  3909                           pclatu	equ	0xFFB
  3910                           pclath	equ	0xFFA
  3911                           tblptru	equ	0xFF8
  3912                           tblptrh	equ	0xFF7
  3913                           tblptrl	equ	0xFF6
  3914                           tablat	equ	0xFF5
  3915                           prodh	equ	0xFF4
  3916                           prodl	equ	0xFF3
  3917                           intcon	equ	0xFF2
  3918                           postinc0	equ	0xFEE
  3919                           fsr0h	equ	0xFEA
  3920                           fsr0l	equ	0xFE9
  3921                           wreg	equ	0xFE8
  3922                           indf1	equ	0xFE7
  3923                           postdec1	equ	0xFE5
  3924                           plusw1	equ	0xFE3
  3925                           fsr1h	equ	0xFE2
  3926                           fsr1l	equ	0xFE1
  3927                           indf2	equ	0xFDF
  3928                           postinc2	equ	0xFDE
  3929                           plusw2	equ	0xFDB
  3930                           fsr2h	equ	0xFDA
  3931                           fsr2l	equ	0xFD9
  3932                           status	equ	0xFD8
  3933                           
  3934 ;; *************** function ___lwdiv *****************
  3935 ;; Defined at:
  3936 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  dividend        2    6[COMRAM] unsigned int 
  3939 ;;  divisor         2    8[COMRAM] unsigned int 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  quotient        2   10[COMRAM] unsigned int 
  3942 ;;  counter         1   12[COMRAM] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  2    6[COMRAM] unsigned int 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3953 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3955 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3956 ;;Total ram usage:        7 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_Lcd_Int
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text24
  3966  001C34                     __ptext24:
  3967                           	opt stack 0
  3968  001C34                     ___lwdiv:
  3969                           	opt stack 22
  3970                           
  3971                           ;incstack = 0
  3972  001C34  0E00               	movlw	0
  3973  001C36  6E0C               	movwf	___lwdiv@quotient+1,c
  3974  001C38  0E00               	movlw	0
  3975  001C3A  6E0B               	movwf	___lwdiv@quotient,c
  3976  001C3C  5009               	movf	___lwdiv@divisor,w,c
  3977  001C3E  100A               	iorwf	___lwdiv@divisor+1,w,c
  3978  001C40  B4D8               	btfsc	status,2,c
  3979  001C42  D01C               	goto	i2l872
  3980  001C44  0E01               	movlw	1
  3981  001C46  6E0D               	movwf	___lwdiv@counter,c
  3982  001C48  D004               	goto	i2l2043
  3983  001C4A                     i2l2041:
  3984  001C4A  90D8               	bcf	status,0,c
  3985  001C4C  3609               	rlcf	___lwdiv@divisor,f,c
  3986  001C4E  360A               	rlcf	___lwdiv@divisor+1,f,c
  3987  001C50  2A0D               	incf	___lwdiv@counter,f,c
  3988  001C52                     i2l2043:
  3989  001C52  AE0A               	btfss	___lwdiv@divisor+1,7,c
  3990  001C54  D7FA               	goto	i2l2041
  3991  001C56                     i2l2045:
  3992  001C56  90D8               	bcf	status,0,c
  3993  001C58  360B               	rlcf	___lwdiv@quotient,f,c
  3994  001C5A  360C               	rlcf	___lwdiv@quotient+1,f,c
  3995  001C5C  5009               	movf	___lwdiv@divisor,w,c
  3996  001C5E  5C07               	subwf	___lwdiv@dividend,w,c
  3997  001C60  500A               	movf	___lwdiv@divisor+1,w,c
  3998  001C62  5808               	subwfb	___lwdiv@dividend+1,w,c
  3999  001C64  A0D8               	btfss	status,0,c
  4000  001C66  D005               	goto	i2l2053
  4001  001C68  5009               	movf	___lwdiv@divisor,w,c
  4002  001C6A  5E07               	subwf	___lwdiv@dividend,f,c
  4003  001C6C  500A               	movf	___lwdiv@divisor+1,w,c
  4004  001C6E  5A08               	subwfb	___lwdiv@dividend+1,f,c
  4005  001C70  800B               	bsf	___lwdiv@quotient,0,c
  4006  001C72                     i2l2053:
  4007  001C72  90D8               	bcf	status,0,c
  4008  001C74  320A               	rrcf	___lwdiv@divisor+1,f,c
  4009  001C76  3209               	rrcf	___lwdiv@divisor,f,c
  4010  001C78  2E0D               	decfsz	___lwdiv@counter,f,c
  4011  001C7A  D7ED               	goto	i2l2045
  4012  001C7C                     i2l872:
  4013  001C7C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4014  001C80  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4015  001C84  0012               	return		;funcret
  4016  001C86                     __end_of___lwdiv:
  4017                           	opt stack 0
  4018                           tosu	equ	0xFFF
  4019                           tosh	equ	0xFFE
  4020                           tosl	equ	0xFFD
  4021                           pclatu	equ	0xFFB
  4022                           pclath	equ	0xFFA
  4023                           tblptru	equ	0xFF8
  4024                           tblptrh	equ	0xFF7
  4025                           tblptrl	equ	0xFF6
  4026                           tablat	equ	0xFF5
  4027                           prodh	equ	0xFF4
  4028                           prodl	equ	0xFF3
  4029                           intcon	equ	0xFF2
  4030                           postinc0	equ	0xFEE
  4031                           fsr0h	equ	0xFEA
  4032                           fsr0l	equ	0xFE9
  4033                           wreg	equ	0xFE8
  4034                           indf1	equ	0xFE7
  4035                           postdec1	equ	0xFE5
  4036                           plusw1	equ	0xFE3
  4037                           fsr1h	equ	0xFE2
  4038                           fsr1l	equ	0xFE1
  4039                           indf2	equ	0xFDF
  4040                           postinc2	equ	0xFDE
  4041                           plusw2	equ	0xFDB
  4042                           fsr2h	equ	0xFDA
  4043                           fsr2l	equ	0xFD9
  4044                           status	equ	0xFD8
  4045                           
  4046 ;; *************** function _Lcd_CharCP *****************
  4047 ;; Defined at:
  4048 ;;		line 116 in file "libs/HD44780.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  c               1    wreg     unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  c               1    2[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;Total ram usage:        3 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    1
  4069 ;; This function calls:
  4070 ;;		i2_Lcd_Delay5us
  4071 ;; This function is called by:
  4072 ;;		_Lcd_Text
  4073 ;;		_Lcd_Int
  4074 ;;		_Lcd_ConstText
  4075 ;;		_Lcd_WriteChar
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text25
  4080  001568                     __ptext25:
  4081                           	opt stack 0
  4082  001568                     _Lcd_CharCP:
  4083                           	opt stack 21
  4084                           
  4085                           ;incstack = 0
  4086                           ;Lcd_CharCP@c stored from wreg
  4087  001568  6E03               	movwf	Lcd_CharCP@c,c
  4088                           
  4089                           ;HD44780.c: 117: LATAbits.LA1 = 0; LATAbits.LA0 = 1;
  4090  00156A  9283               	bcf	3971,1,c	;volatile
  4091  00156C  8083               	bsf	3971,0,c	;volatile
  4092                           
  4093                           ;HD44780.c: 118: LATAbits.LA5 = (c & 0b10000000)>>7; LATAbits.LA4 = (c & 0b01000000)>>6;
  4094  00156E  6A01               	clrf	??_Lcd_CharCP& (0+255),c
  4095  001570  AE03               	btfss	Lcd_CharCP@c,7,c
  4096  001572  D001               	bra	i2u111_45
  4097  001574  2A01               	incf	??_Lcd_CharCP& (0+255),f,c
  4098  001576                     i2u111_45:
  4099  001576  0E01               	movlw	1
  4100  001578  1601               	andwf	??_Lcd_CharCP,f,c
  4101  00157A  3A01               	swapf	??_Lcd_CharCP,f,c
  4102  00157C  4601               	rlncf	??_Lcd_CharCP,f,c
  4103  00157E  5083               	movf	3971,w,c	;volatile
  4104  001580  1801               	xorwf	??_Lcd_CharCP,w,c
  4105  001582  0BDF               	andlw	-33
  4106  001584  1801               	xorwf	??_Lcd_CharCP,w,c
  4107  001586  6E83               	movwf	3971,c	;volatile
  4108  001588  C003  F001         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4109  00158C  0E06               	movlw	6
  4110  00158E  6E02               	movwf	(??_Lcd_CharCP+1)& (0+255),c
  4111  001590                     i2u112_45:
  4112  001590  90D8               	bcf	status,0,c
  4113  001592  3201               	rrcf	??_Lcd_CharCP,f,c
  4114  001594  2E02               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
  4115  001596  D7FC               	goto	i2u112_45
  4116  001598  0E01               	movlw	1
  4117  00159A  1601               	andwf	??_Lcd_CharCP,f,c
  4118  00159C  3A01               	swapf	??_Lcd_CharCP,f,c
  4119  00159E  5083               	movf	3971,w,c	;volatile
  4120  0015A0  1801               	xorwf	??_Lcd_CharCP,w,c
  4121  0015A2  0BEF               	andlw	-17
  4122  0015A4  1801               	xorwf	??_Lcd_CharCP,w,c
  4123  0015A6  6E83               	movwf	3971,c	;volatile
  4124                           
  4125                           ;HD44780.c: 119: LATAbits.LA3 = (c & 0b00100000)>>5; LATAbits.LA2 = (c & 0b00010000)>>4;
  4126  0015A8  C003  F001         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4127  0015AC  0E05               	movlw	5
  4128  0015AE  6E02               	movwf	(??_Lcd_CharCP+1)& (0+255),c
  4129  0015B0                     i2u113_45:
  4130  0015B0  90D8               	bcf	status,0,c
  4131  0015B2  3201               	rrcf	??_Lcd_CharCP,f,c
  4132  0015B4  2E02               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
  4133  0015B6  D7FC               	goto	i2u113_45
  4134  0015B8  0E01               	movlw	1
  4135  0015BA  1601               	andwf	??_Lcd_CharCP,f,c
  4136  0015BC  4601               	rlncf	??_Lcd_CharCP,f,c
  4137  0015BE  4601               	rlncf	??_Lcd_CharCP,f,c
  4138  0015C0  4601               	rlncf	??_Lcd_CharCP,f,c
  4139  0015C2  5083               	movf	3971,w,c	;volatile
  4140  0015C4  1801               	xorwf	??_Lcd_CharCP,w,c
  4141  0015C6  0BF7               	andlw	-9
  4142  0015C8  1801               	xorwf	??_Lcd_CharCP,w,c
  4143  0015CA  6E83               	movwf	3971,c	;volatile
  4144  0015CC  C003  F001         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4145  0015D0  3A01               	swapf	??_Lcd_CharCP,f,c
  4146  0015D2  0E0F               	movlw	15
  4147  0015D4  1601               	andwf	??_Lcd_CharCP,f,c
  4148  0015D6  0E01               	movlw	1
  4149  0015D8  1601               	andwf	??_Lcd_CharCP,f,c
  4150  0015DA  4601               	rlncf	??_Lcd_CharCP,f,c
  4151  0015DC  4601               	rlncf	??_Lcd_CharCP,f,c
  4152  0015DE  5083               	movf	3971,w,c	;volatile
  4153  0015E0  1801               	xorwf	??_Lcd_CharCP,w,c
  4154  0015E2  0BFB               	andlw	-5
  4155  0015E4  1801               	xorwf	??_Lcd_CharCP,w,c
  4156  0015E6  6E83               	movwf	3971,c	;volatile
  4157                           
  4158                           ;HD44780.c: 120: _delay(10);
  4159  0015E8  0E03               	movlw	3
  4160  0015EA                     i2u216_47:
  4161  0015EA  2EE8               	decfsz	wreg,f,c
  4162  0015EC  D7FE               	bra	i2u216_47
  4163  0015EE  F000               	nop	
  4164                           
  4165                           ;HD44780.c: 121: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  4166  0015F0  8283               	bsf	3971,1,c	;volatile
  4167  0015F2  EC2C  F00F         	call	i2_Lcd_Delay5us	;wreg free
  4168  0015F6  9283               	bcf	3971,1,c	;volatile
  4169                           
  4170                           ;HD44780.c: 122: LATAbits.LA5 = (c & 0b00001000)>>3; LATAbits.LA4 = (c & 0b00000100)>>2;
  4171  0015F8  C003  F001         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4172  0015FC  90D8               	bcf	status,0,c
  4173  0015FE  3201               	rrcf	??_Lcd_CharCP,f,c
  4174  001600  90D8               	bcf	status,0,c
  4175  001602  3201               	rrcf	??_Lcd_CharCP,f,c
  4176  001604  90D8               	bcf	status,0,c
  4177  001606  3201               	rrcf	??_Lcd_CharCP,f,c
  4178  001608  0E01               	movlw	1
  4179  00160A  1601               	andwf	??_Lcd_CharCP,f,c
  4180  00160C  3A01               	swapf	??_Lcd_CharCP,f,c
  4181  00160E  4601               	rlncf	??_Lcd_CharCP,f,c
  4182  001610  5083               	movf	3971,w,c	;volatile
  4183  001612  1801               	xorwf	??_Lcd_CharCP,w,c
  4184  001614  0BDF               	andlw	-33
  4185  001616  1801               	xorwf	??_Lcd_CharCP,w,c
  4186  001618  6E83               	movwf	3971,c	;volatile
  4187  00161A  C003  F001         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4188  00161E  90D8               	bcf	status,0,c
  4189  001620  3201               	rrcf	??_Lcd_CharCP,f,c
  4190  001622  90D8               	bcf	status,0,c
  4191  001624  3201               	rrcf	??_Lcd_CharCP,f,c
  4192  001626  0E01               	movlw	1
  4193  001628  1601               	andwf	??_Lcd_CharCP,f,c
  4194  00162A  3A01               	swapf	??_Lcd_CharCP,f,c
  4195  00162C  5083               	movf	3971,w,c	;volatile
  4196  00162E  1801               	xorwf	??_Lcd_CharCP,w,c
  4197  001630  0BEF               	andlw	-17
  4198  001632  1801               	xorwf	??_Lcd_CharCP,w,c
  4199  001634  6E83               	movwf	3971,c	;volatile
  4200                           
  4201                           ;HD44780.c: 123: LATAbits.LA3 = (c & 0b00000010)>>1; LATAbits.LA2 = (c & 0b00000001);
  4202  001636  C003  F001         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4203  00163A  90D8               	bcf	status,0,c
  4204  00163C  3201               	rrcf	??_Lcd_CharCP,f,c
  4205  00163E  0E01               	movlw	1
  4206  001640  1601               	andwf	??_Lcd_CharCP,f,c
  4207  001642  4601               	rlncf	??_Lcd_CharCP,f,c
  4208  001644  4601               	rlncf	??_Lcd_CharCP,f,c
  4209  001646  4601               	rlncf	??_Lcd_CharCP,f,c
  4210  001648  5083               	movf	3971,w,c	;volatile
  4211  00164A  1801               	xorwf	??_Lcd_CharCP,w,c
  4212  00164C  0BF7               	andlw	-9
  4213  00164E  1801               	xorwf	??_Lcd_CharCP,w,c
  4214  001650  6E83               	movwf	3971,c	;volatile
  4215  001652  C003  F001         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4216  001656  0E01               	movlw	1
  4217  001658  1601               	andwf	??_Lcd_CharCP,f,c
  4218  00165A  4601               	rlncf	??_Lcd_CharCP,f,c
  4219  00165C  4601               	rlncf	??_Lcd_CharCP,f,c
  4220  00165E  5083               	movf	3971,w,c	;volatile
  4221  001660  1801               	xorwf	??_Lcd_CharCP,w,c
  4222  001662  0BFB               	andlw	-5
  4223  001664  1801               	xorwf	??_Lcd_CharCP,w,c
  4224  001666  6E83               	movwf	3971,c	;volatile
  4225                           
  4226                           ;HD44780.c: 124: _delay(10);
  4227  001668  0E03               	movlw	3
  4228  00166A                     i2u217_47:
  4229  00166A  2EE8               	decfsz	wreg,f,c
  4230  00166C  D7FE               	bra	i2u217_47
  4231  00166E  F000               	nop	
  4232                           
  4233                           ;HD44780.c: 125: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  4234  001670  8283               	bsf	3971,1,c	;volatile
  4235  001672  EC2C  F00F         	call	i2_Lcd_Delay5us	;wreg free
  4236  001676  9283               	bcf	3971,1,c	;volatile
  4237                           
  4238                           ;HD44780.c: 126: Lcd_Delay5us();
  4239  001678  EC2C  F00F         	call	i2_Lcd_Delay5us	;wreg free
  4240  00167C  0012               	return		;funcret
  4241  00167E                     __end_of_Lcd_CharCP:
  4242                           	opt stack 0
  4243                           tosu	equ	0xFFF
  4244                           tosh	equ	0xFFE
  4245                           tosl	equ	0xFFD
  4246                           pclatu	equ	0xFFB
  4247                           pclath	equ	0xFFA
  4248                           tblptru	equ	0xFF8
  4249                           tblptrh	equ	0xFF7
  4250                           tblptrl	equ	0xFF6
  4251                           tablat	equ	0xFF5
  4252                           prodh	equ	0xFF4
  4253                           prodl	equ	0xFF3
  4254                           intcon	equ	0xFF2
  4255                           postinc0	equ	0xFEE
  4256                           fsr0h	equ	0xFEA
  4257                           fsr0l	equ	0xFE9
  4258                           wreg	equ	0xFE8
  4259                           indf1	equ	0xFE7
  4260                           postdec1	equ	0xFE5
  4261                           plusw1	equ	0xFE3
  4262                           fsr1h	equ	0xFE2
  4263                           fsr1l	equ	0xFE1
  4264                           indf2	equ	0xFDF
  4265                           postinc2	equ	0xFDE
  4266                           plusw2	equ	0xFDB
  4267                           fsr2h	equ	0xFDA
  4268                           fsr2l	equ	0xFD9
  4269                           status	equ	0xFD8
  4270                           
  4271 ;; *************** function i2_Lcd_Delay5us *****************
  4272 ;; Defined at:
  4273 ;;		line 150 in file "libs/HD44780.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		None
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_Lcd_CharCP
  4297 ;;		i2_Lcd_Command
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text26
  4302  001E58                     __ptext26:
  4303                           	opt stack 0
  4304  001E58                     i2_Lcd_Delay5us:
  4305                           	opt stack 21
  4306                           
  4307                           ;HD44780.c: 151: _delay((unsigned long)((5)*(4000000/4000000.0)));
  4308                           
  4309                           ;incstack = 0
  4310  001E58  D000               	nop2		;2 cycle nop
  4311  001E5A  D000               	nop2		;2 cycle nop
  4312  001E5C  F000               	nop	
  4313  001E5E  0012               	return		;funcret
  4314  001E60                     __end_ofi2_Lcd_Delay5us:
  4315                           	opt stack 0
  4316                           tosu	equ	0xFFF
  4317                           tosh	equ	0xFFE
  4318                           tosl	equ	0xFFD
  4319                           pclatu	equ	0xFFB
  4320                           pclath	equ	0xFFA
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           intcon	equ	0xFF2
  4328                           postinc0	equ	0xFEE
  4329                           fsr0h	equ	0xFEA
  4330                           fsr0l	equ	0xFE9
  4331                           wreg	equ	0xFE8
  4332                           indf1	equ	0xFE7
  4333                           postdec1	equ	0xFE5
  4334                           plusw1	equ	0xFE3
  4335                           fsr1h	equ	0xFE2
  4336                           fsr1l	equ	0xFE1
  4337                           indf2	equ	0xFDF
  4338                           postinc2	equ	0xFDE
  4339                           plusw2	equ	0xFDB
  4340                           fsr2h	equ	0xFDA
  4341                           fsr2l	equ	0xFD9
  4342                           status	equ	0xFD8
  4343                           
  4344 ;; *************** function _GetDay *****************
  4345 ;; Defined at:
  4346 ;;		line 80 in file "libs/gps.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  Date            2   14[COMRAM] PTR unsigned char 
  4349 ;;		 -> Timer_1ms@Date(7), 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  y               2   26[COMRAM] int 
  4352 ;;  m               1   25[COMRAM] unsigned char 
  4353 ;;  d               1   24[COMRAM] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      char 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4364 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;Total ram usage:       14 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    1
  4370 ;; This function calls:
  4371 ;;		___awdiv
  4372 ;;		___awmod
  4373 ;;		___wmul
  4374 ;; This function is called by:
  4375 ;;		_Timer_1ms
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text27
  4380  000F18                     __ptext27:
  4381                           	opt stack 0
  4382  000F18                     _GetDay:
  4383                           	opt stack 22
  4384                           
  4385                           ;gps.c: 81: UINT8 d = (Date[0]-0x30)*10 + (Date[1]-0x30);
  4386                           
  4387                           ;incstack = 0
  4388  000F18  EE20 F001          	lfsr	2,1
  4389  000F1C  500F               	movf	GetDay@Date,w,c
  4390  000F1E  26D9               	addwf	fsr2l,f,c
  4391  000F20  5010               	movf	GetDay@Date+1,w,c
  4392  000F22  22DA               	addwfc	fsr2h,f,c
  4393  000F24  50DF               	movf	indf2,w,c
  4394  000F26  6E11               	movwf	??_GetDay& (0+255),c
  4395  000F28  C00F  FFD9         	movff	GetDay@Date,fsr2l
  4396  000F2C  C010  FFDA         	movff	GetDay@Date+1,fsr2h
  4397  000F30  50DF               	movf	indf2,w,c
  4398  000F32  0FD0               	addlw	208
  4399  000F34  0D0A               	mullw	10
  4400  000F36  50F3               	movf	prodl,w,c
  4401  000F38  2411               	addwf	??_GetDay,w,c
  4402  000F3A  0FD0               	addlw	208
  4403  000F3C  6E19               	movwf	GetDay@d,c
  4404                           
  4405                           ;gps.c: 82: UINT8 m = (Date[2]-0x30)*10 + (Date[3]-0x30);
  4406  000F3E  EE20 F003          	lfsr	2,3
  4407  000F42  500F               	movf	GetDay@Date,w,c
  4408  000F44  26D9               	addwf	fsr2l,f,c
  4409  000F46  5010               	movf	GetDay@Date+1,w,c
  4410  000F48  22DA               	addwfc	fsr2h,f,c
  4411  000F4A  50DF               	movf	indf2,w,c
  4412  000F4C  6E11               	movwf	??_GetDay& (0+255),c
  4413  000F4E  EE20 F002          	lfsr	2,2
  4414  000F52  500F               	movf	GetDay@Date,w,c
  4415  000F54  26D9               	addwf	fsr2l,f,c
  4416  000F56  5010               	movf	GetDay@Date+1,w,c
  4417  000F58  22DA               	addwfc	fsr2h,f,c
  4418  000F5A  50DF               	movf	indf2,w,c
  4419  000F5C  0FD0               	addlw	208
  4420  000F5E  0D0A               	mullw	10
  4421  000F60  50F3               	movf	prodl,w,c
  4422  000F62  2411               	addwf	??_GetDay,w,c
  4423  000F64  0FD0               	addlw	208
  4424  000F66  6E1A               	movwf	GetDay@m,c
  4425                           
  4426                           ;gps.c: 83: INT y = (Date[4]-0x30)*10 + (Date[5]-0x30) + GLOBAL_CENTURY*100;
  4427  000F68  EE20 F004          	lfsr	2,4
  4428  000F6C  500F               	movf	GetDay@Date,w,c
  4429  000F6E  26D9               	addwf	fsr2l,f,c
  4430  000F70  5010               	movf	GetDay@Date+1,w,c
  4431  000F72  22DA               	addwfc	fsr2h,f,c
  4432  000F74  50DF               	movf	indf2,w,c
  4433  000F76  6E11               	movwf	??_GetDay& (0+255),c
  4434  000F78  0ED0               	movlw	208
  4435  000F7A  2411               	addwf	??_GetDay,w,c
  4436  000F7C  6E01               	movwf	___wmul@multiplier,c
  4437  000F7E  6A02               	clrf	___wmul@multiplier+1,c
  4438  000F80  0EFF               	movlw	255
  4439  000F82  2202               	addwfc	___wmul@multiplier+1,f,c
  4440  000F84  0E00               	movlw	0
  4441  000F86  6E04               	movwf	___wmul@multiplicand+1,c
  4442  000F88  0E0A               	movlw	10
  4443  000F8A  6E03               	movwf	___wmul@multiplicand,c
  4444  000F8C  ECE4  F00E         	call	___wmul	;wreg free
  4445  000F90  EE20 F005          	lfsr	2,5
  4446  000F94  500F               	movf	GetDay@Date,w,c
  4447  000F96  26D9               	addwf	fsr2l,f,c
  4448  000F98  5010               	movf	GetDay@Date+1,w,c
  4449  000F9A  22DA               	addwfc	fsr2h,f,c
  4450  000F9C  50DF               	movf	indf2,w,c
  4451  000F9E  6E12               	movwf	(??_GetDay+1)& (0+255),c
  4452  000FA0  6A13               	clrf	(??_GetDay+2)& (0+255),c
  4453  000FA2  5001               	movf	?___wmul,w,c
  4454  000FA4  2612               	addwf	??_GetDay+1,f,c
  4455  000FA6  5002               	movf	?___wmul+1,w,c
  4456  000FA8  2213               	addwfc	??_GetDay+2,f,c
  4457  000FAA  505B               	movf	_GLOBAL_CENTURY,w,c
  4458  000FAC  0D64               	mullw	100
  4459  000FAE  50F3               	movf	prodl,w,c
  4460  000FB0  2612               	addwf	??_GetDay+1,f,c
  4461  000FB2  50F4               	movf	prodh,w,c
  4462  000FB4  2213               	addwfc	??_GetDay+2,f,c
  4463  000FB6  0ED0               	movlw	208
  4464  000FB8  2412               	addwf	??_GetDay+1,w,c
  4465  000FBA  6E1B               	movwf	GetDay@y,c
  4466  000FBC  0EFF               	movlw	255
  4467  000FBE  2013               	addwfc	??_GetDay+2,w,c
  4468  000FC0  6E1C               	movwf	GetDay@y+1,c
  4469                           
  4470                           ;gps.c: 84: static int t[] = { 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 };
  4471                           ;gps.c: 85: y -= m < 3;
  4472  000FC2  0E02               	movlw	2
  4473  000FC4  641A               	cpfsgt	GetDay@m,c
  4474  000FC6  D001               	goto	i2u159_41
  4475  000FC8  D002               	goto	i2u159_40
  4476  000FCA                     i2u159_41:
  4477  000FCA  0E01               	movlw	1
  4478  000FCC  D001               	goto	i2u160_40
  4479  000FCE                     i2u159_40:
  4480  000FCE  0E00               	movlw	0
  4481  000FD0                     i2u160_40:
  4482  000FD0  5E1B               	subwf	GetDay@y,f,c
  4483  000FD2  0E00               	movlw	0
  4484  000FD4  5A1C               	subwfb	GetDay@y+1,f,c
  4485                           
  4486                           ;gps.c: 86: return ( y + y/4 - y/100 + y/400 + t[m-1] + d) % 7;
  4487  000FD6  0EFE               	movlw	254
  4488  000FD8  6E11               	movwf	??_GetDay& (0+255),c
  4489  000FDA  0EFF               	movlw	255
  4490  000FDC  6E12               	movwf	(??_GetDay+1)& (0+255),c
  4491  000FDE  501A               	movf	GetDay@m,w,c
  4492  000FE0  6E13               	movwf	(??_GetDay+2)& (0+255),c
  4493  000FE2  6A14               	clrf	(??_GetDay+3)& (0+255),c
  4494  000FE4  90D8               	bcf	status,0,c
  4495  000FE6  3613               	rlcf	??_GetDay+2,f,c
  4496  000FE8  3614               	rlcf	??_GetDay+3,f,c
  4497  000FEA  5011               	movf	??_GetDay,w,c
  4498  000FEC  2613               	addwf	??_GetDay+2,f,c
  4499  000FEE  5012               	movf	??_GetDay+1,w,c
  4500  000FF0  2214               	addwfc	??_GetDay+3,f,c
  4501  000FF2  0EA0               	movlw	low GetDay@t
  4502  000FF4  2413               	addwf	??_GetDay+2,w,c
  4503  000FF6  6ED9               	movwf	fsr2l,c
  4504  000FF8  0E00               	movlw	high GetDay@t
  4505  000FFA  2014               	addwfc	??_GetDay+3,w,c
  4506  000FFC  6EDA               	movwf	fsr2h,c
  4507  000FFE  CFDE F015          	movff	postinc2,??_GetDay+4
  4508  001002  CFDD F016          	movff	postdec2,??_GetDay+5
  4509  001006  0E00               	movlw	0
  4510  001008  6E04               	movwf	___awdiv@divisor+1,c
  4511  00100A  0E04               	movlw	4
  4512  00100C  6E03               	movwf	___awdiv@divisor,c
  4513  00100E  C01B  F001         	movff	GetDay@y,___awdiv@dividend
  4514  001012  C01C  F002         	movff	GetDay@y+1,___awdiv@dividend+1
  4515  001016  EC3E  F00D         	call	___awdiv	;wreg free
  4516  00101A  C001  F017         	movff	?___awdiv,??_GetDay+6
  4517  00101E  C002  F018         	movff	?___awdiv+1,??_GetDay+7
  4518  001022  0E01               	movlw	1
  4519  001024  6E04               	movwf	___awdiv@divisor+1,c
  4520  001026  0E90               	movlw	144
  4521  001028  6E03               	movwf	___awdiv@divisor,c
  4522  00102A  C01B  F001         	movff	GetDay@y,___awdiv@dividend
  4523  00102E  C01C  F002         	movff	GetDay@y+1,___awdiv@dividend+1
  4524  001032  EC3E  F00D         	call	___awdiv	;wreg free
  4525  001036  5001               	movf	?___awdiv,w,c
  4526  001038  2617               	addwf	??_GetDay+6,f,c
  4527  00103A  5002               	movf	?___awdiv+1,w,c
  4528  00103C  2218               	addwfc	??_GetDay+7,f,c
  4529  00103E  5019               	movf	GetDay@d,w,c
  4530  001040  2617               	addwf	??_GetDay+6,f,c
  4531  001042  0E00               	movlw	0
  4532  001044  2218               	addwfc	??_GetDay+7,f,c
  4533  001046  0E00               	movlw	0
  4534  001048  6E04               	movwf	___awdiv@divisor+1,c
  4535  00104A  0E64               	movlw	100
  4536  00104C  6E03               	movwf	___awdiv@divisor,c
  4537  00104E  C01B  F001         	movff	GetDay@y,___awdiv@dividend
  4538  001052  C01C  F002         	movff	GetDay@y+1,___awdiv@dividend+1
  4539  001056  EC3E  F00D         	call	___awdiv	;wreg free
  4540  00105A  1E01               	comf	?___awdiv,f,c
  4541  00105C  1E02               	comf	?___awdiv+1,f,c
  4542  00105E  4A01               	infsnz	?___awdiv,f,c
  4543  001060  2A02               	incf	?___awdiv+1,f,c
  4544  001062  5001               	movf	?___awdiv,w,c
  4545  001064  2617               	addwf	??_GetDay+6,f,c
  4546  001066  5002               	movf	?___awdiv+1,w,c
  4547  001068  2218               	addwfc	??_GetDay+7,f,c
  4548  00106A  5015               	movf	??_GetDay+4,w,c
  4549  00106C  2617               	addwf	??_GetDay+6,f,c
  4550  00106E  5016               	movf	??_GetDay+5,w,c
  4551  001070  2218               	addwfc	??_GetDay+7,f,c
  4552  001072  501B               	movf	GetDay@y,w,c
  4553  001074  2417               	addwf	??_GetDay+6,w,c
  4554  001076  6E09               	movwf	___awmod@dividend,c
  4555  001078  501C               	movf	GetDay@y+1,w,c
  4556  00107A  2018               	addwfc	??_GetDay+7,w,c
  4557  00107C  6E0A               	movwf	___awmod@dividend+1,c
  4558  00107E  0E00               	movlw	0
  4559  001080  6E0C               	movwf	___awmod@divisor+1,c
  4560  001082  0E07               	movlw	7
  4561  001084  6E0B               	movwf	___awmod@divisor,c
  4562  001086  EC80  F00D         	call	___awmod	;wreg free
  4563  00108A  5009               	movf	?___awmod,w,c
  4564  00108C  0012               	return	
  4565  00108E                     __end_of_GetDay:
  4566                           	opt stack 0
  4567                           tosu	equ	0xFFF
  4568                           tosh	equ	0xFFE
  4569                           tosl	equ	0xFFD
  4570                           pclatu	equ	0xFFB
  4571                           pclath	equ	0xFFA
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           postinc0	equ	0xFEE
  4580                           fsr0h	equ	0xFEA
  4581                           fsr0l	equ	0xFE9
  4582                           wreg	equ	0xFE8
  4583                           indf1	equ	0xFE7
  4584                           postdec1	equ	0xFE5
  4585                           plusw1	equ	0xFE3
  4586                           fsr1h	equ	0xFE2
  4587                           fsr1l	equ	0xFE1
  4588                           indf2	equ	0xFDF
  4589                           postinc2	equ	0xFDE
  4590                           postdec2	equ	0xFDD
  4591                           plusw2	equ	0xFDB
  4592                           fsr2h	equ	0xFDA
  4593                           fsr2l	equ	0xFD9
  4594                           status	equ	0xFD8
  4595                           
  4596 ;; *************** function ___wmul *****************
  4597 ;; Defined at:
  4598 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  multiplier      2    0[COMRAM] unsigned int 
  4601 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  product         2    4[COMRAM] unsigned int 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  2    0[COMRAM] unsigned int 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0, prodl, prodh
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;Total ram usage:        6 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_Lcd_Int
  4623 ;;		_GetDay
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text28
  4628  001DC8                     __ptext28:
  4629                           	opt stack 0
  4630  001DC8                     ___wmul:
  4631                           	opt stack 22
  4632                           
  4633                           ;incstack = 0
  4634  001DC8  5001               	movf	___wmul@multiplier,w,c
  4635  001DCA  0203               	mulwf	___wmul@multiplicand,c
  4636  001DCC  CFF3 F005          	movff	prodl,___wmul@product
  4637  001DD0  CFF4 F006          	movff	prodh,___wmul@product+1
  4638  001DD4  5001               	movf	___wmul@multiplier,w,c
  4639  001DD6  0204               	mulwf	___wmul@multiplicand+1,c
  4640  001DD8  50F3               	movf	prodl,w,c
  4641  001DDA  2606               	addwf	___wmul@product+1,f,c
  4642  001DDC  5002               	movf	___wmul@multiplier+1,w,c
  4643  001DDE  0203               	mulwf	___wmul@multiplicand,c
  4644  001DE0  50F3               	movf	prodl,w,c
  4645  001DE2  2606               	addwf	___wmul@product+1,f,c
  4646  001DE4  C005  F001         	movff	___wmul@product,?___wmul
  4647  001DE8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4648  001DEC  0012               	return	
  4649  001DEE                     __end_of___wmul:
  4650                           	opt stack 0
  4651                           tosu	equ	0xFFF
  4652                           tosh	equ	0xFFE
  4653                           tosl	equ	0xFFD
  4654                           pclatu	equ	0xFFB
  4655                           pclath	equ	0xFFA
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           prodh	equ	0xFF4
  4661                           prodl	equ	0xFF3
  4662                           intcon	equ	0xFF2
  4663                           postinc0	equ	0xFEE
  4664                           fsr0h	equ	0xFEA
  4665                           fsr0l	equ	0xFE9
  4666                           wreg	equ	0xFE8
  4667                           indf1	equ	0xFE7
  4668                           postdec1	equ	0xFE5
  4669                           plusw1	equ	0xFE3
  4670                           fsr1h	equ	0xFE2
  4671                           fsr1l	equ	0xFE1
  4672                           indf2	equ	0xFDF
  4673                           postinc2	equ	0xFDE
  4674                           postdec2	equ	0xFDD
  4675                           plusw2	equ	0xFDB
  4676                           fsr2h	equ	0xFDA
  4677                           fsr2l	equ	0xFD9
  4678                           status	equ	0xFD8
  4679                           
  4680 ;; *************** function ___awmod *****************
  4681 ;; Defined at:
  4682 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  dividend        2    8[COMRAM] int 
  4685 ;;  divisor         2   10[COMRAM] int 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  sign            1   13[COMRAM] unsigned char 
  4688 ;;  counter         1   12[COMRAM] unsigned char 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  2    8[COMRAM] int 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4701 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4702 ;;Total ram usage:        6 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_GetDay
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text29
  4712  001B00                     __ptext29:
  4713                           	opt stack 0
  4714  001B00                     ___awmod:
  4715                           	opt stack 22
  4716                           
  4717                           ;incstack = 0
  4718  001B00  0E00               	movlw	0
  4719  001B02  6E0E               	movwf	___awmod@sign,c
  4720  001B04  AE0A               	btfss	___awmod@dividend+1,7,c
  4721  001B06  D006               	goto	i2l2007
  4722  001B08  6C09               	negf	___awmod@dividend,c
  4723  001B0A  1E0A               	comf	___awmod@dividend+1,f,c
  4724  001B0C  B0D8               	btfsc	status,0,c
  4725  001B0E  2A0A               	incf	___awmod@dividend+1,f,c
  4726  001B10  0E01               	movlw	1
  4727  001B12  6E0E               	movwf	___awmod@sign,c
  4728  001B14                     i2l2007:
  4729  001B14  AE0C               	btfss	___awmod@divisor+1,7,c
  4730  001B16  D004               	goto	i2l2011
  4731  001B18  6C0B               	negf	___awmod@divisor,c
  4732  001B1A  1E0C               	comf	___awmod@divisor+1,f,c
  4733  001B1C  B0D8               	btfsc	status,0,c
  4734  001B1E  2A0C               	incf	___awmod@divisor+1,f,c
  4735  001B20                     i2l2011:
  4736  001B20  500B               	movf	___awmod@divisor,w,c
  4737  001B22  100C               	iorwf	___awmod@divisor+1,w,c
  4738  001B24  B4D8               	btfsc	status,2,c
  4739  001B26  D018               	goto	i2l2027
  4740  001B28  0E01               	movlw	1
  4741  001B2A  6E0D               	movwf	___awmod@counter,c
  4742  001B2C  D004               	goto	i2l2017
  4743  001B2E                     i2l2015:
  4744  001B2E  90D8               	bcf	status,0,c
  4745  001B30  360B               	rlcf	___awmod@divisor,f,c
  4746  001B32  360C               	rlcf	___awmod@divisor+1,f,c
  4747  001B34  2A0D               	incf	___awmod@counter,f,c
  4748  001B36                     i2l2017:
  4749  001B36  AE0C               	btfss	___awmod@divisor+1,7,c
  4750  001B38  D7FA               	goto	i2l2015
  4751  001B3A                     i2l2019:
  4752  001B3A  500B               	movf	___awmod@divisor,w,c
  4753  001B3C  5C09               	subwf	___awmod@dividend,w,c
  4754  001B3E  500C               	movf	___awmod@divisor+1,w,c
  4755  001B40  580A               	subwfb	___awmod@dividend+1,w,c
  4756  001B42  A0D8               	btfss	status,0,c
  4757  001B44  D004               	goto	i2l2023
  4758  001B46  500B               	movf	___awmod@divisor,w,c
  4759  001B48  5E09               	subwf	___awmod@dividend,f,c
  4760  001B4A  500C               	movf	___awmod@divisor+1,w,c
  4761  001B4C  5A0A               	subwfb	___awmod@dividend+1,f,c
  4762  001B4E                     i2l2023:
  4763  001B4E  90D8               	bcf	status,0,c
  4764  001B50  320C               	rrcf	___awmod@divisor+1,f,c
  4765  001B52  320B               	rrcf	___awmod@divisor,f,c
  4766  001B54  2E0D               	decfsz	___awmod@counter,f,c
  4767  001B56  D7F1               	goto	i2l2019
  4768  001B58                     i2l2027:
  4769  001B58  500E               	movf	___awmod@sign,w,c
  4770  001B5A  B4D8               	btfsc	status,2,c
  4771  001B5C  D004               	goto	i2l2031
  4772  001B5E  6C09               	negf	___awmod@dividend,c
  4773  001B60  1E0A               	comf	___awmod@dividend+1,f,c
  4774  001B62  B0D8               	btfsc	status,0,c
  4775  001B64  2A0A               	incf	___awmod@dividend+1,f,c
  4776  001B66                     i2l2031:
  4777  001B66  C009  F009         	movff	___awmod@dividend,?___awmod
  4778  001B6A  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4779  001B6E  0012               	return	
  4780  001B70                     __end_of___awmod:
  4781                           	opt stack 0
  4782                           tosu	equ	0xFFF
  4783                           tosh	equ	0xFFE
  4784                           tosl	equ	0xFFD
  4785                           pclatu	equ	0xFFB
  4786                           pclath	equ	0xFFA
  4787                           tblptru	equ	0xFF8
  4788                           tblptrh	equ	0xFF7
  4789                           tblptrl	equ	0xFF6
  4790                           tablat	equ	0xFF5
  4791                           prodh	equ	0xFF4
  4792                           prodl	equ	0xFF3
  4793                           intcon	equ	0xFF2
  4794                           postinc0	equ	0xFEE
  4795                           fsr0h	equ	0xFEA
  4796                           fsr0l	equ	0xFE9
  4797                           wreg	equ	0xFE8
  4798                           indf1	equ	0xFE7
  4799                           postdec1	equ	0xFE5
  4800                           plusw1	equ	0xFE3
  4801                           fsr1h	equ	0xFE2
  4802                           fsr1l	equ	0xFE1
  4803                           indf2	equ	0xFDF
  4804                           postinc2	equ	0xFDE
  4805                           postdec2	equ	0xFDD
  4806                           plusw2	equ	0xFDB
  4807                           fsr2h	equ	0xFDA
  4808                           fsr2l	equ	0xFD9
  4809                           status	equ	0xFD8
  4810                           
  4811 ;; *************** function ___awdiv *****************
  4812 ;; Defined at:
  4813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  dividend        2    0[COMRAM] int 
  4816 ;;  divisor         2    2[COMRAM] int 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  quotient        2    6[COMRAM] int 
  4819 ;;  sign            1    5[COMRAM] unsigned char 
  4820 ;;  counter         1    4[COMRAM] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  2    0[COMRAM] int 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4833 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4834 ;;Total ram usage:        8 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_Lcd_Int
  4840 ;;		_GetDay
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text30
  4845  001A7C                     __ptext30:
  4846                           	opt stack 0
  4847  001A7C                     ___awdiv:
  4848                           	opt stack 22
  4849                           
  4850                           ;incstack = 0
  4851  001A7C  0E00               	movlw	0
  4852  001A7E  6E06               	movwf	___awdiv@sign,c
  4853  001A80  AE04               	btfss	___awdiv@divisor+1,7,c
  4854  001A82  D006               	goto	i2l1963
  4855  001A84  6C03               	negf	___awdiv@divisor,c
  4856  001A86  1E04               	comf	___awdiv@divisor+1,f,c
  4857  001A88  B0D8               	btfsc	status,0,c
  4858  001A8A  2A04               	incf	___awdiv@divisor+1,f,c
  4859  001A8C  0E01               	movlw	1
  4860  001A8E  6E06               	movwf	___awdiv@sign,c
  4861  001A90                     i2l1963:
  4862  001A90  AE02               	btfss	___awdiv@dividend+1,7,c
  4863  001A92  D006               	goto	i2l1969
  4864  001A94  6C01               	negf	___awdiv@dividend,c
  4865  001A96  1E02               	comf	___awdiv@dividend+1,f,c
  4866  001A98  B0D8               	btfsc	status,0,c
  4867  001A9A  2A02               	incf	___awdiv@dividend+1,f,c
  4868  001A9C  0E01               	movlw	1
  4869  001A9E  1A06               	xorwf	___awdiv@sign,f,c
  4870  001AA0                     i2l1969:
  4871  001AA0  0E00               	movlw	0
  4872  001AA2  6E08               	movwf	___awdiv@quotient+1,c
  4873  001AA4  0E00               	movlw	0
  4874  001AA6  6E07               	movwf	___awdiv@quotient,c
  4875  001AA8  5003               	movf	___awdiv@divisor,w,c
  4876  001AAA  1004               	iorwf	___awdiv@divisor+1,w,c
  4877  001AAC  B4D8               	btfsc	status,2,c
  4878  001AAE  D01C               	goto	i2l1991
  4879  001AB0  0E01               	movlw	1
  4880  001AB2  6E05               	movwf	___awdiv@counter,c
  4881  001AB4  D004               	goto	i2l1977
  4882  001AB6                     i2l1975:
  4883  001AB6  90D8               	bcf	status,0,c
  4884  001AB8  3603               	rlcf	___awdiv@divisor,f,c
  4885  001ABA  3604               	rlcf	___awdiv@divisor+1,f,c
  4886  001ABC  2A05               	incf	___awdiv@counter,f,c
  4887  001ABE                     i2l1977:
  4888  001ABE  AE04               	btfss	___awdiv@divisor+1,7,c
  4889  001AC0  D7FA               	goto	i2l1975
  4890  001AC2                     i2l1979:
  4891  001AC2  90D8               	bcf	status,0,c
  4892  001AC4  3607               	rlcf	___awdiv@quotient,f,c
  4893  001AC6  3608               	rlcf	___awdiv@quotient+1,f,c
  4894  001AC8  5003               	movf	___awdiv@divisor,w,c
  4895  001ACA  5C01               	subwf	___awdiv@dividend,w,c
  4896  001ACC  5004               	movf	___awdiv@divisor+1,w,c
  4897  001ACE  5802               	subwfb	___awdiv@dividend+1,w,c
  4898  001AD0  A0D8               	btfss	status,0,c
  4899  001AD2  D005               	goto	i2l1987
  4900  001AD4  5003               	movf	___awdiv@divisor,w,c
  4901  001AD6  5E01               	subwf	___awdiv@dividend,f,c
  4902  001AD8  5004               	movf	___awdiv@divisor+1,w,c
  4903  001ADA  5A02               	subwfb	___awdiv@dividend+1,f,c
  4904  001ADC  8007               	bsf	___awdiv@quotient,0,c
  4905  001ADE                     i2l1987:
  4906  001ADE  90D8               	bcf	status,0,c
  4907  001AE0  3204               	rrcf	___awdiv@divisor+1,f,c
  4908  001AE2  3203               	rrcf	___awdiv@divisor,f,c
  4909  001AE4  2E05               	decfsz	___awdiv@counter,f,c
  4910  001AE6  D7ED               	goto	i2l1979
  4911  001AE8                     i2l1991:
  4912  001AE8  5006               	movf	___awdiv@sign,w,c
  4913  001AEA  B4D8               	btfsc	status,2,c
  4914  001AEC  D004               	goto	i2l1995
  4915  001AEE  6C07               	negf	___awdiv@quotient,c
  4916  001AF0  1E08               	comf	___awdiv@quotient+1,f,c
  4917  001AF2  B0D8               	btfsc	status,0,c
  4918  001AF4  2A08               	incf	___awdiv@quotient+1,f,c
  4919  001AF6                     i2l1995:
  4920  001AF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4921  001AFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4922  001AFE  0012               	return	
  4923  001B00                     __end_of___awdiv:
  4924                           	opt stack 0
  4925                           tosu	equ	0xFFF
  4926                           tosh	equ	0xFFE
  4927                           tosl	equ	0xFFD
  4928                           pclatu	equ	0xFFB
  4929                           pclath	equ	0xFFA
  4930                           tblptru	equ	0xFF8
  4931                           tblptrh	equ	0xFF7
  4932                           tblptrl	equ	0xFF6
  4933                           tablat	equ	0xFF5
  4934                           prodh	equ	0xFF4
  4935                           prodl	equ	0xFF3
  4936                           intcon	equ	0xFF2
  4937                           postinc0	equ	0xFEE
  4938                           fsr0h	equ	0xFEA
  4939                           fsr0l	equ	0xFE9
  4940                           wreg	equ	0xFE8
  4941                           indf1	equ	0xFE7
  4942                           postdec1	equ	0xFE5
  4943                           plusw1	equ	0xFE3
  4944                           fsr1h	equ	0xFE2
  4945                           fsr1l	equ	0xFE1
  4946                           indf2	equ	0xFDF
  4947                           postinc2	equ	0xFDE
  4948                           postdec2	equ	0xFDD
  4949                           plusw2	equ	0xFDB
  4950                           fsr2h	equ	0xFDA
  4951                           fsr2l	equ	0xFD9
  4952                           status	equ	0xFD8
  4953                           
  4954 ;; *************** function _EUSART1_Transmit_ISR *****************
  4955 ;; Defined at:
  4956 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4974 ;;Total ram usage:        0 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_INTERRUPT_InterruptManager
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text31
  4984  001CF2                     __ptext31:
  4985                           	opt stack 0
  4986  001CF2                     _EUSART1_Transmit_ISR:
  4987                           	opt stack 26
  4988                           
  4989                           ;eusart1.c: 159: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  4990                           
  4991                           ;incstack = 0
  4992  001CF2  0E08               	movlw	8
  4993  001CF4  6051               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  4994  001CF6  D012               	goto	i2l237
  4995                           
  4996                           ;eusart1.c: 160: {
  4997                           ;eusart1.c: 161: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  4998  001CF8  5052               	movf	_eusart1TxTail,w,c	;volatile
  4999  001CFA  0D01               	mullw	1
  5000  001CFC  0E40               	movlw	low _eusart1TxBuffer
  5001  001CFE  24F3               	addwf	prodl,w,c
  5002  001D00  6ED9               	movwf	fsr2l,c
  5003  001D02  0E00               	movlw	high _eusart1TxBuffer
  5004  001D04  20F4               	addwfc	prodh,w,c
  5005  001D06  6EDA               	movwf	fsr2h,c
  5006  001D08  50DF               	movf	indf2,w,c
  5007  001D0A  6E9A               	movwf	3994,c	;volatile
  5008  001D0C  2A52               	incf	_eusart1TxTail,f,c	;volatile
  5009                           
  5010                           ;eusart1.c: 162: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  5011  001D0E  0E07               	movlw	7
  5012  001D10  6452               	cpfsgt	_eusart1TxTail,c	;volatile
  5013  001D12  D002               	goto	i2l1679
  5014                           
  5015                           ;eusart1.c: 163: {
  5016                           ;eusart1.c: 164: eusart1TxTail = 0;
  5017  001D14  0E00               	movlw	0
  5018  001D16  6E52               	movwf	_eusart1TxTail,c	;volatile
  5019  001D18                     i2l1679:
  5020                           
  5021                           ;eusart1.c: 165: }
  5022                           ;eusart1.c: 166: eusart1TxBufferRemaining++;
  5023  001D18  2A51               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  5024                           
  5025                           ;eusart1.c: 167: }
  5026  001D1A  0012               	return	
  5027  001D1C                     i2l237:
  5028                           
  5029                           ;eusart1.c: 168: else
  5030                           ;eusart1.c: 169: {
  5031                           ;eusart1.c: 170: PIE3bits.TX1IE = 0;
  5032  001D1C  010E               	movlb	14	; () banked
  5033  001D1E  99C5               	bcf	197,4,b	;volatile
  5034  001D20  0012               	return	
  5035  001D22                     __end_of_EUSART1_Transmit_ISR:
  5036                           	opt stack 0
  5037                           tosu	equ	0xFFF
  5038                           tosh	equ	0xFFE
  5039                           tosl	equ	0xFFD
  5040                           pclatu	equ	0xFFB
  5041                           pclath	equ	0xFFA
  5042                           tblptru	equ	0xFF8
  5043                           tblptrh	equ	0xFF7
  5044                           tblptrl	equ	0xFF6
  5045                           tablat	equ	0xFF5
  5046                           prodh	equ	0xFF4
  5047                           prodl	equ	0xFF3
  5048                           intcon	equ	0xFF2
  5049                           postinc0	equ	0xFEE
  5050                           fsr0h	equ	0xFEA
  5051                           fsr0l	equ	0xFE9
  5052                           wreg	equ	0xFE8
  5053                           indf1	equ	0xFE7
  5054                           postdec1	equ	0xFE5
  5055                           plusw1	equ	0xFE3
  5056                           fsr1h	equ	0xFE2
  5057                           fsr1l	equ	0xFE1
  5058                           indf2	equ	0xFDF
  5059                           postinc2	equ	0xFDE
  5060                           postdec2	equ	0xFDD
  5061                           plusw2	equ	0xFDB
  5062                           fsr2h	equ	0xFDA
  5063                           fsr2l	equ	0xFD9
  5064                           status	equ	0xFD8
  5065                           
  5066 ;; *************** function _EUSART1_Receive_ISR *****************
  5067 ;; Defined at:
  5068 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;Total ram usage:        0 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_INTERRUPT_InterruptManager
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text32
  5096  001D50                     __ptext32:
  5097                           	opt stack 0
  5098  001D50                     _EUSART1_Receive_ISR:
  5099                           	opt stack 26
  5100                           
  5101                           ;eusart1.c: 177: if(1 == RC1STAbits.OERR)
  5102                           
  5103                           ;incstack = 0
  5104  001D50  A29D               	btfss	3997,1,c	;volatile
  5105  001D52  D002               	goto	i2l2499
  5106                           
  5107                           ;eusart1.c: 178: {
  5108                           ;eusart1.c: 181: RC1STAbits.CREN = 0;
  5109  001D54  989D               	bcf	3997,4,c	;volatile
  5110                           
  5111                           ;eusart1.c: 182: RC1STAbits.CREN = 1;
  5112  001D56  889D               	bsf	3997,4,c	;volatile
  5113  001D58                     i2l2499:
  5114                           
  5115                           ;eusart1.c: 183: }
  5116                           ;eusart1.c: 186: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  5117  001D58  5050               	movf	_eusart1RxHead,w,c	;volatile
  5118  001D5A  0D01               	mullw	1
  5119  001D5C  0E60               	movlw	low _eusart1RxBuffer
  5120  001D5E  24F3               	addwf	prodl,w,c
  5121  001D60  6ED9               	movwf	fsr2l,c
  5122  001D62  0E00               	movlw	high _eusart1RxBuffer
  5123  001D64  20F4               	addwfc	prodh,w,c
  5124  001D66  6EDA               	movwf	fsr2h,c
  5125  001D68  CF99 FFDF          	movff	3993,indf2	;volatile
  5126  001D6C  2A50               	incf	_eusart1RxHead,f,c	;volatile
  5127                           
  5128                           ;eusart1.c: 187: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5129  001D6E  0E3F               	movlw	63
  5130  001D70  6450               	cpfsgt	_eusart1RxHead,c	;volatile
  5131  001D72  D002               	goto	i2l2507
  5132                           
  5133                           ;eusart1.c: 188: {
  5134                           ;eusart1.c: 189: eusart1RxHead = 0;
  5135  001D74  0E00               	movlw	0
  5136  001D76  6E50               	movwf	_eusart1RxHead,c	;volatile
  5137  001D78                     i2l2507:
  5138                           
  5139                           ;eusart1.c: 190: }
  5140                           ;eusart1.c: 191: eusart1RxCount++;
  5141  001D78  2A4E               	incf	_eusart1RxCount,f,c	;volatile
  5142  001D7A  0012               	return		;funcret
  5143  001D7C                     __end_of_EUSART1_Receive_ISR:
  5144                           	opt stack 0
  5145                           tosu	equ	0xFFF
  5146                           tosh	equ	0xFFE
  5147                           tosl	equ	0xFFD
  5148                           pclatu	equ	0xFFB
  5149                           pclath	equ	0xFFA
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           intcon	equ	0xFF2
  5157                           postinc0	equ	0xFEE
  5158                           fsr0h	equ	0xFEA
  5159                           fsr0l	equ	0xFE9
  5160                           wreg	equ	0xFE8
  5161                           indf1	equ	0xFE7
  5162                           postdec1	equ	0xFE5
  5163                           plusw1	equ	0xFE3
  5164                           fsr1h	equ	0xFE2
  5165                           fsr1l	equ	0xFE1
  5166                           indf2	equ	0xFDF
  5167                           postinc2	equ	0xFDE
  5168                           postdec2	equ	0xFDD
  5169                           plusw2	equ	0xFDB
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8
  5173                           tosu	equ	0xFFF
  5174                           tosh	equ	0xFFE
  5175                           tosl	equ	0xFFD
  5176                           pclatu	equ	0xFFB
  5177                           pclath	equ	0xFFA
  5178                           tblptru	equ	0xFF8
  5179                           tblptrh	equ	0xFF7
  5180                           tblptrl	equ	0xFF6
  5181                           tablat	equ	0xFF5
  5182                           prodh	equ	0xFF4
  5183                           prodl	equ	0xFF3
  5184                           intcon	equ	0xFF2
  5185                           postinc0	equ	0xFEE
  5186                           fsr0h	equ	0xFEA
  5187                           fsr0l	equ	0xFE9
  5188                           wreg	equ	0xFE8
  5189                           indf1	equ	0xFE7
  5190                           postdec1	equ	0xFE5
  5191                           plusw1	equ	0xFE3
  5192                           fsr1h	equ	0xFE2
  5193                           fsr1l	equ	0xFE1
  5194                           indf2	equ	0xFDF
  5195                           postinc2	equ	0xFDE
  5196                           postdec2	equ	0xFDD
  5197                           plusw2	equ	0xFDB
  5198                           fsr2h	equ	0xFDA
  5199                           fsr2l	equ	0xFD9
  5200                           status	equ	0xFD8
  5201                           
  5202                           	psect	text33
  5203  000000                     __ptext33:
  5204                           	opt stack 0
  5205                           tosu	equ	0xFFF
  5206                           tosh	equ	0xFFE
  5207                           tosl	equ	0xFFD
  5208                           pclatu	equ	0xFFB
  5209                           pclath	equ	0xFFA
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           intcon	equ	0xFF2
  5217                           postinc0	equ	0xFEE
  5218                           fsr0h	equ	0xFEA
  5219                           fsr0l	equ	0xFE9
  5220                           wreg	equ	0xFE8
  5221                           indf1	equ	0xFE7
  5222                           postdec1	equ	0xFE5
  5223                           plusw1	equ	0xFE3
  5224                           fsr1h	equ	0xFE2
  5225                           fsr1l	equ	0xFE1
  5226                           indf2	equ	0xFDF
  5227                           postinc2	equ	0xFDE
  5228                           postdec2	equ	0xFDD
  5229                           plusw2	equ	0xFDB
  5230                           fsr2h	equ	0xFDA
  5231                           fsr2l	equ	0xFD9
  5232                           status	equ	0xFD8
  5233                           
  5234                           	psect	rparam
  5235  0000                     tosu	equ	0xFFF
  5236                           tosh	equ	0xFFE
  5237                           tosl	equ	0xFFD
  5238                           pclatu	equ	0xFFB
  5239                           pclath	equ	0xFFA
  5240                           tblptru	equ	0xFF8
  5241                           tblptrh	equ	0xFF7
  5242                           tblptrl	equ	0xFF6
  5243                           tablat	equ	0xFF5
  5244                           prodh	equ	0xFF4
  5245                           prodl	equ	0xFF3
  5246                           intcon	equ	0xFF2
  5247                           postinc0	equ	0xFEE
  5248                           fsr0h	equ	0xFEA
  5249                           fsr0l	equ	0xFE9
  5250                           wreg	equ	0xFE8
  5251                           indf1	equ	0xFE7
  5252                           postdec1	equ	0xFE5
  5253                           plusw1	equ	0xFE3
  5254                           fsr1h	equ	0xFE2
  5255                           fsr1l	equ	0xFE1
  5256                           indf2	equ	0xFDF
  5257                           postinc2	equ	0xFDE
  5258                           postdec2	equ	0xFDD
  5259                           plusw2	equ	0xFDB
  5260                           fsr2h	equ	0xFDA
  5261                           fsr2l	equ	0xFD9
  5262                           status	equ	0xFD8
  5263                           
  5264                           	psect	temp
  5265  00005C                     btemp:
  5266                           	opt stack 0
  5267  00005C                     	ds	1
  5268  0000                     int$flags	set	btemp
  5269                           tosu	equ	0xFFF
  5270                           tosh	equ	0xFFE
  5271                           tosl	equ	0xFFD
  5272                           pclatu	equ	0xFFB
  5273                           pclath	equ	0xFFA
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           prodh	equ	0xFF4
  5279                           prodl	equ	0xFF3
  5280                           intcon	equ	0xFF2
  5281                           postinc0	equ	0xFEE
  5282                           fsr0h	equ	0xFEA
  5283                           fsr0l	equ	0xFE9
  5284                           wreg	equ	0xFE8
  5285                           indf1	equ	0xFE7
  5286                           postdec1	equ	0xFE5
  5287                           plusw1	equ	0xFE3
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           indf2	equ	0xFDF
  5291                           postinc2	equ	0xFDE
  5292                           postdec2	equ	0xFDD
  5293                           plusw2	equ	0xFDB
  5294                           fsr2h	equ	0xFDA
  5295                           fsr2l	equ	0xFD9
  5296                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    21
    Data        46
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      91
    BANK0           160     11     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> Timer_1ms(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer_1ms(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    ValidateDateTime@Time	PTR unsigned char  size(2) Largest target is 7
		 -> Timer_1ms@Time(COMRAM[7]), 

    ValidateDateTime@Date	PTR unsigned char  size(2) Largest target is 7
		 -> Timer_1ms@Date(COMRAM[7]), 

    GetDay@Date	PTR unsigned char  size(2) Largest target is 7
		 -> Timer_1ms@Date(COMRAM[7]), 

    ReadDateTimeFromBuffer@Date	PTR unsigned char  size(2) Largest target is 7
		 -> Timer_1ms@Date(COMRAM[7]), 

    ReadDateTimeFromBuffer@Time	PTR unsigned char  size(2) Largest target is 7
		 -> Timer_1ms@Time(COMRAM[7]), 

    ReadTimeFromBuffer@Output	PTR unsigned char  size(2) Largest target is 7
		 -> Timer_1ms@Time(COMRAM[7]), 

    Lcd_Text@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> Timer_1ms@Time(COMRAM[7]), Timer_1ms@Date(COMRAM[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_CallBack->_Timer_1ms
    _Timer_1ms->_Lcd_Int
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->i2_Lcd_Command
    _Lcd_Int->_GetDay
    ___lwdiv->___wmul
    _GetDay->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    _main->_Lcd_Init
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _Lcd_Init->_Lcd_Command

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     686
                                              4 BANK0      7     7      0
                           _Lcd_Init
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     197
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     314
                                              3 BANK0      1     1      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Delay5500us                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0     176
                                              0 BANK0      3     3      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0    8051
                                             49 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    8051
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0    8051
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _Timer_1ms *
 ---------------------------------------------------------------------------------
 (7) _Timer_1ms                                           14    14      0    8051
                                             35 COMRAM    14    14      0
                             _GetDay
                            _Lcd_Int
                           _Lcd_Text
             _ReadDateTimeFromBuffer
                 _ReadTimeFromBuffer
                   _ValidateDateTime
 ---------------------------------------------------------------------------------
 (8) _ValidateDateTime                                     6     2      4     554
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ReadTimeFromBuffer                                  17    15      2     372
                                              0 COMRAM    17    15      2
 ---------------------------------------------------------------------------------
 (8) _ReadDateTimeFromBuffer                              21    17      4     652
                                              0 COMRAM    20    16      4
 ---------------------------------------------------------------------------------
 (8) _Lcd_Text                                             5     2      3     837
                                              3 COMRAM     5     2      3
                         _Lcd_CharCP
                      i2_Lcd_Command
 ---------------------------------------------------------------------------------
 (8) _Lcd_Int                                              7     4      3    3093
                                             28 COMRAM     7     4      3
                             _GetDay (ARG)
                         _Lcd_CharCP
                            ___awdiv
                            ___lwdiv
                             ___wmul
                      i2_Lcd_Command
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Command                                        3     3      0     176
                                              0 COMRAM     3     3      0
                     i2_Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     314
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) _Lcd_CharCP                                           3     3      0     176
                                              0 COMRAM     3     3      0
                     i2_Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Delay5us                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _GetDay                                              14    12      2    2337
                                             14 COMRAM    14    12      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _Timer_1ms *
         _GetDay
           ___awdiv
           ___awmod
             ___awdiv (ARG)
           ___wmul
         _Lcd_Int
           _GetDay (ARG)
             ___awdiv
             ___awmod
               ___awdiv (ARG)
             ___wmul
           _Lcd_CharCP (ARG)
             i2_Lcd_Delay5us
           ___awdiv (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           i2_Lcd_Command (ARG)
             i2_Lcd_Delay5us
         _Lcd_Text
           _Lcd_CharCP
             i2_Lcd_Delay5us
           i2_Lcd_Command
             i2_Lcd_Delay5us
         _ReadDateTimeFromBuffer
         _ReadTimeFromBuffer
         _ValidateDateTime

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      71       5       70.6%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      5B       1       96.8%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC       6        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Jun 27 13:16:13 2017

                          Lcd_Int@tempVal 0022                  _eusart1TxBufferRemaining 0051  
                             __CFG_CP$OFF 000000                                        l23 1898  
                                      l24 18CA                              ___awdiv@sign 0006  
                     ___wmul@multiplicand 0003                               __CFG_LVP$ON 000000  
                                     l319 1DC0                                       l432 1CF0  
                                     _GIE 007F97                              __CFG_CPD$OFF 000000  
                            ___awmod@sign 000E                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                     __end_of_Lcd_Command 11F4                              __CFG_ZCD$OFF 000000  
                                    l2425 188E                                      u2101 1CE6  
                                    u2117 1E2A                                      _LATA 000F83  
                                    _LATB 000F84                                      u2127 113C  
                                    _LATC 000F85                                      u2137 11E0  
                                    u1725 10A2                                      u1750 1A78  
                                    u1735 10C4                                      u1745 10F0  
                                    _PLLR 0076D8                                      _WPUA 000F10  
                                    _WPUB 000F18                                      _WPUC 000F20  
                                    _WPUE 000F2D                         ??_Lcd_Delay5500us 00C6  
          ReadDateTimeFromBuffer@TempChar 0011                             __CFG_FCMEN$ON 000000  
                                    _main 1CC0                           _TMR0_StartTimer 1E60  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                      __end_of_Lcd_Delay5us 1E58  
                                    fsr2l 000FD9                                      btemp 005C  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00BE                           __end_of_Lcd_Int 1772  
                           __CFG_CSWEN$ON 000000                              ___param_bank 000000  
                              _Lcd_CharCP 1568                             __CFG_SCANE$ON 000000  
                 __end_of_TMR0_Initialize 1D50            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 0026             __end_of_OSCILLATOR_Initialize 1DC8  
                                   ?_main 0001                   ReadDateTimeFromBuffer@i 0012  
                         __end_of___awdiv 1B00                             __CFG_WDTE$OFF 000000  
                         __end_of___awmod 1B70                           ___awdiv@divisor 0003  
                          __CFG_DEBUG$OFF 000000                           __end_of___lwdiv 1C86  
                                   i2l137 19E4                                     i2l401 0054  
                                   i2l403 006A                                     i2l237 1D1C  
                                   i2l158 1450                                     i2l407 007C  
                                   i2l462 1792                                     i2l872 1C7C  
                         ___awdiv@counter 0005                                     _OSCEN 000EDC  
                                   _TMR0H 000FD4                                     _TMR0L 000FD3  
                                   _TRISA 000F88                                     _TRISB 000F89  
                                   _TRISC 000F8A         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 00C6  
                           __CFG_WRT3$OFF 000000                      _EUSART1_Transmit_ISR 1CF2  
                          __CFG_EBTR0$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 1E48                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                 __size_of_ValidateDateTime 0134  
                      __CFG_MCLRE$EXTMCLR 000000                                     main@s 00CA  
                        _GLOBAL_USARTSIZE 004A                                     pclath 000FFA  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     status 000FD8  
                        __end_of_Lcd_Init 1930                          __end_of_Lcd_Text 1C34  
                         __initialization 1B70                __end_of_EUSART1_Initialize 1CC0  
                            __end_of_main 1CF2               ?_INTERRUPT_InterruptManager 0001  
                ??_ReadDateTimeFromBuffer 0005                               _Lcd_Command 108E  
                                  ??_main 00CA                             __activetblptr 000003  
                   ?_EUSART1_Transmit_ISR 0001                   __end_of_TMR0_StartTimer 1E64  
                        ___awdiv@dividend 0001                                    _ANSELA 000F11  
                                  _ANSELB 000F19                                    _ANSELC 000F21  
                                  _T0CON0 000FD5                                    _T0CON1 000FD6  
                                  _RC1REG 000F99                                    _RC1STA 000F9D  
                                  _ODCONA 000F0F                                    _ODCONB 000F17  
                                  _ODCONC 000F1F                                    i2l2011 1B20  
                                  i2l2101 1C0A                                    i2l2031 1B66  
                                  i2l2023 1B4E                                    i2l2015 1B2E  
                                  i2l2007 1B14                                    i2l2103 1C12  
                                  i2l2017 1B36                                    i2l2041 1C4A  
                                  i2l2121 16A6                                    i2l2019 1B3A  
                                  i2l2027 1B58                                    i2l2043 1C52  
                                  i2l2115 1694                                    i2l2107 1C24  
                                  i2l2211 13C6                                    i2l2053 1C72  
                                  i2l2045 1C56                                    i2l2133 16F6  
                                  i2l2117 169A                                    i2l2125 16AE  
                                  i2l2213 13CA                                    i2l2221 13D6  
                                  i2l2119 16A0                                    i2l2127 16C8  
                                  i2l2231 13F4                                    i2l2207 13A8  
                                  i2l2225 13DC                                    i2l2153 195C  
                          __CFG_WDTCCS$SC 000000                                    i2l2139 1740  
                                  i2l2091 1BDC                                    i2l2227 13E4  
                                  i2l2219 13D2                                    i2l2171 19CE  
                                  i2l2307 1324                                    i2l2093 1BE2  
                                  i2l2245 144A                                    i2l2173 19D2  
                                  i2l2181 19DE                                    i2l2157 196C  
                                  i2l2341 1848                                    i2l2095 1BE8  
                                  i2l2239 1422                                    i2l2167 19B0  
                                  i2l2089 1BD6                                    i2l2193 1354  
                                  i2l2507 1D78                                    i2l2099 1BF0  
                                  i2l2179 19DA                                    i2l2291 12BC  
                                  i2l2283 128C                                    i2l2275 1258  
                                  i2l2267 1224                                    i2l2197 1364  
                                  i2l2299 12F0                                    i2l1679 1D18  
                                  i2l2499 1D58                                    i2l1963 1A90  
                                  i2l1975 1AB6                                    i2l1991 1AE8  
                                  i2l1977 1ABE                                    i2l1969 1AA0  
                                  i2l1995 1AF6                                    i2l1987 1ADE  
                                  i2l1979 1AC2                                    _OSCFRQ 000EDE  
             __size_of_ReadTimeFromBuffer 00B6                                 ??_Lcd_Int 0020  
                                  _TX1REG 000F9A                            Lcd_Text@buffer 0005  
                                  _TX1STA 000F9E                                    _GetDay 0F18  
                          __CFG_PWRTE$OFF 000000                            __CFG_XINST$OFF 000000  
                             ?_Lcd_CharCP 0001                                    ___wmul 1DC8  
                               ??___awdiv 0005                            __CFG_STVREN$ON 000000  
                               ??___awmod 000D                                 ??___lwdiv 000B  
                        ?_TMR0_Initialize 0001                                    clear_0 1BB6  
                                  clear_1 1BC2                          ___awdiv@quotient 0007  
                         ___awmod@divisor 000B                           ___awmod@counter 000D  
                      __size_of_Timer_1ms 00E6                              __pdataCOMRAM 0054  
    __end_ofReadDateTimeFromBuffer@F11323 0F08              ReadDateTimeFromBuffer@F11323 0F01  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                   __end_of_TMR0_CallBack 1E0C  TMR0_SetInterruptHandler@InterruptHandler 00C6  
                   __size_of_Lcd_Delay5us 0008                           _eusart1RxBuffer 0060  
           __size_of_INTERRUPT_Initialize 0004                        Lcd_Command@command 00C8  
                         _eusart1TxBuffer 0040                         _SYSTEM_Initialize 1E0C  
                              __accesstop 0060                   __end_of__initialization 1BC8  
                         __CFG_FEXTOSC$XT 000000                        ?_SYSTEM_Initialize 0001  
            ReadDateTimeFromBuffer@Commas 0010                           Timer_1ms@F11311 00B8  
                         Timer_1ms@F11309 0054                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                              __pidataBANK0 1D7C  
                     ??_SYSTEM_Initialize 00C8                                 ?_TMR0_ISR 0001  
         __size_of_ReadDateTimeFromBuffer 012A                     __end_ofi2_Lcd_Command 1568  
                            _Lcd_Delay5us 1E50                    ??_EUSART1_Transmit_ISR 0001  
                         _Lcd_Delay5500us 1E22               __end_of_EUSART1_Receive_ISR 1D7C  
                 __size_ofi2_Lcd_Delay5us 0008                                 ?_Lcd_Init 0001  
                               ?_Lcd_Text 0004                          ?_TMR0_StartTimer 0001  
               __end_of_SYSTEM_Initialize 1E22                          _ValidateDateTime 11F4  
                     __size_of_Lcd_CharCP 0116                             _eusart1RxHead 0050  
                           _eusart1TxHead 0053                             _eusart1RxTail 004F  
                              __pbssBANK0 0060                             _eusart1TxTail 0052  
                       __end_of_Timer_1ms 1858                                   ?_GetDay 000F  
        __end_of_TMR0_SetInterruptHandler 1E3E                                   ?___wmul 0001  
                              ??_TMR0_ISR 0032                           __CFG_PPS1WAY$ON 000000  
                                 GetDay@d 0019                                   GetDay@m 001A  
                                 GetDay@t 00A0                                   GetDay@y 001B  
                                 _SP1BRGH 000F9C                                   _SP1BRGL 000F9B  
                                 _OSCCON1 000ED8                                   _OSCCON3 000EDA  
                                 _OSCTUNE 000EDD                                ??_Lcd_Init 00C9  
                                 _PPSLOCK 000EA0                                ??_Lcd_Text 0007  
        __end_ofReadTimeFromBuffer@F11315 0F0F                    _ReadDateTimeFromBuffer 1328  
                                 _Lcd_Int 167E                      ValidateDateTime@Date 0001  
                    ValidateDateTime@Item 0006                      ValidateDateTime@Time 0003  
                         __size_of_GetDay 0176                                   __Hparam 0000  
                                 __Lparam 0000                                   ___awdiv 1A7C  
                                 ___awmod 1B00                           __size_of___wmul 0026  
                                 ___lwdiv 1C34                   __end_of_Lcd_Delay5500us 1E34  
                            __psmallconst 0F00                                   __pcinit 1B70  
                                 __ramtop 0F00                              ?_Lcd_Command 0001  
                                 __ptext0 1CC0                                   __ptext1 1E0C  
                                 __ptext2 1D22                                   __ptext3 1E60  
                                 __ptext4 1E34                                   __ptext5 19E6  
                                 __ptext6 1DA2                                   __ptext7 1E64  
                                 __ptext8 1C86                                   __ptext9 1858  
                   _OSCILLATOR_Initialize 1DA2                ReadTimeFromBuffer@TempChar 000E  
                        ___awmod@dividend 0009                        _EUSART1_Initialize 1C86  
                ??_PIN_MANAGER_Initialize 00C6                __size_of_SYSTEM_Initialize 0016  
                    end_of_initialization 1BC8                       ?_EUSART1_Initialize 0001  
                            ??_Lcd_CharCP 0001               ReadTimeFromBuffer@StartCode 0007  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                               Lcd_Text@x 0004                                 Lcd_Text@y 0007  
                              main@F11312 00BF                      ??_EUSART1_Initialize 00C6  
                   __CFG_WDTCPS$WDTCPS_31 000000                  _TMR0_SetInterruptHandler 1E34  
                     ReadTimeFromBuffer@i 000F                                 _TRISAbits 000F88  
                          i2_Lcd_Delay5us 1E58                            _GLOBAL_CENTURY 005B  
              __end_of_ReadTimeFromBuffer 19E6                        __end_of_Lcd_CharCP 167E  
                ReadTimeFromBuffer@F11315 0F08                            __end_of_GetDay 108E  
            __end_of_INTERRUPT_Initialize 1E68                  __end_of_ValidateDateTime 1328  
                        ?_Lcd_Delay5500us 0001                            __end_of___wmul 1DEE  
                           __pidataCOMRAM 1E48                         __size_of_TMR0_ISR 000A  
                  ?_OSCILLATOR_Initialize 0001                    __end_ofi2_Lcd_Delay5us 1E60  
                     start_initialization 1B70                  ReadTimeFromBuffer@Output 0001  
                __size_of_TMR0_Initialize 002E           __size_of_PIN_MANAGER_Initialize 0096  
                           Timer_1ms@Date 002B                             Timer_1ms@Time 0024  
                       __size_of_Lcd_Init 00D8                         __size_of_Lcd_Text 0062  
                                ??_GetDay 0011                          __CFG_LPBOREN$OFF 000000  
                               _Timer_1ms 1772                                  ??___wmul 0005  
                  __size_of_TMR0_CallBack 001E                               __pdataBANK0 00A0  
                          _eusart1RxCount 004E                           ?i2_Lcd_Delay5us 0001  
                    __size_of_Lcd_Command 0166                               __pbssCOMRAM 0040  
           __size_of_EUSART1_Transmit_ISR 0030                             __pcstackBANK0 00C6  
                 ?_ReadDateTimeFromBuffer 0001                      i2Lcd_Command@command 0003  
            __size_of_EUSART1_Receive_ISR 002C                                  ?_Lcd_Int 001D  
                  __size_ofi2_Lcd_Command 0116                     _TMR0_InterruptHandler 0048  
                __size_of_TMR0_StartTimer 0004                          ___lwdiv@dividend 0007  
                  _PIN_MANAGER_Initialize 19E6                                ?_Timer_1ms 0001  
                               __pintcode 0008                                  ?___awdiv 0001  
                                ?___awmod 0009                                  ?___lwdiv 0007  
                       ReadGPSTime@F11309 0F0F              ??_INTERRUPT_InterruptManager 0032  
                                _BAUD1CON 000F9F                               __smallconst 0F00  
          __end_of_ReadDateTimeFromBuffer 1452                          ___lwdiv@quotient 000B  
                           _TMR0_CallBack 1DEE                                  _GLOBAL_I 004C  
                    _INTERRUPT_Initialize 1E64           ReadDateTimeFromBuffer@StartCode 0009  
                       ??_TMR0_Initialize 00C8                            ___wmul@product 0005  
                                _LATAbits 000F83                                  _LATCbits 000F85  
                                _PIE0bits 000EC2                                  _PIE3bits 000EC5  
                     __CFG_BORV$VBOR_2P45 000000                                  i2u111_45 1576  
                                i2u112_45 1590                                  i2u113_45 15B0  
                                i2u130_45 147A                                  i2u131_45 149A  
                                i2u214_47 14D4       __size_of_INTERRUPT_InterruptManager 00B0  
                                i2u215_47 1554                                  i2u160_40 0FD0  
                                i2u216_47 15EA                                  i2u129_45 1460  
                                i2u217_47 166A                                  i2u146_40 133A  
                                i2u138_40 1942                                  i2u170_41 17B4  
              ??_TMR0_SetInterruptHandler 00C8                                  i2u159_40 0FCE  
                                i2u159_41 0FCA                                  _PIR0bits 000ECA  
                                i2u169_41 17A2                                  i2u179_48 1DFA  
                                _PIR3bits 000ECD                                  Lcd_Int@x 001D  
                                Lcd_Int@y 0020                 __end_ofReadGPSTime@F11309 0F16  
                                _TMR0_ISR 1E3E                              Lcd_Init@data 00C9  
                       ___wmul@multiplier 0001                             i2_Lcd_Command 1452  
                                _Lcd_Init 1858                            ?_TMR0_CallBack 0001  
                                _Lcd_Text 1BD2                                 copy_data0 1B84  
                               copy_data1 1BA4                     ?_INTERRUPT_Initialize 0001  
                        __size_of_Lcd_Int 00F4                              Lcd_Text@data 0008  
                                __Hrparam 0000                   __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                __Lrparam 0000                        _ReadTimeFromBuffer 1930  
                      __CFG_BOREN$SBORDIS 000000                               ??_Timer_1ms 0024  
                 ??_OSCILLATOR_Initialize 00C6                         ??_TMR0_StartTimer 00C6  
                       ?_ValidateDateTime 0001                          __size_of___awdiv 0084  
                        __size_of___awmod 0070               __size_of_EUSART1_Initialize 003A  
                        __size_of___lwdiv 0052                       ?_ReadTimeFromBuffer 0001  
                          ?i2_Lcd_Command 0001                        ??_ValidateDateTime 0005  
                           ?_Lcd_Delay5us 0001                                _T0CON0bits 000FD5  
                         ___lwdiv@divisor 0009                           ___lwdiv@counter 000D  
                                __ptext10 1E22                                  __ptext11 108E  
                                __ptext20 1328                                  __ptext12 1E50  
                                __ptext21 1BD2                                  __ptext30 1A7C  
                                __ptext22 167E                                  __ptext14 1E3E  
                                __ptext31 1CF2                                  __ptext23 1452  
                                __ptext15 1DEE                                  __ptext32 1D50  
                                __ptext24 1C34                                  __ptext16 1E68  
                                __ptext33 0000                                  __ptext25 1568  
                                __ptext17 1772                                  __ptext26 1E58  
                                __ptext18 11F4                                  __ptext27 0F18  
                                __ptext19 1930                                  __ptext28 1DC8  
                                __ptext29 1B00                      ??_ReadTimeFromBuffer 0003  
                             Lcd_CharCP@c 0003                             __size_of_main 0032  
    __end_of_TMR0_DefaultInterruptHandler 1E6A     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 1E68                      __CFG_WDTCWS$WDTCWS_7 000000  
                              _RC1STAbits 000F9D                ReadDateTimeFromBuffer@Date 0001  
                             Lcd_Int@data 0021                ReadDateTimeFromBuffer@Time 0003  
                                int$flags 005C                               Lcd_Int@size 001F  
                        ??i2_Lcd_Delay5us 0001        __end_of_INTERRUPT_InterruptManager 00B8  
              _INTERRUPT_InterruptManager 0008                       _EUSART1_Receive_ISR 1D50  
                          ??_Lcd_Delay5us 00C6               PIN_MANAGER_Initialize@state 00C6  
                              _INTCONbits 000FF2                           ??_TMR0_CallBack 0032  
                              GetDay@Date 000F                  __size_of_Lcd_Delay5500us 0012  
                  ??_INTERRUPT_Initialize 00C6                                  intlevel2 0000  
                    ?_EUSART1_Receive_ISR 0001                   ?_PIN_MANAGER_Initialize 0001  
                       __CFG_CLKOUTEN$OFF 000000                               _PPSLOCKbits 000EA0  
            __end_of_EUSART1_Transmit_ISR 1D22             ?_TMR0_DefaultInterruptHandler 0001  
               ReadDateTimeFromBuffer@Pos 0014                                Lcd_Int@val 001E  
                         ??i2_Lcd_Command 0001                     ReadTimeFromBuffer@Pos 0011  
                           ??_Lcd_Command 00C6                                _RX1PPSbits 000EB5  
                         _TMR0_Initialize 1D22                     ??_EUSART1_Receive_ISR 0001  
          __end_of_PIN_MANAGER_Initialize 1A7C  
