

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 30 13:09:17 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F26K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 1.42
    53                           ; Generated 13/04/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F26K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  001D46                     __pidataCOMRAM:
    89                           	opt stack 0
    90                           
    91                           ;initializer for main@F11347
    92  001D46  2D                 	db	45
    93  001D47  2D                 	db	45
    94  001D48  2D                 	db	45
    95  001D49  2D                 	db	45
    96  001D4A  2D                 	db	45
    97  001D4B  2D                 	db	45
    98  001D4C  00                 	db	0
    99                           
   100                           ;initializer for main@F11345
   101  001D4D  2D                 	db	45
   102  001D4E  2D                 	db	45
   103  001D4F  2D                 	db	45
   104  001D50  2D                 	db	45
   105  001D51  2D                 	db	45
   106  001D52  2D                 	db	45
   107  001D53  00                 	db	0
   108                           
   109                           ;initializer for _GLOBAL_CENTURY
   110  001D54  14                 	db	20
   111                           
   112                           	psect	idataBANK0
   113  001CDE                     __pidataBANK0:
   114                           	opt stack 0
   115                           
   116                           ;initializer for GetDay@t
   117  001CDE  0000               	dw	0
   118  001CE0  0003               	dw	3
   119  001CE2  0002               	dw	2
   120  001CE4  0005               	dw	5
   121  001CE6  0000               	dw	0
   122  001CE8  0003               	dw	3
   123  001CEA  0005               	dw	5
   124  001CEC  0001               	dw	1
   125  001CEE  0004               	dw	4
   126  001CF0  0006               	dw	6
   127  001CF2  0002               	dw	2
   128  001CF4  0004               	dw	4
   129                           
   130                           	psect	smallconst
   131  000F00                     __psmallconst:
   132                           	opt stack 0
   133  000F00  00                 	db	0
   134  000F01                     ReadGPSDateTime@F11354:
   135                           	opt stack 0
   136  000F01  24                 	db	36
   137  000F02  47                 	db	71
   138  000F03  50                 	db	80
   139  000F04  52                 	db	82
   140  000F05  4D                 	db	77
   141  000F06  43                 	db	67
   142  000F07  2C                 	db	44
   143  000F08                     __end_ofReadGPSDateTime@F11354:
   144                           	opt stack 0
   145  000F08                     ReadGPSTime@F11346:
   146                           	opt stack 0
   147  000F08  24                 	db	36
   148  000F09  47                 	db	71
   149  000F0A  50                 	db	80
   150  000F0B  52                 	db	82
   151  000F0C  4D                 	db	77
   152  000F0D  43                 	db	67
   153  000F0E  2C                 	db	44
   154  000F0F                     __end_ofReadGPSTime@F11346:
   155                           	opt stack 0
   156  0000                     _OSCTUNE	set	3805
   157  0000                     _OSCFRQ	set	3806
   158  0000                     _OSCEN	set	3804
   159  0000                     _OSCCON3	set	3802
   160  0000                     _OSCCON1	set	3800
   161  0000                     _RC6PPS	set	3837
   162  0000                     _RX1PPSbits	set	3765
   163  0000                     _PPSLOCKbits	set	3744
   164  0000                     _PPSLOCK	set	3744
   165  0000                     _PIR0bits	set	3786
   166  0000                     _PIE0bits	set	3778
   167  0000                     _PIR3bits	set	3789
   168  0000                     _PLLR	set	30424
   169  0000                     _ODCONC	set	3871
   170  0000                     _ODCONB	set	3863
   171  0000                     _ODCONA	set	3855
   172  0000                     _WPUC	set	3872
   173  0000                     _WPUA	set	3856
   174  0000                     _WPUB	set	3864
   175  0000                     _WPUE	set	3885
   176  0000                     _ANSELA	set	3857
   177  0000                     _ANSELB	set	3865
   178  0000                     _ANSELC	set	3873
   179  0000                     _LATCbits	set	3973
   180  0000                     _T0CON0bits	set	4053
   181  0000                     _TMR0L	set	4051
   182  0000                     _TMR0H	set	4052
   183  0000                     _T0CON1	set	4054
   184  0000                     _T0CON0	set	4053
   185  0000                     _TRISC	set	3978
   186  0000                     _TRISB	set	3977
   187  0000                     _TRISA	set	3976
   188  0000                     _LATC	set	3973
   189  0000                     _LATB	set	3972
   190  0000                     _LATA	set	3971
   191  0000                     _INTCONbits	set	4082
   192  0000                     _TX1REG	set	3994
   193  0000                     _RC1REG	set	3993
   194  0000                     _RC1STAbits	set	3997
   195  0000                     _SP1BRGH	set	3996
   196  0000                     _SP1BRGL	set	3995
   197  0000                     _TX1STA	set	3998
   198  0000                     _RC1STA	set	3997
   199  0000                     _BAUD1CON	set	3999
   200  0000                     _LATAbits	set	3971
   201  0000                     _TRISAbits	set	3976
   202  0000                     _GIE	set	32663
   203  000F0F                     STR_4:
   204  000F0F  3A                 	db	58	;':'
   205  000F10  28                 	db	40
   206  000F11  00                 	db	0
   207  000F12                     STR_3:
   208  000F12  3A                 	db	58	;':'
   209  000F13  29                 	db	41
   210  000F14  00                 	db	0
   211  000F15                     STR_2:
   212  000F15  2D                 	db	45
   213  000F16  2D                 	db	45
   214  000F17  00                 	db	0
   215  0000                     
   216                           ; #config settings
   217  000F18  00                 	db	0	; dummy byte at the end
   218  0000                     
   219                           	psect	cinit
   220  001A1C                     __pcinit:
   221                           	opt stack 0
   222  001A1C                     start_initialization:
   223                           	opt stack 0
   224  001A1C                     __initialization:
   225                           	opt stack 0
   226                           
   227                           ; Initialize objects allocated to BANK0 (24 bytes)
   228                           ; load TBLPTR registers with __pidataBANK0
   229  001A1C  0EDE               	movlw	low __pidataBANK0
   230  001A1E  6EF6               	movwf	tblptrl,c
   231  001A20  0E1C               	movlw	high __pidataBANK0
   232  001A22  6EF7               	movwf	tblptrh,c
   233  001A24  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   234  001A26  6EF8               	movwf	tblptru,c
   235  001A28  EE00  F0A4         	lfsr	0,__pdataBANK0
   236  001A2C  EE10 F018          	lfsr	1,24
   237  001A30                     copy_data0:
   238  001A30  0009               	tblrd		*+
   239  001A32  CFF5 FFEE          	movff	tablat,postinc0
   240  001A36  50E5               	movf	postdec1,w,c
   241  001A38  50E1               	movf	fsr1l,w,c
   242  001A3A  E1FA               	bnz	copy_data0
   243                           
   244                           ; Initialize objects allocated to COMRAM (15 bytes)
   245                           ; load TBLPTR registers with __pidataCOMRAM
   246  001A3C  0E46               	movlw	low __pidataCOMRAM
   247  001A3E  6EF6               	movwf	tblptrl,c
   248  001A40  0E1D               	movlw	high __pidataCOMRAM
   249  001A42  6EF7               	movwf	tblptrh,c
   250  001A44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   251  001A46  6EF8               	movwf	tblptru,c
   252  001A48  EE00  F031         	lfsr	0,__pdataCOMRAM
   253  001A4C  EE10 F00F          	lfsr	1,15
   254  001A50                     copy_data1:
   255  001A50  0009               	tblrd		*+
   256  001A52  CFF5 FFEE          	movff	tablat,postinc0
   257  001A56  50E5               	movf	postdec1,w,c
   258  001A58  50E1               	movf	fsr1l,w,c
   259  001A5A  E1FA               	bnz	copy_data1
   260                           
   261                           ; Clear objects allocated to BIGRAM (480 bytes)
   262  001A5C  EE01  F078         	lfsr	0,__pbssBIGRAM
   263  001A60  EE11 F0E0          	lfsr	1,480
   264  001A64                     clear_0:
   265  001A64  6AEE               	clrf	postinc0,c
   266  001A66  50E5               	movf	postdec1,w,c
   267  001A68  50E1               	movf	fsr1l,w,c
   268  001A6A  E1FC               	bnz	clear_0
   269  001A6C  50E2               	movf	fsr1h,w,c
   270  001A6E  E1FA               	bnz	clear_0
   271                           
   272                           ; Clear objects allocated to BANK1 (120 bytes)
   273  001A70  EE01  F000         	lfsr	0,__pbssBANK1
   274  001A74  0E78               	movlw	120
   275  001A76                     clear_1:
   276  001A76  6AEE               	clrf	postinc0,c
   277  001A78  06E8               	decf	wreg,f,c
   278  001A7A  E1FD               	bnz	clear_1
   279                           
   280                           ; Clear objects allocated to BANK0 (68 bytes)
   281  001A7C  EE00  F060         	lfsr	0,__pbssBANK0
   282  001A80  0E44               	movlw	68
   283  001A82                     clear_2:
   284  001A82  6AEE               	clrf	postinc0,c
   285  001A84  06E8               	decf	wreg,f,c
   286  001A86  E1FD               	bnz	clear_2
   287                           
   288                           ; Clear objects allocated to COMRAM (10 bytes)
   289  001A88  EE00  F040         	lfsr	0,__pbssCOMRAM
   290  001A8C  0E0A               	movlw	10
   291  001A8E                     clear_3:
   292  001A8E  6AEE               	clrf	postinc0,c
   293  001A90  06E8               	decf	wreg,f,c
   294  001A92  E1FD               	bnz	clear_3
   295  001A94                     end_of_initialization:
   296                           	opt stack 0
   297  001A94                     __end_of__initialization:
   298                           	opt stack 0
   299  001A94  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   300  001A96  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   301  001A98  0100               	movlb	0
   302  001A9A  EF0C  F009         	goto	_main	;jump to C main() function
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           postdec1	equ	0xFE5
   310                           fsr1h	equ	0xFE2
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	bssCOMRAM
   314  000040                     __pbssCOMRAM:
   315                           	opt stack 0
   316  000040                     TMR0_ISR@CountCallBack:
   317                           	opt stack 0
   318  000040                     	ds	2
   319  000042                     _TMR0_InterruptHandler:
   320                           	opt stack 0
   321  000042                     	ds	2
   322  000044                     _timer0ReloadVal16bit:
   323                           	opt stack 0
   324  000044                     	ds	2
   325  000046                     _GLOBAL_USARTSIZE:
   326                           	opt stack 0
   327  000046                     	ds	2
   328  000048                     _GLOBAL_I:
   329                           	opt stack 0
   330  000048                     	ds	2
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1h	equ	0xFE2
   339                           fsr1l	equ	0xFE1
   340                           
   341                           	psect	dataCOMRAM
   342  000031                     __pdataCOMRAM:
   343                           	opt stack 0
   344  000031                     main@F11347:
   345                           	opt stack 0
   346  000031                     	ds	7
   347  000038                     main@F11345:
   348                           	opt stack 0
   349  000038                     	ds	7
   350  00003F                     _GLOBAL_CENTURY:
   351                           	opt stack 0
   352  00003F                     	ds	1
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1h	equ	0xFE2
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	bssBANK0
   364  000060                     __pbssBANK0:
   365                           	opt stack 0
   366  000060                     _CYCLES:
   367                           	opt stack 0
   368  000060                     	ds	68
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           postdec1	equ	0xFE5
   376                           fsr1h	equ	0xFE2
   377                           fsr1l	equ	0xFE1
   378                           
   379                           	psect	dataBANK0
   380  0000A4                     __pdataBANK0:
   381                           	opt stack 0
   382  0000A4                     GetDay@t:
   383                           	opt stack 0
   384  0000A4                     	ds	24
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1h	equ	0xFE2
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssBANK1
   396  000100                     __pbssBANK1:
   397                           	opt stack 0
   398  000100                     _EVENTS:
   399                           	opt stack 0
   400  000100                     	ds	120
   401                           tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           postdec1	equ	0xFE5
   408                           fsr1h	equ	0xFE2
   409                           fsr1l	equ	0xFE1
   410                           
   411                           	psect	bssBIGRAM
   412  000178                     __pbssBIGRAM:
   413                           	opt stack 0
   414  000178                     _STATES:
   415                           	opt stack 0
   416  000178                     	ds	480
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1h	equ	0xFE2
   425                           fsr1l	equ	0xFE1
   426                           
   427                           	psect	cstackBANK0
   428  0000BC                     __pcstackBANK0:
   429                           	opt stack 0
   430  0000BC                     Lcd_Int@x:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x0
   434  0000BC                     	ds	1
   435  0000BD                     Lcd_Int@val:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x1
   439  0000BD                     	ds	1
   440  0000BE                     Lcd_Int@size:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x2
   444  0000BE                     	ds	1
   445  0000BF                     Lcd_Int@y:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x3
   449  0000BF                     	ds	1
   450  0000C0                     Lcd_Int@data:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x4
   454  0000C0                     	ds	1
   455  0000C1                     Lcd_Int@tempVal:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x5
   459  0000C1                     	ds	2
   460  0000C3                     main@Time:
   461                           	opt stack 0
   462                           
   463                           ; 7 bytes @ 0x7
   464  0000C3                     	ds	7
   465  0000CA                     main@Date:
   466                           	opt stack 0
   467                           
   468                           ; 7 bytes @ 0xE
   469  0000CA                     	ds	7
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1h	equ	0xFE2
   478                           fsr1l	equ	0xFE1
   479                           
   480                           	psect	cstackCOMRAM
   481  000001                     __pcstackCOMRAM:
   482                           	opt stack 0
   483  000001                     ?i2___awmod:
   484                           	opt stack 0
   485  000001                     i2___awmod@dividend:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x0
   489  000001                     	ds	2
   490  000003                     i2___awmod@divisor:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x2
   494  000003                     	ds	2
   495  000005                     i2___awmod@counter:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x4
   499  000005                     	ds	1
   500  000006                     i2___awmod@sign:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x5
   504  000006                     	ds	1
   505  000007                     ??_INTERRUPT_InterruptManager:
   506                           
   507                           ; 1 bytes @ 0x6
   508  000007                     	ds	14
   509  000015                     ??_Lcd_CharCP:
   510  000015                     ??_Lcd_Delay5500us:
   511  000015                     ??_Lcd_Command:
   512  000015                     ?___wmul:
   513                           	opt stack 0
   514  000015                     ?___awdiv:
   515                           	opt stack 0
   516  000015                     PIN_MANAGER_Initialize@state:
   517                           	opt stack 0
   518  000015                     ReadGPSDateTime@Date:
   519                           	opt stack 0
   520  000015                     ValidateDateTime@Date:
   521                           	opt stack 0
   522  000015                     TMR0_SetInterruptHandler@InterruptHandler:
   523                           	opt stack 0
   524  000015                     ___wmul@multiplier:
   525                           	opt stack 0
   526  000015                     ___awdiv@dividend:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x14
   530  000015                     	ds	2
   531  000017                     ??_TMR0_Initialize:
   532  000017                     Lcd_CharCP@c:
   533                           	opt stack 0
   534  000017                     Lcd_Command@command:
   535                           	opt stack 0
   536  000017                     ReadGPSDateTime@Time:
   537                           	opt stack 0
   538  000017                     ValidateDateTime@Time:
   539                           	opt stack 0
   540  000017                     ___wmul@multiplicand:
   541                           	opt stack 0
   542  000017                     ___awdiv@divisor:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x16
   546  000017                     	ds	1
   547  000018                     Lcd_Init@data:
   548                           	opt stack 0
   549  000018                     Lcd_Text@x:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x17
   553  000018                     	ds	1
   554  000019                     ??_ReadGPSDateTime:
   555  000019                     ??_ValidateDateTime:
   556  000019                     ___awdiv@counter:
   557                           	opt stack 0
   558  000019                     Lcd_Text@buffer:
   559                           	opt stack 0
   560  000019                     ___wmul@product:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x18
   564  000019                     	ds	1
   565  00001A                     ValidateDateTime@Item:
   566                           	opt stack 0
   567  00001A                     ___awdiv@sign:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x19
   571  00001A                     	ds	1
   572  00001B                     ?___lwdiv:
   573                           	opt stack 0
   574  00001B                     Lcd_Text@y:
   575                           	opt stack 0
   576  00001B                     ___awdiv@quotient:
   577                           	opt stack 0
   578  00001B                     ___lwdiv@dividend:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x1A
   582  00001B                     	ds	1
   583  00001C                     Lcd_Text@data:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x1B
   587  00001C                     	ds	1
   588  00001D                     ?___awmod:
   589                           	opt stack 0
   590  00001D                     ___awmod@dividend:
   591                           	opt stack 0
   592  00001D                     ___lwdiv@divisor:
   593                           	opt stack 0
   594  00001D                     ReadGPSDateTime@StartCode:
   595                           	opt stack 0
   596                           
   597                           ; 7 bytes @ 0x1C
   598  00001D                     	ds	2
   599  00001F                     ___lwdiv@counter:
   600                           	opt stack 0
   601  00001F                     ___awmod@divisor:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x1E
   605  00001F                     	ds	1
   606  000020                     ___lwdiv@quotient:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x1F
   610  000020                     	ds	1
   611  000021                     ___awmod@counter:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x20
   615  000021                     	ds	1
   616  000022                     ___awmod@sign:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x21
   620  000022                     	ds	1
   621  000023                     GetDay@Date:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x22
   625  000023                     	ds	1
   626  000024                     ReadGPSDateTime@Commas:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x23
   630  000024                     	ds	1
   631  000025                     ??_GetDay:
   632  000025                     ReadGPSDateTime@i:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x24
   636  000025                     	ds	2
   637  000027                     ReadGPSDateTime@TempChar:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x26
   641  000027                     	ds	1
   642  000028                     ReadGPSDateTime@Pos:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x27
   646  000028                     	ds	5
   647  00002D                     GetDay@d:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x2C
   651  00002D                     	ds	1
   652  00002E                     GetDay@m:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x2D
   656  00002E                     	ds	1
   657  00002F                     GetDay@y:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x2E
   661  00002F                     	ds	2
   662  000031                     tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           postinc0	equ	0xFEE
   667                           wreg	equ	0xFE8
   668                           postdec1	equ	0xFE5
   669                           fsr1h	equ	0xFE2
   670                           fsr1l	equ	0xFE1
   671                           
   672                           ; 1 bytes @ 0x30
   673 ;;
   674 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   675 ;;
   676 ;; *************** function _main *****************
   677 ;; Defined at:
   678 ;;		line 53 in file "main.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  Date            7   14[BANK0 ] unsigned char [7]
   683 ;;  Time            7    7[BANK0 ] unsigned char [7]
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   694 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   696 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   697 ;;Total ram usage:       14 bytes
   698 ;; Hardware stack levels required when called:    8
   699 ;; This function calls:
   700 ;;		_EUSART1_Initialize
   701 ;;		_GetDay
   702 ;;		_Lcd_Init
   703 ;;		_Lcd_Int
   704 ;;		_Lcd_Text
   705 ;;		_ReadGPSDateTime
   706 ;;		_SYSTEM_Initialize
   707 ;;		_TMR0_SetInterruptHandler
   708 ;;		_ValidateDateTime
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715  001218                     __ptext0:
   716                           	opt stack 0
   717  001218                     _main:
   718                           	opt stack 23
   719                           
   720                           ;main.c: 56: SYSTEM_Initialize();
   721                           
   722                           ;incstack = 0
   723  001218  EC7B  F00E         	call	_SYSTEM_Initialize	;wreg free
   724                           
   725                           ;main.c: 87: (INTCONbits.GIE = 1);
   726  00121C  8EF2               	bsf	intcon,7,c	;volatile
   727                           
   728                           ;main.c: 88: (INTCONbits.PEIE = 1);
   729  00121E  8CF2               	bsf	intcon,6,c	;volatile
   730                           
   731                           ;main.c: 89: TMR0_SetInterruptHandler(Timer0_10ms);
   732  001220  0E10               	movlw	low _Timer0_10ms
   733  001222  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   734  001224  0E1C               	movlw	high _Timer0_10ms
   735  001226  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   736  001228  ECAB  F00E         	call	_TMR0_SetInterruptHandler	;wreg free
   737                           
   738                           ;main.c: 92: Lcd_Init();
   739  00122C  ECD3  F00B         	call	_Lcd_Init	;wreg free
   740                           
   741                           ;main.c: 94: LATCbits.LC1=ON;
   742  001230  8285               	bsf	3973,1,c	;volatile
   743                           
   744                           ;main.c: 95: char Date[] = "------";
   745  001232  EE20  F038         	lfsr	2,main@F11345
   746  001236  EE10  F0CA         	lfsr	1,main@Date
   747  00123A  0E06               	movlw	6
   748  00123C                     u2741:
   749  00123C  CFDB FFE3          	movff	plusw2,plusw1
   750  001240  06E8               	decf	wreg,f,c
   751  001242  E2FC               	bc	u2741
   752                           
   753                           ;main.c: 96: char Time[] = "------";
   754  001244  EE20  F031         	lfsr	2,main@F11347
   755  001248  EE10  F0C3         	lfsr	1,main@Time
   756  00124C  0E06               	movlw	6
   757  00124E                     u2751:
   758  00124E  CFDB FFE3          	movff	plusw2,plusw1
   759  001252  06E8               	decf	wreg,f,c
   760  001254  E2FC               	bc	u2751
   761  001256                     l3133:
   762                           
   763                           ;main.c: 99: {
   764                           ;main.c: 102: Date[0] = 0x3A;
   765  001256  0E3A               	movlw	58
   766  001258  0100               	movlb	0	; () banked
   767  00125A  6FCA               	movwf	main@Date& (0+255),b
   768                           
   769                           ; BSR set to: 0
   770                           ;main.c: 103: Time[0] = 0x3A;
   771  00125C  0E3A               	movlw	58
   772  00125E  0100               	movlb	0	; () banked
   773  001260  6FC3               	movwf	main@Time& (0+255),b
   774                           
   775                           ; BSR set to: 0
   776                           ;main.c: 104: EUSART1_Initialize();
   777  001262  EC86  F00E         	call	_EUSART1_Initialize	;wreg free
   778                           
   779                           ;main.c: 105: ReadGPSDateTime(Date, Time);
   780  001266  0ECA               	movlw	low main@Date
   781  001268  6E15               	movwf	ReadGPSDateTime@Date,c
   782  00126A  0E00               	movlw	high main@Date
   783  00126C  6E16               	movwf	ReadGPSDateTime@Date+1,c
   784  00126E  0EC3               	movlw	low main@Time
   785  001270  6E17               	movwf	ReadGPSDateTime@Time,c
   786  001272  0E00               	movlw	high main@Time
   787  001274  6E18               	movwf	ReadGPSDateTime@Time+1,c
   788  001276  EC9E  F009         	call	_ReadGPSDateTime	;wreg free
   789                           
   790                           ;main.c: 107: Lcd_Text(2,1, Time);
   791  00127A  0E01               	movlw	1
   792  00127C  6E18               	movwf	Lcd_Text@x,c
   793  00127E  0EC3               	movlw	low main@Time
   794  001280  6E19               	movwf	Lcd_Text@buffer,c
   795  001282  0E00               	movlw	high main@Time
   796  001284  6E1A               	movwf	Lcd_Text@buffer+1,c
   797  001286  0E02               	movlw	2
   798  001288  EC82  F00C         	call	_Lcd_Text
   799                           
   800                           ;main.c: 108: Lcd_Text(2,7, "-");
   801  00128C  0E07               	movlw	7
   802  00128E  6E18               	movwf	Lcd_Text@x,c
   803  001290  0E16               	movlw	low (STR_2+1)
   804  001292  6E19               	movwf	Lcd_Text@buffer,c
   805  001294  0E0F               	movlw	high (STR_2+1)
   806  001296  6E1A               	movwf	Lcd_Text@buffer+1,c
   807  001298  0E02               	movlw	2
   808  00129A  EC82  F00C         	call	_Lcd_Text
   809                           
   810                           ;main.c: 109: Lcd_Text(2,8, Date);
   811  00129E  0E08               	movlw	8
   812  0012A0  6E18               	movwf	Lcd_Text@x,c
   813  0012A2  0ECA               	movlw	low main@Date
   814  0012A4  6E19               	movwf	Lcd_Text@buffer,c
   815  0012A6  0E00               	movlw	high main@Date
   816  0012A8  6E1A               	movwf	Lcd_Text@buffer+1,c
   817  0012AA  0E02               	movlw	2
   818  0012AC  EC82  F00C         	call	_Lcd_Text
   819                           
   820                           ;main.c: 110: Lcd_Text(2,14, "--");
   821  0012B0  0E0E               	movlw	14
   822  0012B2  6E18               	movwf	Lcd_Text@x,c
   823  0012B4  0E15               	movlw	low STR_2
   824  0012B6  6E19               	movwf	Lcd_Text@buffer,c
   825  0012B8  0E0F               	movlw	high STR_2
   826  0012BA  6E1A               	movwf	Lcd_Text@buffer+1,c
   827  0012BC  0E02               	movlw	2
   828  0012BE  EC82  F00C         	call	_Lcd_Text
   829                           
   830                           ;main.c: 111: Lcd_Int(2, 16, GetDay(Date), 1);
   831  0012C2  0E10               	movlw	16
   832  0012C4  0100               	movlb	0	; () banked
   833  0012C6  6FBC               	movwf	Lcd_Int@x& (0+255),b
   834  0012C8  0ECA               	movlw	low main@Date
   835  0012CA  6E23               	movwf	GetDay@Date,c
   836  0012CC  0E00               	movlw	high main@Date
   837  0012CE  6E24               	movwf	GetDay@Date+1,c
   838  0012D0  EC51  F008         	call	_GetDay	;wreg free
   839  0012D4  0100               	movlb	0	; () banked
   840  0012D6  6FBD               	movwf	Lcd_Int@val& (0+255),b
   841  0012D8  0E01               	movlw	1
   842  0012DA  0100               	movlb	0	; () banked
   843  0012DC  6FBE               	movwf	Lcd_Int@size& (0+255),b
   844  0012DE  0E02               	movlw	2
   845  0012E0  EC2E  F00A         	call	_Lcd_Int
   846                           
   847                           ;main.c: 112: Lcd_Int(1, 14, GLOBAL_I, 3);
   848  0012E4  0E0E               	movlw	14
   849  0012E6  0100               	movlb	0	; () banked
   850  0012E8  6FBC               	movwf	Lcd_Int@x& (0+255),b
   851  0012EA  C048  F0BD         	movff	_GLOBAL_I,Lcd_Int@val
   852  0012EE  0E03               	movlw	3
   853  0012F0  0100               	movlb	0	; () banked
   854  0012F2  6FBE               	movwf	Lcd_Int@size& (0+255),b
   855  0012F4  0E01               	movlw	1
   856  0012F6  EC2E  F00A         	call	_Lcd_Int
   857                           
   858                           ;main.c: 113: if (ValidateDateTime(Date, Time)) {
   859  0012FA  0ECA               	movlw	low main@Date
   860  0012FC  6E15               	movwf	ValidateDateTime@Date,c
   861  0012FE  0E00               	movlw	high main@Date
   862  001300  6E16               	movwf	ValidateDateTime@Date+1,c
   863  001302  0EC3               	movlw	low main@Time
   864  001304  6E17               	movwf	ValidateDateTime@Time,c
   865  001306  0E00               	movlw	high main@Time
   866  001308  6E18               	movwf	ValidateDateTime@Time+1,c
   867  00130A  EC8D  F007         	call	_ValidateDateTime	;wreg free
   868  00130E  0900               	iorlw	0
   869  001310  B4D8               	btfsc	status,2,c
   870  001312  D00A               	goto	l3157
   871                           
   872                           ;main.c: 114: Lcd_Text(1, 1, ":)");
   873  001314  0E01               	movlw	1
   874  001316  6E18               	movwf	Lcd_Text@x,c
   875  001318  0E12               	movlw	low STR_3
   876  00131A  6E19               	movwf	Lcd_Text@buffer,c
   877  00131C  0E0F               	movlw	high STR_3
   878  00131E  6E1A               	movwf	Lcd_Text@buffer+1,c
   879  001320  0E01               	movlw	1
   880  001322  EC82  F00C         	call	_Lcd_Text
   881                           
   882                           ;main.c: 115: } else {
   883  001326  D797               	goto	l3133
   884  001328                     l3157:
   885                           
   886                           ;main.c: 116: Lcd_Text(1, 1, ":(");
   887  001328  0E01               	movlw	1
   888  00132A  6E18               	movwf	Lcd_Text@x,c
   889  00132C  0E0F               	movlw	low STR_4
   890  00132E  6E19               	movwf	Lcd_Text@buffer,c
   891  001330  0E0F               	movlw	high STR_4
   892  001332  6E1A               	movwf	Lcd_Text@buffer+1,c
   893  001334  0E01               	movlw	1
   894  001336  EC82  F00C         	call	_Lcd_Text
   895  00133A  D78D               	goto	l3133
   896  00133C                     __end_of_main:
   897                           	opt stack 0
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           intcon	equ	0xFF2
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postdec1	equ	0xFE5
   906                           plusw1	equ	0xFE3
   907                           fsr1h	equ	0xFE2
   908                           fsr1l	equ	0xFE1
   909                           plusw2	equ	0xFDB
   910                           status	equ	0xFD8
   911                           
   912 ;; *************** function _ValidateDateTime *****************
   913 ;; Defined at:
   914 ;;		line 137 in file "libs/gps.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  Date            2   20[COMRAM] PTR unsigned char 
   917 ;;		 -> main@Date(7), 
   918 ;;  Time            2   22[COMRAM] PTR unsigned char 
   919 ;;		 -> main@Time(7), 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  Item            1   25[COMRAM] char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      enum E11041
   924 ;; Registers used:
   925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   935 ;;Total ram usage:        6 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    5
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text1
   946  000F1A                     __ptext1:
   947                           	opt stack 0
   948  000F1A                     _ValidateDateTime:
   949                           	opt stack 25
   950                           
   951                           ;gps.c: 138: INT8 Item;
   952                           ;gps.c: 145: Item = (Date[0]-0x30)*10 + (Date[1]-0x30);
   953                           
   954                           ;incstack = 0
   955  000F1A  EE20 F001          	lfsr	2,1
   956  000F1E  5015               	movf	ValidateDateTime@Date,w,c
   957  000F20  26D9               	addwf	fsr2l,f,c
   958  000F22  5016               	movf	ValidateDateTime@Date+1,w,c
   959  000F24  22DA               	addwfc	fsr2h,f,c
   960  000F26  50DF               	movf	indf2,w,c
   961  000F28  6E19               	movwf	??_ValidateDateTime& (0+255),c
   962  000F2A  C015  FFD9         	movff	ValidateDateTime@Date,fsr2l
   963  000F2E  C016  FFDA         	movff	ValidateDateTime@Date+1,fsr2h
   964  000F32  50DF               	movf	indf2,w,c
   965  000F34  0FD0               	addlw	208
   966  000F36  0D0A               	mullw	10
   967  000F38  50F3               	movf	prodl,w,c
   968  000F3A  2419               	addwf	??_ValidateDateTime,w,c
   969  000F3C  0FD0               	addlw	208
   970  000F3E  6E1A               	movwf	ValidateDateTime@Item,c
   971                           
   972                           ;gps.c: 146: if (Item<=0 || Item>31) return 0;
   973  000F40  501A               	movf	ValidateDateTime@Item,w,c
   974  000F42  0A80               	xorlw	128
   975  000F44  0F7F               	addlw	-129
   976  000F46  A0D8               	btfss	status,0,c
   977  000F48  D005               	goto	l2813
   978  000F4A  501A               	movf	ValidateDateTime@Item,w,c
   979  000F4C  0A80               	xorlw	128
   980  000F4E  0F60               	addlw	-160
   981  000F50  A0D8               	btfss	status,0,c
   982  000F52  D002               	goto	l2817
   983  000F54                     l2813:
   984  000F54  0E00               	movlw	0
   985  000F56  0012               	return	
   986  000F58                     l2817:
   987                           
   988                           ;gps.c: 147: Item = (Date[2]-0x30)*10 + (Date[3]-0x30);
   989  000F58  EE20 F003          	lfsr	2,3
   990  000F5C  5015               	movf	ValidateDateTime@Date,w,c
   991  000F5E  26D9               	addwf	fsr2l,f,c
   992  000F60  5016               	movf	ValidateDateTime@Date+1,w,c
   993  000F62  22DA               	addwfc	fsr2h,f,c
   994  000F64  50DF               	movf	indf2,w,c
   995  000F66  6E19               	movwf	??_ValidateDateTime& (0+255),c
   996  000F68  EE20 F002          	lfsr	2,2
   997  000F6C  5015               	movf	ValidateDateTime@Date,w,c
   998  000F6E  26D9               	addwf	fsr2l,f,c
   999  000F70  5016               	movf	ValidateDateTime@Date+1,w,c
  1000  000F72  22DA               	addwfc	fsr2h,f,c
  1001  000F74  50DF               	movf	indf2,w,c
  1002  000F76  0FD0               	addlw	208
  1003  000F78  0D0A               	mullw	10
  1004  000F7A  50F3               	movf	prodl,w,c
  1005  000F7C  2419               	addwf	??_ValidateDateTime,w,c
  1006  000F7E  0FD0               	addlw	208
  1007  000F80  6E1A               	movwf	ValidateDateTime@Item,c
  1008                           
  1009                           ;gps.c: 148: if (Item<=0 || Item>12) return 0;
  1010  000F82  501A               	movf	ValidateDateTime@Item,w,c
  1011  000F84  0A80               	xorlw	128
  1012  000F86  0F7F               	addlw	-129
  1013  000F88  A0D8               	btfss	status,0,c
  1014  000F8A  D005               	goto	l2823
  1015  000F8C  501A               	movf	ValidateDateTime@Item,w,c
  1016  000F8E  0A80               	xorlw	128
  1017  000F90  0F73               	addlw	-141
  1018  000F92  A0D8               	btfss	status,0,c
  1019  000F94  D002               	goto	l2827
  1020  000F96                     l2823:
  1021  000F96  0E00               	movlw	0
  1022  000F98  0012               	return	
  1023  000F9A                     l2827:
  1024                           
  1025                           ;gps.c: 149: Item = (Date[4]-0x30)*10 + (Date[5]-0x30);
  1026  000F9A  EE20 F005          	lfsr	2,5
  1027  000F9E  5015               	movf	ValidateDateTime@Date,w,c
  1028  000FA0  26D9               	addwf	fsr2l,f,c
  1029  000FA2  5016               	movf	ValidateDateTime@Date+1,w,c
  1030  000FA4  22DA               	addwfc	fsr2h,f,c
  1031  000FA6  50DF               	movf	indf2,w,c
  1032  000FA8  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1033  000FAA  EE20 F004          	lfsr	2,4
  1034  000FAE  5015               	movf	ValidateDateTime@Date,w,c
  1035  000FB0  26D9               	addwf	fsr2l,f,c
  1036  000FB2  5016               	movf	ValidateDateTime@Date+1,w,c
  1037  000FB4  22DA               	addwfc	fsr2h,f,c
  1038  000FB6  50DF               	movf	indf2,w,c
  1039  000FB8  0FD0               	addlw	208
  1040  000FBA  0D0A               	mullw	10
  1041  000FBC  50F3               	movf	prodl,w,c
  1042  000FBE  2419               	addwf	??_ValidateDateTime,w,c
  1043  000FC0  0FD0               	addlw	208
  1044  000FC2  6E1A               	movwf	ValidateDateTime@Item,c
  1045                           
  1046                           ;gps.c: 150: if (Item<=0 || Item>99) return 0;
  1047  000FC4  501A               	movf	ValidateDateTime@Item,w,c
  1048  000FC6  0A80               	xorlw	128
  1049  000FC8  0F7F               	addlw	-129
  1050  000FCA  A0D8               	btfss	status,0,c
  1051  000FCC  D005               	goto	l2833
  1052  000FCE  501A               	movf	ValidateDateTime@Item,w,c
  1053  000FD0  0A80               	xorlw	128
  1054  000FD2  0F1C               	addlw	-228
  1055  000FD4  A0D8               	btfss	status,0,c
  1056  000FD6  D002               	goto	l2837
  1057  000FD8                     l2833:
  1058  000FD8  0E00               	movlw	0
  1059  000FDA  0012               	return	
  1060  000FDC                     l2837:
  1061                           
  1062                           ;gps.c: 152: Item = (Time[0]-0x30)*10 + (Time[1]-0x30);
  1063  000FDC  EE20 F001          	lfsr	2,1
  1064  000FE0  5017               	movf	ValidateDateTime@Time,w,c
  1065  000FE2  26D9               	addwf	fsr2l,f,c
  1066  000FE4  5018               	movf	ValidateDateTime@Time+1,w,c
  1067  000FE6  22DA               	addwfc	fsr2h,f,c
  1068  000FE8  50DF               	movf	indf2,w,c
  1069  000FEA  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1070  000FEC  C017  FFD9         	movff	ValidateDateTime@Time,fsr2l
  1071  000FF0  C018  FFDA         	movff	ValidateDateTime@Time+1,fsr2h
  1072  000FF4  50DF               	movf	indf2,w,c
  1073  000FF6  0FD0               	addlw	208
  1074  000FF8  0D0A               	mullw	10
  1075  000FFA  50F3               	movf	prodl,w,c
  1076  000FFC  2419               	addwf	??_ValidateDateTime,w,c
  1077  000FFE  0FD0               	addlw	208
  1078  001000  6E1A               	movwf	ValidateDateTime@Item,c
  1079                           
  1080                           ;gps.c: 153: if (Item<=0 || Item>23) return 0;
  1081  001002  501A               	movf	ValidateDateTime@Item,w,c
  1082  001004  0A80               	xorlw	128
  1083  001006  0F7F               	addlw	-129
  1084  001008  A0D8               	btfss	status,0,c
  1085  00100A  D005               	goto	l2843
  1086  00100C  501A               	movf	ValidateDateTime@Item,w,c
  1087  00100E  0A80               	xorlw	128
  1088  001010  0F68               	addlw	-152
  1089  001012  A0D8               	btfss	status,0,c
  1090  001014  D002               	goto	l2847
  1091  001016                     l2843:
  1092  001016  0E00               	movlw	0
  1093  001018  0012               	return	
  1094  00101A                     l2847:
  1095                           
  1096                           ;gps.c: 154: Item = (Time[2]-0x30)*10 + (Time[3]-0x30);
  1097  00101A  EE20 F003          	lfsr	2,3
  1098  00101E  5017               	movf	ValidateDateTime@Time,w,c
  1099  001020  26D9               	addwf	fsr2l,f,c
  1100  001022  5018               	movf	ValidateDateTime@Time+1,w,c
  1101  001024  22DA               	addwfc	fsr2h,f,c
  1102  001026  50DF               	movf	indf2,w,c
  1103  001028  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1104  00102A  EE20 F002          	lfsr	2,2
  1105  00102E  5017               	movf	ValidateDateTime@Time,w,c
  1106  001030  26D9               	addwf	fsr2l,f,c
  1107  001032  5018               	movf	ValidateDateTime@Time+1,w,c
  1108  001034  22DA               	addwfc	fsr2h,f,c
  1109  001036  50DF               	movf	indf2,w,c
  1110  001038  0FD0               	addlw	208
  1111  00103A  0D0A               	mullw	10
  1112  00103C  50F3               	movf	prodl,w,c
  1113  00103E  2419               	addwf	??_ValidateDateTime,w,c
  1114  001040  0FD0               	addlw	208
  1115  001042  6E1A               	movwf	ValidateDateTime@Item,c
  1116                           
  1117                           ;gps.c: 155: if (Item<=0 || Item>59) return 0;
  1118  001044  501A               	movf	ValidateDateTime@Item,w,c
  1119  001046  0A80               	xorlw	128
  1120  001048  0F7F               	addlw	-129
  1121  00104A  A0D8               	btfss	status,0,c
  1122  00104C  D005               	goto	l2853
  1123  00104E  501A               	movf	ValidateDateTime@Item,w,c
  1124  001050  0A80               	xorlw	128
  1125  001052  0F44               	addlw	-188
  1126  001054  A0D8               	btfss	status,0,c
  1127  001056  D002               	goto	l2857
  1128  001058                     l2853:
  1129  001058  0E00               	movlw	0
  1130  00105A  0012               	return	
  1131  00105C                     l2857:
  1132                           
  1133                           ;gps.c: 156: Item = (Time[4]-0x30)*10 + (Time[5]-0x30);
  1134  00105C  EE20 F005          	lfsr	2,5
  1135  001060  5017               	movf	ValidateDateTime@Time,w,c
  1136  001062  26D9               	addwf	fsr2l,f,c
  1137  001064  5018               	movf	ValidateDateTime@Time+1,w,c
  1138  001066  22DA               	addwfc	fsr2h,f,c
  1139  001068  50DF               	movf	indf2,w,c
  1140  00106A  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1141  00106C  EE20 F004          	lfsr	2,4
  1142  001070  5017               	movf	ValidateDateTime@Time,w,c
  1143  001072  26D9               	addwf	fsr2l,f,c
  1144  001074  5018               	movf	ValidateDateTime@Time+1,w,c
  1145  001076  22DA               	addwfc	fsr2h,f,c
  1146  001078  50DF               	movf	indf2,w,c
  1147  00107A  0FD0               	addlw	208
  1148  00107C  0D0A               	mullw	10
  1149  00107E  50F3               	movf	prodl,w,c
  1150  001080  2419               	addwf	??_ValidateDateTime,w,c
  1151  001082  0FD0               	addlw	208
  1152  001084  6E1A               	movwf	ValidateDateTime@Item,c
  1153                           
  1154                           ;gps.c: 157: if (Item<=0 || Item>59) return 0;
  1155  001086  501A               	movf	ValidateDateTime@Item,w,c
  1156  001088  0A80               	xorlw	128
  1157  00108A  0F7F               	addlw	-129
  1158  00108C  A0D8               	btfss	status,0,c
  1159  00108E  D005               	goto	l2863
  1160  001090  501A               	movf	ValidateDateTime@Item,w,c
  1161  001092  0A80               	xorlw	128
  1162  001094  0F44               	addlw	-188
  1163  001096  A0D8               	btfss	status,0,c
  1164  001098  D002               	goto	l2867
  1165  00109A                     l2863:
  1166  00109A  0E00               	movlw	0
  1167  00109C  0012               	return	
  1168  00109E                     l2867:
  1169                           
  1170                           ;gps.c: 159: return 1;
  1171  00109E  0E01               	movlw	1
  1172  0010A0  0012               	return	
  1173  0010A2                     __end_of_ValidateDateTime:
  1174                           	opt stack 0
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           prodl	equ	0xFF3
  1180                           intcon	equ	0xFF2
  1181                           postinc0	equ	0xFEE
  1182                           wreg	equ	0xFE8
  1183                           postdec1	equ	0xFE5
  1184                           plusw1	equ	0xFE3
  1185                           fsr1h	equ	0xFE2
  1186                           fsr1l	equ	0xFE1
  1187                           indf2	equ	0xFDF
  1188                           plusw2	equ	0xFDB
  1189                           fsr2h	equ	0xFDA
  1190                           fsr2l	equ	0xFD9
  1191                           status	equ	0xFD8
  1192                           
  1193 ;; *************** function _SYSTEM_Initialize *****************
  1194 ;; Defined at:
  1195 ;;		line 107 in file "mcc_generated_files/mcc.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    7
  1216 ;; This function calls:
  1217 ;;		_EUSART1_Initialize
  1218 ;;		_INTERRUPT_Initialize
  1219 ;;		_OSCILLATOR_Initialize
  1220 ;;		_PIN_MANAGER_Initialize
  1221 ;;		_TMR0_Initialize
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text2
  1228  001CF6                     __ptext2:
  1229                           	opt stack 0
  1230  001CF6                     _SYSTEM_Initialize:
  1231                           	opt stack 23
  1232                           
  1233                           ;mcc.c: 110: INTERRUPT_Initialize();
  1234                           
  1235                           ;incstack = 0
  1236  001CF6  ECB7  F00E         	call	_INTERRUPT_Initialize	;wreg free
  1237                           
  1238                           ;mcc.c: 111: PIN_MANAGER_Initialize();
  1239  001CFA  EC34  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  1240                           
  1241                           ;mcc.c: 112: OSCILLATOR_Initialize();
  1242  001CFE  EC3A  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  1243                           
  1244                           ;mcc.c: 113: TMR0_Initialize();
  1245  001D02  ECE8  F00D         	call	_TMR0_Initialize	;wreg free
  1246                           
  1247                           ;mcc.c: 114: EUSART1_Initialize();
  1248  001D06  EC86  F00E         	call	_EUSART1_Initialize	;wreg free
  1249  001D0A  0012               	return		;funcret
  1250  001D0C                     __end_of_SYSTEM_Initialize:
  1251                           	opt stack 0
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           tblptrl	equ	0xFF6
  1255                           tablat	equ	0xFF5
  1256                           prodl	equ	0xFF3
  1257                           intcon	equ	0xFF2
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           postdec1	equ	0xFE5
  1261                           plusw1	equ	0xFE3
  1262                           fsr1h	equ	0xFE2
  1263                           fsr1l	equ	0xFE1
  1264                           indf2	equ	0xFDF
  1265                           plusw2	equ	0xFDB
  1266                           fsr2h	equ	0xFDA
  1267                           fsr2l	equ	0xFD9
  1268                           status	equ	0xFD8
  1269                           
  1270 ;; *************** function _TMR0_Initialize *****************
  1271 ;; Defined at:
  1272 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1290 ;;Total ram usage:        2 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    6
  1293 ;; This function calls:
  1294 ;;		_TMR0_SetInterruptHandler
  1295 ;;		_TMR0_StartTimer
  1296 ;; This function is called by:
  1297 ;;		_SYSTEM_Initialize
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text3
  1302  001BD0                     __ptext3:
  1303                           	opt stack 0
  1304  001BD0                     _TMR0_Initialize:
  1305                           	opt stack 23
  1306                           
  1307                           ;tmr0.c: 70: T0CON0 = 0x10;
  1308                           
  1309                           ;incstack = 0
  1310  001BD0  0E10               	movlw	16
  1311  001BD2  6ED5               	movwf	4053,c	;volatile
  1312                           
  1313                           ;tmr0.c: 73: T0CON1 = 0x50;
  1314  001BD4  0E50               	movlw	80
  1315  001BD6  6ED6               	movwf	4054,c	;volatile
  1316                           
  1317                           ;tmr0.c: 76: TMR0H = 0xF0;
  1318  001BD8  0EF0               	movlw	240
  1319  001BDA  6ED4               	movwf	4052,c	;volatile
  1320                           
  1321                           ;tmr0.c: 79: TMR0L = 0x60;
  1322  001BDC  0E60               	movlw	96
  1323  001BDE  6ED3               	movwf	4051,c	;volatile
  1324                           
  1325                           ;tmr0.c: 82: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  1326  001BE0  50D3               	movf	4051,w,c	;volatile
  1327  001BE2  CFD4 F017          	movff	4052,??_TMR0_Initialize	;volatile
  1328  001BE6  6A18               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1329  001BE8  C017  F018         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1330  001BEC  6A17               	clrf	??_TMR0_Initialize,c
  1331  001BEE  1017               	iorwf	??_TMR0_Initialize,w,c
  1332  001BF0  6E44               	movwf	_timer0ReloadVal16bit,c	;volatile
  1333  001BF2  5018               	movf	??_TMR0_Initialize+1,w,c
  1334  001BF4  6E45               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1335                           
  1336                           ;tmr0.c: 85: PIR0bits.TMR0IF = 0;
  1337  001BF6  010E               	movlb	14	; () banked
  1338  001BF8  9BCA               	bcf	202,5,b	;volatile
  1339                           
  1340                           ; BSR set to: 14
  1341                           ;tmr0.c: 88: PIE0bits.TMR0IE = 1;
  1342  001BFA  010E               	movlb	14	; () banked
  1343  001BFC  8BC2               	bsf	194,5,b	;volatile
  1344                           
  1345                           ; BSR set to: 14
  1346                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1347  001BFE  0E72               	movlw	low _TMR0_DefaultInterruptHandler
  1348  001C00  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1349  001C02  0E1D               	movlw	high _TMR0_DefaultInterruptHandler
  1350  001C04  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1351  001C06  ECAB  F00E         	call	_TMR0_SetInterruptHandler	;wreg free
  1352                           
  1353                           ;tmr0.c: 94: TMR0_StartTimer();
  1354  001C0A  ECB5  F00E         	call	_TMR0_StartTimer	;wreg free
  1355  001C0E  0012               	return		;funcret
  1356  001C10                     __end_of_TMR0_Initialize:
  1357                           	opt stack 0
  1358                           tblptru	equ	0xFF8
  1359                           tblptrh	equ	0xFF7
  1360                           tblptrl	equ	0xFF6
  1361                           tablat	equ	0xFF5
  1362                           prodl	equ	0xFF3
  1363                           intcon	equ	0xFF2
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           postdec1	equ	0xFE5
  1367                           plusw1	equ	0xFE3
  1368                           fsr1h	equ	0xFE2
  1369                           fsr1l	equ	0xFE1
  1370                           indf2	equ	0xFDF
  1371                           plusw2	equ	0xFDB
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _TMR0_StartTimer *****************
  1377 ;; Defined at:
  1378 ;;		line 97 in file "mcc_generated_files/tmr0.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		None
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    5
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_TMR0_Initialize
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text4
  1407  001D6A                     __ptext4:
  1408                           	opt stack 0
  1409  001D6A                     _TMR0_StartTimer:
  1410                           	opt stack 23
  1411                           
  1412                           ;tmr0.c: 100: T0CON0bits.T0EN = 1;
  1413                           
  1414                           ;incstack = 0
  1415  001D6A  8ED5               	bsf	4053,7,c	;volatile
  1416  001D6C  0012               	return		;funcret
  1417  001D6E                     __end_of_TMR0_StartTimer:
  1418                           	opt stack 0
  1419                           tblptru	equ	0xFF8
  1420                           tblptrh	equ	0xFF7
  1421                           tblptrl	equ	0xFF6
  1422                           tablat	equ	0xFF5
  1423                           prodl	equ	0xFF3
  1424                           intcon	equ	0xFF2
  1425                           postinc0	equ	0xFEE
  1426                           wreg	equ	0xFE8
  1427                           postdec1	equ	0xFE5
  1428                           plusw1	equ	0xFE3
  1429                           fsr1h	equ	0xFE2
  1430                           fsr1l	equ	0xFE1
  1431                           indf2	equ	0xFDF
  1432                           plusw2	equ	0xFDB
  1433                           fsr2h	equ	0xFDA
  1434                           fsr2l	equ	0xFD9
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _TMR0_SetInterruptHandler *****************
  1438 ;; Defined at:
  1439 ;;		line 169 in file "mcc_generated_files/tmr0.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  InterruptHan    2   20[COMRAM] PTR FTN()void 
  1442 ;;		 -> Timer0_10ms(1), TMR0_DefaultInterruptHandler(1), 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1458 ;;Total ram usage:        2 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    5
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_TMR0_Initialize
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text5
  1470  001D56                     __ptext5:
  1471                           	opt stack 0
  1472  001D56                     _TMR0_SetInterruptHandler:
  1473                           	opt stack 25
  1474                           
  1475                           ;tmr0.c: 170: TMR0_InterruptHandler = InterruptHandler;
  1476                           
  1477                           ;incstack = 0
  1478  001D56  C015  F042         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1479  001D5A  C016  F043         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1480  001D5E  0012               	return		;funcret
  1481  001D60                     __end_of_TMR0_SetInterruptHandler:
  1482                           	opt stack 0
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           prodl	equ	0xFF3
  1488                           intcon	equ	0xFF2
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           postdec1	equ	0xFE5
  1492                           plusw1	equ	0xFE3
  1493                           fsr1h	equ	0xFE2
  1494                           fsr1l	equ	0xFE1
  1495                           indf2	equ	0xFDF
  1496                           plusw2	equ	0xFDB
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _PIN_MANAGER_Initialize *****************
  1502 ;; Defined at:
  1503 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  state           1   20[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;Total ram usage:        1 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    5
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_SYSTEM_Initialize
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text6
  1532  001868                     __ptext6:
  1533                           	opt stack 0
  1534  001868                     _PIN_MANAGER_Initialize:
  1535                           	opt stack 24
  1536                           
  1537                           ;pin_manager.c: 57: LATA = 0x00;
  1538                           
  1539                           ;incstack = 0
  1540  001868  0E00               	movlw	0
  1541  00186A  6E83               	movwf	3971,c	;volatile
  1542                           
  1543                           ;pin_manager.c: 58: LATB = 0x00;
  1544  00186C  0E00               	movlw	0
  1545  00186E  6E84               	movwf	3972,c	;volatile
  1546                           
  1547                           ;pin_manager.c: 59: LATC = 0x00;
  1548  001870  0E00               	movlw	0
  1549  001872  6E85               	movwf	3973,c	;volatile
  1550                           
  1551                           ;pin_manager.c: 64: TRISA = 0xC0;
  1552  001874  0EC0               	movlw	192
  1553  001876  6E88               	movwf	3976,c	;volatile
  1554                           
  1555                           ;pin_manager.c: 65: TRISB = 0x00;
  1556  001878  0E00               	movlw	0
  1557  00187A  6E89               	movwf	3977,c	;volatile
  1558                           
  1559                           ;pin_manager.c: 66: TRISC = 0x84;
  1560  00187C  0E84               	movlw	132
  1561  00187E  6E8A               	movwf	3978,c	;volatile
  1562                           
  1563                           ;pin_manager.c: 71: ANSELC = 0x44;
  1564  001880  0E44               	movlw	68
  1565  001882  010F               	movlb	15	; () banked
  1566  001884  6F21               	movwf	33,b	;volatile
  1567                           
  1568                           ;pin_manager.c: 72: ANSELB = 0x00;
  1569  001886  0E00               	movlw	0
  1570  001888  010F               	movlb	15	; () banked
  1571  00188A  6F19               	movwf	25,b	;volatile
  1572                           
  1573                           ;pin_manager.c: 73: ANSELA = 0xC0;
  1574  00188C  0EC0               	movlw	192
  1575  00188E  010F               	movlb	15	; () banked
  1576  001890  6F11               	movwf	17,b	;volatile
  1577                           
  1578                           ;pin_manager.c: 78: WPUE = 0x00;
  1579  001892  0E00               	movlw	0
  1580  001894  010F               	movlb	15	; () banked
  1581  001896  6F2D               	movwf	45,b	;volatile
  1582                           
  1583                           ;pin_manager.c: 79: WPUB = 0x00;
  1584  001898  0E00               	movlw	0
  1585  00189A  010F               	movlb	15	; () banked
  1586  00189C  6F18               	movwf	24,b	;volatile
  1587                           
  1588                           ;pin_manager.c: 80: WPUA = 0x00;
  1589  00189E  0E00               	movlw	0
  1590  0018A0  010F               	movlb	15	; () banked
  1591  0018A2  6F10               	movwf	16,b	;volatile
  1592                           
  1593                           ;pin_manager.c: 81: WPUC = 0x00;
  1594  0018A4  0E00               	movlw	0
  1595  0018A6  010F               	movlb	15	; () banked
  1596  0018A8  6F20               	movwf	32,b	;volatile
  1597                           
  1598                           ;pin_manager.c: 86: ODCONA = 0x00;
  1599  0018AA  0E00               	movlw	0
  1600  0018AC  010F               	movlb	15	; () banked
  1601  0018AE  6F0F               	movwf	15,b	;volatile
  1602                           
  1603                           ;pin_manager.c: 87: ODCONB = 0x00;
  1604  0018B0  0E00               	movlw	0
  1605  0018B2  010F               	movlb	15	; () banked
  1606  0018B4  6F17               	movwf	23,b	;volatile
  1607                           
  1608                           ;pin_manager.c: 88: ODCONC = 0x00;
  1609  0018B6  0E00               	movlw	0
  1610  0018B8  010F               	movlb	15	; () banked
  1611  0018BA  6F1F               	movwf	31,b	;volatile
  1612                           
  1613                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  1614  0018BC  0E00               	movlw	0
  1615  0018BE  BEF2               	btfsc	intcon,7,c	;volatile
  1616  0018C0  0E01               	movlw	1
  1617  0018C2  6E15               	movwf	PIN_MANAGER_Initialize@state,c
  1618                           
  1619                           ; BSR set to: 15
  1620                           ;pin_manager.c: 96: GIE = 0;
  1621  0018C4  9EF2               	bcf	intcon,7,c	;volatile
  1622                           
  1623                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  1624  0018C6  0E55               	movlw	85
  1625  0018C8  010E               	movlb	14	; () banked
  1626  0018CA  6FA0               	movwf	160,b	;volatile
  1627                           
  1628                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  1629  0018CC  0EAA               	movlw	170
  1630  0018CE  010E               	movlb	14	; () banked
  1631  0018D0  6FA0               	movwf	160,b	;volatile
  1632                           
  1633                           ; BSR set to: 14
  1634                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  1635  0018D2  010E               	movlb	14	; () banked
  1636  0018D4  91A0               	bcf	160,0,b	;volatile
  1637                           
  1638                           ; BSR set to: 14
  1639                           ;pin_manager.c: 101: RX1PPSbits.RXPPS = 0x17;
  1640  0018D6  010E               	movlb	14	; () banked
  1641  0018D8  81B5               	bsf	181,0,b	;volatile
  1642  0018DA  83B5               	bsf	181,1,b	;volatile
  1643  0018DC  85B5               	bsf	181,2,b	;volatile
  1644  0018DE  97B5               	bcf	181,3,b	;volatile
  1645  0018E0  89B5               	bsf	181,4,b	;volatile
  1646                           
  1647                           ;pin_manager.c: 102: RC6PPS = 0x09;
  1648  0018E2  0E09               	movlw	9
  1649  0018E4  010E               	movlb	14	; () banked
  1650  0018E6  6FFD               	movwf	253,b	;volatile
  1651                           
  1652                           ;pin_manager.c: 104: PPSLOCK = 0x55;
  1653  0018E8  0E55               	movlw	85
  1654  0018EA  010E               	movlb	14	; () banked
  1655  0018EC  6FA0               	movwf	160,b	;volatile
  1656                           
  1657                           ;pin_manager.c: 105: PPSLOCK = 0xAA;
  1658  0018EE  0EAA               	movlw	170
  1659  0018F0  010E               	movlb	14	; () banked
  1660  0018F2  6FA0               	movwf	160,b	;volatile
  1661                           
  1662                           ; BSR set to: 14
  1663                           ;pin_manager.c: 106: PPSLOCKbits.PPSLOCKED = 0x01;
  1664  0018F4  010E               	movlb	14	; () banked
  1665  0018F6  81A0               	bsf	160,0,b	;volatile
  1666                           
  1667                           ; BSR set to: 14
  1668                           ;pin_manager.c: 108: GIE = state;
  1669  0018F8  A015               	btfss	PIN_MANAGER_Initialize@state,0,c
  1670  0018FA  D002               	goto	u2030
  1671  0018FC  8EF2               	bsf	intcon,7,c	;volatile
  1672  0018FE  0012               	return	
  1673  001900                     u2030:
  1674  001900  9EF2               	bcf	intcon,7,c	;volatile
  1675  001902  0012               	return		;funcret
  1676  001904                     __end_of_PIN_MANAGER_Initialize:
  1677                           	opt stack 0
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           prodl	equ	0xFF3
  1683                           intcon	equ	0xFF2
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           postdec1	equ	0xFE5
  1687                           plusw1	equ	0xFE3
  1688                           fsr1h	equ	0xFE2
  1689                           fsr1l	equ	0xFE1
  1690                           indf2	equ	0xFDF
  1691                           plusw2	equ	0xFDB
  1692                           fsr2h	equ	0xFDA
  1693                           fsr2l	equ	0xFD9
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function _OSCILLATOR_Initialize *****************
  1697 ;; Defined at:
  1698 ;;		line 117 in file "mcc_generated_files/mcc.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    5
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_SYSTEM_Initialize
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text7
  1727  001C74                     __ptext7:
  1728                           	opt stack 0
  1729  001C74                     _OSCILLATOR_Initialize:
  1730                           	opt stack 24
  1731                           
  1732                           ;mcc.c: 120: OSCCON1 = 0x20;
  1733                           
  1734                           ;incstack = 0
  1735  001C74  0E20               	movlw	32
  1736  001C76  010E               	movlb	14	; () banked
  1737  001C78  6FD8               	movwf	216,b	;volatile
  1738                           
  1739                           ;mcc.c: 122: OSCCON3 = 0x00;
  1740  001C7A  0E00               	movlw	0
  1741  001C7C  010E               	movlb	14	; () banked
  1742  001C7E  6FDA               	movwf	218,b	;volatile
  1743                           
  1744                           ;mcc.c: 124: OSCEN = 0x00;
  1745  001C80  0E00               	movlw	0
  1746  001C82  010E               	movlb	14	; () banked
  1747  001C84  6FDC               	movwf	220,b	;volatile
  1748                           
  1749                           ;mcc.c: 126: OSCFRQ = 0x02;
  1750  001C86  0E02               	movlw	2
  1751  001C88  010E               	movlb	14	; () banked
  1752  001C8A  6FDE               	movwf	222,b	;volatile
  1753                           
  1754                           ;mcc.c: 128: OSCTUNE = 0x00;
  1755  001C8C  0E00               	movlw	0
  1756  001C8E  010E               	movlb	14	; () banked
  1757  001C90  6FDD               	movwf	221,b	;volatile
  1758  001C92                     l333:
  1759                           
  1760                           ; BSR set to: 14
  1761  001C92  010E               	movlb	14	; () banked
  1762  001C94  B1DB               	btfsc	219,0,b	;volatile
  1763  001C96  0012               	return	
  1764  001C98  D7FC               	goto	l333
  1765  001C9A                     __end_of_OSCILLATOR_Initialize:
  1766                           	opt stack 0
  1767                           tblptru	equ	0xFF8
  1768                           tblptrh	equ	0xFF7
  1769                           tblptrl	equ	0xFF6
  1770                           tablat	equ	0xFF5
  1771                           prodl	equ	0xFF3
  1772                           intcon	equ	0xFF2
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           postdec1	equ	0xFE5
  1776                           plusw1	equ	0xFE3
  1777                           fsr1h	equ	0xFE2
  1778                           fsr1l	equ	0xFE1
  1779                           indf2	equ	0xFDF
  1780                           plusw2	equ	0xFDB
  1781                           fsr2h	equ	0xFDA
  1782                           fsr2l	equ	0xFD9
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function _INTERRUPT_Initialize *****************
  1786 ;; Defined at:
  1787 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		None
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    5
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_SYSTEM_Initialize
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text8
  1816  001D6E                     __ptext8:
  1817                           	opt stack 0
  1818  001D6E                     _INTERRUPT_Initialize:
  1819                           	opt stack 24
  1820                           
  1821                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  1822                           
  1823                           ; BSR set to: 14
  1824                           ;incstack = 0
  1825  001D6E  9AF2               	bcf	intcon,5,c	;volatile
  1826  001D70  0012               	return		;funcret
  1827  001D72                     __end_of_INTERRUPT_Initialize:
  1828                           	opt stack 0
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           prodl	equ	0xFF3
  1834                           intcon	equ	0xFF2
  1835                           postinc0	equ	0xFEE
  1836                           wreg	equ	0xFE8
  1837                           postdec1	equ	0xFE5
  1838                           plusw1	equ	0xFE3
  1839                           fsr1h	equ	0xFE2
  1840                           fsr1l	equ	0xFE1
  1841                           indf2	equ	0xFDF
  1842                           plusw2	equ	0xFDB
  1843                           fsr2h	equ	0xFDA
  1844                           fsr2l	equ	0xFD9
  1845                           status	equ	0xFD8
  1846                           
  1847 ;; *************** function _EUSART1_Initialize *****************
  1848 ;; Defined at:
  1849 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    5
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_SYSTEM_Initialize
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text9
  1879  001D0C                     __ptext9:
  1880                           	opt stack 0
  1881  001D0C                     _EUSART1_Initialize:
  1882                           	opt stack 24
  1883                           
  1884                           ;eusart1.c: 60: BAUD1CON = 0x08;
  1885                           
  1886                           ;incstack = 0
  1887  001D0C  0E08               	movlw	8
  1888  001D0E  6E9F               	movwf	3999,c	;volatile
  1889                           
  1890                           ;eusart1.c: 63: RC1STA = 0x90;
  1891  001D10  0E90               	movlw	144
  1892  001D12  6E9D               	movwf	3997,c	;volatile
  1893                           
  1894                           ;eusart1.c: 66: TX1STA = 0x84;
  1895  001D14  0E84               	movlw	132
  1896  001D16  6E9E               	movwf	3998,c	;volatile
  1897                           
  1898                           ;eusart1.c: 69: SP1BRGL = 0xA0;
  1899  001D18  0EA0               	movlw	160
  1900  001D1A  6E9B               	movwf	3995,c	;volatile
  1901                           
  1902                           ;eusart1.c: 72: SP1BRGH = 0x01;
  1903  001D1C  0E01               	movlw	1
  1904  001D1E  6E9C               	movwf	3996,c	;volatile
  1905  001D20  0012               	return		;funcret
  1906  001D22                     __end_of_EUSART1_Initialize:
  1907                           	opt stack 0
  1908                           tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           prodl	equ	0xFF3
  1913                           intcon	equ	0xFF2
  1914                           postinc0	equ	0xFEE
  1915                           wreg	equ	0xFE8
  1916                           postdec1	equ	0xFE5
  1917                           plusw1	equ	0xFE3
  1918                           fsr1h	equ	0xFE2
  1919                           fsr1l	equ	0xFE1
  1920                           indf2	equ	0xFDF
  1921                           plusw2	equ	0xFDB
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _ReadGPSDateTime *****************
  1927 ;; Defined at:
  1928 ;;		line 39 in file "libs/gps.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  Date            2   20[COMRAM] PTR unsigned char 
  1931 ;;		 -> main@Date(7), 
  1932 ;;  Time            2   22[COMRAM] PTR unsigned char 
  1933 ;;		 -> main@Time(7), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  StartCode       7   28[COMRAM] const unsigned char [7]
  1936 ;;  i               2   36[COMRAM] int 
  1937 ;;  Pos             1   39[COMRAM] unsigned char 
  1938 ;;  TempChar        1   38[COMRAM] unsigned char 
  1939 ;;  Commas          1   35[COMRAM] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1950 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1951 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1952 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1953 ;;Total ram usage:       20 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    6
  1956 ;; This function calls:
  1957 ;;		_EUSART1_Read
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text10
  1964  00133C                     __ptext10:
  1965                           	opt stack 0
  1966  00133C                     _ReadGPSDateTime:
  1967                           	opt stack 24
  1968                           
  1969                           ;gps.c: 40: const char StartCode[7]="$GPRMC,";
  1970                           
  1971                           ;incstack = 0
  1972  00133C  0E01               	movlw	low ReadGPSDateTime@F11354
  1973  00133E  6EF6               	movwf	tblptrl,c
  1974  001340                     	if	1	;There is more than 1 active tblptr byte
  1975  001340  0E0F               	movlw	high ReadGPSDateTime@F11354
  1976  001342  6EF7               	movwf	tblptrh,c
  1977  001344                     	endif
  1978  001344                     	if	1	;There are 3 active tblptr bytes
  1979  001344  0E00               	movlw	low (ReadGPSDateTime@F11354 shr (0+16))
  1980  001346  6EF8               	movwf	tblptru,c
  1981  001348                     	endif
  1982  001348  EE20  F01D         	lfsr	2,ReadGPSDateTime@StartCode
  1983  00134C  0E06               	movlw	6
  1984  00134E                     u2210:
  1985  00134E  0009               	tblrd		*+
  1986  001350  CFF5 FFDE          	movff	tablat,postinc2
  1987  001354  06E8               	decf	wreg,f,c
  1988  001356  E2FB               	bc	u2210
  1989                           
  1990                           ;gps.c: 41: char Pos=0x00;
  1991  001358  0E00               	movlw	0
  1992  00135A  6E28               	movwf	ReadGPSDateTime@Pos,c
  1993                           
  1994                           ;gps.c: 42: char TempChar = 0x00;
  1995  00135C  0E00               	movlw	0
  1996  00135E  6E27               	movwf	ReadGPSDateTime@TempChar,c
  1997                           
  1998                           ;gps.c: 43: int i=0;
  1999  001360  0E00               	movlw	0
  2000  001362  6E26               	movwf	ReadGPSDateTime@i+1,c
  2001  001364  0E00               	movlw	0
  2002  001366  6E25               	movwf	ReadGPSDateTime@i,c
  2003                           
  2004                           ;gps.c: 44: UINT8 Commas=0;
  2005  001368  0E00               	movlw	0
  2006  00136A  6E24               	movwf	ReadGPSDateTime@Commas,c
  2007  00136C                     l2757:
  2008                           
  2009                           ;gps.c: 46: if ((PIR3bits.RC1IF)){
  2010  00136C  010E               	movlb	14	; () banked
  2011  00136E  ABCD               	btfss	205,5,b	;volatile
  2012  001370  D065               	goto	l2793
  2013                           
  2014                           ; BSR set to: 14
  2015                           ;gps.c: 47: i=0;
  2016  001372  0E00               	movlw	0
  2017  001374  6E26               	movwf	ReadGPSDateTime@i+1,c
  2018  001376  0E00               	movlw	0
  2019  001378  6E25               	movwf	ReadGPSDateTime@i,c
  2020                           
  2021                           ; BSR set to: 14
  2022                           ;gps.c: 48: TempChar = EUSART1_Read();
  2023  00137A  EC91  F00E         	call	_EUSART1_Read	;wreg free
  2024  00137E  6E27               	movwf	ReadGPSDateTime@TempChar,c
  2025                           
  2026                           ;gps.c: 49: if ((Pos>=0x07) & (Pos<=0x0c)) {
  2027  001380  0E06               	movlw	6
  2028  001382  6428               	cpfsgt	ReadGPSDateTime@Pos,c
  2029  001384  D014               	goto	l2771
  2030  001386  0E0D               	movlw	13
  2031  001388  6028               	cpfslt	ReadGPSDateTime@Pos,c
  2032  00138A  D011               	goto	l2771
  2033                           
  2034                           ;gps.c: 50: Time[Pos-0x07]= TempChar;
  2035  00138C  0EF9               	movlw	249
  2036  00138E  6E19               	movwf	??_ReadGPSDateTime& (0+255),c
  2037  001390  0EFF               	movlw	255
  2038  001392  6E1A               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  2039  001394  5028               	movf	ReadGPSDateTime@Pos,w,c
  2040  001396  6E1B               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  2041  001398  6A1C               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  2042  00139A  5019               	movf	??_ReadGPSDateTime,w,c
  2043  00139C  261B               	addwf	??_ReadGPSDateTime+2,f,c
  2044  00139E  501A               	movf	??_ReadGPSDateTime+1,w,c
  2045  0013A0  221C               	addwfc	??_ReadGPSDateTime+3,f,c
  2046  0013A2  501B               	movf	??_ReadGPSDateTime+2,w,c
  2047  0013A4  2417               	addwf	ReadGPSDateTime@Time,w,c
  2048  0013A6  6ED9               	movwf	fsr2l,c
  2049  0013A8  501C               	movf	??_ReadGPSDateTime+3,w,c
  2050  0013AA  2018               	addwfc	ReadGPSDateTime@Time+1,w,c
  2051  0013AC  D03F               	goto	L7
  2052  0013AE                     l2771:
  2053  0013AE  5028               	movf	ReadGPSDateTime@Pos,w,c
  2054  0013B0  0D01               	mullw	1
  2055  0013B2  0E1D               	movlw	low ReadGPSDateTime@StartCode
  2056  0013B4  24F3               	addwf	prodl,w,c
  2057  0013B6  6ED9               	movwf	fsr2l,c
  2058  0013B8  0E00               	movlw	high ReadGPSDateTime@StartCode
  2059  0013BA  20F4               	addwfc	prodh,w,c
  2060  0013BC  6EDA               	movwf	fsr2h,c
  2061  0013BE  5027               	movf	ReadGPSDateTime@TempChar,w,c
  2062  0013C0  18DE               	xorwf	postinc2,w,c
  2063  0013C2  A4D8               	btfss	status,2,c
  2064  0013C4  D004               	goto	l2777
  2065  0013C6  0E07               	movlw	7
  2066  0013C8  6028               	cpfslt	ReadGPSDateTime@Pos,c
  2067  0013CA  D001               	goto	l2777
  2068  0013CC  D032               	goto	l2789
  2069  0013CE                     l2777:
  2070  0013CE  0E0C               	movlw	12
  2071  0013D0  6428               	cpfsgt	ReadGPSDateTime@Pos,c
  2072  0013D2  D031               	goto	l2791
  2073                           
  2074                           ;gps.c: 55: if (Commas<8) {
  2075  0013D4  0E08               	movlw	8
  2076  0013D6  6024               	cpfslt	ReadGPSDateTime@Commas,c
  2077  0013D8  D006               	goto	l2785
  2078                           
  2079                           ;gps.c: 56: if (TempChar == 0x2C)
  2080  0013DA  0E2C               	movlw	44
  2081  0013DC  1827               	xorwf	ReadGPSDateTime@TempChar,w,c
  2082  0013DE  A4D8               	btfss	status,2,c
  2083  0013E0  D031               	goto	l2795
  2084                           
  2085                           ;gps.c: 57: Commas++;
  2086  0013E2  2A24               	incf	ReadGPSDateTime@Commas,f,c
  2087                           
  2088                           ;gps.c: 58: } else {
  2089  0013E4  D02F               	goto	l2795
  2090  0013E6                     l2785:
  2091                           
  2092                           ;gps.c: 59: if ((Pos-0x0d)<6) {
  2093  0013E6  0EF3               	movlw	243
  2094  0013E8  6E19               	movwf	??_ReadGPSDateTime& (0+255),c
  2095  0013EA  0EFF               	movlw	255
  2096  0013EC  6E1A               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  2097  0013EE  5028               	movf	ReadGPSDateTime@Pos,w,c
  2098  0013F0  6E1B               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  2099  0013F2  6A1C               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  2100  0013F4  5019               	movf	??_ReadGPSDateTime,w,c
  2101  0013F6  261B               	addwf	??_ReadGPSDateTime+2,f,c
  2102  0013F8  501A               	movf	??_ReadGPSDateTime+1,w,c
  2103  0013FA  221C               	addwfc	??_ReadGPSDateTime+3,f,c
  2104  0013FC  BE1C               	btfsc	??_ReadGPSDateTime+3,7,c
  2105  0013FE  D006               	goto	l2787
  2106  001400  501C               	movf	??_ReadGPSDateTime+3,w,c
  2107  001402  E12B               	bnz	l59
  2108  001404  0E06               	movlw	6
  2109  001406  5C1B               	subwf	??_ReadGPSDateTime+2,w,c
  2110  001408  B0D8               	btfsc	status,0,c
  2111  00140A  0012               	return	
  2112  00140C                     l2787:
  2113                           
  2114                           ;gps.c: 60: Date[Pos-0x0d] = TempChar;
  2115  00140C  0EF3               	movlw	243
  2116  00140E  6E19               	movwf	??_ReadGPSDateTime& (0+255),c
  2117  001410  0EFF               	movlw	255
  2118  001412  6E1A               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  2119  001414  5028               	movf	ReadGPSDateTime@Pos,w,c
  2120  001416  6E1B               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  2121  001418  6A1C               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  2122  00141A  5019               	movf	??_ReadGPSDateTime,w,c
  2123  00141C  261B               	addwf	??_ReadGPSDateTime+2,f,c
  2124  00141E  501A               	movf	??_ReadGPSDateTime+1,w,c
  2125  001420  221C               	addwfc	??_ReadGPSDateTime+3,f,c
  2126  001422  501B               	movf	??_ReadGPSDateTime+2,w,c
  2127  001424  2415               	addwf	ReadGPSDateTime@Date,w,c
  2128  001426  6ED9               	movwf	fsr2l,c
  2129  001428  501C               	movf	??_ReadGPSDateTime+3,w,c
  2130  00142A  2016               	addwfc	ReadGPSDateTime@Date+1,w,c
  2131  00142C                     L7:
  2132  00142C  6EDA               	movwf	fsr2h,c
  2133  00142E  C027  FFDF         	movff	ReadGPSDateTime@TempChar,indf2
  2134  001432                     l2789:
  2135                           
  2136                           ;gps.c: 61: Pos++;
  2137  001432  2A28               	incf	ReadGPSDateTime@Pos,f,c
  2138                           
  2139                           ;gps.c: 62: } else
  2140  001434  D007               	goto	l2795
  2141  001436                     l2791:
  2142                           
  2143                           ;gps.c: 66: Pos=0;
  2144  001436  0E00               	movlw	0
  2145  001438  6E28               	movwf	ReadGPSDateTime@Pos,c
  2146                           
  2147                           ;gps.c: 67: } else
  2148  00143A  D004               	goto	l2795
  2149  00143C                     l2793:
  2150                           
  2151                           ;gps.c: 68: _delay((unsigned long)((20)*(16000000/4000000.0)));
  2152  00143C  0E1A               	movlw	26
  2153  00143E                     u2777:
  2154  00143E  2EE8               	decfsz	wreg,f,c
  2155  001440  D7FE               	bra	u2777
  2156  001442  D000               	nop2	
  2157  001444                     l2795:
  2158                           
  2159                           ;gps.c: 69: i++;
  2160  001444  4A25               	infsnz	ReadGPSDateTime@i,f,c
  2161  001446  2A26               	incf	ReadGPSDateTime@i+1,f,c
  2162                           
  2163                           ;gps.c: 70: } while(i<1000);
  2164  001448  BE26               	btfsc	ReadGPSDateTime@i+1,7,c
  2165  00144A  D790               	goto	l2757
  2166  00144C  0EE8               	movlw	232
  2167  00144E  5C25               	subwf	ReadGPSDateTime@i,w,c
  2168  001450  0E03               	movlw	3
  2169  001452  5826               	subwfb	ReadGPSDateTime@i+1,w,c
  2170  001454  B0D8               	btfsc	status,0,c
  2171  001456  0012               	return	
  2172  001458  D789               	goto	l2757
  2173  00145A                     l59:
  2174  00145A  0012               	return		;funcret
  2175  00145C                     __end_of_ReadGPSDateTime:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           postdec1	equ	0xFE5
  2187                           plusw1	equ	0xFE3
  2188                           fsr1h	equ	0xFE2
  2189                           fsr1l	equ	0xFE1
  2190                           indf2	equ	0xFDF
  2191                           postinc2	equ	0xFDE
  2192                           plusw2	equ	0xFDB
  2193                           fsr2h	equ	0xFDA
  2194                           fsr2l	equ	0xFD9
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _EUSART1_Read *****************
  2198 ;; Defined at:
  2199 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      unsigned char 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    5
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_ReadGPSDateTime
  2224 ;;		_ShowRawData
  2225 ;;		_ReadGPSTime
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text11
  2230  001D22                     __ptext11:
  2231                           	opt stack 0
  2232  001D22                     _EUSART1_Read:
  2233                           	opt stack 24
  2234  001D22                     l229:
  2235  001D22  010E               	movlb	14	; () banked
  2236  001D24  ABCD               	btfss	205,5,b	;volatile
  2237  001D26  D7FD               	goto	l229
  2238                           
  2239                           ; BSR set to: 14
  2240                           ;eusart1.c: 82: }
  2241                           ;eusart1.c: 85: if(1 == RC1STAbits.OERR)
  2242  001D28  A29D               	btfss	3997,1,c	;volatile
  2243  001D2A  D002               	goto	l2543
  2244                           
  2245                           ; BSR set to: 14
  2246                           ;eusart1.c: 86: {
  2247                           ;eusart1.c: 89: RC1STAbits.SPEN = 0;
  2248  001D2C  9E9D               	bcf	3997,7,c	;volatile
  2249                           
  2250                           ;eusart1.c: 90: RC1STAbits.SPEN = 1;
  2251  001D2E  8E9D               	bsf	3997,7,c	;volatile
  2252  001D30                     l2543:
  2253                           
  2254                           ; BSR set to: 14
  2255                           ;eusart1.c: 91: }
  2256                           ;eusart1.c: 93: return RC1REG;
  2257  001D30  5099               	movf	3993,w,c	;volatile
  2258  001D32  0012               	return	
  2259  001D34                     __end_of_EUSART1_Read:
  2260                           	opt stack 0
  2261                           tblptru	equ	0xFF8
  2262                           tblptrh	equ	0xFF7
  2263                           tblptrl	equ	0xFF6
  2264                           tablat	equ	0xFF5
  2265                           prodh	equ	0xFF4
  2266                           prodl	equ	0xFF3
  2267                           intcon	equ	0xFF2
  2268                           postinc0	equ	0xFEE
  2269                           wreg	equ	0xFE8
  2270                           postdec1	equ	0xFE5
  2271                           plusw1	equ	0xFE3
  2272                           fsr1h	equ	0xFE2
  2273                           fsr1l	equ	0xFE1
  2274                           indf2	equ	0xFDF
  2275                           postinc2	equ	0xFDE
  2276                           plusw2	equ	0xFDB
  2277                           fsr2h	equ	0xFDA
  2278                           fsr2l	equ	0xFD9
  2279                           status	equ	0xFD8
  2280                           
  2281 ;; *************** function _Lcd_Text *****************
  2282 ;; Defined at:
  2283 ;;		line 76 in file "libs/HD44780.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  y               1    wreg     unsigned char 
  2286 ;;  x               1   23[COMRAM] unsigned char 
  2287 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  2288 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(2), 
  2289 ;;		 -> main@Time(7), main@Date(7), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  y               1   26[COMRAM] unsigned char 
  2292 ;;  data            1   27[COMRAM] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2302 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;Total ram usage:        5 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    7
  2309 ;; This function calls:
  2310 ;;		_Lcd_CharCP
  2311 ;;		_Lcd_Command
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text12
  2318  001904                     __ptext12:
  2319                           	opt stack 0
  2320  001904                     _Lcd_Text:
  2321                           	opt stack 23
  2322                           
  2323                           ; BSR set to: 14
  2324                           ;incstack = 0
  2325                           ;Lcd_Text@y stored from wreg
  2326  001904  6E1B               	movwf	Lcd_Text@y,c
  2327                           
  2328                           ;HD44780.c: 77: unsigned char data;
  2329                           ;HD44780.c: 78: switch(y){
  2330  001906  D00D               	goto	l2941
  2331  001908                     l2931:
  2332  001908  5018               	movf	Lcd_Text@x,w,c
  2333  00190A  0F7F               	addlw	127
  2334  00190C  D008               	goto	L3
  2335  00190E                     l2933:
  2336  00190E  5018               	movf	Lcd_Text@x,w,c
  2337  001910  0FBF               	addlw	191
  2338  001912  D005               	goto	L3
  2339  001914                     l2935:
  2340  001914  5018               	movf	Lcd_Text@x,w,c
  2341  001916  0F93               	addlw	147
  2342  001918  D002               	goto	L3
  2343  00191A                     l2937:
  2344  00191A  5018               	movf	Lcd_Text@x,w,c
  2345  00191C  0FD3               	addlw	211
  2346  00191E                     L3:
  2347  00191E  6E1C               	movwf	Lcd_Text@data,c
  2348                           
  2349                           ;HD44780.c: 83: default: break;}
  2350  001920  D00D               	goto	l2943
  2351  001922                     l2941:
  2352  001922  501B               	movf	Lcd_Text@y,w,c
  2353                           
  2354                           ; Switch size 1, requested type "space"
  2355                           ; Number of cases is 4, Range of values is 1 to 4
  2356                           ; switch strategies available:
  2357                           ; Name         Instructions Cycles
  2358                           ; simple_byte           13     7 (average)
  2359                           ;	Chosen strategy is simple_byte
  2360  001924  0A01               	xorlw	1	; case 1
  2361  001926  B4D8               	btfsc	status,2,c
  2362  001928  D7EF               	goto	l2931
  2363  00192A  0A03               	xorlw	3	; case 2
  2364  00192C  B4D8               	btfsc	status,2,c
  2365  00192E  D7EF               	goto	l2933
  2366  001930  0A01               	xorlw	1	; case 3
  2367  001932  B4D8               	btfsc	status,2,c
  2368  001934  D7EF               	goto	l2935
  2369  001936  0A07               	xorlw	7	; case 4
  2370  001938  B4D8               	btfsc	status,2,c
  2371  00193A  D7EF               	goto	l2937
  2372  00193C                     l2943:
  2373                           
  2374                           ;HD44780.c: 84: Lcd_Command(data);
  2375  00193C  501C               	movf	Lcd_Text@data,w,c
  2376  00193E  EC48  F00B         	call	_Lcd_Command
  2377                           
  2378                           ;HD44780.c: 85: while(*buffer)
  2379  001942  D015               	goto	l2949
  2380  001944                     l2945:
  2381                           
  2382                           ;HD44780.c: 86: {
  2383                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  2384  001944  C019  FFF6         	movff	Lcd_Text@buffer,tblptrl
  2385  001948  C01A  FFF7         	movff	Lcd_Text@buffer+1,tblptrh
  2386  00194C  0E00               	movlw	low (__smallconst shr (0+16))
  2387  00194E  6EF8               	movwf	tblptru,c
  2388  001950  0E0E               	movlw	(high __ramtop+-1)
  2389  001952  64F7               	cpfsgt	tblptrh,c
  2390  001954  D003               	bra	u2487
  2391  001956  0008               	tblrd		*
  2392  001958  50F5               	movf	tablat,w,c
  2393  00195A  D005               	bra	u2480
  2394  00195C                     u2487:
  2395  00195C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2396  001960  CFF7 FFEA          	movff	tblptrh,fsr0h
  2397  001964  50EF               	movf	indf0,w,c
  2398  001966                     u2480:
  2399  001966  ECBD  F00A         	call	_Lcd_CharCP
  2400                           
  2401                           ;HD44780.c: 88: buffer++;
  2402  00196A  4A19               	infsnz	Lcd_Text@buffer,f,c
  2403  00196C  2A1A               	incf	Lcd_Text@buffer+1,f,c
  2404  00196E                     l2949:
  2405  00196E  C019  FFF6         	movff	Lcd_Text@buffer,tblptrl
  2406  001972  C01A  FFF7         	movff	Lcd_Text@buffer+1,tblptrh
  2407  001976  0E00               	movlw	low (__smallconst shr (0+16))
  2408  001978  6EF8               	movwf	tblptru,c
  2409  00197A  0E0E               	movlw	(high __ramtop+-1)
  2410  00197C  64F7               	cpfsgt	tblptrh,c
  2411  00197E  D003               	bra	u2497
  2412  001980  0008               	tblrd		*
  2413  001982  50F5               	movf	tablat,w,c
  2414  001984  D005               	bra	u2490
  2415  001986                     u2497:
  2416  001986  CFF6 FFE9          	movff	tblptrl,fsr0l
  2417  00198A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2418  00198E  50EF               	movf	indf0,w,c
  2419  001990                     u2490:
  2420  001990  0900               	iorlw	0
  2421  001992  B4D8               	btfsc	status,2,c
  2422  001994  0012               	return	
  2423  001996  D7D6               	goto	l2945
  2424  001998                     __end_of_Lcd_Text:
  2425                           	opt stack 0
  2426                           tblptru	equ	0xFF8
  2427                           tblptrh	equ	0xFF7
  2428                           tblptrl	equ	0xFF6
  2429                           tablat	equ	0xFF5
  2430                           prodh	equ	0xFF4
  2431                           prodl	equ	0xFF3
  2432                           intcon	equ	0xFF2
  2433                           indf0	equ	0xFEF
  2434                           postinc0	equ	0xFEE
  2435                           fsr0h	equ	0xFEA
  2436                           fsr0l	equ	0xFE9
  2437                           wreg	equ	0xFE8
  2438                           postdec1	equ	0xFE5
  2439                           plusw1	equ	0xFE3
  2440                           fsr1h	equ	0xFE2
  2441                           fsr1l	equ	0xFE1
  2442                           indf2	equ	0xFDF
  2443                           postinc2	equ	0xFDE
  2444                           plusw2	equ	0xFDB
  2445                           fsr2h	equ	0xFDA
  2446                           fsr2l	equ	0xFD9
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _Lcd_Int *****************
  2450 ;; Defined at:
  2451 ;;		line 157 in file "libs/HD44780.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  y               1    wreg     unsigned char 
  2454 ;;  x               1    0[BANK0 ] unsigned char 
  2455 ;;  val             1    1[BANK0 ] unsigned char 
  2456 ;;  size            1    2[BANK0 ] unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  y               1    3[BANK0 ] unsigned char 
  2459 ;;  tempVal         2    5[BANK0 ] unsigned int 
  2460 ;;  data            1    4[BANK0 ] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2470 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2474 ;;Total ram usage:        7 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    7
  2477 ;; This function calls:
  2478 ;;		_Lcd_CharCP
  2479 ;;		_Lcd_Command
  2480 ;;		___awdiv
  2481 ;;		___lwdiv
  2482 ;;		___wmul
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text13
  2489  00145C                     __ptext13:
  2490                           	opt stack 0
  2491  00145C                     _Lcd_Int:
  2492                           	opt stack 23
  2493                           
  2494                           ;incstack = 0
  2495                           ;Lcd_Int@y stored from wreg
  2496  00145C  0100               	movlb	0	; () banked
  2497  00145E  6FBF               	movwf	Lcd_Int@y& (0+255),b
  2498                           
  2499                           ;HD44780.c: 158: if ((size>0) && (size<=3)) {
  2500  001460  0100               	movlb	0	; () banked
  2501  001462  51BE               	movf	Lcd_Int@size& (0+255),w,b
  2502  001464  0100               	movlb	0	; () banked
  2503  001466  B4D8               	btfsc	status,2,c
  2504  001468  0012               	return	
  2505                           
  2506                           ; BSR set to: 0
  2507  00146A  0E04               	movlw	4
  2508  00146C  0100               	movlb	0	; () banked
  2509  00146E  61BE               	cpfslt	Lcd_Int@size& (0+255),b
  2510  001470  0012               	return	
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;HD44780.c: 159: unsigned int tempVal=val;
  2514  001472  C0BD  F0C1         	movff	Lcd_Int@val,Lcd_Int@tempVal
  2515  001476  0100               	movlb	0	; () banked
  2516  001478  6BC2               	clrf	(Lcd_Int@tempVal+1)& (0+255),b
  2517                           
  2518                           ;HD44780.c: 160: unsigned char data;
  2519                           ;HD44780.c: 161: switch(y){
  2520  00147A  D012               	goto	l2983
  2521  00147C                     l2973:
  2522                           
  2523                           ; BSR set to: 0
  2524  00147C  0100               	movlb	0	; () banked
  2525  00147E  51BC               	movf	Lcd_Int@x& (0+255),w,b
  2526  001480  0F7F               	addlw	127
  2527  001482  D00B               	goto	L6
  2528  001484                     l2975:
  2529                           
  2530                           ; BSR set to: 0
  2531  001484  0100               	movlb	0	; () banked
  2532  001486  51BC               	movf	Lcd_Int@x& (0+255),w,b
  2533  001488  0FBF               	addlw	191
  2534  00148A  D007               	goto	L6
  2535  00148C                     l2977:
  2536                           
  2537                           ; BSR set to: 0
  2538  00148C  0100               	movlb	0	; () banked
  2539  00148E  51BC               	movf	Lcd_Int@x& (0+255),w,b
  2540  001490  0F93               	addlw	147
  2541  001492  D003               	goto	L6
  2542  001494                     l2979:
  2543                           
  2544                           ; BSR set to: 0
  2545  001494  0100               	movlb	0	; () banked
  2546  001496  51BC               	movf	Lcd_Int@x& (0+255),w,b
  2547  001498  0FD3               	addlw	211
  2548  00149A                     L6:
  2549  00149A  0100               	movlb	0	; () banked
  2550  00149C  6FC0               	movwf	Lcd_Int@data& (0+255),b
  2551                           
  2552                           ; BSR set to: 0
  2553                           
  2554                           ; BSR set to: 0
  2555                           
  2556                           ;HD44780.c: 166: default: break;}
  2557  00149E  D00E               	goto	l2985
  2558  0014A0                     l2983:
  2559                           
  2560                           ; BSR set to: 0
  2561  0014A0  0100               	movlb	0	; () banked
  2562  0014A2  51BF               	movf	Lcd_Int@y& (0+255),w,b
  2563                           
  2564                           ; Switch size 1, requested type "space"
  2565                           ; Number of cases is 4, Range of values is 1 to 4
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte           13     7 (average)
  2569                           ;	Chosen strategy is simple_byte
  2570  0014A4  0A01               	xorlw	1	; case 1
  2571  0014A6  B4D8               	btfsc	status,2,c
  2572  0014A8  D7E9               	goto	l2973
  2573  0014AA  0A03               	xorlw	3	; case 2
  2574  0014AC  B4D8               	btfsc	status,2,c
  2575  0014AE  D7EA               	goto	l2975
  2576  0014B0  0A01               	xorlw	1	; case 3
  2577  0014B2  B4D8               	btfsc	status,2,c
  2578  0014B4  D7EB               	goto	l2977
  2579  0014B6  0A07               	xorlw	7	; case 4
  2580  0014B8  B4D8               	btfsc	status,2,c
  2581  0014BA  D7EC               	goto	l2979
  2582  0014BC                     l2985:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;HD44780.c: 167: Lcd_Command(data);
  2586  0014BC  0100               	movlb	0	; () banked
  2587  0014BE  51C0               	movf	Lcd_Int@data& (0+255),w,b
  2588  0014C0  EC48  F00B         	call	_Lcd_Command
  2589                           
  2590                           ;HD44780.c: 168: if (size>=3){
  2591  0014C4  0E02               	movlw	2
  2592  0014C6  0100               	movlb	0	; () banked
  2593  0014C8  65BE               	cpfsgt	Lcd_Int@size& (0+255),b
  2594  0014CA  D012               	goto	l2991
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;HD44780.c: 169: tempVal = val/100;
  2598  0014CC  C0BD  F015         	movff	Lcd_Int@val,___awdiv@dividend
  2599  0014D0  6A16               	clrf	___awdiv@dividend+1,c
  2600  0014D2  0E00               	movlw	0
  2601  0014D4  6E18               	movwf	___awdiv@divisor+1,c
  2602  0014D6  0E64               	movlw	100
  2603  0014D8  6E17               	movwf	___awdiv@divisor,c
  2604  0014DA  ECCC  F00C         	call	___awdiv	;wreg free
  2605  0014DE  C015  F0C1         	movff	?___awdiv,Lcd_Int@tempVal
  2606  0014E2  C016  F0C2         	movff	?___awdiv+1,Lcd_Int@tempVal+1
  2607                           
  2608                           ;HD44780.c: 170: Lcd_CharCP(0x30+(tempVal));
  2609  0014E6  0100               	movlb	0	; () banked
  2610  0014E8  51C1               	movf	Lcd_Int@tempVal& (0+255),w,b
  2611  0014EA  0F30               	addlw	48
  2612  0014EC  ECBD  F00A         	call	_Lcd_CharCP
  2613  0014F0                     l2991:
  2614                           
  2615                           ;HD44780.c: 171: }
  2616                           ;HD44780.c: 172: if (size>=2){
  2617  0014F0  0E01               	movlw	1
  2618  0014F2  0100               	movlb	0	; () banked
  2619  0014F4  65BE               	cpfsgt	Lcd_Int@size& (0+255),b
  2620  0014F6  D024               	goto	l2997
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;HD44780.c: 173: tempVal = (val-tempVal*100)/10;
  2624  0014F8  C0C1  F015         	movff	Lcd_Int@tempVal,___wmul@multiplier
  2625  0014FC  C0C2  F016         	movff	Lcd_Int@tempVal+1,___wmul@multiplier+1
  2626  001500  0E00               	movlw	0
  2627  001502  6E18               	movwf	___wmul@multiplicand+1,c
  2628  001504  0E64               	movlw	100
  2629  001506  6E17               	movwf	___wmul@multiplicand,c
  2630  001508  EC4D  F00E         	call	___wmul	;wreg free
  2631  00150C  1E15               	comf	?___wmul,f,c
  2632  00150E  1E16               	comf	?___wmul+1,f,c
  2633  001510  4A15               	infsnz	?___wmul,f,c
  2634  001512  2A16               	incf	?___wmul+1,f,c
  2635  001514  0100               	movlb	0	; () banked
  2636  001516  51BD               	movf	Lcd_Int@val& (0+255),w,b
  2637  001518  2415               	addwf	?___wmul,w,c
  2638  00151A  6E1B               	movwf	___lwdiv@dividend,c
  2639  00151C  0E00               	movlw	0
  2640  00151E  2016               	addwfc	?___wmul+1,w,c
  2641  001520  6E1C               	movwf	___lwdiv@dividend+1,c
  2642  001522  0E00               	movlw	0
  2643  001524  6E1E               	movwf	___lwdiv@divisor+1,c
  2644  001526  0E0A               	movlw	10
  2645  001528  6E1D               	movwf	___lwdiv@divisor,c
  2646  00152A  ECBF  F00D         	call	___lwdiv	;wreg free
  2647  00152E  C01B  F0C1         	movff	?___lwdiv,Lcd_Int@tempVal
  2648  001532  C01C  F0C2         	movff	?___lwdiv+1,Lcd_Int@tempVal+1
  2649                           
  2650                           ;HD44780.c: 174: Lcd_CharCP(0x30+(tempVal));
  2651  001536  0100               	movlb	0	; () banked
  2652  001538  51C1               	movf	Lcd_Int@tempVal& (0+255),w,b
  2653  00153A  0F30               	addlw	48
  2654  00153C  ECBD  F00A         	call	_Lcd_CharCP
  2655  001540                     l2997:
  2656                           
  2657                           ;HD44780.c: 175: }
  2658                           ;HD44780.c: 176: if (size>=1){
  2659  001540  0100               	movlb	0	; () banked
  2660  001542  51BE               	movf	Lcd_Int@size& (0+255),w,b
  2661  001544  0100               	movlb	0	; () banked
  2662  001546  B4D8               	btfsc	status,2,c
  2663  001548  0012               	return	
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;HD44780.c: 177: tempVal = val/10;
  2667  00154A  C0BD  F015         	movff	Lcd_Int@val,___awdiv@dividend
  2668  00154E  6A16               	clrf	___awdiv@dividend+1,c
  2669  001550  0E00               	movlw	0
  2670  001552  6E18               	movwf	___awdiv@divisor+1,c
  2671  001554  0E0A               	movlw	10
  2672  001556  6E17               	movwf	___awdiv@divisor,c
  2673  001558  ECCC  F00C         	call	___awdiv	;wreg free
  2674  00155C  C015  F0C1         	movff	?___awdiv,Lcd_Int@tempVal
  2675  001560  C016  F0C2         	movff	?___awdiv+1,Lcd_Int@tempVal+1
  2676                           
  2677                           ;HD44780.c: 178: Lcd_CharCP(0x30+(val - tempVal*10));
  2678  001564  0100               	movlb	0	; () banked
  2679  001566  51C1               	movf	Lcd_Int@tempVal& (0+255),w,b
  2680  001568  0D0A               	mullw	10
  2681  00156A  50F3               	movf	prodl,w,c
  2682  00156C  0800               	sublw	0
  2683  00156E  0100               	movlb	0	; () banked
  2684  001570  25BD               	addwf	Lcd_Int@val& (0+255),w,b
  2685  001572  0F30               	addlw	48
  2686  001574  ECBD  F00A         	call	_Lcd_CharCP
  2687  001578  0012               	return	
  2688  00157A                     __end_of_Lcd_Int:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           prodh	equ	0xFF4
  2695                           prodl	equ	0xFF3
  2696                           intcon	equ	0xFF2
  2697                           indf0	equ	0xFEF
  2698                           postinc0	equ	0xFEE
  2699                           fsr0h	equ	0xFEA
  2700                           fsr0l	equ	0xFE9
  2701                           wreg	equ	0xFE8
  2702                           postdec1	equ	0xFE5
  2703                           plusw1	equ	0xFE3
  2704                           fsr1h	equ	0xFE2
  2705                           fsr1l	equ	0xFE1
  2706                           indf2	equ	0xFDF
  2707                           postinc2	equ	0xFDE
  2708                           plusw2	equ	0xFDB
  2709                           fsr2h	equ	0xFDA
  2710                           fsr2l	equ	0xFD9
  2711                           status	equ	0xFD8
  2712                           
  2713 ;; *************** function ___lwdiv *****************
  2714 ;; Defined at:
  2715 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  dividend        2   26[COMRAM] unsigned int 
  2718 ;;  divisor         2   28[COMRAM] unsigned int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  quotient        2   31[COMRAM] unsigned int 
  2721 ;;  counter         1   30[COMRAM] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2   26[COMRAM] unsigned int 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;Total ram usage:        7 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    5
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_Lcd_Int
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text14
  2746  001B7E                     __ptext14:
  2747                           	opt stack 0
  2748  001B7E                     ___lwdiv:
  2749                           	opt stack 24
  2750                           
  2751                           ;incstack = 0
  2752  001B7E  0E00               	movlw	0
  2753  001B80  6E21               	movwf	___lwdiv@quotient+1,c
  2754  001B82  0E00               	movlw	0
  2755  001B84  6E20               	movwf	___lwdiv@quotient,c
  2756  001B86  501D               	movf	___lwdiv@divisor,w,c
  2757  001B88  101E               	iorwf	___lwdiv@divisor+1,w,c
  2758  001B8A  B4D8               	btfsc	status,2,c
  2759  001B8C  D01C               	goto	l874
  2760  001B8E  0E01               	movlw	1
  2761  001B90  6E1F               	movwf	___lwdiv@counter,c
  2762  001B92  D004               	goto	l2733
  2763  001B94                     l2731:
  2764  001B94  90D8               	bcf	status,0,c
  2765  001B96  361D               	rlcf	___lwdiv@divisor,f,c
  2766  001B98  361E               	rlcf	___lwdiv@divisor+1,f,c
  2767  001B9A  2A1F               	incf	___lwdiv@counter,f,c
  2768  001B9C                     l2733:
  2769  001B9C  AE1E               	btfss	___lwdiv@divisor+1,7,c
  2770  001B9E  D7FA               	goto	l2731
  2771  001BA0                     l2735:
  2772  001BA0  90D8               	bcf	status,0,c
  2773  001BA2  3620               	rlcf	___lwdiv@quotient,f,c
  2774  001BA4  3621               	rlcf	___lwdiv@quotient+1,f,c
  2775  001BA6  501D               	movf	___lwdiv@divisor,w,c
  2776  001BA8  5C1B               	subwf	___lwdiv@dividend,w,c
  2777  001BAA  501E               	movf	___lwdiv@divisor+1,w,c
  2778  001BAC  581C               	subwfb	___lwdiv@dividend+1,w,c
  2779  001BAE  A0D8               	btfss	status,0,c
  2780  001BB0  D005               	goto	l2743
  2781  001BB2  501D               	movf	___lwdiv@divisor,w,c
  2782  001BB4  5E1B               	subwf	___lwdiv@dividend,f,c
  2783  001BB6  501E               	movf	___lwdiv@divisor+1,w,c
  2784  001BB8  5A1C               	subwfb	___lwdiv@dividend+1,f,c
  2785  001BBA  8020               	bsf	___lwdiv@quotient,0,c
  2786  001BBC                     l2743:
  2787  001BBC  90D8               	bcf	status,0,c
  2788  001BBE  321E               	rrcf	___lwdiv@divisor+1,f,c
  2789  001BC0  321D               	rrcf	___lwdiv@divisor,f,c
  2790  001BC2  2E1F               	decfsz	___lwdiv@counter,f,c
  2791  001BC4  D7ED               	goto	l2735
  2792  001BC6                     l874:
  2793  001BC6  C020  F01B         	movff	___lwdiv@quotient,?___lwdiv
  2794  001BCA  C021  F01C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2795  001BCE  0012               	return		;funcret
  2796  001BD0                     __end_of___lwdiv:
  2797                           	opt stack 0
  2798                           tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           prodh	equ	0xFF4
  2803                           prodl	equ	0xFF3
  2804                           intcon	equ	0xFF2
  2805                           indf0	equ	0xFEF
  2806                           postinc0	equ	0xFEE
  2807                           fsr0h	equ	0xFEA
  2808                           fsr0l	equ	0xFE9
  2809                           wreg	equ	0xFE8
  2810                           postdec1	equ	0xFE5
  2811                           plusw1	equ	0xFE3
  2812                           fsr1h	equ	0xFE2
  2813                           fsr1l	equ	0xFE1
  2814                           indf2	equ	0xFDF
  2815                           postinc2	equ	0xFDE
  2816                           plusw2	equ	0xFDB
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8
  2820                           
  2821 ;; *************** function _Lcd_CharCP *****************
  2822 ;; Defined at:
  2823 ;;		line 116 in file "libs/HD44780.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  c               1    wreg     unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  c               1   22[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2840 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2841 ;;Total ram usage:        3 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    6
  2844 ;; This function calls:
  2845 ;;		_Lcd_Delay5us
  2846 ;; This function is called by:
  2847 ;;		_Lcd_Text
  2848 ;;		_Lcd_Int
  2849 ;;		_ShowRawData
  2850 ;;		_Lcd_ConstText
  2851 ;;		_Lcd_WriteChar
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text15
  2856  00157A                     __ptext15:
  2857                           	opt stack 0
  2858  00157A                     _Lcd_CharCP:
  2859                           	opt stack 23
  2860                           
  2861                           ;incstack = 0
  2862                           ;Lcd_CharCP@c stored from wreg
  2863  00157A  6E17               	movwf	Lcd_CharCP@c,c
  2864                           
  2865                           ;HD44780.c: 117: LATAbits.LA1 = 0; LATAbits.LA0 = 1;
  2866  00157C  9283               	bcf	3971,1,c	;volatile
  2867  00157E  8083               	bsf	3971,0,c	;volatile
  2868                           
  2869                           ;HD44780.c: 118: LATAbits.LA5 = (c & 0b10000000)>>7; LATAbits.LA4 = (c & 0b01000000)>>6;
  2870  001580  6A15               	clrf	??_Lcd_CharCP& (0+255),c
  2871  001582  AE17               	btfss	Lcd_CharCP@c,7,c
  2872  001584  D001               	bra	u1975
  2873  001586  2A15               	incf	??_Lcd_CharCP& (0+255),f,c
  2874  001588                     u1975:
  2875  001588  0E01               	movlw	1
  2876  00158A  1615               	andwf	??_Lcd_CharCP,f,c
  2877  00158C  3A15               	swapf	??_Lcd_CharCP,f,c
  2878  00158E  4615               	rlncf	??_Lcd_CharCP,f,c
  2879  001590  5083               	movf	3971,w,c	;volatile
  2880  001592  1815               	xorwf	??_Lcd_CharCP,w,c
  2881  001594  0BDF               	andlw	-33
  2882  001596  1815               	xorwf	??_Lcd_CharCP,w,c
  2883  001598  6E83               	movwf	3971,c	;volatile
  2884  00159A  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2885  00159E  0E06               	movlw	6
  2886  0015A0  6E16               	movwf	(??_Lcd_CharCP+1)& (0+255),c
  2887  0015A2                     u1985:
  2888  0015A2  90D8               	bcf	status,0,c
  2889  0015A4  3215               	rrcf	??_Lcd_CharCP,f,c
  2890  0015A6  2E16               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
  2891  0015A8  D7FC               	goto	u1985
  2892  0015AA  0E01               	movlw	1
  2893  0015AC  1615               	andwf	??_Lcd_CharCP,f,c
  2894  0015AE  3A15               	swapf	??_Lcd_CharCP,f,c
  2895  0015B0  5083               	movf	3971,w,c	;volatile
  2896  0015B2  1815               	xorwf	??_Lcd_CharCP,w,c
  2897  0015B4  0BEF               	andlw	-17
  2898  0015B6  1815               	xorwf	??_Lcd_CharCP,w,c
  2899  0015B8  6E83               	movwf	3971,c	;volatile
  2900                           
  2901                           ;HD44780.c: 119: LATAbits.LA3 = (c & 0b00100000)>>5; LATAbits.LA2 = (c & 0b00010000)>>4;
  2902  0015BA  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2903  0015BE  0E05               	movlw	5
  2904  0015C0  6E16               	movwf	(??_Lcd_CharCP+1)& (0+255),c
  2905  0015C2                     u1995:
  2906  0015C2  90D8               	bcf	status,0,c
  2907  0015C4  3215               	rrcf	??_Lcd_CharCP,f,c
  2908  0015C6  2E16               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
  2909  0015C8  D7FC               	goto	u1995
  2910  0015CA  0E01               	movlw	1
  2911  0015CC  1615               	andwf	??_Lcd_CharCP,f,c
  2912  0015CE  4615               	rlncf	??_Lcd_CharCP,f,c
  2913  0015D0  4615               	rlncf	??_Lcd_CharCP,f,c
  2914  0015D2  4615               	rlncf	??_Lcd_CharCP,f,c
  2915  0015D4  5083               	movf	3971,w,c	;volatile
  2916  0015D6  1815               	xorwf	??_Lcd_CharCP,w,c
  2917  0015D8  0BF7               	andlw	-9
  2918  0015DA  1815               	xorwf	??_Lcd_CharCP,w,c
  2919  0015DC  6E83               	movwf	3971,c	;volatile
  2920  0015DE  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2921  0015E2  3A15               	swapf	??_Lcd_CharCP,f,c
  2922  0015E4  0E0F               	movlw	15
  2923  0015E6  1615               	andwf	??_Lcd_CharCP,f,c
  2924  0015E8  0E01               	movlw	1
  2925  0015EA  1615               	andwf	??_Lcd_CharCP,f,c
  2926  0015EC  4615               	rlncf	??_Lcd_CharCP,f,c
  2927  0015EE  4615               	rlncf	??_Lcd_CharCP,f,c
  2928  0015F0  5083               	movf	3971,w,c	;volatile
  2929  0015F2  1815               	xorwf	??_Lcd_CharCP,w,c
  2930  0015F4  0BFB               	andlw	-5
  2931  0015F6  1815               	xorwf	??_Lcd_CharCP,w,c
  2932  0015F8  6E83               	movwf	3971,c	;volatile
  2933                           
  2934                           ;HD44780.c: 120: _delay(10);
  2935  0015FA  0E03               	movlw	3
  2936  0015FC                     u2787:
  2937  0015FC  2EE8               	decfsz	wreg,f,c
  2938  0015FE  D7FE               	bra	u2787
  2939  001600  F000               	nop	
  2940                           
  2941                           ;HD44780.c: 121: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  2942  001602  8283               	bsf	3971,1,c	;volatile
  2943  001604  ECB0  F00E         	call	_Lcd_Delay5us	;wreg free
  2944  001608  9283               	bcf	3971,1,c	;volatile
  2945                           
  2946                           ;HD44780.c: 122: LATAbits.LA5 = (c & 0b00001000)>>3; LATAbits.LA4 = (c & 0b00000100)>>2;
  2947  00160A  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2948  00160E  90D8               	bcf	status,0,c
  2949  001610  3215               	rrcf	??_Lcd_CharCP,f,c
  2950  001612  90D8               	bcf	status,0,c
  2951  001614  3215               	rrcf	??_Lcd_CharCP,f,c
  2952  001616  90D8               	bcf	status,0,c
  2953  001618  3215               	rrcf	??_Lcd_CharCP,f,c
  2954  00161A  0E01               	movlw	1
  2955  00161C  1615               	andwf	??_Lcd_CharCP,f,c
  2956  00161E  3A15               	swapf	??_Lcd_CharCP,f,c
  2957  001620  4615               	rlncf	??_Lcd_CharCP,f,c
  2958  001622  5083               	movf	3971,w,c	;volatile
  2959  001624  1815               	xorwf	??_Lcd_CharCP,w,c
  2960  001626  0BDF               	andlw	-33
  2961  001628  1815               	xorwf	??_Lcd_CharCP,w,c
  2962  00162A  6E83               	movwf	3971,c	;volatile
  2963  00162C  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2964  001630  90D8               	bcf	status,0,c
  2965  001632  3215               	rrcf	??_Lcd_CharCP,f,c
  2966  001634  90D8               	bcf	status,0,c
  2967  001636  3215               	rrcf	??_Lcd_CharCP,f,c
  2968  001638  0E01               	movlw	1
  2969  00163A  1615               	andwf	??_Lcd_CharCP,f,c
  2970  00163C  3A15               	swapf	??_Lcd_CharCP,f,c
  2971  00163E  5083               	movf	3971,w,c	;volatile
  2972  001640  1815               	xorwf	??_Lcd_CharCP,w,c
  2973  001642  0BEF               	andlw	-17
  2974  001644  1815               	xorwf	??_Lcd_CharCP,w,c
  2975  001646  6E83               	movwf	3971,c	;volatile
  2976                           
  2977                           ;HD44780.c: 123: LATAbits.LA3 = (c & 0b00000010)>>1; LATAbits.LA2 = (c & 0b00000001);
  2978  001648  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2979  00164C  90D8               	bcf	status,0,c
  2980  00164E  3215               	rrcf	??_Lcd_CharCP,f,c
  2981  001650  0E01               	movlw	1
  2982  001652  1615               	andwf	??_Lcd_CharCP,f,c
  2983  001654  4615               	rlncf	??_Lcd_CharCP,f,c
  2984  001656  4615               	rlncf	??_Lcd_CharCP,f,c
  2985  001658  4615               	rlncf	??_Lcd_CharCP,f,c
  2986  00165A  5083               	movf	3971,w,c	;volatile
  2987  00165C  1815               	xorwf	??_Lcd_CharCP,w,c
  2988  00165E  0BF7               	andlw	-9
  2989  001660  1815               	xorwf	??_Lcd_CharCP,w,c
  2990  001662  6E83               	movwf	3971,c	;volatile
  2991  001664  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  2992  001668  0E01               	movlw	1
  2993  00166A  1615               	andwf	??_Lcd_CharCP,f,c
  2994  00166C  4615               	rlncf	??_Lcd_CharCP,f,c
  2995  00166E  4615               	rlncf	??_Lcd_CharCP,f,c
  2996  001670  5083               	movf	3971,w,c	;volatile
  2997  001672  1815               	xorwf	??_Lcd_CharCP,w,c
  2998  001674  0BFB               	andlw	-5
  2999  001676  1815               	xorwf	??_Lcd_CharCP,w,c
  3000  001678  6E83               	movwf	3971,c	;volatile
  3001                           
  3002                           ;HD44780.c: 124: _delay(10);
  3003  00167A  0E03               	movlw	3
  3004  00167C                     u2797:
  3005  00167C  2EE8               	decfsz	wreg,f,c
  3006  00167E  D7FE               	bra	u2797
  3007  001680  F000               	nop	
  3008                           
  3009                           ;HD44780.c: 125: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  3010  001682  8283               	bsf	3971,1,c	;volatile
  3011  001684  ECB0  F00E         	call	_Lcd_Delay5us	;wreg free
  3012  001688  9283               	bcf	3971,1,c	;volatile
  3013                           
  3014                           ;HD44780.c: 126: Lcd_Delay5us();
  3015  00168A  ECB0  F00E         	call	_Lcd_Delay5us	;wreg free
  3016  00168E  0012               	return		;funcret
  3017  001690                     __end_of_Lcd_CharCP:
  3018                           	opt stack 0
  3019                           tblptru	equ	0xFF8
  3020                           tblptrh	equ	0xFF7
  3021                           tblptrl	equ	0xFF6
  3022                           tablat	equ	0xFF5
  3023                           prodh	equ	0xFF4
  3024                           prodl	equ	0xFF3
  3025                           intcon	equ	0xFF2
  3026                           indf0	equ	0xFEF
  3027                           postinc0	equ	0xFEE
  3028                           fsr0h	equ	0xFEA
  3029                           fsr0l	equ	0xFE9
  3030                           wreg	equ	0xFE8
  3031                           postdec1	equ	0xFE5
  3032                           plusw1	equ	0xFE3
  3033                           fsr1h	equ	0xFE2
  3034                           fsr1l	equ	0xFE1
  3035                           indf2	equ	0xFDF
  3036                           postinc2	equ	0xFDE
  3037                           plusw2	equ	0xFDB
  3038                           fsr2h	equ	0xFDA
  3039                           fsr2l	equ	0xFD9
  3040                           status	equ	0xFD8
  3041                           
  3042 ;; *************** function _Lcd_Init *****************
  3043 ;; Defined at:
  3044 ;;		line 17 in file "libs/HD44780.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  data            1   23[COMRAM] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3062 ;;Total ram usage:        1 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    7
  3065 ;; This function calls:
  3066 ;;		_Lcd_Command
  3067 ;;		_Lcd_Delay5500us
  3068 ;;		_Lcd_Delay5us
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text16
  3075  0017A6                     __ptext16:
  3076                           	opt stack 0
  3077  0017A6                     _Lcd_Init:
  3078                           	opt stack 23
  3079                           
  3080                           ;HD44780.c: 23: unsigned char data;
  3081                           ;HD44780.c: 24: TRISAbits.TRISA5 = 0; TRISAbits.TRISA4 = 0; TRISAbits.TRISA3 = 0; TRISAb
      +                          its.TRISA2 = 0; TRISAbits.TRISA1 = 0; TRISAbits.TRISA0 = 0;
  3082                           
  3083                           ;incstack = 0
  3084  0017A6  9A88               	bcf	3976,5,c	;volatile
  3085  0017A8  9888               	bcf	3976,4,c	;volatile
  3086  0017AA  9688               	bcf	3976,3,c	;volatile
  3087  0017AC  9488               	bcf	3976,2,c	;volatile
  3088  0017AE  9288               	bcf	3976,1,c	;volatile
  3089  0017B0  9088               	bcf	3976,0,c	;volatile
  3090                           
  3091                           ;HD44780.c: 25: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 0; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3092  0017B2  9A83               	bcf	3971,5,c	;volatile
  3093  0017B4  9883               	bcf	3971,4,c	;volatile
  3094  0017B6  9683               	bcf	3971,3,c	;volatile
  3095  0017B8  9483               	bcf	3971,2,c	;volatile
  3096  0017BA  9283               	bcf	3971,1,c	;volatile
  3097  0017BC  9083               	bcf	3971,0,c	;volatile
  3098                           
  3099                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  3100  0017BE  EC9A  F00E         	call	_Lcd_Delay5500us	;wreg free
  3101  0017C2  EC9A  F00E         	call	_Lcd_Delay5500us	;wreg free
  3102  0017C6  EC9A  F00E         	call	_Lcd_Delay5500us	;wreg free
  3103                           
  3104                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  3105  0017CA  EC9A  F00E         	call	_Lcd_Delay5500us	;wreg free
  3106  0017CE  EC9A  F00E         	call	_Lcd_Delay5500us	;wreg free
  3107  0017D2  EC9A  F00E         	call	_Lcd_Delay5500us	;wreg free
  3108                           
  3109                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  3110  0017D6  0E01               	movlw	1
  3111  0017D8  6E18               	movwf	Lcd_Init@data,c
  3112  0017DA                     l2877:
  3113  0017DA  0E03               	movlw	3
  3114  0017DC  6418               	cpfsgt	Lcd_Init@data,c
  3115  0017DE  D001               	goto	l126
  3116  0017E0  D018               	goto	l127
  3117  0017E2                     l126:
  3118                           
  3119                           ;HD44780.c: 29: {
  3120                           ;HD44780.c: 30: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3121  0017E2  9A83               	bcf	3971,5,c	;volatile
  3122  0017E4  9883               	bcf	3971,4,c	;volatile
  3123  0017E6  8683               	bsf	3971,3,c	;volatile
  3124  0017E8  8483               	bsf	3971,2,c	;volatile
  3125  0017EA  9283               	bcf	3971,1,c	;volatile
  3126  0017EC  9083               	bcf	3971,0,c	;volatile
  3127                           
  3128                           ;HD44780.c: 31: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 1; LATAbits.LA0 = 0;
  3129  0017EE  9A83               	bcf	3971,5,c	;volatile
  3130  0017F0  9883               	bcf	3971,4,c	;volatile
  3131  0017F2  8683               	bsf	3971,3,c	;volatile
  3132  0017F4  8483               	bsf	3971,2,c	;volatile
  3133  0017F6  8283               	bsf	3971,1,c	;volatile
  3134  0017F8  9083               	bcf	3971,0,c	;volatile
  3135                           
  3136                           ;HD44780.c: 32: Lcd_Delay5us();
  3137  0017FA  ECB0  F00E         	call	_Lcd_Delay5us	;wreg free
  3138                           
  3139                           ;HD44780.c: 33: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3140  0017FE  9A83               	bcf	3971,5,c	;volatile
  3141  001800  9883               	bcf	3971,4,c	;volatile
  3142  001802  8683               	bsf	3971,3,c	;volatile
  3143  001804  8483               	bsf	3971,2,c	;volatile
  3144  001806  9283               	bcf	3971,1,c	;volatile
  3145  001808  9083               	bcf	3971,0,c	;volatile
  3146                           
  3147                           ;HD44780.c: 34: Lcd_Delay5500us();
  3148  00180A  EC9A  F00E         	call	_Lcd_Delay5500us	;wreg free
  3149  00180E  2A18               	incf	Lcd_Init@data,f,c
  3150  001810  D7E4               	goto	l2877
  3151  001812                     l127:
  3152                           
  3153                           ;HD44780.c: 35: }
  3154                           ;HD44780.c: 36: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3155  001812  9A83               	bcf	3971,5,c	;volatile
  3156  001814  9883               	bcf	3971,4,c	;volatile
  3157  001816  8683               	bsf	3971,3,c	;volatile
  3158  001818  9483               	bcf	3971,2,c	;volatile
  3159  00181A  9283               	bcf	3971,1,c	;volatile
  3160  00181C  9083               	bcf	3971,0,c	;volatile
  3161                           
  3162                           ;HD44780.c: 37: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 1; LATAbits.LA0 = 0;
  3163  00181E  9A83               	bcf	3971,5,c	;volatile
  3164  001820  9883               	bcf	3971,4,c	;volatile
  3165  001822  8683               	bsf	3971,3,c	;volatile
  3166  001824  9483               	bcf	3971,2,c	;volatile
  3167  001826  8283               	bsf	3971,1,c	;volatile
  3168  001828  9083               	bcf	3971,0,c	;volatile
  3169                           
  3170                           ;HD44780.c: 38: Lcd_Delay5us();
  3171  00182A  ECB0  F00E         	call	_Lcd_Delay5us	;wreg free
  3172                           
  3173                           ;HD44780.c: 39: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3174  00182E  9A83               	bcf	3971,5,c	;volatile
  3175  001830  9883               	bcf	3971,4,c	;volatile
  3176  001832  8683               	bsf	3971,3,c	;volatile
  3177  001834  9483               	bcf	3971,2,c	;volatile
  3178  001836  9283               	bcf	3971,1,c	;volatile
  3179  001838  9083               	bcf	3971,0,c	;volatile
  3180                           
  3181                           ;HD44780.c: 40: Lcd_Delay5500us();
  3182  00183A  EC9A  F00E         	call	_Lcd_Delay5500us	;wreg free
  3183                           
  3184                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  3185  00183E  0E28               	movlw	40
  3186  001840  6E18               	movwf	Lcd_Init@data,c
  3187  001842  5018               	movf	Lcd_Init@data,w,c
  3188  001844  EC48  F00B         	call	_Lcd_Command
  3189                           
  3190                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  3191  001848  0E10               	movlw	16
  3192  00184A  6E18               	movwf	Lcd_Init@data,c
  3193  00184C  5018               	movf	Lcd_Init@data,w,c
  3194  00184E  EC48  F00B         	call	_Lcd_Command
  3195                           
  3196                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  3197  001852  0E01               	movlw	1
  3198  001854  6E18               	movwf	Lcd_Init@data,c
  3199  001856  5018               	movf	Lcd_Init@data,w,c
  3200  001858  EC48  F00B         	call	_Lcd_Command
  3201                           
  3202                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  3203  00185C  0E0F               	movlw	15
  3204  00185E  6E18               	movwf	Lcd_Init@data,c
  3205  001860  5018               	movf	Lcd_Init@data,w,c
  3206  001862  EC48  F00B         	call	_Lcd_Command
  3207  001866  0012               	return		;funcret
  3208  001868                     __end_of_Lcd_Init:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           intcon	equ	0xFF2
  3217                           indf0	equ	0xFEF
  3218                           postinc0	equ	0xFEE
  3219                           fsr0h	equ	0xFEA
  3220                           fsr0l	equ	0xFE9
  3221                           wreg	equ	0xFE8
  3222                           postdec1	equ	0xFE5
  3223                           plusw1	equ	0xFE3
  3224                           fsr1h	equ	0xFE2
  3225                           fsr1l	equ	0xFE1
  3226                           indf2	equ	0xFDF
  3227                           postinc2	equ	0xFDE
  3228                           plusw2	equ	0xFDB
  3229                           fsr2h	equ	0xFDA
  3230                           fsr2l	equ	0xFD9
  3231                           status	equ	0xFD8
  3232                           
  3233 ;; *************** function _Lcd_Delay5500us *****************
  3234 ;; Defined at:
  3235 ;;		line 153 in file "libs/HD44780.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;Total ram usage:        1 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    5
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_Lcd_Init
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text17
  3264  001D34                     __ptext17:
  3265                           	opt stack 0
  3266  001D34                     _Lcd_Delay5500us:
  3267                           	opt stack 24
  3268                           
  3269                           ;HD44780.c: 154: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  3270                           
  3271                           ;incstack = 0
  3272  001D34  0E1D               	movlw	29
  3273  001D36  6E15               	movwf	??_Lcd_Delay5500us& (0+255),c
  3274  001D38  0E91               	movlw	145
  3275  001D3A                     u2807:
  3276  001D3A  2EE8               	decfsz	wreg,f,c
  3277  001D3C  D7FE               	bra	u2807
  3278  001D3E  2E15               	decfsz	??_Lcd_Delay5500us& (0+255),f,c
  3279  001D40  D7FC               	bra	u2807
  3280  001D42  F000               	nop	
  3281  001D44  0012               	return		;funcret
  3282  001D46                     __end_of_Lcd_Delay5500us:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           prodh	equ	0xFF4
  3289                           prodl	equ	0xFF3
  3290                           intcon	equ	0xFF2
  3291                           indf0	equ	0xFEF
  3292                           postinc0	equ	0xFEE
  3293                           fsr0h	equ	0xFEA
  3294                           fsr0l	equ	0xFE9
  3295                           wreg	equ	0xFE8
  3296                           postdec1	equ	0xFE5
  3297                           plusw1	equ	0xFE3
  3298                           fsr1h	equ	0xFE2
  3299                           fsr1l	equ	0xFE1
  3300                           indf2	equ	0xFDF
  3301                           postinc2	equ	0xFDE
  3302                           plusw2	equ	0xFDB
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _Lcd_Command *****************
  3308 ;; Defined at:
  3309 ;;		line 133 in file "libs/HD44780.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  command         1    wreg     unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  command         1   22[COMRAM] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;Total ram usage:        3 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    6
  3330 ;; This function calls:
  3331 ;;		_Lcd_Delay5us
  3332 ;; This function is called by:
  3333 ;;		_Lcd_Init
  3334 ;;		_Lcd_Text
  3335 ;;		_Lcd_Int
  3336 ;;		_Lcd_ConstText
  3337 ;;		_Lcd_WriteChar
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text18
  3342  001690                     __ptext18:
  3343                           	opt stack 0
  3344  001690                     _Lcd_Command:
  3345                           	opt stack 23
  3346                           
  3347                           ;incstack = 0
  3348                           ;Lcd_Command@command stored from wreg
  3349  001690  6E17               	movwf	Lcd_Command@command,c
  3350                           
  3351                           ;HD44780.c: 134: LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  3352  001692  9283               	bcf	3971,1,c	;volatile
  3353  001694  9083               	bcf	3971,0,c	;volatile
  3354                           
  3355                           ;HD44780.c: 135: LATAbits.LA5 = (command & 0b10000000)>>7; LATAbits.LA4 = (command & 0b0
      +                          1000000)>>6;
  3356  001696  6A15               	clrf	??_Lcd_Command& (0+255),c
  3357  001698  AE17               	btfss	Lcd_Command@command,7,c
  3358  00169A  D001               	bra	u2005
  3359  00169C  2A15               	incf	??_Lcd_Command& (0+255),f,c
  3360  00169E                     u2005:
  3361  00169E  0E01               	movlw	1
  3362  0016A0  1615               	andwf	??_Lcd_Command,f,c
  3363  0016A2  3A15               	swapf	??_Lcd_Command,f,c
  3364  0016A4  4615               	rlncf	??_Lcd_Command,f,c
  3365  0016A6  5083               	movf	3971,w,c	;volatile
  3366  0016A8  1815               	xorwf	??_Lcd_Command,w,c
  3367  0016AA  0BDF               	andlw	-33
  3368  0016AC  1815               	xorwf	??_Lcd_Command,w,c
  3369  0016AE  6E83               	movwf	3971,c	;volatile
  3370  0016B0  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  3371  0016B4  0E06               	movlw	6
  3372  0016B6  6E16               	movwf	(??_Lcd_Command+1)& (0+255),c
  3373  0016B8                     u2015:
  3374  0016B8  90D8               	bcf	status,0,c
  3375  0016BA  3215               	rrcf	??_Lcd_Command,f,c
  3376  0016BC  2E16               	decfsz	(??_Lcd_Command+1)& (0+255),f,c
  3377  0016BE  D7FC               	goto	u2015
  3378  0016C0  0E01               	movlw	1
  3379  0016C2  1615               	andwf	??_Lcd_Command,f,c
  3380  0016C4  3A15               	swapf	??_Lcd_Command,f,c
  3381  0016C6  5083               	movf	3971,w,c	;volatile
  3382  0016C8  1815               	xorwf	??_Lcd_Command,w,c
  3383  0016CA  0BEF               	andlw	-17
  3384  0016CC  1815               	xorwf	??_Lcd_Command,w,c
  3385  0016CE  6E83               	movwf	3971,c	;volatile
  3386                           
  3387                           ;HD44780.c: 136: LATAbits.LA3 = (command & 0b00100000)>>5; LATAbits.LA2 = (command & 0b0
      +                          0010000)>>4;
  3388  0016D0  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  3389  0016D4  0E05               	movlw	5
  3390  0016D6  6E16               	movwf	(??_Lcd_Command+1)& (0+255),c
  3391  0016D8                     u2025:
  3392  0016D8  90D8               	bcf	status,0,c
  3393  0016DA  3215               	rrcf	??_Lcd_Command,f,c
  3394  0016DC  2E16               	decfsz	(??_Lcd_Command+1)& (0+255),f,c
  3395  0016DE  D7FC               	goto	u2025
  3396  0016E0  0E01               	movlw	1
  3397  0016E2  1615               	andwf	??_Lcd_Command,f,c
  3398  0016E4  4615               	rlncf	??_Lcd_Command,f,c
  3399  0016E6  4615               	rlncf	??_Lcd_Command,f,c
  3400  0016E8  4615               	rlncf	??_Lcd_Command,f,c
  3401  0016EA  5083               	movf	3971,w,c	;volatile
  3402  0016EC  1815               	xorwf	??_Lcd_Command,w,c
  3403  0016EE  0BF7               	andlw	-9
  3404  0016F0  1815               	xorwf	??_Lcd_Command,w,c
  3405  0016F2  6E83               	movwf	3971,c	;volatile
  3406  0016F4  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  3407  0016F8  3A15               	swapf	??_Lcd_Command,f,c
  3408  0016FA  0E0F               	movlw	15
  3409  0016FC  1615               	andwf	??_Lcd_Command,f,c
  3410  0016FE  0E01               	movlw	1
  3411  001700  1615               	andwf	??_Lcd_Command,f,c
  3412  001702  4615               	rlncf	??_Lcd_Command,f,c
  3413  001704  4615               	rlncf	??_Lcd_Command,f,c
  3414  001706  5083               	movf	3971,w,c	;volatile
  3415  001708  1815               	xorwf	??_Lcd_Command,w,c
  3416  00170A  0BFB               	andlw	-5
  3417  00170C  1815               	xorwf	??_Lcd_Command,w,c
  3418  00170E  6E83               	movwf	3971,c	;volatile
  3419                           
  3420                           ;HD44780.c: 137: _delay(10);
  3421  001710  0E03               	movlw	3
  3422  001712                     u2817:
  3423  001712  2EE8               	decfsz	wreg,f,c
  3424  001714  D7FE               	bra	u2817
  3425  001716  F000               	nop	
  3426                           
  3427                           ;HD44780.c: 138: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  3428  001718  8283               	bsf	3971,1,c	;volatile
  3429  00171A  ECB0  F00E         	call	_Lcd_Delay5us	;wreg free
  3430  00171E  9283               	bcf	3971,1,c	;volatile
  3431                           
  3432                           ;HD44780.c: 139: LATAbits.LA5 = (command & 0b00001000)>>3; LATAbits.LA4 = (command & 0b0
      +                          0000100)>>2;
  3433  001720  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  3434  001724  90D8               	bcf	status,0,c
  3435  001726  3215               	rrcf	??_Lcd_Command,f,c
  3436  001728  90D8               	bcf	status,0,c
  3437  00172A  3215               	rrcf	??_Lcd_Command,f,c
  3438  00172C  90D8               	bcf	status,0,c
  3439  00172E  3215               	rrcf	??_Lcd_Command,f,c
  3440  001730  0E01               	movlw	1
  3441  001732  1615               	andwf	??_Lcd_Command,f,c
  3442  001734  3A15               	swapf	??_Lcd_Command,f,c
  3443  001736  4615               	rlncf	??_Lcd_Command,f,c
  3444  001738  5083               	movf	3971,w,c	;volatile
  3445  00173A  1815               	xorwf	??_Lcd_Command,w,c
  3446  00173C  0BDF               	andlw	-33
  3447  00173E  1815               	xorwf	??_Lcd_Command,w,c
  3448  001740  6E83               	movwf	3971,c	;volatile
  3449  001742  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  3450  001746  90D8               	bcf	status,0,c
  3451  001748  3215               	rrcf	??_Lcd_Command,f,c
  3452  00174A  90D8               	bcf	status,0,c
  3453  00174C  3215               	rrcf	??_Lcd_Command,f,c
  3454  00174E  0E01               	movlw	1
  3455  001750  1615               	andwf	??_Lcd_Command,f,c
  3456  001752  3A15               	swapf	??_Lcd_Command,f,c
  3457  001754  5083               	movf	3971,w,c	;volatile
  3458  001756  1815               	xorwf	??_Lcd_Command,w,c
  3459  001758  0BEF               	andlw	-17
  3460  00175A  1815               	xorwf	??_Lcd_Command,w,c
  3461  00175C  6E83               	movwf	3971,c	;volatile
  3462                           
  3463                           ;HD44780.c: 140: LATAbits.LA3 = (command & 0b00000010)>>1; LATAbits.LA2 = (command & 0b0
      +                          0000001);
  3464  00175E  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  3465  001762  90D8               	bcf	status,0,c
  3466  001764  3215               	rrcf	??_Lcd_Command,f,c
  3467  001766  0E01               	movlw	1
  3468  001768  1615               	andwf	??_Lcd_Command,f,c
  3469  00176A  4615               	rlncf	??_Lcd_Command,f,c
  3470  00176C  4615               	rlncf	??_Lcd_Command,f,c
  3471  00176E  4615               	rlncf	??_Lcd_Command,f,c
  3472  001770  5083               	movf	3971,w,c	;volatile
  3473  001772  1815               	xorwf	??_Lcd_Command,w,c
  3474  001774  0BF7               	andlw	-9
  3475  001776  1815               	xorwf	??_Lcd_Command,w,c
  3476  001778  6E83               	movwf	3971,c	;volatile
  3477  00177A  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  3478  00177E  0E01               	movlw	1
  3479  001780  1615               	andwf	??_Lcd_Command,f,c
  3480  001782  4615               	rlncf	??_Lcd_Command,f,c
  3481  001784  4615               	rlncf	??_Lcd_Command,f,c
  3482  001786  5083               	movf	3971,w,c	;volatile
  3483  001788  1815               	xorwf	??_Lcd_Command,w,c
  3484  00178A  0BFB               	andlw	-5
  3485  00178C  1815               	xorwf	??_Lcd_Command,w,c
  3486  00178E  6E83               	movwf	3971,c	;volatile
  3487                           
  3488                           ;HD44780.c: 141: _delay(10);
  3489  001790  0E03               	movlw	3
  3490  001792                     u2827:
  3491  001792  2EE8               	decfsz	wreg,f,c
  3492  001794  D7FE               	bra	u2827
  3493  001796  F000               	nop	
  3494                           
  3495                           ;HD44780.c: 142: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  3496  001798  8283               	bsf	3971,1,c	;volatile
  3497  00179A  ECB0  F00E         	call	_Lcd_Delay5us	;wreg free
  3498  00179E  9283               	bcf	3971,1,c	;volatile
  3499                           
  3500                           ;HD44780.c: 144: Lcd_Delay5us();
  3501  0017A0  ECB0  F00E         	call	_Lcd_Delay5us	;wreg free
  3502  0017A4  0012               	return		;funcret
  3503  0017A6                     __end_of_Lcd_Command:
  3504                           	opt stack 0
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           indf0	equ	0xFEF
  3513                           postinc0	equ	0xFEE
  3514                           fsr0h	equ	0xFEA
  3515                           fsr0l	equ	0xFE9
  3516                           wreg	equ	0xFE8
  3517                           postdec1	equ	0xFE5
  3518                           plusw1	equ	0xFE3
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           indf2	equ	0xFDF
  3522                           postinc2	equ	0xFDE
  3523                           plusw2	equ	0xFDB
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _Lcd_Delay5us *****************
  3529 ;; Defined at:
  3530 ;;		line 150 in file "libs/HD44780.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    5
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_Lcd_Init
  3555 ;;		_Lcd_CharCP
  3556 ;;		_Lcd_Command
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text19
  3561  001D60                     __ptext19:
  3562                           	opt stack 0
  3563  001D60                     _Lcd_Delay5us:
  3564                           	opt stack 23
  3565                           
  3566                           ;HD44780.c: 151: _delay((unsigned long)((5)*(16000000/4000000.0)));
  3567                           
  3568                           ;incstack = 0
  3569  001D60  0E06               	movlw	6
  3570  001D62                     u2837:
  3571  001D62  2EE8               	decfsz	wreg,f,c
  3572  001D64  D7FE               	bra	u2837
  3573  001D66  D000               	nop2	
  3574  001D68  0012               	return		;funcret
  3575  001D6A                     __end_of_Lcd_Delay5us:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           indf0	equ	0xFEF
  3585                           postinc0	equ	0xFEE
  3586                           fsr0h	equ	0xFEA
  3587                           fsr0l	equ	0xFE9
  3588                           wreg	equ	0xFE8
  3589                           postdec1	equ	0xFE5
  3590                           plusw1	equ	0xFE3
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           indf2	equ	0xFDF
  3594                           postinc2	equ	0xFDE
  3595                           plusw2	equ	0xFDB
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function _GetDay *****************
  3601 ;; Defined at:
  3602 ;;		line 128 in file "libs/gps.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  Date            2   34[COMRAM] PTR unsigned char 
  3605 ;;		 -> main@Date(7), 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  y               2   46[COMRAM] int 
  3608 ;;  m               1   45[COMRAM] unsigned char 
  3609 ;;  d               1   44[COMRAM] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      char 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;Total ram usage:       14 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    6
  3626 ;; This function calls:
  3627 ;;		___awdiv
  3628 ;;		___awmod
  3629 ;;		___wmul
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text20
  3636  0010A2                     __ptext20:
  3637                           	opt stack 0
  3638  0010A2                     _GetDay:
  3639                           	opt stack 24
  3640                           
  3641                           ;gps.c: 129: UINT8 d = (Date[0]-0x30)*10 + (Date[1]-0x30);
  3642                           
  3643                           ;incstack = 0
  3644  0010A2  EE20 F001          	lfsr	2,1
  3645  0010A6  5023               	movf	GetDay@Date,w,c
  3646  0010A8  26D9               	addwf	fsr2l,f,c
  3647  0010AA  5024               	movf	GetDay@Date+1,w,c
  3648  0010AC  22DA               	addwfc	fsr2h,f,c
  3649  0010AE  50DF               	movf	indf2,w,c
  3650  0010B0  6E25               	movwf	??_GetDay& (0+255),c
  3651  0010B2  C023  FFD9         	movff	GetDay@Date,fsr2l
  3652  0010B6  C024  FFDA         	movff	GetDay@Date+1,fsr2h
  3653  0010BA  50DF               	movf	indf2,w,c
  3654  0010BC  0FD0               	addlw	208
  3655  0010BE  0D0A               	mullw	10
  3656  0010C0  50F3               	movf	prodl,w,c
  3657  0010C2  2425               	addwf	??_GetDay,w,c
  3658  0010C4  0FD0               	addlw	208
  3659  0010C6  6E2D               	movwf	GetDay@d,c
  3660                           
  3661                           ;gps.c: 130: UINT8 m = (Date[2]-0x30)*10 + (Date[3]-0x30);
  3662  0010C8  EE20 F003          	lfsr	2,3
  3663  0010CC  5023               	movf	GetDay@Date,w,c
  3664  0010CE  26D9               	addwf	fsr2l,f,c
  3665  0010D0  5024               	movf	GetDay@Date+1,w,c
  3666  0010D2  22DA               	addwfc	fsr2h,f,c
  3667  0010D4  50DF               	movf	indf2,w,c
  3668  0010D6  6E25               	movwf	??_GetDay& (0+255),c
  3669  0010D8  EE20 F002          	lfsr	2,2
  3670  0010DC  5023               	movf	GetDay@Date,w,c
  3671  0010DE  26D9               	addwf	fsr2l,f,c
  3672  0010E0  5024               	movf	GetDay@Date+1,w,c
  3673  0010E2  22DA               	addwfc	fsr2h,f,c
  3674  0010E4  50DF               	movf	indf2,w,c
  3675  0010E6  0FD0               	addlw	208
  3676  0010E8  0D0A               	mullw	10
  3677  0010EA  50F3               	movf	prodl,w,c
  3678  0010EC  2425               	addwf	??_GetDay,w,c
  3679  0010EE  0FD0               	addlw	208
  3680  0010F0  6E2E               	movwf	GetDay@m,c
  3681                           
  3682                           ;gps.c: 131: INT y = (Date[4]-0x30)*10 + (Date[5]-0x30) + GLOBAL_CENTURY*100;
  3683  0010F2  EE20 F004          	lfsr	2,4
  3684  0010F6  5023               	movf	GetDay@Date,w,c
  3685  0010F8  26D9               	addwf	fsr2l,f,c
  3686  0010FA  5024               	movf	GetDay@Date+1,w,c
  3687  0010FC  22DA               	addwfc	fsr2h,f,c
  3688  0010FE  50DF               	movf	indf2,w,c
  3689  001100  6E25               	movwf	??_GetDay& (0+255),c
  3690  001102  0ED0               	movlw	208
  3691  001104  2425               	addwf	??_GetDay,w,c
  3692  001106  6E15               	movwf	___wmul@multiplier,c
  3693  001108  6A16               	clrf	___wmul@multiplier+1,c
  3694  00110A  0EFF               	movlw	255
  3695  00110C  2216               	addwfc	___wmul@multiplier+1,f,c
  3696  00110E  0E00               	movlw	0
  3697  001110  6E18               	movwf	___wmul@multiplicand+1,c
  3698  001112  0E0A               	movlw	10
  3699  001114  6E17               	movwf	___wmul@multiplicand,c
  3700  001116  EC4D  F00E         	call	___wmul	;wreg free
  3701  00111A  EE20 F005          	lfsr	2,5
  3702  00111E  5023               	movf	GetDay@Date,w,c
  3703  001120  26D9               	addwf	fsr2l,f,c
  3704  001122  5024               	movf	GetDay@Date+1,w,c
  3705  001124  22DA               	addwfc	fsr2h,f,c
  3706  001126  50DF               	movf	indf2,w,c
  3707  001128  6E26               	movwf	(??_GetDay+1)& (0+255),c
  3708  00112A  6A27               	clrf	(??_GetDay+2)& (0+255),c
  3709  00112C  5015               	movf	?___wmul,w,c
  3710  00112E  2626               	addwf	??_GetDay+1,f,c
  3711  001130  5016               	movf	?___wmul+1,w,c
  3712  001132  2227               	addwfc	??_GetDay+2,f,c
  3713  001134  503F               	movf	_GLOBAL_CENTURY,w,c
  3714  001136  0D64               	mullw	100
  3715  001138  50F3               	movf	prodl,w,c
  3716  00113A  2626               	addwf	??_GetDay+1,f,c
  3717  00113C  50F4               	movf	prodh,w,c
  3718  00113E  2227               	addwfc	??_GetDay+2,f,c
  3719  001140  0ED0               	movlw	208
  3720  001142  2426               	addwf	??_GetDay+1,w,c
  3721  001144  6E2F               	movwf	GetDay@y,c
  3722  001146  0EFF               	movlw	255
  3723  001148  2027               	addwfc	??_GetDay+2,w,c
  3724  00114A  6E30               	movwf	GetDay@y+1,c
  3725                           
  3726                           ;gps.c: 132: static int t[] = { 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 };
  3727                           ;gps.c: 133: y -= m < 3;
  3728  00114C  0E02               	movlw	2
  3729  00114E  642E               	cpfsgt	GetDay@m,c
  3730  001150  D001               	goto	u2321
  3731  001152  D002               	goto	u2320
  3732  001154                     u2321:
  3733  001154  0E01               	movlw	1
  3734  001156  D001               	goto	u2330
  3735  001158                     u2320:
  3736  001158  0E00               	movlw	0
  3737  00115A                     u2330:
  3738  00115A  5E2F               	subwf	GetDay@y,f,c
  3739  00115C  0E00               	movlw	0
  3740  00115E  5A30               	subwfb	GetDay@y+1,f,c
  3741                           
  3742                           ;gps.c: 134: return ( y + y/4 - y/100 + y/400 + t[m-1] + d) % 7;
  3743  001160  0EFE               	movlw	254
  3744  001162  6E25               	movwf	??_GetDay& (0+255),c
  3745  001164  0EFF               	movlw	255
  3746  001166  6E26               	movwf	(??_GetDay+1)& (0+255),c
  3747  001168  502E               	movf	GetDay@m,w,c
  3748  00116A  6E27               	movwf	(??_GetDay+2)& (0+255),c
  3749  00116C  6A28               	clrf	(??_GetDay+3)& (0+255),c
  3750  00116E  90D8               	bcf	status,0,c
  3751  001170  3627               	rlcf	??_GetDay+2,f,c
  3752  001172  3628               	rlcf	??_GetDay+3,f,c
  3753  001174  5025               	movf	??_GetDay,w,c
  3754  001176  2627               	addwf	??_GetDay+2,f,c
  3755  001178  5026               	movf	??_GetDay+1,w,c
  3756  00117A  2228               	addwfc	??_GetDay+3,f,c
  3757  00117C  0EA4               	movlw	low GetDay@t
  3758  00117E  2427               	addwf	??_GetDay+2,w,c
  3759  001180  6ED9               	movwf	fsr2l,c
  3760  001182  0E00               	movlw	high GetDay@t
  3761  001184  2028               	addwfc	??_GetDay+3,w,c
  3762  001186  6EDA               	movwf	fsr2h,c
  3763  001188  CFDE F029          	movff	postinc2,??_GetDay+4
  3764  00118C  CFDD F02A          	movff	postdec2,??_GetDay+5
  3765  001190  0E00               	movlw	0
  3766  001192  6E18               	movwf	___awdiv@divisor+1,c
  3767  001194  0E04               	movlw	4
  3768  001196  6E17               	movwf	___awdiv@divisor,c
  3769  001198  C02F  F015         	movff	GetDay@y,___awdiv@dividend
  3770  00119C  C030  F016         	movff	GetDay@y+1,___awdiv@dividend+1
  3771  0011A0  ECCC  F00C         	call	___awdiv	;wreg free
  3772  0011A4  C015  F02B         	movff	?___awdiv,??_GetDay+6
  3773  0011A8  C016  F02C         	movff	?___awdiv+1,??_GetDay+7
  3774  0011AC  0E01               	movlw	1
  3775  0011AE  6E18               	movwf	___awdiv@divisor+1,c
  3776  0011B0  0E90               	movlw	144
  3777  0011B2  6E17               	movwf	___awdiv@divisor,c
  3778  0011B4  C02F  F015         	movff	GetDay@y,___awdiv@dividend
  3779  0011B8  C030  F016         	movff	GetDay@y+1,___awdiv@dividend+1
  3780  0011BC  ECCC  F00C         	call	___awdiv	;wreg free
  3781  0011C0  5015               	movf	?___awdiv,w,c
  3782  0011C2  262B               	addwf	??_GetDay+6,f,c
  3783  0011C4  5016               	movf	?___awdiv+1,w,c
  3784  0011C6  222C               	addwfc	??_GetDay+7,f,c
  3785  0011C8  502D               	movf	GetDay@d,w,c
  3786  0011CA  262B               	addwf	??_GetDay+6,f,c
  3787  0011CC  0E00               	movlw	0
  3788  0011CE  222C               	addwfc	??_GetDay+7,f,c
  3789  0011D0  0E00               	movlw	0
  3790  0011D2  6E18               	movwf	___awdiv@divisor+1,c
  3791  0011D4  0E64               	movlw	100
  3792  0011D6  6E17               	movwf	___awdiv@divisor,c
  3793  0011D8  C02F  F015         	movff	GetDay@y,___awdiv@dividend
  3794  0011DC  C030  F016         	movff	GetDay@y+1,___awdiv@dividend+1
  3795  0011E0  ECCC  F00C         	call	___awdiv	;wreg free
  3796  0011E4  1E15               	comf	?___awdiv,f,c
  3797  0011E6  1E16               	comf	?___awdiv+1,f,c
  3798  0011E8  4A15               	infsnz	?___awdiv,f,c
  3799  0011EA  2A16               	incf	?___awdiv+1,f,c
  3800  0011EC  5015               	movf	?___awdiv,w,c
  3801  0011EE  262B               	addwf	??_GetDay+6,f,c
  3802  0011F0  5016               	movf	?___awdiv+1,w,c
  3803  0011F2  222C               	addwfc	??_GetDay+7,f,c
  3804  0011F4  5029               	movf	??_GetDay+4,w,c
  3805  0011F6  262B               	addwf	??_GetDay+6,f,c
  3806  0011F8  502A               	movf	??_GetDay+5,w,c
  3807  0011FA  222C               	addwfc	??_GetDay+7,f,c
  3808  0011FC  502F               	movf	GetDay@y,w,c
  3809  0011FE  242B               	addwf	??_GetDay+6,w,c
  3810  001200  6E1D               	movwf	___awmod@dividend,c
  3811  001202  5030               	movf	GetDay@y+1,w,c
  3812  001204  202C               	addwfc	??_GetDay+7,w,c
  3813  001206  6E1E               	movwf	___awmod@dividend+1,c
  3814  001208  0E00               	movlw	0
  3815  00120A  6E20               	movwf	___awmod@divisor+1,c
  3816  00120C  0E07               	movlw	7
  3817  00120E  6E1F               	movwf	___awmod@divisor,c
  3818  001210  EC4F  F00D         	call	___awmod	;wreg free
  3819  001214  501D               	movf	?___awmod,w,c
  3820  001216  0012               	return	
  3821  001218                     __end_of_GetDay:
  3822                           	opt stack 0
  3823                           tblptru	equ	0xFF8
  3824                           tblptrh	equ	0xFF7
  3825                           tblptrl	equ	0xFF6
  3826                           tablat	equ	0xFF5
  3827                           prodh	equ	0xFF4
  3828                           prodl	equ	0xFF3
  3829                           intcon	equ	0xFF2
  3830                           indf0	equ	0xFEF
  3831                           postinc0	equ	0xFEE
  3832                           fsr0h	equ	0xFEA
  3833                           fsr0l	equ	0xFE9
  3834                           wreg	equ	0xFE8
  3835                           postdec1	equ	0xFE5
  3836                           plusw1	equ	0xFE3
  3837                           fsr1h	equ	0xFE2
  3838                           fsr1l	equ	0xFE1
  3839                           indf2	equ	0xFDF
  3840                           postinc2	equ	0xFDE
  3841                           postdec2	equ	0xFDD
  3842                           plusw2	equ	0xFDB
  3843                           fsr2h	equ	0xFDA
  3844                           fsr2l	equ	0xFD9
  3845                           status	equ	0xFD8
  3846                           
  3847 ;; *************** function ___wmul *****************
  3848 ;; Defined at:
  3849 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  multiplier      2   20[COMRAM] unsigned int 
  3852 ;;  multiplicand    2   22[COMRAM] unsigned int 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  product         2   24[COMRAM] unsigned int 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  2   20[COMRAM] unsigned int 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, prodl, prodh
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3867 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3868 ;;Total ram usage:        6 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    5
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_GetDay
  3875 ;;		_Lcd_Int
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text21
  3880  001C9A                     __ptext21:
  3881                           	opt stack 0
  3882  001C9A                     ___wmul:
  3883                           	opt stack 24
  3884                           
  3885                           ;incstack = 0
  3886  001C9A  5015               	movf	___wmul@multiplier,w,c
  3887  001C9C  0217               	mulwf	___wmul@multiplicand,c
  3888  001C9E  CFF3 F019          	movff	prodl,___wmul@product
  3889  001CA2  CFF4 F01A          	movff	prodh,___wmul@product+1
  3890  001CA6  5015               	movf	___wmul@multiplier,w,c
  3891  001CA8  0218               	mulwf	___wmul@multiplicand+1,c
  3892  001CAA  50F3               	movf	prodl,w,c
  3893  001CAC  261A               	addwf	___wmul@product+1,f,c
  3894  001CAE  5016               	movf	___wmul@multiplier+1,w,c
  3895  001CB0  0217               	mulwf	___wmul@multiplicand,c
  3896  001CB2  50F3               	movf	prodl,w,c
  3897  001CB4  261A               	addwf	___wmul@product+1,f,c
  3898  001CB6  C019  F015         	movff	___wmul@product,?___wmul
  3899  001CBA  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  3900  001CBE  0012               	return	
  3901  001CC0                     __end_of___wmul:
  3902                           	opt stack 0
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           intcon	equ	0xFF2
  3910                           indf0	equ	0xFEF
  3911                           postinc0	equ	0xFEE
  3912                           fsr0h	equ	0xFEA
  3913                           fsr0l	equ	0xFE9
  3914                           wreg	equ	0xFE8
  3915                           postdec1	equ	0xFE5
  3916                           plusw1	equ	0xFE3
  3917                           fsr1h	equ	0xFE2
  3918                           fsr1l	equ	0xFE1
  3919                           indf2	equ	0xFDF
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           plusw2	equ	0xFDB
  3923                           fsr2h	equ	0xFDA
  3924                           fsr2l	equ	0xFD9
  3925                           status	equ	0xFD8
  3926                           
  3927 ;; *************** function ___awmod *****************
  3928 ;; Defined at:
  3929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  dividend        2   28[COMRAM] int 
  3932 ;;  divisor         2   30[COMRAM] int 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  sign            1   33[COMRAM] unsigned char 
  3935 ;;  counter         1   32[COMRAM] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  2   28[COMRAM] int 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;Total ram usage:        6 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    5
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_GetDay
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text22
  3960  001A9E                     __ptext22:
  3961                           	opt stack 0
  3962  001A9E                     ___awmod:
  3963                           	opt stack 24
  3964                           
  3965                           ;incstack = 0
  3966  001A9E  0E00               	movlw	0
  3967  001AA0  6E22               	movwf	___awmod@sign,c
  3968  001AA2  AE1E               	btfss	___awmod@dividend+1,7,c
  3969  001AA4  D006               	goto	l2697
  3970  001AA6  6C1D               	negf	___awmod@dividend,c
  3971  001AA8  1E1E               	comf	___awmod@dividend+1,f,c
  3972  001AAA  B0D8               	btfsc	status,0,c
  3973  001AAC  2A1E               	incf	___awmod@dividend+1,f,c
  3974  001AAE  0E01               	movlw	1
  3975  001AB0  6E22               	movwf	___awmod@sign,c
  3976  001AB2                     l2697:
  3977  001AB2  AE20               	btfss	___awmod@divisor+1,7,c
  3978  001AB4  D004               	goto	l2701
  3979  001AB6  6C1F               	negf	___awmod@divisor,c
  3980  001AB8  1E20               	comf	___awmod@divisor+1,f,c
  3981  001ABA  B0D8               	btfsc	status,0,c
  3982  001ABC  2A20               	incf	___awmod@divisor+1,f,c
  3983  001ABE                     l2701:
  3984  001ABE  501F               	movf	___awmod@divisor,w,c
  3985  001AC0  1020               	iorwf	___awmod@divisor+1,w,c
  3986  001AC2  B4D8               	btfsc	status,2,c
  3987  001AC4  D018               	goto	l2717
  3988  001AC6  0E01               	movlw	1
  3989  001AC8  6E21               	movwf	___awmod@counter,c
  3990  001ACA  D004               	goto	l2707
  3991  001ACC                     l2705:
  3992  001ACC  90D8               	bcf	status,0,c
  3993  001ACE  361F               	rlcf	___awmod@divisor,f,c
  3994  001AD0  3620               	rlcf	___awmod@divisor+1,f,c
  3995  001AD2  2A21               	incf	___awmod@counter,f,c
  3996  001AD4                     l2707:
  3997  001AD4  AE20               	btfss	___awmod@divisor+1,7,c
  3998  001AD6  D7FA               	goto	l2705
  3999  001AD8                     l2709:
  4000  001AD8  501F               	movf	___awmod@divisor,w,c
  4001  001ADA  5C1D               	subwf	___awmod@dividend,w,c
  4002  001ADC  5020               	movf	___awmod@divisor+1,w,c
  4003  001ADE  581E               	subwfb	___awmod@dividend+1,w,c
  4004  001AE0  A0D8               	btfss	status,0,c
  4005  001AE2  D004               	goto	l2713
  4006  001AE4  501F               	movf	___awmod@divisor,w,c
  4007  001AE6  5E1D               	subwf	___awmod@dividend,f,c
  4008  001AE8  5020               	movf	___awmod@divisor+1,w,c
  4009  001AEA  5A1E               	subwfb	___awmod@dividend+1,f,c
  4010  001AEC                     l2713:
  4011  001AEC  90D8               	bcf	status,0,c
  4012  001AEE  3220               	rrcf	___awmod@divisor+1,f,c
  4013  001AF0  321F               	rrcf	___awmod@divisor,f,c
  4014  001AF2  2E21               	decfsz	___awmod@counter,f,c
  4015  001AF4  D7F1               	goto	l2709
  4016  001AF6                     l2717:
  4017  001AF6  5022               	movf	___awmod@sign,w,c
  4018  001AF8  B4D8               	btfsc	status,2,c
  4019  001AFA  D004               	goto	l2721
  4020  001AFC  6C1D               	negf	___awmod@dividend,c
  4021  001AFE  1E1E               	comf	___awmod@dividend+1,f,c
  4022  001B00  B0D8               	btfsc	status,0,c
  4023  001B02  2A1E               	incf	___awmod@dividend+1,f,c
  4024  001B04                     l2721:
  4025  001B04  C01D  F01D         	movff	___awmod@dividend,?___awmod
  4026  001B08  C01E  F01E         	movff	___awmod@dividend+1,?___awmod+1
  4027  001B0C  0012               	return	
  4028  001B0E                     __end_of___awmod:
  4029                           	opt stack 0
  4030                           tblptru	equ	0xFF8
  4031                           tblptrh	equ	0xFF7
  4032                           tblptrl	equ	0xFF6
  4033                           tablat	equ	0xFF5
  4034                           prodh	equ	0xFF4
  4035                           prodl	equ	0xFF3
  4036                           intcon	equ	0xFF2
  4037                           indf0	equ	0xFEF
  4038                           postinc0	equ	0xFEE
  4039                           fsr0h	equ	0xFEA
  4040                           fsr0l	equ	0xFE9
  4041                           wreg	equ	0xFE8
  4042                           postdec1	equ	0xFE5
  4043                           plusw1	equ	0xFE3
  4044                           fsr1h	equ	0xFE2
  4045                           fsr1l	equ	0xFE1
  4046                           indf2	equ	0xFDF
  4047                           postinc2	equ	0xFDE
  4048                           postdec2	equ	0xFDD
  4049                           plusw2	equ	0xFDB
  4050                           fsr2h	equ	0xFDA
  4051                           fsr2l	equ	0xFD9
  4052                           status	equ	0xFD8
  4053                           
  4054 ;; *************** function ___awdiv *****************
  4055 ;; Defined at:
  4056 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  dividend        2   20[COMRAM] int 
  4059 ;;  divisor         2   22[COMRAM] int 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  quotient        2   26[COMRAM] int 
  4062 ;;  sign            1   25[COMRAM] unsigned char 
  4063 ;;  counter         1   24[COMRAM] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2   20[COMRAM] int 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;Total ram usage:        8 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    5
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_GetDay
  4084 ;;		_Lcd_Int
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text23
  4089  001998                     __ptext23:
  4090                           	opt stack 0
  4091  001998                     ___awdiv:
  4092                           	opt stack 24
  4093                           
  4094                           ;incstack = 0
  4095  001998  0E00               	movlw	0
  4096  00199A  6E1A               	movwf	___awdiv@sign,c
  4097  00199C  AE18               	btfss	___awdiv@divisor+1,7,c
  4098  00199E  D006               	goto	l2653
  4099  0019A0  6C17               	negf	___awdiv@divisor,c
  4100  0019A2  1E18               	comf	___awdiv@divisor+1,f,c
  4101  0019A4  B0D8               	btfsc	status,0,c
  4102  0019A6  2A18               	incf	___awdiv@divisor+1,f,c
  4103  0019A8  0E01               	movlw	1
  4104  0019AA  6E1A               	movwf	___awdiv@sign,c
  4105  0019AC                     l2653:
  4106  0019AC  AE16               	btfss	___awdiv@dividend+1,7,c
  4107  0019AE  D006               	goto	l2659
  4108  0019B0  6C15               	negf	___awdiv@dividend,c
  4109  0019B2  1E16               	comf	___awdiv@dividend+1,f,c
  4110  0019B4  B0D8               	btfsc	status,0,c
  4111  0019B6  2A16               	incf	___awdiv@dividend+1,f,c
  4112  0019B8  0E01               	movlw	1
  4113  0019BA  1A1A               	xorwf	___awdiv@sign,f,c
  4114  0019BC                     l2659:
  4115  0019BC  0E00               	movlw	0
  4116  0019BE  6E1C               	movwf	___awdiv@quotient+1,c
  4117  0019C0  0E00               	movlw	0
  4118  0019C2  6E1B               	movwf	___awdiv@quotient,c
  4119  0019C4  5017               	movf	___awdiv@divisor,w,c
  4120  0019C6  1018               	iorwf	___awdiv@divisor+1,w,c
  4121  0019C8  B4D8               	btfsc	status,2,c
  4122  0019CA  D01C               	goto	l2681
  4123  0019CC  0E01               	movlw	1
  4124  0019CE  6E19               	movwf	___awdiv@counter,c
  4125  0019D0  D004               	goto	l2667
  4126  0019D2                     l2665:
  4127  0019D2  90D8               	bcf	status,0,c
  4128  0019D4  3617               	rlcf	___awdiv@divisor,f,c
  4129  0019D6  3618               	rlcf	___awdiv@divisor+1,f,c
  4130  0019D8  2A19               	incf	___awdiv@counter,f,c
  4131  0019DA                     l2667:
  4132  0019DA  AE18               	btfss	___awdiv@divisor+1,7,c
  4133  0019DC  D7FA               	goto	l2665
  4134  0019DE                     l2669:
  4135  0019DE  90D8               	bcf	status,0,c
  4136  0019E0  361B               	rlcf	___awdiv@quotient,f,c
  4137  0019E2  361C               	rlcf	___awdiv@quotient+1,f,c
  4138  0019E4  5017               	movf	___awdiv@divisor,w,c
  4139  0019E6  5C15               	subwf	___awdiv@dividend,w,c
  4140  0019E8  5018               	movf	___awdiv@divisor+1,w,c
  4141  0019EA  5816               	subwfb	___awdiv@dividend+1,w,c
  4142  0019EC  A0D8               	btfss	status,0,c
  4143  0019EE  D005               	goto	l2677
  4144  0019F0  5017               	movf	___awdiv@divisor,w,c
  4145  0019F2  5E15               	subwf	___awdiv@dividend,f,c
  4146  0019F4  5018               	movf	___awdiv@divisor+1,w,c
  4147  0019F6  5A16               	subwfb	___awdiv@dividend+1,f,c
  4148  0019F8  801B               	bsf	___awdiv@quotient,0,c
  4149  0019FA                     l2677:
  4150  0019FA  90D8               	bcf	status,0,c
  4151  0019FC  3218               	rrcf	___awdiv@divisor+1,f,c
  4152  0019FE  3217               	rrcf	___awdiv@divisor,f,c
  4153  001A00  2E19               	decfsz	___awdiv@counter,f,c
  4154  001A02  D7ED               	goto	l2669
  4155  001A04                     l2681:
  4156  001A04  501A               	movf	___awdiv@sign,w,c
  4157  001A06  B4D8               	btfsc	status,2,c
  4158  001A08  D004               	goto	l2685
  4159  001A0A  6C1B               	negf	___awdiv@quotient,c
  4160  001A0C  1E1C               	comf	___awdiv@quotient+1,f,c
  4161  001A0E  B0D8               	btfsc	status,0,c
  4162  001A10  2A1C               	incf	___awdiv@quotient+1,f,c
  4163  001A12                     l2685:
  4164  001A12  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  4165  001A16  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  4166  001A1A  0012               	return	
  4167  001A1C                     __end_of___awdiv:
  4168                           	opt stack 0
  4169                           tblptru	equ	0xFF8
  4170                           tblptrh	equ	0xFF7
  4171                           tblptrl	equ	0xFF6
  4172                           tablat	equ	0xFF5
  4173                           prodh	equ	0xFF4
  4174                           prodl	equ	0xFF3
  4175                           intcon	equ	0xFF2
  4176                           indf0	equ	0xFEF
  4177                           postinc0	equ	0xFEE
  4178                           fsr0h	equ	0xFEA
  4179                           fsr0l	equ	0xFE9
  4180                           wreg	equ	0xFE8
  4181                           postdec1	equ	0xFE5
  4182                           plusw1	equ	0xFE3
  4183                           fsr1h	equ	0xFE2
  4184                           fsr1l	equ	0xFE1
  4185                           indf2	equ	0xFDF
  4186                           postinc2	equ	0xFDE
  4187                           postdec2	equ	0xFDD
  4188                           plusw2	equ	0xFDB
  4189                           fsr2h	equ	0xFDA
  4190                           fsr2l	equ	0xFD9
  4191                           status	equ	0xFD8
  4192                           
  4193 ;; *************** function _INTERRUPT_InterruptManager *****************
  4194 ;; Defined at:
  4195 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;Total ram usage:       14 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    4
  4216 ;; This function calls:
  4217 ;;		_TMR0_ISR
  4218 ;; This function is called by:
  4219 ;;		Interrupt level 2
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	intcode
  4224  000008                     __pintcode:
  4225                           	opt stack 0
  4226  000008                     _INTERRUPT_InterruptManager:
  4227                           	opt stack 23
  4228                           
  4229                           ;incstack = 0
  4230  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4231  00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  4232  00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4233  000012  CFE9 F009          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4234  000016  CFEA F00A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4235  00001A  CFE1 F00B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4236  00001E  CFE2 F00C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4237  000022  CFD9 F00D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4238  000026  CFDA F00E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4239  00002A  CFF3 F00F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4240  00002E  CFF4 F010          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4241  000032  CFF6 F011          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4242  000036  CFF7 F012          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4243  00003A  CFF8 F013          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4244  00003E  CFF5 F014          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4245                           
  4246                           ;interrupt_manager.c: 60: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  4247  000042  010E               	movlb	14	; () banked
  4248  000044  ABC2               	btfss	194,5,b	;volatile
  4249  000046  D004               	goto	i2l257
  4250                           
  4251                           ; BSR set to: 14
  4252  000048  010E               	movlb	14	; () banked
  4253  00004A  BBCA               	btfsc	202,5,b	;volatile
  4254                           
  4255                           ; BSR set to: 14
  4256                           ;interrupt_manager.c: 61: {
  4257                           ;interrupt_manager.c: 62: TMR0_ISR();
  4258  00004C  EC25  F00E         	call	_TMR0_ISR	;wreg free
  4259  000050                     i2l257:
  4260  000050  C014  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4261  000054  C013  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4262  000058  C012  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4263  00005C  C011  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4264  000060  C010  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4265  000064  C00F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4266  000068  C00E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4267  00006C  C00D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4268  000070  C00C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4269  000074  C00B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4270  000078  C00A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4271  00007C  C009  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4272  000080  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4273  000084  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4274  000088  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4275  00008A  0011               	retfie		f
  4276  00008C                     __end_of_INTERRUPT_InterruptManager:
  4277                           	opt stack 0
  4278                           pclatu	equ	0xFFB
  4279                           pclath	equ	0xFFA
  4280                           tblptru	equ	0xFF8
  4281                           tblptrh	equ	0xFF7
  4282                           tblptrl	equ	0xFF6
  4283                           tablat	equ	0xFF5
  4284                           prodh	equ	0xFF4
  4285                           prodl	equ	0xFF3
  4286                           intcon	equ	0xFF2
  4287                           indf0	equ	0xFEF
  4288                           postinc0	equ	0xFEE
  4289                           fsr0h	equ	0xFEA
  4290                           fsr0l	equ	0xFE9
  4291                           wreg	equ	0xFE8
  4292                           postdec1	equ	0xFE5
  4293                           plusw1	equ	0xFE3
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           indf2	equ	0xFDF
  4297                           postinc2	equ	0xFDE
  4298                           postdec2	equ	0xFDD
  4299                           plusw2	equ	0xFDB
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _TMR0_ISR *****************
  4305 ;; Defined at:
  4306 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    3
  4327 ;; This function calls:
  4328 ;;		_TMR0_CallBack
  4329 ;; This function is called by:
  4330 ;;		_INTERRUPT_InterruptManager
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text25
  4335  001C4A                     __ptext25:
  4336                           	opt stack 0
  4337  001C4A                     _TMR0_ISR:
  4338                           	opt stack 23
  4339                           
  4340                           ;tmr0.c: 138: static volatile uint16_t CountCallBack = 0;
  4341                           ;tmr0.c: 141: PIR0bits.TMR0IF = 0;
  4342                           
  4343                           ;incstack = 0
  4344  001C4A  010E               	movlb	14	; () banked
  4345  001C4C  9BCA               	bcf	202,5,b	;volatile
  4346                           
  4347                           ; BSR set to: 14
  4348                           ;tmr0.c: 143: TMR0H = timer0ReloadVal16bit >> 8;
  4349  001C4E  5045               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  4350  001C50  6ED4               	movwf	4052,c	;volatile
  4351                           
  4352                           ; BSR set to: 14
  4353                           ;tmr0.c: 144: TMR0L = (uint8_t) timer0ReloadVal16bit;
  4354  001C52  C044  FFD3         	movff	_timer0ReloadVal16bit,4051	;volatile
  4355                           
  4356                           ; BSR set to: 14
  4357                           ;tmr0.c: 147: if (++CountCallBack >= 10)
  4358  001C56  4A40               	infsnz	TMR0_ISR@CountCallBack,f,c	;volatile
  4359  001C58  2A41               	incf	TMR0_ISR@CountCallBack+1,f,c	;volatile
  4360  001C5A  5041               	movf	TMR0_ISR@CountCallBack+1,w,c	;volatile
  4361  001C5C  E104               	bnz	i2u171_40
  4362  001C5E  0E0A               	movlw	10
  4363  001C60  5C40               	subwf	TMR0_ISR@CountCallBack,w,c	;volatile
  4364  001C62  A0D8               	btfss	status,0,c
  4365  001C64  0012               	return	
  4366  001C66                     i2u171_40:
  4367                           
  4368                           ; BSR set to: 14
  4369                           ;tmr0.c: 148: {
  4370                           ;tmr0.c: 150: TMR0_CallBack();
  4371  001C66  EC60  F00E         	call	_TMR0_CallBack	;wreg free
  4372                           
  4373                           ;tmr0.c: 153: CountCallBack = 0;
  4374  001C6A  0E00               	movlw	0
  4375  001C6C  6E41               	movwf	TMR0_ISR@CountCallBack+1,c	;volatile
  4376  001C6E  0E00               	movlw	0
  4377  001C70  6E40               	movwf	TMR0_ISR@CountCallBack,c	;volatile
  4378  001C72  0012               	return	
  4379  001C74                     __end_of_TMR0_ISR:
  4380                           	opt stack 0
  4381                           pclatu	equ	0xFFB
  4382                           pclath	equ	0xFFA
  4383                           tblptru	equ	0xFF8
  4384                           tblptrh	equ	0xFF7
  4385                           tblptrl	equ	0xFF6
  4386                           tablat	equ	0xFF5
  4387                           prodh	equ	0xFF4
  4388                           prodl	equ	0xFF3
  4389                           intcon	equ	0xFF2
  4390                           indf0	equ	0xFEF
  4391                           postinc0	equ	0xFEE
  4392                           fsr0h	equ	0xFEA
  4393                           fsr0l	equ	0xFE9
  4394                           wreg	equ	0xFE8
  4395                           postdec1	equ	0xFE5
  4396                           plusw1	equ	0xFE3
  4397                           fsr1h	equ	0xFE2
  4398                           fsr1l	equ	0xFE1
  4399                           indf2	equ	0xFDF
  4400                           postinc2	equ	0xFDE
  4401                           postdec2	equ	0xFDD
  4402                           plusw2	equ	0xFDB
  4403                           fsr2h	equ	0xFDA
  4404                           fsr2l	equ	0xFD9
  4405                           status	equ	0xFD8
  4406                           
  4407 ;; *************** function _TMR0_CallBack *****************
  4408 ;; Defined at:
  4409 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    2
  4430 ;; This function calls:
  4431 ;;		Absolute function
  4432 ;;		_TMR0_DefaultInterruptHandler
  4433 ;;		_Timer0_10ms
  4434 ;; This function is called by:
  4435 ;;		_TMR0_ISR
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text26
  4440  001CC0                     __ptext26:
  4441                           	opt stack 0
  4442  001CC0                     _TMR0_CallBack:
  4443                           	opt stack 23
  4444                           
  4445                           ;tmr0.c: 163: if(TMR0_InterruptHandler)
  4446                           
  4447                           ;incstack = 0
  4448  001CC0  5042               	movf	_TMR0_InterruptHandler,w,c
  4449  001CC2  1043               	iorwf	_TMR0_InterruptHandler+1,w,c
  4450  001CC4  B4D8               	btfsc	status,2,c
  4451  001CC6  0012               	return	
  4452                           
  4453                           ;tmr0.c: 164: {
  4454                           ;tmr0.c: 165: TMR0_InterruptHandler();
  4455  001CC8  D801               	call	i2u120_48
  4456  001CCA  0012               	return	
  4457  001CCC                     i2u120_48:
  4458  001CCC  0005               	push	
  4459  001CCE  6EFA               	movwf	pclath,c
  4460  001CD0  5042               	movf	_TMR0_InterruptHandler,w,c
  4461  001CD2  6EFD               	movwf	tosl,c
  4462  001CD4  5043               	movf	_TMR0_InterruptHandler+1,w,c
  4463  001CD6  6EFE               	movwf	tosh,c
  4464  001CD8  6AFF               	clrf	tosu,c
  4465  001CDA  50FA               	movf	pclath,w,c
  4466  001CDC  0012               	return		;indir
  4467  001CDE                     __end_of_TMR0_CallBack:
  4468                           	opt stack 0
  4469                           tosu	equ	0xFFF
  4470                           tosh	equ	0xFFE
  4471                           tosl	equ	0xFFD
  4472                           pclatu	equ	0xFFB
  4473                           pclath	equ	0xFFA
  4474                           tblptru	equ	0xFF8
  4475                           tblptrh	equ	0xFF7
  4476                           tblptrl	equ	0xFF6
  4477                           tablat	equ	0xFF5
  4478                           prodh	equ	0xFF4
  4479                           prodl	equ	0xFF3
  4480                           intcon	equ	0xFF2
  4481                           indf0	equ	0xFEF
  4482                           postinc0	equ	0xFEE
  4483                           fsr0h	equ	0xFEA
  4484                           fsr0l	equ	0xFE9
  4485                           wreg	equ	0xFE8
  4486                           postdec1	equ	0xFE5
  4487                           plusw1	equ	0xFE3
  4488                           fsr1h	equ	0xFE2
  4489                           fsr1l	equ	0xFE1
  4490                           indf2	equ	0xFDF
  4491                           postinc2	equ	0xFDE
  4492                           postdec2	equ	0xFDD
  4493                           plusw2	equ	0xFDB
  4494                           fsr2h	equ	0xFDA
  4495                           fsr2l	equ	0xFD9
  4496                           status	equ	0xFD8
  4497                           
  4498 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4499 ;; Defined at:
  4500 ;;		line 173 in file "mcc_generated_files/tmr0.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;		None
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  1    wreg      void 
  4507 ;; Registers used:
  4508 ;;		None
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4518 ;;Total ram usage:        0 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_TMR0_Initialize
  4524 ;;		_TMR0_CallBack
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text27
  4529  001D72                     __ptext27:
  4530                           	opt stack 0
  4531  001D72                     _TMR0_DefaultInterruptHandler:
  4532                           	opt stack 24
  4533                           
  4534                           ;incstack = 0
  4535  001D72  0012               	return		;funcret
  4536  001D74                     __end_of_TMR0_DefaultInterruptHandler:
  4537                           	opt stack 0
  4538                           tosu	equ	0xFFF
  4539                           tosh	equ	0xFFE
  4540                           tosl	equ	0xFFD
  4541                           pclatu	equ	0xFFB
  4542                           pclath	equ	0xFFA
  4543                           tblptru	equ	0xFF8
  4544                           tblptrh	equ	0xFF7
  4545                           tblptrl	equ	0xFF6
  4546                           tablat	equ	0xFF5
  4547                           prodh	equ	0xFF4
  4548                           prodl	equ	0xFF3
  4549                           intcon	equ	0xFF2
  4550                           indf0	equ	0xFEF
  4551                           postinc0	equ	0xFEE
  4552                           fsr0h	equ	0xFEA
  4553                           fsr0l	equ	0xFE9
  4554                           wreg	equ	0xFE8
  4555                           postdec1	equ	0xFE5
  4556                           plusw1	equ	0xFE3
  4557                           fsr1h	equ	0xFE2
  4558                           fsr1l	equ	0xFE1
  4559                           indf2	equ	0xFDF
  4560                           postinc2	equ	0xFDE
  4561                           postdec2	equ	0xFDD
  4562                           plusw2	equ	0xFDB
  4563                           fsr2h	equ	0xFDA
  4564                           fsr2l	equ	0xFD9
  4565                           status	equ	0xFD8
  4566                           
  4567 ;; *************** function _Timer0_10ms *****************
  4568 ;; Defined at:
  4569 ;;		line 3 in file "libs/projMain.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4587 ;;Total ram usage:        0 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    1
  4590 ;; This function calls:
  4591 ;;		i2___awmod
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;;		_TMR0_CallBack
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text28
  4599  001C10                     __ptext28:
  4600                           	opt stack 0
  4601  001C10                     _Timer0_10ms:
  4602                           	opt stack 23
  4603                           
  4604                           ;projMain.c: 5: GLOBAL_I++;
  4605                           
  4606                           ;incstack = 0
  4607  001C10  4A48               	infsnz	_GLOBAL_I,f,c
  4608  001C12  2A49               	incf	_GLOBAL_I+1,f,c
  4609                           
  4610                           ;projMain.c: 6: if (GLOBAL_I%10==0) {
  4611  001C14  C048  F001         	movff	_GLOBAL_I,i2___awmod@dividend
  4612  001C18  C049  F002         	movff	_GLOBAL_I+1,i2___awmod@dividend+1
  4613  001C1C  0E00               	movlw	0
  4614  001C1E  6E04               	movwf	i2___awmod@divisor+1,c
  4615  001C20  0E0A               	movlw	10
  4616  001C22  6E03               	movwf	i2___awmod@divisor,c
  4617  001C24  EC87  F00D         	call	i2___awmod	;wreg free
  4618  001C28  5001               	movf	?i2___awmod,w,c
  4619  001C2A  1002               	iorwf	?i2___awmod+1,w,c
  4620  001C2C  A4D8               	btfss	status,2,c
  4621  001C2E  D002               	goto	i2l1889
  4622                           
  4623                           ;projMain.c: 7: LATB ^= 0xFF;
  4624  001C30  0EFF               	movlw	255
  4625  001C32  1A84               	xorwf	3972,f,c	;volatile
  4626  001C34                     i2l1889:
  4627                           
  4628                           ;projMain.c: 8: }
  4629                           ;projMain.c: 9: if (GLOBAL_I%5000==0) {
  4630  001C34  C048  F001         	movff	_GLOBAL_I,i2___awmod@dividend
  4631  001C38  C049  F002         	movff	_GLOBAL_I+1,i2___awmod@dividend+1
  4632  001C3C  0E13               	movlw	19
  4633  001C3E  6E04               	movwf	i2___awmod@divisor+1,c
  4634  001C40  0E88               	movlw	136
  4635  001C42  6E03               	movwf	i2___awmod@divisor,c
  4636  001C44  EC87  F00D         	call	i2___awmod	;wreg free
  4637  001C48  0012               	return	
  4638  001C4A                     __end_of_Timer0_10ms:
  4639                           	opt stack 0
  4640                           tosu	equ	0xFFF
  4641                           tosh	equ	0xFFE
  4642                           tosl	equ	0xFFD
  4643                           pclatu	equ	0xFFB
  4644                           pclath	equ	0xFFA
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           indf0	equ	0xFEF
  4653                           postinc0	equ	0xFEE
  4654                           fsr0h	equ	0xFEA
  4655                           fsr0l	equ	0xFE9
  4656                           wreg	equ	0xFE8
  4657                           postdec1	equ	0xFE5
  4658                           plusw1	equ	0xFE3
  4659                           fsr1h	equ	0xFE2
  4660                           fsr1l	equ	0xFE1
  4661                           indf2	equ	0xFDF
  4662                           postinc2	equ	0xFDE
  4663                           postdec2	equ	0xFDD
  4664                           plusw2	equ	0xFDB
  4665                           fsr2h	equ	0xFDA
  4666                           fsr2l	equ	0xFD9
  4667                           status	equ	0xFD8
  4668                           
  4669 ;; *************** function i2___awmod *****************
  4670 ;; Defined at:
  4671 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  dividend        2    0[COMRAM] int 
  4674 ;;  divisor         2    2[COMRAM] int 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  __awmod         1    5[COMRAM] unsigned char 
  4677 ;;  __awmod         1    4[COMRAM] unsigned char 
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  2    0[COMRAM] int 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;Total ram usage:        6 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_Timer0_10ms
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text29
  4701  001B0E                     __ptext29:
  4702                           	opt stack 0
  4703  001B0E                     i2___awmod:
  4704                           	opt stack 23
  4705                           
  4706                           ;incstack = 0
  4707  001B0E  0E00               	movlw	0
  4708  001B10  6E06               	movwf	i2___awmod@sign,c
  4709  001B12  AE02               	btfss	i2___awmod@dividend+1,7,c
  4710  001B14  D006               	goto	i2l1849
  4711  001B16  6C01               	negf	i2___awmod@dividend,c
  4712  001B18  1E02               	comf	i2___awmod@dividend+1,f,c
  4713  001B1A  B0D8               	btfsc	status,0,c
  4714  001B1C  2A02               	incf	i2___awmod@dividend+1,f,c
  4715  001B1E  0E01               	movlw	1
  4716  001B20  6E06               	movwf	i2___awmod@sign,c
  4717  001B22                     i2l1849:
  4718  001B22  AE04               	btfss	i2___awmod@divisor+1,7,c
  4719  001B24  D004               	goto	i2l1853
  4720  001B26  6C03               	negf	i2___awmod@divisor,c
  4721  001B28  1E04               	comf	i2___awmod@divisor+1,f,c
  4722  001B2A  B0D8               	btfsc	status,0,c
  4723  001B2C  2A04               	incf	i2___awmod@divisor+1,f,c
  4724  001B2E                     i2l1853:
  4725  001B2E  5003               	movf	i2___awmod@divisor,w,c
  4726  001B30  1004               	iorwf	i2___awmod@divisor+1,w,c
  4727  001B32  B4D8               	btfsc	status,2,c
  4728  001B34  D018               	goto	i2l1869
  4729  001B36  0E01               	movlw	1
  4730  001B38  6E05               	movwf	i2___awmod@counter,c
  4731  001B3A  D004               	goto	i2l1859
  4732  001B3C                     i2l1857:
  4733  001B3C  90D8               	bcf	status,0,c
  4734  001B3E  3603               	rlcf	i2___awmod@divisor,f,c
  4735  001B40  3604               	rlcf	i2___awmod@divisor+1,f,c
  4736  001B42  2A05               	incf	i2___awmod@counter,f,c
  4737  001B44                     i2l1859:
  4738  001B44  AE04               	btfss	i2___awmod@divisor+1,7,c
  4739  001B46  D7FA               	goto	i2l1857
  4740  001B48                     i2l1861:
  4741  001B48  5003               	movf	i2___awmod@divisor,w,c
  4742  001B4A  5C01               	subwf	i2___awmod@dividend,w,c
  4743  001B4C  5004               	movf	i2___awmod@divisor+1,w,c
  4744  001B4E  5802               	subwfb	i2___awmod@dividend+1,w,c
  4745  001B50  A0D8               	btfss	status,0,c
  4746  001B52  D004               	goto	i2l1865
  4747  001B54  5003               	movf	i2___awmod@divisor,w,c
  4748  001B56  5E01               	subwf	i2___awmod@dividend,f,c
  4749  001B58  5004               	movf	i2___awmod@divisor+1,w,c
  4750  001B5A  5A02               	subwfb	i2___awmod@dividend+1,f,c
  4751  001B5C                     i2l1865:
  4752  001B5C  90D8               	bcf	status,0,c
  4753  001B5E  3204               	rrcf	i2___awmod@divisor+1,f,c
  4754  001B60  3203               	rrcf	i2___awmod@divisor,f,c
  4755  001B62  2E05               	decfsz	i2___awmod@counter,f,c
  4756  001B64  D7F1               	goto	i2l1861
  4757  001B66                     i2l1869:
  4758  001B66  5006               	movf	i2___awmod@sign,w,c
  4759  001B68  B4D8               	btfsc	status,2,c
  4760  001B6A  D004               	goto	i2l1873
  4761  001B6C  6C01               	negf	i2___awmod@dividend,c
  4762  001B6E  1E02               	comf	i2___awmod@dividend+1,f,c
  4763  001B70  B0D8               	btfsc	status,0,c
  4764  001B72  2A02               	incf	i2___awmod@dividend+1,f,c
  4765  001B74                     i2l1873:
  4766  001B74  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4767  001B78  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4768  001B7C  0012               	return	
  4769  001B7E                     __end_ofi2___awmod:
  4770                           	opt stack 0
  4771                           tosu	equ	0xFFF
  4772                           tosh	equ	0xFFE
  4773                           tosl	equ	0xFFD
  4774                           pclatu	equ	0xFFB
  4775                           pclath	equ	0xFFA
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           prodh	equ	0xFF4
  4781                           prodl	equ	0xFF3
  4782                           intcon	equ	0xFF2
  4783                           indf0	equ	0xFEF
  4784                           postinc0	equ	0xFEE
  4785                           fsr0h	equ	0xFEA
  4786                           fsr0l	equ	0xFE9
  4787                           wreg	equ	0xFE8
  4788                           postdec1	equ	0xFE5
  4789                           plusw1	equ	0xFE3
  4790                           fsr1h	equ	0xFE2
  4791                           fsr1l	equ	0xFE1
  4792                           indf2	equ	0xFDF
  4793                           postinc2	equ	0xFDE
  4794                           postdec2	equ	0xFDD
  4795                           plusw2	equ	0xFDB
  4796                           fsr2h	equ	0xFDA
  4797                           fsr2l	equ	0xFD9
  4798                           status	equ	0xFD8
  4799                           tosu	equ	0xFFF
  4800                           tosh	equ	0xFFE
  4801                           tosl	equ	0xFFD
  4802                           pclatu	equ	0xFFB
  4803                           pclath	equ	0xFFA
  4804                           tblptru	equ	0xFF8
  4805                           tblptrh	equ	0xFF7
  4806                           tblptrl	equ	0xFF6
  4807                           tablat	equ	0xFF5
  4808                           prodh	equ	0xFF4
  4809                           prodl	equ	0xFF3
  4810                           intcon	equ	0xFF2
  4811                           indf0	equ	0xFEF
  4812                           postinc0	equ	0xFEE
  4813                           fsr0h	equ	0xFEA
  4814                           fsr0l	equ	0xFE9
  4815                           wreg	equ	0xFE8
  4816                           postdec1	equ	0xFE5
  4817                           plusw1	equ	0xFE3
  4818                           fsr1h	equ	0xFE2
  4819                           fsr1l	equ	0xFE1
  4820                           indf2	equ	0xFDF
  4821                           postinc2	equ	0xFDE
  4822                           postdec2	equ	0xFDD
  4823                           plusw2	equ	0xFDB
  4824                           fsr2h	equ	0xFDA
  4825                           fsr2l	equ	0xFD9
  4826                           status	equ	0xFD8
  4827                           
  4828                           	psect	text30
  4829  000000                     __ptext30:
  4830                           	opt stack 0
  4831                           tosu	equ	0xFFF
  4832                           tosh	equ	0xFFE
  4833                           tosl	equ	0xFFD
  4834                           pclatu	equ	0xFFB
  4835                           pclath	equ	0xFFA
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           prodh	equ	0xFF4
  4841                           prodl	equ	0xFF3
  4842                           intcon	equ	0xFF2
  4843                           indf0	equ	0xFEF
  4844                           postinc0	equ	0xFEE
  4845                           fsr0h	equ	0xFEA
  4846                           fsr0l	equ	0xFE9
  4847                           wreg	equ	0xFE8
  4848                           postdec1	equ	0xFE5
  4849                           plusw1	equ	0xFE3
  4850                           fsr1h	equ	0xFE2
  4851                           fsr1l	equ	0xFE1
  4852                           indf2	equ	0xFDF
  4853                           postinc2	equ	0xFDE
  4854                           postdec2	equ	0xFDD
  4855                           plusw2	equ	0xFDB
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860                           	psect	rparam
  4861  0000                     tosu	equ	0xFFF
  4862                           tosh	equ	0xFFE
  4863                           tosl	equ	0xFFD
  4864                           pclatu	equ	0xFFB
  4865                           pclath	equ	0xFFA
  4866                           tblptru	equ	0xFF8
  4867                           tblptrh	equ	0xFF7
  4868                           tblptrl	equ	0xFF6
  4869                           tablat	equ	0xFF5
  4870                           prodh	equ	0xFF4
  4871                           prodl	equ	0xFF3
  4872                           intcon	equ	0xFF2
  4873                           indf0	equ	0xFEF
  4874                           postinc0	equ	0xFEE
  4875                           fsr0h	equ	0xFEA
  4876                           fsr0l	equ	0xFE9
  4877                           wreg	equ	0xFE8
  4878                           postdec1	equ	0xFE5
  4879                           plusw1	equ	0xFE3
  4880                           fsr1h	equ	0xFE2
  4881                           fsr1l	equ	0xFE1
  4882                           indf2	equ	0xFDF
  4883                           postinc2	equ	0xFDE
  4884                           postdec2	equ	0xFDD
  4885                           plusw2	equ	0xFDB
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           status	equ	0xFD8
  4889                           
  4890                           	psect	temp
  4891  00004A                     btemp:
  4892                           	opt stack 0
  4893  00004A                     	ds	1
  4894  0000                     int$flags	set	btemp
  4895                           tosu	equ	0xFFF
  4896                           tosh	equ	0xFFE
  4897                           tosl	equ	0xFFD
  4898                           pclatu	equ	0xFFB
  4899                           pclath	equ	0xFFA
  4900                           tblptru	equ	0xFF8
  4901                           tblptrh	equ	0xFF7
  4902                           tblptrl	equ	0xFF6
  4903                           tablat	equ	0xFF5
  4904                           prodh	equ	0xFF4
  4905                           prodl	equ	0xFF3
  4906                           intcon	equ	0xFF2
  4907                           indf0	equ	0xFEF
  4908                           postinc0	equ	0xFEE
  4909                           fsr0h	equ	0xFEA
  4910                           fsr0l	equ	0xFE9
  4911                           wreg	equ	0xFE8
  4912                           postdec1	equ	0xFE5
  4913                           plusw1	equ	0xFE3
  4914                           fsr1h	equ	0xFE2
  4915                           fsr1l	equ	0xFE1
  4916                           indf2	equ	0xFDF
  4917                           postinc2	equ	0xFDE
  4918                           postdec2	equ	0xFDD
  4919                           plusw2	equ	0xFDB
  4920                           fsr2h	equ	0xFDA
  4921                           fsr2l	equ	0xFD9
  4922                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    14
    Data        39
    BSS         678
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      73
    BANK0           160     21     113
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_10ms(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_10ms(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    Lcd_Text@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 
		 -> main@Time(BANK0[7]), main@Date(BANK0[7]), 

    ValidateDateTime@Time	PTR unsigned char  size(2) Largest target is 7
		 -> main@Time(BANK0[7]), 

    ValidateDateTime@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    GetDay@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    ReadGPSDateTime@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    ReadGPSDateTime@Time	PTR unsigned char  size(2) Largest target is 7
		 -> main@Time(BANK0[7]), 


Critical Paths under _main in COMRAM

    _main->_GetDay
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_Int->_GetDay
    ___lwdiv->___wmul
    _Lcd_Init->_Lcd_Command
    _GetDay->___awmod
    ___awmod->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _Timer0_10ms->i2___awmod

Critical Paths under _main in BANK0

    _main->_Lcd_Int

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   12058
                                              7 BANK0     14    14      0
                 _EUSART1_Initialize
                             _GetDay
                           _Lcd_Init
                            _Lcd_Int
                           _Lcd_Text
                    _ReadGPSDateTime
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                   _ValidateDateTime
 ---------------------------------------------------------------------------------
 (1) _ValidateDateTime                                     6     2      4     942
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     245
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             22 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadGPSDateTime                                     20    16      4     749
                                             20 COMRAM    20    16      4
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             5     2      3    1839
                                             23 COMRAM     5     2      3
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Int                                              7     4      3    4038
                                              0 BANK0      7     4      3
                             _GetDay (ARG)
                         _Lcd_CharCP
                        _Lcd_Command
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             26 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_CharCP                                           3     3      0     248
                                             20 COMRAM     3     3      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     452
                                             23 COMRAM     1     1      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Delay5500us                                      1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0     248
                                             20 COMRAM     3     3      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDay                                              14    12      2    3275
                                             34 COMRAM    14    12      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     833
                                             28 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1345
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     400
                                              6 COMRAM    14    14      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     400
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0     400
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                        _Timer0_10ms *
 ---------------------------------------------------------------------------------
 (7) _Timer0_10ms                                          0     0      0     400
                          i2___awmod
 ---------------------------------------------------------------------------------
 (8) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
   _GetDay
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___wmul
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Int
     _GetDay (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___wmul
     _Lcd_CharCP (ARG)
       _Lcd_Delay5us
     _Lcd_Command (ARG)
       _Lcd_Delay5us
     ___awdiv (ARG)
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5us
   _ReadGPSDateTime
     _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   _TMR0_SetInterruptHandler
   _ValidateDateTime

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _Timer0_10ms *
         i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0     1E0      35       12.9%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      78       8       46.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     15      71       5       70.6%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      49       1       77.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132       6        0.0%
DATA                 0      0     312       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 30 13:09:17 2017

                          Lcd_Int@tempVal 00C1                   __end_of_ReadGPSDateTime 145C  
                             __CFG_CP$OFF 000000                                        l59 145A  
                            ___awdiv@sign 001A                       ___wmul@multiplicand 0017  
                             __CFG_LVP$ON 000000                                       l126 17E2  
                                     l127 1812                                       l229 1D22  
                                     l333 1C92                                       l874 1BC6  
                                     _GIE 007F97                              __CFG_CPD$OFF 000000  
                            ___awmod@sign 0022                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                     __end_of_Lcd_Command 17A6                              __CFG_ZCD$OFF 000000  
                                    l3133 1256                                      l2701 1ABE  
                                    l3157 1328                                      l2543 1D30  
                                    l2721 1B04                                      l2713 1AEC  
                                    l2705 1ACC                                      l2707 1AD4  
                                    l2731 1B94                                      l2653 19AC  
                                    l2709 1AD8                                      l2717 1AF6  
                                    l2733 1B9C                                      l2813 0F54  
                                    l2743 1BBC                                      l2735 1BA0  
                                    l2823 0F96                                      l2665 19D2  
                                    l2681 1A04                                      l2833 0FD8  
                                    l2817 0F58                                      l2667 19DA  
                                    l2659 19BC                                      l2931 1908  
                                    l2771 13AE                                      l2843 1016  
                                    l2827 0F9A                                      l2685 1A12  
                                    l2677 19FA                                      l2669 19DE  
                                    l2933 190E                                      l2941 1922  
                                    l2757 136C                                      l2853 1058  
                                    l2837 0FDC                                      l2935 1914  
                                    l2943 193C                                      l2791 1436  
                                    l2863 109A                                      l2847 101A  
                                    l2697 1AB2                                      l2945 1944  
                                    l2937 191A                                      l2785 13E6  
                                    l2777 13CE                                      l2793 143C  
                                    l2857 105C                                      l2787 140C  
                                    l2795 1444                                      l2867 109E  
                                    l2877 17DA                                      l2973 147C  
                                    l2949 196E                                      l2789 1432  
                                    l2991 14F0                                      l2975 1484  
                                    l2983 14A0                                      l2977 148C  
                                    l2985 14BC                                      l2979 1494  
                                    l2997 1540                                      STR_1 0F16  
                                    STR_2 0F15                                      STR_3 0F12  
                                    STR_4 0F0F                                      u2005 169E  
                                    u2030 1900                                      u2015 16B8  
                                    u2025 16D8                                      u2210 134E  
                                    _LATA 000F83                                      _LATB 000F84  
                                    _LATC 000F85                                      u2320 1158  
                                    u2321 1154                                      u2330 115A  
                                    u2480 1966                                      u2490 1990  
                                    u2741 123C                                      u2807 1D3A  
                                    u2487 195C                                      u2751 124E  
                                    u2817 1712                                      u2497 1986  
                                    u2827 1792                                      u2837 1D62  
                                    u1975 1588                                      u1985 15A2  
                                    u2777 143E                                      u2787 15FC  
                                    u1995 15C2                                      u2797 167C  
                                    _PLLR 0076D8                                      _WPUA 000F10  
                                    _WPUB 000F18                                      _WPUC 000F20  
                                    _WPUE 000F2D                         ??_Lcd_Delay5500us 0015  
                           __CFG_FCMEN$ON 000000                                      _main 1218  
                           ?_EUSART1_Read 0001                           _TMR0_StartTimer 1D6A  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                      __end_of_Lcd_Delay5us 1D6A  
                                    fsr2l 000FD9                                      btemp 004A  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0092                           __end_of_Lcd_Int 157A  
                           __CFG_CSWEN$ON 000000                              ___param_bank 000000  
                              _Lcd_CharCP 157A                             __CFG_SCANE$ON 000000  
                 __end_of_TMR0_Initialize 1C10            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 0026             __end_of_OSCILLATOR_Initialize 1C9A  
                                   ?_main 0001                           __end_of___awdiv 1A1C  
                           __CFG_WDTE$OFF 000000                           __end_of___awmod 1B0E  
                         ___awdiv@divisor 0017                            __CFG_DEBUG$OFF 000000  
                         __end_of___lwdiv 1BD0                                     i2l257 0050  
                         ___awdiv@counter 0019                                     _OSCEN 000EDC  
                                   _TMR0H 000FD4                                     _TMR0L 000FD3  
                                   _TRISA 000F88                                     _TRISB 000F89  
                                   _TRISC 000F8A         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0015  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 1C74  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
               __size_of_ValidateDateTime 0188                        __CFG_MCLRE$EXTMCLR 000000  
                        _GLOBAL_USARTSIZE 0046                                     pclath 000FFA  
                                   tablat 000FF5                            ??_EUSART1_Read 0015  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   status 000FD8                        __size_ofi2___awmod 0070  
                        __end_of_Lcd_Init 1868                          __end_of_Lcd_Text 1998  
                         __initialization 1A1C                __end_of_EUSART1_Initialize 1D22  
                            __end_of_main 133C                          ?_ReadGPSDateTime 0015  
             ?_INTERRUPT_InterruptManager 0001                               _Lcd_Command 1690  
                                  ??_main 0031                             __activetblptr 000003  
                 __end_of_TMR0_StartTimer 1D6E                          ___awdiv@dividend 0015  
                                  _ANSELA 000F11                                    _ANSELB 000F19  
                                  _ANSELC 000F21                                    _T0CON0 000FD5  
                                  _T0CON1 000FD6                                    _RC1REG 000F99  
                                  _CYCLES 0060                                    _RC1STA 000F9D  
                                  _ODCONA 000F0F                                    _ODCONB 000F17  
                                  _ODCONC 000F1F                                    _RC6PPS 000EFD  
                                  _EVENTS 0100                            __CFG_WDTCCS$SC 000000  
                                  i2l1861 1B48                                    i2l1853 1B2E  
                                  i2l1873 1B74                                    i2l1865 1B5C  
                                  i2l1857 1B3C                                    i2l1849 1B22  
                                  i2l1859 1B44                                    i2l1869 1B66  
                                  i2l1889 1C34                                    _OSCFRQ 000EDE  
                               ??_Lcd_Int 0031                                    _TX1REG 000F9A  
                          Lcd_Text@buffer 0019                                    _TX1STA 000F9E  
                                  _STATES 0178                             ??_Timer0_10ms 0007  
                                  _GetDay 10A2                            __CFG_PWRTE$OFF 000000  
                          __CFG_XINST$OFF 000000                               ?_Lcd_CharCP 0001  
                                  ___wmul 1C9A                                 ??___awdiv 0019  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0021  
                               ??___lwdiv 001F                          ?_TMR0_Initialize 0001  
                                  clear_0 1A64                                    clear_1 1A76  
                                  clear_2 1A82                                    clear_3 1A8E  
                        ___awdiv@quotient 001B                           ___awmod@divisor 001F  
                         ___awmod@counter 0021                              __pdataCOMRAM 0031  
                       __end_ofi2___awmod 1B7E                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                     __end_of_TMR0_CallBack 1CDE  
                          i2___awmod@sign 0006  TMR0_SetInterruptHandler@InterruptHandler 0015  
                   __size_of_Lcd_Delay5us 000A             __size_of_INTERRUPT_Initialize 0004  
                      Lcd_Command@command 0017                         _SYSTEM_Initialize 1CF6  
                              __accesstop 0060                   __end_of__initialization 1A94  
                         __CFG_FEXTOSC$HS 000000                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                            __pidataBANK0 1CDE                       __end_of_Timer0_10ms 1C4A  
                     ??_SYSTEM_Initialize 0019                                 ?_TMR0_ISR 0001  
                    __end_of_EUSART1_Read 1D34                              _Lcd_Delay5us 1D60  
                         _Lcd_Delay5500us 1D34                     TMR0_ISR@CountCallBack 0040  
                               ?_Lcd_Init 0001                                 ?_Lcd_Text 0018  
                        ?_TMR0_StartTimer 0001                 __end_of_SYSTEM_Initialize 1D0C  
                        _ValidateDateTime 0F1A                       __size_of_Lcd_CharCP 0116  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                                 ?_GetDay 0023          __end_of_TMR0_SetInterruptHandler 1D60  
                                 ?___wmul 0015                                ??_TMR0_ISR 0007  
                         __CFG_PPS1WAY$ON 000000                                   GetDay@d 002D  
                                 GetDay@m 002E                                   GetDay@t 00A4  
                                 GetDay@y 002F                                   _SP1BRGH 000F9C  
                                 _SP1BRGL 000F9B                                   _OSCCON1 000ED8  
                                 _OSCCON3 000EDA                                   _OSCTUNE 000EDD  
                              ??_Lcd_Init 0018                                   _PPSLOCK 000EA0  
                              ??_Lcd_Text 001B                                   _Lcd_Int 145C  
                    ValidateDateTime@Date 0015                               _Timer0_10ms 1C10  
                    ValidateDateTime@Item 001A                      ValidateDateTime@Time 0017  
                         __size_of_GetDay 0176                                   __Hparam 0000  
                                 __Lparam 0000                                   ___awdiv 1998  
                                 ___awmod 1A9E                           __size_of___wmul 0026  
                                 ___lwdiv 1B7E                   __end_of_Lcd_Delay5500us 1D46  
                            __psmallconst 0F00                                   __pcinit 1A1C  
                                 __ramtop 0F00                              ?_Lcd_Command 0001  
                                 __ptext0 1218                                   __ptext1 0F1A  
                                 __ptext2 1CF6                                   __ptext3 1BD0  
                                 __ptext4 1D6A                                   __ptext5 1D56  
                                 __ptext6 1868                                   __ptext7 1C74  
                                 __ptext8 1D6E                                   __ptext9 1D0C  
                   _OSCILLATOR_Initialize 1C74                          ___awmod@dividend 001D  
                      _EUSART1_Initialize 1D0C                  ??_PIN_MANAGER_Initialize 0015  
              __size_of_SYSTEM_Initialize 0016                      end_of_initialization 1A94  
                     ?_EUSART1_Initialize 0001                              ??_Lcd_CharCP 0015  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                   __size_of_EUSART1_Read 0012                                 Lcd_Text@x 0018  
                               Lcd_Text@y 001B                                main@F11345 0038  
                              main@F11347 0031                      ??_EUSART1_Initialize 0015  
                   __CFG_WDTCPS$WDTCPS_31 000000                  _TMR0_SetInterruptHandler 1D56  
                __size_of_ReadGPSDateTime 0120                                 _TRISAbits 000F88  
                          _GLOBAL_CENTURY 003F                                 i2___awmod 1B0E  
                      __end_of_Lcd_CharCP 1690                              _EUSART1_Read 1D22  
                          __end_of_GetDay 1218                      _timer0ReloadVal16bit 0044  
            __end_of_INTERRUPT_Initialize 1D72                  __end_of_ValidateDateTime 10A2  
                        ?_Lcd_Delay5500us 0001                            __end_of___wmul 1CC0  
                           __pidataCOMRAM 1D46                         __size_of_TMR0_ISR 002A  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 1A1C  
                __size_of_TMR0_Initialize 0040           __size_of_PIN_MANAGER_Initialize 009C  
           __end_ofReadGPSDateTime@F11354 0F08                                ?i2___awmod 0001  
                       __size_of_Lcd_Init 00C2                         __size_of_Lcd_Text 0094  
                                ??_GetDay 0025                          __CFG_LPBOREN$OFF 000000  
                                ??___wmul 0019                    __size_of_TMR0_CallBack 001E  
                             __pdataBANK0 00A4                               __pbssBIGRAM 0178  
                    __size_of_Lcd_Command 0116                  ReadGPSDateTime@StartCode 001D  
                             __pbssCOMRAM 0040                             __pcstackBANK0 00BC  
                       ??_ReadGPSDateTime 0019                                  ?_Lcd_Int 00BC  
                            ?_Timer0_10ms 0001                     _TMR0_InterruptHandler 0042  
                __size_of_TMR0_StartTimer 0004                          ___lwdiv@dividend 001B  
                  _PIN_MANAGER_Initialize 1868                                 __pintcode 0008  
                                ?___awdiv 0015                                  ?___awmod 001D  
                                ?___lwdiv 001B                         ReadGPSTime@F11346 0F08  
            ??_INTERRUPT_InterruptManager 0007                                  _BAUD1CON 000F9F  
                             __smallconst 0F00                          ___lwdiv@quotient 0020  
                             ??i2___awmod 0005                             _TMR0_CallBack 1CC0  
                                _GLOBAL_I 0048                      _INTERRUPT_Initialize 1D6E  
                       ??_TMR0_Initialize 0017                          ReadGPSDateTime@i 0025  
                          ___wmul@product 0019                                  _LATAbits 000F83  
                                _LATCbits 000F85                                  _PIE0bits 000EC2  
                     __CFG_BORV$VBOR_2P45 000000                                  i2u120_48 1CCC  
     __size_of_INTERRUPT_InterruptManager 0084                                  i2u171_40 1C66  
              ??_TMR0_SetInterruptHandler 0017                                  _PIR0bits 000ECA  
                                _PIR3bits 000ECD                                  Lcd_Int@x 00BC  
                                Lcd_Int@y 00BF                       ReadGPSDateTime@Date 0015  
               __end_ofReadGPSTime@F11346 0F0F                       ReadGPSDateTime@Time 0017  
                                _TMR0_ISR 1C4A                              Lcd_Init@data 0018  
                       ___wmul@multiplier 0015                                  _Lcd_Init 17A6  
                          ?_TMR0_CallBack 0001                                  _Lcd_Text 1904  
                               copy_data0 1A30                                 copy_data1 1A50  
                   ?_INTERRUPT_Initialize 0001                        i2___awmod@dividend 0001  
                        __size_of_Lcd_Int 011E                              Lcd_Text@data 001C  
                                __Hrparam 0000                   __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                __Lrparam 0000                   ReadGPSDateTime@TempChar 0027  
                      __CFG_BOREN$SBORDIS 000000                   ??_OSCILLATOR_Initialize 0015  
                       ??_TMR0_StartTimer 0015                         ?_ValidateDateTime 0015  
                        __size_of___awdiv 0084                          __size_of___awmod 0070  
             __size_of_EUSART1_Initialize 0016                          __size_of___lwdiv 0052  
                      ??_ValidateDateTime 0019                             ?_Lcd_Delay5us 0001  
                              _T0CON0bits 000FD5                           ___lwdiv@divisor 001D  
                         ___lwdiv@counter 001F                                  __ptext10 133C  
                                __ptext11 1D22                                  __ptext20 10A2  
                                __ptext12 1904                                  __ptext21 1C9A  
                                __ptext13 145C                                  __ptext30 0000  
                                __ptext22 1A9E                                  __ptext14 1B7E  
                                __ptext23 1998                                  __ptext15 157A  
                                __ptext16 17A6                                  __ptext25 1C4A  
                                __ptext17 1D34                                  __ptext26 1CC0  
                                __ptext18 1690                                  __ptext27 1D72  
                                __ptext19 1D60                                  __ptext28 1C10  
                                __ptext29 1B0E                               Lcd_CharCP@c 0017  
                           __size_of_main 0124      __end_of_TMR0_DefaultInterruptHandler 1D74  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 1D72  
                    __CFG_WDTCWS$WDTCWS_7 000000                      __size_of_Timer0_10ms 003A  
                              _RC1STAbits 000F9D                        ReadGPSDateTime@Pos 0028  
                             Lcd_Int@data 00C0                                  int$flags 004A  
                                main@Date 00CA                               Lcd_Int@size 00BE  
                                main@Time 00C3        __end_of_INTERRUPT_InterruptManager 008C  
              _INTERRUPT_InterruptManager 0008                            ??_Lcd_Delay5us 0015  
             PIN_MANAGER_Initialize@state 0015                           _ReadGPSDateTime 133C  
                       i2___awmod@divisor 0003                         i2___awmod@counter 0005  
                              _INTCONbits 000FF2                           ??_TMR0_CallBack 0007  
                              GetDay@Date 0023                  __size_of_Lcd_Delay5500us 0012  
                  ??_INTERRUPT_Initialize 0015                                  intlevel2 0000  
                   ReadGPSDateTime@F11354 0F01                   ?_PIN_MANAGER_Initialize 0001  
                       __CFG_CLKOUTEN$OFF 000000                               _PPSLOCKbits 000EA0  
           ?_TMR0_DefaultInterruptHandler 0001                                Lcd_Int@val 00BD  
                   ReadGPSDateTime@Commas 0024                             ??_Lcd_Command 0015  
                              _RX1PPSbits 000EB5                           _TMR0_Initialize 1BD0  
          __end_of_PIN_MANAGER_Initialize 1904  
