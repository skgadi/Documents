

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jul 07 19:11:38 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F26K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 1.42
    61                           ; Generated 13/04/2017 GMT
    62                           ; 
    63                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F26K40 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  0025EE                     __pidataCOMRAM:
    97                           	opt stack 0
    98                           
    99                           ;initializer for _CENTURY
   100  0025EE  14                 	db	20
   101                           
   102                           ;initializer for _GLOBAL_CENTURY
   103  0025EF  14                 	db	20
   104                           
   105                           	psect	idataBANK0
   106  0024D0                     __pidataBANK0:
   107                           	opt stack 0
   108                           
   109                           ;initializer for GetDay@t
   110  0024D0  0000               	dw	0
   111  0024D2  0003               	dw	3
   112  0024D4  0002               	dw	2
   113  0024D6  0005               	dw	5
   114  0024D8  0000               	dw	0
   115  0024DA  0003               	dw	3
   116  0024DC  0005               	dw	5
   117  0024DE  0001               	dw	1
   118  0024E0  0004               	dw	4
   119  0024E2  0006               	dw	6
   120  0024E4  0002               	dw	2
   121  0024E6  0004               	dw	4
   122                           
   123                           ;initializer for main@F11392
   124  0024E8  2D                 	db	45
   125  0024E9  2D                 	db	45
   126  0024EA  2D                 	db	45
   127  0024EB  2D                 	db	45
   128  0024EC  2D                 	db	45
   129  0024ED  2D                 	db	45
   130  0024EE  00                 	db	0
   131                           
   132                           ;initializer for main@F11390
   133  0024EF  2D                 	db	45
   134  0024F0  2D                 	db	45
   135  0024F1  2D                 	db	45
   136  0024F2  2D                 	db	45
   137  0024F3  2D                 	db	45
   138  0024F4  2D                 	db	45
   139  0024F5  00                 	db	0
   140                           
   141                           	psect	smallconst
   142  000F00                     __psmallconst:
   143                           	opt stack 0
   144  000F00  00                 	db	0
   145  000F01                     ReadGPSDateTime@F11399:
   146                           	opt stack 0
   147  000F01  24                 	db	36
   148  000F02  47                 	db	71
   149  000F03  50                 	db	80
   150  000F04  52                 	db	82
   151  000F05  4D                 	db	77
   152  000F06  43                 	db	67
   153  000F07  2C                 	db	44
   154  000F08                     __end_ofReadGPSDateTime@F11399:
   155                           	opt stack 0
   156  000F08                     ReadGPSTime@F11391:
   157                           	opt stack 0
   158  000F08  24                 	db	36
   159  000F09  47                 	db	71
   160  000F0A  50                 	db	80
   161  000F0B  52                 	db	82
   162  000F0C  4D                 	db	77
   163  000F0D  43                 	db	67
   164  000F0E  2C                 	db	44
   165  000F0F                     __end_ofReadGPSTime@F11391:
   166                           	opt stack 0
   167  0000                     _OSCTUNE	set	3805
   168  0000                     _OSCFRQ	set	3806
   169  0000                     _OSCEN	set	3804
   170  0000                     _OSCCON3	set	3802
   171  0000                     _OSCCON1	set	3800
   172  0000                     _RC6PPS	set	3837
   173  0000                     _RX1PPSbits	set	3765
   174  0000                     _PPSLOCKbits	set	3744
   175  0000                     _PPSLOCK	set	3744
   176  0000                     _PIR0bits	set	3786
   177  0000                     _PIE0bits	set	3778
   178  0000                     _PIR3bits	set	3789
   179  0000                     _PLLR	set	30424
   180  0000                     _ODCONC	set	3871
   181  0000                     _ODCONB	set	3863
   182  0000                     _ODCONA	set	3855
   183  0000                     _WPUC	set	3872
   184  0000                     _WPUA	set	3856
   185  0000                     _WPUB	set	3864
   186  0000                     _WPUE	set	3885
   187  0000                     _ANSELA	set	3857
   188  0000                     _ANSELB	set	3865
   189  0000                     _ANSELC	set	3873
   190  0000                     _LATCbits	set	3973
   191  0000                     _T0CON0bits	set	4053
   192  0000                     _TMR0L	set	4051
   193  0000                     _TMR0H	set	4052
   194  0000                     _T0CON1	set	4054
   195  0000                     _T0CON0	set	4053
   196  0000                     _TRISC	set	3978
   197  0000                     _TRISB	set	3977
   198  0000                     _TRISA	set	3976
   199  0000                     _LATC	set	3973
   200  0000                     _LATB	set	3972
   201  0000                     _LATA	set	3971
   202  0000                     _INTCONbits	set	4082
   203  0000                     _TX1REG	set	3994
   204  0000                     _RC1REG	set	3993
   205  0000                     _RC1STAbits	set	3997
   206  0000                     _SP1BRGH	set	3996
   207  0000                     _SP1BRGL	set	3995
   208  0000                     _TX1STA	set	3998
   209  0000                     _RC1STA	set	3997
   210  0000                     _BAUD1CON	set	3999
   211  0000                     _NVMDAT	set	3968
   212  0000                     _NVMADRH	set	3967
   213  0000                     _NVMADRL	set	3966
   214  0000                     _NVMCON1bits	set	3969
   215  0000                     _LATAbits	set	3971
   216  0000                     _TRISAbits	set	3976
   217  0000                     _GIE	set	32663
   218  000F0F                     STR_4:
   219  000F0F  3A                 	db	58	;':'
   220  000F10  28                 	db	40
   221  000F11  00                 	db	0
   222  000F12                     STR_3:
   223  000F12  3A                 	db	58	;':'
   224  000F13  29                 	db	41
   225  000F14  00                 	db	0
   226  000F15                     STR_2:
   227  000F15  2D                 	db	45
   228  000F16  2D                 	db	45
   229  000F17  00                 	db	0
   230  0000                     
   231                           ; #config settings
   232  000F18  00                 	db	0	; dummy byte at the end
   233  0000                     
   234                           	psect	cinit
   235  00223A                     __pcinit:
   236                           	opt stack 0
   237  00223A                     start_initialization:
   238                           	opt stack 0
   239  00223A                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Initialize objects allocated to BANK0 (38 bytes)
   243                           ; load TBLPTR registers with __pidataBANK0
   244  00223A  0ED0               	movlw	low __pidataBANK0
   245  00223C  6EF6               	movwf	tblptrl,c
   246  00223E  0E24               	movlw	high __pidataBANK0
   247  002240  6EF7               	movwf	tblptrh,c
   248  002242  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   249  002244  6EF8               	movwf	tblptru,c
   250  002246  EE00  F0B2         	lfsr	0,__pdataBANK0
   251  00224A  EE10 F026          	lfsr	1,38
   252  00224E                     copy_data0:
   253  00224E  0009               	tblrd		*+
   254  002250  CFF5 FFEE          	movff	tablat,postinc0
   255  002254  50E5               	movf	postdec1,w,c
   256  002256  50E1               	movf	fsr1l,w,c
   257  002258  E1FA               	bnz	copy_data0
   258                           
   259                           ; Initialize objects allocated to COMRAM (2 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  00225A  0EEE               	movlw	low __pidataCOMRAM
   262  00225C  6EF6               	movwf	tblptrl,c
   263  00225E  0E25               	movlw	high __pidataCOMRAM
   264  002260  6EF7               	movwf	tblptrh,c
   265  002262  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   266  002264  6EF8               	movwf	tblptru,c
   267  002266  0009               	tblrd		*+	;fetch initializer
   268  002268  CFF5 F049          	movff	tablat,__pdataCOMRAM
   269  00226C  0009               	tblrd		*+	;fetch initializer
   270  00226E  CFF5 F04A          	movff	tablat,__pdataCOMRAM+1
   271                           
   272                           ; Clear objects allocated to BIGRAM (960 bytes)
   273  002272  EE01  F0F0         	lfsr	0,__pbssBIGRAM
   274  002276  EE13 F0C0          	lfsr	1,960
   275  00227A                     clear_0:
   276  00227A  6AEE               	clrf	postinc0,c
   277  00227C  50E5               	movf	postdec1,w,c
   278  00227E  50E1               	movf	fsr1l,w,c
   279  002280  E1FC               	bnz	clear_0
   280  002282  50E2               	movf	fsr1h,w,c
   281  002284  E1FA               	bnz	clear_0
   282                           
   283                           ; Clear objects allocated to BANK1 (240 bytes)
   284  002286  EE01  F000         	lfsr	0,__pbssBANK1
   285  00228A  0EF0               	movlw	240
   286  00228C                     clear_1:
   287  00228C  6AEE               	clrf	postinc0,c
   288  00228E  06E8               	decf	wreg,f,c
   289  002290  E1FD               	bnz	clear_1
   290                           
   291                           ; Clear objects allocated to BANK0 (82 bytes)
   292  002292  EE00  F060         	lfsr	0,__pbssBANK0
   293  002296  0E52               	movlw	82
   294  002298                     clear_2:
   295  002298  6AEE               	clrf	postinc0,c
   296  00229A  06E8               	decf	wreg,f,c
   297  00229C  E1FD               	bnz	clear_2
   298                           
   299                           ; Clear objects allocated to COMRAM (21 bytes)
   300  00229E  EE00  F034         	lfsr	0,__pbssCOMRAM
   301  0022A2  0E15               	movlw	21
   302  0022A4                     clear_3:
   303  0022A4  6AEE               	clrf	postinc0,c
   304  0022A6  06E8               	decf	wreg,f,c
   305  0022A8  E1FD               	bnz	clear_3
   306  0022AA                     end_of_initialization:
   307                           	opt stack 0
   308  0022AA                     __end_of__initialization:
   309                           	opt stack 0
   310  0022AA  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   311  0022AC  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   312  0022AE  0100               	movlb	0
   313  0022B0  EF54  F00C         	goto	_main	;jump to C main() function
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1h	equ	0xFE2
   322                           fsr1l	equ	0xFE1
   323                           
   324                           	psect	bssCOMRAM
   325  000034                     __pbssCOMRAM:
   326                           	opt stack 0
   327  000034                     TMR0_ISR@CountCallBack:
   328                           	opt stack 0
   329  000034                     	ds	2
   330  000036                     _TMR0_InterruptHandler:
   331                           	opt stack 0
   332  000036                     	ds	2
   333  000038                     _timer0ReloadVal16bit:
   334                           	opt stack 0
   335  000038                     	ds	2
   336  00003A                     _DAY_LIGHT_END:
   337                           	opt stack 0
   338  00003A                     	ds	2
   339  00003C                     _DAY_LIGHT_START:
   340                           	opt stack 0
   341  00003C                     	ds	2
   342  00003E                     _GLOBAL_I:
   343                           	opt stack 0
   344  00003E                     	ds	2
   345  000040                     _GPS_SYNC_AT_START:
   346                           	opt stack 0
   347  000040                     	ds	1
   348  000041                     _SPECIAL_AUDIO_LAST_X_SECONDS:
   349                           	opt stack 0
   350  000041                     	ds	1
   351  000042                     _AUDIO_SPECIAL_OFF_TIME:
   352                           	opt stack 0
   353  000042                     	ds	1
   354  000043                     _AUDIO_SPECIAL_ON_TIME:
   355                           	opt stack 0
   356  000043                     	ds	1
   357  000044                     _AUDIO_NORMAL_OFF_TIME:
   358                           	opt stack 0
   359  000044                     	ds	1
   360  000045                     _AUDIO_NORMAL_ON_TIME:
   361                           	opt stack 0
   362  000045                     	ds	1
   363  000046                     _BLINK_LAST_X_SECONDS:
   364                           	opt stack 0
   365  000046                     	ds	1
   366  000047                     _BLINK_OFF_TIME:
   367                           	opt stack 0
   368  000047                     	ds	1
   369  000048                     _BLINK_ON_TIME:
   370                           	opt stack 0
   371  000048                     	ds	1
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1h	equ	0xFE2
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	dataCOMRAM
   383  000049                     __pdataCOMRAM:
   384                           	opt stack 0
   385  000049                     _CENTURY:
   386                           	opt stack 0
   387  000049                     	ds	1
   388  00004A                     _GLOBAL_CENTURY:
   389                           	opt stack 0
   390  00004A                     	ds	1
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1h	equ	0xFE2
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	bssBANK0
   402  000060                     __pbssBANK0:
   403                           	opt stack 0
   404  000060                     _CYCLES:
   405                           	opt stack 0
   406  000060                     	ds	68
   407  0000A4                     _GPS_SYNC_EVERY_DAY_AT_LOCAL_TIME:
   408                           	opt stack 0
   409  0000A4                     	ds	4
   410  0000A8                     _GPS_SYNC_EVERY_x_SECONDS:
   411                           	opt stack 0
   412  0000A8                     	ds	4
   413  0000AC                     _CYCLE_DELAY:
   414                           	opt stack 0
   415  0000AC                     	ds	2
   416  0000AE                     _TIME_ZONE:
   417                           	opt stack 0
   418  0000AE                     	ds	2
   419  0000B0                     _GLOBAL_USARTSIZE:
   420                           	opt stack 0
   421  0000B0                     	ds	2
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           postdec1	equ	0xFE5
   429                           fsr1h	equ	0xFE2
   430                           fsr1l	equ	0xFE1
   431                           
   432                           	psect	dataBANK0
   433  0000B2                     __pdataBANK0:
   434                           	opt stack 0
   435  0000B2                     GetDay@t:
   436                           	opt stack 0
   437  0000B2                     	ds	24
   438  0000CA                     main@F11392:
   439                           	opt stack 0
   440  0000CA                     	ds	7
   441  0000D1                     main@F11390:
   442                           	opt stack 0
   443  0000D1                     	ds	7
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postdec1	equ	0xFE5
   451                           fsr1h	equ	0xFE2
   452                           fsr1l	equ	0xFE1
   453                           
   454                           	psect	bssBANK1
   455  000100                     __pbssBANK1:
   456                           	opt stack 0
   457  000100                     _EVENTS:
   458                           	opt stack 0
   459  000100                     	ds	240
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           postdec1	equ	0xFE5
   467                           fsr1h	equ	0xFE2
   468                           fsr1l	equ	0xFE1
   469                           
   470                           	psect	bssBIGRAM
   471  0001F0                     __pbssBIGRAM:
   472                           	opt stack 0
   473  0001F0                     _STATES:
   474                           	opt stack 0
   475  0001F0                     	ds	960
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1h	equ	0xFE2
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	cstackBANK0
   487  0000D8                     __pcstackBANK0:
   488                           	opt stack 0
   489  0000D8                     Lcd_Int@y:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x0
   493  0000D8                     	ds	1
   494  0000D9                     Lcd_Int@data:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x1
   498  0000D9                     	ds	1
   499  0000DA                     Lcd_Int@tempVal:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x2
   503  0000DA                     	ds	2
   504  0000DC                     ??_main:
   505                           
   506                           ; 1 bytes @ 0x4
   507  0000DC                     	ds	1
   508  0000DD                     main@Time:
   509                           	opt stack 0
   510                           
   511                           ; 7 bytes @ 0x5
   512  0000DD                     	ds	7
   513  0000E4                     main@Date:
   514                           	opt stack 0
   515                           
   516                           ; 7 bytes @ 0xC
   517  0000E4                     	ds	7
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1h	equ	0xFE2
   526                           fsr1l	equ	0xFE1
   527                           
   528                           	psect	cstackCOMRAM
   529  000001                     __pcstackCOMRAM:
   530                           	opt stack 0
   531  000001                     ?i2___awmod:
   532                           	opt stack 0
   533  000001                     i2___awmod@dividend:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x0
   537  000001                     	ds	2
   538  000003                     i2___awmod@divisor:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x2
   542  000003                     	ds	2
   543  000005                     i2___awmod@counter:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x4
   547  000005                     	ds	1
   548  000006                     i2___awmod@sign:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x5
   552  000006                     	ds	1
   553  000007                     ??_INTERRUPT_InterruptManager:
   554                           
   555                           ; 1 bytes @ 0x6
   556  000007                     	ds	14
   557  000015                     ??_Lcd_CharCP:
   558  000015                     ??_Lcd_Delay5500us:
   559  000015                     ??_Lcd_Command:
   560  000015                     ?___wmul:
   561                           	opt stack 0
   562  000015                     ?___awdiv:
   563                           	opt stack 0
   564  000015                     ?___aldiv:
   565                           	opt stack 0
   566  000015                     PIN_MANAGER_Initialize@state:
   567                           	opt stack 0
   568  000015                     ReadGPSDateTime@Date:
   569                           	opt stack 0
   570  000015                     ValidateDateTime@Date:
   571                           	opt stack 0
   572  000015                     ReadEeprom@Address:
   573                           	opt stack 0
   574  000015                     TMR0_SetInterruptHandler@InterruptHandler:
   575                           	opt stack 0
   576  000015                     ___wmul@multiplier:
   577                           	opt stack 0
   578  000015                     ___awdiv@dividend:
   579                           	opt stack 0
   580  000015                     ___aldiv@dividend:
   581                           	opt stack 0
   582                           
   583                           ; 4 bytes @ 0x14
   584  000015                     	ds	2
   585  000017                     ??_TMR0_Initialize:
   586  000017                     Lcd_CharCP@c:
   587                           	opt stack 0
   588  000017                     Lcd_Command@command:
   589                           	opt stack 0
   590  000017                     ReadGPSDateTime@Time:
   591                           	opt stack 0
   592  000017                     ValidateDateTime@Time:
   593                           	opt stack 0
   594  000017                     ___wmul@multiplicand:
   595                           	opt stack 0
   596  000017                     ___awdiv@divisor:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x16
   600  000017                     	ds	1
   601  000018                     Lcd_Init@data:
   602                           	opt stack 0
   603  000018                     Lcd_Text@x:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x17
   607  000018                     	ds	1
   608  000019                     ??_ReadGPSDateTime:
   609  000019                     ??_ValidateDateTime:
   610  000019                     ___awdiv@counter:
   611                           	opt stack 0
   612  000019                     Lcd_Text@buffer:
   613                           	opt stack 0
   614  000019                     ___wmul@product:
   615                           	opt stack 0
   616  000019                     ___aldiv@divisor:
   617                           	opt stack 0
   618                           
   619                           ; 4 bytes @ 0x18
   620  000019                     	ds	1
   621  00001A                     ValidateDateTime@Item:
   622                           	opt stack 0
   623  00001A                     ___awdiv@sign:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x19
   627  00001A                     	ds	1
   628  00001B                     ??_LoadSettingsFromEeprom:
   629  00001B                     ??_LoadEventsFromEeprom:
   630  00001B                     ?___lwdiv:
   631                           	opt stack 0
   632  00001B                     Lcd_Text@y:
   633                           	opt stack 0
   634  00001B                     ___awdiv@quotient:
   635                           	opt stack 0
   636  00001B                     ___lwdiv@dividend:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x1A
   640  00001B                     	ds	1
   641  00001C                     Lcd_Text@data:
   642                           	opt stack 0
   643  00001C                     LoadSettingsFromEeprom@Temp32:
   644                           	opt stack 0
   645                           
   646                           ; 4 bytes @ 0x1B
   647  00001C                     	ds	1
   648  00001D                     ??_LoadStatesFromEeprom:
   649  00001D                     ?___awmod:
   650                           	opt stack 0
   651  00001D                     ___aldiv@counter:
   652                           	opt stack 0
   653  00001D                     ___awmod@dividend:
   654                           	opt stack 0
   655  00001D                     ___lwdiv@divisor:
   656                           	opt stack 0
   657  00001D                     ReadGPSDateTime@StartCode:
   658                           	opt stack 0
   659                           
   660                           ; 7 bytes @ 0x1C
   661  00001D                     	ds	1
   662  00001E                     ___aldiv@sign:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x1D
   666  00001E                     	ds	1
   667  00001F                     ___lwdiv@counter:
   668                           	opt stack 0
   669  00001F                     LoadEventsFromEeprom@i:
   670                           	opt stack 0
   671  00001F                     ___awmod@divisor:
   672                           	opt stack 0
   673  00001F                     ___aldiv@quotient:
   674                           	opt stack 0
   675                           
   676                           ; 4 bytes @ 0x1E
   677  00001F                     	ds	1
   678  000020                     LoadSettingsFromEeprom@Temp16:
   679                           	opt stack 0
   680  000020                     ___lwdiv@quotient:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x1F
   684  000020                     	ds	1
   685  000021                     ___awmod@counter:
   686                           	opt stack 0
   687  000021                     LoadEventsFromEeprom@Address:
   688                           	opt stack 0
   689  000021                     LoadStatesFromEeprom@AddAudioNormal:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x20
   693  000021                     	ds	1
   694  000022                     ___awmod@sign:
   695                           	opt stack 0
   696  000022                     LoadSettingsFromEeprom@Address:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x21
   700  000022                     	ds	1
   701  000023                     Lcd_WriteChar@x:
   702                           	opt stack 0
   703  000023                     GetDay@Date:
   704                           	opt stack 0
   705  000023                     LoadEventsFromEeprom@Temp16:
   706                           	opt stack 0
   707  000023                     LoadStatesFromEeprom@AddAudioSpecial:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x22
   711  000023                     	ds	1
   712  000024                     ReadGPSDateTime@Commas:
   713                           	opt stack 0
   714  000024                     Lcd_WriteChar@c:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x23
   718  000024                     	ds	1
   719  000025                     ??_GetDay:
   720  000025                     Lcd_WriteChar@y:
   721                           	opt stack 0
   722  000025                     ReadGPSDateTime@i:
   723                           	opt stack 0
   724  000025                     LoadStatesFromEeprom@TempNormalAdd:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x24
   728  000025                     	ds	1
   729  000026                     Lcd_WriteChar@data:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x25
   733  000026                     	ds	1
   734  000027                     ReadGPSDateTime@TempChar:
   735                           	opt stack 0
   736  000027                     WriteLongInt@x:
   737                           	opt stack 0
   738  000027                     LoadStatesFromEeprom@TempSpecialAdd:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x26
   742  000027                     	ds	1
   743  000028                     ReadGPSDateTime@Pos:
   744                           	opt stack 0
   745  000028                     WriteLongInt@Val:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x27
   749  000028                     	ds	1
   750  000029                     LoadStatesFromEeprom@AudAddInc:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x28
   754  000029                     	ds	1
   755  00002A                     LoadStatesFromEeprom@j:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x29
   759  00002A                     	ds	2
   760  00002C                     WriteLongInt@size:
   761                           	opt stack 0
   762  00002C                     LoadStatesFromEeprom@j_1155:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x2B
   766  00002C                     	ds	1
   767  00002D                     GetDay@d:
   768                           	opt stack 0
   769  00002D                     WriteLongInt@Sign:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x2C
   773  00002D                     	ds	1
   774  00002E                     GetDay@m:
   775                           	opt stack 0
   776  00002E                     WriteLongInt@POS:
   777                           	opt stack 0
   778  00002E                     LoadStatesFromEeprom@AddStates:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x2D
   782  00002E                     	ds	1
   783  00002F                     WriteLongInt@y:
   784                           	opt stack 0
   785  00002F                     GetDay@y:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x2E
   789  00002F                     	ds	1
   790  000030                     LoadStatesFromEeprom@i:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x2F
   794  000030                     	ds	1
   795  000031                     Lcd_Int@x:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x30
   799  000031                     	ds	1
   800  000032                     Lcd_Int@val:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x31
   804  000032                     	ds	1
   805  000033                     Lcd_Int@size:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x32
   809  000033                     	ds	1
   810  000034                     tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           postdec1	equ	0xFE5
   817                           fsr1h	equ	0xFE2
   818                           fsr1l	equ	0xFE1
   819                           
   820                           ; 1 bytes @ 0x33
   821 ;;
   822 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   823 ;;
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 53 in file "main.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  Date            7   12[BANK0 ] unsigned char [7]
   831 ;;  Time            7    5[BANK0 ] unsigned char [7]
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   842 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   843 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   845 ;;Total ram usage:       15 bytes
   846 ;; Hardware stack levels required when called:    9
   847 ;; This function calls:
   848 ;;		_EUSART1_Initialize
   849 ;;		_GetDay
   850 ;;		_Lcd_Init
   851 ;;		_Lcd_Int
   852 ;;		_Lcd_Text
   853 ;;		_LoadAllFromEeprom
   854 ;;		_ReadGPSDateTime
   855 ;;		_SYSTEM_Initialize
   856 ;;		_TMR0_SetInterruptHandler
   857 ;;		_ValidateDateTime
   858 ;;		_WriteLongInt
   859 ;; This function is called by:
   860 ;;		Startup code after reset
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text0
   865  0018A8                     __ptext0:
   866                           	opt stack 0
   867  0018A8                     _main:
   868                           	opt stack 22
   869                           
   870                           ;main.c: 56: SYSTEM_Initialize();
   871                           
   872                           ;incstack = 0
   873  0018A8  ECB0  F012         	call	_SYSTEM_Initialize	;wreg free
   874                           
   875                           ;main.c: 87: (INTCONbits.GIE = 1);
   876  0018AC  8EF2               	bsf	intcon,7,c	;volatile
   877                           
   878                           ;main.c: 88: (INTCONbits.PEIE = 1);
   879  0018AE  8CF2               	bsf	intcon,6,c	;volatile
   880                           
   881                           ;main.c: 89: TMR0_SetInterruptHandler(Timer0_10ms);
   882  0018B0  0E6C               	movlw	low _Timer0_10ms
   883  0018B2  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   884  0018B4  0E24               	movlw	high _Timer0_10ms
   885  0018B6  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   886  0018B8  ECE9  F012         	call	_TMR0_SetInterruptHandler	;wreg free
   887                           
   888                           ;main.c: 92: Lcd_Init();
   889  0018BC  EC82  F00F         	call	_Lcd_Init	;wreg free
   890                           
   891                           ;main.c: 94: LATCbits.LC1=ON;
   892  0018C0  8285               	bsf	3973,1,c	;volatile
   893                           
   894                           ;main.c: 95: char Date[] = "------";
   895  0018C2  EE20  F0D1         	lfsr	2,main@F11390
   896  0018C6  EE10  F0E4         	lfsr	1,main@Date
   897  0018CA  0E06               	movlw	6
   898  0018CC                     u3281:
   899  0018CC  CFDB FFE3          	movff	plusw2,plusw1
   900  0018D0  06E8               	decf	wreg,f,c
   901  0018D2  E2FC               	bc	u3281
   902                           
   903                           ;main.c: 96: char Time[] = "------";
   904  0018D4  EE20  F0CA         	lfsr	2,main@F11392
   905  0018D8  EE10  F0DD         	lfsr	1,main@Time
   906  0018DC  0E06               	movlw	6
   907  0018DE                     u3291:
   908  0018DE  CFDB FFE3          	movff	plusw2,plusw1
   909  0018E2  06E8               	decf	wreg,f,c
   910  0018E4  E2FC               	bc	u3291
   911                           
   912                           ;main.c: 97: LoadAllFromEeprom();
   913  0018E6  ECE2  F012         	call	_LoadAllFromEeprom	;wreg free
   914  0018EA                     l4107:
   915                           
   916                           ;main.c: 100: {
   917                           ;main.c: 103: Date[0] = 0x3A;
   918  0018EA  0E3A               	movlw	58
   919  0018EC  0100               	movlb	0	; () banked
   920  0018EE  6FE4               	movwf	main@Date& (0+255),b
   921                           
   922                           ; BSR set to: 0
   923                           ;main.c: 104: Time[0] = 0x3A;
   924  0018F0  0E3A               	movlw	58
   925  0018F2  0100               	movlb	0	; () banked
   926  0018F4  6FDD               	movwf	main@Time& (0+255),b
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 105: EUSART1_Initialize();
   930  0018F6  ECBB  F012         	call	_EUSART1_Initialize	;wreg free
   931                           
   932                           ;main.c: 106: ReadGPSDateTime(Date, Time);
   933  0018FA  0EE4               	movlw	low main@Date
   934  0018FC  6E15               	movwf	ReadGPSDateTime@Date,c
   935  0018FE  0E00               	movlw	high main@Date
   936  001900  6E16               	movwf	ReadGPSDateTime@Date+1,c
   937  001902  0EDD               	movlw	low main@Time
   938  001904  6E17               	movwf	ReadGPSDateTime@Time,c
   939  001906  0E00               	movlw	high main@Time
   940  001908  6E18               	movwf	ReadGPSDateTime@Time+1,c
   941  00190A  ECF4  F00C         	call	_ReadGPSDateTime	;wreg free
   942                           
   943                           ;main.c: 108: Lcd_Text(2,1, Time);
   944  00190E  0E01               	movlw	1
   945  001910  6E18               	movwf	Lcd_Text@x,c
   946  001912  0EDD               	movlw	low main@Time
   947  001914  6E19               	movwf	Lcd_Text@buffer,c
   948  001916  0E00               	movlw	high main@Time
   949  001918  6E1A               	movwf	Lcd_Text@buffer+1,c
   950  00191A  0E02               	movlw	2
   951  00191C  EC91  F010         	call	_Lcd_Text
   952                           
   953                           ;main.c: 109: Lcd_Text(2,7, "-");
   954  001920  0E07               	movlw	7
   955  001922  6E18               	movwf	Lcd_Text@x,c
   956  001924  0E16               	movlw	low (STR_2+1)
   957  001926  6E19               	movwf	Lcd_Text@buffer,c
   958  001928  0E0F               	movlw	high (STR_2+1)
   959  00192A  6E1A               	movwf	Lcd_Text@buffer+1,c
   960  00192C  0E02               	movlw	2
   961  00192E  EC91  F010         	call	_Lcd_Text
   962                           
   963                           ;main.c: 110: Lcd_Text(2,8, Date);
   964  001932  0E08               	movlw	8
   965  001934  6E18               	movwf	Lcd_Text@x,c
   966  001936  0EE4               	movlw	low main@Date
   967  001938  6E19               	movwf	Lcd_Text@buffer,c
   968  00193A  0E00               	movlw	high main@Date
   969  00193C  6E1A               	movwf	Lcd_Text@buffer+1,c
   970  00193E  0E02               	movlw	2
   971  001940  EC91  F010         	call	_Lcd_Text
   972                           
   973                           ;main.c: 111: Lcd_Text(2,14, "--");
   974  001944  0E0E               	movlw	14
   975  001946  6E18               	movwf	Lcd_Text@x,c
   976  001948  0E15               	movlw	low STR_2
   977  00194A  6E19               	movwf	Lcd_Text@buffer,c
   978  00194C  0E0F               	movlw	high STR_2
   979  00194E  6E1A               	movwf	Lcd_Text@buffer+1,c
   980  001950  0E02               	movlw	2
   981  001952  EC91  F010         	call	_Lcd_Text
   982                           
   983                           ;main.c: 112: Lcd_Int(1, 14, GLOBAL_I, 3);
   984  001956  0E0E               	movlw	14
   985  001958  6E31               	movwf	Lcd_Int@x,c
   986  00195A  C03E  F032         	movff	_GLOBAL_I,Lcd_Int@val
   987  00195E  0E03               	movlw	3
   988  001960  6E33               	movwf	Lcd_Int@size,c
   989  001962  0E01               	movlw	1
   990  001964  EC9A  F00E         	call	_Lcd_Int
   991                           
   992                           ;main.c: 113: if (ValidateDateTime(Date, Time)) {
   993  001968  0EE4               	movlw	low main@Date
   994  00196A  6E15               	movwf	ValidateDateTime@Date,c
   995  00196C  0E00               	movlw	high main@Date
   996  00196E  6E16               	movwf	ValidateDateTime@Date+1,c
   997  001970  0EDD               	movlw	low main@Time
   998  001972  6E17               	movwf	ValidateDateTime@Time,c
   999  001974  0E00               	movlw	high main@Time
  1000  001976  6E18               	movwf	ValidateDateTime@Time+1,c
  1001  001978  ECD5  F00A         	call	_ValidateDateTime	;wreg free
  1002  00197C  0900               	iorlw	0
  1003  00197E  B4D8               	btfsc	status,2,c
  1004  001980  D018               	goto	l4131
  1005                           
  1006                           ;main.c: 114: Lcd_Text(1, 1, ":)");
  1007  001982  0E01               	movlw	1
  1008  001984  6E18               	movwf	Lcd_Text@x,c
  1009  001986  0E12               	movlw	low STR_3
  1010  001988  6E19               	movwf	Lcd_Text@buffer,c
  1011  00198A  0E0F               	movlw	high STR_3
  1012  00198C  6E1A               	movwf	Lcd_Text@buffer+1,c
  1013  00198E  0E01               	movlw	1
  1014  001990  EC91  F010         	call	_Lcd_Text
  1015                           
  1016                           ;main.c: 115: Lcd_Int(2, 16, GetDay(Date), 1);
  1017  001994  0E10               	movlw	16
  1018  001996  6E31               	movwf	Lcd_Int@x,c
  1019  001998  0EE4               	movlw	low main@Date
  1020  00199A  6E23               	movwf	GetDay@Date,c
  1021  00199C  0E00               	movlw	high main@Date
  1022  00199E  6E24               	movwf	GetDay@Date+1,c
  1023  0019A0  EC99  F00B         	call	_GetDay	;wreg free
  1024  0019A4  6E32               	movwf	Lcd_Int@val,c
  1025  0019A6  0E01               	movlw	1
  1026  0019A8  6E33               	movwf	Lcd_Int@size,c
  1027  0019AA  0E02               	movlw	2
  1028  0019AC  EC9A  F00E         	call	_Lcd_Int
  1029                           
  1030                           ;main.c: 116: } else {
  1031  0019B0  D009               	goto	l4133
  1032  0019B2                     l4131:
  1033                           
  1034                           ;main.c: 117: Lcd_Text(1, 1, ":(");
  1035  0019B2  0E01               	movlw	1
  1036  0019B4  6E18               	movwf	Lcd_Text@x,c
  1037  0019B6  0E0F               	movlw	low STR_4
  1038  0019B8  6E19               	movwf	Lcd_Text@buffer,c
  1039  0019BA  0E0F               	movlw	high STR_4
  1040  0019BC  6E1A               	movwf	Lcd_Text@buffer+1,c
  1041  0019BE  0E01               	movlw	1
  1042  0019C0  EC91  F010         	call	_Lcd_Text
  1043  0019C4                     l4133:
  1044                           
  1045                           ;main.c: 118: }
  1046                           ;main.c: 119: WriteLongInt(1, 4, STATES[2].AUDIO, 5,1);
  1047  0019C4  0E04               	movlw	4
  1048  0019C6  6E27               	movwf	WriteLongInt@x,c
  1049  0019C8  C201  F0DC         	movff	_STATES+17,??_main
  1050  0019CC  0100               	movlb	0	; () banked
  1051  0019CE  51DC               	movf	??_main& (0+255),w,b
  1052  0019D0  6E28               	movwf	WriteLongInt@Val,c
  1053  0019D2  6A29               	clrf	WriteLongInt@Val+1,c
  1054  0019D4  6A2A               	clrf	WriteLongInt@Val+2,c
  1055  0019D6  6A2B               	clrf	WriteLongInt@Val+3,c
  1056  0019D8  0E05               	movlw	5
  1057  0019DA  6E2C               	movwf	WriteLongInt@size,c
  1058  0019DC  0E01               	movlw	1
  1059  0019DE  6E2D               	movwf	WriteLongInt@Sign,c
  1060  0019E0  0E01               	movlw	1
  1061  0019E2  ECE3  F00F         	call	_WriteLongInt
  1062  0019E6  D781               	goto	l4107
  1063  0019E8                     __end_of_main:
  1064                           	opt stack 0
  1065                           tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           intcon	equ	0xFF2
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           postdec1	equ	0xFE5
  1073                           plusw1	equ	0xFE3
  1074                           fsr1h	equ	0xFE2
  1075                           fsr1l	equ	0xFE1
  1076                           plusw2	equ	0xFDB
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _WriteLongInt *****************
  1080 ;; Defined at:
  1081 ;;		line 183 in file "libs/HD44780.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  y               1    wreg     unsigned char 
  1084 ;;  x               1   38[COMRAM] unsigned char 
  1085 ;;  Val             4   39[COMRAM] long 
  1086 ;;  size            1   43[COMRAM] char 
  1087 ;;  Sign            1   44[COMRAM] unsigned char 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  y               1   46[COMRAM] unsigned char 
  1090 ;;  POS             1   45[COMRAM] char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1100 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;Total ram usage:        9 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    8
  1107 ;; This function calls:
  1108 ;;		_Lcd_WriteChar
  1109 ;;		___aldiv
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text1
  1116  001FC6                     __ptext1:
  1117                           	opt stack 0
  1118  001FC6                     _WriteLongInt:
  1119                           	opt stack 22
  1120                           
  1121                           ;incstack = 0
  1122                           ;WriteLongInt@y stored from wreg
  1123  001FC6  6E2F               	movwf	WriteLongInt@y,c
  1124                           
  1125                           ;HD44780.c: 184: int8_t POS = 0;
  1126  001FC8  0E00               	movlw	0
  1127  001FCA  6E2E               	movwf	WriteLongInt@POS,c
  1128                           
  1129                           ;HD44780.c: 185: if (Sign) {
  1130  001FCC  502D               	movf	WriteLongInt@Sign,w,c
  1131  001FCE  B4D8               	btfsc	status,2,c
  1132  001FD0  D056               	goto	l3989
  1133                           
  1134                           ;HD44780.c: 186: POS++;
  1135  001FD2  2A2E               	incf	WriteLongInt@POS,f,c
  1136                           
  1137                           ;HD44780.c: 187: if (Val<0) {
  1138  001FD4  AE2B               	btfss	WriteLongInt@Val+3,7,c
  1139  001FD6  D010               	goto	l3981
  1140                           
  1141                           ;HD44780.c: 188: Lcd_WriteChar (y, x, 0x2D);
  1142  001FD8  C027  F023         	movff	WriteLongInt@x,Lcd_WriteChar@x
  1143  001FDC  0E2D               	movlw	45
  1144  001FDE  6E24               	movwf	Lcd_WriteChar@c,c
  1145  001FE0  502F               	movf	WriteLongInt@y,w,c
  1146  001FE2  ECF3  F011         	call	_Lcd_WriteChar
  1147                           
  1148                           ;HD44780.c: 189: Val=-1*Val;
  1149  001FE6  1E2B               	comf	WriteLongInt@Val+3,f,c
  1150  001FE8  1E2A               	comf	WriteLongInt@Val+2,f,c
  1151  001FEA  1E29               	comf	WriteLongInt@Val+1,f,c
  1152  001FEC  6C28               	negf	WriteLongInt@Val,c
  1153  001FEE  0E00               	movlw	0
  1154  001FF0  2229               	addwfc	WriteLongInt@Val+1,f,c
  1155  001FF2  222A               	addwfc	WriteLongInt@Val+2,f,c
  1156  001FF4  222B               	addwfc	WriteLongInt@Val+3,f,c
  1157                           
  1158                           ;HD44780.c: 190: } else
  1159  001FF6  D043               	goto	l3989
  1160  001FF8                     l3981:
  1161                           
  1162                           ;HD44780.c: 191: Lcd_WriteChar (y, x, 0x2B);
  1163  001FF8  C027  F023         	movff	WriteLongInt@x,Lcd_WriteChar@x
  1164  001FFC  0E2B               	movlw	43
  1165  001FFE  6E24               	movwf	Lcd_WriteChar@c,c
  1166  002000  502F               	movf	WriteLongInt@y,w,c
  1167  002002  ECF3  F011         	call	_Lcd_WriteChar
  1168                           
  1169                           ;HD44780.c: 192: }
  1170                           ;HD44780.c: 193: while(size) {
  1171  002006  D03B               	goto	l3989
  1172  002008                     l3983:
  1173                           
  1174                           ;HD44780.c: 194: size--;
  1175  002008  062C               	decf	WriteLongInt@size,f,c
  1176                           
  1177                           ;HD44780.c: 195: Lcd_WriteChar (y, x+size+POS, ((Val - ((Val/10)*10))+0x30));
  1178  00200A  5027               	movf	WriteLongInt@x,w,c
  1179  00200C  242C               	addwf	WriteLongInt@size,w,c
  1180  00200E  242E               	addwf	WriteLongInt@POS,w,c
  1181  002010  6E23               	movwf	Lcd_WriteChar@x,c
  1182  002012  C028  F015         	movff	WriteLongInt@Val,___aldiv@dividend
  1183  002016  C029  F016         	movff	WriteLongInt@Val+1,___aldiv@dividend+1
  1184  00201A  C02A  F017         	movff	WriteLongInt@Val+2,___aldiv@dividend+2
  1185  00201E  C02B  F018         	movff	WriteLongInt@Val+3,___aldiv@dividend+3
  1186  002022  0E0A               	movlw	10
  1187  002024  6E19               	movwf	___aldiv@divisor,c
  1188  002026  0E00               	movlw	0
  1189  002028  6E1A               	movwf	___aldiv@divisor+1,c
  1190  00202A  0E00               	movlw	0
  1191  00202C  6E1B               	movwf	___aldiv@divisor+2,c
  1192  00202E  0E00               	movlw	0
  1193  002030  6E1C               	movwf	___aldiv@divisor+3,c
  1194  002032  EC1C  F00F         	call	___aldiv	;wreg free
  1195  002036  5015               	movf	?___aldiv,w,c
  1196  002038  0D0A               	mullw	10
  1197  00203A  50F3               	movf	prodl,w,c
  1198  00203C  0800               	sublw	0
  1199  00203E  2428               	addwf	WriteLongInt@Val,w,c
  1200  002040  0F30               	addlw	48
  1201  002042  6E24               	movwf	Lcd_WriteChar@c,c
  1202  002044  502F               	movf	WriteLongInt@y,w,c
  1203  002046  ECF3  F011         	call	_Lcd_WriteChar
  1204                           
  1205                           ;HD44780.c: 196: Val = Val/10;
  1206  00204A  C028  F015         	movff	WriteLongInt@Val,___aldiv@dividend
  1207  00204E  C029  F016         	movff	WriteLongInt@Val+1,___aldiv@dividend+1
  1208  002052  C02A  F017         	movff	WriteLongInt@Val+2,___aldiv@dividend+2
  1209  002056  C02B  F018         	movff	WriteLongInt@Val+3,___aldiv@dividend+3
  1210  00205A  0E0A               	movlw	10
  1211  00205C  6E19               	movwf	___aldiv@divisor,c
  1212  00205E  0E00               	movlw	0
  1213  002060  6E1A               	movwf	___aldiv@divisor+1,c
  1214  002062  0E00               	movlw	0
  1215  002064  6E1B               	movwf	___aldiv@divisor+2,c
  1216  002066  0E00               	movlw	0
  1217  002068  6E1C               	movwf	___aldiv@divisor+3,c
  1218  00206A  EC1C  F00F         	call	___aldiv	;wreg free
  1219  00206E  C015  F028         	movff	?___aldiv,WriteLongInt@Val
  1220  002072  C016  F029         	movff	?___aldiv+1,WriteLongInt@Val+1
  1221  002076  C017  F02A         	movff	?___aldiv+2,WriteLongInt@Val+2
  1222  00207A  C018  F02B         	movff	?___aldiv+3,WriteLongInt@Val+3
  1223  00207E                     l3989:
  1224  00207E  502C               	movf	WriteLongInt@size,w,c
  1225  002080  B4D8               	btfsc	status,2,c
  1226  002082  0012               	return	
  1227  002084  D7C1               	goto	l3983
  1228  002086                     __end_of_WriteLongInt:
  1229                           	opt stack 0
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           prodl	equ	0xFF3
  1235                           intcon	equ	0xFF2
  1236                           postinc0	equ	0xFEE
  1237                           wreg	equ	0xFE8
  1238                           postdec1	equ	0xFE5
  1239                           plusw1	equ	0xFE3
  1240                           fsr1h	equ	0xFE2
  1241                           fsr1l	equ	0xFE1
  1242                           plusw2	equ	0xFDB
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function ___aldiv *****************
  1246 ;; Defined at:
  1247 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  dividend        4   20[COMRAM] long 
  1250 ;;  divisor         4   24[COMRAM] long 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  quotient        4   30[COMRAM] long 
  1253 ;;  sign            1   29[COMRAM] unsigned char 
  1254 ;;  counter         1   28[COMRAM] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  4   20[COMRAM] long 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1264 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1265 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1268 ;;Total ram usage:       14 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    5
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_WriteLongInt
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text2
  1279  001E38                     __ptext2:
  1280                           	opt stack 0
  1281  001E38                     ___aldiv:
  1282                           	opt stack 24
  1283                           
  1284                           ;incstack = 0
  1285  001E38  0E00               	movlw	0
  1286  001E3A  6E1E               	movwf	___aldiv@sign,c
  1287  001E3C  AE1C               	btfss	___aldiv@divisor+3,7,c
  1288  001E3E  D00A               	goto	l3635
  1289  001E40  1E1C               	comf	___aldiv@divisor+3,f,c
  1290  001E42  1E1B               	comf	___aldiv@divisor+2,f,c
  1291  001E44  1E1A               	comf	___aldiv@divisor+1,f,c
  1292  001E46  6C19               	negf	___aldiv@divisor,c
  1293  001E48  0E00               	movlw	0
  1294  001E4A  221A               	addwfc	___aldiv@divisor+1,f,c
  1295  001E4C  221B               	addwfc	___aldiv@divisor+2,f,c
  1296  001E4E  221C               	addwfc	___aldiv@divisor+3,f,c
  1297  001E50  0E01               	movlw	1
  1298  001E52  6E1E               	movwf	___aldiv@sign,c
  1299  001E54                     l3635:
  1300  001E54  AE18               	btfss	___aldiv@dividend+3,7,c
  1301  001E56  D00A               	goto	l3641
  1302  001E58  1E18               	comf	___aldiv@dividend+3,f,c
  1303  001E5A  1E17               	comf	___aldiv@dividend+2,f,c
  1304  001E5C  1E16               	comf	___aldiv@dividend+1,f,c
  1305  001E5E  6C15               	negf	___aldiv@dividend,c
  1306  001E60  0E00               	movlw	0
  1307  001E62  2216               	addwfc	___aldiv@dividend+1,f,c
  1308  001E64  2217               	addwfc	___aldiv@dividend+2,f,c
  1309  001E66  2218               	addwfc	___aldiv@dividend+3,f,c
  1310  001E68  0E01               	movlw	1
  1311  001E6A  1A1E               	xorwf	___aldiv@sign,f,c
  1312  001E6C                     l3641:
  1313  001E6C  0E00               	movlw	0
  1314  001E6E  6E1F               	movwf	___aldiv@quotient,c
  1315  001E70  0E00               	movlw	0
  1316  001E72  6E20               	movwf	___aldiv@quotient+1,c
  1317  001E74  0E00               	movlw	0
  1318  001E76  6E21               	movwf	___aldiv@quotient+2,c
  1319  001E78  0E00               	movlw	0
  1320  001E7A  6E22               	movwf	___aldiv@quotient+3,c
  1321  001E7C  5019               	movf	___aldiv@divisor,w,c
  1322  001E7E  101A               	iorwf	___aldiv@divisor+1,w,c
  1323  001E80  101B               	iorwf	___aldiv@divisor+2,w,c
  1324  001E82  101C               	iorwf	___aldiv@divisor+3,w,c
  1325  001E84  B4D8               	btfsc	status,2,c
  1326  001E86  D02A               	goto	l3663
  1327  001E88  0E01               	movlw	1
  1328  001E8A  6E1D               	movwf	___aldiv@counter,c
  1329  001E8C  D006               	goto	l3649
  1330  001E8E                     l3647:
  1331  001E8E  90D8               	bcf	status,0,c
  1332  001E90  3619               	rlcf	___aldiv@divisor,f,c
  1333  001E92  361A               	rlcf	___aldiv@divisor+1,f,c
  1334  001E94  361B               	rlcf	___aldiv@divisor+2,f,c
  1335  001E96  361C               	rlcf	___aldiv@divisor+3,f,c
  1336  001E98  2A1D               	incf	___aldiv@counter,f,c
  1337  001E9A                     l3649:
  1338  001E9A  AE1C               	btfss	___aldiv@divisor+3,7,c
  1339  001E9C  D7F8               	goto	l3647
  1340  001E9E                     l3651:
  1341  001E9E  90D8               	bcf	status,0,c
  1342  001EA0  361F               	rlcf	___aldiv@quotient,f,c
  1343  001EA2  3620               	rlcf	___aldiv@quotient+1,f,c
  1344  001EA4  3621               	rlcf	___aldiv@quotient+2,f,c
  1345  001EA6  3622               	rlcf	___aldiv@quotient+3,f,c
  1346  001EA8  5019               	movf	___aldiv@divisor,w,c
  1347  001EAA  5C15               	subwf	___aldiv@dividend,w,c
  1348  001EAC  501A               	movf	___aldiv@divisor+1,w,c
  1349  001EAE  5816               	subwfb	___aldiv@dividend+1,w,c
  1350  001EB0  501B               	movf	___aldiv@divisor+2,w,c
  1351  001EB2  5817               	subwfb	___aldiv@dividend+2,w,c
  1352  001EB4  501C               	movf	___aldiv@divisor+3,w,c
  1353  001EB6  5818               	subwfb	___aldiv@dividend+3,w,c
  1354  001EB8  A0D8               	btfss	status,0,c
  1355  001EBA  D009               	goto	l3659
  1356  001EBC  5019               	movf	___aldiv@divisor,w,c
  1357  001EBE  5E15               	subwf	___aldiv@dividend,f,c
  1358  001EC0  501A               	movf	___aldiv@divisor+1,w,c
  1359  001EC2  5A16               	subwfb	___aldiv@dividend+1,f,c
  1360  001EC4  501B               	movf	___aldiv@divisor+2,w,c
  1361  001EC6  5A17               	subwfb	___aldiv@dividend+2,f,c
  1362  001EC8  501C               	movf	___aldiv@divisor+3,w,c
  1363  001ECA  5A18               	subwfb	___aldiv@dividend+3,f,c
  1364  001ECC  801F               	bsf	___aldiv@quotient,0,c
  1365  001ECE                     l3659:
  1366  001ECE  90D8               	bcf	status,0,c
  1367  001ED0  321C               	rrcf	___aldiv@divisor+3,f,c
  1368  001ED2  321B               	rrcf	___aldiv@divisor+2,f,c
  1369  001ED4  321A               	rrcf	___aldiv@divisor+1,f,c
  1370  001ED6  3219               	rrcf	___aldiv@divisor,f,c
  1371  001ED8  2E1D               	decfsz	___aldiv@counter,f,c
  1372  001EDA  D7E1               	goto	l3651
  1373  001EDC                     l3663:
  1374  001EDC  501E               	movf	___aldiv@sign,w,c
  1375  001EDE  B4D8               	btfsc	status,2,c
  1376  001EE0  D008               	goto	l3667
  1377  001EE2  1E22               	comf	___aldiv@quotient+3,f,c
  1378  001EE4  1E21               	comf	___aldiv@quotient+2,f,c
  1379  001EE6  1E20               	comf	___aldiv@quotient+1,f,c
  1380  001EE8  6C1F               	negf	___aldiv@quotient,c
  1381  001EEA  0E00               	movlw	0
  1382  001EEC  2220               	addwfc	___aldiv@quotient+1,f,c
  1383  001EEE  2221               	addwfc	___aldiv@quotient+2,f,c
  1384  001EF0  2222               	addwfc	___aldiv@quotient+3,f,c
  1385  001EF2                     l3667:
  1386  001EF2  C01F  F015         	movff	___aldiv@quotient,?___aldiv
  1387  001EF6  C020  F016         	movff	___aldiv@quotient+1,?___aldiv+1
  1388  001EFA  C021  F017         	movff	___aldiv@quotient+2,?___aldiv+2
  1389  001EFE  C022  F018         	movff	___aldiv@quotient+3,?___aldiv+3
  1390  001F02  0012               	return	
  1391  001F04                     __end_of___aldiv:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           prodl	equ	0xFF3
  1398                           intcon	equ	0xFF2
  1399                           postinc0	equ	0xFEE
  1400                           wreg	equ	0xFE8
  1401                           postdec1	equ	0xFE5
  1402                           plusw1	equ	0xFE3
  1403                           fsr1h	equ	0xFE2
  1404                           fsr1l	equ	0xFE1
  1405                           plusw2	equ	0xFDB
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _Lcd_WriteChar *****************
  1409 ;; Defined at:
  1410 ;;		line 99 in file "libs/HD44780.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  y               1    wreg     unsigned char 
  1413 ;;  x               1   34[COMRAM] unsigned char 
  1414 ;;  c               1   35[COMRAM] unsigned char 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  y               1   36[COMRAM] unsigned char 
  1417 ;;  data            1   37[COMRAM] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1431 ;;Total ram usage:        4 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    7
  1434 ;; This function calls:
  1435 ;;		_Lcd_CharCP
  1436 ;;		_Lcd_Command
  1437 ;; This function is called by:
  1438 ;;		_WriteLongInt
  1439 ;;		_Lcd_Disp_Bin
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text3
  1444  0023E6                     __ptext3:
  1445                           	opt stack 0
  1446  0023E6                     _Lcd_WriteChar:
  1447                           	opt stack 22
  1448                           
  1449                           ;incstack = 0
  1450                           ;Lcd_WriteChar@y stored from wreg
  1451  0023E6  6E25               	movwf	Lcd_WriteChar@y,c
  1452                           
  1453                           ;HD44780.c: 100: unsigned char data;
  1454                           ;HD44780.c: 101: switch(y) {
  1455  0023E8  D00D               	goto	l3403
  1456  0023EA                     l3393:
  1457  0023EA  5023               	movf	Lcd_WriteChar@x,w,c
  1458  0023EC  0F7F               	addlw	127
  1459  0023EE  D008               	goto	L3
  1460  0023F0                     l3395:
  1461  0023F0  5023               	movf	Lcd_WriteChar@x,w,c
  1462  0023F2  0FBF               	addlw	191
  1463  0023F4  D005               	goto	L3
  1464  0023F6                     l3397:
  1465  0023F6  5023               	movf	Lcd_WriteChar@x,w,c
  1466  0023F8  0F93               	addlw	147
  1467  0023FA  D002               	goto	L3
  1468  0023FC                     l3399:
  1469  0023FC  5023               	movf	Lcd_WriteChar@x,w,c
  1470  0023FE  0FD3               	addlw	211
  1471  002400                     L3:
  1472  002400  6E26               	movwf	Lcd_WriteChar@data,c
  1473                           
  1474                           ;HD44780.c: 107: }
  1475                           
  1476                           ;HD44780.c: 106: default: break;
  1477  002402  D00D               	goto	l3405
  1478  002404                     l3403:
  1479  002404  5025               	movf	Lcd_WriteChar@y,w,c
  1480                           
  1481                           ; Switch size 1, requested type "space"
  1482                           ; Number of cases is 4, Range of values is 1 to 4
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           13     7 (average)
  1486                           ;	Chosen strategy is simple_byte
  1487  002406  0A01               	xorlw	1	; case 1
  1488  002408  B4D8               	btfsc	status,2,c
  1489  00240A  D7EF               	goto	l3393
  1490  00240C  0A03               	xorlw	3	; case 2
  1491  00240E  B4D8               	btfsc	status,2,c
  1492  002410  D7EF               	goto	l3395
  1493  002412  0A01               	xorlw	1	; case 3
  1494  002414  B4D8               	btfsc	status,2,c
  1495  002416  D7EF               	goto	l3397
  1496  002418  0A07               	xorlw	7	; case 4
  1497  00241A  B4D8               	btfsc	status,2,c
  1498  00241C  D7EF               	goto	l3399
  1499  00241E                     l3405:
  1500                           
  1501                           ;HD44780.c: 108: Lcd_Command(data);
  1502  00241E  5026               	movf	Lcd_WriteChar@data,w,c
  1503  002420  EC0F  F00E         	call	_Lcd_Command
  1504                           
  1505                           ;HD44780.c: 109: Lcd_CharCP(c);
  1506  002424  5024               	movf	Lcd_WriteChar@c,w,c
  1507  002426  EC84  F00D         	call	_Lcd_CharCP
  1508  00242A  0012               	return		;funcret
  1509  00242C                     __end_of_Lcd_WriteChar:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           prodl	equ	0xFF3
  1516                           intcon	equ	0xFF2
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           postdec1	equ	0xFE5
  1520                           plusw1	equ	0xFE3
  1521                           fsr1h	equ	0xFE2
  1522                           fsr1l	equ	0xFE1
  1523                           plusw2	equ	0xFDB
  1524                           status	equ	0xFD8
  1525                           
  1526 ;; *************** function _ValidateDateTime *****************
  1527 ;; Defined at:
  1528 ;;		line 137 in file "libs/gps.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  Date            2   20[COMRAM] PTR unsigned char 
  1531 ;;		 -> main@Date(7), 
  1532 ;;  Time            2   22[COMRAM] PTR unsigned char 
  1533 ;;		 -> main@Time(7), 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  Item            1   25[COMRAM] char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      enum E11037
  1538 ;; Registers used:
  1539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;Total ram usage:        6 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    5
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text4
  1560  0015AA                     __ptext4:
  1561                           	opt stack 0
  1562  0015AA                     _ValidateDateTime:
  1563                           	opt stack 25
  1564                           
  1565                           ;gps.c: 138: INT8 Item;
  1566                           ;gps.c: 145: Item = (Date[0]-0x30)*10 + (Date[1]-0x30);
  1567                           
  1568                           ;incstack = 0
  1569  0015AA  EE20 F001          	lfsr	2,1
  1570  0015AE  5015               	movf	ValidateDateTime@Date,w,c
  1571  0015B0  26D9               	addwf	fsr2l,f,c
  1572  0015B2  5016               	movf	ValidateDateTime@Date+1,w,c
  1573  0015B4  22DA               	addwfc	fsr2h,f,c
  1574  0015B6  50DF               	movf	indf2,w,c
  1575  0015B8  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1576  0015BA  C015  FFD9         	movff	ValidateDateTime@Date,fsr2l
  1577  0015BE  C016  FFDA         	movff	ValidateDateTime@Date+1,fsr2h
  1578  0015C2  50DF               	movf	indf2,w,c
  1579  0015C4  0FD0               	addlw	208
  1580  0015C6  0D0A               	mullw	10
  1581  0015C8  50F3               	movf	prodl,w,c
  1582  0015CA  2419               	addwf	??_ValidateDateTime,w,c
  1583  0015CC  0FD0               	addlw	208
  1584  0015CE  6E1A               	movwf	ValidateDateTime@Item,c
  1585                           
  1586                           ;gps.c: 146: if (Item<=0 || Item>31) return 0;
  1587  0015D0  501A               	movf	ValidateDateTime@Item,w,c
  1588  0015D2  0A80               	xorlw	128
  1589  0015D4  0F7F               	addlw	-129
  1590  0015D6  A0D8               	btfss	status,0,c
  1591  0015D8  D005               	goto	l3795
  1592  0015DA  501A               	movf	ValidateDateTime@Item,w,c
  1593  0015DC  0A80               	xorlw	128
  1594  0015DE  0F60               	addlw	-160
  1595  0015E0  A0D8               	btfss	status,0,c
  1596  0015E2  D002               	goto	l3799
  1597  0015E4                     l3795:
  1598  0015E4  0E00               	movlw	0
  1599  0015E6  0012               	return	
  1600  0015E8                     l3799:
  1601                           
  1602                           ;gps.c: 147: Item = (Date[2]-0x30)*10 + (Date[3]-0x30);
  1603  0015E8  EE20 F003          	lfsr	2,3
  1604  0015EC  5015               	movf	ValidateDateTime@Date,w,c
  1605  0015EE  26D9               	addwf	fsr2l,f,c
  1606  0015F0  5016               	movf	ValidateDateTime@Date+1,w,c
  1607  0015F2  22DA               	addwfc	fsr2h,f,c
  1608  0015F4  50DF               	movf	indf2,w,c
  1609  0015F6  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1610  0015F8  EE20 F002          	lfsr	2,2
  1611  0015FC  5015               	movf	ValidateDateTime@Date,w,c
  1612  0015FE  26D9               	addwf	fsr2l,f,c
  1613  001600  5016               	movf	ValidateDateTime@Date+1,w,c
  1614  001602  22DA               	addwfc	fsr2h,f,c
  1615  001604  50DF               	movf	indf2,w,c
  1616  001606  0FD0               	addlw	208
  1617  001608  0D0A               	mullw	10
  1618  00160A  50F3               	movf	prodl,w,c
  1619  00160C  2419               	addwf	??_ValidateDateTime,w,c
  1620  00160E  0FD0               	addlw	208
  1621  001610  6E1A               	movwf	ValidateDateTime@Item,c
  1622                           
  1623                           ;gps.c: 148: if (Item<=0 || Item>12) return 0;
  1624  001612  501A               	movf	ValidateDateTime@Item,w,c
  1625  001614  0A80               	xorlw	128
  1626  001616  0F7F               	addlw	-129
  1627  001618  A0D8               	btfss	status,0,c
  1628  00161A  D005               	goto	l3805
  1629  00161C  501A               	movf	ValidateDateTime@Item,w,c
  1630  00161E  0A80               	xorlw	128
  1631  001620  0F73               	addlw	-141
  1632  001622  A0D8               	btfss	status,0,c
  1633  001624  D002               	goto	l3809
  1634  001626                     l3805:
  1635  001626  0E00               	movlw	0
  1636  001628  0012               	return	
  1637  00162A                     l3809:
  1638                           
  1639                           ;gps.c: 149: Item = (Date[4]-0x30)*10 + (Date[5]-0x30);
  1640  00162A  EE20 F005          	lfsr	2,5
  1641  00162E  5015               	movf	ValidateDateTime@Date,w,c
  1642  001630  26D9               	addwf	fsr2l,f,c
  1643  001632  5016               	movf	ValidateDateTime@Date+1,w,c
  1644  001634  22DA               	addwfc	fsr2h,f,c
  1645  001636  50DF               	movf	indf2,w,c
  1646  001638  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1647  00163A  EE20 F004          	lfsr	2,4
  1648  00163E  5015               	movf	ValidateDateTime@Date,w,c
  1649  001640  26D9               	addwf	fsr2l,f,c
  1650  001642  5016               	movf	ValidateDateTime@Date+1,w,c
  1651  001644  22DA               	addwfc	fsr2h,f,c
  1652  001646  50DF               	movf	indf2,w,c
  1653  001648  0FD0               	addlw	208
  1654  00164A  0D0A               	mullw	10
  1655  00164C  50F3               	movf	prodl,w,c
  1656  00164E  2419               	addwf	??_ValidateDateTime,w,c
  1657  001650  0FD0               	addlw	208
  1658  001652  6E1A               	movwf	ValidateDateTime@Item,c
  1659                           
  1660                           ;gps.c: 150: if (Item<=0 || Item>99) return 0;
  1661  001654  501A               	movf	ValidateDateTime@Item,w,c
  1662  001656  0A80               	xorlw	128
  1663  001658  0F7F               	addlw	-129
  1664  00165A  A0D8               	btfss	status,0,c
  1665  00165C  D005               	goto	l3815
  1666  00165E  501A               	movf	ValidateDateTime@Item,w,c
  1667  001660  0A80               	xorlw	128
  1668  001662  0F1C               	addlw	-228
  1669  001664  A0D8               	btfss	status,0,c
  1670  001666  D002               	goto	l3819
  1671  001668                     l3815:
  1672  001668  0E00               	movlw	0
  1673  00166A  0012               	return	
  1674  00166C                     l3819:
  1675                           
  1676                           ;gps.c: 152: Item = (Time[0]-0x30)*10 + (Time[1]-0x30);
  1677  00166C  EE20 F001          	lfsr	2,1
  1678  001670  5017               	movf	ValidateDateTime@Time,w,c
  1679  001672  26D9               	addwf	fsr2l,f,c
  1680  001674  5018               	movf	ValidateDateTime@Time+1,w,c
  1681  001676  22DA               	addwfc	fsr2h,f,c
  1682  001678  50DF               	movf	indf2,w,c
  1683  00167A  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1684  00167C  C017  FFD9         	movff	ValidateDateTime@Time,fsr2l
  1685  001680  C018  FFDA         	movff	ValidateDateTime@Time+1,fsr2h
  1686  001684  50DF               	movf	indf2,w,c
  1687  001686  0FD0               	addlw	208
  1688  001688  0D0A               	mullw	10
  1689  00168A  50F3               	movf	prodl,w,c
  1690  00168C  2419               	addwf	??_ValidateDateTime,w,c
  1691  00168E  0FD0               	addlw	208
  1692  001690  6E1A               	movwf	ValidateDateTime@Item,c
  1693                           
  1694                           ;gps.c: 153: if (Item<=0 || Item>23) return 0;
  1695  001692  501A               	movf	ValidateDateTime@Item,w,c
  1696  001694  0A80               	xorlw	128
  1697  001696  0F7F               	addlw	-129
  1698  001698  A0D8               	btfss	status,0,c
  1699  00169A  D005               	goto	l3825
  1700  00169C  501A               	movf	ValidateDateTime@Item,w,c
  1701  00169E  0A80               	xorlw	128
  1702  0016A0  0F68               	addlw	-152
  1703  0016A2  A0D8               	btfss	status,0,c
  1704  0016A4  D002               	goto	l3829
  1705  0016A6                     l3825:
  1706  0016A6  0E00               	movlw	0
  1707  0016A8  0012               	return	
  1708  0016AA                     l3829:
  1709                           
  1710                           ;gps.c: 154: Item = (Time[2]-0x30)*10 + (Time[3]-0x30);
  1711  0016AA  EE20 F003          	lfsr	2,3
  1712  0016AE  5017               	movf	ValidateDateTime@Time,w,c
  1713  0016B0  26D9               	addwf	fsr2l,f,c
  1714  0016B2  5018               	movf	ValidateDateTime@Time+1,w,c
  1715  0016B4  22DA               	addwfc	fsr2h,f,c
  1716  0016B6  50DF               	movf	indf2,w,c
  1717  0016B8  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1718  0016BA  EE20 F002          	lfsr	2,2
  1719  0016BE  5017               	movf	ValidateDateTime@Time,w,c
  1720  0016C0  26D9               	addwf	fsr2l,f,c
  1721  0016C2  5018               	movf	ValidateDateTime@Time+1,w,c
  1722  0016C4  22DA               	addwfc	fsr2h,f,c
  1723  0016C6  50DF               	movf	indf2,w,c
  1724  0016C8  0FD0               	addlw	208
  1725  0016CA  0D0A               	mullw	10
  1726  0016CC  50F3               	movf	prodl,w,c
  1727  0016CE  2419               	addwf	??_ValidateDateTime,w,c
  1728  0016D0  0FD0               	addlw	208
  1729  0016D2  6E1A               	movwf	ValidateDateTime@Item,c
  1730                           
  1731                           ;gps.c: 155: if (Item<=0 || Item>59) return 0;
  1732  0016D4  501A               	movf	ValidateDateTime@Item,w,c
  1733  0016D6  0A80               	xorlw	128
  1734  0016D8  0F7F               	addlw	-129
  1735  0016DA  A0D8               	btfss	status,0,c
  1736  0016DC  D005               	goto	l3835
  1737  0016DE  501A               	movf	ValidateDateTime@Item,w,c
  1738  0016E0  0A80               	xorlw	128
  1739  0016E2  0F44               	addlw	-188
  1740  0016E4  A0D8               	btfss	status,0,c
  1741  0016E6  D002               	goto	l3839
  1742  0016E8                     l3835:
  1743  0016E8  0E00               	movlw	0
  1744  0016EA  0012               	return	
  1745  0016EC                     l3839:
  1746                           
  1747                           ;gps.c: 156: Item = (Time[4]-0x30)*10 + (Time[5]-0x30);
  1748  0016EC  EE20 F005          	lfsr	2,5
  1749  0016F0  5017               	movf	ValidateDateTime@Time,w,c
  1750  0016F2  26D9               	addwf	fsr2l,f,c
  1751  0016F4  5018               	movf	ValidateDateTime@Time+1,w,c
  1752  0016F6  22DA               	addwfc	fsr2h,f,c
  1753  0016F8  50DF               	movf	indf2,w,c
  1754  0016FA  6E19               	movwf	??_ValidateDateTime& (0+255),c
  1755  0016FC  EE20 F004          	lfsr	2,4
  1756  001700  5017               	movf	ValidateDateTime@Time,w,c
  1757  001702  26D9               	addwf	fsr2l,f,c
  1758  001704  5018               	movf	ValidateDateTime@Time+1,w,c
  1759  001706  22DA               	addwfc	fsr2h,f,c
  1760  001708  50DF               	movf	indf2,w,c
  1761  00170A  0FD0               	addlw	208
  1762  00170C  0D0A               	mullw	10
  1763  00170E  50F3               	movf	prodl,w,c
  1764  001710  2419               	addwf	??_ValidateDateTime,w,c
  1765  001712  0FD0               	addlw	208
  1766  001714  6E1A               	movwf	ValidateDateTime@Item,c
  1767                           
  1768                           ;gps.c: 157: if (Item<=0 || Item>59) return 0;
  1769  001716  501A               	movf	ValidateDateTime@Item,w,c
  1770  001718  0A80               	xorlw	128
  1771  00171A  0F7F               	addlw	-129
  1772  00171C  A0D8               	btfss	status,0,c
  1773  00171E  D005               	goto	l3845
  1774  001720  501A               	movf	ValidateDateTime@Item,w,c
  1775  001722  0A80               	xorlw	128
  1776  001724  0F44               	addlw	-188
  1777  001726  A0D8               	btfss	status,0,c
  1778  001728  D002               	goto	l3849
  1779  00172A                     l3845:
  1780  00172A  0E00               	movlw	0
  1781  00172C  0012               	return	
  1782  00172E                     l3849:
  1783                           
  1784                           ;gps.c: 159: return 1;
  1785  00172E  0E01               	movlw	1
  1786  001730  0012               	return	
  1787  001732                     __end_of_ValidateDateTime:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           prodl	equ	0xFF3
  1794                           intcon	equ	0xFF2
  1795                           postinc0	equ	0xFEE
  1796                           wreg	equ	0xFE8
  1797                           postdec1	equ	0xFE5
  1798                           plusw1	equ	0xFE3
  1799                           fsr1h	equ	0xFE2
  1800                           fsr1l	equ	0xFE1
  1801                           indf2	equ	0xFDF
  1802                           plusw2	equ	0xFDB
  1803                           fsr2h	equ	0xFDA
  1804                           fsr2l	equ	0xFD9
  1805                           status	equ	0xFD8
  1806                           
  1807 ;; *************** function _SYSTEM_Initialize *****************
  1808 ;; Defined at:
  1809 ;;		line 107 in file "mcc_generated_files/mcc.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    7
  1830 ;; This function calls:
  1831 ;;		_EUSART1_Initialize
  1832 ;;		_INTERRUPT_Initialize
  1833 ;;		_OSCILLATOR_Initialize
  1834 ;;		_PIN_MANAGER_Initialize
  1835 ;;		_TMR0_Initialize
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text5
  1842  002560                     __ptext5:
  1843                           	opt stack 0
  1844  002560                     _SYSTEM_Initialize:
  1845                           	opt stack 23
  1846                           
  1847                           ;mcc.c: 110: INTERRUPT_Initialize();
  1848                           
  1849                           ;incstack = 0
  1850  002560  ECF5  F012         	call	_INTERRUPT_Initialize	;wreg free
  1851                           
  1852                           ;mcc.c: 111: PIN_MANAGER_Initialize();
  1853  002564  EC43  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1854                           
  1855                           ;mcc.c: 112: OSCILLATOR_Initialize();
  1856  002568  EC7B  F012         	call	_OSCILLATOR_Initialize	;wreg free
  1857                           
  1858                           ;mcc.c: 113: TMR0_Initialize();
  1859  00256C  EC16  F012         	call	_TMR0_Initialize	;wreg free
  1860                           
  1861                           ;mcc.c: 114: EUSART1_Initialize();
  1862  002570  ECBB  F012         	call	_EUSART1_Initialize	;wreg free
  1863  002574  0012               	return		;funcret
  1864  002576                     __end_of_SYSTEM_Initialize:
  1865                           	opt stack 0
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           prodl	equ	0xFF3
  1871                           intcon	equ	0xFF2
  1872                           postinc0	equ	0xFEE
  1873                           wreg	equ	0xFE8
  1874                           postdec1	equ	0xFE5
  1875                           plusw1	equ	0xFE3
  1876                           fsr1h	equ	0xFE2
  1877                           fsr1l	equ	0xFE1
  1878                           indf2	equ	0xFDF
  1879                           plusw2	equ	0xFDB
  1880                           fsr2h	equ	0xFDA
  1881                           fsr2l	equ	0xFD9
  1882                           status	equ	0xFD8
  1883                           
  1884 ;; *************** function _TMR0_Initialize *****************
  1885 ;; Defined at:
  1886 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1904 ;;Total ram usage:        2 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    6
  1907 ;; This function calls:
  1908 ;;		_TMR0_SetInterruptHandler
  1909 ;;		_TMR0_StartTimer
  1910 ;; This function is called by:
  1911 ;;		_SYSTEM_Initialize
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text6
  1916  00242C                     __ptext6:
  1917                           	opt stack 0
  1918  00242C                     _TMR0_Initialize:
  1919                           	opt stack 23
  1920                           
  1921                           ;tmr0.c: 70: T0CON0 = 0x10;
  1922                           
  1923                           ;incstack = 0
  1924  00242C  0E10               	movlw	16
  1925  00242E  6ED5               	movwf	4053,c	;volatile
  1926                           
  1927                           ;tmr0.c: 73: T0CON1 = 0x50;
  1928  002430  0E50               	movlw	80
  1929  002432  6ED6               	movwf	4054,c	;volatile
  1930                           
  1931                           ;tmr0.c: 76: TMR0H = 0xF0;
  1932  002434  0EF0               	movlw	240
  1933  002436  6ED4               	movwf	4052,c	;volatile
  1934                           
  1935                           ;tmr0.c: 79: TMR0L = 0x60;
  1936  002438  0E60               	movlw	96
  1937  00243A  6ED3               	movwf	4051,c	;volatile
  1938                           
  1939                           ;tmr0.c: 82: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  1940  00243C  50D3               	movf	4051,w,c	;volatile
  1941  00243E  CFD4 F017          	movff	4052,??_TMR0_Initialize	;volatile
  1942  002442  6A18               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1943  002444  C017  F018         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1944  002448  6A17               	clrf	??_TMR0_Initialize,c
  1945  00244A  1017               	iorwf	??_TMR0_Initialize,w,c
  1946  00244C  6E38               	movwf	_timer0ReloadVal16bit,c	;volatile
  1947  00244E  5018               	movf	??_TMR0_Initialize+1,w,c
  1948  002450  6E39               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1949                           
  1950                           ;tmr0.c: 85: PIR0bits.TMR0IF = 0;
  1951  002452  010E               	movlb	14	; () banked
  1952  002454  9BCA               	bcf	202,5,b	;volatile
  1953                           
  1954                           ; BSR set to: 14
  1955                           ;tmr0.c: 88: PIE0bits.TMR0IE = 1;
  1956  002456  010E               	movlb	14	; () banked
  1957  002458  8BC2               	bsf	194,5,b	;volatile
  1958                           
  1959                           ; BSR set to: 14
  1960                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1961  00245A  0EF0               	movlw	low _TMR0_DefaultInterruptHandler
  1962  00245C  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1963  00245E  0E25               	movlw	high _TMR0_DefaultInterruptHandler
  1964  002460  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1965  002462  ECE9  F012         	call	_TMR0_SetInterruptHandler	;wreg free
  1966                           
  1967                           ;tmr0.c: 94: TMR0_StartTimer();
  1968  002466  ECF3  F012         	call	_TMR0_StartTimer	;wreg free
  1969  00246A  0012               	return		;funcret
  1970  00246C                     __end_of_TMR0_Initialize:
  1971                           	opt stack 0
  1972                           tblptru	equ	0xFF8
  1973                           tblptrh	equ	0xFF7
  1974                           tblptrl	equ	0xFF6
  1975                           tablat	equ	0xFF5
  1976                           prodl	equ	0xFF3
  1977                           intcon	equ	0xFF2
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           plusw1	equ	0xFE3
  1982                           fsr1h	equ	0xFE2
  1983                           fsr1l	equ	0xFE1
  1984                           indf2	equ	0xFDF
  1985                           plusw2	equ	0xFDB
  1986                           fsr2h	equ	0xFDA
  1987                           fsr2l	equ	0xFD9
  1988                           status	equ	0xFD8
  1989                           
  1990 ;; *************** function _TMR0_StartTimer *****************
  1991 ;; Defined at:
  1992 ;;		line 97 in file "mcc_generated_files/tmr0.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		None
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    5
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_TMR0_Initialize
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text7
  2021  0025E6                     __ptext7:
  2022                           	opt stack 0
  2023  0025E6                     _TMR0_StartTimer:
  2024                           	opt stack 23
  2025                           
  2026                           ;tmr0.c: 100: T0CON0bits.T0EN = 1;
  2027                           
  2028                           ;incstack = 0
  2029  0025E6  8ED5               	bsf	4053,7,c	;volatile
  2030  0025E8  0012               	return		;funcret
  2031  0025EA                     __end_of_TMR0_StartTimer:
  2032                           	opt stack 0
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           prodl	equ	0xFF3
  2038                           intcon	equ	0xFF2
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           postdec1	equ	0xFE5
  2042                           plusw1	equ	0xFE3
  2043                           fsr1h	equ	0xFE2
  2044                           fsr1l	equ	0xFE1
  2045                           indf2	equ	0xFDF
  2046                           plusw2	equ	0xFDB
  2047                           fsr2h	equ	0xFDA
  2048                           fsr2l	equ	0xFD9
  2049                           status	equ	0xFD8
  2050                           
  2051 ;; *************** function _TMR0_SetInterruptHandler *****************
  2052 ;; Defined at:
  2053 ;;		line 169 in file "mcc_generated_files/tmr0.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  InterruptHan    2   20[COMRAM] PTR FTN()void 
  2056 ;;		 -> Timer0_10ms(1), TMR0_DefaultInterruptHandler(1), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;Total ram usage:        2 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    5
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_TMR0_Initialize
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text8
  2084  0025D2                     __ptext8:
  2085                           	opt stack 0
  2086  0025D2                     _TMR0_SetInterruptHandler:
  2087                           	opt stack 25
  2088                           
  2089                           ;tmr0.c: 170: TMR0_InterruptHandler = InterruptHandler;
  2090                           
  2091                           ;incstack = 0
  2092  0025D2  C015  F036         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2093  0025D6  C016  F037         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2094  0025DA  0012               	return		;funcret
  2095  0025DC                     __end_of_TMR0_SetInterruptHandler:
  2096                           	opt stack 0
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           prodl	equ	0xFF3
  2102                           intcon	equ	0xFF2
  2103                           postinc0	equ	0xFEE
  2104                           wreg	equ	0xFE8
  2105                           postdec1	equ	0xFE5
  2106                           plusw1	equ	0xFE3
  2107                           fsr1h	equ	0xFE2
  2108                           fsr1l	equ	0xFE1
  2109                           indf2	equ	0xFDF
  2110                           plusw2	equ	0xFDB
  2111                           fsr2h	equ	0xFDA
  2112                           fsr2l	equ	0xFD9
  2113                           status	equ	0xFD8
  2114                           
  2115 ;; *************** function _PIN_MANAGER_Initialize *****************
  2116 ;; Defined at:
  2117 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  state           1   20[COMRAM] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;Total ram usage:        1 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    5
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_SYSTEM_Initialize
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text9
  2146  002086                     __ptext9:
  2147                           	opt stack 0
  2148  002086                     _PIN_MANAGER_Initialize:
  2149                           	opt stack 24
  2150                           
  2151                           ;pin_manager.c: 57: LATA = 0x00;
  2152                           
  2153                           ;incstack = 0
  2154  002086  0E00               	movlw	0
  2155  002088  6E83               	movwf	3971,c	;volatile
  2156                           
  2157                           ;pin_manager.c: 58: LATB = 0x00;
  2158  00208A  0E00               	movlw	0
  2159  00208C  6E84               	movwf	3972,c	;volatile
  2160                           
  2161                           ;pin_manager.c: 59: LATC = 0x00;
  2162  00208E  0E00               	movlw	0
  2163  002090  6E85               	movwf	3973,c	;volatile
  2164                           
  2165                           ;pin_manager.c: 64: TRISA = 0xC0;
  2166  002092  0EC0               	movlw	192
  2167  002094  6E88               	movwf	3976,c	;volatile
  2168                           
  2169                           ;pin_manager.c: 65: TRISB = 0x00;
  2170  002096  0E00               	movlw	0
  2171  002098  6E89               	movwf	3977,c	;volatile
  2172                           
  2173                           ;pin_manager.c: 66: TRISC = 0x84;
  2174  00209A  0E84               	movlw	132
  2175  00209C  6E8A               	movwf	3978,c	;volatile
  2176                           
  2177                           ;pin_manager.c: 71: ANSELC = 0x44;
  2178  00209E  0E44               	movlw	68
  2179  0020A0  010F               	movlb	15	; () banked
  2180  0020A2  6F21               	movwf	33,b	;volatile
  2181                           
  2182                           ;pin_manager.c: 72: ANSELB = 0x00;
  2183  0020A4  0E00               	movlw	0
  2184  0020A6  010F               	movlb	15	; () banked
  2185  0020A8  6F19               	movwf	25,b	;volatile
  2186                           
  2187                           ;pin_manager.c: 73: ANSELA = 0xC0;
  2188  0020AA  0EC0               	movlw	192
  2189  0020AC  010F               	movlb	15	; () banked
  2190  0020AE  6F11               	movwf	17,b	;volatile
  2191                           
  2192                           ;pin_manager.c: 78: WPUE = 0x00;
  2193  0020B0  0E00               	movlw	0
  2194  0020B2  010F               	movlb	15	; () banked
  2195  0020B4  6F2D               	movwf	45,b	;volatile
  2196                           
  2197                           ;pin_manager.c: 79: WPUB = 0x00;
  2198  0020B6  0E00               	movlw	0
  2199  0020B8  010F               	movlb	15	; () banked
  2200  0020BA  6F18               	movwf	24,b	;volatile
  2201                           
  2202                           ;pin_manager.c: 80: WPUA = 0x00;
  2203  0020BC  0E00               	movlw	0
  2204  0020BE  010F               	movlb	15	; () banked
  2205  0020C0  6F10               	movwf	16,b	;volatile
  2206                           
  2207                           ;pin_manager.c: 81: WPUC = 0x00;
  2208  0020C2  0E00               	movlw	0
  2209  0020C4  010F               	movlb	15	; () banked
  2210  0020C6  6F20               	movwf	32,b	;volatile
  2211                           
  2212                           ;pin_manager.c: 86: ODCONA = 0x00;
  2213  0020C8  0E00               	movlw	0
  2214  0020CA  010F               	movlb	15	; () banked
  2215  0020CC  6F0F               	movwf	15,b	;volatile
  2216                           
  2217                           ;pin_manager.c: 87: ODCONB = 0x00;
  2218  0020CE  0E00               	movlw	0
  2219  0020D0  010F               	movlb	15	; () banked
  2220  0020D2  6F17               	movwf	23,b	;volatile
  2221                           
  2222                           ;pin_manager.c: 88: ODCONC = 0x00;
  2223  0020D4  0E00               	movlw	0
  2224  0020D6  010F               	movlb	15	; () banked
  2225  0020D8  6F1F               	movwf	31,b	;volatile
  2226                           
  2227                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  2228  0020DA  0E00               	movlw	0
  2229  0020DC  BEF2               	btfsc	intcon,7,c	;volatile
  2230  0020DE  0E01               	movlw	1
  2231  0020E0  6E15               	movwf	PIN_MANAGER_Initialize@state,c
  2232                           
  2233                           ; BSR set to: 15
  2234                           ;pin_manager.c: 96: GIE = 0;
  2235  0020E2  9EF2               	bcf	intcon,7,c	;volatile
  2236                           
  2237                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  2238  0020E4  0E55               	movlw	85
  2239  0020E6  010E               	movlb	14	; () banked
  2240  0020E8  6FA0               	movwf	160,b	;volatile
  2241                           
  2242                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  2243  0020EA  0EAA               	movlw	170
  2244  0020EC  010E               	movlb	14	; () banked
  2245  0020EE  6FA0               	movwf	160,b	;volatile
  2246                           
  2247                           ; BSR set to: 14
  2248                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  2249  0020F0  010E               	movlb	14	; () banked
  2250  0020F2  91A0               	bcf	160,0,b	;volatile
  2251                           
  2252                           ; BSR set to: 14
  2253                           ;pin_manager.c: 101: RX1PPSbits.RXPPS = 0x17;
  2254  0020F4  010E               	movlb	14	; () banked
  2255  0020F6  81B5               	bsf	181,0,b	;volatile
  2256  0020F8  83B5               	bsf	181,1,b	;volatile
  2257  0020FA  85B5               	bsf	181,2,b	;volatile
  2258  0020FC  97B5               	bcf	181,3,b	;volatile
  2259  0020FE  89B5               	bsf	181,4,b	;volatile
  2260                           
  2261                           ;pin_manager.c: 102: RC6PPS = 0x09;
  2262  002100  0E09               	movlw	9
  2263  002102  010E               	movlb	14	; () banked
  2264  002104  6FFD               	movwf	253,b	;volatile
  2265                           
  2266                           ;pin_manager.c: 104: PPSLOCK = 0x55;
  2267  002106  0E55               	movlw	85
  2268  002108  010E               	movlb	14	; () banked
  2269  00210A  6FA0               	movwf	160,b	;volatile
  2270                           
  2271                           ;pin_manager.c: 105: PPSLOCK = 0xAA;
  2272  00210C  0EAA               	movlw	170
  2273  00210E  010E               	movlb	14	; () banked
  2274  002110  6FA0               	movwf	160,b	;volatile
  2275                           
  2276                           ; BSR set to: 14
  2277                           ;pin_manager.c: 106: PPSLOCKbits.PPSLOCKED = 0x01;
  2278  002112  010E               	movlb	14	; () banked
  2279  002114  81A0               	bsf	160,0,b	;volatile
  2280                           
  2281                           ; BSR set to: 14
  2282                           ;pin_manager.c: 108: GIE = state;
  2283  002116  A015               	btfss	PIN_MANAGER_Initialize@state,0,c
  2284  002118  D002               	goto	u2570
  2285  00211A  8EF2               	bsf	intcon,7,c	;volatile
  2286  00211C  0012               	return	
  2287  00211E                     u2570:
  2288  00211E  9EF2               	bcf	intcon,7,c	;volatile
  2289  002120  0012               	return		;funcret
  2290  002122                     __end_of_PIN_MANAGER_Initialize:
  2291                           	opt stack 0
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           prodl	equ	0xFF3
  2297                           intcon	equ	0xFF2
  2298                           postinc0	equ	0xFEE
  2299                           wreg	equ	0xFE8
  2300                           postdec1	equ	0xFE5
  2301                           plusw1	equ	0xFE3
  2302                           fsr1h	equ	0xFE2
  2303                           fsr1l	equ	0xFE1
  2304                           indf2	equ	0xFDF
  2305                           plusw2	equ	0xFDB
  2306                           fsr2h	equ	0xFDA
  2307                           fsr2l	equ	0xFD9
  2308                           status	equ	0xFD8
  2309                           
  2310 ;; *************** function _OSCILLATOR_Initialize *****************
  2311 ;; Defined at:
  2312 ;;		line 117 in file "mcc_generated_files/mcc.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    5
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_SYSTEM_Initialize
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text10
  2341  0024F6                     __ptext10:
  2342                           	opt stack 0
  2343  0024F6                     _OSCILLATOR_Initialize:
  2344                           	opt stack 24
  2345                           
  2346                           ;mcc.c: 120: OSCCON1 = 0x20;
  2347                           
  2348                           ;incstack = 0
  2349  0024F6  0E20               	movlw	32
  2350  0024F8  010E               	movlb	14	; () banked
  2351  0024FA  6FD8               	movwf	216,b	;volatile
  2352                           
  2353                           ;mcc.c: 122: OSCCON3 = 0x00;
  2354  0024FC  0E00               	movlw	0
  2355  0024FE  010E               	movlb	14	; () banked
  2356  002500  6FDA               	movwf	218,b	;volatile
  2357                           
  2358                           ;mcc.c: 124: OSCEN = 0x00;
  2359  002502  0E00               	movlw	0
  2360  002504  010E               	movlb	14	; () banked
  2361  002506  6FDC               	movwf	220,b	;volatile
  2362                           
  2363                           ;mcc.c: 126: OSCFRQ = 0x02;
  2364  002508  0E02               	movlw	2
  2365  00250A  010E               	movlb	14	; () banked
  2366  00250C  6FDE               	movwf	222,b	;volatile
  2367                           
  2368                           ;mcc.c: 128: OSCTUNE = 0x00;
  2369  00250E  0E00               	movlw	0
  2370  002510  010E               	movlb	14	; () banked
  2371  002512  6FDD               	movwf	221,b	;volatile
  2372  002514                     l476:
  2373                           
  2374                           ; BSR set to: 14
  2375  002514  010E               	movlb	14	; () banked
  2376  002516  B1DB               	btfsc	219,0,b	;volatile
  2377  002518  0012               	return	
  2378  00251A  D7FC               	goto	l476
  2379  00251C                     __end_of_OSCILLATOR_Initialize:
  2380                           	opt stack 0
  2381                           tblptru	equ	0xFF8
  2382                           tblptrh	equ	0xFF7
  2383                           tblptrl	equ	0xFF6
  2384                           tablat	equ	0xFF5
  2385                           prodl	equ	0xFF3
  2386                           intcon	equ	0xFF2
  2387                           postinc0	equ	0xFEE
  2388                           wreg	equ	0xFE8
  2389                           postdec1	equ	0xFE5
  2390                           plusw1	equ	0xFE3
  2391                           fsr1h	equ	0xFE2
  2392                           fsr1l	equ	0xFE1
  2393                           indf2	equ	0xFDF
  2394                           plusw2	equ	0xFDB
  2395                           fsr2h	equ	0xFDA
  2396                           fsr2l	equ	0xFD9
  2397                           status	equ	0xFD8
  2398                           
  2399 ;; *************** function _INTERRUPT_Initialize *****************
  2400 ;; Defined at:
  2401 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		None
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    5
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_SYSTEM_Initialize
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text11
  2430  0025EA                     __ptext11:
  2431                           	opt stack 0
  2432  0025EA                     _INTERRUPT_Initialize:
  2433                           	opt stack 24
  2434                           
  2435                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  2436                           
  2437                           ; BSR set to: 14
  2438                           ;incstack = 0
  2439  0025EA  9AF2               	bcf	intcon,5,c	;volatile
  2440  0025EC  0012               	return		;funcret
  2441  0025EE                     __end_of_INTERRUPT_Initialize:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           prodl	equ	0xFF3
  2448                           intcon	equ	0xFF2
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           plusw1	equ	0xFE3
  2453                           fsr1h	equ	0xFE2
  2454                           fsr1l	equ	0xFE1
  2455                           indf2	equ	0xFDF
  2456                           plusw2	equ	0xFDB
  2457                           fsr2h	equ	0xFDA
  2458                           fsr2l	equ	0xFD9
  2459                           status	equ	0xFD8
  2460                           
  2461 ;; *************** function _EUSART1_Initialize *****************
  2462 ;; Defined at:
  2463 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    5
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_SYSTEM_Initialize
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text12
  2493  002576                     __ptext12:
  2494                           	opt stack 0
  2495  002576                     _EUSART1_Initialize:
  2496                           	opt stack 24
  2497                           
  2498                           ;eusart1.c: 60: BAUD1CON = 0x08;
  2499                           
  2500                           ;incstack = 0
  2501  002576  0E08               	movlw	8
  2502  002578  6E9F               	movwf	3999,c	;volatile
  2503                           
  2504                           ;eusart1.c: 63: RC1STA = 0x90;
  2505  00257A  0E90               	movlw	144
  2506  00257C  6E9D               	movwf	3997,c	;volatile
  2507                           
  2508                           ;eusart1.c: 66: TX1STA = 0x84;
  2509  00257E  0E84               	movlw	132
  2510  002580  6E9E               	movwf	3998,c	;volatile
  2511                           
  2512                           ;eusart1.c: 69: SP1BRGL = 0xA0;
  2513  002582  0EA0               	movlw	160
  2514  002584  6E9B               	movwf	3995,c	;volatile
  2515                           
  2516                           ;eusart1.c: 72: SP1BRGH = 0x01;
  2517  002586  0E01               	movlw	1
  2518  002588  6E9C               	movwf	3996,c	;volatile
  2519  00258A  0012               	return		;funcret
  2520  00258C                     __end_of_EUSART1_Initialize:
  2521                           	opt stack 0
  2522                           tblptru	equ	0xFF8
  2523                           tblptrh	equ	0xFF7
  2524                           tblptrl	equ	0xFF6
  2525                           tablat	equ	0xFF5
  2526                           prodl	equ	0xFF3
  2527                           intcon	equ	0xFF2
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           postdec1	equ	0xFE5
  2531                           plusw1	equ	0xFE3
  2532                           fsr1h	equ	0xFE2
  2533                           fsr1l	equ	0xFE1
  2534                           indf2	equ	0xFDF
  2535                           plusw2	equ	0xFDB
  2536                           fsr2h	equ	0xFDA
  2537                           fsr2l	equ	0xFD9
  2538                           status	equ	0xFD8
  2539                           
  2540 ;; *************** function _ReadGPSDateTime *****************
  2541 ;; Defined at:
  2542 ;;		line 39 in file "libs/gps.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  Date            2   20[COMRAM] PTR unsigned char 
  2545 ;;		 -> main@Date(7), 
  2546 ;;  Time            2   22[COMRAM] PTR unsigned char 
  2547 ;;		 -> main@Time(7), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  StartCode       7   28[COMRAM] const unsigned char [7]
  2550 ;;  i               2   36[COMRAM] int 
  2551 ;;  Pos             1   39[COMRAM] unsigned char 
  2552 ;;  TempChar        1   38[COMRAM] unsigned char 
  2553 ;;  Commas          1   35[COMRAM] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2566 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;Total ram usage:       20 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    6
  2570 ;; This function calls:
  2571 ;;		_EUSART1_Read
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text13
  2578  0019E8                     __ptext13:
  2579                           	opt stack 0
  2580  0019E8                     _ReadGPSDateTime:
  2581                           	opt stack 24
  2582                           
  2583                           ;gps.c: 40: const char StartCode[7]="$GPRMC,";
  2584                           
  2585                           ;incstack = 0
  2586  0019E8  0E01               	movlw	low ReadGPSDateTime@F11399
  2587  0019EA  6EF6               	movwf	tblptrl,c
  2588  0019EC                     	if	1	;There is more than 1 active tblptr byte
  2589  0019EC  0E0F               	movlw	high ReadGPSDateTime@F11399
  2590  0019EE  6EF7               	movwf	tblptrh,c
  2591  0019F0                     	endif
  2592  0019F0                     	if	1	;There are 3 active tblptr bytes
  2593  0019F0  0E00               	movlw	low (ReadGPSDateTime@F11399 shr (0+16))
  2594  0019F2  6EF8               	movwf	tblptru,c
  2595  0019F4                     	endif
  2596  0019F4  EE20  F01D         	lfsr	2,ReadGPSDateTime@StartCode
  2597  0019F8  0E06               	movlw	6
  2598  0019FA                     u2750:
  2599  0019FA  0009               	tblrd		*+
  2600  0019FC  CFF5 FFDE          	movff	tablat,postinc2
  2601  001A00  06E8               	decf	wreg,f,c
  2602  001A02  E2FB               	bc	u2750
  2603                           
  2604                           ;gps.c: 41: char Pos=0x00;
  2605  001A04  0E00               	movlw	0
  2606  001A06  6E28               	movwf	ReadGPSDateTime@Pos,c
  2607                           
  2608                           ;gps.c: 42: char TempChar = 0x00;
  2609  001A08  0E00               	movlw	0
  2610  001A0A  6E27               	movwf	ReadGPSDateTime@TempChar,c
  2611                           
  2612                           ;gps.c: 43: int i=0;
  2613  001A0C  0E00               	movlw	0
  2614  001A0E  6E26               	movwf	ReadGPSDateTime@i+1,c
  2615  001A10  0E00               	movlw	0
  2616  001A12  6E25               	movwf	ReadGPSDateTime@i,c
  2617                           
  2618                           ;gps.c: 44: UINT8 Commas=0;
  2619  001A14  0E00               	movlw	0
  2620  001A16  6E24               	movwf	ReadGPSDateTime@Commas,c
  2621  001A18                     l3739:
  2622                           
  2623                           ;gps.c: 46: if ((PIR3bits.RC1IF)){
  2624  001A18  010E               	movlb	14	; () banked
  2625  001A1A  ABCD               	btfss	205,5,b	;volatile
  2626  001A1C  D065               	goto	l3775
  2627                           
  2628                           ; BSR set to: 14
  2629                           ;gps.c: 47: i=0;
  2630  001A1E  0E00               	movlw	0
  2631  001A20  6E26               	movwf	ReadGPSDateTime@i+1,c
  2632  001A22  0E00               	movlw	0
  2633  001A24  6E25               	movwf	ReadGPSDateTime@i,c
  2634                           
  2635                           ; BSR set to: 14
  2636                           ;gps.c: 48: TempChar = EUSART1_Read();
  2637  001A26  ECD0  F012         	call	_EUSART1_Read	;wreg free
  2638  001A2A  6E27               	movwf	ReadGPSDateTime@TempChar,c
  2639                           
  2640                           ;gps.c: 49: if ((Pos>=0x07) & (Pos<=0x0c)) {
  2641  001A2C  0E06               	movlw	6
  2642  001A2E  6428               	cpfsgt	ReadGPSDateTime@Pos,c
  2643  001A30  D014               	goto	l3753
  2644  001A32  0E0D               	movlw	13
  2645  001A34  6028               	cpfslt	ReadGPSDateTime@Pos,c
  2646  001A36  D011               	goto	l3753
  2647                           
  2648                           ;gps.c: 50: Time[Pos-0x07]= TempChar;
  2649  001A38  0EF9               	movlw	249
  2650  001A3A  6E19               	movwf	??_ReadGPSDateTime& (0+255),c
  2651  001A3C  0EFF               	movlw	255
  2652  001A3E  6E1A               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  2653  001A40  5028               	movf	ReadGPSDateTime@Pos,w,c
  2654  001A42  6E1B               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  2655  001A44  6A1C               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  2656  001A46  5019               	movf	??_ReadGPSDateTime,w,c
  2657  001A48  261B               	addwf	??_ReadGPSDateTime+2,f,c
  2658  001A4A  501A               	movf	??_ReadGPSDateTime+1,w,c
  2659  001A4C  221C               	addwfc	??_ReadGPSDateTime+3,f,c
  2660  001A4E  501B               	movf	??_ReadGPSDateTime+2,w,c
  2661  001A50  2417               	addwf	ReadGPSDateTime@Time,w,c
  2662  001A52  6ED9               	movwf	fsr2l,c
  2663  001A54  501C               	movf	??_ReadGPSDateTime+3,w,c
  2664  001A56  2018               	addwfc	ReadGPSDateTime@Time+1,w,c
  2665  001A58  D03F               	goto	L14
  2666  001A5A                     l3753:
  2667  001A5A  5028               	movf	ReadGPSDateTime@Pos,w,c
  2668  001A5C  0D01               	mullw	1
  2669  001A5E  0E1D               	movlw	low ReadGPSDateTime@StartCode
  2670  001A60  24F3               	addwf	prodl,w,c
  2671  001A62  6ED9               	movwf	fsr2l,c
  2672  001A64  0E00               	movlw	high ReadGPSDateTime@StartCode
  2673  001A66  20F4               	addwfc	prodh,w,c
  2674  001A68  6EDA               	movwf	fsr2h,c
  2675  001A6A  5027               	movf	ReadGPSDateTime@TempChar,w,c
  2676  001A6C  18DE               	xorwf	postinc2,w,c
  2677  001A6E  A4D8               	btfss	status,2,c
  2678  001A70  D004               	goto	l3759
  2679  001A72  0E07               	movlw	7
  2680  001A74  6028               	cpfslt	ReadGPSDateTime@Pos,c
  2681  001A76  D001               	goto	l3759
  2682  001A78  D032               	goto	l3771
  2683  001A7A                     l3759:
  2684  001A7A  0E0C               	movlw	12
  2685  001A7C  6428               	cpfsgt	ReadGPSDateTime@Pos,c
  2686  001A7E  D031               	goto	l3773
  2687                           
  2688                           ;gps.c: 55: if (Commas<8) {
  2689  001A80  0E08               	movlw	8
  2690  001A82  6024               	cpfslt	ReadGPSDateTime@Commas,c
  2691  001A84  D006               	goto	l3767
  2692                           
  2693                           ;gps.c: 56: if (TempChar == 0x2C)
  2694  001A86  0E2C               	movlw	44
  2695  001A88  1827               	xorwf	ReadGPSDateTime@TempChar,w,c
  2696  001A8A  A4D8               	btfss	status,2,c
  2697  001A8C  D031               	goto	l3777
  2698                           
  2699                           ;gps.c: 57: Commas++;
  2700  001A8E  2A24               	incf	ReadGPSDateTime@Commas,f,c
  2701                           
  2702                           ;gps.c: 58: } else {
  2703  001A90  D02F               	goto	l3777
  2704  001A92                     l3767:
  2705                           
  2706                           ;gps.c: 59: if ((Pos-0x0d)<6) {
  2707  001A92  0EF3               	movlw	243
  2708  001A94  6E19               	movwf	??_ReadGPSDateTime& (0+255),c
  2709  001A96  0EFF               	movlw	255
  2710  001A98  6E1A               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  2711  001A9A  5028               	movf	ReadGPSDateTime@Pos,w,c
  2712  001A9C  6E1B               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  2713  001A9E  6A1C               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  2714  001AA0  5019               	movf	??_ReadGPSDateTime,w,c
  2715  001AA2  261B               	addwf	??_ReadGPSDateTime+2,f,c
  2716  001AA4  501A               	movf	??_ReadGPSDateTime+1,w,c
  2717  001AA6  221C               	addwfc	??_ReadGPSDateTime+3,f,c
  2718  001AA8  BE1C               	btfsc	??_ReadGPSDateTime+3,7,c
  2719  001AAA  D006               	goto	l3769
  2720  001AAC  501C               	movf	??_ReadGPSDateTime+3,w,c
  2721  001AAE  E12B               	bnz	l91
  2722  001AB0  0E06               	movlw	6
  2723  001AB2  5C1B               	subwf	??_ReadGPSDateTime+2,w,c
  2724  001AB4  B0D8               	btfsc	status,0,c
  2725  001AB6  0012               	return	
  2726  001AB8                     l3769:
  2727                           
  2728                           ;gps.c: 60: Date[Pos-0x0d] = TempChar;
  2729  001AB8  0EF3               	movlw	243
  2730  001ABA  6E19               	movwf	??_ReadGPSDateTime& (0+255),c
  2731  001ABC  0EFF               	movlw	255
  2732  001ABE  6E1A               	movwf	(??_ReadGPSDateTime+1)& (0+255),c
  2733  001AC0  5028               	movf	ReadGPSDateTime@Pos,w,c
  2734  001AC2  6E1B               	movwf	(??_ReadGPSDateTime+2)& (0+255),c
  2735  001AC4  6A1C               	clrf	(??_ReadGPSDateTime+3)& (0+255),c
  2736  001AC6  5019               	movf	??_ReadGPSDateTime,w,c
  2737  001AC8  261B               	addwf	??_ReadGPSDateTime+2,f,c
  2738  001ACA  501A               	movf	??_ReadGPSDateTime+1,w,c
  2739  001ACC  221C               	addwfc	??_ReadGPSDateTime+3,f,c
  2740  001ACE  501B               	movf	??_ReadGPSDateTime+2,w,c
  2741  001AD0  2415               	addwf	ReadGPSDateTime@Date,w,c
  2742  001AD2  6ED9               	movwf	fsr2l,c
  2743  001AD4  501C               	movf	??_ReadGPSDateTime+3,w,c
  2744  001AD6  2016               	addwfc	ReadGPSDateTime@Date+1,w,c
  2745  001AD8                     L14:
  2746  001AD8  6EDA               	movwf	fsr2h,c
  2747  001ADA  C027  FFDF         	movff	ReadGPSDateTime@TempChar,indf2
  2748  001ADE                     l3771:
  2749                           
  2750                           ;gps.c: 61: Pos++;
  2751  001ADE  2A28               	incf	ReadGPSDateTime@Pos,f,c
  2752                           
  2753                           ;gps.c: 62: } else
  2754  001AE0  D007               	goto	l3777
  2755  001AE2                     l3773:
  2756                           
  2757                           ;gps.c: 66: Pos=0;
  2758  001AE2  0E00               	movlw	0
  2759  001AE4  6E28               	movwf	ReadGPSDateTime@Pos,c
  2760                           
  2761                           ;gps.c: 67: } else
  2762  001AE6  D004               	goto	l3777
  2763  001AE8                     l3775:
  2764                           
  2765                           ;gps.c: 68: _delay((unsigned long)((20)*(16000000/4000000.0)));
  2766  001AE8  0E1A               	movlw	26
  2767  001AEA                     u3317:
  2768  001AEA  2EE8               	decfsz	wreg,f,c
  2769  001AEC  D7FE               	bra	u3317
  2770  001AEE  D000               	nop2	
  2771  001AF0                     l3777:
  2772                           
  2773                           ;gps.c: 69: i++;
  2774  001AF0  4A25               	infsnz	ReadGPSDateTime@i,f,c
  2775  001AF2  2A26               	incf	ReadGPSDateTime@i+1,f,c
  2776                           
  2777                           ;gps.c: 70: } while(i<1000);
  2778  001AF4  BE26               	btfsc	ReadGPSDateTime@i+1,7,c
  2779  001AF6  D790               	goto	l3739
  2780  001AF8  0EE8               	movlw	232
  2781  001AFA  5C25               	subwf	ReadGPSDateTime@i,w,c
  2782  001AFC  0E03               	movlw	3
  2783  001AFE  5826               	subwfb	ReadGPSDateTime@i+1,w,c
  2784  001B00  B0D8               	btfsc	status,0,c
  2785  001B02  0012               	return	
  2786  001B04  D789               	goto	l3739
  2787  001B06                     l91:
  2788  001B06  0012               	return		;funcret
  2789  001B08                     __end_of_ReadGPSDateTime:
  2790                           	opt stack 0
  2791                           tblptru	equ	0xFF8
  2792                           tblptrh	equ	0xFF7
  2793                           tblptrl	equ	0xFF6
  2794                           tablat	equ	0xFF5
  2795                           prodh	equ	0xFF4
  2796                           prodl	equ	0xFF3
  2797                           intcon	equ	0xFF2
  2798                           postinc0	equ	0xFEE
  2799                           wreg	equ	0xFE8
  2800                           postdec1	equ	0xFE5
  2801                           plusw1	equ	0xFE3
  2802                           fsr1h	equ	0xFE2
  2803                           fsr1l	equ	0xFE1
  2804                           indf2	equ	0xFDF
  2805                           postinc2	equ	0xFDE
  2806                           plusw2	equ	0xFDB
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _EUSART1_Read *****************
  2812 ;; Defined at:
  2813 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      unsigned char 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    5
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_ReadGPSDateTime
  2838 ;;		_ShowRawData
  2839 ;;		_ReadGPSTime
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text14
  2844  0025A0                     __ptext14:
  2845                           	opt stack 0
  2846  0025A0                     _EUSART1_Read:
  2847                           	opt stack 24
  2848  0025A0                     l372:
  2849  0025A0  010E               	movlb	14	; () banked
  2850  0025A2  ABCD               	btfss	205,5,b	;volatile
  2851  0025A4  D7FD               	goto	l372
  2852                           
  2853                           ; BSR set to: 14
  2854                           ;eusart1.c: 82: }
  2855                           ;eusart1.c: 85: if(1 == RC1STAbits.OERR)
  2856  0025A6  A29D               	btfss	3997,1,c	;volatile
  2857  0025A8  D002               	goto	l3385
  2858                           
  2859                           ; BSR set to: 14
  2860                           ;eusart1.c: 86: {
  2861                           ;eusart1.c: 89: RC1STAbits.SPEN = 0;
  2862  0025AA  9E9D               	bcf	3997,7,c	;volatile
  2863                           
  2864                           ;eusart1.c: 90: RC1STAbits.SPEN = 1;
  2865  0025AC  8E9D               	bsf	3997,7,c	;volatile
  2866  0025AE                     l3385:
  2867                           
  2868                           ; BSR set to: 14
  2869                           ;eusart1.c: 91: }
  2870                           ;eusart1.c: 93: return RC1REG;
  2871  0025AE  5099               	movf	3993,w,c	;volatile
  2872  0025B0  0012               	return	
  2873  0025B2                     __end_of_EUSART1_Read:
  2874                           	opt stack 0
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           prodh	equ	0xFF4
  2880                           prodl	equ	0xFF3
  2881                           intcon	equ	0xFF2
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           postdec1	equ	0xFE5
  2885                           plusw1	equ	0xFE3
  2886                           fsr1h	equ	0xFE2
  2887                           fsr1l	equ	0xFE1
  2888                           indf2	equ	0xFDF
  2889                           postinc2	equ	0xFDE
  2890                           plusw2	equ	0xFDB
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _LoadAllFromEeprom *****************
  2896 ;; Defined at:
  2897 ;;		line 137 in file "libs/eeprom.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    7
  2918 ;; This function calls:
  2919 ;;		_LoadEventsFromEeprom
  2920 ;;		_LoadSettingsFromEeprom
  2921 ;;		_LoadStatesFromEeprom
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text15
  2928  0025C4                     __ptext15:
  2929                           	opt stack 0
  2930  0025C4                     _LoadAllFromEeprom:
  2931                           	opt stack 23
  2932                           
  2933                           ;eeprom.c: 138: LoadSettingsFromEeprom ();
  2934                           
  2935                           ; BSR set to: 14
  2936                           ;incstack = 0
  2937  0025C4  EC8D  F007         	call	_LoadSettingsFromEeprom	;wreg free
  2938                           
  2939                           ;eeprom.c: 139: LoadEventsFromEeprom ();
  2940  0025C8  ECF5  F009         	call	_LoadEventsFromEeprom	;wreg free
  2941                           
  2942                           ;eeprom.c: 140: LoadStatesFromEeprom();
  2943  0025CC  ECC2  F008         	call	_LoadStatesFromEeprom	;wreg free
  2944  0025D0  0012               	return		;funcret
  2945  0025D2                     __end_of_LoadAllFromEeprom:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           intcon	equ	0xFF2
  2954                           postinc0	equ	0xFEE
  2955                           wreg	equ	0xFE8
  2956                           postdec1	equ	0xFE5
  2957                           plusw1	equ	0xFE3
  2958                           fsr1h	equ	0xFE2
  2959                           fsr1l	equ	0xFE1
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           plusw2	equ	0xFDB
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _LoadStatesFromEeprom *****************
  2968 ;; Defined at:
  2969 ;;		line 108 in file "libs/eeprom.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  j               2   43[COMRAM] int 
  2974 ;;  j               2   41[COMRAM] int 
  2975 ;;  i               2   47[COMRAM] int 
  2976 ;;  AddStates       2   45[COMRAM] struct _WORD_VAL
  2977 ;;  TempSpecialA    2   38[COMRAM] struct _WORD_VAL
  2978 ;;  TempNormalAd    2   36[COMRAM] struct _WORD_VAL
  2979 ;;  AddAudioSpec    2   34[COMRAM] struct _WORD_VAL
  2980 ;;  AddAudioNorm    2   32[COMRAM] struct _WORD_VAL
  2981 ;;  AudAddInc       1   40[COMRAM] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;Total ram usage:       21 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    6
  2998 ;; This function calls:
  2999 ;;		_ReadEeprom
  3000 ;;		___awdiv
  3001 ;;		___wmul
  3002 ;; This function is called by:
  3003 ;;		_LoadAllFromEeprom
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text16
  3008  001184                     __ptext16:
  3009                           	opt stack 0
  3010  001184                     _LoadStatesFromEeprom:
  3011                           	opt stack 23
  3012                           
  3013                           ;eeprom.c: 109: WORD_VAL AddStates, AddAudioNormal, AddAudioSpecial, TempNormalAdd, Temp
      +                          SpecialAdd;
  3014                           ;eeprom.c: 110: UINT8 AudAddInc;
  3015                           ;eeprom.c: 111: AddStates.Val = 224;
  3016                           
  3017                           ;incstack = 0
  3018  001184  0E00               	movlw	0
  3019  001186  6E2F               	movwf	LoadStatesFromEeprom@AddStates+1,c
  3020  001188  0EE0               	movlw	224
  3021  00118A  6E2E               	movwf	LoadStatesFromEeprom@AddStates,c
  3022                           
  3023                           ;eeprom.c: 112: AddAudioNormal.Val = 23;
  3024  00118C  0E00               	movlw	0
  3025  00118E  6E22               	movwf	LoadStatesFromEeprom@AddAudioNormal+1,c
  3026  001190  0E17               	movlw	23
  3027  001192  6E21               	movwf	LoadStatesFromEeprom@AddAudioNormal,c
  3028                           
  3029                           ;eeprom.c: 113: AddAudioSpecial.Val = 43;
  3030  001194  0E00               	movlw	0
  3031  001196  6E24               	movwf	LoadStatesFromEeprom@AddAudioSpecial+1,c
  3032  001198  0E2B               	movlw	43
  3033  00119A  6E23               	movwf	LoadStatesFromEeprom@AddAudioSpecial,c
  3034                           
  3035                           ;eeprom.c: 114: for (int i=0; i<160; i++) {
  3036  00119C  0E00               	movlw	0
  3037  00119E  6E31               	movwf	LoadStatesFromEeprom@i+1,c
  3038  0011A0  0E00               	movlw	0
  3039  0011A2  6E30               	movwf	LoadStatesFromEeprom@i,c
  3040  0011A4  BE31               	btfsc	LoadStatesFromEeprom@i+1,7,c
  3041  0011A6  D008               	goto	l3547
  3042  0011A8  5031               	movf	LoadStatesFromEeprom@i+1,w,c
  3043  0011AA  E105               	bnz	u2470
  3044  0011AC  0EA0               	movlw	160
  3045  0011AE  5C30               	subwf	LoadStatesFromEeprom@i,w,c
  3046  0011B0  B0D8               	btfsc	status,0,c
  3047  0011B2  0012               	return	
  3048  0011B4  D001               	goto	l3547
  3049  0011B6                     u2470:
  3050  0011B6  0012               	return	
  3051  0011B8                     l3547:
  3052                           
  3053                           ;eeprom.c: 115: STATES[i].PERIOD = ReadEeprom(AddStates);
  3054  0011B8  C030  F015         	movff	LoadStatesFromEeprom@i,___wmul@multiplier
  3055  0011BC  C031  F016         	movff	LoadStatesFromEeprom@i+1,___wmul@multiplier+1
  3056  0011C0  0E00               	movlw	0
  3057  0011C2  6E18               	movwf	___wmul@multiplicand+1,c
  3058  0011C4  0E06               	movlw	6
  3059  0011C6  6E17               	movwf	___wmul@multiplicand,c
  3060  0011C8  EC8E  F012         	call	___wmul	;wreg free
  3061  0011CC  0EF0               	movlw	low _STATES
  3062  0011CE  2415               	addwf	?___wmul,w,c
  3063  0011D0  6ED9               	movwf	fsr2l,c
  3064  0011D2  0E01               	movlw	high _STATES
  3065  0011D4  2016               	addwfc	?___wmul+1,w,c
  3066  0011D6  6EDA               	movwf	fsr2h,c
  3067  0011D8  C02E  F015         	movff	LoadStatesFromEeprom@AddStates,ReadEeprom@Address
  3068  0011DC  C02F  F016         	movff	LoadStatesFromEeprom@AddStates+1,ReadEeprom@Address+1
  3069  0011E0  ECC6  F012         	call	_ReadEeprom	;wreg free
  3070  0011E4  6EDF               	movwf	indf2,c
  3071                           
  3072                           ;eeprom.c: 116: AddStates.Val++;
  3073  0011E6  4A2E               	infsnz	LoadStatesFromEeprom@AddStates,f,c
  3074  0011E8  2A2F               	incf	LoadStatesFromEeprom@AddStates+1,f,c
  3075                           
  3076                           ;eeprom.c: 117: for (int j=0; j<2; j++) {
  3077  0011EA  0E00               	movlw	0
  3078  0011EC  6E2B               	movwf	LoadStatesFromEeprom@j+1,c
  3079  0011EE  0E00               	movlw	0
  3080  0011F0  6E2A               	movwf	LoadStatesFromEeprom@j,c
  3081  0011F2                     l3553:
  3082  0011F2  BE2B               	btfsc	LoadStatesFromEeprom@j+1,7,c
  3083  0011F4  D006               	goto	l3557
  3084  0011F6  502B               	movf	LoadStatesFromEeprom@j+1,w,c
  3085  0011F8  E12E               	bnz	l3565
  3086  0011FA  0E02               	movlw	2
  3087  0011FC  5C2A               	subwf	LoadStatesFromEeprom@j,w,c
  3088  0011FE  B0D8               	btfsc	status,0,c
  3089  001200  D02A               	goto	l3565
  3090  001202                     l3557:
  3091                           
  3092                           ;eeprom.c: 118: STATES[i].ON[j] = ReadEeprom(AddStates);
  3093  001202  C030  F015         	movff	LoadStatesFromEeprom@i,___wmul@multiplier
  3094  001206  C031  F016         	movff	LoadStatesFromEeprom@i+1,___wmul@multiplier+1
  3095  00120A  0E00               	movlw	0
  3096  00120C  6E18               	movwf	___wmul@multiplicand+1,c
  3097  00120E  0E06               	movlw	6
  3098  001210  6E17               	movwf	___wmul@multiplicand,c
  3099  001212  EC8E  F012         	call	___wmul	;wreg free
  3100  001216  0E01               	movlw	1
  3101  001218  242A               	addwf	LoadStatesFromEeprom@j,w,c
  3102  00121A  6E1D               	movwf	??_LoadStatesFromEeprom& (0+255),c
  3103  00121C  0E00               	movlw	0
  3104  00121E  202B               	addwfc	LoadStatesFromEeprom@j+1,w,c
  3105  001220  6E1E               	movwf	(??_LoadStatesFromEeprom+1)& (0+255),c
  3106  001222  0EF0               	movlw	low _STATES
  3107  001224  6E1F               	movwf	(??_LoadStatesFromEeprom+2)& (0+255),c
  3108  001226  0E01               	movlw	high _STATES
  3109  001228  6E20               	movwf	(??_LoadStatesFromEeprom+3)& (0+255),c
  3110  00122A  501D               	movf	??_LoadStatesFromEeprom,w,c
  3111  00122C  261F               	addwf	??_LoadStatesFromEeprom+2,f,c
  3112  00122E  501E               	movf	??_LoadStatesFromEeprom+1,w,c
  3113  001230  2220               	addwfc	??_LoadStatesFromEeprom+3,f,c
  3114  001232  5015               	movf	?___wmul,w,c
  3115  001234  241F               	addwf	??_LoadStatesFromEeprom+2,w,c
  3116  001236  6ED9               	movwf	fsr2l,c
  3117  001238  5016               	movf	?___wmul+1,w,c
  3118  00123A  2020               	addwfc	??_LoadStatesFromEeprom+3,w,c
  3119  00123C  6EDA               	movwf	fsr2h,c
  3120  00123E  C02E  F015         	movff	LoadStatesFromEeprom@AddStates,ReadEeprom@Address
  3121  001242  C02F  F016         	movff	LoadStatesFromEeprom@AddStates+1,ReadEeprom@Address+1
  3122  001246  ECC6  F012         	call	_ReadEeprom	;wreg free
  3123  00124A  6EDF               	movwf	indf2,c
  3124                           
  3125                           ;eeprom.c: 119: AddStates.Val++;
  3126  00124C  4A2E               	infsnz	LoadStatesFromEeprom@AddStates,f,c
  3127  00124E  2A2F               	incf	LoadStatesFromEeprom@AddStates+1,f,c
  3128  001250  4A2A               	infsnz	LoadStatesFromEeprom@j,f,c
  3129  001252  2A2B               	incf	LoadStatesFromEeprom@j+1,f,c
  3130  001254  D7CE               	goto	l3553
  3131  001256                     l3565:
  3132                           
  3133                           ;eeprom.c: 120: }
  3134                           ;eeprom.c: 121: for (int j=0; j<2; j++) {
  3135  001256  0E00               	movlw	0
  3136  001258  6E2D               	movwf	LoadStatesFromEeprom@j_1155+1,c
  3137  00125A  0E00               	movlw	0
  3138  00125C  6E2C               	movwf	LoadStatesFromEeprom@j_1155,c
  3139  00125E                     l3567:
  3140  00125E  BE2D               	btfsc	LoadStatesFromEeprom@j_1155+1,7,c
  3141  001260  D006               	goto	l3571
  3142  001262  502D               	movf	LoadStatesFromEeprom@j_1155+1,w,c
  3143  001264  E12E               	bnz	l3579
  3144  001266  0E02               	movlw	2
  3145  001268  5C2C               	subwf	LoadStatesFromEeprom@j_1155,w,c
  3146  00126A  B0D8               	btfsc	status,0,c
  3147  00126C  D02A               	goto	l3579
  3148  00126E                     l3571:
  3149                           
  3150                           ;eeprom.c: 122: STATES[i].BLINK[j] = ReadEeprom(AddStates);
  3151  00126E  C030  F015         	movff	LoadStatesFromEeprom@i,___wmul@multiplier
  3152  001272  C031  F016         	movff	LoadStatesFromEeprom@i+1,___wmul@multiplier+1
  3153  001276  0E00               	movlw	0
  3154  001278  6E18               	movwf	___wmul@multiplicand+1,c
  3155  00127A  0E06               	movlw	6
  3156  00127C  6E17               	movwf	___wmul@multiplicand,c
  3157  00127E  EC8E  F012         	call	___wmul	;wreg free
  3158  001282  0E03               	movlw	3
  3159  001284  242C               	addwf	LoadStatesFromEeprom@j_1155,w,c
  3160  001286  6E1D               	movwf	??_LoadStatesFromEeprom& (0+255),c
  3161  001288  0E00               	movlw	0
  3162  00128A  202D               	addwfc	LoadStatesFromEeprom@j_1155+1,w,c
  3163  00128C  6E1E               	movwf	(??_LoadStatesFromEeprom+1)& (0+255),c
  3164  00128E  0EF0               	movlw	low _STATES
  3165  001290  6E1F               	movwf	(??_LoadStatesFromEeprom+2)& (0+255),c
  3166  001292  0E01               	movlw	high _STATES
  3167  001294  6E20               	movwf	(??_LoadStatesFromEeprom+3)& (0+255),c
  3168  001296  501D               	movf	??_LoadStatesFromEeprom,w,c
  3169  001298  261F               	addwf	??_LoadStatesFromEeprom+2,f,c
  3170  00129A  501E               	movf	??_LoadStatesFromEeprom+1,w,c
  3171  00129C  2220               	addwfc	??_LoadStatesFromEeprom+3,f,c
  3172  00129E  5015               	movf	?___wmul,w,c
  3173  0012A0  241F               	addwf	??_LoadStatesFromEeprom+2,w,c
  3174  0012A2  6ED9               	movwf	fsr2l,c
  3175  0012A4  5016               	movf	?___wmul+1,w,c
  3176  0012A6  2020               	addwfc	??_LoadStatesFromEeprom+3,w,c
  3177  0012A8  6EDA               	movwf	fsr2h,c
  3178  0012AA  C02E  F015         	movff	LoadStatesFromEeprom@AddStates,ReadEeprom@Address
  3179  0012AE  C02F  F016         	movff	LoadStatesFromEeprom@AddStates+1,ReadEeprom@Address+1
  3180  0012B2  ECC6  F012         	call	_ReadEeprom	;wreg free
  3181  0012B6  6EDF               	movwf	indf2,c
  3182                           
  3183                           ;eeprom.c: 123: AddStates.Val++;
  3184  0012B8  4A2E               	infsnz	LoadStatesFromEeprom@AddStates,f,c
  3185  0012BA  2A2F               	incf	LoadStatesFromEeprom@AddStates+1,f,c
  3186  0012BC  4A2C               	infsnz	LoadStatesFromEeprom@j_1155,f,c
  3187  0012BE  2A2D               	incf	LoadStatesFromEeprom@j_1155+1,f,c
  3188  0012C0  D7CE               	goto	l3567
  3189  0012C2                     l3579:
  3190                           
  3191                           ;eeprom.c: 124: }
  3192                           ;eeprom.c: 125: AudAddInc = i/8;
  3193  0012C2  C030  F015         	movff	LoadStatesFromEeprom@i,___awdiv@dividend
  3194  0012C6  C031  F016         	movff	LoadStatesFromEeprom@i+1,___awdiv@dividend+1
  3195  0012CA  0E00               	movlw	0
  3196  0012CC  6E18               	movwf	___awdiv@divisor+1,c
  3197  0012CE  0E08               	movlw	8
  3198  0012D0  6E17               	movwf	___awdiv@divisor,c
  3199  0012D2  ECDB  F010         	call	___awdiv	;wreg free
  3200  0012D6  5015               	movf	?___awdiv,w,c
  3201  0012D8  6E29               	movwf	LoadStatesFromEeprom@AudAddInc,c
  3202                           
  3203                           ;eeprom.c: 126: TempNormalAdd.Val = AddAudioNormal.Val + AudAddInc;
  3204  0012DA  5029               	movf	LoadStatesFromEeprom@AudAddInc,w,c
  3205  0012DC  2421               	addwf	LoadStatesFromEeprom@AddAudioNormal,w,c
  3206  0012DE  6E25               	movwf	LoadStatesFromEeprom@TempNormalAdd,c
  3207  0012E0  0E00               	movlw	0
  3208  0012E2  2022               	addwfc	LoadStatesFromEeprom@AddAudioNormal+1,w,c
  3209  0012E4  6E26               	movwf	LoadStatesFromEeprom@TempNormalAdd+1,c
  3210                           
  3211                           ;eeprom.c: 127: TempSpecialAdd.Val = AddAudioSpecial.Val + AudAddInc;
  3212  0012E6  5029               	movf	LoadStatesFromEeprom@AudAddInc,w,c
  3213  0012E8  2423               	addwf	LoadStatesFromEeprom@AddAudioSpecial,w,c
  3214  0012EA  6E27               	movwf	LoadStatesFromEeprom@TempSpecialAdd,c
  3215  0012EC  0E00               	movlw	0
  3216  0012EE  2024               	addwfc	LoadStatesFromEeprom@AddAudioSpecial+1,w,c
  3217  0012F0  6E28               	movwf	LoadStatesFromEeprom@TempSpecialAdd+1,c
  3218                           
  3219                           ;eeprom.c: 128: if (ReadEeprom(TempNormalAdd) & ((0x80)>>(i%8)))
  3220  0012F2  C030  F01D         	movff	LoadStatesFromEeprom@i,??_LoadStatesFromEeprom
  3221  0012F6  0E07               	movlw	7
  3222  0012F8  161D               	andwf	??_LoadStatesFromEeprom,f,c
  3223  0012FA  0E80               	movlw	128
  3224  0012FC  6E1E               	movwf	(??_LoadStatesFromEeprom+1)& (0+255),c
  3225  0012FE  0E00               	movlw	0
  3226  001300  6E1F               	movwf	(??_LoadStatesFromEeprom+2)& (0+255),c
  3227  001302  2A1D               	incf	??_LoadStatesFromEeprom,f,c
  3228  001304  D003               	goto	u2524
  3229  001306                     u2525:
  3230  001306  341F               	rlcf	??_LoadStatesFromEeprom+2,w,c
  3231  001308  321F               	rrcf	??_LoadStatesFromEeprom+2,f,c
  3232  00130A  321E               	rrcf	??_LoadStatesFromEeprom+1,f,c
  3233  00130C                     u2524:
  3234  00130C  2E1D               	decfsz	??_LoadStatesFromEeprom,f,c
  3235  00130E  D7FB               	goto	u2525
  3236  001310  C025  F015         	movff	LoadStatesFromEeprom@TempNormalAdd,ReadEeprom@Address
  3237  001314  C026  F016         	movff	LoadStatesFromEeprom@TempNormalAdd+1,ReadEeprom@Address+1
  3238  001318  ECC6  F012         	call	_ReadEeprom	;wreg free
  3239  00131C  141E               	andwf	??_LoadStatesFromEeprom+1,w,c
  3240  00131E  0900               	iorlw	0
  3241  001320  B4D8               	btfsc	status,2,c
  3242  001322  D016               	goto	l3587
  3243                           
  3244                           ;eeprom.c: 129: STATES[i].AUDIO = AUDIO_NORMAL;
  3245  001324  C030  F015         	movff	LoadStatesFromEeprom@i,___wmul@multiplier
  3246  001328  C031  F016         	movff	LoadStatesFromEeprom@i+1,___wmul@multiplier+1
  3247  00132C  0E00               	movlw	0
  3248  00132E  6E18               	movwf	___wmul@multiplicand+1,c
  3249  001330  0E06               	movlw	6
  3250  001332  6E17               	movwf	___wmul@multiplicand,c
  3251  001334  EC8E  F012         	call	___wmul	;wreg free
  3252  001338  0E05               	movlw	5
  3253  00133A  2615               	addwf	?___wmul,f,c
  3254  00133C  0E00               	movlw	0
  3255  00133E  2216               	addwfc	?___wmul+1,f,c
  3256  001340  0EF0               	movlw	low _STATES
  3257  001342  2415               	addwf	?___wmul,w,c
  3258  001344  6ED9               	movwf	fsr2l,c
  3259  001346  0E01               	movlw	high _STATES
  3260  001348  2016               	addwfc	?___wmul+1,w,c
  3261  00134A  6EDA               	movwf	fsr2h,c
  3262  00134C  0E01               	movlw	1
  3263  00134E  D044               	goto	L5
  3264  001350                     l3587:
  3265                           
  3266                           ;eeprom.c: 130: else if (ReadEeprom(TempSpecialAdd) & ((0x80)>>(i%8)))
  3267  001350  C030  F01D         	movff	LoadStatesFromEeprom@i,??_LoadStatesFromEeprom
  3268  001354  0E07               	movlw	7
  3269  001356  161D               	andwf	??_LoadStatesFromEeprom,f,c
  3270  001358  0E80               	movlw	128
  3271  00135A  6E1E               	movwf	(??_LoadStatesFromEeprom+1)& (0+255),c
  3272  00135C  0E00               	movlw	0
  3273  00135E  6E1F               	movwf	(??_LoadStatesFromEeprom+2)& (0+255),c
  3274  001360  2A1D               	incf	??_LoadStatesFromEeprom,f,c
  3275  001362  D003               	goto	u2544
  3276  001364                     u2545:
  3277  001364  341F               	rlcf	??_LoadStatesFromEeprom+2,w,c
  3278  001366  321F               	rrcf	??_LoadStatesFromEeprom+2,f,c
  3279  001368  321E               	rrcf	??_LoadStatesFromEeprom+1,f,c
  3280  00136A                     u2544:
  3281  00136A  2E1D               	decfsz	??_LoadStatesFromEeprom,f,c
  3282  00136C  D7FB               	goto	u2545
  3283  00136E  C027  F015         	movff	LoadStatesFromEeprom@TempSpecialAdd,ReadEeprom@Address
  3284  001372  C028  F016         	movff	LoadStatesFromEeprom@TempSpecialAdd+1,ReadEeprom@Address+1
  3285  001376  ECC6  F012         	call	_ReadEeprom	;wreg free
  3286  00137A  141E               	andwf	??_LoadStatesFromEeprom+1,w,c
  3287  00137C  0900               	iorlw	0
  3288  00137E  B4D8               	btfsc	status,2,c
  3289  001380  D016               	goto	l3591
  3290                           
  3291                           ;eeprom.c: 131: STATES[i].AUDIO = AUDIO_SPECIAL;
  3292  001382  C030  F015         	movff	LoadStatesFromEeprom@i,___wmul@multiplier
  3293  001386  C031  F016         	movff	LoadStatesFromEeprom@i+1,___wmul@multiplier+1
  3294  00138A  0E00               	movlw	0
  3295  00138C  6E18               	movwf	___wmul@multiplicand+1,c
  3296  00138E  0E06               	movlw	6
  3297  001390  6E17               	movwf	___wmul@multiplicand,c
  3298  001392  EC8E  F012         	call	___wmul	;wreg free
  3299  001396  0E05               	movlw	5
  3300  001398  2615               	addwf	?___wmul,f,c
  3301  00139A  0E00               	movlw	0
  3302  00139C  2216               	addwfc	?___wmul+1,f,c
  3303  00139E  0EF0               	movlw	low _STATES
  3304  0013A0  2415               	addwf	?___wmul,w,c
  3305  0013A2  6ED9               	movwf	fsr2l,c
  3306  0013A4  0E01               	movlw	high _STATES
  3307  0013A6  2016               	addwfc	?___wmul+1,w,c
  3308  0013A8  6EDA               	movwf	fsr2h,c
  3309  0013AA  0E02               	movlw	2
  3310  0013AC  D015               	goto	L5
  3311  0013AE                     l3591:
  3312                           
  3313                           ;eeprom.c: 132: else
  3314                           ;eeprom.c: 133: STATES[i].AUDIO = AUDIO_OFF;
  3315  0013AE  C030  F015         	movff	LoadStatesFromEeprom@i,___wmul@multiplier
  3316  0013B2  C031  F016         	movff	LoadStatesFromEeprom@i+1,___wmul@multiplier+1
  3317  0013B6  0E00               	movlw	0
  3318  0013B8  6E18               	movwf	___wmul@multiplicand+1,c
  3319  0013BA  0E06               	movlw	6
  3320  0013BC  6E17               	movwf	___wmul@multiplicand,c
  3321  0013BE  EC8E  F012         	call	___wmul	;wreg free
  3322  0013C2  0E05               	movlw	5
  3323  0013C4  2615               	addwf	?___wmul,f,c
  3324  0013C6  0E00               	movlw	0
  3325  0013C8  2216               	addwfc	?___wmul+1,f,c
  3326  0013CA  0EF0               	movlw	low _STATES
  3327  0013CC  2415               	addwf	?___wmul,w,c
  3328  0013CE  6ED9               	movwf	fsr2l,c
  3329  0013D0  0E01               	movlw	high _STATES
  3330  0013D2  2016               	addwfc	?___wmul+1,w,c
  3331  0013D4  6EDA               	movwf	fsr2h,c
  3332  0013D6  0E00               	movlw	0
  3333  0013D8                     L5:
  3334  0013D8  6EDF               	movwf	indf2,c
  3335  0013DA  4A30               	infsnz	LoadStatesFromEeprom@i,f,c
  3336  0013DC  2A31               	incf	LoadStatesFromEeprom@i+1,f,c
  3337  0013DE  BE31               	btfsc	LoadStatesFromEeprom@i+1,7,c
  3338  0013E0  D6EB               	goto	l3547
  3339  0013E2  5031               	movf	LoadStatesFromEeprom@i+1,w,c
  3340  0013E4  E101               	bnz	l345
  3341  0013E6  D6E2               	goto	L6
  3342  0013E8                     l345:
  3343  0013E8  0012               	return		;funcret
  3344  0013EA                     __end_of_LoadStatesFromEeprom:
  3345                           	opt stack 0
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodh	equ	0xFF4
  3351                           prodl	equ	0xFF3
  3352                           intcon	equ	0xFF2
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           postdec1	equ	0xFE5
  3356                           plusw1	equ	0xFE3
  3357                           fsr1h	equ	0xFE2
  3358                           fsr1l	equ	0xFE1
  3359                           indf2	equ	0xFDF
  3360                           postinc2	equ	0xFDE
  3361                           plusw2	equ	0xFDB
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function _LoadSettingsFromEeprom *****************
  3367 ;; Defined at:
  3368 ;;		line 15 in file "libs/eeprom.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  Temp32          4   27[COMRAM] struct _DWORD_VAL
  3373 ;;  Address         2   33[COMRAM] struct _WORD_VAL
  3374 ;;  Temp16          2   31[COMRAM] struct _WORD_VAL
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;Total ram usage:        9 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    6
  3391 ;; This function calls:
  3392 ;;		_ReadEeprom
  3393 ;;		___wmul
  3394 ;; This function is called by:
  3395 ;;		_LoadAllFromEeprom
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text17
  3400  000F1A                     __ptext17:
  3401                           	opt stack 0
  3402  000F1A                     _LoadSettingsFromEeprom:
  3403                           	opt stack 23
  3404                           
  3405                           ;eeprom.c: 16: WORD_VAL Temp16, Address;
  3406                           ;eeprom.c: 17: DWORD_VAL Temp32;
  3407                           ;eeprom.c: 19: Address.Val = 0;
  3408                           
  3409                           ;incstack = 0
  3410  000F1A  0E00               	movlw	0
  3411  000F1C  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3412  000F1E  0E00               	movlw	0
  3413  000F20  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3414                           
  3415                           ;eeprom.c: 20: Temp16.v[0] = ReadEeprom(Address);
  3416  000F22  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3417  000F26  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3418  000F2A  ECC6  F012         	call	_ReadEeprom	;wreg free
  3419  000F2E  6E20               	movwf	LoadSettingsFromEeprom@Temp16,c
  3420                           
  3421                           ;eeprom.c: 21: Address.Val++;
  3422  000F30  4A22               	infsnz	LoadSettingsFromEeprom@Address,f,c
  3423  000F32  2A23               	incf	LoadSettingsFromEeprom@Address+1,f,c
  3424                           
  3425                           ;eeprom.c: 22: Temp16.v[1] = ReadEeprom(Address);
  3426  000F34  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3427  000F38  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3428  000F3C  ECC6  F012         	call	_ReadEeprom	;wreg free
  3429  000F40  6E21               	movwf	LoadSettingsFromEeprom@Temp16+1,c
  3430                           
  3431                           ;eeprom.c: 23: TIME_ZONE = (INT16) Temp16.Val;
  3432  000F42  C020  F0AE         	movff	LoadSettingsFromEeprom@Temp16,_TIME_ZONE
  3433  000F46  C021  F0AF         	movff	LoadSettingsFromEeprom@Temp16+1,_TIME_ZONE+1
  3434                           
  3435                           ;eeprom.c: 25: Address.Val = 2;
  3436  000F4A  0E00               	movlw	0
  3437  000F4C  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3438  000F4E  0E02               	movlw	2
  3439  000F50  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3440                           
  3441                           ;eeprom.c: 26: DAY_LIGHT_START.Day = ReadEeprom (Address);
  3442  000F52  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3443  000F56  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3444  000F5A  ECC6  F012         	call	_ReadEeprom	;wreg free
  3445  000F5E  6E1B               	movwf	??_LoadSettingsFromEeprom& (0+255),c
  3446  000F60  503C               	movf	_DAY_LIGHT_START,w,c
  3447  000F62  181B               	xorwf	??_LoadSettingsFromEeprom,w,c
  3448  000F64  0BE0               	andlw	-32
  3449  000F66  181B               	xorwf	??_LoadSettingsFromEeprom,w,c
  3450  000F68  6E3C               	movwf	_DAY_LIGHT_START,c
  3451                           
  3452                           ;eeprom.c: 27: Address.Val++;
  3453  000F6A  4A22               	infsnz	LoadSettingsFromEeprom@Address,f,c
  3454  000F6C  2A23               	incf	LoadSettingsFromEeprom@Address+1,f,c
  3455                           
  3456                           ;eeprom.c: 28: DAY_LIGHT_START.Month = ReadEeprom (Address);
  3457  000F6E  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3458  000F72  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3459  000F76  ECC6  F012         	call	_ReadEeprom	;wreg free
  3460  000F7A  6E1B               	movwf	??_LoadSettingsFromEeprom& (0+255),c
  3461  000F7C  503D               	movf	_DAY_LIGHT_START+1,w,c
  3462  000F7E  181B               	xorwf	??_LoadSettingsFromEeprom,w,c
  3463  000F80  0BF0               	andlw	-16
  3464  000F82  181B               	xorwf	??_LoadSettingsFromEeprom,w,c
  3465  000F84  6E3D               	movwf	_DAY_LIGHT_START+1,c
  3466                           
  3467                           ;eeprom.c: 30: Address.Val = 4;
  3468  000F86  0E00               	movlw	0
  3469  000F88  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3470  000F8A  0E04               	movlw	4
  3471  000F8C  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3472                           
  3473                           ;eeprom.c: 31: DAY_LIGHT_END.Day = ReadEeprom (Address);
  3474  000F8E  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3475  000F92  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3476  000F96  ECC6  F012         	call	_ReadEeprom	;wreg free
  3477  000F9A  6E1B               	movwf	??_LoadSettingsFromEeprom& (0+255),c
  3478  000F9C  503A               	movf	_DAY_LIGHT_END,w,c
  3479  000F9E  181B               	xorwf	??_LoadSettingsFromEeprom,w,c
  3480  000FA0  0BE0               	andlw	-32
  3481  000FA2  181B               	xorwf	??_LoadSettingsFromEeprom,w,c
  3482  000FA4  6E3A               	movwf	_DAY_LIGHT_END,c
  3483                           
  3484                           ;eeprom.c: 32: Address.Val++;
  3485  000FA6  4A22               	infsnz	LoadSettingsFromEeprom@Address,f,c
  3486  000FA8  2A23               	incf	LoadSettingsFromEeprom@Address+1,f,c
  3487                           
  3488                           ;eeprom.c: 33: DAY_LIGHT_END.Month = ReadEeprom (Address);
  3489  000FAA  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3490  000FAE  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3491  000FB2  ECC6  F012         	call	_ReadEeprom	;wreg free
  3492  000FB6  6E1B               	movwf	??_LoadSettingsFromEeprom& (0+255),c
  3493  000FB8  503B               	movf	_DAY_LIGHT_END+1,w,c
  3494  000FBA  181B               	xorwf	??_LoadSettingsFromEeprom,w,c
  3495  000FBC  0BF0               	andlw	-16
  3496  000FBE  181B               	xorwf	??_LoadSettingsFromEeprom,w,c
  3497  000FC0  6E3B               	movwf	_DAY_LIGHT_END+1,c
  3498                           
  3499                           ;eeprom.c: 35: Address.Val = 6;
  3500  000FC2  0E00               	movlw	0
  3501  000FC4  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3502  000FC6  0E06               	movlw	6
  3503  000FC8  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3504                           
  3505                           ;eeprom.c: 36: CENTURY = ReadEeprom(Address);
  3506  000FCA  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3507  000FCE  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3508  000FD2  ECC6  F012         	call	_ReadEeprom	;wreg free
  3509  000FD6  6E49               	movwf	_CENTURY,c
  3510                           
  3511                           ;eeprom.c: 38: Address.Val = 7;
  3512  000FD8  0E00               	movlw	0
  3513  000FDA  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3514  000FDC  0E07               	movlw	7
  3515  000FDE  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3516                           
  3517                           ;eeprom.c: 39: Temp16.v[0] = ReadEeprom(Address);
  3518  000FE0  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3519  000FE4  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3520  000FE8  ECC6  F012         	call	_ReadEeprom	;wreg free
  3521  000FEC  6E20               	movwf	LoadSettingsFromEeprom@Temp16,c
  3522                           
  3523                           ;eeprom.c: 40: Address.Val++;
  3524  000FEE  4A22               	infsnz	LoadSettingsFromEeprom@Address,f,c
  3525  000FF0  2A23               	incf	LoadSettingsFromEeprom@Address+1,f,c
  3526                           
  3527                           ;eeprom.c: 41: Temp16.v[1] = ReadEeprom(Address);
  3528  000FF2  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3529  000FF6  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3530  000FFA  ECC6  F012         	call	_ReadEeprom	;wreg free
  3531  000FFE  6E21               	movwf	LoadSettingsFromEeprom@Temp16+1,c
  3532                           
  3533                           ;eeprom.c: 42: CYCLE_DELAY = (INT16) Temp16.Val;
  3534  001000  C020  F0AC         	movff	LoadSettingsFromEeprom@Temp16,_CYCLE_DELAY
  3535  001004  C021  F0AD         	movff	LoadSettingsFromEeprom@Temp16+1,_CYCLE_DELAY+1
  3536                           
  3537                           ;eeprom.c: 44: Address.Val = 9;
  3538  001008  0E00               	movlw	0
  3539  00100A  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3540  00100C  0E09               	movlw	9
  3541  00100E  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3542                           
  3543                           ;eeprom.c: 45: BLINK_ON_TIME = ReadEeprom(Address);
  3544  001010  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3545  001014  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3546  001018  ECC6  F012         	call	_ReadEeprom	;wreg free
  3547  00101C  6E48               	movwf	_BLINK_ON_TIME,c
  3548                           
  3549                           ;eeprom.c: 47: Address.Val = 10;
  3550  00101E  0E00               	movlw	0
  3551  001020  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3552  001022  0E0A               	movlw	10
  3553  001024  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3554                           
  3555                           ;eeprom.c: 48: BLINK_OFF_TIME = ReadEeprom(Address);
  3556  001026  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3557  00102A  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3558  00102E  ECC6  F012         	call	_ReadEeprom	;wreg free
  3559  001032  6E47               	movwf	_BLINK_OFF_TIME,c
  3560                           
  3561                           ;eeprom.c: 50: Address.Val = 11;
  3562  001034  0E00               	movlw	0
  3563  001036  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3564  001038  0E0B               	movlw	11
  3565  00103A  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3566                           
  3567                           ;eeprom.c: 51: BLINK_LAST_X_SECONDS = ReadEeprom(Address);
  3568  00103C  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3569  001040  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3570  001044  ECC6  F012         	call	_ReadEeprom	;wreg free
  3571  001048  6E46               	movwf	_BLINK_LAST_X_SECONDS,c
  3572                           
  3573                           ;eeprom.c: 53: Address.Val = 12;
  3574  00104A  0E00               	movlw	0
  3575  00104C  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3576  00104E  0E0C               	movlw	12
  3577  001050  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3578                           
  3579                           ;eeprom.c: 54: AUDIO_NORMAL_ON_TIME = ReadEeprom(Address);
  3580  001052  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3581  001056  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3582  00105A  ECC6  F012         	call	_ReadEeprom	;wreg free
  3583  00105E  6E45               	movwf	_AUDIO_NORMAL_ON_TIME,c
  3584                           
  3585                           ;eeprom.c: 56: Address.Val = 13;
  3586  001060  0E00               	movlw	0
  3587  001062  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3588  001064  0E0D               	movlw	13
  3589  001066  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3590                           
  3591                           ;eeprom.c: 57: AUDIO_NORMAL_OFF_TIME = ReadEeprom(Address);
  3592  001068  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3593  00106C  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3594  001070  ECC6  F012         	call	_ReadEeprom	;wreg free
  3595  001074  6E44               	movwf	_AUDIO_NORMAL_OFF_TIME,c
  3596                           
  3597                           ;eeprom.c: 59: Address.Val = 14;
  3598  001076  0E00               	movlw	0
  3599  001078  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3600  00107A  0E0E               	movlw	14
  3601  00107C  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3602                           
  3603                           ;eeprom.c: 60: AUDIO_SPECIAL_ON_TIME = ReadEeprom(Address);
  3604  00107E  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3605  001082  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3606  001086  ECC6  F012         	call	_ReadEeprom	;wreg free
  3607  00108A  6E43               	movwf	_AUDIO_SPECIAL_ON_TIME,c
  3608                           
  3609                           ;eeprom.c: 62: Address.Val = 15;
  3610  00108C  0E00               	movlw	0
  3611  00108E  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3612  001090  0E0F               	movlw	15
  3613  001092  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3614                           
  3615                           ;eeprom.c: 63: AUDIO_SPECIAL_OFF_TIME = ReadEeprom(Address);
  3616  001094  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3617  001098  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3618  00109C  ECC6  F012         	call	_ReadEeprom	;wreg free
  3619  0010A0  6E42               	movwf	_AUDIO_SPECIAL_OFF_TIME,c
  3620                           
  3621                           ;eeprom.c: 65: Address.Val = 16;
  3622  0010A2  0E00               	movlw	0
  3623  0010A4  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3624  0010A6  0E10               	movlw	16
  3625  0010A8  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3626                           
  3627                           ;eeprom.c: 66: SPECIAL_AUDIO_LAST_X_SECONDS = ReadEeprom(Address);
  3628  0010AA  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3629  0010AE  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3630  0010B2  ECC6  F012         	call	_ReadEeprom	;wreg free
  3631  0010B6  6E41               	movwf	_SPECIAL_AUDIO_LAST_X_SECONDS,c
  3632                           
  3633                           ;eeprom.c: 68: Address.Val = 17;
  3634  0010B8  0E00               	movlw	0
  3635  0010BA  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3636  0010BC  0E11               	movlw	17
  3637  0010BE  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3638                           
  3639                           ;eeprom.c: 69: GPS_SYNC_AT_START = ReadEeprom(Address);
  3640  0010C0  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3641  0010C4  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3642  0010C8  ECC6  F012         	call	_ReadEeprom	;wreg free
  3643  0010CC  6E40               	movwf	_GPS_SYNC_AT_START,c
  3644                           
  3645                           ;eeprom.c: 71: Address.Val = 18;
  3646  0010CE  0E00               	movlw	0
  3647  0010D0  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3648  0010D2  0E12               	movlw	18
  3649  0010D4  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3650                           
  3651                           ;eeprom.c: 72: Temp32.Val = 0;
  3652  0010D6  0E00               	movlw	0
  3653  0010D8  6E1C               	movwf	LoadSettingsFromEeprom@Temp32,c
  3654  0010DA  0E00               	movlw	0
  3655  0010DC  6E1D               	movwf	LoadSettingsFromEeprom@Temp32+1,c
  3656  0010DE  0E00               	movlw	0
  3657  0010E0  6E1E               	movwf	LoadSettingsFromEeprom@Temp32+2,c
  3658  0010E2  0E00               	movlw	0
  3659  0010E4  6E1F               	movwf	LoadSettingsFromEeprom@Temp32+3,c
  3660                           
  3661                           ;eeprom.c: 73: Temp32.v[0] = ReadEeprom(Address);
  3662  0010E6  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3663  0010EA  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3664  0010EE  ECC6  F012         	call	_ReadEeprom	;wreg free
  3665  0010F2  6E1C               	movwf	LoadSettingsFromEeprom@Temp32,c
  3666                           
  3667                           ;eeprom.c: 74: Address.Val++;
  3668  0010F4  4A22               	infsnz	LoadSettingsFromEeprom@Address,f,c
  3669  0010F6  2A23               	incf	LoadSettingsFromEeprom@Address+1,f,c
  3670                           
  3671                           ;eeprom.c: 75: Temp32.v[1] = ReadEeprom(Address);
  3672  0010F8  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3673  0010FC  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3674  001100  ECC6  F012         	call	_ReadEeprom	;wreg free
  3675  001104  6E1D               	movwf	LoadSettingsFromEeprom@Temp32+1,c
  3676                           
  3677                           ;eeprom.c: 76: Address.Val++;
  3678  001106  4A22               	infsnz	LoadSettingsFromEeprom@Address,f,c
  3679  001108  2A23               	incf	LoadSettingsFromEeprom@Address+1,f,c
  3680                           
  3681                           ;eeprom.c: 77: Temp32.v[2] = ReadEeprom(Address);
  3682  00110A  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3683  00110E  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3684  001112  ECC6  F012         	call	_ReadEeprom	;wreg free
  3685  001116  6E1E               	movwf	LoadSettingsFromEeprom@Temp32+2,c
  3686                           
  3687                           ;eeprom.c: 78: GPS_SYNC_EVERY_x_SECONDS = Temp32.Val;
  3688  001118  C01C  F0A8         	movff	LoadSettingsFromEeprom@Temp32,_GPS_SYNC_EVERY_x_SECONDS
  3689  00111C  C01D  F0A9         	movff	LoadSettingsFromEeprom@Temp32+1,_GPS_SYNC_EVERY_x_SECONDS+1
  3690  001120  C01E  F0AA         	movff	LoadSettingsFromEeprom@Temp32+2,_GPS_SYNC_EVERY_x_SECONDS+2
  3691  001124  C01F  F0AB         	movff	LoadSettingsFromEeprom@Temp32+3,_GPS_SYNC_EVERY_x_SECONDS+3
  3692                           
  3693                           ;eeprom.c: 80: Address.Val = 21;
  3694  001128  0E00               	movlw	0
  3695  00112A  6E23               	movwf	LoadSettingsFromEeprom@Address+1,c
  3696  00112C  0E15               	movlw	21
  3697  00112E  6E22               	movwf	LoadSettingsFromEeprom@Address,c
  3698                           
  3699                           ;eeprom.c: 81: Temp16.v[0] = ReadEeprom(Address);
  3700  001130  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3701  001134  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3702  001138  ECC6  F012         	call	_ReadEeprom	;wreg free
  3703  00113C  6E20               	movwf	LoadSettingsFromEeprom@Temp16,c
  3704                           
  3705                           ;eeprom.c: 82: Address.Val++;
  3706  00113E  4A22               	infsnz	LoadSettingsFromEeprom@Address,f,c
  3707  001140  2A23               	incf	LoadSettingsFromEeprom@Address+1,f,c
  3708                           
  3709                           ;eeprom.c: 83: Temp16.v[1] = ReadEeprom(Address);
  3710  001142  C022  F015         	movff	LoadSettingsFromEeprom@Address,ReadEeprom@Address
  3711  001146  C023  F016         	movff	LoadSettingsFromEeprom@Address+1,ReadEeprom@Address+1
  3712  00114A  ECC6  F012         	call	_ReadEeprom	;wreg free
  3713  00114E  6E21               	movwf	LoadSettingsFromEeprom@Temp16+1,c
  3714                           
  3715                           ;eeprom.c: 84: GPS_SYNC_EVERY_DAY_AT_LOCAL_TIME = Temp16.v[1]*60*60 + Temp16.v[0]*60;
  3716  001150  C021  F015         	movff	LoadSettingsFromEeprom@Temp16+1,___wmul@multiplier
  3717  001154  6A16               	clrf	___wmul@multiplier+1,c
  3718  001156  0E0E               	movlw	14
  3719  001158  6E18               	movwf	___wmul@multiplicand+1,c
  3720  00115A  0E10               	movlw	16
  3721  00115C  6E17               	movwf	___wmul@multiplicand,c
  3722  00115E  EC8E  F012         	call	___wmul	;wreg free
  3723  001162  5020               	movf	LoadSettingsFromEeprom@Temp16,w,c
  3724  001164  0D3C               	mullw	60
  3725  001166  50F3               	movf	prodl,w,c
  3726  001168  2615               	addwf	?___wmul,f,c
  3727  00116A  50F4               	movf	prodh,w,c
  3728  00116C  2216               	addwfc	?___wmul+1,f,c
  3729  00116E  C015  F0A4         	movff	?___wmul,_GPS_SYNC_EVERY_DAY_AT_LOCAL_TIME
  3730  001172  C016  F0A5         	movff	?___wmul+1,_GPS_SYNC_EVERY_DAY_AT_LOCAL_TIME+1
  3731  001176  0100               	movlb	0	; () banked
  3732  001178  0E00               	movlw	0
  3733  00117A  BFA5               	btfsc	(_GPS_SYNC_EVERY_DAY_AT_LOCAL_TIME+1)& (0+255),7,b
  3734  00117C  0EFF               	movlw	-1
  3735  00117E  6FA6               	movwf	(_GPS_SYNC_EVERY_DAY_AT_LOCAL_TIME+2)& (0+255),b
  3736  001180  6FA7               	movwf	(_GPS_SYNC_EVERY_DAY_AT_LOCAL_TIME+3)& (0+255),b
  3737                           
  3738                           ; BSR set to: 0
  3739  001182  0012               	return		;funcret
  3740  001184                     __end_of_LoadSettingsFromEeprom:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           postinc0	equ	0xFEE
  3750                           wreg	equ	0xFE8
  3751                           postdec1	equ	0xFE5
  3752                           plusw1	equ	0xFE3
  3753                           fsr1h	equ	0xFE2
  3754                           fsr1l	equ	0xFE1
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           plusw2	equ	0xFDB
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _LoadEventsFromEeprom *****************
  3763 ;; Defined at:
  3764 ;;		line 87 in file "libs/eeprom.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  i               2   30[COMRAM] int 
  3769 ;;  Temp16          2   34[COMRAM] struct _WORD_VAL
  3770 ;;  Address         2   32[COMRAM] struct _WORD_VAL
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;Total ram usage:       10 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    6
  3787 ;; This function calls:
  3788 ;;		_ReadEeprom
  3789 ;;		___wmul
  3790 ;; This function is called by:
  3791 ;;		_LoadAllFromEeprom
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text18
  3796  0013EA                     __ptext18:
  3797                           	opt stack 0
  3798  0013EA                     _LoadEventsFromEeprom:
  3799                           	opt stack 23
  3800                           
  3801                           ;eeprom.c: 88: WORD_VAL Temp16, Address;
  3802                           ;eeprom.c: 89: Address.Val = 80;
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;incstack = 0
  3806  0013EA  0E00               	movlw	0
  3807  0013EC  6E22               	movwf	LoadEventsFromEeprom@Address+1,c
  3808  0013EE  0E50               	movlw	80
  3809  0013F0  6E21               	movwf	LoadEventsFromEeprom@Address,c
  3810                           
  3811                           ;eeprom.c: 90: for (int i=0; i<24; i++) {
  3812  0013F2  0E00               	movlw	0
  3813  0013F4  6E20               	movwf	LoadEventsFromEeprom@i+1,c
  3814  0013F6  0E00               	movlw	0
  3815  0013F8  6E1F               	movwf	LoadEventsFromEeprom@i,c
  3816  0013FA  BE20               	btfsc	LoadEventsFromEeprom@i+1,7,c
  3817  0013FC  D008               	goto	l3513
  3818  0013FE  5020               	movf	LoadEventsFromEeprom@i+1,w,c
  3819  001400  E105               	bnz	u2450
  3820  001402  0E18               	movlw	24
  3821  001404  5C1F               	subwf	LoadEventsFromEeprom@i,w,c
  3822  001406  B0D8               	btfsc	status,0,c
  3823  001408  0012               	return	
  3824  00140A  D001               	goto	l3513
  3825  00140C                     u2450:
  3826  00140C  0012               	return	
  3827  00140E                     l3513:
  3828                           
  3829                           ;eeprom.c: 91: Temp16.v[0] = ReadEeprom(Address);
  3830  00140E  C021  F015         	movff	LoadEventsFromEeprom@Address,ReadEeprom@Address
  3831  001412  C022  F016         	movff	LoadEventsFromEeprom@Address+1,ReadEeprom@Address+1
  3832  001416  ECC6  F012         	call	_ReadEeprom	;wreg free
  3833  00141A  6E23               	movwf	LoadEventsFromEeprom@Temp16,c
  3834                           
  3835                           ;eeprom.c: 92: Address.Val++;
  3836  00141C  4A21               	infsnz	LoadEventsFromEeprom@Address,f,c
  3837  00141E  2A22               	incf	LoadEventsFromEeprom@Address+1,f,c
  3838                           
  3839                           ;eeprom.c: 93: Temp16.v[1] = ReadEeprom(Address);
  3840  001420  C021  F015         	movff	LoadEventsFromEeprom@Address,ReadEeprom@Address
  3841  001424  C022  F016         	movff	LoadEventsFromEeprom@Address+1,ReadEeprom@Address+1
  3842  001428  ECC6  F012         	call	_ReadEeprom	;wreg free
  3843  00142C  6E24               	movwf	LoadEventsFromEeprom@Temp16+1,c
  3844                           
  3845                           ;eeprom.c: 94: EVENTS[i].START_TIME = Temp16.v[1]*60*60+Temp16.v[0]*60;
  3846  00142E  C024  F015         	movff	LoadEventsFromEeprom@Temp16+1,___wmul@multiplier
  3847  001432  6A16               	clrf	___wmul@multiplier+1,c
  3848  001434  0E0E               	movlw	14
  3849  001436  6E18               	movwf	___wmul@multiplicand+1,c
  3850  001438  0E10               	movlw	16
  3851  00143A  6E17               	movwf	___wmul@multiplicand,c
  3852  00143C  EC8E  F012         	call	___wmul	;wreg free
  3853  001440  5023               	movf	LoadEventsFromEeprom@Temp16,w,c
  3854  001442  0D3C               	mullw	60
  3855  001444  50F3               	movf	prodl,w,c
  3856  001446  2415               	addwf	?___wmul,w,c
  3857  001448  6E1B               	movwf	??_LoadEventsFromEeprom& (0+255),c
  3858  00144A  50F4               	movf	prodh,w,c
  3859  00144C  2016               	addwfc	?___wmul+1,w,c
  3860  00144E  6E1C               	movwf	(??_LoadEventsFromEeprom+1)& (0+255),c
  3861  001450  6A1D               	clrf	(??_LoadEventsFromEeprom+2)& (0+255),c
  3862  001452  BE1C               	btfsc	(??_LoadEventsFromEeprom+1)& (0+255),7,c
  3863  001454  061D               	decf	(??_LoadEventsFromEeprom+2)& (0+255),f,c
  3864  001456  501D               	movf	(??_LoadEventsFromEeprom+2)& (0+255),w,c
  3865  001458  6E1E               	movwf	(??_LoadEventsFromEeprom+3)& (0+255),c
  3866  00145A  C01F  F015         	movff	LoadEventsFromEeprom@i,___wmul@multiplier
  3867  00145E  C020  F016         	movff	LoadEventsFromEeprom@i+1,___wmul@multiplier+1
  3868  001462  0E00               	movlw	0
  3869  001464  6E18               	movwf	___wmul@multiplicand+1,c
  3870  001466  0E0A               	movlw	10
  3871  001468  6E17               	movwf	___wmul@multiplicand,c
  3872  00146A  EC8E  F012         	call	___wmul	;wreg free
  3873  00146E  0E00               	movlw	low _EVENTS
  3874  001470  2415               	addwf	?___wmul,w,c
  3875  001472  6ED9               	movwf	fsr2l,c
  3876  001474  0E01               	movlw	high _EVENTS
  3877  001476  2016               	addwfc	?___wmul+1,w,c
  3878  001478  6EDA               	movwf	fsr2h,c
  3879  00147A  C01B  FFDE         	movff	??_LoadEventsFromEeprom,postinc2
  3880  00147E  C01C  FFDE         	movff	??_LoadEventsFromEeprom+1,postinc2
  3881  001482  C01D  FFDE         	movff	??_LoadEventsFromEeprom+2,postinc2
  3882  001486  C01E  FFDE         	movff	??_LoadEventsFromEeprom+3,postinc2
  3883                           
  3884                           ;eeprom.c: 95: Address.Val++;
  3885  00148A  4A21               	infsnz	LoadEventsFromEeprom@Address,f,c
  3886  00148C  2A22               	incf	LoadEventsFromEeprom@Address+1,f,c
  3887                           
  3888                           ;eeprom.c: 96: Temp16.v[0] = ReadEeprom(Address);
  3889  00148E  C021  F015         	movff	LoadEventsFromEeprom@Address,ReadEeprom@Address
  3890  001492  C022  F016         	movff	LoadEventsFromEeprom@Address+1,ReadEeprom@Address+1
  3891  001496  ECC6  F012         	call	_ReadEeprom	;wreg free
  3892  00149A  6E23               	movwf	LoadEventsFromEeprom@Temp16,c
  3893                           
  3894                           ;eeprom.c: 97: Address.Val++;
  3895  00149C  4A21               	infsnz	LoadEventsFromEeprom@Address,f,c
  3896  00149E  2A22               	incf	LoadEventsFromEeprom@Address+1,f,c
  3897                           
  3898                           ;eeprom.c: 98: Temp16.v[1] = ReadEeprom(Address);
  3899  0014A0  C021  F015         	movff	LoadEventsFromEeprom@Address,ReadEeprom@Address
  3900  0014A4  C022  F016         	movff	LoadEventsFromEeprom@Address+1,ReadEeprom@Address+1
  3901  0014A8  ECC6  F012         	call	_ReadEeprom	;wreg free
  3902  0014AC  6E24               	movwf	LoadEventsFromEeprom@Temp16+1,c
  3903                           
  3904                           ;eeprom.c: 99: EVENTS[i].END_TIME = Temp16.v[1]*60*60+Temp16.v[0]*60;
  3905  0014AE  C024  F015         	movff	LoadEventsFromEeprom@Temp16+1,___wmul@multiplier
  3906  0014B2  6A16               	clrf	___wmul@multiplier+1,c
  3907  0014B4  0E0E               	movlw	14
  3908  0014B6  6E18               	movwf	___wmul@multiplicand+1,c
  3909  0014B8  0E10               	movlw	16
  3910  0014BA  6E17               	movwf	___wmul@multiplicand,c
  3911  0014BC  EC8E  F012         	call	___wmul	;wreg free
  3912  0014C0  5023               	movf	LoadEventsFromEeprom@Temp16,w,c
  3913  0014C2  0D3C               	mullw	60
  3914  0014C4  50F3               	movf	prodl,w,c
  3915  0014C6  2415               	addwf	?___wmul,w,c
  3916  0014C8  6E1B               	movwf	??_LoadEventsFromEeprom& (0+255),c
  3917  0014CA  50F4               	movf	prodh,w,c
  3918  0014CC  2016               	addwfc	?___wmul+1,w,c
  3919  0014CE  6E1C               	movwf	(??_LoadEventsFromEeprom+1)& (0+255),c
  3920  0014D0  6A1D               	clrf	(??_LoadEventsFromEeprom+2)& (0+255),c
  3921  0014D2  BE1C               	btfsc	(??_LoadEventsFromEeprom+1)& (0+255),7,c
  3922  0014D4  061D               	decf	(??_LoadEventsFromEeprom+2)& (0+255),f,c
  3923  0014D6  501D               	movf	(??_LoadEventsFromEeprom+2)& (0+255),w,c
  3924  0014D8  6E1E               	movwf	(??_LoadEventsFromEeprom+3)& (0+255),c
  3925  0014DA  C01F  F015         	movff	LoadEventsFromEeprom@i,___wmul@multiplier
  3926  0014DE  C020  F016         	movff	LoadEventsFromEeprom@i+1,___wmul@multiplier+1
  3927  0014E2  0E00               	movlw	0
  3928  0014E4  6E18               	movwf	___wmul@multiplicand+1,c
  3929  0014E6  0E0A               	movlw	10
  3930  0014E8  6E17               	movwf	___wmul@multiplicand,c
  3931  0014EA  EC8E  F012         	call	___wmul	;wreg free
  3932  0014EE  0E04               	movlw	4
  3933  0014F0  2615               	addwf	?___wmul,f,c
  3934  0014F2  0E00               	movlw	0
  3935  0014F4  2216               	addwfc	?___wmul+1,f,c
  3936  0014F6  0E00               	movlw	low _EVENTS
  3937  0014F8  2415               	addwf	?___wmul,w,c
  3938  0014FA  6ED9               	movwf	fsr2l,c
  3939  0014FC  0E01               	movlw	high _EVENTS
  3940  0014FE  2016               	addwfc	?___wmul+1,w,c
  3941  001500  6EDA               	movwf	fsr2h,c
  3942  001502  C01B  FFDE         	movff	??_LoadEventsFromEeprom,postinc2
  3943  001506  C01C  FFDE         	movff	??_LoadEventsFromEeprom+1,postinc2
  3944  00150A  C01D  FFDE         	movff	??_LoadEventsFromEeprom+2,postinc2
  3945  00150E  C01E  FFDE         	movff	??_LoadEventsFromEeprom+3,postinc2
  3946                           
  3947                           ;eeprom.c: 100: Address.Val++;
  3948  001512  4A21               	infsnz	LoadEventsFromEeprom@Address,f,c
  3949  001514  2A22               	incf	LoadEventsFromEeprom@Address+1,f,c
  3950                           
  3951                           ;eeprom.c: 101: EVENTS[i].CYCLE = ReadEeprom(Address);
  3952  001516  C01F  F015         	movff	LoadEventsFromEeprom@i,___wmul@multiplier
  3953  00151A  C020  F016         	movff	LoadEventsFromEeprom@i+1,___wmul@multiplier+1
  3954  00151E  0E00               	movlw	0
  3955  001520  6E18               	movwf	___wmul@multiplicand+1,c
  3956  001522  0E0A               	movlw	10
  3957  001524  6E17               	movwf	___wmul@multiplicand,c
  3958  001526  EC8E  F012         	call	___wmul	;wreg free
  3959  00152A  0E08               	movlw	8
  3960  00152C  2615               	addwf	?___wmul,f,c
  3961  00152E  0E00               	movlw	0
  3962  001530  2216               	addwfc	?___wmul+1,f,c
  3963  001532  0E00               	movlw	low _EVENTS
  3964  001534  2415               	addwf	?___wmul,w,c
  3965  001536  6ED9               	movwf	fsr2l,c
  3966  001538  0E01               	movlw	high _EVENTS
  3967  00153A  2016               	addwfc	?___wmul+1,w,c
  3968  00153C  6EDA               	movwf	fsr2h,c
  3969  00153E  C021  F015         	movff	LoadEventsFromEeprom@Address,ReadEeprom@Address
  3970  001542  C022  F016         	movff	LoadEventsFromEeprom@Address+1,ReadEeprom@Address+1
  3971  001546  ECC6  F012         	call	_ReadEeprom	;wreg free
  3972  00154A  6EDF               	movwf	indf2,c
  3973                           
  3974                           ;eeprom.c: 102: Address.Val++;
  3975  00154C  4A21               	infsnz	LoadEventsFromEeprom@Address,f,c
  3976  00154E  2A22               	incf	LoadEventsFromEeprom@Address+1,f,c
  3977                           
  3978                           ;eeprom.c: 103: EVENTS[i].SELECTED_WEEKS.Val = ReadEeprom(Address);
  3979  001550  C021  F015         	movff	LoadEventsFromEeprom@Address,ReadEeprom@Address
  3980  001554  C022  F016         	movff	LoadEventsFromEeprom@Address+1,ReadEeprom@Address+1
  3981  001558  ECC6  F012         	call	_ReadEeprom	;wreg free
  3982  00155C  6E1B               	movwf	??_LoadEventsFromEeprom& (0+255),c
  3983  00155E  C01F  F015         	movff	LoadEventsFromEeprom@i,___wmul@multiplier
  3984  001562  C020  F016         	movff	LoadEventsFromEeprom@i+1,___wmul@multiplier+1
  3985  001566  0E00               	movlw	0
  3986  001568  6E18               	movwf	___wmul@multiplicand+1,c
  3987  00156A  0E0A               	movlw	10
  3988  00156C  6E17               	movwf	___wmul@multiplicand,c
  3989  00156E  EC8E  F012         	call	___wmul	;wreg free
  3990  001572  0E09               	movlw	9
  3991  001574  2615               	addwf	?___wmul,f,c
  3992  001576  0E00               	movlw	0
  3993  001578  2216               	addwfc	?___wmul+1,f,c
  3994  00157A  0E00               	movlw	low _EVENTS
  3995  00157C  2415               	addwf	?___wmul,w,c
  3996  00157E  6ED9               	movwf	fsr2l,c
  3997  001580  0E01               	movlw	high _EVENTS
  3998  001582  2016               	addwfc	?___wmul+1,w,c
  3999  001584  6EDA               	movwf	fsr2h,c
  4000  001586  461B               	rlncf	??_LoadEventsFromEeprom,f,c
  4001  001588  0101               	movlb	1	; () banked
  4002  00158A  50DF               	movf	223,w,c
  4003  00158C  181B               	xorwf	??_LoadEventsFromEeprom,w,c
  4004  00158E  0B01               	andlw	-255
  4005  001590  181B               	xorwf	??_LoadEventsFromEeprom,w,c
  4006  001592  0101               	movlb	1	; () banked
  4007  001594  6EDF               	movwf	223,c
  4008                           
  4009                           ; BSR set to: 1
  4010                           ;eeprom.c: 104: Address.Val++;
  4011  001596  4A21               	infsnz	LoadEventsFromEeprom@Address,f,c
  4012  001598  2A22               	incf	LoadEventsFromEeprom@Address+1,f,c
  4013                           
  4014                           ; BSR set to: 1
  4015  00159A  4A1F               	infsnz	LoadEventsFromEeprom@i,f,c
  4016  00159C  2A20               	incf	LoadEventsFromEeprom@i+1,f,c
  4017                           
  4018                           ; BSR set to: 1
  4019  00159E  BE20               	btfsc	LoadEventsFromEeprom@i+1,7,c
  4020  0015A0  D736               	goto	l3513
  4021  0015A2  5020               	movf	LoadEventsFromEeprom@i+1,w,c
  4022  0015A4  E101               	bnz	l332
  4023  0015A6  D72D               	goto	L7
  4024  0015A8                     l332:
  4025  0015A8  0012               	return		;funcret
  4026  0015AA                     __end_of_LoadEventsFromEeprom:
  4027                           	opt stack 0
  4028                           tblptru	equ	0xFF8
  4029                           tblptrh	equ	0xFF7
  4030                           tblptrl	equ	0xFF6
  4031                           tablat	equ	0xFF5
  4032                           prodh	equ	0xFF4
  4033                           prodl	equ	0xFF3
  4034                           intcon	equ	0xFF2
  4035                           postinc0	equ	0xFEE
  4036                           wreg	equ	0xFE8
  4037                           postdec1	equ	0xFE5
  4038                           plusw1	equ	0xFE3
  4039                           fsr1h	equ	0xFE2
  4040                           fsr1l	equ	0xFE1
  4041                           indf2	equ	0xFDF
  4042                           postinc2	equ	0xFDE
  4043                           plusw2	equ	0xFDB
  4044                           fsr2h	equ	0xFDA
  4045                           fsr2l	equ	0xFD9
  4046                           status	equ	0xFD8
  4047                           
  4048 ;; *************** function _ReadEeprom *****************
  4049 ;; Defined at:
  4050 ;;		line 3 in file "libs/eeprom.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  Address         2   20[COMRAM] struct _WORD_VAL
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      unsigned char 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4067 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4068 ;;Total ram usage:        2 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    5
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_LoadSettingsFromEeprom
  4075 ;;		_LoadEventsFromEeprom
  4076 ;;		_LoadStatesFromEeprom
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text19
  4081  00258C                     __ptext19:
  4082                           	opt stack 0
  4083  00258C                     _ReadEeprom:
  4084                           	opt stack 23
  4085                           
  4086                           ;eeprom.c: 6: NVMCON1bits.NVMREG = 00;
  4087                           
  4088                           ;incstack = 0
  4089  00258C  0E3F               	movlw	-193
  4090  00258E  1681               	andwf	3969,f,c	;volatile
  4091                           
  4092                           ;eeprom.c: 7: NVMADRL = Address.v[0];
  4093  002590  C015  FF7E         	movff	ReadEeprom@Address,3966	;volatile
  4094                           
  4095                           ;eeprom.c: 8: NVMADRH = Address.v[1];
  4096  002594  C016  FF7F         	movff	ReadEeprom@Address+1,3967	;volatile
  4097                           
  4098                           ;eeprom.c: 9: NVMCON1bits.RD = 1;
  4099  002598  8081               	bsf	3969,0,c	;volatile
  4100                           
  4101                           ;eeprom.c: 11: NVMCON1bits.NVMREG1 = 1;
  4102  00259A  8E81               	bsf	3969,7,c	;volatile
  4103                           
  4104                           ;eeprom.c: 12: return NVMDAT;
  4105  00259C  5080               	movf	3968,w,c	;volatile
  4106  00259E  0012               	return	
  4107  0025A0                     __end_of_ReadEeprom:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           postdec1	equ	0xFE5
  4119                           plusw1	equ	0xFE3
  4120                           fsr1h	equ	0xFE2
  4121                           fsr1l	equ	0xFE1
  4122                           indf2	equ	0xFDF
  4123                           postinc2	equ	0xFDE
  4124                           plusw2	equ	0xFDB
  4125                           fsr2h	equ	0xFDA
  4126                           fsr2l	equ	0xFD9
  4127                           status	equ	0xFD8
  4128                           
  4129 ;; *************** function _Lcd_Text *****************
  4130 ;; Defined at:
  4131 ;;		line 76 in file "libs/HD44780.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  y               1    wreg     unsigned char 
  4134 ;;  x               1   23[COMRAM] unsigned char 
  4135 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  4136 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(2), 
  4137 ;;		 -> main@Time(7), main@Date(7), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  y               1   26[COMRAM] unsigned char 
  4140 ;;  data            1   27[COMRAM] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4150 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;Total ram usage:        5 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    7
  4157 ;; This function calls:
  4158 ;;		_Lcd_CharCP
  4159 ;;		_Lcd_Command
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text20
  4166  002122                     __ptext20:
  4167                           	opt stack 0
  4168  002122                     _Lcd_Text:
  4169                           	opt stack 23
  4170                           
  4171                           ;incstack = 0
  4172                           ;Lcd_Text@y stored from wreg
  4173  002122  6E1B               	movwf	Lcd_Text@y,c
  4174                           
  4175                           ;HD44780.c: 77: unsigned char data;
  4176                           ;HD44780.c: 78: switch(y){
  4177  002124  D00D               	goto	l3923
  4178  002126                     l3913:
  4179  002126  5018               	movf	Lcd_Text@x,w,c
  4180  002128  0F7F               	addlw	127
  4181  00212A  D008               	goto	L10
  4182  00212C                     l3915:
  4183  00212C  5018               	movf	Lcd_Text@x,w,c
  4184  00212E  0FBF               	addlw	191
  4185  002130  D005               	goto	L10
  4186  002132                     l3917:
  4187  002132  5018               	movf	Lcd_Text@x,w,c
  4188  002134  0F93               	addlw	147
  4189  002136  D002               	goto	L10
  4190  002138                     l3919:
  4191  002138  5018               	movf	Lcd_Text@x,w,c
  4192  00213A  0FD3               	addlw	211
  4193  00213C                     L10:
  4194  00213C  6E1C               	movwf	Lcd_Text@data,c
  4195                           
  4196                           ;HD44780.c: 83: default: break;}
  4197  00213E  D00D               	goto	l3925
  4198  002140                     l3923:
  4199  002140  501B               	movf	Lcd_Text@y,w,c
  4200                           
  4201                           ; Switch size 1, requested type "space"
  4202                           ; Number of cases is 4, Range of values is 1 to 4
  4203                           ; switch strategies available:
  4204                           ; Name         Instructions Cycles
  4205                           ; simple_byte           13     7 (average)
  4206                           ;	Chosen strategy is simple_byte
  4207  002142  0A01               	xorlw	1	; case 1
  4208  002144  B4D8               	btfsc	status,2,c
  4209  002146  D7EF               	goto	l3913
  4210  002148  0A03               	xorlw	3	; case 2
  4211  00214A  B4D8               	btfsc	status,2,c
  4212  00214C  D7EF               	goto	l3915
  4213  00214E  0A01               	xorlw	1	; case 3
  4214  002150  B4D8               	btfsc	status,2,c
  4215  002152  D7EF               	goto	l3917
  4216  002154  0A07               	xorlw	7	; case 4
  4217  002156  B4D8               	btfsc	status,2,c
  4218  002158  D7EF               	goto	l3919
  4219  00215A                     l3925:
  4220                           
  4221                           ;HD44780.c: 84: Lcd_Command(data);
  4222  00215A  501C               	movf	Lcd_Text@data,w,c
  4223  00215C  EC0F  F00E         	call	_Lcd_Command
  4224                           
  4225                           ;HD44780.c: 85: while(*buffer)
  4226  002160  D015               	goto	l3931
  4227  002162                     l3927:
  4228                           
  4229                           ;HD44780.c: 86: {
  4230                           ;HD44780.c: 87: Lcd_CharCP(*buffer);
  4231  002162  C019  FFF6         	movff	Lcd_Text@buffer,tblptrl
  4232  002166  C01A  FFF7         	movff	Lcd_Text@buffer+1,tblptrh
  4233  00216A  0E00               	movlw	low (__smallconst shr (0+16))
  4234  00216C  6EF8               	movwf	tblptru,c
  4235  00216E  0E0E               	movlw	(high __ramtop+-1)
  4236  002170  64F7               	cpfsgt	tblptrh,c
  4237  002172  D003               	bra	u3027
  4238  002174  0008               	tblrd		*
  4239  002176  50F5               	movf	tablat,w,c
  4240  002178  D005               	bra	u3020
  4241  00217A                     u3027:
  4242  00217A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4243  00217E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4244  002182  50E7               	movf	indf1,w,c
  4245  002184                     u3020:
  4246  002184  EC84  F00D         	call	_Lcd_CharCP
  4247                           
  4248                           ;HD44780.c: 88: buffer++;
  4249  002188  4A19               	infsnz	Lcd_Text@buffer,f,c
  4250  00218A  2A1A               	incf	Lcd_Text@buffer+1,f,c
  4251  00218C                     l3931:
  4252  00218C  C019  FFF6         	movff	Lcd_Text@buffer,tblptrl
  4253  002190  C01A  FFF7         	movff	Lcd_Text@buffer+1,tblptrh
  4254  002194  0E00               	movlw	low (__smallconst shr (0+16))
  4255  002196  6EF8               	movwf	tblptru,c
  4256  002198  0E0E               	movlw	(high __ramtop+-1)
  4257  00219A  64F7               	cpfsgt	tblptrh,c
  4258  00219C  D003               	bra	u3037
  4259  00219E  0008               	tblrd		*
  4260  0021A0  50F5               	movf	tablat,w,c
  4261  0021A2  D005               	bra	u3030
  4262  0021A4                     u3037:
  4263  0021A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  4264  0021A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  4265  0021AC  50E7               	movf	indf1,w,c
  4266  0021AE                     u3030:
  4267  0021AE  0900               	iorlw	0
  4268  0021B0  B4D8               	btfsc	status,2,c
  4269  0021B2  0012               	return	
  4270  0021B4  D7D6               	goto	l3927
  4271  0021B6                     __end_of_Lcd_Text:
  4272                           	opt stack 0
  4273                           tblptru	equ	0xFF8
  4274                           tblptrh	equ	0xFF7
  4275                           tblptrl	equ	0xFF6
  4276                           tablat	equ	0xFF5
  4277                           prodh	equ	0xFF4
  4278                           prodl	equ	0xFF3
  4279                           intcon	equ	0xFF2
  4280                           postinc0	equ	0xFEE
  4281                           wreg	equ	0xFE8
  4282                           indf1	equ	0xFE7
  4283                           postdec1	equ	0xFE5
  4284                           plusw1	equ	0xFE3
  4285                           fsr1h	equ	0xFE2
  4286                           fsr1l	equ	0xFE1
  4287                           indf2	equ	0xFDF
  4288                           postinc2	equ	0xFDE
  4289                           plusw2	equ	0xFDB
  4290                           fsr2h	equ	0xFDA
  4291                           fsr2l	equ	0xFD9
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function _Lcd_Int *****************
  4295 ;; Defined at:
  4296 ;;		line 157 in file "libs/HD44780.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  y               1    wreg     unsigned char 
  4299 ;;  x               1   48[COMRAM] unsigned char 
  4300 ;;  val             1   49[COMRAM] unsigned char 
  4301 ;;  size            1   50[COMRAM] unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  y               1    0[BANK0 ] unsigned char 
  4304 ;;  tempVal         2    2[BANK0 ] unsigned int 
  4305 ;;  data            1    1[BANK0 ] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4315 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4316 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4318 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4319 ;;Total ram usage:        7 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    7
  4322 ;; This function calls:
  4323 ;;		_Lcd_CharCP
  4324 ;;		_Lcd_Command
  4325 ;;		___awdiv
  4326 ;;		___lwdiv
  4327 ;;		___wmul
  4328 ;; This function is called by:
  4329 ;;		_main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text21
  4334  001D34                     __ptext21:
  4335                           	opt stack 0
  4336  001D34                     _Lcd_Int:
  4337                           	opt stack 23
  4338                           
  4339                           ;incstack = 0
  4340                           ;Lcd_Int@y stored from wreg
  4341  001D34  0100               	movlb	0	; () banked
  4342  001D36  6FD8               	movwf	Lcd_Int@y& (0+255),b
  4343                           
  4344                           ;HD44780.c: 158: if ((size>0) && (size<=3)) {
  4345  001D38  5033               	movf	Lcd_Int@size,w,c
  4346  001D3A  B4D8               	btfsc	status,2,c
  4347  001D3C  0012               	return	
  4348  001D3E  0E04               	movlw	4
  4349  001D40  6033               	cpfslt	Lcd_Int@size,c
  4350  001D42  0012               	return	
  4351                           
  4352                           ;HD44780.c: 159: unsigned int tempVal=val;
  4353  001D44  C032  F0DA         	movff	Lcd_Int@val,Lcd_Int@tempVal
  4354  001D48  0100               	movlb	0	; () banked
  4355  001D4A  6BDB               	clrf	(Lcd_Int@tempVal+1)& (0+255),b
  4356                           
  4357                           ;HD44780.c: 160: unsigned char data;
  4358                           ;HD44780.c: 161: switch(y){
  4359  001D4C  D00E               	goto	l3949
  4360  001D4E                     l3939:
  4361                           
  4362                           ; BSR set to: 0
  4363  001D4E  5031               	movf	Lcd_Int@x,w,c
  4364  001D50  0F7F               	addlw	127
  4365  001D52  D008               	goto	L13
  4366  001D54                     l3941:
  4367                           
  4368                           ; BSR set to: 0
  4369  001D54  5031               	movf	Lcd_Int@x,w,c
  4370  001D56  0FBF               	addlw	191
  4371  001D58  D005               	goto	L13
  4372  001D5A                     l3943:
  4373                           
  4374                           ; BSR set to: 0
  4375  001D5A  5031               	movf	Lcd_Int@x,w,c
  4376  001D5C  0F93               	addlw	147
  4377  001D5E  D002               	goto	L13
  4378  001D60                     l3945:
  4379                           
  4380                           ; BSR set to: 0
  4381  001D60  5031               	movf	Lcd_Int@x,w,c
  4382  001D62  0FD3               	addlw	211
  4383  001D64                     L13:
  4384  001D64  0100               	movlb	0	; () banked
  4385  001D66  6FD9               	movwf	Lcd_Int@data& (0+255),b
  4386                           
  4387                           ; BSR set to: 0
  4388                           
  4389                           ; BSR set to: 0
  4390                           
  4391                           ;HD44780.c: 166: default: break;}
  4392  001D68  D00E               	goto	l3951
  4393  001D6A                     l3949:
  4394                           
  4395                           ; BSR set to: 0
  4396  001D6A  0100               	movlb	0	; () banked
  4397  001D6C  51D8               	movf	Lcd_Int@y& (0+255),w,b
  4398                           
  4399                           ; Switch size 1, requested type "space"
  4400                           ; Number of cases is 4, Range of values is 1 to 4
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte           13     7 (average)
  4404                           ;	Chosen strategy is simple_byte
  4405  001D6E  0A01               	xorlw	1	; case 1
  4406  001D70  B4D8               	btfsc	status,2,c
  4407  001D72  D7ED               	goto	l3939
  4408  001D74  0A03               	xorlw	3	; case 2
  4409  001D76  B4D8               	btfsc	status,2,c
  4410  001D78  D7ED               	goto	l3941
  4411  001D7A  0A01               	xorlw	1	; case 3
  4412  001D7C  B4D8               	btfsc	status,2,c
  4413  001D7E  D7ED               	goto	l3943
  4414  001D80  0A07               	xorlw	7	; case 4
  4415  001D82  B4D8               	btfsc	status,2,c
  4416  001D84  D7ED               	goto	l3945
  4417  001D86                     l3951:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;HD44780.c: 167: Lcd_Command(data);
  4421  001D86  0100               	movlb	0	; () banked
  4422  001D88  51D9               	movf	Lcd_Int@data& (0+255),w,b
  4423  001D8A  EC0F  F00E         	call	_Lcd_Command
  4424                           
  4425                           ;HD44780.c: 168: if (size>=3){
  4426  001D8E  0E02               	movlw	2
  4427  001D90  6433               	cpfsgt	Lcd_Int@size,c
  4428  001D92  D012               	goto	l3957
  4429                           
  4430                           ;HD44780.c: 169: tempVal = val/100;
  4431  001D94  C032  F015         	movff	Lcd_Int@val,___awdiv@dividend
  4432  001D98  6A16               	clrf	___awdiv@dividend+1,c
  4433  001D9A  0E00               	movlw	0
  4434  001D9C  6E18               	movwf	___awdiv@divisor+1,c
  4435  001D9E  0E64               	movlw	100
  4436  001DA0  6E17               	movwf	___awdiv@divisor,c
  4437  001DA2  ECDB  F010         	call	___awdiv	;wreg free
  4438  001DA6  C015  F0DA         	movff	?___awdiv,Lcd_Int@tempVal
  4439  001DAA  C016  F0DB         	movff	?___awdiv+1,Lcd_Int@tempVal+1
  4440                           
  4441                           ;HD44780.c: 170: Lcd_CharCP(0x30+(tempVal));
  4442  001DAE  0100               	movlb	0	; () banked
  4443  001DB0  51DA               	movf	Lcd_Int@tempVal& (0+255),w,b
  4444  001DB2  0F30               	addlw	48
  4445  001DB4  EC84  F00D         	call	_Lcd_CharCP
  4446  001DB8                     l3957:
  4447                           
  4448                           ;HD44780.c: 171: }
  4449                           ;HD44780.c: 172: if (size>=2){
  4450  001DB8  0E01               	movlw	1
  4451  001DBA  6433               	cpfsgt	Lcd_Int@size,c
  4452  001DBC  D023               	goto	l3963
  4453                           
  4454                           ;HD44780.c: 173: tempVal = (val-tempVal*100)/10;
  4455  001DBE  C0DA  F015         	movff	Lcd_Int@tempVal,___wmul@multiplier
  4456  001DC2  C0DB  F016         	movff	Lcd_Int@tempVal+1,___wmul@multiplier+1
  4457  001DC6  0E00               	movlw	0
  4458  001DC8  6E18               	movwf	___wmul@multiplicand+1,c
  4459  001DCA  0E64               	movlw	100
  4460  001DCC  6E17               	movwf	___wmul@multiplicand,c
  4461  001DCE  EC8E  F012         	call	___wmul	;wreg free
  4462  001DD2  1E15               	comf	?___wmul,f,c
  4463  001DD4  1E16               	comf	?___wmul+1,f,c
  4464  001DD6  4A15               	infsnz	?___wmul,f,c
  4465  001DD8  2A16               	incf	?___wmul+1,f,c
  4466  001DDA  5032               	movf	Lcd_Int@val,w,c
  4467  001DDC  2415               	addwf	?___wmul,w,c
  4468  001DDE  6E1B               	movwf	___lwdiv@dividend,c
  4469  001DE0  0E00               	movlw	0
  4470  001DE2  2016               	addwfc	?___wmul+1,w,c
  4471  001DE4  6E1C               	movwf	___lwdiv@dividend+1,c
  4472  001DE6  0E00               	movlw	0
  4473  001DE8  6E1E               	movwf	___lwdiv@divisor+1,c
  4474  001DEA  0E0A               	movlw	10
  4475  001DEC  6E1D               	movwf	___lwdiv@divisor,c
  4476  001DEE  ECCA  F011         	call	___lwdiv	;wreg free
  4477  001DF2  C01B  F0DA         	movff	?___lwdiv,Lcd_Int@tempVal
  4478  001DF6  C01C  F0DB         	movff	?___lwdiv+1,Lcd_Int@tempVal+1
  4479                           
  4480                           ;HD44780.c: 174: Lcd_CharCP(0x30+(tempVal));
  4481  001DFA  0100               	movlb	0	; () banked
  4482  001DFC  51DA               	movf	Lcd_Int@tempVal& (0+255),w,b
  4483  001DFE  0F30               	addlw	48
  4484  001E00  EC84  F00D         	call	_Lcd_CharCP
  4485  001E04                     l3963:
  4486                           
  4487                           ;HD44780.c: 175: }
  4488                           ;HD44780.c: 176: if (size>=1){
  4489  001E04  5033               	movf	Lcd_Int@size,w,c
  4490  001E06  B4D8               	btfsc	status,2,c
  4491  001E08  0012               	return	
  4492                           
  4493                           ;HD44780.c: 177: tempVal = val/10;
  4494  001E0A  C032  F015         	movff	Lcd_Int@val,___awdiv@dividend
  4495  001E0E  6A16               	clrf	___awdiv@dividend+1,c
  4496  001E10  0E00               	movlw	0
  4497  001E12  6E18               	movwf	___awdiv@divisor+1,c
  4498  001E14  0E0A               	movlw	10
  4499  001E16  6E17               	movwf	___awdiv@divisor,c
  4500  001E18  ECDB  F010         	call	___awdiv	;wreg free
  4501  001E1C  C015  F0DA         	movff	?___awdiv,Lcd_Int@tempVal
  4502  001E20  C016  F0DB         	movff	?___awdiv+1,Lcd_Int@tempVal+1
  4503                           
  4504                           ;HD44780.c: 178: Lcd_CharCP(0x30+(val - tempVal*10));
  4505  001E24  0100               	movlb	0	; () banked
  4506  001E26  51DA               	movf	Lcd_Int@tempVal& (0+255),w,b
  4507  001E28  0D0A               	mullw	10
  4508  001E2A  50F3               	movf	prodl,w,c
  4509  001E2C  0800               	sublw	0
  4510  001E2E  2432               	addwf	Lcd_Int@val,w,c
  4511  001E30  0F30               	addlw	48
  4512  001E32  EC84  F00D         	call	_Lcd_CharCP
  4513  001E36  0012               	return	
  4514  001E38                     __end_of_Lcd_Int:
  4515                           	opt stack 0
  4516                           tblptru	equ	0xFF8
  4517                           tblptrh	equ	0xFF7
  4518                           tblptrl	equ	0xFF6
  4519                           tablat	equ	0xFF5
  4520                           prodh	equ	0xFF4
  4521                           prodl	equ	0xFF3
  4522                           intcon	equ	0xFF2
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           indf1	equ	0xFE7
  4526                           postdec1	equ	0xFE5
  4527                           plusw1	equ	0xFE3
  4528                           fsr1h	equ	0xFE2
  4529                           fsr1l	equ	0xFE1
  4530                           indf2	equ	0xFDF
  4531                           postinc2	equ	0xFDE
  4532                           plusw2	equ	0xFDB
  4533                           fsr2h	equ	0xFDA
  4534                           fsr2l	equ	0xFD9
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function ___lwdiv *****************
  4538 ;; Defined at:
  4539 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  dividend        2   26[COMRAM] unsigned int 
  4542 ;;  divisor         2   28[COMRAM] unsigned int 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  quotient        2   31[COMRAM] unsigned int 
  4545 ;;  counter         1   30[COMRAM] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  2   26[COMRAM] unsigned int 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4556 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4559 ;;Total ram usage:        7 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    5
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_Lcd_Int
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text22
  4570  002394                     __ptext22:
  4571                           	opt stack 0
  4572  002394                     ___lwdiv:
  4573                           	opt stack 24
  4574                           
  4575                           ;incstack = 0
  4576  002394  0E00               	movlw	0
  4577  002396  6E21               	movwf	___lwdiv@quotient+1,c
  4578  002398  0E00               	movlw	0
  4579  00239A  6E20               	movwf	___lwdiv@quotient,c
  4580  00239C  501D               	movf	___lwdiv@divisor,w,c
  4581  00239E  101E               	iorwf	___lwdiv@divisor+1,w,c
  4582  0023A0  B4D8               	btfsc	status,2,c
  4583  0023A2  D01C               	goto	l1082
  4584  0023A4  0E01               	movlw	1
  4585  0023A6  6E1F               	movwf	___lwdiv@counter,c
  4586  0023A8  D004               	goto	l3715
  4587  0023AA                     l3713:
  4588  0023AA  90D8               	bcf	status,0,c
  4589  0023AC  361D               	rlcf	___lwdiv@divisor,f,c
  4590  0023AE  361E               	rlcf	___lwdiv@divisor+1,f,c
  4591  0023B0  2A1F               	incf	___lwdiv@counter,f,c
  4592  0023B2                     l3715:
  4593  0023B2  AE1E               	btfss	___lwdiv@divisor+1,7,c
  4594  0023B4  D7FA               	goto	l3713
  4595  0023B6                     l3717:
  4596  0023B6  90D8               	bcf	status,0,c
  4597  0023B8  3620               	rlcf	___lwdiv@quotient,f,c
  4598  0023BA  3621               	rlcf	___lwdiv@quotient+1,f,c
  4599  0023BC  501D               	movf	___lwdiv@divisor,w,c
  4600  0023BE  5C1B               	subwf	___lwdiv@dividend,w,c
  4601  0023C0  501E               	movf	___lwdiv@divisor+1,w,c
  4602  0023C2  581C               	subwfb	___lwdiv@dividend+1,w,c
  4603  0023C4  A0D8               	btfss	status,0,c
  4604  0023C6  D005               	goto	l3725
  4605  0023C8  501D               	movf	___lwdiv@divisor,w,c
  4606  0023CA  5E1B               	subwf	___lwdiv@dividend,f,c
  4607  0023CC  501E               	movf	___lwdiv@divisor+1,w,c
  4608  0023CE  5A1C               	subwfb	___lwdiv@dividend+1,f,c
  4609  0023D0  8020               	bsf	___lwdiv@quotient,0,c
  4610  0023D2                     l3725:
  4611  0023D2  90D8               	bcf	status,0,c
  4612  0023D4  321E               	rrcf	___lwdiv@divisor+1,f,c
  4613  0023D6  321D               	rrcf	___lwdiv@divisor,f,c
  4614  0023D8  2E1F               	decfsz	___lwdiv@counter,f,c
  4615  0023DA  D7ED               	goto	l3717
  4616  0023DC                     l1082:
  4617  0023DC  C020  F01B         	movff	___lwdiv@quotient,?___lwdiv
  4618  0023E0  C021  F01C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4619  0023E4  0012               	return		;funcret
  4620  0023E6                     __end_of___lwdiv:
  4621                           	opt stack 0
  4622                           tblptru	equ	0xFF8
  4623                           tblptrh	equ	0xFF7
  4624                           tblptrl	equ	0xFF6
  4625                           tablat	equ	0xFF5
  4626                           prodh	equ	0xFF4
  4627                           prodl	equ	0xFF3
  4628                           intcon	equ	0xFF2
  4629                           postinc0	equ	0xFEE
  4630                           wreg	equ	0xFE8
  4631                           indf1	equ	0xFE7
  4632                           postdec1	equ	0xFE5
  4633                           plusw1	equ	0xFE3
  4634                           fsr1h	equ	0xFE2
  4635                           fsr1l	equ	0xFE1
  4636                           indf2	equ	0xFDF
  4637                           postinc2	equ	0xFDE
  4638                           plusw2	equ	0xFDB
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _Lcd_CharCP *****************
  4644 ;; Defined at:
  4645 ;;		line 116 in file "libs/HD44780.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  c               1    wreg     unsigned char 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  c               1   22[COMRAM] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;Total ram usage:        3 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    6
  4666 ;; This function calls:
  4667 ;;		_Lcd_Delay5us
  4668 ;; This function is called by:
  4669 ;;		_Lcd_Text
  4670 ;;		_Lcd_WriteChar
  4671 ;;		_Lcd_Int
  4672 ;;		_ShowRawData
  4673 ;;		_Lcd_ConstText
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text23
  4678  001B08                     __ptext23:
  4679                           	opt stack 0
  4680  001B08                     _Lcd_CharCP:
  4681                           	opt stack 22
  4682                           
  4683                           ;incstack = 0
  4684                           ;Lcd_CharCP@c stored from wreg
  4685  001B08  6E17               	movwf	Lcd_CharCP@c,c
  4686                           
  4687                           ;HD44780.c: 117: LATAbits.LA1 = 0; LATAbits.LA0 = 1;
  4688  001B0A  9283               	bcf	3971,1,c	;volatile
  4689  001B0C  8083               	bsf	3971,0,c	;volatile
  4690                           
  4691                           ;HD44780.c: 118: LATAbits.LA5 = (c & 0b10000000)>>7; LATAbits.LA4 = (c & 0b01000000)>>6;
  4692  001B0E  6A15               	clrf	??_Lcd_CharCP& (0+255),c
  4693  001B10  AE17               	btfss	Lcd_CharCP@c,7,c
  4694  001B12  D001               	bra	u2315
  4695  001B14  2A15               	incf	??_Lcd_CharCP& (0+255),f,c
  4696  001B16                     u2315:
  4697  001B16  0E01               	movlw	1
  4698  001B18  1615               	andwf	??_Lcd_CharCP,f,c
  4699  001B1A  3A15               	swapf	??_Lcd_CharCP,f,c
  4700  001B1C  4615               	rlncf	??_Lcd_CharCP,f,c
  4701  001B1E  5083               	movf	3971,w,c	;volatile
  4702  001B20  1815               	xorwf	??_Lcd_CharCP,w,c
  4703  001B22  0BDF               	andlw	-33
  4704  001B24  1815               	xorwf	??_Lcd_CharCP,w,c
  4705  001B26  6E83               	movwf	3971,c	;volatile
  4706  001B28  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4707  001B2C  0E06               	movlw	6
  4708  001B2E  6E16               	movwf	(??_Lcd_CharCP+1)& (0+255),c
  4709  001B30                     u2325:
  4710  001B30  90D8               	bcf	status,0,c
  4711  001B32  3215               	rrcf	??_Lcd_CharCP,f,c
  4712  001B34  2E16               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
  4713  001B36  D7FC               	goto	u2325
  4714  001B38  0E01               	movlw	1
  4715  001B3A  1615               	andwf	??_Lcd_CharCP,f,c
  4716  001B3C  3A15               	swapf	??_Lcd_CharCP,f,c
  4717  001B3E  5083               	movf	3971,w,c	;volatile
  4718  001B40  1815               	xorwf	??_Lcd_CharCP,w,c
  4719  001B42  0BEF               	andlw	-17
  4720  001B44  1815               	xorwf	??_Lcd_CharCP,w,c
  4721  001B46  6E83               	movwf	3971,c	;volatile
  4722                           
  4723                           ;HD44780.c: 119: LATAbits.LA3 = (c & 0b00100000)>>5; LATAbits.LA2 = (c & 0b00010000)>>4;
  4724  001B48  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4725  001B4C  0E05               	movlw	5
  4726  001B4E  6E16               	movwf	(??_Lcd_CharCP+1)& (0+255),c
  4727  001B50                     u2335:
  4728  001B50  90D8               	bcf	status,0,c
  4729  001B52  3215               	rrcf	??_Lcd_CharCP,f,c
  4730  001B54  2E16               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
  4731  001B56  D7FC               	goto	u2335
  4732  001B58  0E01               	movlw	1
  4733  001B5A  1615               	andwf	??_Lcd_CharCP,f,c
  4734  001B5C  4615               	rlncf	??_Lcd_CharCP,f,c
  4735  001B5E  4615               	rlncf	??_Lcd_CharCP,f,c
  4736  001B60  4615               	rlncf	??_Lcd_CharCP,f,c
  4737  001B62  5083               	movf	3971,w,c	;volatile
  4738  001B64  1815               	xorwf	??_Lcd_CharCP,w,c
  4739  001B66  0BF7               	andlw	-9
  4740  001B68  1815               	xorwf	??_Lcd_CharCP,w,c
  4741  001B6A  6E83               	movwf	3971,c	;volatile
  4742  001B6C  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4743  001B70  3A15               	swapf	??_Lcd_CharCP,f,c
  4744  001B72  0E0F               	movlw	15
  4745  001B74  1615               	andwf	??_Lcd_CharCP,f,c
  4746  001B76  0E01               	movlw	1
  4747  001B78  1615               	andwf	??_Lcd_CharCP,f,c
  4748  001B7A  4615               	rlncf	??_Lcd_CharCP,f,c
  4749  001B7C  4615               	rlncf	??_Lcd_CharCP,f,c
  4750  001B7E  5083               	movf	3971,w,c	;volatile
  4751  001B80  1815               	xorwf	??_Lcd_CharCP,w,c
  4752  001B82  0BFB               	andlw	-5
  4753  001B84  1815               	xorwf	??_Lcd_CharCP,w,c
  4754  001B86  6E83               	movwf	3971,c	;volatile
  4755                           
  4756                           ;HD44780.c: 120: _delay(10);
  4757  001B88  0E03               	movlw	3
  4758  001B8A                     u3327:
  4759  001B8A  2EE8               	decfsz	wreg,f,c
  4760  001B8C  D7FE               	bra	u3327
  4761  001B8E  F000               	nop	
  4762                           
  4763                           ;HD44780.c: 121: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  4764  001B90  8283               	bsf	3971,1,c	;volatile
  4765  001B92  ECEE  F012         	call	_Lcd_Delay5us	;wreg free
  4766  001B96  9283               	bcf	3971,1,c	;volatile
  4767                           
  4768                           ;HD44780.c: 122: LATAbits.LA5 = (c & 0b00001000)>>3; LATAbits.LA4 = (c & 0b00000100)>>2;
  4769  001B98  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4770  001B9C  90D8               	bcf	status,0,c
  4771  001B9E  3215               	rrcf	??_Lcd_CharCP,f,c
  4772  001BA0  90D8               	bcf	status,0,c
  4773  001BA2  3215               	rrcf	??_Lcd_CharCP,f,c
  4774  001BA4  90D8               	bcf	status,0,c
  4775  001BA6  3215               	rrcf	??_Lcd_CharCP,f,c
  4776  001BA8  0E01               	movlw	1
  4777  001BAA  1615               	andwf	??_Lcd_CharCP,f,c
  4778  001BAC  3A15               	swapf	??_Lcd_CharCP,f,c
  4779  001BAE  4615               	rlncf	??_Lcd_CharCP,f,c
  4780  001BB0  5083               	movf	3971,w,c	;volatile
  4781  001BB2  1815               	xorwf	??_Lcd_CharCP,w,c
  4782  001BB4  0BDF               	andlw	-33
  4783  001BB6  1815               	xorwf	??_Lcd_CharCP,w,c
  4784  001BB8  6E83               	movwf	3971,c	;volatile
  4785  001BBA  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4786  001BBE  90D8               	bcf	status,0,c
  4787  001BC0  3215               	rrcf	??_Lcd_CharCP,f,c
  4788  001BC2  90D8               	bcf	status,0,c
  4789  001BC4  3215               	rrcf	??_Lcd_CharCP,f,c
  4790  001BC6  0E01               	movlw	1
  4791  001BC8  1615               	andwf	??_Lcd_CharCP,f,c
  4792  001BCA  3A15               	swapf	??_Lcd_CharCP,f,c
  4793  001BCC  5083               	movf	3971,w,c	;volatile
  4794  001BCE  1815               	xorwf	??_Lcd_CharCP,w,c
  4795  001BD0  0BEF               	andlw	-17
  4796  001BD2  1815               	xorwf	??_Lcd_CharCP,w,c
  4797  001BD4  6E83               	movwf	3971,c	;volatile
  4798                           
  4799                           ;HD44780.c: 123: LATAbits.LA3 = (c & 0b00000010)>>1; LATAbits.LA2 = (c & 0b00000001);
  4800  001BD6  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4801  001BDA  90D8               	bcf	status,0,c
  4802  001BDC  3215               	rrcf	??_Lcd_CharCP,f,c
  4803  001BDE  0E01               	movlw	1
  4804  001BE0  1615               	andwf	??_Lcd_CharCP,f,c
  4805  001BE2  4615               	rlncf	??_Lcd_CharCP,f,c
  4806  001BE4  4615               	rlncf	??_Lcd_CharCP,f,c
  4807  001BE6  4615               	rlncf	??_Lcd_CharCP,f,c
  4808  001BE8  5083               	movf	3971,w,c	;volatile
  4809  001BEA  1815               	xorwf	??_Lcd_CharCP,w,c
  4810  001BEC  0BF7               	andlw	-9
  4811  001BEE  1815               	xorwf	??_Lcd_CharCP,w,c
  4812  001BF0  6E83               	movwf	3971,c	;volatile
  4813  001BF2  C017  F015         	movff	Lcd_CharCP@c,??_Lcd_CharCP
  4814  001BF6  0E01               	movlw	1
  4815  001BF8  1615               	andwf	??_Lcd_CharCP,f,c
  4816  001BFA  4615               	rlncf	??_Lcd_CharCP,f,c
  4817  001BFC  4615               	rlncf	??_Lcd_CharCP,f,c
  4818  001BFE  5083               	movf	3971,w,c	;volatile
  4819  001C00  1815               	xorwf	??_Lcd_CharCP,w,c
  4820  001C02  0BFB               	andlw	-5
  4821  001C04  1815               	xorwf	??_Lcd_CharCP,w,c
  4822  001C06  6E83               	movwf	3971,c	;volatile
  4823                           
  4824                           ;HD44780.c: 124: _delay(10);
  4825  001C08  0E03               	movlw	3
  4826  001C0A                     u3337:
  4827  001C0A  2EE8               	decfsz	wreg,f,c
  4828  001C0C  D7FE               	bra	u3337
  4829  001C0E  F000               	nop	
  4830                           
  4831                           ;HD44780.c: 125: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  4832  001C10  8283               	bsf	3971,1,c	;volatile
  4833  001C12  ECEE  F012         	call	_Lcd_Delay5us	;wreg free
  4834  001C16  9283               	bcf	3971,1,c	;volatile
  4835                           
  4836                           ;HD44780.c: 126: Lcd_Delay5us();
  4837  001C18  ECEE  F012         	call	_Lcd_Delay5us	;wreg free
  4838  001C1C  0012               	return		;funcret
  4839  001C1E                     __end_of_Lcd_CharCP:
  4840                           	opt stack 0
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           postinc0	equ	0xFEE
  4849                           wreg	equ	0xFE8
  4850                           indf1	equ	0xFE7
  4851                           postdec1	equ	0xFE5
  4852                           plusw1	equ	0xFE3
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           plusw2	equ	0xFDB
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _Lcd_Init *****************
  4863 ;; Defined at:
  4864 ;;		line 17 in file "libs/HD44780.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  data            1   23[COMRAM] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;Total ram usage:        1 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    7
  4885 ;; This function calls:
  4886 ;;		_Lcd_Command
  4887 ;;		_Lcd_Delay5500us
  4888 ;;		_Lcd_Delay5us
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text24
  4895  001F04                     __ptext24:
  4896                           	opt stack 0
  4897  001F04                     _Lcd_Init:
  4898                           	opt stack 23
  4899                           
  4900                           ;HD44780.c: 23: unsigned char data;
  4901                           ;HD44780.c: 24: TRISAbits.TRISA5 = 0; TRISAbits.TRISA4 = 0; TRISAbits.TRISA3 = 0; TRISAb
      +                          its.TRISA2 = 0; TRISAbits.TRISA1 = 0; TRISAbits.TRISA0 = 0;
  4902                           
  4903                           ;incstack = 0
  4904  001F04  9A88               	bcf	3976,5,c	;volatile
  4905  001F06  9888               	bcf	3976,4,c	;volatile
  4906  001F08  9688               	bcf	3976,3,c	;volatile
  4907  001F0A  9488               	bcf	3976,2,c	;volatile
  4908  001F0C  9288               	bcf	3976,1,c	;volatile
  4909  001F0E  9088               	bcf	3976,0,c	;volatile
  4910                           
  4911                           ;HD44780.c: 25: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 0; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  4912  001F10  9A83               	bcf	3971,5,c	;volatile
  4913  001F12  9883               	bcf	3971,4,c	;volatile
  4914  001F14  9683               	bcf	3971,3,c	;volatile
  4915  001F16  9483               	bcf	3971,2,c	;volatile
  4916  001F18  9283               	bcf	3971,1,c	;volatile
  4917  001F1A  9083               	bcf	3971,0,c	;volatile
  4918                           
  4919                           ;HD44780.c: 26: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  4920  001F1C  ECD9  F012         	call	_Lcd_Delay5500us	;wreg free
  4921  001F20  ECD9  F012         	call	_Lcd_Delay5500us	;wreg free
  4922  001F24  ECD9  F012         	call	_Lcd_Delay5500us	;wreg free
  4923                           
  4924                           ;HD44780.c: 27: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us();
  4925  001F28  ECD9  F012         	call	_Lcd_Delay5500us	;wreg free
  4926  001F2C  ECD9  F012         	call	_Lcd_Delay5500us	;wreg free
  4927  001F30  ECD9  F012         	call	_Lcd_Delay5500us	;wreg free
  4928                           
  4929                           ;HD44780.c: 28: for(data = 1; data < 4; data ++)
  4930  001F34  0E01               	movlw	1
  4931  001F36  6E18               	movwf	Lcd_Init@data,c
  4932  001F38                     l3859:
  4933  001F38  0E03               	movlw	3
  4934  001F3A  6418               	cpfsgt	Lcd_Init@data,c
  4935  001F3C  D001               	goto	l190
  4936  001F3E  D018               	goto	l191
  4937  001F40                     l190:
  4938                           
  4939                           ;HD44780.c: 29: {
  4940                           ;HD44780.c: 30: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  4941  001F40  9A83               	bcf	3971,5,c	;volatile
  4942  001F42  9883               	bcf	3971,4,c	;volatile
  4943  001F44  8683               	bsf	3971,3,c	;volatile
  4944  001F46  8483               	bsf	3971,2,c	;volatile
  4945  001F48  9283               	bcf	3971,1,c	;volatile
  4946  001F4A  9083               	bcf	3971,0,c	;volatile
  4947                           
  4948                           ;HD44780.c: 31: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 1; LATAbits.LA0 = 0;
  4949  001F4C  9A83               	bcf	3971,5,c	;volatile
  4950  001F4E  9883               	bcf	3971,4,c	;volatile
  4951  001F50  8683               	bsf	3971,3,c	;volatile
  4952  001F52  8483               	bsf	3971,2,c	;volatile
  4953  001F54  8283               	bsf	3971,1,c	;volatile
  4954  001F56  9083               	bcf	3971,0,c	;volatile
  4955                           
  4956                           ;HD44780.c: 32: Lcd_Delay5us();
  4957  001F58  ECEE  F012         	call	_Lcd_Delay5us	;wreg free
  4958                           
  4959                           ;HD44780.c: 33: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 1; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  4960  001F5C  9A83               	bcf	3971,5,c	;volatile
  4961  001F5E  9883               	bcf	3971,4,c	;volatile
  4962  001F60  8683               	bsf	3971,3,c	;volatile
  4963  001F62  8483               	bsf	3971,2,c	;volatile
  4964  001F64  9283               	bcf	3971,1,c	;volatile
  4965  001F66  9083               	bcf	3971,0,c	;volatile
  4966                           
  4967                           ;HD44780.c: 34: Lcd_Delay5500us();
  4968  001F68  ECD9  F012         	call	_Lcd_Delay5500us	;wreg free
  4969  001F6C  2A18               	incf	Lcd_Init@data,f,c
  4970  001F6E  D7E4               	goto	l3859
  4971  001F70                     l191:
  4972                           
  4973                           ;HD44780.c: 35: }
  4974                           ;HD44780.c: 36: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  4975  001F70  9A83               	bcf	3971,5,c	;volatile
  4976  001F72  9883               	bcf	3971,4,c	;volatile
  4977  001F74  8683               	bsf	3971,3,c	;volatile
  4978  001F76  9483               	bcf	3971,2,c	;volatile
  4979  001F78  9283               	bcf	3971,1,c	;volatile
  4980  001F7A  9083               	bcf	3971,0,c	;volatile
  4981                           
  4982                           ;HD44780.c: 37: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 1; LATAbits.LA0 = 0;
  4983  001F7C  9A83               	bcf	3971,5,c	;volatile
  4984  001F7E  9883               	bcf	3971,4,c	;volatile
  4985  001F80  8683               	bsf	3971,3,c	;volatile
  4986  001F82  9483               	bcf	3971,2,c	;volatile
  4987  001F84  8283               	bsf	3971,1,c	;volatile
  4988  001F86  9083               	bcf	3971,0,c	;volatile
  4989                           
  4990                           ;HD44780.c: 38: Lcd_Delay5us();
  4991  001F88  ECEE  F012         	call	_Lcd_Delay5us	;wreg free
  4992                           
  4993                           ;HD44780.c: 39: LATAbits.LA5 = 0; LATAbits.LA4 = 0; LATAbits.LA3 = 1; LATAbits.LA2 = 0; 
      +                          LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  4994  001F8C  9A83               	bcf	3971,5,c	;volatile
  4995  001F8E  9883               	bcf	3971,4,c	;volatile
  4996  001F90  8683               	bsf	3971,3,c	;volatile
  4997  001F92  9483               	bcf	3971,2,c	;volatile
  4998  001F94  9283               	bcf	3971,1,c	;volatile
  4999  001F96  9083               	bcf	3971,0,c	;volatile
  5000                           
  5001                           ;HD44780.c: 40: Lcd_Delay5500us();
  5002  001F98  ECD9  F012         	call	_Lcd_Delay5500us	;wreg free
  5003                           
  5004                           ;HD44780.c: 41: data = 40; Lcd_Command(data);
  5005  001F9C  0E28               	movlw	40
  5006  001F9E  6E18               	movwf	Lcd_Init@data,c
  5007  001FA0  5018               	movf	Lcd_Init@data,w,c
  5008  001FA2  EC0F  F00E         	call	_Lcd_Command
  5009                           
  5010                           ;HD44780.c: 42: data = 16; Lcd_Command(data);
  5011  001FA6  0E10               	movlw	16
  5012  001FA8  6E18               	movwf	Lcd_Init@data,c
  5013  001FAA  5018               	movf	Lcd_Init@data,w,c
  5014  001FAC  EC0F  F00E         	call	_Lcd_Command
  5015                           
  5016                           ;HD44780.c: 43: data = 1; Lcd_Command(data);
  5017  001FB0  0E01               	movlw	1
  5018  001FB2  6E18               	movwf	Lcd_Init@data,c
  5019  001FB4  5018               	movf	Lcd_Init@data,w,c
  5020  001FB6  EC0F  F00E         	call	_Lcd_Command
  5021                           
  5022                           ;HD44780.c: 44: data = 15; Lcd_Command(data);
  5023  001FBA  0E0F               	movlw	15
  5024  001FBC  6E18               	movwf	Lcd_Init@data,c
  5025  001FBE  5018               	movf	Lcd_Init@data,w,c
  5026  001FC0  EC0F  F00E         	call	_Lcd_Command
  5027  001FC4  0012               	return		;funcret
  5028  001FC6                     __end_of_Lcd_Init:
  5029                           	opt stack 0
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           intcon	equ	0xFF2
  5037                           postinc0	equ	0xFEE
  5038                           wreg	equ	0xFE8
  5039                           indf1	equ	0xFE7
  5040                           postdec1	equ	0xFE5
  5041                           plusw1	equ	0xFE3
  5042                           fsr1h	equ	0xFE2
  5043                           fsr1l	equ	0xFE1
  5044                           indf2	equ	0xFDF
  5045                           postinc2	equ	0xFDE
  5046                           plusw2	equ	0xFDB
  5047                           fsr2h	equ	0xFDA
  5048                           fsr2l	equ	0xFD9
  5049                           status	equ	0xFD8
  5050                           
  5051 ;; *************** function _Lcd_Delay5500us *****************
  5052 ;; Defined at:
  5053 ;;		line 153 in file "libs/HD44780.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;		None
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;		None
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5071 ;;Total ram usage:        1 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    5
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_Lcd_Init
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text25
  5082  0025B2                     __ptext25:
  5083                           	opt stack 0
  5084  0025B2                     _Lcd_Delay5500us:
  5085                           	opt stack 24
  5086                           
  5087                           ;HD44780.c: 154: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  5088                           
  5089                           ;incstack = 0
  5090  0025B2  0E1D               	movlw	29
  5091  0025B4  6E15               	movwf	??_Lcd_Delay5500us& (0+255),c
  5092  0025B6  0E91               	movlw	145
  5093  0025B8                     u3347:
  5094  0025B8  2EE8               	decfsz	wreg,f,c
  5095  0025BA  D7FE               	bra	u3347
  5096  0025BC  2E15               	decfsz	??_Lcd_Delay5500us& (0+255),f,c
  5097  0025BE  D7FC               	bra	u3347
  5098  0025C0  F000               	nop	
  5099  0025C2  0012               	return		;funcret
  5100  0025C4                     __end_of_Lcd_Delay5500us:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           prodh	equ	0xFF4
  5107                           prodl	equ	0xFF3
  5108                           intcon	equ	0xFF2
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           indf1	equ	0xFE7
  5112                           postdec1	equ	0xFE5
  5113                           plusw1	equ	0xFE3
  5114                           fsr1h	equ	0xFE2
  5115                           fsr1l	equ	0xFE1
  5116                           indf2	equ	0xFDF
  5117                           postinc2	equ	0xFDE
  5118                           plusw2	equ	0xFDB
  5119                           fsr2h	equ	0xFDA
  5120                           fsr2l	equ	0xFD9
  5121                           status	equ	0xFD8
  5122                           
  5123 ;; *************** function _Lcd_Command *****************
  5124 ;; Defined at:
  5125 ;;		line 133 in file "libs/HD44780.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  command         1    wreg     unsigned char 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  command         1   22[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;Total ram usage:        3 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    6
  5146 ;; This function calls:
  5147 ;;		_Lcd_Delay5us
  5148 ;; This function is called by:
  5149 ;;		_Lcd_Init
  5150 ;;		_Lcd_Text
  5151 ;;		_Lcd_WriteChar
  5152 ;;		_Lcd_Int
  5153 ;;		_Lcd_ConstText
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text26
  5158  001C1E                     __ptext26:
  5159                           	opt stack 0
  5160  001C1E                     _Lcd_Command:
  5161                           	opt stack 22
  5162                           
  5163                           ;incstack = 0
  5164                           ;Lcd_Command@command stored from wreg
  5165  001C1E  6E17               	movwf	Lcd_Command@command,c
  5166                           
  5167                           ;HD44780.c: 134: LATAbits.LA1 = 0; LATAbits.LA0 = 0;
  5168  001C20  9283               	bcf	3971,1,c	;volatile
  5169  001C22  9083               	bcf	3971,0,c	;volatile
  5170                           
  5171                           ;HD44780.c: 135: LATAbits.LA5 = (command & 0b10000000)>>7; LATAbits.LA4 = (command & 0b0
      +                          1000000)>>6;
  5172  001C24  6A15               	clrf	??_Lcd_Command& (0+255),c
  5173  001C26  AE17               	btfss	Lcd_Command@command,7,c
  5174  001C28  D001               	bra	u2345
  5175  001C2A  2A15               	incf	??_Lcd_Command& (0+255),f,c
  5176  001C2C                     u2345:
  5177  001C2C  0E01               	movlw	1
  5178  001C2E  1615               	andwf	??_Lcd_Command,f,c
  5179  001C30  3A15               	swapf	??_Lcd_Command,f,c
  5180  001C32  4615               	rlncf	??_Lcd_Command,f,c
  5181  001C34  5083               	movf	3971,w,c	;volatile
  5182  001C36  1815               	xorwf	??_Lcd_Command,w,c
  5183  001C38  0BDF               	andlw	-33
  5184  001C3A  1815               	xorwf	??_Lcd_Command,w,c
  5185  001C3C  6E83               	movwf	3971,c	;volatile
  5186  001C3E  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  5187  001C42  0E06               	movlw	6
  5188  001C44  6E16               	movwf	(??_Lcd_Command+1)& (0+255),c
  5189  001C46                     u2355:
  5190  001C46  90D8               	bcf	status,0,c
  5191  001C48  3215               	rrcf	??_Lcd_Command,f,c
  5192  001C4A  2E16               	decfsz	(??_Lcd_Command+1)& (0+255),f,c
  5193  001C4C  D7FC               	goto	u2355
  5194  001C4E  0E01               	movlw	1
  5195  001C50  1615               	andwf	??_Lcd_Command,f,c
  5196  001C52  3A15               	swapf	??_Lcd_Command,f,c
  5197  001C54  5083               	movf	3971,w,c	;volatile
  5198  001C56  1815               	xorwf	??_Lcd_Command,w,c
  5199  001C58  0BEF               	andlw	-17
  5200  001C5A  1815               	xorwf	??_Lcd_Command,w,c
  5201  001C5C  6E83               	movwf	3971,c	;volatile
  5202                           
  5203                           ;HD44780.c: 136: LATAbits.LA3 = (command & 0b00100000)>>5; LATAbits.LA2 = (command & 0b0
      +                          0010000)>>4;
  5204  001C5E  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  5205  001C62  0E05               	movlw	5
  5206  001C64  6E16               	movwf	(??_Lcd_Command+1)& (0+255),c
  5207  001C66                     u2365:
  5208  001C66  90D8               	bcf	status,0,c
  5209  001C68  3215               	rrcf	??_Lcd_Command,f,c
  5210  001C6A  2E16               	decfsz	(??_Lcd_Command+1)& (0+255),f,c
  5211  001C6C  D7FC               	goto	u2365
  5212  001C6E  0E01               	movlw	1
  5213  001C70  1615               	andwf	??_Lcd_Command,f,c
  5214  001C72  4615               	rlncf	??_Lcd_Command,f,c
  5215  001C74  4615               	rlncf	??_Lcd_Command,f,c
  5216  001C76  4615               	rlncf	??_Lcd_Command,f,c
  5217  001C78  5083               	movf	3971,w,c	;volatile
  5218  001C7A  1815               	xorwf	??_Lcd_Command,w,c
  5219  001C7C  0BF7               	andlw	-9
  5220  001C7E  1815               	xorwf	??_Lcd_Command,w,c
  5221  001C80  6E83               	movwf	3971,c	;volatile
  5222  001C82  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  5223  001C86  3A15               	swapf	??_Lcd_Command,f,c
  5224  001C88  0E0F               	movlw	15
  5225  001C8A  1615               	andwf	??_Lcd_Command,f,c
  5226  001C8C  0E01               	movlw	1
  5227  001C8E  1615               	andwf	??_Lcd_Command,f,c
  5228  001C90  4615               	rlncf	??_Lcd_Command,f,c
  5229  001C92  4615               	rlncf	??_Lcd_Command,f,c
  5230  001C94  5083               	movf	3971,w,c	;volatile
  5231  001C96  1815               	xorwf	??_Lcd_Command,w,c
  5232  001C98  0BFB               	andlw	-5
  5233  001C9A  1815               	xorwf	??_Lcd_Command,w,c
  5234  001C9C  6E83               	movwf	3971,c	;volatile
  5235                           
  5236                           ;HD44780.c: 137: _delay(10);
  5237  001C9E  0E03               	movlw	3
  5238  001CA0                     u3357:
  5239  001CA0  2EE8               	decfsz	wreg,f,c
  5240  001CA2  D7FE               	bra	u3357
  5241  001CA4  F000               	nop	
  5242                           
  5243                           ;HD44780.c: 138: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  5244  001CA6  8283               	bsf	3971,1,c	;volatile
  5245  001CA8  ECEE  F012         	call	_Lcd_Delay5us	;wreg free
  5246  001CAC  9283               	bcf	3971,1,c	;volatile
  5247                           
  5248                           ;HD44780.c: 139: LATAbits.LA5 = (command & 0b00001000)>>3; LATAbits.LA4 = (command & 0b0
      +                          0000100)>>2;
  5249  001CAE  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  5250  001CB2  90D8               	bcf	status,0,c
  5251  001CB4  3215               	rrcf	??_Lcd_Command,f,c
  5252  001CB6  90D8               	bcf	status,0,c
  5253  001CB8  3215               	rrcf	??_Lcd_Command,f,c
  5254  001CBA  90D8               	bcf	status,0,c
  5255  001CBC  3215               	rrcf	??_Lcd_Command,f,c
  5256  001CBE  0E01               	movlw	1
  5257  001CC0  1615               	andwf	??_Lcd_Command,f,c
  5258  001CC2  3A15               	swapf	??_Lcd_Command,f,c
  5259  001CC4  4615               	rlncf	??_Lcd_Command,f,c
  5260  001CC6  5083               	movf	3971,w,c	;volatile
  5261  001CC8  1815               	xorwf	??_Lcd_Command,w,c
  5262  001CCA  0BDF               	andlw	-33
  5263  001CCC  1815               	xorwf	??_Lcd_Command,w,c
  5264  001CCE  6E83               	movwf	3971,c	;volatile
  5265  001CD0  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  5266  001CD4  90D8               	bcf	status,0,c
  5267  001CD6  3215               	rrcf	??_Lcd_Command,f,c
  5268  001CD8  90D8               	bcf	status,0,c
  5269  001CDA  3215               	rrcf	??_Lcd_Command,f,c
  5270  001CDC  0E01               	movlw	1
  5271  001CDE  1615               	andwf	??_Lcd_Command,f,c
  5272  001CE0  3A15               	swapf	??_Lcd_Command,f,c
  5273  001CE2  5083               	movf	3971,w,c	;volatile
  5274  001CE4  1815               	xorwf	??_Lcd_Command,w,c
  5275  001CE6  0BEF               	andlw	-17
  5276  001CE8  1815               	xorwf	??_Lcd_Command,w,c
  5277  001CEA  6E83               	movwf	3971,c	;volatile
  5278                           
  5279                           ;HD44780.c: 140: LATAbits.LA3 = (command & 0b00000010)>>1; LATAbits.LA2 = (command & 0b0
      +                          0000001);
  5280  001CEC  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  5281  001CF0  90D8               	bcf	status,0,c
  5282  001CF2  3215               	rrcf	??_Lcd_Command,f,c
  5283  001CF4  0E01               	movlw	1
  5284  001CF6  1615               	andwf	??_Lcd_Command,f,c
  5285  001CF8  4615               	rlncf	??_Lcd_Command,f,c
  5286  001CFA  4615               	rlncf	??_Lcd_Command,f,c
  5287  001CFC  4615               	rlncf	??_Lcd_Command,f,c
  5288  001CFE  5083               	movf	3971,w,c	;volatile
  5289  001D00  1815               	xorwf	??_Lcd_Command,w,c
  5290  001D02  0BF7               	andlw	-9
  5291  001D04  1815               	xorwf	??_Lcd_Command,w,c
  5292  001D06  6E83               	movwf	3971,c	;volatile
  5293  001D08  C017  F015         	movff	Lcd_Command@command,??_Lcd_Command
  5294  001D0C  0E01               	movlw	1
  5295  001D0E  1615               	andwf	??_Lcd_Command,f,c
  5296  001D10  4615               	rlncf	??_Lcd_Command,f,c
  5297  001D12  4615               	rlncf	??_Lcd_Command,f,c
  5298  001D14  5083               	movf	3971,w,c	;volatile
  5299  001D16  1815               	xorwf	??_Lcd_Command,w,c
  5300  001D18  0BFB               	andlw	-5
  5301  001D1A  1815               	xorwf	??_Lcd_Command,w,c
  5302  001D1C  6E83               	movwf	3971,c	;volatile
  5303                           
  5304                           ;HD44780.c: 141: _delay(10);
  5305  001D1E  0E03               	movlw	3
  5306  001D20                     u3367:
  5307  001D20  2EE8               	decfsz	wreg,f,c
  5308  001D22  D7FE               	bra	u3367
  5309  001D24  F000               	nop	
  5310                           
  5311                           ;HD44780.c: 142: LATAbits.LA1 = 1; Lcd_Delay5us(); LATAbits.LA1 = 0;
  5312  001D26  8283               	bsf	3971,1,c	;volatile
  5313  001D28  ECEE  F012         	call	_Lcd_Delay5us	;wreg free
  5314  001D2C  9283               	bcf	3971,1,c	;volatile
  5315                           
  5316                           ;HD44780.c: 144: Lcd_Delay5us();
  5317  001D2E  ECEE  F012         	call	_Lcd_Delay5us	;wreg free
  5318  001D32  0012               	return		;funcret
  5319  001D34                     __end_of_Lcd_Command:
  5320                           	opt stack 0
  5321                           tblptru	equ	0xFF8
  5322                           tblptrh	equ	0xFF7
  5323                           tblptrl	equ	0xFF6
  5324                           tablat	equ	0xFF5
  5325                           prodh	equ	0xFF4
  5326                           prodl	equ	0xFF3
  5327                           intcon	equ	0xFF2
  5328                           postinc0	equ	0xFEE
  5329                           wreg	equ	0xFE8
  5330                           indf1	equ	0xFE7
  5331                           postdec1	equ	0xFE5
  5332                           plusw1	equ	0xFE3
  5333                           fsr1h	equ	0xFE2
  5334                           fsr1l	equ	0xFE1
  5335                           indf2	equ	0xFDF
  5336                           postinc2	equ	0xFDE
  5337                           plusw2	equ	0xFDB
  5338                           fsr2h	equ	0xFDA
  5339                           fsr2l	equ	0xFD9
  5340                           status	equ	0xFD8
  5341                           
  5342 ;; *************** function _Lcd_Delay5us *****************
  5343 ;; Defined at:
  5344 ;;		line 150 in file "libs/HD44780.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;Total ram usage:        0 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    5
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_Lcd_Init
  5369 ;;		_Lcd_CharCP
  5370 ;;		_Lcd_Command
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text27
  5375  0025DC                     __ptext27:
  5376                           	opt stack 0
  5377  0025DC                     _Lcd_Delay5us:
  5378                           	opt stack 22
  5379                           
  5380                           ;HD44780.c: 151: _delay((unsigned long)((5)*(16000000/4000000.0)));
  5381                           
  5382                           ;incstack = 0
  5383  0025DC  0E06               	movlw	6
  5384  0025DE                     u3377:
  5385  0025DE  2EE8               	decfsz	wreg,f,c
  5386  0025E0  D7FE               	bra	u3377
  5387  0025E2  D000               	nop2	
  5388  0025E4  0012               	return		;funcret
  5389  0025E6                     __end_of_Lcd_Delay5us:
  5390                           	opt stack 0
  5391                           tblptru	equ	0xFF8
  5392                           tblptrh	equ	0xFF7
  5393                           tblptrl	equ	0xFF6
  5394                           tablat	equ	0xFF5
  5395                           prodh	equ	0xFF4
  5396                           prodl	equ	0xFF3
  5397                           intcon	equ	0xFF2
  5398                           postinc0	equ	0xFEE
  5399                           wreg	equ	0xFE8
  5400                           indf1	equ	0xFE7
  5401                           postdec1	equ	0xFE5
  5402                           plusw1	equ	0xFE3
  5403                           fsr1h	equ	0xFE2
  5404                           fsr1l	equ	0xFE1
  5405                           indf2	equ	0xFDF
  5406                           postinc2	equ	0xFDE
  5407                           plusw2	equ	0xFDB
  5408                           fsr2h	equ	0xFDA
  5409                           fsr2l	equ	0xFD9
  5410                           status	equ	0xFD8
  5411                           
  5412 ;; *************** function _GetDay *****************
  5413 ;; Defined at:
  5414 ;;		line 128 in file "libs/gps.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  Date            2   34[COMRAM] PTR unsigned char 
  5417 ;;		 -> main@Date(7), 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  y               2   46[COMRAM] int 
  5420 ;;  m               1   45[COMRAM] unsigned char 
  5421 ;;  d               1   44[COMRAM] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      char 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5432 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5433 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5434 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5435 ;;Total ram usage:       14 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    6
  5438 ;; This function calls:
  5439 ;;		___awdiv
  5440 ;;		___awmod
  5441 ;;		___wmul
  5442 ;; This function is called by:
  5443 ;;		_main
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text28
  5448  001732                     __ptext28:
  5449                           	opt stack 0
  5450  001732                     _GetDay:
  5451                           	opt stack 24
  5452                           
  5453                           ;gps.c: 129: UINT8 d = (Date[0]-0x30)*10 + (Date[1]-0x30);
  5454                           
  5455                           ;incstack = 0
  5456  001732  EE20 F001          	lfsr	2,1
  5457  001736  5023               	movf	GetDay@Date,w,c
  5458  001738  26D9               	addwf	fsr2l,f,c
  5459  00173A  5024               	movf	GetDay@Date+1,w,c
  5460  00173C  22DA               	addwfc	fsr2h,f,c
  5461  00173E  50DF               	movf	indf2,w,c
  5462  001740  6E25               	movwf	??_GetDay& (0+255),c
  5463  001742  C023  FFD9         	movff	GetDay@Date,fsr2l
  5464  001746  C024  FFDA         	movff	GetDay@Date+1,fsr2h
  5465  00174A  50DF               	movf	indf2,w,c
  5466  00174C  0FD0               	addlw	208
  5467  00174E  0D0A               	mullw	10
  5468  001750  50F3               	movf	prodl,w,c
  5469  001752  2425               	addwf	??_GetDay,w,c
  5470  001754  0FD0               	addlw	208
  5471  001756  6E2D               	movwf	GetDay@d,c
  5472                           
  5473                           ;gps.c: 130: UINT8 m = (Date[2]-0x30)*10 + (Date[3]-0x30);
  5474  001758  EE20 F003          	lfsr	2,3
  5475  00175C  5023               	movf	GetDay@Date,w,c
  5476  00175E  26D9               	addwf	fsr2l,f,c
  5477  001760  5024               	movf	GetDay@Date+1,w,c
  5478  001762  22DA               	addwfc	fsr2h,f,c
  5479  001764  50DF               	movf	indf2,w,c
  5480  001766  6E25               	movwf	??_GetDay& (0+255),c
  5481  001768  EE20 F002          	lfsr	2,2
  5482  00176C  5023               	movf	GetDay@Date,w,c
  5483  00176E  26D9               	addwf	fsr2l,f,c
  5484  001770  5024               	movf	GetDay@Date+1,w,c
  5485  001772  22DA               	addwfc	fsr2h,f,c
  5486  001774  50DF               	movf	indf2,w,c
  5487  001776  0FD0               	addlw	208
  5488  001778  0D0A               	mullw	10
  5489  00177A  50F3               	movf	prodl,w,c
  5490  00177C  2425               	addwf	??_GetDay,w,c
  5491  00177E  0FD0               	addlw	208
  5492  001780  6E2E               	movwf	GetDay@m,c
  5493                           
  5494                           ;gps.c: 131: INT y = (Date[4]-0x30)*10 + (Date[5]-0x30) + GLOBAL_CENTURY*100;
  5495  001782  EE20 F004          	lfsr	2,4
  5496  001786  5023               	movf	GetDay@Date,w,c
  5497  001788  26D9               	addwf	fsr2l,f,c
  5498  00178A  5024               	movf	GetDay@Date+1,w,c
  5499  00178C  22DA               	addwfc	fsr2h,f,c
  5500  00178E  50DF               	movf	indf2,w,c
  5501  001790  6E25               	movwf	??_GetDay& (0+255),c
  5502  001792  0ED0               	movlw	208
  5503  001794  2425               	addwf	??_GetDay,w,c
  5504  001796  6E15               	movwf	___wmul@multiplier,c
  5505  001798  6A16               	clrf	___wmul@multiplier+1,c
  5506  00179A  0EFF               	movlw	255
  5507  00179C  2216               	addwfc	___wmul@multiplier+1,f,c
  5508  00179E  0E00               	movlw	0
  5509  0017A0  6E18               	movwf	___wmul@multiplicand+1,c
  5510  0017A2  0E0A               	movlw	10
  5511  0017A4  6E17               	movwf	___wmul@multiplicand,c
  5512  0017A6  EC8E  F012         	call	___wmul	;wreg free
  5513  0017AA  EE20 F005          	lfsr	2,5
  5514  0017AE  5023               	movf	GetDay@Date,w,c
  5515  0017B0  26D9               	addwf	fsr2l,f,c
  5516  0017B2  5024               	movf	GetDay@Date+1,w,c
  5517  0017B4  22DA               	addwfc	fsr2h,f,c
  5518  0017B6  50DF               	movf	indf2,w,c
  5519  0017B8  6E26               	movwf	(??_GetDay+1)& (0+255),c
  5520  0017BA  6A27               	clrf	(??_GetDay+2)& (0+255),c
  5521  0017BC  5015               	movf	?___wmul,w,c
  5522  0017BE  2626               	addwf	??_GetDay+1,f,c
  5523  0017C0  5016               	movf	?___wmul+1,w,c
  5524  0017C2  2227               	addwfc	??_GetDay+2,f,c
  5525  0017C4  504A               	movf	_GLOBAL_CENTURY,w,c
  5526  0017C6  0D64               	mullw	100
  5527  0017C8  50F3               	movf	prodl,w,c
  5528  0017CA  2626               	addwf	??_GetDay+1,f,c
  5529  0017CC  50F4               	movf	prodh,w,c
  5530  0017CE  2227               	addwfc	??_GetDay+2,f,c
  5531  0017D0  0ED0               	movlw	208
  5532  0017D2  2426               	addwf	??_GetDay+1,w,c
  5533  0017D4  6E2F               	movwf	GetDay@y,c
  5534  0017D6  0EFF               	movlw	255
  5535  0017D8  2027               	addwfc	??_GetDay+2,w,c
  5536  0017DA  6E30               	movwf	GetDay@y+1,c
  5537                           
  5538                           ;gps.c: 132: static int t[] = { 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 };
  5539                           ;gps.c: 133: y -= m < 3;
  5540  0017DC  0E02               	movlw	2
  5541  0017DE  642E               	cpfsgt	GetDay@m,c
  5542  0017E0  D001               	goto	u2861
  5543  0017E2  D002               	goto	u2860
  5544  0017E4                     u2861:
  5545  0017E4  0E01               	movlw	1
  5546  0017E6  D001               	goto	u2870
  5547  0017E8                     u2860:
  5548  0017E8  0E00               	movlw	0
  5549  0017EA                     u2870:
  5550  0017EA  5E2F               	subwf	GetDay@y,f,c
  5551  0017EC  0E00               	movlw	0
  5552  0017EE  5A30               	subwfb	GetDay@y+1,f,c
  5553                           
  5554                           ;gps.c: 134: return ( y + y/4 - y/100 + y/400 + t[m-1] + d) % 7;
  5555  0017F0  0EFE               	movlw	254
  5556  0017F2  6E25               	movwf	??_GetDay& (0+255),c
  5557  0017F4  0EFF               	movlw	255
  5558  0017F6  6E26               	movwf	(??_GetDay+1)& (0+255),c
  5559  0017F8  502E               	movf	GetDay@m,w,c
  5560  0017FA  6E27               	movwf	(??_GetDay+2)& (0+255),c
  5561  0017FC  6A28               	clrf	(??_GetDay+3)& (0+255),c
  5562  0017FE  90D8               	bcf	status,0,c
  5563  001800  3627               	rlcf	??_GetDay+2,f,c
  5564  001802  3628               	rlcf	??_GetDay+3,f,c
  5565  001804  5025               	movf	??_GetDay,w,c
  5566  001806  2627               	addwf	??_GetDay+2,f,c
  5567  001808  5026               	movf	??_GetDay+1,w,c
  5568  00180A  2228               	addwfc	??_GetDay+3,f,c
  5569  00180C  0EB2               	movlw	low GetDay@t
  5570  00180E  2427               	addwf	??_GetDay+2,w,c
  5571  001810  6ED9               	movwf	fsr2l,c
  5572  001812  0E00               	movlw	high GetDay@t
  5573  001814  2028               	addwfc	??_GetDay+3,w,c
  5574  001816  6EDA               	movwf	fsr2h,c
  5575  001818  CFDE F029          	movff	postinc2,??_GetDay+4
  5576  00181C  CFDD F02A          	movff	postdec2,??_GetDay+5
  5577  001820  0E00               	movlw	0
  5578  001822  6E18               	movwf	___awdiv@divisor+1,c
  5579  001824  0E04               	movlw	4
  5580  001826  6E17               	movwf	___awdiv@divisor,c
  5581  001828  C02F  F015         	movff	GetDay@y,___awdiv@dividend
  5582  00182C  C030  F016         	movff	GetDay@y+1,___awdiv@dividend+1
  5583  001830  ECDB  F010         	call	___awdiv	;wreg free
  5584  001834  C015  F02B         	movff	?___awdiv,??_GetDay+6
  5585  001838  C016  F02C         	movff	?___awdiv+1,??_GetDay+7
  5586  00183C  0E01               	movlw	1
  5587  00183E  6E18               	movwf	___awdiv@divisor+1,c
  5588  001840  0E90               	movlw	144
  5589  001842  6E17               	movwf	___awdiv@divisor,c
  5590  001844  C02F  F015         	movff	GetDay@y,___awdiv@dividend
  5591  001848  C030  F016         	movff	GetDay@y+1,___awdiv@dividend+1
  5592  00184C  ECDB  F010         	call	___awdiv	;wreg free
  5593  001850  5015               	movf	?___awdiv,w,c
  5594  001852  262B               	addwf	??_GetDay+6,f,c
  5595  001854  5016               	movf	?___awdiv+1,w,c
  5596  001856  222C               	addwfc	??_GetDay+7,f,c
  5597  001858  502D               	movf	GetDay@d,w,c
  5598  00185A  262B               	addwf	??_GetDay+6,f,c
  5599  00185C  0E00               	movlw	0
  5600  00185E  222C               	addwfc	??_GetDay+7,f,c
  5601  001860  0E00               	movlw	0
  5602  001862  6E18               	movwf	___awdiv@divisor+1,c
  5603  001864  0E64               	movlw	100
  5604  001866  6E17               	movwf	___awdiv@divisor,c
  5605  001868  C02F  F015         	movff	GetDay@y,___awdiv@dividend
  5606  00186C  C030  F016         	movff	GetDay@y+1,___awdiv@dividend+1
  5607  001870  ECDB  F010         	call	___awdiv	;wreg free
  5608  001874  1E15               	comf	?___awdiv,f,c
  5609  001876  1E16               	comf	?___awdiv+1,f,c
  5610  001878  4A15               	infsnz	?___awdiv,f,c
  5611  00187A  2A16               	incf	?___awdiv+1,f,c
  5612  00187C  5015               	movf	?___awdiv,w,c
  5613  00187E  262B               	addwf	??_GetDay+6,f,c
  5614  001880  5016               	movf	?___awdiv+1,w,c
  5615  001882  222C               	addwfc	??_GetDay+7,f,c
  5616  001884  5029               	movf	??_GetDay+4,w,c
  5617  001886  262B               	addwf	??_GetDay+6,f,c
  5618  001888  502A               	movf	??_GetDay+5,w,c
  5619  00188A  222C               	addwfc	??_GetDay+7,f,c
  5620  00188C  502F               	movf	GetDay@y,w,c
  5621  00188E  242B               	addwf	??_GetDay+6,w,c
  5622  001890  6E1D               	movwf	___awmod@dividend,c
  5623  001892  5030               	movf	GetDay@y+1,w,c
  5624  001894  202C               	addwfc	??_GetDay+7,w,c
  5625  001896  6E1E               	movwf	___awmod@dividend+1,c
  5626  001898  0E00               	movlw	0
  5627  00189A  6E20               	movwf	___awmod@divisor+1,c
  5628  00189C  0E07               	movlw	7
  5629  00189E  6E1F               	movwf	___awmod@divisor,c
  5630  0018A0  EC5A  F011         	call	___awmod	;wreg free
  5631  0018A4  501D               	movf	?___awmod,w,c
  5632  0018A6  0012               	return	
  5633  0018A8                     __end_of_GetDay:
  5634                           	opt stack 0
  5635                           tblptru	equ	0xFF8
  5636                           tblptrh	equ	0xFF7
  5637                           tblptrl	equ	0xFF6
  5638                           tablat	equ	0xFF5
  5639                           prodh	equ	0xFF4
  5640                           prodl	equ	0xFF3
  5641                           intcon	equ	0xFF2
  5642                           postinc0	equ	0xFEE
  5643                           wreg	equ	0xFE8
  5644                           indf1	equ	0xFE7
  5645                           postdec1	equ	0xFE5
  5646                           plusw1	equ	0xFE3
  5647                           fsr1h	equ	0xFE2
  5648                           fsr1l	equ	0xFE1
  5649                           indf2	equ	0xFDF
  5650                           postinc2	equ	0xFDE
  5651                           postdec2	equ	0xFDD
  5652                           plusw2	equ	0xFDB
  5653                           fsr2h	equ	0xFDA
  5654                           fsr2l	equ	0xFD9
  5655                           status	equ	0xFD8
  5656                           
  5657 ;; *************** function ___wmul *****************
  5658 ;; Defined at:
  5659 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  multiplier      2   20[COMRAM] unsigned int 
  5662 ;;  multiplicand    2   22[COMRAM] unsigned int 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  product         2   24[COMRAM] unsigned int 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  2   20[COMRAM] unsigned int 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0, prodl, prodh
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;Total ram usage:        6 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    5
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_GetDay
  5685 ;;		_Lcd_Int
  5686 ;;		_LoadSettingsFromEeprom
  5687 ;;		_LoadEventsFromEeprom
  5688 ;;		_LoadStatesFromEeprom
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text29
  5693  00251C                     __ptext29:
  5694                           	opt stack 0
  5695  00251C                     ___wmul:
  5696                           	opt stack 23
  5697                           
  5698                           ;incstack = 0
  5699  00251C  5015               	movf	___wmul@multiplier,w,c
  5700  00251E  0217               	mulwf	___wmul@multiplicand,c
  5701  002520  CFF3 F019          	movff	prodl,___wmul@product
  5702  002524  CFF4 F01A          	movff	prodh,___wmul@product+1
  5703  002528  5015               	movf	___wmul@multiplier,w,c
  5704  00252A  0218               	mulwf	___wmul@multiplicand+1,c
  5705  00252C  50F3               	movf	prodl,w,c
  5706  00252E  261A               	addwf	___wmul@product+1,f,c
  5707  002530  5016               	movf	___wmul@multiplier+1,w,c
  5708  002532  0217               	mulwf	___wmul@multiplicand,c
  5709  002534  50F3               	movf	prodl,w,c
  5710  002536  261A               	addwf	___wmul@product+1,f,c
  5711  002538  C019  F015         	movff	___wmul@product,?___wmul
  5712  00253C  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  5713  002540  0012               	return	
  5714  002542                     __end_of___wmul:
  5715                           	opt stack 0
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           prodh	equ	0xFF4
  5721                           prodl	equ	0xFF3
  5722                           intcon	equ	0xFF2
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           indf1	equ	0xFE7
  5726                           postdec1	equ	0xFE5
  5727                           plusw1	equ	0xFE3
  5728                           fsr1h	equ	0xFE2
  5729                           fsr1l	equ	0xFE1
  5730                           indf2	equ	0xFDF
  5731                           postinc2	equ	0xFDE
  5732                           postdec2	equ	0xFDD
  5733                           plusw2	equ	0xFDB
  5734                           fsr2h	equ	0xFDA
  5735                           fsr2l	equ	0xFD9
  5736                           status	equ	0xFD8
  5737                           
  5738 ;; *************** function ___awmod *****************
  5739 ;; Defined at:
  5740 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  dividend        2   28[COMRAM] int 
  5743 ;;  divisor         2   30[COMRAM] int 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  sign            1   33[COMRAM] unsigned char 
  5746 ;;  counter         1   32[COMRAM] unsigned char 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  2   28[COMRAM] int 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;Total ram usage:        6 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    5
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_GetDay
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text30
  5771  0022B4                     __ptext30:
  5772                           	opt stack 0
  5773  0022B4                     ___awmod:
  5774                           	opt stack 24
  5775                           
  5776                           ;incstack = 0
  5777  0022B4  0E00               	movlw	0
  5778  0022B6  6E22               	movwf	___awmod@sign,c
  5779  0022B8  AE1E               	btfss	___awmod@dividend+1,7,c
  5780  0022BA  D006               	goto	l3679
  5781  0022BC  6C1D               	negf	___awmod@dividend,c
  5782  0022BE  1E1E               	comf	___awmod@dividend+1,f,c
  5783  0022C0  B0D8               	btfsc	status,0,c
  5784  0022C2  2A1E               	incf	___awmod@dividend+1,f,c
  5785  0022C4  0E01               	movlw	1
  5786  0022C6  6E22               	movwf	___awmod@sign,c
  5787  0022C8                     l3679:
  5788  0022C8  AE20               	btfss	___awmod@divisor+1,7,c
  5789  0022CA  D004               	goto	l3683
  5790  0022CC  6C1F               	negf	___awmod@divisor,c
  5791  0022CE  1E20               	comf	___awmod@divisor+1,f,c
  5792  0022D0  B0D8               	btfsc	status,0,c
  5793  0022D2  2A20               	incf	___awmod@divisor+1,f,c
  5794  0022D4                     l3683:
  5795  0022D4  501F               	movf	___awmod@divisor,w,c
  5796  0022D6  1020               	iorwf	___awmod@divisor+1,w,c
  5797  0022D8  B4D8               	btfsc	status,2,c
  5798  0022DA  D018               	goto	l3699
  5799  0022DC  0E01               	movlw	1
  5800  0022DE  6E21               	movwf	___awmod@counter,c
  5801  0022E0  D004               	goto	l3689
  5802  0022E2                     l3687:
  5803  0022E2  90D8               	bcf	status,0,c
  5804  0022E4  361F               	rlcf	___awmod@divisor,f,c
  5805  0022E6  3620               	rlcf	___awmod@divisor+1,f,c
  5806  0022E8  2A21               	incf	___awmod@counter,f,c
  5807  0022EA                     l3689:
  5808  0022EA  AE20               	btfss	___awmod@divisor+1,7,c
  5809  0022EC  D7FA               	goto	l3687
  5810  0022EE                     l3691:
  5811  0022EE  501F               	movf	___awmod@divisor,w,c
  5812  0022F0  5C1D               	subwf	___awmod@dividend,w,c
  5813  0022F2  5020               	movf	___awmod@divisor+1,w,c
  5814  0022F4  581E               	subwfb	___awmod@dividend+1,w,c
  5815  0022F6  A0D8               	btfss	status,0,c
  5816  0022F8  D004               	goto	l3695
  5817  0022FA  501F               	movf	___awmod@divisor,w,c
  5818  0022FC  5E1D               	subwf	___awmod@dividend,f,c
  5819  0022FE  5020               	movf	___awmod@divisor+1,w,c
  5820  002300  5A1E               	subwfb	___awmod@dividend+1,f,c
  5821  002302                     l3695:
  5822  002302  90D8               	bcf	status,0,c
  5823  002304  3220               	rrcf	___awmod@divisor+1,f,c
  5824  002306  321F               	rrcf	___awmod@divisor,f,c
  5825  002308  2E21               	decfsz	___awmod@counter,f,c
  5826  00230A  D7F1               	goto	l3691
  5827  00230C                     l3699:
  5828  00230C  5022               	movf	___awmod@sign,w,c
  5829  00230E  B4D8               	btfsc	status,2,c
  5830  002310  D004               	goto	l3703
  5831  002312  6C1D               	negf	___awmod@dividend,c
  5832  002314  1E1E               	comf	___awmod@dividend+1,f,c
  5833  002316  B0D8               	btfsc	status,0,c
  5834  002318  2A1E               	incf	___awmod@dividend+1,f,c
  5835  00231A                     l3703:
  5836  00231A  C01D  F01D         	movff	___awmod@dividend,?___awmod
  5837  00231E  C01E  F01E         	movff	___awmod@dividend+1,?___awmod+1
  5838  002322  0012               	return	
  5839  002324                     __end_of___awmod:
  5840                           	opt stack 0
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           intcon	equ	0xFF2
  5848                           postinc0	equ	0xFEE
  5849                           wreg	equ	0xFE8
  5850                           indf1	equ	0xFE7
  5851                           postdec1	equ	0xFE5
  5852                           plusw1	equ	0xFE3
  5853                           fsr1h	equ	0xFE2
  5854                           fsr1l	equ	0xFE1
  5855                           indf2	equ	0xFDF
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           plusw2	equ	0xFDB
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function ___awdiv *****************
  5864 ;; Defined at:
  5865 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  dividend        2   20[COMRAM] int 
  5868 ;;  divisor         2   22[COMRAM] int 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  quotient        2   26[COMRAM] int 
  5871 ;;  sign            1   25[COMRAM] unsigned char 
  5872 ;;  counter         1   24[COMRAM] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  2   20[COMRAM] int 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5885 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;Total ram usage:        8 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    5
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_GetDay
  5893 ;;		_Lcd_Int
  5894 ;;		_LoadStatesFromEeprom
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text31
  5899  0021B6                     __ptext31:
  5900                           	opt stack 0
  5901  0021B6                     ___awdiv:
  5902                           	opt stack 23
  5903                           
  5904                           ;incstack = 0
  5905  0021B6  0E00               	movlw	0
  5906  0021B8  6E1A               	movwf	___awdiv@sign,c
  5907  0021BA  AE18               	btfss	___awdiv@divisor+1,7,c
  5908  0021BC  D006               	goto	l3345
  5909  0021BE  6C17               	negf	___awdiv@divisor,c
  5910  0021C0  1E18               	comf	___awdiv@divisor+1,f,c
  5911  0021C2  B0D8               	btfsc	status,0,c
  5912  0021C4  2A18               	incf	___awdiv@divisor+1,f,c
  5913  0021C6  0E01               	movlw	1
  5914  0021C8  6E1A               	movwf	___awdiv@sign,c
  5915  0021CA                     l3345:
  5916  0021CA  AE16               	btfss	___awdiv@dividend+1,7,c
  5917  0021CC  D006               	goto	l3351
  5918  0021CE  6C15               	negf	___awdiv@dividend,c
  5919  0021D0  1E16               	comf	___awdiv@dividend+1,f,c
  5920  0021D2  B0D8               	btfsc	status,0,c
  5921  0021D4  2A16               	incf	___awdiv@dividend+1,f,c
  5922  0021D6  0E01               	movlw	1
  5923  0021D8  1A1A               	xorwf	___awdiv@sign,f,c
  5924  0021DA                     l3351:
  5925  0021DA  0E00               	movlw	0
  5926  0021DC  6E1C               	movwf	___awdiv@quotient+1,c
  5927  0021DE  0E00               	movlw	0
  5928  0021E0  6E1B               	movwf	___awdiv@quotient,c
  5929  0021E2  5017               	movf	___awdiv@divisor,w,c
  5930  0021E4  1018               	iorwf	___awdiv@divisor+1,w,c
  5931  0021E6  B4D8               	btfsc	status,2,c
  5932  0021E8  D01C               	goto	l3373
  5933  0021EA  0E01               	movlw	1
  5934  0021EC  6E19               	movwf	___awdiv@counter,c
  5935  0021EE  D004               	goto	l3359
  5936  0021F0                     l3357:
  5937  0021F0  90D8               	bcf	status,0,c
  5938  0021F2  3617               	rlcf	___awdiv@divisor,f,c
  5939  0021F4  3618               	rlcf	___awdiv@divisor+1,f,c
  5940  0021F6  2A19               	incf	___awdiv@counter,f,c
  5941  0021F8                     l3359:
  5942  0021F8  AE18               	btfss	___awdiv@divisor+1,7,c
  5943  0021FA  D7FA               	goto	l3357
  5944  0021FC                     l3361:
  5945  0021FC  90D8               	bcf	status,0,c
  5946  0021FE  361B               	rlcf	___awdiv@quotient,f,c
  5947  002200  361C               	rlcf	___awdiv@quotient+1,f,c
  5948  002202  5017               	movf	___awdiv@divisor,w,c
  5949  002204  5C15               	subwf	___awdiv@dividend,w,c
  5950  002206  5018               	movf	___awdiv@divisor+1,w,c
  5951  002208  5816               	subwfb	___awdiv@dividend+1,w,c
  5952  00220A  A0D8               	btfss	status,0,c
  5953  00220C  D005               	goto	l3369
  5954  00220E  5017               	movf	___awdiv@divisor,w,c
  5955  002210  5E15               	subwf	___awdiv@dividend,f,c
  5956  002212  5018               	movf	___awdiv@divisor+1,w,c
  5957  002214  5A16               	subwfb	___awdiv@dividend+1,f,c
  5958  002216  801B               	bsf	___awdiv@quotient,0,c
  5959  002218                     l3369:
  5960  002218  90D8               	bcf	status,0,c
  5961  00221A  3218               	rrcf	___awdiv@divisor+1,f,c
  5962  00221C  3217               	rrcf	___awdiv@divisor,f,c
  5963  00221E  2E19               	decfsz	___awdiv@counter,f,c
  5964  002220  D7ED               	goto	l3361
  5965  002222                     l3373:
  5966  002222  501A               	movf	___awdiv@sign,w,c
  5967  002224  B4D8               	btfsc	status,2,c
  5968  002226  D004               	goto	l3377
  5969  002228  6C1B               	negf	___awdiv@quotient,c
  5970  00222A  1E1C               	comf	___awdiv@quotient+1,f,c
  5971  00222C  B0D8               	btfsc	status,0,c
  5972  00222E  2A1C               	incf	___awdiv@quotient+1,f,c
  5973  002230                     l3377:
  5974  002230  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5975  002234  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5976  002238  0012               	return	
  5977  00223A                     __end_of___awdiv:
  5978                           	opt stack 0
  5979                           tblptru	equ	0xFF8
  5980                           tblptrh	equ	0xFF7
  5981                           tblptrl	equ	0xFF6
  5982                           tablat	equ	0xFF5
  5983                           prodh	equ	0xFF4
  5984                           prodl	equ	0xFF3
  5985                           intcon	equ	0xFF2
  5986                           postinc0	equ	0xFEE
  5987                           wreg	equ	0xFE8
  5988                           indf1	equ	0xFE7
  5989                           postdec1	equ	0xFE5
  5990                           plusw1	equ	0xFE3
  5991                           fsr1h	equ	0xFE2
  5992                           fsr1l	equ	0xFE1
  5993                           indf2	equ	0xFDF
  5994                           postinc2	equ	0xFDE
  5995                           postdec2	equ	0xFDD
  5996                           plusw2	equ	0xFDB
  5997                           fsr2h	equ	0xFDA
  5998                           fsr2l	equ	0xFD9
  5999                           status	equ	0xFD8
  6000                           
  6001 ;; *************** function _INTERRUPT_InterruptManager *****************
  6002 ;; Defined at:
  6003 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;		None
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;		None
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  1    wreg      void 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6019 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6020 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6021 ;;Total ram usage:       14 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    4
  6024 ;; This function calls:
  6025 ;;		_TMR0_ISR
  6026 ;; This function is called by:
  6027 ;;		Interrupt level 2
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	intcode
  6032  000008                     __pintcode:
  6033                           	opt stack 0
  6034  000008                     _INTERRUPT_InterruptManager:
  6035                           	opt stack 22
  6036                           
  6037                           ;incstack = 0
  6038  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6039  00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  6040  00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6041  000012  CFE9 F009          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6042  000016  CFEA F00A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6043  00001A  CFE1 F00B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6044  00001E  CFE2 F00C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6045  000022  CFD9 F00D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6046  000026  CFDA F00E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6047  00002A  CFF3 F00F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6048  00002E  CFF4 F010          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6049  000032  CFF6 F011          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6050  000036  CFF7 F012          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6051  00003A  CFF8 F013          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6052  00003E  CFF5 F014          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6053                           
  6054                           ;interrupt_manager.c: 60: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  6055  000042  010E               	movlb	14	; () banked
  6056  000044  ABC2               	btfss	194,5,b	;volatile
  6057  000046  D004               	goto	i2l400
  6058                           
  6059                           ; BSR set to: 14
  6060  000048  010E               	movlb	14	; () banked
  6061  00004A  BBCA               	btfsc	202,5,b	;volatile
  6062                           
  6063                           ; BSR set to: 14
  6064                           ;interrupt_manager.c: 61: {
  6065                           ;interrupt_manager.c: 62: TMR0_ISR();
  6066  00004C  EC53  F012         	call	_TMR0_ISR	;wreg free
  6067  000050                     i2l400:
  6068  000050  C014  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6069  000054  C013  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6070  000058  C012  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6071  00005C  C011  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6072  000060  C010  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6073  000064  C00F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6074  000068  C00E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6075  00006C  C00D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6076  000070  C00C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6077  000074  C00B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6078  000078  C00A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6079  00007C  C009  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6080  000080  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6081  000084  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6082  000088  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6083  00008A  0011               	retfie		f
  6084  00008C                     __end_of_INTERRUPT_InterruptManager:
  6085                           	opt stack 0
  6086                           pclatu	equ	0xFFB
  6087                           pclath	equ	0xFFA
  6088                           tblptru	equ	0xFF8
  6089                           tblptrh	equ	0xFF7
  6090                           tblptrl	equ	0xFF6
  6091                           tablat	equ	0xFF5
  6092                           prodh	equ	0xFF4
  6093                           prodl	equ	0xFF3
  6094                           intcon	equ	0xFF2
  6095                           postinc0	equ	0xFEE
  6096                           fsr0h	equ	0xFEA
  6097                           fsr0l	equ	0xFE9
  6098                           wreg	equ	0xFE8
  6099                           indf1	equ	0xFE7
  6100                           postdec1	equ	0xFE5
  6101                           plusw1	equ	0xFE3
  6102                           fsr1h	equ	0xFE2
  6103                           fsr1l	equ	0xFE1
  6104                           indf2	equ	0xFDF
  6105                           postinc2	equ	0xFDE
  6106                           postdec2	equ	0xFDD
  6107                           plusw2	equ	0xFDB
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8
  6111                           
  6112 ;; *************** function _TMR0_ISR *****************
  6113 ;; Defined at:
  6114 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    3
  6135 ;; This function calls:
  6136 ;;		_TMR0_CallBack
  6137 ;; This function is called by:
  6138 ;;		_INTERRUPT_InterruptManager
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text33
  6143  0024A6                     __ptext33:
  6144                           	opt stack 0
  6145  0024A6                     _TMR0_ISR:
  6146                           	opt stack 22
  6147                           
  6148                           ;tmr0.c: 138: static volatile uint16_t CountCallBack = 0;
  6149                           ;tmr0.c: 141: PIR0bits.TMR0IF = 0;
  6150                           
  6151                           ;incstack = 0
  6152  0024A6  010E               	movlb	14	; () banked
  6153  0024A8  9BCA               	bcf	202,5,b	;volatile
  6154                           
  6155                           ; BSR set to: 14
  6156                           ;tmr0.c: 143: TMR0H = timer0ReloadVal16bit >> 8;
  6157  0024AA  5039               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  6158  0024AC  6ED4               	movwf	4052,c	;volatile
  6159                           
  6160                           ; BSR set to: 14
  6161                           ;tmr0.c: 144: TMR0L = (uint8_t) timer0ReloadVal16bit;
  6162  0024AE  C038  FFD3         	movff	_timer0ReloadVal16bit,4051	;volatile
  6163                           
  6164                           ; BSR set to: 14
  6165                           ;tmr0.c: 147: if (++CountCallBack >= 10)
  6166  0024B2  4A34               	infsnz	TMR0_ISR@CountCallBack,f,c	;volatile
  6167  0024B4  2A35               	incf	TMR0_ISR@CountCallBack+1,f,c	;volatile
  6168  0024B6  5035               	movf	TMR0_ISR@CountCallBack+1,w,c	;volatile
  6169  0024B8  E104               	bnz	i2u210_40
  6170  0024BA  0E0A               	movlw	10
  6171  0024BC  5C34               	subwf	TMR0_ISR@CountCallBack,w,c	;volatile
  6172  0024BE  A0D8               	btfss	status,0,c
  6173  0024C0  0012               	return	
  6174  0024C2                     i2u210_40:
  6175                           
  6176                           ; BSR set to: 14
  6177                           ;tmr0.c: 148: {
  6178                           ;tmr0.c: 150: TMR0_CallBack();
  6179  0024C2  ECA1  F012         	call	_TMR0_CallBack	;wreg free
  6180                           
  6181                           ;tmr0.c: 153: CountCallBack = 0;
  6182  0024C6  0E00               	movlw	0
  6183  0024C8  6E35               	movwf	TMR0_ISR@CountCallBack+1,c	;volatile
  6184  0024CA  0E00               	movlw	0
  6185  0024CC  6E34               	movwf	TMR0_ISR@CountCallBack,c	;volatile
  6186  0024CE  0012               	return	
  6187  0024D0                     __end_of_TMR0_ISR:
  6188                           	opt stack 0
  6189                           pclatu	equ	0xFFB
  6190                           pclath	equ	0xFFA
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           intcon	equ	0xFF2
  6198                           postinc0	equ	0xFEE
  6199                           fsr0h	equ	0xFEA
  6200                           fsr0l	equ	0xFE9
  6201                           wreg	equ	0xFE8
  6202                           indf1	equ	0xFE7
  6203                           postdec1	equ	0xFE5
  6204                           plusw1	equ	0xFE3
  6205                           fsr1h	equ	0xFE2
  6206                           fsr1l	equ	0xFE1
  6207                           indf2	equ	0xFDF
  6208                           postinc2	equ	0xFDE
  6209                           postdec2	equ	0xFDD
  6210                           plusw2	equ	0xFDB
  6211                           fsr2h	equ	0xFDA
  6212                           fsr2l	equ	0xFD9
  6213                           status	equ	0xFD8
  6214                           
  6215 ;; *************** function _TMR0_CallBack *****************
  6216 ;; Defined at:
  6217 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6235 ;;Total ram usage:        0 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    2
  6238 ;; This function calls:
  6239 ;;		Absolute function
  6240 ;;		_TMR0_DefaultInterruptHandler
  6241 ;;		_Timer0_10ms
  6242 ;; This function is called by:
  6243 ;;		_TMR0_ISR
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text34
  6248  002542                     __ptext34:
  6249                           	opt stack 0
  6250  002542                     _TMR0_CallBack:
  6251                           	opt stack 22
  6252                           
  6253                           ;tmr0.c: 163: if(TMR0_InterruptHandler)
  6254                           
  6255                           ;incstack = 0
  6256  002542  5036               	movf	_TMR0_InterruptHandler,w,c
  6257  002544  1037               	iorwf	_TMR0_InterruptHandler+1,w,c
  6258  002546  B4D8               	btfsc	status,2,c
  6259  002548  0012               	return	
  6260                           
  6261                           ;tmr0.c: 164: {
  6262                           ;tmr0.c: 165: TMR0_InterruptHandler();
  6263  00254A  D801               	call	i2u156_48
  6264  00254C  0012               	return	
  6265  00254E                     i2u156_48:
  6266  00254E  0005               	push	
  6267  002550  6EFA               	movwf	pclath,c
  6268  002552  5036               	movf	_TMR0_InterruptHandler,w,c
  6269  002554  6EFD               	movwf	tosl,c
  6270  002556  5037               	movf	_TMR0_InterruptHandler+1,w,c
  6271  002558  6EFE               	movwf	tosh,c
  6272  00255A  6AFF               	clrf	tosu,c
  6273  00255C  50FA               	movf	pclath,w,c
  6274  00255E  0012               	return		;indir
  6275  002560                     __end_of_TMR0_CallBack:
  6276                           	opt stack 0
  6277                           tosu	equ	0xFFF
  6278                           tosh	equ	0xFFE
  6279                           tosl	equ	0xFFD
  6280                           pclatu	equ	0xFFB
  6281                           pclath	equ	0xFFA
  6282                           tblptru	equ	0xFF8
  6283                           tblptrh	equ	0xFF7
  6284                           tblptrl	equ	0xFF6
  6285                           tablat	equ	0xFF5
  6286                           prodh	equ	0xFF4
  6287                           prodl	equ	0xFF3
  6288                           intcon	equ	0xFF2
  6289                           postinc0	equ	0xFEE
  6290                           fsr0h	equ	0xFEA
  6291                           fsr0l	equ	0xFE9
  6292                           wreg	equ	0xFE8
  6293                           indf1	equ	0xFE7
  6294                           postdec1	equ	0xFE5
  6295                           plusw1	equ	0xFE3
  6296                           fsr1h	equ	0xFE2
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           postdec2	equ	0xFDD
  6301                           plusw2	equ	0xFDB
  6302                           fsr2h	equ	0xFDA
  6303                           fsr2l	equ	0xFD9
  6304                           status	equ	0xFD8
  6305                           
  6306 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6307 ;; Defined at:
  6308 ;;		line 173 in file "mcc_generated_files/tmr0.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;		None
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      void 
  6315 ;; Registers used:
  6316 ;;		None
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6326 ;;Total ram usage:        0 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_TMR0_Initialize
  6332 ;;		_TMR0_CallBack
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text35
  6337  0025F0                     __ptext35:
  6338                           	opt stack 0
  6339  0025F0                     _TMR0_DefaultInterruptHandler:
  6340                           	opt stack 23
  6341                           
  6342                           ;incstack = 0
  6343  0025F0  0012               	return		;funcret
  6344  0025F2                     __end_of_TMR0_DefaultInterruptHandler:
  6345                           	opt stack 0
  6346                           tosu	equ	0xFFF
  6347                           tosh	equ	0xFFE
  6348                           tosl	equ	0xFFD
  6349                           pclatu	equ	0xFFB
  6350                           pclath	equ	0xFFA
  6351                           tblptru	equ	0xFF8
  6352                           tblptrh	equ	0xFF7
  6353                           tblptrl	equ	0xFF6
  6354                           tablat	equ	0xFF5
  6355                           prodh	equ	0xFF4
  6356                           prodl	equ	0xFF3
  6357                           intcon	equ	0xFF2
  6358                           postinc0	equ	0xFEE
  6359                           fsr0h	equ	0xFEA
  6360                           fsr0l	equ	0xFE9
  6361                           wreg	equ	0xFE8
  6362                           indf1	equ	0xFE7
  6363                           postdec1	equ	0xFE5
  6364                           plusw1	equ	0xFE3
  6365                           fsr1h	equ	0xFE2
  6366                           fsr1l	equ	0xFE1
  6367                           indf2	equ	0xFDF
  6368                           postinc2	equ	0xFDE
  6369                           postdec2	equ	0xFDD
  6370                           plusw2	equ	0xFDB
  6371                           fsr2h	equ	0xFDA
  6372                           fsr2l	equ	0xFD9
  6373                           status	equ	0xFD8
  6374                           
  6375 ;; *************** function _Timer0_10ms *****************
  6376 ;; Defined at:
  6377 ;;		line 3 in file "libs/projMain.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;		None
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;		None
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;Total ram usage:        0 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    1
  6398 ;; This function calls:
  6399 ;;		i2___awmod
  6400 ;; This function is called by:
  6401 ;;		_main
  6402 ;;		_TMR0_CallBack
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text36
  6407  00246C                     __ptext36:
  6408                           	opt stack 0
  6409  00246C                     _Timer0_10ms:
  6410                           	opt stack 22
  6411                           
  6412                           ;projMain.c: 5: GLOBAL_I++;
  6413                           
  6414                           ;incstack = 0
  6415  00246C  4A3E               	infsnz	_GLOBAL_I,f,c
  6416  00246E  2A3F               	incf	_GLOBAL_I+1,f,c
  6417                           
  6418                           ;projMain.c: 6: if (GLOBAL_I%10==0) {
  6419  002470  C03E  F001         	movff	_GLOBAL_I,i2___awmod@dividend
  6420  002474  C03F  F002         	movff	_GLOBAL_I+1,i2___awmod@dividend+1
  6421  002478  0E00               	movlw	0
  6422  00247A  6E04               	movwf	i2___awmod@divisor+1,c
  6423  00247C  0E0A               	movlw	10
  6424  00247E  6E03               	movwf	i2___awmod@divisor,c
  6425  002480  EC92  F011         	call	i2___awmod	;wreg free
  6426  002484  5001               	movf	?i2___awmod,w,c
  6427  002486  1002               	iorwf	?i2___awmod+1,w,c
  6428  002488  A4D8               	btfss	status,2,c
  6429  00248A  D002               	goto	i2l2425
  6430                           
  6431                           ;projMain.c: 7: LATB ^= 0xFF;
  6432  00248C  0EFF               	movlw	255
  6433  00248E  1A84               	xorwf	3972,f,c	;volatile
  6434  002490                     i2l2425:
  6435                           
  6436                           ;projMain.c: 8: }
  6437                           ;projMain.c: 9: if (GLOBAL_I%5000==0) {
  6438  002490  C03E  F001         	movff	_GLOBAL_I,i2___awmod@dividend
  6439  002494  C03F  F002         	movff	_GLOBAL_I+1,i2___awmod@dividend+1
  6440  002498  0E13               	movlw	19
  6441  00249A  6E04               	movwf	i2___awmod@divisor+1,c
  6442  00249C  0E88               	movlw	136
  6443  00249E  6E03               	movwf	i2___awmod@divisor,c
  6444  0024A0  EC92  F011         	call	i2___awmod	;wreg free
  6445  0024A4  0012               	return	
  6446  0024A6                     __end_of_Timer0_10ms:
  6447                           	opt stack 0
  6448                           tosu	equ	0xFFF
  6449                           tosh	equ	0xFFE
  6450                           tosl	equ	0xFFD
  6451                           pclatu	equ	0xFFB
  6452                           pclath	equ	0xFFA
  6453                           tblptru	equ	0xFF8
  6454                           tblptrh	equ	0xFF7
  6455                           tblptrl	equ	0xFF6
  6456                           tablat	equ	0xFF5
  6457                           prodh	equ	0xFF4
  6458                           prodl	equ	0xFF3
  6459                           intcon	equ	0xFF2
  6460                           postinc0	equ	0xFEE
  6461                           fsr0h	equ	0xFEA
  6462                           fsr0l	equ	0xFE9
  6463                           wreg	equ	0xFE8
  6464                           indf1	equ	0xFE7
  6465                           postdec1	equ	0xFE5
  6466                           plusw1	equ	0xFE3
  6467                           fsr1h	equ	0xFE2
  6468                           fsr1l	equ	0xFE1
  6469                           indf2	equ	0xFDF
  6470                           postinc2	equ	0xFDE
  6471                           postdec2	equ	0xFDD
  6472                           plusw2	equ	0xFDB
  6473                           fsr2h	equ	0xFDA
  6474                           fsr2l	equ	0xFD9
  6475                           status	equ	0xFD8
  6476                           
  6477 ;; *************** function i2___awmod *****************
  6478 ;; Defined at:
  6479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  dividend        2    0[COMRAM] int 
  6482 ;;  divisor         2    2[COMRAM] int 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  __awmod         1    5[COMRAM] unsigned char 
  6485 ;;  __awmod         1    4[COMRAM] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  2    0[COMRAM] int 
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;Total ram usage:        6 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_Timer0_10ms
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text37
  6509  002324                     __ptext37:
  6510                           	opt stack 0
  6511  002324                     i2___awmod:
  6512                           	opt stack 22
  6513                           
  6514                           ;incstack = 0
  6515  002324  0E00               	movlw	0
  6516  002326  6E06               	movwf	i2___awmod@sign,c
  6517  002328  AE02               	btfss	i2___awmod@dividend+1,7,c
  6518  00232A  D006               	goto	i2l2315
  6519  00232C  6C01               	negf	i2___awmod@dividend,c
  6520  00232E  1E02               	comf	i2___awmod@dividend+1,f,c
  6521  002330  B0D8               	btfsc	status,0,c
  6522  002332  2A02               	incf	i2___awmod@dividend+1,f,c
  6523  002334  0E01               	movlw	1
  6524  002336  6E06               	movwf	i2___awmod@sign,c
  6525  002338                     i2l2315:
  6526  002338  AE04               	btfss	i2___awmod@divisor+1,7,c
  6527  00233A  D004               	goto	i2l2319
  6528  00233C  6C03               	negf	i2___awmod@divisor,c
  6529  00233E  1E04               	comf	i2___awmod@divisor+1,f,c
  6530  002340  B0D8               	btfsc	status,0,c
  6531  002342  2A04               	incf	i2___awmod@divisor+1,f,c
  6532  002344                     i2l2319:
  6533  002344  5003               	movf	i2___awmod@divisor,w,c
  6534  002346  1004               	iorwf	i2___awmod@divisor+1,w,c
  6535  002348  B4D8               	btfsc	status,2,c
  6536  00234A  D018               	goto	i2l2335
  6537  00234C  0E01               	movlw	1
  6538  00234E  6E05               	movwf	i2___awmod@counter,c
  6539  002350  D004               	goto	i2l2325
  6540  002352                     i2l2323:
  6541  002352  90D8               	bcf	status,0,c
  6542  002354  3603               	rlcf	i2___awmod@divisor,f,c
  6543  002356  3604               	rlcf	i2___awmod@divisor+1,f,c
  6544  002358  2A05               	incf	i2___awmod@counter,f,c
  6545  00235A                     i2l2325:
  6546  00235A  AE04               	btfss	i2___awmod@divisor+1,7,c
  6547  00235C  D7FA               	goto	i2l2323
  6548  00235E                     i2l2327:
  6549  00235E  5003               	movf	i2___awmod@divisor,w,c
  6550  002360  5C01               	subwf	i2___awmod@dividend,w,c
  6551  002362  5004               	movf	i2___awmod@divisor+1,w,c
  6552  002364  5802               	subwfb	i2___awmod@dividend+1,w,c
  6553  002366  A0D8               	btfss	status,0,c
  6554  002368  D004               	goto	i2l2331
  6555  00236A  5003               	movf	i2___awmod@divisor,w,c
  6556  00236C  5E01               	subwf	i2___awmod@dividend,f,c
  6557  00236E  5004               	movf	i2___awmod@divisor+1,w,c
  6558  002370  5A02               	subwfb	i2___awmod@dividend+1,f,c
  6559  002372                     i2l2331:
  6560  002372  90D8               	bcf	status,0,c
  6561  002374  3204               	rrcf	i2___awmod@divisor+1,f,c
  6562  002376  3203               	rrcf	i2___awmod@divisor,f,c
  6563  002378  2E05               	decfsz	i2___awmod@counter,f,c
  6564  00237A  D7F1               	goto	i2l2327
  6565  00237C                     i2l2335:
  6566  00237C  5006               	movf	i2___awmod@sign,w,c
  6567  00237E  B4D8               	btfsc	status,2,c
  6568  002380  D004               	goto	i2l2339
  6569  002382  6C01               	negf	i2___awmod@dividend,c
  6570  002384  1E02               	comf	i2___awmod@dividend+1,f,c
  6571  002386  B0D8               	btfsc	status,0,c
  6572  002388  2A02               	incf	i2___awmod@dividend+1,f,c
  6573  00238A                     i2l2339:
  6574  00238A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  6575  00238E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  6576  002392  0012               	return	
  6577  002394                     __end_ofi2___awmod:
  6578                           	opt stack 0
  6579                           tosu	equ	0xFFF
  6580                           tosh	equ	0xFFE
  6581                           tosl	equ	0xFFD
  6582                           pclatu	equ	0xFFB
  6583                           pclath	equ	0xFFA
  6584                           tblptru	equ	0xFF8
  6585                           tblptrh	equ	0xFF7
  6586                           tblptrl	equ	0xFF6
  6587                           tablat	equ	0xFF5
  6588                           prodh	equ	0xFF4
  6589                           prodl	equ	0xFF3
  6590                           intcon	equ	0xFF2
  6591                           postinc0	equ	0xFEE
  6592                           fsr0h	equ	0xFEA
  6593                           fsr0l	equ	0xFE9
  6594                           wreg	equ	0xFE8
  6595                           indf1	equ	0xFE7
  6596                           postdec1	equ	0xFE5
  6597                           plusw1	equ	0xFE3
  6598                           fsr1h	equ	0xFE2
  6599                           fsr1l	equ	0xFE1
  6600                           indf2	equ	0xFDF
  6601                           postinc2	equ	0xFDE
  6602                           postdec2	equ	0xFDD
  6603                           plusw2	equ	0xFDB
  6604                           fsr2h	equ	0xFDA
  6605                           fsr2l	equ	0xFD9
  6606                           status	equ	0xFD8
  6607                           tosu	equ	0xFFF
  6608                           tosh	equ	0xFFE
  6609                           tosl	equ	0xFFD
  6610                           pclatu	equ	0xFFB
  6611                           pclath	equ	0xFFA
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           prodh	equ	0xFF4
  6617                           prodl	equ	0xFF3
  6618                           intcon	equ	0xFF2
  6619                           postinc0	equ	0xFEE
  6620                           fsr0h	equ	0xFEA
  6621                           fsr0l	equ	0xFE9
  6622                           wreg	equ	0xFE8
  6623                           indf1	equ	0xFE7
  6624                           postdec1	equ	0xFE5
  6625                           plusw1	equ	0xFE3
  6626                           fsr1h	equ	0xFE2
  6627                           fsr1l	equ	0xFE1
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           plusw2	equ	0xFDB
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636                           	psect	text38
  6637  000000                     __ptext38:
  6638                           	opt stack 0
  6639                           tosu	equ	0xFFF
  6640                           tosh	equ	0xFFE
  6641                           tosl	equ	0xFFD
  6642                           pclatu	equ	0xFFB
  6643                           pclath	equ	0xFFA
  6644                           tblptru	equ	0xFF8
  6645                           tblptrh	equ	0xFF7
  6646                           tblptrl	equ	0xFF6
  6647                           tablat	equ	0xFF5
  6648                           prodh	equ	0xFF4
  6649                           prodl	equ	0xFF3
  6650                           intcon	equ	0xFF2
  6651                           postinc0	equ	0xFEE
  6652                           fsr0h	equ	0xFEA
  6653                           fsr0l	equ	0xFE9
  6654                           wreg	equ	0xFE8
  6655                           indf1	equ	0xFE7
  6656                           postdec1	equ	0xFE5
  6657                           plusw1	equ	0xFE3
  6658                           fsr1h	equ	0xFE2
  6659                           fsr1l	equ	0xFE1
  6660                           indf2	equ	0xFDF
  6661                           postinc2	equ	0xFDE
  6662                           postdec2	equ	0xFDD
  6663                           plusw2	equ	0xFDB
  6664                           fsr2h	equ	0xFDA
  6665                           fsr2l	equ	0xFD9
  6666                           status	equ	0xFD8
  6667                           
  6668                           	psect	rparam
  6669  0000                     tosu	equ	0xFFF
  6670                           tosh	equ	0xFFE
  6671                           tosl	equ	0xFFD
  6672                           pclatu	equ	0xFFB
  6673                           pclath	equ	0xFFA
  6674                           tblptru	equ	0xFF8
  6675                           tblptrh	equ	0xFF7
  6676                           tblptrl	equ	0xFF6
  6677                           tablat	equ	0xFF5
  6678                           prodh	equ	0xFF4
  6679                           prodl	equ	0xFF3
  6680                           intcon	equ	0xFF2
  6681                           postinc0	equ	0xFEE
  6682                           fsr0h	equ	0xFEA
  6683                           fsr0l	equ	0xFE9
  6684                           wreg	equ	0xFE8
  6685                           indf1	equ	0xFE7
  6686                           postdec1	equ	0xFE5
  6687                           plusw1	equ	0xFE3
  6688                           fsr1h	equ	0xFE2
  6689                           fsr1l	equ	0xFE1
  6690                           indf2	equ	0xFDF
  6691                           postinc2	equ	0xFDE
  6692                           postdec2	equ	0xFDD
  6693                           plusw2	equ	0xFDB
  6694                           fsr2h	equ	0xFDA
  6695                           fsr2l	equ	0xFD9
  6696                           status	equ	0xFD8
  6697                           
  6698                           	psect	temp
  6699  00004B                     btemp:
  6700                           	opt stack 0
  6701  00004B                     	ds	1
  6702  0000                     int$flags	set	btemp
  6703                           tosu	equ	0xFFF
  6704                           tosh	equ	0xFFE
  6705                           tosl	equ	0xFFD
  6706                           pclatu	equ	0xFFB
  6707                           pclath	equ	0xFFA
  6708                           tblptru	equ	0xFF8
  6709                           tblptrh	equ	0xFF7
  6710                           tblptrl	equ	0xFF6
  6711                           tablat	equ	0xFF5
  6712                           prodh	equ	0xFF4
  6713                           prodl	equ	0xFF3
  6714                           intcon	equ	0xFF2
  6715                           postinc0	equ	0xFEE
  6716                           fsr0h	equ	0xFEA
  6717                           fsr0l	equ	0xFE9
  6718                           wreg	equ	0xFE8
  6719                           indf1	equ	0xFE7
  6720                           postdec1	equ	0xFE5
  6721                           plusw1	equ	0xFE3
  6722                           fsr1h	equ	0xFE2
  6723                           fsr1l	equ	0xFE1
  6724                           indf2	equ	0xFDF
  6725                           postinc2	equ	0xFDE
  6726                           postdec2	equ	0xFDD
  6727                           plusw2	equ	0xFDB
  6728                           fsr2h	equ	0xFDA
  6729                           fsr2l	equ	0xFD9
  6730                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    14
    Data        40
    BSS         1303
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      74
    BANK0           160     19     139
    BANK1           256      0     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_10ms(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_10ms(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    Lcd_Text@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 
		 -> main@Time(BANK0[7]), main@Date(BANK0[7]), 

    ValidateDateTime@Time	PTR unsigned char  size(2) Largest target is 7
		 -> main@Time(BANK0[7]), 

    ValidateDateTime@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    GetDay@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    ReadGPSDateTime@Date	PTR unsigned char  size(2) Largest target is 7
		 -> main@Date(BANK0[7]), 

    ReadGPSDateTime@Time	PTR unsigned char  size(2) Largest target is 7
		 -> main@Time(BANK0[7]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Int
    _WriteLongInt->_Lcd_WriteChar
    _Lcd_WriteChar->___aldiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LoadAllFromEeprom->_LoadStatesFromEeprom
    _LoadStatesFromEeprom->___awdiv
    _LoadSettingsFromEeprom->___wmul
    _LoadEventsFromEeprom->___wmul
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_Int->_GetDay
    ___lwdiv->___wmul
    _Lcd_Init->_Lcd_Command
    _GetDay->___awmod
    ___awmod->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _Timer0_10ms->i2___awmod

Critical Paths under _main in BANK0

    _main->_Lcd_Int

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   42484
                                              4 BANK0     15    15      0
                 _EUSART1_Initialize
                             _GetDay
                           _Lcd_Init
                            _Lcd_Int
                           _Lcd_Text
                  _LoadAllFromEeprom
                    _ReadGPSDateTime
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                   _ValidateDateTime
                       _WriteLongInt
 ---------------------------------------------------------------------------------
 (1) _WriteLongInt                                         9     2      7    3090
                                             38 COMRAM     9     2      7
                      _Lcd_WriteChar
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                             20 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_WriteChar                                        4     2      2    1445
                                             34 COMRAM     4     2      2
                         _Lcd_CharCP
                        _Lcd_Command
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _ValidateDateTime                                     6     2      4     942
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     245
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             22 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadGPSDateTime                                     20    16      4     749
                                             20 COMRAM    20    16      4
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoadAllFromEeprom                                    0     0      0   22296
               _LoadEventsFromEeprom
             _LoadSettingsFromEeprom
               _LoadStatesFromEeprom
 ---------------------------------------------------------------------------------
 (2) _LoadStatesFromEeprom                                21    21      0    8433
                                             28 COMRAM    21    21      0
                         _ReadEeprom
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LoadSettingsFromEeprom                               9     9      0    7197
                                             26 COMRAM     9     9      0
                         _ReadEeprom
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LoadEventsFromEeprom                                10    10      0    6666
                                             26 COMRAM    10    10      0
                         _ReadEeprom
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ReadEeprom                                           2     0      2    3125
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             5     2      3    1839
                                             23 COMRAM     5     2      3
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Int                                              7     4      3    6558
                                             48 COMRAM     3     0      3
                                              0 BANK0      4     4      0
                             _GetDay (ARG)
                         _Lcd_CharCP
                        _Lcd_Command
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             26 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Lcd_CharCP                                           3     3      0     248
                                             20 COMRAM     3     3      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     452
                                             23 COMRAM     1     1      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Delay5500us                                      1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          3     3      0     248
                                             20 COMRAM     3     3      0
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (4) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDay                                              14    12      2    5795
                                             34 COMRAM    14    12      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2932
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     833
                                             28 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1525
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0     400
                                              6 COMRAM    14    14      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0     400
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0     400
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                        _Timer0_10ms *
 ---------------------------------------------------------------------------------
 (8) _Timer0_10ms                                          0     0      0     400
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
   _GetDay
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___wmul
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Int
     _GetDay (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___wmul
     _Lcd_CharCP (ARG)
       _Lcd_Delay5us
     _Lcd_Command (ARG)
       _Lcd_Delay5us
     ___awdiv (ARG)
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5us
   _LoadAllFromEeprom
     _LoadEventsFromEeprom
       _ReadEeprom
       ___wmul
     _LoadSettingsFromEeprom
       _ReadEeprom
       ___wmul
     _LoadStatesFromEeprom
       _ReadEeprom
       ___awdiv
       ___wmul
   _ReadGPSDateTime
     _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   _TMR0_SetInterruptHandler
   _ValidateDateTime
   _WriteLongInt
     _Lcd_WriteChar
       _Lcd_CharCP
         _Lcd_Delay5us
       _Lcd_Command
         _Lcd_Delay5us
       ___aldiv (ARG)
     ___aldiv

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _Timer0_10ms *
         i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0     3C0      35       25.9%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      F0       8       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      8B       5       86.9%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      4A       1       78.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C5       6        0.0%
DATA                 0      0     585       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jul 07 19:11:38 2017

                          Lcd_Int@tempVal 00DA              __end_of_LoadStatesFromEeprom 13EA  
                 __end_of_ReadGPSDateTime 1B08                               __CFG_CP$OFF 000000  
                                      l91 1B06                              ___awdiv@sign 001A  
                     ___wmul@multiplicand 0017                               __CFG_LVP$ON 000000  
                                     l332 15A8                                       l190 1F40  
                                     l191 1F70                                       l345 13E8  
                                     l372 25A0                                       l476 2514  
                                     _GIE 007F97                              __CFG_CPD$OFF 000000  
                            ___awmod@sign 0022                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                     __end_of_Lcd_Command 1D34                              __CFG_ZCD$OFF 000000  
                                    l1082 23DC                                      l3403 2404  
                                    l4131 19B2                                      l4107 18EA  
                                    l3405 241E                                      l4133 19C4  
                                    l3351 21DA                                      l3361 21FC  
                                    l3345 21CA                                      l3513 140E  
                                    l3357 21F0                                      l3373 2222  
                                    l3359 21F8                                      l3703 231A  
                                    l3377 2230                                      l3369 2218  
                                    l3713 23AA                                      l3553 11F2  
                                    l3385 25AE                                      l3393 23EA  
                                    l3641 1E6C                                      l3715 23B2  
                                    l3571 126E                                      l3547 11B8  
                                    l3395 23F0                                      l3651 1E9E  
                                    l3635 1E54                                      l3725 23D2  
                                    l3717 23B6                                      l3565 1256  
                                    l3557 1202                                      l3805 1626  
                                    l3397 23F6                                      l3591 13AE  
                                    l3567 125E                                      l3815 1668  
                                    l3399 23FC                                      l3647 1E8E  
                                    l3663 1EDC                                      l3913 2126  
                                    l3753 1A5A                                      l3825 16A6  
                                    l3809 162A                                      l3649 1E9A  
                                    l3691 22EE                                      l3683 22D4  
                                    l3931 218C                                      l3915 212C  
                                    l3923 2140                                      l3587 1350  
                                    l3579 12C2                                      l3771 1ADE  
                                    l3739 1A18                                      l3835 16E8  
                                    l3819 166C                                      l3667 1EF2  
                                    l3659 1ECE                                      l3941 1D54  
                                    l3917 2132                                      l3925 215A  
                                    l3773 1AE2                                      l3845 172A  
                                    l3829 16AA                                      l3695 2302  
                                    l3687 22E2                                      l3679 22C8  
                                    l3943 1D5A                                      l3951 1D86  
                                    l3927 2162                                      l3919 2138  
                                    l3767 1A92                                      l3759 1A7A  
                                    l3775 1AE8                                      l3839 16EC  
                                    l3689 22EA                                      l3945 1D60  
                                    l3769 1AB8                                      l3777 1AF0  
                                    l3849 172E                                      l3699 230C  
                                    l3859 1F38                                      l3963 1E04  
                                    l3939 1D4E                                      l3795 15E4  
                                    l3957 1DB8                                      l3949 1D6A  
                                    l3981 1FF8                                      l3799 15E8  
                                    l3983 2008                                      l3989 207E  
                                    STR_1 0F16                                      STR_2 0F15  
                                    STR_3 0F12                                      STR_4 0F0F  
                                    u3020 2184                                      _LATA 000F83  
                                    u3030 21AE                                      _LATB 000F84  
                                    _LATC 000F85                                      u2315 1B16  
                                    u3027 217A                                      u2325 1B30  
                                    u3037 21A4                                      u2335 1B50  
                                    u2345 1C2C                                      u2450 140C  
                                    u2355 1C46                                      u2524 130C  
                                    u2365 1C66                                      u2525 1306  
                                    u3317 1AEA                                      u2470 11B6  
                                    u3327 1B8A                                      u2544 136A  
                                    u3337 1C0A                                      u2545 1364  
                                    u3281 18CC                                      u2570 211E  
                                    u3347 25B8                                      u3291 18DE  
                                    u3357 1CA0                                      u2750 19FA  
                                    u3367 1D20                                      u3377 25DE  
                   __size_of_WriteLongInt 00C0                                      u2860 17E8  
                                    u2861 17E4                                      u2870 17EA  
                                    _PLLR 0076D8                                      _WPUA 000F10  
                                    _WPUB 000F18                                      _WPUC 000F20  
                                    _WPUE 000F2D                         ??_Lcd_Delay5500us 0015  
                           __CFG_FCMEN$ON 000000                                      _main 18A8  
                           ?_EUSART1_Read 0001                           _TMR0_StartTimer 25E6  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                      __end_of_Lcd_Delay5us 25E6  
                                    fsr2l 000FD9                                      btemp 004B  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0092                LoadEventsFromEeprom@Temp16 0023  
                         __end_of_Lcd_Int 1E38                             __CFG_CSWEN$ON 000000  
                _GPS_SYNC_EVERY_x_SECONDS 00A8                              ___param_bank 000000  
                              _Lcd_CharCP 1B08                             __CFG_SCANE$ON 000000  
                 __end_of_TMR0_Initialize 246C            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 0026                   ?_LoadSettingsFromEeprom 0001  
           __end_of_OSCILLATOR_Initialize 251C                LoadStatesFromEeprom@j_1155 002C  
                         __end_of___aldiv 1F04                                     ?_main 0001  
                         __end_of___awdiv 223A                             __CFG_WDTE$OFF 000000  
                         __end_of___awmod 2324                           ___awdiv@divisor 0017  
                          __CFG_DEBUG$OFF 000000                           __end_of___lwdiv 23E6  
                                   i2l400 0050                           ___awdiv@counter 0019  
                                   _OSCEN 000EDC                                     _TMR0H 000FD4  
                                   _TMR0L 000FD3                                     _TRISA 000F88  
                                   _TRISB 000F89                                     _TRISC 000F8A  
                            _WriteLongInt 1FC6         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0015  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 24D0  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
               __size_of_ValidateDateTime 0188                        __CFG_MCLRE$EXTMCLR 000000  
                        _GLOBAL_USARTSIZE 00B0                                     pclath 000FFA  
                                   tablat 000FF5                            ??_EUSART1_Read 0015  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   status 000FD8                        __size_ofi2___awmod 0070  
                        __end_of_Lcd_Init 1FC6                          __end_of_Lcd_Text 21B6  
                              _ReadEeprom 258C                           __initialization 223A  
              __end_of_EUSART1_Initialize 258C                              __end_of_main 19E8  
                        ?_ReadGPSDateTime 0015            __end_of_LoadSettingsFromEeprom 1184  
             ?_INTERRUPT_InterruptManager 0001             LoadStatesFromEeprom@AddStates 002E  
                             _Lcd_Command 1C1E                                    ??_main 00DC  
                           __activetblptr 000003                     _AUDIO_NORMAL_OFF_TIME 0044  
           LoadStatesFromEeprom@AudAddInc 0029                   __end_of_TMR0_StartTimer 25EA  
                        ___awdiv@dividend 0015                      _LoadStatesFromEeprom 1184  
                                  _ANSELA 000F11                                    _ANSELB 000F19  
                                  _ANSELC 000F21                                    _T0CON0 000FD5  
                                  _T0CON1 000FD6                                    _RC1REG 000F99  
                                  _CYCLES 0060                                    _RC1STA 000F9D  
                                  _ODCONA 000F0F                                    _ODCONB 000F17  
                                  _ODCONC 000F1F                                    _RC6PPS 000EFD  
                                  _EVENTS 0100                            __CFG_WDTCCS$SC 000000  
                                  i2l2331 2372                                    i2l2323 2352  
                                  i2l2315 2338                                    i2l2325 235A  
                                  i2l2327 235E                                    i2l2335 237C  
                                  i2l2319 2344                                    i2l2425 2490  
                                  i2l2339 238A                          WriteLongInt@Sign 002D  
                                  _OSCFRQ 000EDE                                    _NVMDAT 000F80  
                               ??_Lcd_Int 0034                                    _TX1REG 000F9A  
                          Lcd_Text@buffer 0019                                    _TX1STA 000F9E  
                                  _STATES 01F0                             ??_Timer0_10ms 0007  
                        WriteLongInt@size 002C                                    _GetDay 1732  
                          __CFG_PWRTE$OFF 000000                            __CFG_XINST$OFF 000000  
            _SPECIAL_AUDIO_LAST_X_SECONDS 0041                               ?_Lcd_CharCP 0001  
                               ??___aldiv 001D                                    ___wmul 251C  
                               ??___awdiv 0019                            __CFG_STVREN$ON 000000  
                               ??___awmod 0021                                 ??___lwdiv 001F  
                        ?_TMR0_Initialize 0001                                    clear_0 227A  
                                  clear_1 228C                                    clear_2 2298  
                                  clear_3 22A4                          ___awdiv@quotient 001B  
                         ___awmod@divisor 001F                           ___awmod@counter 0021  
                   __end_of_Lcd_WriteChar 242C                              __pdataCOMRAM 0049  
                       __end_ofi2___awmod 2394                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                     __end_of_TMR0_CallBack 2560  
                          i2___awmod@sign 0006                     ?_LoadStatesFromEeprom 0001  
TMR0_SetInterruptHandler@InterruptHandler 0015                     __size_of_Lcd_Delay5us 000A  
           __size_of_INTERRUPT_Initialize 0004                        Lcd_Command@command 0017  
                   LoadEventsFromEeprom@i 001F                         _SYSTEM_Initialize 2560  
                              __accesstop 0060                   __end_of__initialization 22AA  
                         __CFG_FEXTOSC$HS 000000                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001              LoadSettingsFromEeprom@Temp16 0020  
            LoadSettingsFromEeprom@Temp32 001C                               ?_ReadEeprom 0015  
                          __pcstackCOMRAM 0001                              __pidataBANK0 24D0  
                     __end_of_Timer0_10ms 24A6                       ??_SYSTEM_Initialize 0019  
                               ?_TMR0_ISR 0001                      __end_of_EUSART1_Read 25B2  
                            _Lcd_Delay5us 25DC                           _Lcd_Delay5500us 25B2  
                   TMR0_ISR@CountCallBack 0034                            Lcd_WriteChar@c 0024  
                          Lcd_WriteChar@x 0023                            Lcd_WriteChar@y 0025  
                               ?_Lcd_Init 0001                                 ?_Lcd_Text 0018  
                        ?_TMR0_StartTimer 0001                 __end_of_SYSTEM_Initialize 2576  
                        _ValidateDateTime 15AA                       __size_of_Lcd_CharCP 0116  
           __size_of_LoadEventsFromEeprom 01C0                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                   ?_GetDay 0023  
                       ReadEeprom@Address 0015          __end_of_TMR0_SetInterruptHandler 25DC  
                                 ?___wmul 0015                                ??_TMR0_ISR 0007  
                         __CFG_PPS1WAY$ON 000000                                   _CENTURY 0049  
                                 GetDay@d 002D                                   GetDay@m 002E  
                                 GetDay@t 00B2                                   GetDay@y 002F  
                                 _SP1BRGH 000F9C                                   _SP1BRGL 000F9B  
                                 _OSCCON1 000ED8                                   _OSCCON3 000EDA  
                  ??_LoadStatesFromEeprom 001D                                   _NVMADRH 000F7F  
                                 _NVMADRL 000F7E                                   _OSCTUNE 000EDD  
                              ??_Lcd_Init 0018                                   _PPSLOCK 000EA0  
                              ??_Lcd_Text 001B                       __size_of_ReadEeprom 0014  
                                 _Lcd_Int 1D34                      ValidateDateTime@Date 0015  
                             _Timer0_10ms 246C                      ValidateDateTime@Item 001A  
                    ValidateDateTime@Time 0017                           __size_of_GetDay 0176  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___aldiv 1E38                         Lcd_WriteChar@data 0026  
                                 ___awdiv 21B6                                   ___awmod 22B4  
                         __size_of___wmul 0026                                   ___lwdiv 2394  
                 __end_of_Lcd_Delay5500us 25C4                              __psmallconst 0F00  
                                 __pcinit 223A                                   __ramtop 0F00  
                            ?_Lcd_Command 0001                                   __ptext0 18A8  
                                 __ptext1 1FC6                                   __ptext2 1E38  
                                 __ptext3 23E6                                   __ptext4 15AA  
                                 __ptext5 2560                                   __ptext6 242C  
                                 __ptext7 25E6                                   __ptext8 25D2  
                                 __ptext9 2086                     _OSCILLATOR_Initialize 24F6  
                        ___awmod@dividend 001D                          ___aldiv@dividend 0015  
                      _EUSART1_Initialize 2576                  ??_PIN_MANAGER_Initialize 0015  
              __size_of_SYSTEM_Initialize 0016        LoadStatesFromEeprom@AddAudioNormal 0021  
                   _AUDIO_SPECIAL_ON_TIME 0043                      end_of_initialization 22AA  
                     ?_EUSART1_Initialize 0001                           _DAY_LIGHT_START 003C  
                            ??_Lcd_CharCP 0015                          ___aldiv@quotient 001F  
                                 postdec1 000FE5                                   postdec2 000FDD  
        _GPS_SYNC_EVERY_DAY_AT_LOCAL_TIME 00A4                                   postinc0 000FEE  
                                 postinc2 000FDE                     __size_of_EUSART1_Read 0012  
                               Lcd_Text@x 0018                                 Lcd_Text@y 001B  
                              main@F11390 00D1                                main@F11392 00CA  
                    ??_EUSART1_Initialize 0015                                 _TIME_ZONE 00AE  
                   __CFG_WDTCPS$WDTCPS_31 000000                  _TMR0_SetInterruptHandler 25D2  
                           _BLINK_ON_TIME 0048                  __size_of_ReadGPSDateTime 0120  
                               _TRISAbits 000F88             LoadSettingsFromEeprom@Address 0022  
                          _GLOBAL_CENTURY 004A                                 i2___awmod 2324  
                      __end_of_Lcd_CharCP 1C1E                         _LoadAllFromEeprom 25C4  
                            _EUSART1_Read 25A0                        ?_LoadAllFromEeprom 0001  
                          __end_of_GetDay 18A8                              ??_ReadEeprom 0017  
                    _timer0ReloadVal16bit 0038              __end_of_INTERRUPT_Initialize 25EE  
                __end_of_ValidateDateTime 1732                       ??_LoadAllFromEeprom 0032  
                        ?_Lcd_Delay5500us 0001                            __end_of___wmul 2542  
                           __pidataCOMRAM 25EE                         __size_of_TMR0_ISR 002A  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 223A  
                __size_of_TMR0_Initialize 0040           __size_of_PIN_MANAGER_Initialize 009C  
                    _BLINK_LAST_X_SECONDS 0046             __end_ofReadGPSDateTime@F11399 0F08  
                              ?i2___awmod 0001                        __end_of_ReadEeprom 25A0  
               __end_of_LoadAllFromEeprom 25D2                         __size_of_Lcd_Init 00C2  
                       __size_of_Lcd_Text 0094                           WriteLongInt@POS 002E  
                    _AUDIO_NORMAL_ON_TIME 0045                                  ??_GetDay 0025  
                         WriteLongInt@Val 0028                    __size_of_Lcd_WriteChar 0046  
                ??_LoadSettingsFromEeprom 001B                          __CFG_LPBOREN$OFF 000000  
            __end_of_LoadEventsFromEeprom 15AA                                  ??___wmul 0019  
                  __size_of_TMR0_CallBack 001E                               __pdataBANK0 00B2  
                           _DAY_LIGHT_END 003A                               __pbssBIGRAM 01F0  
                           ?_WriteLongInt 0027                      __size_of_Lcd_Command 0116  
                ReadGPSDateTime@StartCode 001D                               __pbssCOMRAM 0034  
                           __pcstackBANK0 00D8                         ??_ReadGPSDateTime 0019  
                           WriteLongInt@x 0027                             WriteLongInt@y 002F  
                                ?_Lcd_Int 0031                              ?_Timer0_10ms 0001  
                   _TMR0_InterruptHandler 0036                  __size_of_TMR0_StartTimer 0004  
       LoadStatesFromEeprom@TempNormalAdd 0025                          ___lwdiv@dividend 001B  
                  _PIN_MANAGER_Initialize 2086                                 __pintcode 0008  
                                ?___aldiv 0015                                  ?___awdiv 0015  
                                ?___awmod 001D                                  ?___lwdiv 001B  
                       ReadGPSTime@F11391 0F08                         _GPS_SYNC_AT_START 0040  
            ??_INTERRUPT_InterruptManager 0007                            ??_WriteLongInt 002E  
                                _BAUD1CON 000F9F                             _Lcd_WriteChar 23E6  
                             __smallconst 0F00               LoadEventsFromEeprom@Address 0021  
                        ___lwdiv@quotient 0020                               ??i2___awmod 0005  
                           _TMR0_CallBack 2542             __size_of_LoadStatesFromEeprom 0266  
                             _CYCLE_DELAY 00AC                __size_of_LoadAllFromEeprom 000E  
                                _GLOBAL_I 003E                      _INTERRUPT_Initialize 25EA  
                         ___aldiv@divisor 0019                         ??_TMR0_Initialize 0017  
                        ReadGPSDateTime@i 0025                           ___aldiv@counter 001D  
                          ___wmul@product 0019                                  _LATAbits 000F83  
                                _LATCbits 000F85                                  _PIE0bits 000EC2  
                     __CFG_BORV$VBOR_2P45 000000           __size_of_LoadSettingsFromEeprom 026A  
                                i2u210_40 24C2       __size_of_INTERRUPT_InterruptManager 0084  
                                i2u156_48 254E                ??_TMR0_SetInterruptHandler 0017  
                                _PIR0bits 000ECA                                  _PIR3bits 000ECD  
                                Lcd_Int@x 0031                                  Lcd_Int@y 00D8  
                     ReadGPSDateTime@Date 0015                 __end_ofReadGPSTime@F11391 0F0F  
                     ReadGPSDateTime@Time 0017                                  _TMR0_ISR 24A6  
                            Lcd_Init@data 0018                            ?_Lcd_WriteChar 0023  
                       ___wmul@multiplier 0015                                  _Lcd_Init 1F04  
                          ?_TMR0_CallBack 0001                                  _Lcd_Text 2122  
                               copy_data0 224E                     ?_INTERRUPT_Initialize 0001  
                    _LoadEventsFromEeprom 13EA                        i2___awmod@dividend 0001  
                        __size_of_Lcd_Int 0104                              Lcd_Text@data 001C  
                                __Hrparam 0000                   __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                __Lrparam 0000                   ReadGPSDateTime@TempChar 0027  
                      __CFG_BOREN$SBORDIS 000000                   ??_OSCILLATOR_Initialize 0015  
                       ??_TMR0_StartTimer 0015                          __size_of___aldiv 00CC  
                       ?_ValidateDateTime 0015                          __size_of___awdiv 0084  
                        __size_of___awmod 0070               __size_of_EUSART1_Initialize 0016  
                        __size_of___lwdiv 0052                        ??_ValidateDateTime 0019  
                           ?_Lcd_Delay5us 0001                    _LoadSettingsFromEeprom 0F1A  
                              _T0CON0bits 000FD5                           ___lwdiv@divisor 001D  
                         ___lwdiv@counter 001F                                  __ptext10 24F6  
                                __ptext11 25EA                                  __ptext20 2122  
                                __ptext12 2576                                  __ptext21 1D34  
                                __ptext13 19E8                                  __ptext30 22B4  
                                __ptext22 2394                                  __ptext14 25A0  
                                __ptext31 21B6                                  __ptext23 1B08  
                                __ptext15 25C4                                  __ptext24 1F04  
                                __ptext16 1184                                  __ptext33 24A6  
                                __ptext25 25B2                                  __ptext17 0F1A  
                                __ptext34 2542                                  __ptext26 1C1E  
                                __ptext18 13EA                                  __ptext35 25F0  
                                __ptext27 25DC                                  __ptext19 258C  
                                __ptext36 246C                                  __ptext28 1732  
                                __ptext37 2324                                  __ptext29 251C  
                                __ptext38 0000                     ?_LoadEventsFromEeprom 0001  
                   LoadStatesFromEeprom@i 0030                     LoadStatesFromEeprom@j 002A  
                             Lcd_CharCP@c 0017                             __size_of_main 0140  
    __end_of_TMR0_DefaultInterruptHandler 25F2     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 25F0                      __end_of_WriteLongInt 2086  
                    __CFG_WDTCWS$WDTCWS_7 000000                      __size_of_Timer0_10ms 003A  
                              _RC1STAbits 000F9D                    _AUDIO_SPECIAL_OFF_TIME 0042  
                      ReadGPSDateTime@Pos 0028                               Lcd_Int@data 00D9  
                                int$flags 004B                                  main@Date 00E4  
                             Lcd_Int@size 0033                                  main@Time 00DD  
      __end_of_INTERRUPT_InterruptManager 008C                _INTERRUPT_InterruptManager 0008  
                         ??_Lcd_WriteChar 0025       LoadStatesFromEeprom@AddAudioSpecial 0023  
                          ??_Lcd_Delay5us 0015               PIN_MANAGER_Initialize@state 0015  
                         _ReadGPSDateTime 19E8                         i2___awmod@divisor 0003  
                       i2___awmod@counter 0005                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0007                               _NVMCON1bits 000F81  
                              GetDay@Date 0023                  __size_of_Lcd_Delay5500us 0012  
                  ??_INTERRUPT_Initialize 0015                                  intlevel2 0000  
                   ReadGPSDateTime@F11399 0F01                   ?_PIN_MANAGER_Initialize 0001  
                       __CFG_CLKOUTEN$OFF 000000                               _PPSLOCKbits 000EA0  
      LoadStatesFromEeprom@TempSpecialAdd 0027             ?_TMR0_DefaultInterruptHandler 0001  
                              Lcd_Int@val 0032                     ReadGPSDateTime@Commas 0024  
                           ??_Lcd_Command 0015                                _RX1PPSbits 000EB5  
                         _TMR0_Initialize 242C                              ___aldiv@sign 001E  
                          _BLINK_OFF_TIME 0047                    ??_LoadEventsFromEeprom 001B  
          __end_of_PIN_MANAGER_Initialize 2122  
