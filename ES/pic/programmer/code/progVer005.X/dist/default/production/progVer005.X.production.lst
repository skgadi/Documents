

Microchip Technology PIC18 PRO Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 30 17:04:46 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	pa_nodes0,global,class=CODE,delta=1
    78                           	dabs	1,0x200,48,_BDT
    79                           	dabs	1,0x280,64,_cdc_data_rx
    80                           	dabs	1,0x240,64,_cdc_data_tx
    81                           	dabs	1,0x238,8,_CtrlTrfData
    82                           	dabs	1,0x230,8,_SetupPkt
    83  0000                     
    84                           ; Version 1.42
    85                           ; Generated 13/04/2017 GMT
    86                           ; 
    87                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F14K50 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     tblptru	equ	0xFF8
   119                           tblptrh	equ	0xFF7
   120                           tblptrl	equ	0xFF6
   121                           tablat	equ	0xFF5
   122                           prodh	equ	0xFF4
   123                           prodl	equ	0xFF3
   124                           intcon	equ	0xFF2
   125                           wreg	equ	0xFE8
   126                           indf1	equ	0xFE7
   127                           fsr1h	equ	0xFE2
   128                           fsr1l	equ	0xFE1
   129                           indf2	equ	0xFDF
   130                           postinc2	equ	0xFDE
   131                           postdec2	equ	0xFDD
   132                           plusw2	equ	0xFDB
   133                           fsr2h	equ	0xFDA
   134                           fsr2l	equ	0xFD9
   135                           status	equ	0xFD8
   136                           
   137                           	psect	idataBANK0
   138  001C24                     __pidataBANK0:
   139                           	opt stack 0
   140                           
   141                           ;initializer for _GLOBAL_COUNTER
   142  001C24  30                 	db	48
   143                           tblptru	equ	0xFF8
   144                           tblptrh	equ	0xFF7
   145                           tblptrl	equ	0xFF6
   146                           tablat	equ	0xFF5
   147                           prodh	equ	0xFF4
   148                           prodl	equ	0xFF3
   149                           intcon	equ	0xFF2
   150                           wreg	equ	0xFE8
   151                           indf1	equ	0xFE7
   152                           fsr1h	equ	0xFE2
   153                           fsr1l	equ	0xFE1
   154                           indf2	equ	0xFDF
   155                           postinc2	equ	0xFDE
   156                           postdec2	equ	0xFDD
   157                           plusw2	equ	0xFDB
   158                           fsr2h	equ	0xFDA
   159                           fsr2l	equ	0xFD9
   160                           status	equ	0xFD8
   161                           
   162                           	psect	idataBANK1
   163  001BEA                     __pidataBANK1:
   164                           	opt stack 0
   165                           
   166                           ;initializer for _buttonMessage
   167  001BEA  42                 	db	66
   168  001BEB  75                 	db	117
   169  001BEC  74                 	db	116
   170  001BED  74                 	db	116
   171  001BEE  6F                 	db	111
   172  001BEF  6E                 	db	110
   173  001BF0  20                 	db	32
   174  001BF1  70                 	db	112
   175  001BF2  72                 	db	114
   176  001BF3  65                 	db	101
   177  001BF4  73                 	db	115
   178  001BF5  73                 	db	115
   179  001BF6  65                 	db	101
   180  001BF7  64                 	db	100
   181  001BF8  2E                 	db	46
   182  001BF9  0D                 	db	13
   183  001BFA  0A                 	db	10
   184  001BFB  00                 	db	0
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           prodh	equ	0xFF4
   190                           prodl	equ	0xFF3
   191                           intcon	equ	0xFF2
   192                           wreg	equ	0xFE8
   193                           indf1	equ	0xFE7
   194                           fsr1h	equ	0xFE2
   195                           fsr1l	equ	0xFE1
   196                           indf2	equ	0xFDF
   197                           postinc2	equ	0xFDE
   198                           postdec2	equ	0xFDD
   199                           plusw2	equ	0xFDB
   200                           fsr2h	equ	0xFDA
   201                           fsr2l	equ	0xFD9
   202                           status	equ	0xFD8
   203                           
   204                           	psect	smallconst
   205  000300                     __psmallconst:
   206                           	opt stack 0
   207  000300  00                 	db	0
   208  000301                     _USB_SD_Ptr:
   209                           	opt stack 0
   210  000301  C2                 	db	low _sd000
   211  000302  7C                 	db	low _sd001
   212  000303  48                 	db	low _sd002
   213  000304                     __end_of_USB_SD_Ptr:
   214                           	opt stack 0
   215  000304                     _USB_CD_Ptr:
   216                           	opt stack 0
   217  000304  05                 	db	low _configDescriptor1
   218  000305                     __end_of_USB_CD_Ptr:
   219                           	opt stack 0
   220  000305                     _configDescriptor1:
   221                           	opt stack 0
   222  000305  09                 	db	9
   223  000306  02                 	db	2
   224  000307  43                 	db	67
   225  000308  00                 	db	0
   226  000309  02                 	db	2
   227  00030A  01                 	db	1
   228  00030B  00                 	db	0
   229  00030C  C0                 	db	192
   230  00030D  32                 	db	50
   231  00030E  09                 	db	9
   232  00030F  04                 	db	4
   233  000310  00                 	db	0
   234  000311  00                 	db	0
   235  000312  01                 	db	1
   236  000313  02                 	db	2
   237  000314  02                 	db	2
   238  000315  01                 	db	1
   239  000316  00                 	db	0
   240  000317  05                 	db	5
   241  000318  24                 	db	36
   242  000319  00                 	db	0
   243  00031A  10                 	db	16
   244  00031B  01                 	db	1
   245  00031C  04                 	db	4
   246  00031D  24                 	db	36
   247  00031E  02                 	db	2
   248  00031F  02                 	db	2
   249  000320  05                 	db	5
   250  000321  24                 	db	36
   251  000322  06                 	db	6
   252  000323  00                 	db	0
   253  000324  01                 	db	1
   254  000325  05                 	db	5
   255  000326  24                 	db	36
   256  000327  01                 	db	1
   257  000328  00                 	db	0
   258  000329  01                 	db	1
   259  00032A  07                 	db	7
   260  00032B  05                 	db	5
   261  00032C  81                 	db	129
   262  00032D  03                 	db	3
   263  00032E  08                 	db	8
   264  00032F  00                 	db	0
   265  000330  02                 	db	2
   266  000331  09                 	db	9
   267  000332  04                 	db	4
   268  000333  01                 	db	1
   269  000334  00                 	db	0
   270  000335  02                 	db	2
   271  000336  0A                 	db	10
   272  000337  00                 	db	0
   273  000338  00                 	db	0
   274  000339  00                 	db	0
   275  00033A  07                 	db	7
   276  00033B  05                 	db	5
   277  00033C  02                 	db	2
   278  00033D  02                 	db	2
   279  00033E  40                 	db	64
   280  00033F  00                 	db	0
   281  000340  00                 	db	0
   282  000341  07                 	db	7
   283  000342  05                 	db	5
   284  000343  82                 	db	130
   285  000344  02                 	db	2
   286  000345  40                 	db	64
   287  000346  00                 	db	0
   288  000347  00                 	db	0
   289  000348                     __end_of_configDescriptor1:
   290                           	opt stack 0
   291  000348                     _sd002:
   292                           	opt stack 0
   293  000348  34                 	db	52
   294  000349  03                 	db	3
   295  00034A  0043               	dw	67
   296  00034C  0044               	dw	68
   297  00034E  0043               	dw	67
   298  000350  0020               	dw	32
   299  000352  0052               	dw	82
   300  000354  0053               	dw	83
   301  000356  002D               	dw	45
   302  000358  0032               	dw	50
   303  00035A  0033               	dw	51
   304  00035C  0032               	dw	50
   305  00035E  0020               	dw	32
   306  000360  0045               	dw	69
   307  000362  006D               	dw	109
   308  000364  0075               	dw	117
   309  000366  006C               	dw	108
   310  000368  0061               	dw	97
   311  00036A  0074               	dw	116
   312  00036C  0069               	dw	105
   313  00036E  006F               	dw	111
   314  000370  006E               	dw	110
   315  000372  0020               	dw	32
   316  000374  0044               	dw	68
   317  000376  0065               	dw	101
   318  000378  006D               	dw	109
   319  00037A  006F               	dw	111
   320  00037C                     __end_of_sd002:
   321                           	opt stack 0
   322  00037C                     _sd001:
   323                           	opt stack 0
   324  00037C  34                 	db	52
   325  00037D  03                 	db	3
   326  00037E  004D               	dw	77
   327  000380  0069               	dw	105
   328  000382  0063               	dw	99
   329  000384  0072               	dw	114
   330  000386  006F               	dw	111
   331  000388  0063               	dw	99
   332  00038A  0068               	dw	104
   333  00038C  0069               	dw	105
   334  00038E  0070               	dw	112
   335  000390  0020               	dw	32
   336  000392  0054               	dw	84
   337  000394  0065               	dw	101
   338  000396  0063               	dw	99
   339  000398  0068               	dw	104
   340  00039A  006E               	dw	110
   341  00039C  006F               	dw	111
   342  00039E  006C               	dw	108
   343  0003A0  006F               	dw	111
   344  0003A2  0067               	dw	103
   345  0003A4  0079               	dw	121
   346  0003A6  0020               	dw	32
   347  0003A8  0049               	dw	73
   348  0003AA  006E               	dw	110
   349  0003AC  0063               	dw	99
   350  0003AE  002E               	dw	46
   351  0003B0                     __end_of_sd001:
   352                           	opt stack 0
   353  0003B0                     _device_dsc:
   354                           	opt stack 0
   355  0003B0  12                 	db	18
   356  0003B1  01                 	db	1
   357  0003B2  0200               	dw	512
   358  0003B4  02                 	db	2
   359  0003B5  00                 	db	0
   360  0003B6  00                 	db	0
   361  0003B7  08                 	db	8
   362  0003B8  04D8               	dw	1240
   363  0003BA  000A               	dw	10
   364  0003BC  0100               	dw	256
   365  0003BE  01                 	db	1
   366  0003BF  02                 	db	2
   367  0003C0  00                 	db	0
   368  0003C1  01                 	db	1
   369  0003C2                     __end_of_device_dsc:
   370                           	opt stack 0
   371  0003C2                     _sd000:
   372                           	opt stack 0
   373  0003C2  04                 	db	4
   374  0003C3  03                 	db	3
   375  0003C4  0409               	dw	1033
   376  0003C6                     __end_of_sd000:
   377                           	opt stack 0
   378  0000                     _UEP0bits	set	3923
   379  0000                     _UADDR	set	3932
   380  0000                     _UEIE	set	3931
   381  0000                     _UEIR	set	3935
   382  0000                     _UEP1	set	3924
   383  0000                     _UEP0	set	3923
   384  0000                     _ANSELH	set	3967
   385  0000                     _ANSEL	set	3966
   386  0000                     _INTCONbits	set	4082
   387  0000                     _IPR2bits	set	4002
   388  0000                     _RCONbits	set	4048
   389  0000                     _UCON	set	3940
   390  0000                     _USTAT	set	3939
   391  0000                     _PIR2bits	set	4001
   392  0000                     _UIEbits	set	3936
   393  0000                     _UIRbits	set	3938
   394  0000                     _UIE	set	3936
   395  0000                     _UCFG	set	3937
   396  0000                     _UIR	set	3938
   397  0000                     _PIE2bits	set	4000
   398  0000                     _PORTAbits	set	3968
   399  0000                     _UCONbits	set	3940
   400  0000                     _PORTCbits	set	3970
   401  0000                     _LATCbits	set	3979
   402  0000                     _TRISCbits	set	3988
   403  0003C6                     STR_4:
   404                           
   405                           ; BSR set to: 0
   406  0003C6  44                 	db	68	;'D'
   407  0003C7  6F                 	db	111	;'o'
   408  0003C8  6E                 	db	110	;'n'
   409  0003C9  65                 	db	101	;'e'
   410  0003CA  20                 	db	32
   411  0003CB  57                 	db	87	;'W'
   412  0003CC  72                 	db	114	;'r'
   413  0003CD  69                 	db	105	;'i'
   414  0003CE  74                 	db	116	;'t'
   415  0003CF  69                 	db	105	;'i'
   416  0003D0  6E                 	db	110	;'n'
   417  0003D1  67                 	db	103	;'g'
   418  0003D2  2E                 	db	46
   419  0003D3  00                 	db	0
   420  0003D4                     STR_1:
   421                           
   422                           ; BSR set to: 0
   423  0003D4  0A                 	db	10
   424  0003D5  0D                 	db	13
   425  0003D6  00                 	db	0
   426  0003D7                     STR_3:
   427                           
   428                           ; BSR set to: 0
   429  0003D7  30                 	db	48	;'0'
   430  0003D8  00                 	db	0
   431  0003D9                     STR_2:
   432                           
   433                           ; BSR set to: 0
   434  0003D9  31                 	db	49	;'1'
   435  0003DA  00                 	db	0
   436                           
   437                           ; #config settings
   438  0003DB  00                 	db	0	; dummy byte at the end
   439  0000                     tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           prodh	equ	0xFF4
   444                           prodl	equ	0xFF3
   445                           intcon	equ	0xFF2
   446                           wreg	equ	0xFE8
   447                           indf1	equ	0xFE7
   448                           fsr1h	equ	0xFE2
   449                           fsr1l	equ	0xFE1
   450                           indf2	equ	0xFDF
   451                           postinc2	equ	0xFDE
   452                           postdec2	equ	0xFDD
   453                           plusw2	equ	0xFDB
   454                           fsr2h	equ	0xFDA
   455                           fsr2l	equ	0xFD9
   456                           status	equ	0xFD8
   457                           
   458                           	psect	cinit
   459  001596                     __pcinit:
   460                           	opt stack 0
   461  001596                     start_initialization:
   462                           	opt stack 0
   463  001596                     __initialization:
   464                           	opt stack 0
   465                           
   466                           ; Initialize objects allocated to BANK1 (18 bytes)
   467                           ; load TBLPTR registers with __pidataBANK1
   468  001596  0EEA               	movlw	low __pidataBANK1
   469  001598  6EF6               	movwf	tblptrl,c
   470  00159A  0E1B               	movlw	high __pidataBANK1
   471  00159C  6EF7               	movwf	tblptrh,c
   472  00159E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   473  0015A0  6EF8               	movwf	tblptru,c
   474  0015A2  EE01  F040         	lfsr	0,__pdataBANK1
   475  0015A6  EE10 F012          	lfsr	1,18
   476  0015AA                     copy_data0:
   477  0015AA  0009               	tblrd		*+
   478  0015AC  CFF5 FFEE          	movff	tablat,postinc0
   479  0015B0  50E5               	movf	postdec1,w,c
   480  0015B2  50E1               	movf	fsr1l,w,c
   481  0015B4  E1FA               	bnz	copy_data0
   482                           
   483                           ; Initialize objects allocated to BANK0 (1 bytes)
   484                           ; load TBLPTR registers with __pidataBANK0
   485  0015B6  0E24               	movlw	low __pidataBANK0
   486  0015B8  6EF6               	movwf	tblptrl,c
   487  0015BA  0E1C               	movlw	high __pidataBANK0
   488  0015BC  6EF7               	movwf	tblptrh,c
   489  0015BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   490  0015C0  6EF8               	movwf	tblptru,c
   491  0015C2  0009               	tblrd		*+	;fetch initializer
   492  0015C4  CFF5 F0F8          	movff	tablat,__pdataBANK0
   493                           
   494                           ; Clear objects allocated to BANK1 (64 bytes)
   495  0015C8  EE01  F000         	lfsr	0,__pbssBANK1
   496  0015CC  0E40               	movlw	64
   497  0015CE                     clear_0:
   498  0015CE  6AEE               	clrf	postinc0,c
   499  0015D0  06E8               	decf	wreg,f,c
   500  0015D2  E1FD               	bnz	clear_0
   501                           
   502                           ; Clear objects allocated to BANK0 (115 bytes)
   503  0015D4  EE00  F060         	lfsr	0,__pbssBANK0
   504  0015D8  0E73               	movlw	115
   505  0015DA                     clear_1:
   506  0015DA  6AEE               	clrf	postinc0,c
   507  0015DC  06E8               	decf	wreg,f,c
   508  0015DE  E1FD               	bnz	clear_1
   509                           
   510                           ; Clear objects allocated to COMRAM (41 bytes)
   511  0015E0  EE00  F001         	lfsr	0,__pbssCOMRAM
   512  0015E4  0E29               	movlw	41
   513  0015E6                     clear_2:
   514  0015E6  6AEE               	clrf	postinc0,c
   515  0015E8  06E8               	decf	wreg,f,c
   516  0015EA  E1FD               	bnz	clear_2
   517  0015EC                     end_of_initialization:
   518                           	opt stack 0
   519  0015EC                     __end_of__initialization:
   520                           	opt stack 0
   521  0015EC  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   522  0015EE  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   523  0015F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   524  0015F2  6EF8               	movwf	tblptru,c
   525  0015F4  0100               	movlb	0
   526  0015F6  EFD5  F00C         	goto	_main	;jump to C main() function
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           prodh	equ	0xFF4
   532                           prodl	equ	0xFF3
   533                           intcon	equ	0xFF2
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           indf1	equ	0xFE7
   537                           postdec1	equ	0xFE5
   538                           fsr1h	equ	0xFE2
   539                           fsr1l	equ	0xFE1
   540                           indf2	equ	0xFDF
   541                           postinc2	equ	0xFDE
   542                           postdec2	equ	0xFDD
   543                           plusw2	equ	0xFDB
   544                           fsr2h	equ	0xFDA
   545                           fsr2l	equ	0xFD9
   546                           status	equ	0xFD8
   547                           
   548                           	psect	bssCOMRAM
   549  000001                     __pbssCOMRAM:
   550                           	opt stack 0
   551  000001                     _outPipes:
   552                           	opt stack 0
   553  000001                     	ds	8
   554  000009                     _inPipes:
   555                           	opt stack 0
   556  000009                     	ds	6
   557  00000F                     _pBDTEntryIn:
   558                           	opt stack 0
   559  00000F                     	ds	6
   560  000015                     _pBDTEntryEP0OutNext:
   561                           	opt stack 0
   562  000015                     	ds	2
   563  000017                     _pBDTEntryEP0OutCurrent:
   564                           	opt stack 0
   565  000017                     	ds	2
   566  000019                     APP_LEDUpdateUSBStatus@ledCount:
   567                           	opt stack 0
   568  000019                     	ds	2
   569  00001B                     _cdc_tx_len:
   570                           	opt stack 0
   571  00001B                     	ds	1
   572  00001C                     _cdc_rx_len:
   573                           	opt stack 0
   574  00001C                     	ds	1
   575  00001D                     _USBDeferINDataStagePackets:
   576                           	opt stack 0
   577  00001D                     	ds	1
   578  00001E                     _USBStatusStageEnabledFlag2:
   579                           	opt stack 0
   580  00001E                     	ds	1
   581  00001F                     _USBStatusStageEnabledFlag1:
   582                           	opt stack 0
   583  00001F                     	ds	1
   584  000020                     _USBDeferStatusStagePacket:
   585                           	opt stack 0
   586  000020                     	ds	1
   587  000021                     _USBStatusStageTimeoutCounter:
   588                           	opt stack 0
   589  000021                     	ds	1
   590  000022                     _BothEP0OutUOWNsSet:
   591                           	opt stack 0
   592  000022                     	ds	1
   593  000023                     _endpoint_number:
   594                           	opt stack 0
   595  000023                     	ds	1
   596  000024                     _USBBusIsSuspended:
   597                           	opt stack 0
   598  000024                     	ds	1
   599  000025                     _RemoteWakeup:
   600                           	opt stack 0
   601  000025                     	ds	1
   602  000026                     _controlTransferState:
   603                           	opt stack 0
   604  000026                     	ds	1
   605  000027                     _shortPacketStatus:
   606                           	opt stack 0
   607  000027                     	ds	1
   608  000028                     _USTATcopy:
   609                           	opt stack 0
   610  000028                     	ds	1
   611  000029                     _USBActiveConfiguration:
   612                           	opt stack 0
   613  000029                     	ds	1
   614                           tblptru	equ	0xFF8
   615                           tblptrh	equ	0xFF7
   616                           tblptrl	equ	0xFF6
   617                           tablat	equ	0xFF5
   618                           prodh	equ	0xFF4
   619                           prodl	equ	0xFF3
   620                           intcon	equ	0xFF2
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           indf1	equ	0xFE7
   624                           postdec1	equ	0xFE5
   625                           fsr1h	equ	0xFE2
   626                           fsr1l	equ	0xFE1
   627                           indf2	equ	0xFDF
   628                           postinc2	equ	0xFDE
   629                           postdec2	equ	0xFDD
   630                           plusw2	equ	0xFDB
   631                           fsr2h	equ	0xFDA
   632                           fsr2l	equ	0xFD9
   633                           status	equ	0xFD8
   634                           
   635                           	psect	bssBANK0
   636  000060                     __pbssBANK0:
   637                           	opt stack 0
   638  000060                     _pBDTEntryOut:
   639                           	opt stack 0
   640  000060                     	ds	6
   641  000066                     _USB1msTickCount:
   642                           	opt stack 0
   643  000066                     	ds	4
   644  00006A                     _pCDCDst:
   645                           	opt stack 0
   646  00006A                     	ds	3
   647  00006D                     _pCDCSrc:
   648                           	opt stack 0
   649  00006D                     	ds	3
   650  000070                     _ep_data_out:
   651                           	opt stack 0
   652  000070                     	ds	3
   653  000073                     _ep_data_in:
   654                           	opt stack 0
   655  000073                     	ds	3
   656  000076                     _CDCDataInHandle:
   657                           	opt stack 0
   658  000076                     	ds	2
   659  000078                     _CDCDataOutHandle:
   660                           	opt stack 0
   661  000078                     	ds	2
   662  00007A                     _pDst:
   663                           	opt stack 0
   664  00007A                     	ds	2
   665  00007C                     _cdc_mem_type:
   666                           	opt stack 0
   667  00007C                     	ds	1
   668  00007D                     _USBTicksSinceSuspendEnd:
   669                           	opt stack 0
   670  00007D                     	ds	1
   671  00007E                     _USBDeferOUTDataStagePackets:
   672                           	opt stack 0
   673  00007E                     	ds	1
   674  00007F                     _buttonPressed:
   675                           	opt stack 0
   676  00007F                     	ds	1
   677  000080                     _cdc_trf_state:
   678                           	opt stack 0
   679  000080                     	ds	1
   680  000081                     _USBDeviceState:
   681                           	opt stack 0
   682  000081                     	ds	1
   683  000082                     _readBuffer:
   684                           	opt stack 0
   685  000082                     	ds	64
   686  0000C2                     _dummy_encapsulated_cmd_response:
   687                           	opt stack 0
   688  0000C2                     	ds	8
   689  0000CA                     _line_coding:
   690                           	opt stack 0
   691  0000CA                     	ds	7
   692  0000D1                     _USBAlternateInterface:
   693                           	opt stack 0
   694  0000D1                     	ds	2
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           prodh	equ	0xFF4
   700                           prodl	equ	0xFF3
   701                           intcon	equ	0xFF2
   702                           postinc0	equ	0xFEE
   703                           wreg	equ	0xFE8
   704                           indf1	equ	0xFE7
   705                           postdec1	equ	0xFE5
   706                           fsr1h	equ	0xFE2
   707                           fsr1l	equ	0xFE1
   708                           indf2	equ	0xFDF
   709                           postinc2	equ	0xFDE
   710                           postdec2	equ	0xFDD
   711                           plusw2	equ	0xFDB
   712                           fsr2h	equ	0xFDA
   713                           fsr2l	equ	0xFD9
   714                           status	equ	0xFD8
   715                           
   716                           	psect	dataBANK0
   717  0000F8                     __pdataBANK0:
   718                           	opt stack 0
   719  0000F8                     _GLOBAL_COUNTER:
   720                           	opt stack 0
   721  0000F8                     	ds	1
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           prodh	equ	0xFF4
   727                           prodl	equ	0xFF3
   728                           intcon	equ	0xFF2
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           indf1	equ	0xFE7
   732                           postdec1	equ	0xFE5
   733                           fsr1h	equ	0xFE2
   734                           fsr1l	equ	0xFE1
   735                           indf2	equ	0xFDF
   736                           postinc2	equ	0xFDE
   737                           postdec2	equ	0xFDD
   738                           plusw2	equ	0xFDB
   739                           fsr2h	equ	0xFDA
   740                           fsr2l	equ	0xFD9
   741                           status	equ	0xFD8
   742                           
   743                           	psect	bssBANK1
   744  000100                     __pbssBANK1:
   745                           	opt stack 0
   746  000100                     _writeBuffer:
   747                           	opt stack 0
   748  000100                     	ds	64
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           prodh	equ	0xFF4
   754                           prodl	equ	0xFF3
   755                           intcon	equ	0xFF2
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           indf1	equ	0xFE7
   759                           postdec1	equ	0xFE5
   760                           fsr1h	equ	0xFE2
   761                           fsr1l	equ	0xFE1
   762                           indf2	equ	0xFDF
   763                           postinc2	equ	0xFDE
   764                           postdec2	equ	0xFDD
   765                           plusw2	equ	0xFDB
   766                           fsr2h	equ	0xFDA
   767                           fsr2l	equ	0xFD9
   768                           status	equ	0xFD8
   769                           
   770                           	psect	dataBANK1
   771  000140                     __pdataBANK1:
   772                           	opt stack 0
   773  000140                     _buttonMessage:
   774                           	opt stack 0
   775  000140                     	ds	18
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           prodh	equ	0xFF4
   781                           prodl	equ	0xFF3
   782                           intcon	equ	0xFF2
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           indf1	equ	0xFE7
   786                           postdec1	equ	0xFE5
   787                           fsr1h	equ	0xFE2
   788                           fsr1l	equ	0xFE1
   789                           indf2	equ	0xFDF
   790                           postinc2	equ	0xFDE
   791                           postdec2	equ	0xFDD
   792                           plusw2	equ	0xFDB
   793                           fsr2h	equ	0xFDA
   794                           fsr2l	equ	0xFD9
   795                           status	equ	0xFD8
   796                           
   797                           	psect	cstackBANK0
   798  0000D3                     __pcstackBANK0:
   799                           	opt stack 0
   800  0000D3                     ??_PIC18F26K40_sendByteMsbToLsb:
   801  0000D3                     ?_USBTransferOnePacket:
   802                           	opt stack 0
   803  0000D3                     PIC18F26K40_sendByte@direction:
   804                           	opt stack 0
   805  0000D3                     BUTTON_IsPressed@button:
   806                           	opt stack 0
   807  0000D3                     BUTTON_Enable@button:
   808                           	opt stack 0
   809  0000D3                     LED_Enable@led:
   810                           	opt stack 0
   811  0000D3                     USBTransferOnePacket@dir:
   812                           	opt stack 0
   813  0000D3                     putUSBUSART@data:
   814                           	opt stack 0
   815  0000D3                     putrsUSBUSART@data:
   816                           	opt stack 0
   817  0000D3                     memset@p1:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x0
   821  0000D3                     	ds	1
   822  0000D4                     ??_PIC18F26K40_sendByte:
   823  0000D4                     SYSTEM_Initialize@state:
   824                           	opt stack 0
   825  0000D4                     USBTransferOnePacket@data:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x1
   829  0000D4                     	ds	1
   830  0000D5                     ??_putrsUSBUSART:
   831  0000D5                     PIC18F26K40_sendByteMsbToLsb@info:
   832                           	opt stack 0
   833  0000D5                     putUSBUSART@length:
   834                           	opt stack 0
   835  0000D5                     memset@c:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x2
   839  0000D5                     	ds	1
   840  0000D6                     PIC18F26K40_sendByte@info:
   841                           	opt stack 0
   842  0000D6                     PIC18F26K40_sendByteMsbToLsb@i:
   843                           	opt stack 0
   844  0000D6                     USBTransferOnePacket@len:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x3
   848  0000D6                     	ds	1
   849  0000D7                     ??_USBTransferOnePacket:
   850  0000D7                     PIC18F26K40_sendByte@j:
   851                           	opt stack 0
   852  0000D7                     putrsUSBUSART@pData:
   853                           	opt stack 0
   854  0000D7                     memset@n:
   855                           	opt stack 0
   856  0000D7                     PIC18F26K40_loadDataIntoNVM@data:
   857                           	opt stack 0
   858                           
   859                           ; 4 bytes @ 0x4
   860  0000D7                     	ds	1
   861  0000D8                     PIC18F26K40_sendByte@i:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x5
   865  0000D8                     	ds	1
   866  0000D9                     ?_PIC18F26K40_readThreeBytes:
   867                           	opt stack 0
   868  0000D9                     PIC18F26K40_readThreeBytes@IncreasePC:
   869                           	opt stack 0
   870  0000D9                     USBTransferOnePacket@ep:
   871                           	opt stack 0
   872  0000D9                     putrsUSBUSART@len:
   873                           	opt stack 0
   874  0000D9                     memset@p:
   875                           	opt stack 0
   876  0000D9                     PIC18F26K40_enterLowVoltageProg@code:
   877                           	opt stack 0
   878  0000D9                     PIC18F26K40_loadPC@address:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0x6
   882  0000D9                     	ds	1
   883  0000DA                     USBTransferOnePacket@handle:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x7
   887  0000DA                     	ds	1
   888  0000DB                     PIC18F26K40_loadDataIntoNVM@IncreasePC:
   889                           	opt stack 0
   890  0000DB                     USBDeviceInit@i:
   891                           	opt stack 0
   892                           
   893                           ; 1 bytes @ 0x8
   894  0000DB                     	ds	1
   895  0000DC                     ??_PIC18F26K40_loadDataIntoNVM:
   896  0000DC                     getsUSBUSART@buffer:
   897                           	opt stack 0
   898  0000DC                     CDCTxService@i:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x9
   902  0000DC                     	ds	1
   903  0000DD                     ??_PIC18F26K40_readThreeBytes:
   904  0000DD                     getsUSBUSART@len:
   905                           	opt stack 0
   906  0000DD                     CDCTxService@byte_to_send:
   907                           	opt stack 0
   908  0000DD                     PIC18F26K40_loadPC@tempAddress:
   909                           	opt stack 0
   910  0000DD                     PIC18F26K40_loadDataIntoNVM@tempData:
   911                           	opt stack 0
   912                           
   913                           ; 4 bytes @ 0xA
   914  0000DD                     	ds	1
   915  0000DE                     
   916                           ; 1 bytes @ 0xB
   917  0000DE                     	ds	6
   918  0000E4                     PIC18F26K40_readThreeBytes@direction:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x11
   922  0000E4                     	ds	1
   923  0000E5                     PIC18F26K40_readThreeBytes@data:
   924                           	opt stack 0
   925                           
   926                           ; 4 bytes @ 0x12
   927  0000E5                     	ds	4
   928  0000E9                     PIC18F26K40_readThreeBytes@j:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x16
   932  0000E9                     	ds	1
   933  0000EA                     PIC18F26K40_readThreeBytes@i:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x17
   937  0000EA                     	ds	1
   938  0000EB                     ??_APP_DeviceCDCBasicDemoTasks:
   939                           
   940                           ; 1 bytes @ 0x18
   941  0000EB                     	ds	1
   942  0000EC                     APP_DeviceCDCBasicDemoTasks@numBytesRead:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x19
   946  0000EC                     	ds	1
   947  0000ED                     APP_DeviceCDCBasicDemoTasks@i:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x1A
   951  0000ED                     	ds	1
   952  0000EE                     APP_DeviceCDCBasicDemoTasks@Address:
   953                           	opt stack 0
   954                           
   955                           ; 4 bytes @ 0x1B
   956  0000EE                     	ds	4
   957  0000F2                     APP_DeviceCDCBasicDemoTasks@Data:
   958                           	opt stack 0
   959                           
   960                           ; 4 bytes @ 0x1F
   961  0000F2                     	ds	4
   962  0000F6                     ??_main:
   963                           
   964                           ; 1 bytes @ 0x23
   965  0000F6                     	ds	2
   966                           tblptru	equ	0xFF8
   967                           tblptrh	equ	0xFF7
   968                           tblptrl	equ	0xFF6
   969                           tablat	equ	0xFF5
   970                           prodh	equ	0xFF4
   971                           prodl	equ	0xFF3
   972                           intcon	equ	0xFF2
   973                           postinc0	equ	0xFEE
   974                           wreg	equ	0xFE8
   975                           indf1	equ	0xFE7
   976                           postdec1	equ	0xFE5
   977                           fsr1h	equ	0xFE2
   978                           fsr1l	equ	0xFE1
   979                           indf2	equ	0xFDF
   980                           postinc2	equ	0xFDE
   981                           postdec2	equ	0xFDD
   982                           plusw2	equ	0xFDB
   983                           fsr2h	equ	0xFDA
   984                           fsr2l	equ	0xFD9
   985                           status	equ	0xFD8
   986                           
   987                           	psect	cstackCOMRAM
   988  00002A                     __pcstackCOMRAM:
   989                           	opt stack 0
   990  00002A                     ??_USBStdGetDscHandler:
   991  00002A                     ?i2_USBTransferOnePacket:
   992                           	opt stack 0
   993  00002A                     LED_On@led:
   994                           	opt stack 0
   995  00002A                     LED_Off@led:
   996                           	opt stack 0
   997  00002A                     USBConfigureEndpoint@direction:
   998                           	opt stack 0
   999  00002A                     USBCtrlTrfTxService@byteToSend:
  1000                           	opt stack 0
  1001  00002A                     USBCtrlTrfRxService@i:
  1002                           	opt stack 0
  1003  00002A                     i2BUTTON_Enable@button:
  1004                           	opt stack 0
  1005  00002A                     i2LED_Enable@led:
  1006                           	opt stack 0
  1007  00002A                     i2USBTransferOnePacket@dir:
  1008                           	opt stack 0
  1009  00002A                     USBStdGetStatusHandler@p:
  1010                           	opt stack 0
  1011  00002A                     memcpy@d1:
  1012                           	opt stack 0
  1013  00002A                     i2memset@p1:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x0
  1017  00002A                     	ds	1
  1018  00002B                     ??_USBConfigureEndpoint:
  1019  00002B                     USBCtrlTrfRxService@byteToRead:
  1020                           	opt stack 0
  1021  00002B                     USBCtrlTrfInHandler@lastDTS:
  1022                           	opt stack 0
  1023  00002B                     i2SYSTEM_Initialize@state:
  1024                           	opt stack 0
  1025  00002B                     i2USBTransferOnePacket@data:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x1
  1029  00002B                     	ds	1
  1030  00002C                     memcpy@s1:
  1031                           	opt stack 0
  1032  00002C                     i2memset@c:
  1033                           	opt stack 0
  1034                           
  1035                           ; 2 bytes @ 0x2
  1036  00002C                     	ds	1
  1037  00002D                     i2USBTransferOnePacket@len:
  1038                           	opt stack 0
  1039                           
  1040                           ; 1 bytes @ 0x3
  1041  00002D                     	ds	1
  1042  00002E                     ??i2_USBTransferOnePacket:
  1043  00002E                     memcpy@n:
  1044                           	opt stack 0
  1045  00002E                     i2memset@n:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x4
  1049  00002E                     	ds	1
  1050  00002F                     USBConfigureEndpoint@EPNum:
  1051                           	opt stack 0
  1052                           
  1053                           ; 1 bytes @ 0x5
  1054  00002F                     	ds	1
  1055  000030                     i2USBTransferOnePacket@ep:
  1056                           	opt stack 0
  1057  000030                     USBConfigureEndpoint@handle:
  1058                           	opt stack 0
  1059  000030                     memcpy@d:
  1060                           	opt stack 0
  1061  000030                     i2memset@p:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x6
  1065  000030                     	ds	1
  1066  000031                     i2USBTransferOnePacket@handle:
  1067                           	opt stack 0
  1068                           
  1069                           ; 2 bytes @ 0x7
  1070  000031                     	ds	1
  1071  000032                     USBEnableEndpoint@options:
  1072                           	opt stack 0
  1073  000032                     i2USBDeviceInit@i:
  1074                           	opt stack 0
  1075  000032                     memcpy@s:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x8
  1079  000032                     	ds	1
  1080  000033                     USBEnableEndpoint@p:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x9
  1084  000033                     	ds	1
  1085  000034                     memcpy@tmp:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0xA
  1089  000034                     	ds	1
  1090  000035                     USBEnableEndpoint@ep:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0xB
  1094  000035                     	ds	1
  1095  000036                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1096                           	opt stack 0
  1097                           
  1098                           ; 2 bytes @ 0xC
  1099  000036                     	ds	2
  1100  000038                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1101                           	opt stack 0
  1102                           
  1103                           ; 2 bytes @ 0xE
  1104  000038                     	ds	2
  1105  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1106                           	opt stack 0
  1107                           
  1108                           ; 2 bytes @ 0x10
  1109  00003A                     	ds	2
  1110  00003C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1111                           
  1112                           ; 1 bytes @ 0x12
  1113  00003C                     	ds	2
  1114  00003E                     ??_USBStdFeatureReqHandler:
  1115  00003E                     USBStdSetCfgHandler@i:
  1116                           	opt stack 0
  1117                           
  1118                           ; 1 bytes @ 0x14
  1119  00003E                     	ds	2
  1120  000040                     USBStdFeatureReqHandler@pUEP:
  1121                           	opt stack 0
  1122                           
  1123                           ; 2 bytes @ 0x16
  1124  000040                     	ds	2
  1125  000042                     USBStdFeatureReqHandler@current_ep_data:
  1126                           	opt stack 0
  1127                           
  1128                           ; 1 bytes @ 0x18
  1129  000042                     	ds	1
  1130  000043                     USBStdFeatureReqHandler@p:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0x19
  1134  000043                     	ds	2
  1135  000045                     ??_USBCheckStdRequest:
  1136                           
  1137                           ; 1 bytes @ 0x1B
  1138  000045                     	ds	1
  1139  000046                     ??_USBCtrlEPService:
  1140  000046                     
  1141                           ; 1 bytes @ 0x1C
  1142  000046                     	ds	1
  1143  000047                     USBDeviceTasks@i:
  1144                           	opt stack 0
  1145                           
  1146                           ; 1 bytes @ 0x1D
  1147  000047                     	ds	1
  1148  000048                     ??_SYS_InterruptHigh:
  1149                           
  1150                           ; 1 bytes @ 0x1E
  1151  000048                     	ds	10
  1152                           tblptru	equ	0xFF8
  1153                           tblptrh	equ	0xFF7
  1154                           tblptrl	equ	0xFF6
  1155                           tablat	equ	0xFF5
  1156                           prodh	equ	0xFF4
  1157                           prodl	equ	0xFF3
  1158                           intcon	equ	0xFF2
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           indf1	equ	0xFE7
  1162                           postdec1	equ	0xFE5
  1163                           fsr1h	equ	0xFE2
  1164                           fsr1l	equ	0xFE1
  1165                           indf2	equ	0xFDF
  1166                           postinc2	equ	0xFDE
  1167                           postdec2	equ	0xFDD
  1168                           plusw2	equ	0xFDB
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           status	equ	0xFD8
  1172                           
  1173 ;;
  1174 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1175 ;;
  1176 ;; *************** function _main *****************
  1177 ;; Defined at:
  1178 ;;		line 12 in file "main.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1192 ;;      Params:         0       0       0       0
  1193 ;;      Locals:         0       0       0       0
  1194 ;;      Temps:          0       2       0       0
  1195 ;;      Totals:         0       2       0       0
  1196 ;;Total ram usage:        2 bytes
  1197 ;; Hardware stack levels required when called:   14
  1198 ;; This function calls:
  1199 ;;		_APP_DeviceCDCBasicDemoTasks
  1200 ;;		_SYSTEM_Initialize
  1201 ;;		_USBDeviceAttach
  1202 ;;		_USBDeviceInit
  1203 ;; This function is called by:
  1204 ;;		Startup code after reset
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text0
  1209  0019AA                     __ptext0:
  1210                           	opt stack 0
  1211  0019AA                     _main:
  1212                           	opt stack 17
  1213                           
  1214                           ;main.c: 13: ANSEL = ANSELH = 0;
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;incstack = 0
  1218  0019AA  6A7F               	clrf	3967,c	;volatile
  1219  0019AC  6A7E               	clrf	3966,c	;volatile
  1220                           
  1221                           ;main.c: 14: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1222  0019AE  0E00               	movlw	0
  1223  0019B0  ECB1  F00D         	call	_SYSTEM_Initialize
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;main.c: 15: USBDeviceInit();
  1227  0019B4  EC98  F00A         	call	_USBDeviceInit	;wreg free
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;main.c: 16: USBDeviceAttach();
  1231  0019B8  ECA1  F00C         	call	_USBDeviceAttach	;wreg free
  1232  0019BC                     l5231:
  1233                           
  1234                           ;main.c: 18: ;
  1235                           ;main.c: 37: APP_DeviceCDCBasicDemoTasks();
  1236  0019BC  ECEE  F001         	call	_APP_DeviceCDCBasicDemoTasks	;wreg free
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;main.c: 38: _delay((unsigned long)((100)*(12000000/4000.0)));
  1240  0019C0  0E02               	movlw	2
  1241  0019C2  0100               	movlb	0	; () banked
  1242  0019C4  6FF7               	movwf	(??_main+1)& (0+255),b
  1243  0019C6  0E86               	movlw	134
  1244  0019C8  6FF6               	movwf	??_main& (0+255),b
  1245  0019CA  0E99               	movlw	153
  1246  0019CC                     u4157:
  1247  0019CC  2EE8               	decfsz	wreg,f,c
  1248  0019CE  D7FE               	bra	u4157
  1249  0019D0  2FF6               	decfsz	??_main& (0+255),f,b
  1250  0019D2  D7FC               	bra	u4157
  1251  0019D4  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1252  0019D6  D7FA               	bra	u4157
  1253  0019D8  D7F1               	goto	l5231
  1254  0019DA                     __end_of_main:
  1255                           	opt stack 0
  1256                           tblptru	equ	0xFF8
  1257                           tblptrh	equ	0xFF7
  1258                           tblptrl	equ	0xFF6
  1259                           tablat	equ	0xFF5
  1260                           prodh	equ	0xFF4
  1261                           prodl	equ	0xFF3
  1262                           intcon	equ	0xFF2
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           indf1	equ	0xFE7
  1266                           postdec1	equ	0xFE5
  1267                           fsr1h	equ	0xFE2
  1268                           fsr1l	equ	0xFE1
  1269                           indf2	equ	0xFDF
  1270                           postinc2	equ	0xFDE
  1271                           postdec2	equ	0xFDD
  1272                           plusw2	equ	0xFDB
  1273                           fsr2h	equ	0xFDA
  1274                           fsr2l	equ	0xFD9
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _USBDeviceInit *****************
  1278 ;; Defined at:
  1279 ;;		line 277 in file "picLibs/usb_device.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  i               1    8[BANK0 ] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 3F/0
  1290 ;;		On exit  : 3F/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1293 ;;      Params:         0       0       0       0
  1294 ;;      Locals:         0       1       0       0
  1295 ;;      Temps:          0       0       0       0
  1296 ;;      Totals:         0       1       0       0
  1297 ;;Total ram usage:        1 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:   11
  1300 ;; This function calls:
  1301 ;;		_memset
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text1
  1308  001530                     __ptext1:
  1309                           	opt stack 0
  1310  001530                     _USBDeviceInit:
  1311                           	opt stack 0
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;usb_device.c: 279: uint8_t i;
  1315                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1316                           
  1317                           ;incstack = 0
  1318                           
  1319                           ;usb_device.c: 285: ;
  1320                           ;usb_device.c: 288: {UEIR = 0;};
  1321                           
  1322                           ;usb_device.c: 291: {UIR = 0;};
  1323                           
  1324                           ;usb_device.c: 294: UEP0 = 0;
  1325  001530  EC5A  F005         	call	PL84	;call to abstracted procedure
  1326                           
  1327                           ; BSR set to: 15
  1328                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1329  001534  0E54               	movlw	84
  1330  001536  0100               	movlb	0	; () banked
  1331  001538  6FD3               	movwf	memset@p1& (0+255),b
  1332  00153A  0E0F               	movlw	15
  1333  00153C  6FD4               	movwf	(memset@p1+1)& (0+255),b
  1334  00153E  6BD6               	clrf	(memset@c+1)& (0+255),b
  1335  001540  6BD5               	clrf	memset@c& (0+255),b
  1336  001542  6BD8               	clrf	(memset@n+1)& (0+255),b
  1337  001544  0E02               	movlw	2
  1338  001546  6FD7               	movwf	memset@n& (0+255),b
  1339  001548  EC47  F00D         	call	_memset	;wreg free
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1343                           
  1344                           ; BSR set to: 0
  1345                           
  1346                           ; BSR set to: 15
  1347  00154C  ECB3  F00C         	call	PL38	;call to abstracted procedure
  1348                           
  1349                           ; BSR set to: 15
  1350                           ;usb_device.c: 301: ;
  1351                           ;usb_device.c: 304: ;
  1352                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1353  001550  0100               	movlb	0	; () banked
  1354  001552  6BDB               	clrf	USBDeviceInit@i& (0+255),b
  1355  001554                     l5147:
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;usb_device.c: 308: {
  1359                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1360  001554  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1361  001556  EC4E  F005         	call	PL42	;call to abstracted procedure
  1362                           
  1363                           ; BSR set to: 0
  1364  00155A  2BDB               	incf	USBDeviceInit@i& (0+255),f,b
  1365                           
  1366                           ; BSR set to: 0
  1367  00155C  0E0B               	movlw	11
  1368  00155E  65DB               	cpfsgt	USBDeviceInit@i& (0+255),b
  1369  001560  D7F9               	goto	l5147
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;usb_device.c: 310: }
  1373                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1374                           
  1375                           ;usb_device.c: 316: UADDR = 0x00;
  1376                           
  1377                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1378                           
  1379                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1380                           
  1381                           ;usb_device.c: 326: {
  1382                           ;usb_device.c: 327: (UIR &= 0xF7);
  1383                           
  1384                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1385                           
  1386                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1387                           
  1388                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1389                           
  1390                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1391                           
  1392                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1393                           
  1394                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1395                           
  1396                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1397                           
  1398                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1402  001562  EC3A  F005         	call	PL22	;call to abstracted procedure
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1406  001566  6BDB               	clrf	USBDeviceInit@i& (0+255),b
  1407  001568                     l5177:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;usb_device.c: 346: {
  1411                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1412  001568  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1413  00156A  EC1A  F006         	call	PL34	;call to abstracted procedure
  1414  00156E  6ADE               	clrf	postinc2,c
  1415  001570  6ADD               	clrf	postdec2,c
  1416                           
  1417                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1418  001572  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1419  001574  EC14  F006         	call	PL32	;call to abstracted procedure
  1420  001578  6ADE               	clrf	postinc2,c
  1421  00157A  6ADD               	clrf	postdec2,c
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1425  00157C  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1426  00157E  EC65  F005         	call	PL98	;call to abstracted procedure
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1430  001582  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1431  001584  EC60  F005         	call	PL90	;call to abstracted procedure
  1432                           
  1433                           ; BSR set to: 0
  1434  001588  2BDB               	incf	USBDeviceInit@i& (0+255),f,b
  1435                           
  1436                           ; BSR set to: 0
  1437  00158A  0E02               	movlw	2
  1438  00158C  65DB               	cpfsgt	USBDeviceInit@i& (0+255),b
  1439  00158E  D7EC               	goto	l5177
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;usb_device.c: 351: }
  1443                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1444  001590  0E08               	movlw	8
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1448                           
  1449                           ; BSR set to: 15
  1450                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1451                           
  1452                           ; BSR set to: 2
  1453                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1454                           
  1455                           ; BSR set to: 2
  1456                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1457                           
  1458                           ; BSR set to: 2
  1459                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1460                           
  1461                           ; BSR set to: 2
  1462                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1463                           
  1464                           ; BSR set to: 2
  1465                           ;usb_device.c: 366: USB1msTickCount = 0;
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1472                           
  1473                           ; BSR set to: 0
  1474  001592  EF21  F005         	goto	PL14	;call to abstracted procedure
  1475  001596                     __end_of_USBDeviceInit:
  1476                           	opt stack 0
  1477                           tblptru	equ	0xFF8
  1478                           tblptrh	equ	0xFF7
  1479                           tblptrl	equ	0xFF6
  1480                           tablat	equ	0xFF5
  1481                           prodh	equ	0xFF4
  1482                           prodl	equ	0xFF3
  1483                           intcon	equ	0xFF2
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           indf1	equ	0xFE7
  1487                           postdec1	equ	0xFE5
  1488                           fsr1h	equ	0xFE2
  1489                           fsr1l	equ	0xFE1
  1490                           indf2	equ	0xFDF
  1491                           postinc2	equ	0xFDE
  1492                           postdec2	equ	0xFDD
  1493                           plusw2	equ	0xFDB
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8
  1497                           
  1498 ;; *************** function _memset *****************
  1499 ;; Defined at:
  1500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  p1              2    0[BANK0 ] PTR void 
  1503 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1504 ;;  c               2    2[BANK0 ] int 
  1505 ;;  n               2    4[BANK0 ] unsigned int 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  p               2    6[BANK0 ] PTR unsigned char 
  1508 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  2    0[BANK0 ] PTR void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1513 ;; Tracked objects:
  1514 ;;		On entry : 3F/0
  1515 ;;		On exit  : 3F/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1518 ;;      Params:         0       6       0       0
  1519 ;;      Locals:         0       2       0       0
  1520 ;;      Temps:          0       0       0       0
  1521 ;;      Totals:         0       8       0       0
  1522 ;;Total ram usage:        8 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:   10
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_USBDeviceInit
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text2
  1533  001A8E                     __ptext2:
  1534                           	opt stack 0
  1535  001A8E                     _memset:
  1536                           	opt stack 19
  1537                           
  1538                           ; BSR set to: 0
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;incstack = 0
  1542  001A8E  C0D3  F0D9         	movff	memset@p1,memset@p
  1543  001A92  C0D4  F0DA         	movff	memset@p1+1,memset@p+1
  1544  001A96  D008               	goto	l4993
  1545  001A98                     l4989:
  1546                           
  1547                           ; BSR set to: 0
  1548  001A98  C0D9  FFD9         	movff	memset@p,fsr2l
  1549  001A9C  C0DA  FFDA         	movff	memset@p+1,fsr2h
  1550  001AA0  C0D5  FFDF         	movff	memset@c,indf2
  1551                           
  1552                           ; BSR set to: 0
  1553  001AA4  4BD9               	infsnz	memset@p& (0+255),f,b
  1554  001AA6  2BDA               	incf	(memset@p+1)& (0+255),f,b
  1555  001AA8                     l4993:
  1556                           
  1557                           ; BSR set to: 0
  1558  001AA8  07D7               	decf	memset@n& (0+255),f,b
  1559  001AAA  A0D8               	btfss	status,0,c
  1560  001AAC  07D8               	decf	(memset@n+1)& (0+255),f,b
  1561  001AAE  29D7               	incf	memset@n& (0+255),w,b
  1562  001AB0  E1F3               	bnz	l4989
  1563  001AB2  29D8               	incf	(memset@n+1)& (0+255),w,b
  1564  001AB4  E1F1               	bnz	l4989
  1565                           
  1566                           ; BSR set to: 0
  1567  001AB6  0012               	return		;funcret
  1568  001AB8                     __end_of_memset:
  1569                           	opt stack 0
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           prodh	equ	0xFF4
  1575                           prodl	equ	0xFF3
  1576                           intcon	equ	0xFF2
  1577                           postinc0	equ	0xFEE
  1578                           wreg	equ	0xFE8
  1579                           indf1	equ	0xFE7
  1580                           postdec1	equ	0xFE5
  1581                           fsr1h	equ	0xFE2
  1582                           fsr1l	equ	0xFE1
  1583                           indf2	equ	0xFDF
  1584                           postinc2	equ	0xFDE
  1585                           postdec2	equ	0xFDD
  1586                           plusw2	equ	0xFDB
  1587                           fsr2h	equ	0xFDA
  1588                           fsr2l	equ	0xFD9
  1589                           status	equ	0xFD8
  1590                           
  1591 ;; *************** function _USBDeviceAttach *****************
  1592 ;; Defined at:
  1593 ;;		line 1352 in file "picLibs/usb_device.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2
  1602 ;; Tracked objects:
  1603 ;;		On entry : 3F/0
  1604 ;;		On exit  : 3F/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1607 ;;      Params:         0       0       0       0
  1608 ;;      Locals:         0       0       0       0
  1609 ;;      Temps:          0       0       0       0
  1610 ;;      Totals:         0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:   10
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text3
  1622  001942                     __ptext3:
  1623                           	opt stack 0
  1624  001942                     _USBDeviceAttach:
  1625                           	opt stack 20
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;usb_device.c: 1356: {
  1629                           ;usb_device.c: 1357: if(1 == 1)
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;incstack = 0
  1633  001942  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1634  001944  A4D8               	btfss	status,2,c
  1635  001946  0012               	return	
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;usb_device.c: 1358: {
  1639                           ;usb_device.c: 1360: UCON = 0;
  1640  001948  6A64               	clrf	3940,c	;volatile
  1641                           
  1642                           ;usb_device.c: 1363: UIE = 0;
  1643  00194A  6A60               	clrf	3936,c	;volatile
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1647  00194C  D80C               	call	PL38	;call to abstracted procedure
  1648                           
  1649                           ; BSR set to: 15
  1650                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1651  00194E  8ED0               	bsf	4048,7,c	;volatile
  1652                           
  1653                           ; BSR set to: 15
  1654  001950  84A2               	bsf	4002,2,c	;volatile
  1655                           
  1656                           ; BSR set to: 15
  1657  001952  84A0               	bsf	4000,2,c	;volatile
  1658                           
  1659                           ; BSR set to: 15
  1660  001954  8EF2               	bsf	intcon,7,c	;volatile
  1661                           
  1662                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1663  001956  D001               	goto	l534
  1664  001958                     l535:
  1665  001958  8664               	bsf	3940,3,c	;volatile
  1666  00195A                     l534:
  1667  00195A  A664               	btfss	3940,3,c	;volatile
  1668  00195C  D7FD               	goto	l535
  1669                           
  1670                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1671  00195E  0E01               	movlw	1
  1672  001960  0100               	movlb	0	; () banked
  1673  001962  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  1674                           
  1675                           ; BSR set to: 0
  1676  001964  0C01               	retlw	1	;funcret
  1677  001966                     __end_of_USBDeviceAttach:
  1678                           	opt stack 0
  1679  001966                     PL38:
  1680                           	opt stack 19
  1681  001966  0E16               	movlw	22
  1682  001968  6E61               	movwf	3937,c	;volatile
  1683  00196A  0E9F               	movlw	159
  1684  00196C  010F               	movlb	15	; () banked
  1685  00196E  6F5B               	movwf	91,b	;volatile
  1686  001970  0E7B               	movlw	123
  1687  001972  6E60               	movwf	3936,c	;volatile
  1688  001974  0C7B               	retlw	123
  1689  001976                     __end_ofPL38:
  1690                           	opt stack 0
  1691                           tblptru	equ	0xFF8
  1692                           tblptrh	equ	0xFF7
  1693                           tblptrl	equ	0xFF6
  1694                           tablat	equ	0xFF5
  1695                           prodh	equ	0xFF4
  1696                           prodl	equ	0xFF3
  1697                           intcon	equ	0xFF2
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           indf1	equ	0xFE7
  1701                           postdec1	equ	0xFE5
  1702                           fsr1h	equ	0xFE2
  1703                           fsr1l	equ	0xFE1
  1704                           indf2	equ	0xFDF
  1705                           postinc2	equ	0xFDE
  1706                           postdec2	equ	0xFDD
  1707                           plusw2	equ	0xFDB
  1708                           fsr2h	equ	0xFDA
  1709                           fsr2l	equ	0xFD9
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _SYSTEM_Initialize *****************
  1713 ;; Defined at:
  1714 ;;		line 66 in file "picLibs/system.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  state           1    wreg     enum E3329
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  state           1    1[BANK0 ] enum E3329
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 3F/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1728 ;;      Params:         0       0       0       0
  1729 ;;      Locals:         0       1       0       0
  1730 ;;      Temps:          0       0       0       0
  1731 ;;      Totals:         0       1       0       0
  1732 ;;Total ram usage:        1 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:   11
  1735 ;; This function calls:
  1736 ;;		_BUTTON_Enable
  1737 ;;		_LED_Enable
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text4
  1744  001B62                     __ptext4:
  1745                           	opt stack 0
  1746  001B62                     _SYSTEM_Initialize:
  1747                           	opt stack 19
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;incstack = 0
  1751                           ;SYSTEM_Initialize@state stored from wreg
  1752  001B62  0100               	movlb	0	; () banked
  1753  001B64  6FD4               	movwf	SYSTEM_Initialize@state& (0+255),b
  1754                           
  1755                           ;system.c: 68: switch(state)
  1756  001B66  D006               	goto	l5129
  1757  001B68                     l5125:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;system.c: 71: LED_Enable(LED_D1);
  1761  001B68  0E01               	movlw	1
  1762  001B6A  ECED  F00C         	call	_LED_Enable
  1763                           
  1764                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  1765  001B6E  0E01               	movlw	1
  1766  001B70  EF04  F00E         	goto	_BUTTON_Enable
  1767  001B74                     l5129:
  1768  001B74  0100               	movlb	0	; () banked
  1769  001B76  51D4               	movf	SYSTEM_Initialize@state& (0+255),w,b
  1770                           
  1771                           ; Switch size 1, requested type "space"
  1772                           ; Number of cases is 3, Range of values is 0 to 2
  1773                           ; switch strategies available:
  1774                           ; Name         Instructions Cycles
  1775                           ; simple_byte           10     6 (average)
  1776                           ;	Chosen strategy is simple_byte
  1777  001B78  E0F7               	bz	l5125
  1778  001B7A  EFAD  F00D         	goto	PL114	;call to abstracted procedure
  1779  001B7E                     __end_of_SYSTEM_Initialize:
  1780                           	opt stack 0
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           prodh	equ	0xFF4
  1786                           prodl	equ	0xFF3
  1787                           intcon	equ	0xFF2
  1788                           postinc0	equ	0xFEE
  1789                           wreg	equ	0xFE8
  1790                           indf1	equ	0xFE7
  1791                           postdec1	equ	0xFE5
  1792                           fsr1h	equ	0xFE2
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           postinc2	equ	0xFDE
  1796                           postdec2	equ	0xFDD
  1797                           plusw2	equ	0xFDB
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _LED_Enable *****************
  1803 ;; Defined at:
  1804 ;;		line 220 in file "picLibs/leds.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  led             1    wreg     enum E2
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  led             1    0[BANK0 ] enum E2
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 3F/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1818 ;;      Params:         0       0       0       0
  1819 ;;      Locals:         0       1       0       0
  1820 ;;      Temps:          0       0       0       0
  1821 ;;      Totals:         0       1       0       0
  1822 ;;Total ram usage:        1 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:   10
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_SYSTEM_Initialize
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text5
  1833  0019DA                     __ptext5:
  1834                           	opt stack 0
  1835  0019DA                     _LED_Enable:
  1836                           	opt stack 19
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;incstack = 0
  1840                           ;LED_Enable@led stored from wreg
  1841  0019DA  0100               	movlb	0	; () banked
  1842  0019DC  6FD3               	movwf	LED_Enable@led& (0+255),b
  1843                           
  1844                           ;leds.c: 222: switch(led)
  1845  0019DE  D008               	goto	l4985
  1846  0019E0                     l295:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  1850  0019E0  9094               	bcf	3988,0,c	;volatile
  1851                           
  1852                           ;leds.c: 226: break;
  1853  0019E2  0012               	return	
  1854  0019E4                     l297:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  1858  0019E4  9294               	bcf	3988,1,c	;volatile
  1859                           
  1860                           ;leds.c: 230: break;
  1861  0019E6  0012               	return	
  1862  0019E8                     l298:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  1866  0019E8  9494               	bcf	3988,2,c	;volatile
  1867                           
  1868                           ;leds.c: 234: break;
  1869  0019EA  0012               	return	
  1870  0019EC                     l299:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  1874  0019EC  9694               	bcf	3988,3,c	;volatile
  1875                           
  1876                           ;leds.c: 238: break;
  1877  0019EE  0012               	return	
  1878  0019F0                     l4985:
  1879  0019F0  0100               	movlb	0	; () banked
  1880  0019F2  51D3               	movf	LED_Enable@led& (0+255),w,b
  1881                           
  1882                           ; Switch size 1, requested type "space"
  1883                           ; Number of cases is 5, Range of values is 0 to 4
  1884                           ; switch strategies available:
  1885                           ; Name         Instructions Cycles
  1886                           ; simple_byte           16     9 (average)
  1887                           ;	Chosen strategy is simple_byte
  1888  0019F4  B4D8               	btfsc	status,2,c
  1889  0019F6  0012               	return	
  1890  0019F8  0A01               	xorlw	1	; case 1
  1891  0019FA  E0F2               	bz	l295
  1892  0019FC  0A03               	xorlw	3	; case 2
  1893  0019FE  E0F2               	bz	l297
  1894  001A00  0A01               	xorlw	1	; case 3
  1895  001A02  E0F2               	bz	l298
  1896  001A04  0A07               	xorlw	7	; case 4
  1897  001A06  E0F2               	bz	l299
  1898                           
  1899                           ; BSR set to: 0
  1900  001A08  0012               	return		;funcret
  1901  001A0A                     __end_of_LED_Enable:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           prodh	equ	0xFF4
  1908                           prodl	equ	0xFF3
  1909                           intcon	equ	0xFF2
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           indf1	equ	0xFE7
  1913                           postdec1	equ	0xFE5
  1914                           fsr1h	equ	0xFE2
  1915                           fsr1l	equ	0xFE1
  1916                           indf2	equ	0xFDF
  1917                           postinc2	equ	0xFDE
  1918                           postdec2	equ	0xFDD
  1919                           plusw2	equ	0xFDB
  1920                           fsr2h	equ	0xFDA
  1921                           fsr2l	equ	0xFD9
  1922                           status	equ	0xFD8
  1923                           
  1924 ;; *************** function _BUTTON_Enable *****************
  1925 ;; Defined at:
  1926 ;;		line 85 in file "picLibs/buttons.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  button          1    wreg     enum E3304
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  button          1    0[BANK0 ] enum E3304
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0
  1935 ;; Tracked objects:
  1936 ;;		On entry : 3F/0
  1937 ;;		On exit  : 3F/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1940 ;;      Params:         0       0       0       0
  1941 ;;      Locals:         0       1       0       0
  1942 ;;      Temps:          0       0       0       0
  1943 ;;      Totals:         0       1       0       0
  1944 ;;Total ram usage:        1 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:   10
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_SYSTEM_Initialize
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text6
  1955  001C08                     __ptext6:
  1956                           	opt stack 0
  1957  001C08                     _BUTTON_Enable:
  1958                           	opt stack 19
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;incstack = 0
  1962                           ;BUTTON_Enable@button stored from wreg
  1963  001C08  6FD3               	movwf	BUTTON_Enable@button& (0+255),b
  1964                           
  1965                           ;buttons.c: 87: switch(button)
  1966  001C0A  0100               	movlb	0	; () banked
  1967  001C0C  51D3               	movf	BUTTON_Enable@button& (0+255),w,b
  1968                           
  1969                           ; Switch size 1, requested type "space"
  1970                           ; Number of cases is 2, Range of values is 0 to 1
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte            7     4 (average)
  1974                           ;	Chosen strategy is simple_byte
  1975  001C0E  EF01  F00E         	goto	PL124	;call to abstracted procedure
  1976  001C12                     __end_of_BUTTON_Enable:
  1977                           	opt stack 0
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           prodh	equ	0xFF4
  1983                           prodl	equ	0xFF3
  1984                           intcon	equ	0xFF2
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           indf1	equ	0xFE7
  1988                           postdec1	equ	0xFE5
  1989                           fsr1h	equ	0xFE2
  1990                           fsr1l	equ	0xFE1
  1991                           indf2	equ	0xFDF
  1992                           postinc2	equ	0xFDE
  1993                           postdec2	equ	0xFDD
  1994                           plusw2	equ	0xFDB
  1995                           fsr2h	equ	0xFDA
  1996                           fsr2l	equ	0xFD9
  1997                           status	equ	0xFD8
  1998                           
  1999 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  2000 ;; Defined at:
  2001 ;;		line 77 in file "picLibs/app_device_cdc_basic.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  Data            4   31[BANK0 ] struct _DWORD_VAL
  2006 ;;  Address         4   27[BANK0 ] struct _DWORD_VAL
  2007 ;;  i               1   26[BANK0 ] unsigned char 
  2008 ;;  numBytesRead    1   25[BANK0 ] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 3F/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2018 ;;      Params:         0       0       0       0
  2019 ;;      Locals:         0      10       0       0
  2020 ;;      Temps:          0       1       0       0
  2021 ;;      Totals:         0      11       0       0
  2022 ;;Total ram usage:       11 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:   13
  2025 ;; This function calls:
  2026 ;;		_BUTTON_IsPressed
  2027 ;;		_CDCTxService
  2028 ;;		_PIC18F26K40_enterLowVoltageProg
  2029 ;;		_PIC18F26K40_exitLowVoltageProg
  2030 ;;		_PIC18F26K40_loadDataIntoNVM
  2031 ;;		_PIC18F26K40_loadPC
  2032 ;;		_PIC18F26K40_readThreeBytes
  2033 ;;		_getsUSBUSART
  2034 ;;		_putUSBUSART
  2035 ;;		_putrsUSBUSART
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text7
  2042  0003DC                     __ptext7:
  2043                           	opt stack 0
  2044  0003DC                     _APP_DeviceCDCBasicDemoTasks:
  2045                           	opt stack 17
  2046                           
  2047                           ;app_device_cdc_basic.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;incstack = 0
  2051  0003DC  0E20               	movlw	32
  2052  0003DE  0100               	movlb	0	; () banked
  2053  0003E0  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  2054  0003E2  D001               	goto	l178
  2055  0003E4  0C20               	retlw	32
  2056  0003E6                     l178:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;app_device_cdc_basic.c: 85: }
  2060                           ;app_device_cdc_basic.c: 91: if( UCONbits.SUSPND== 1 )
  2061  0003E6  B264               	btfsc	3940,1,c	;volatile
  2062  0003E8  0012               	return	
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;app_device_cdc_basic.c: 94: }
  2066                           ;app_device_cdc_basic.c: 99: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  2067  0003EA  0E01               	movlw	1
  2068  0003EC  ECDB  F00D         	call	_BUTTON_IsPressed
  2069  0003F0  06E8               	decf	wreg,f,c
  2070  0003F2  E10D               	bnz	l181
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;app_device_cdc_basic.c: 100: {
  2074                           ;app_device_cdc_basic.c: 104: if(buttonPressed == 0)
  2075  0003F4  517F               	movf	_buttonPressed& (0+255),w,b
  2076  0003F6  E10C               	bnz	l5011
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;app_device_cdc_basic.c: 105: {
  2080                           ;app_device_cdc_basic.c: 108: if((cdc_trf_state == 0) == 1)
  2081  0003F8  5180               	movf	_cdc_trf_state& (0+255),w,b
  2082  0003FA  E10A               	bnz	l5011
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;app_device_cdc_basic.c: 109: {
  2086                           ;app_device_cdc_basic.c: 110: putrsUSBUSART(buttonMessage);
  2087  0003FC  0E40               	movlw	low _buttonMessage
  2088  0003FE  6FD3               	movwf	putrsUSBUSART@data& (0+255),b
  2089  000400  0E01               	movlw	high _buttonMessage
  2090  000402  6FD4               	movwf	(putrsUSBUSART@data+1)& (0+255),b
  2091  000404  ECFD  F00A         	call	_putrsUSBUSART	;wreg free
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;app_device_cdc_basic.c: 111: buttonPressed = 1;
  2095  000408  0E01               	movlw	1
  2096  00040A  6F7F               	movwf	_buttonPressed& (0+255),b
  2097  00040C  D001               	goto	l5011
  2098  00040E                     l181:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;app_device_cdc_basic.c: 115: else
  2102                           ;app_device_cdc_basic.c: 116: {
  2103                           ;app_device_cdc_basic.c: 120: buttonPressed = 0;
  2104  00040E  6B7F               	clrf	_buttonPressed& (0+255),b
  2105  000410                     l5011:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;app_device_cdc_basic.c: 121: }
  2109                           ;app_device_cdc_basic.c: 126: if( (cdc_trf_state == 0) == 1)
  2110  000410  5180               	movf	_cdc_trf_state& (0+255),w,b
  2111  000412  E002 EF80  F004    	bnz	_CDCTxService
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;app_device_cdc_basic.c: 127: {
  2115                           ;app_device_cdc_basic.c: 128: uint8_t i;
  2116                           ;app_device_cdc_basic.c: 129: uint8_t numBytesRead;
  2117                           ;app_device_cdc_basic.c: 130: DWORD_VAL Address, Data;
  2118                           ;app_device_cdc_basic.c: 132: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  2119  000418  0E82               	movlw	low _readBuffer
  2120  00041A  6FDC               	movwf	getsUSBUSART@buffer& (0+255),b
  2121  00041C  0E40               	movlw	64
  2122  00041E  6FDD               	movwf	getsUSBUSART@len& (0+255),b
  2123  000420  EC2C  F00A         	call	_getsUSBUSART	;wreg free
  2124  000424  6FEC               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),b
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;app_device_cdc_basic.c: 136: if (numBytesRead>0)
  2128  000426  51EC               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2129  000428  E001 D0D5          	bnz	l5119
  2130  00042C  EF80  F004         	goto	_CDCTxService
  2131  000430                     l5019:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;app_device_cdc_basic.c: 141: case 0x0D:
  2135                           ;app_device_cdc_basic.c: 142: putrsUSBUSART("\n\r");
  2136  000430  0ED4               	movlw	low STR_1
  2137  000432  D90E               	call	PL48	;call to abstracted procedure
  2138  000434  ECFD  F00A         	call	_putrsUSBUSART	;wreg free
  2139                           
  2140                           ;app_device_cdc_basic.c: 144: break;
  2141  000438  EF80  F004         	goto	_CDCTxService
  2142  00043C                     l5021:
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;app_device_cdc_basic.c: 146: PIC18F26K40_enterLowVoltageProg();
  2146  00043C  EC24  F00C         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2147                           
  2148                           ;app_device_cdc_basic.c: 147: break;
  2149  000440  EF80  F004         	goto	_CDCTxService
  2150  000444                     l5023:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;app_device_cdc_basic.c: 150: PIC18F26K40_exitLowVoltageProg();
  2154  000444  EC09  F00E         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2155                           
  2156                           ;app_device_cdc_basic.c: 151: break;
  2157  000448  EF80  F004         	goto	_CDCTxService
  2158  00044C                     l193:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;app_device_cdc_basic.c: 154: Address.v[0] = readBuffer[3];
  2162  00044C  C085  F0EE         	movff	_readBuffer+3,APP_DeviceCDCBasicDemoTasks@Address
  2163                           
  2164                           ;app_device_cdc_basic.c: 155: Address.v[1] = readBuffer[2];
  2165  000450  C084  F0EF         	movff	_readBuffer+2,APP_DeviceCDCBasicDemoTasks@Address+1
  2166                           
  2167                           ;app_device_cdc_basic.c: 156: Address.v[2] = readBuffer[1];
  2168  000454  C083  F0F0         	movff	_readBuffer+1,APP_DeviceCDCBasicDemoTasks@Address+2
  2169                           
  2170                           ;app_device_cdc_basic.c: 157: Address.v[3] = 0;
  2171  000458  6BF1               	clrf	(APP_DeviceCDCBasicDemoTasks@Address+3)& (0+255),b
  2172                           
  2173                           ;app_device_cdc_basic.c: 158: Data.v[0] = readBuffer[5];
  2174  00045A  C087  F0F2         	movff	_readBuffer+5,APP_DeviceCDCBasicDemoTasks@Data
  2175                           
  2176                           ;app_device_cdc_basic.c: 159: Data.v[1] = readBuffer[4];
  2177  00045E  C086  F0F3         	movff	_readBuffer+4,APP_DeviceCDCBasicDemoTasks@Data+1
  2178                           
  2179                           ;app_device_cdc_basic.c: 160: Data.v[2] = 0;
  2180  000462  6BF4               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+2)& (0+255),b
  2181                           
  2182                           ;app_device_cdc_basic.c: 161: Data.v[3] = 0;
  2183  000464  6BF5               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+3)& (0+255),b
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;app_device_cdc_basic.c: 162: PIC18F26K40_loadPC(Address);
  2187  000466  D8CD               	call	PL20	;call to abstracted procedure
  2188  000468  EC68  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2189                           
  2190                           ;app_device_cdc_basic.c: 163: PIC18F26K40_loadDataIntoNVM(Data, FALSE);
  2191  00046C  D8DE               	call	PL28	;call to abstracted procedure
  2192  00046E  EC2C  F00B         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2193                           
  2194                           ;app_device_cdc_basic.c: 164: _delay((unsigned long)((5)*(12000000/4000.0)));
  2195  000472  0E14               	movlw	20
  2196  000474  0100               	movlb	0	; () banked
  2197  000476  6FEB               	movwf	??_APP_DeviceCDCBasicDemoTasks& (0+255),b
  2198  000478  0E79               	movlw	121
  2199  00047A                     u4167:
  2200  00047A  2EE8               	decfsz	wreg,f,c
  2201  00047C  D7FE               	bra	u4167
  2202  00047E  2FEB               	decfsz	??_APP_DeviceCDCBasicDemoTasks& (0+255),f,b
  2203  000480  D7FC               	bra	u4167
  2204  000482  D000               	nop2	
  2205                           
  2206                           ;app_device_cdc_basic.c: 165: Data.v[0] = 0xff;
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;app_device_cdc_basic.c: 166: Data.v[1] = 0xff;
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;app_device_cdc_basic.c: 167: Data = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2213  000484  D8EB               	call	PL104	;call to abstracted procedure
  2214  000486  EC93  F006         	call	_PIC18F26K40_readThreeBytes
  2215  00048A  D8D9               	call	PL30	;call to abstracted procedure
  2216                           
  2217                           ;app_device_cdc_basic.c: 168: if (Data.v[0] == readBuffer[5])
  2218  00048C  0100               	movlb	0	; () banked
  2219  00048E  51F2               	movf	APP_DeviceCDCBasicDemoTasks@Data& (0+255),w,b
  2220  000490  1987               	xorwf	(_readBuffer+5)& (0+255),w,b
  2221  000492  E106               	bnz	l5039
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;app_device_cdc_basic.c: 169: putrsUSBUSART("1");
  2225  000494  0ED9               	movlw	low STR_2
  2226  000496  D8DC               	call	PL48	;call to abstracted procedure
  2227  000498  ECFD  F00A         	call	_putrsUSBUSART	;wreg free
  2228  00049C  EF80  F004         	goto	_CDCTxService
  2229  0004A0                     l5039:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;app_device_cdc_basic.c: 170: else
  2233                           ;app_device_cdc_basic.c: 171: putrsUSBUSART("0");
  2234  0004A0  0ED7               	movlw	low STR_3
  2235  0004A2  D8D6               	call	PL48	;call to abstracted procedure
  2236  0004A4  ECFD  F00A         	call	_putrsUSBUSART	;wreg free
  2237  0004A8  EF80  F004         	goto	_CDCTxService
  2238  0004AC                     l5041:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;app_device_cdc_basic.c: 175: Address.v[0] = (readBuffer[5]-0x30)*10 + (readBuffer[6]-0x
      +                          30);
  2242  0004AC  5187               	movf	(_readBuffer+5)& (0+255),w,b
  2243  0004AE  0D0A               	mullw	10
  2244  0004B0  50F3               	movf	prodl,w,c
  2245  0004B2  2588               	addwf	(_readBuffer+6)& (0+255),w,b
  2246  0004B4  0FF0               	addlw	240
  2247  0004B6  6FEE               	movwf	APP_DeviceCDCBasicDemoTasks@Address& (0+255),b
  2248                           
  2249                           ;app_device_cdc_basic.c: 176: Address.v[1] = (readBuffer[3]-0x30)*10 + (readBuffer[4]-0x
      +                          30);
  2250  0004B8  5185               	movf	(_readBuffer+3)& (0+255),w,b
  2251  0004BA  0D0A               	mullw	10
  2252  0004BC  50F3               	movf	prodl,w,c
  2253  0004BE  2586               	addwf	(_readBuffer+4)& (0+255),w,b
  2254  0004C0  0FF0               	addlw	240
  2255  0004C2  6FEF               	movwf	(APP_DeviceCDCBasicDemoTasks@Address+1)& (0+255),b
  2256                           
  2257                           ;app_device_cdc_basic.c: 177: Address.v[2] = (readBuffer[1]-0x30)*10 + (readBuffer[2]-0x
      +                          30);
  2258  0004C4  5183               	movf	(_readBuffer+1)& (0+255),w,b
  2259  0004C6  0D0A               	mullw	10
  2260  0004C8  50F3               	movf	prodl,w,c
  2261  0004CA  2584               	addwf	(_readBuffer+2)& (0+255),w,b
  2262  0004CC  0FF0               	addlw	240
  2263  0004CE  6FF0               	movwf	(APP_DeviceCDCBasicDemoTasks@Address+2)& (0+255),b
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;app_device_cdc_basic.c: 178: Address.v[3] = 0;
  2267  0004D0  6BF1               	clrf	(APP_DeviceCDCBasicDemoTasks@Address+3)& (0+255),b
  2268                           
  2269                           ;app_device_cdc_basic.c: 179: Data.v[0] = (readBuffer[9]-0x30)*10 + (readBuffer[10]-0x30
      +                          );
  2270  0004D2  518B               	movf	(_readBuffer+9)& (0+255),w,b
  2271  0004D4  0D0A               	mullw	10
  2272  0004D6  50F3               	movf	prodl,w,c
  2273  0004D8  258C               	addwf	(_readBuffer+10)& (0+255),w,b
  2274  0004DA  0FF0               	addlw	240
  2275  0004DC  6FF2               	movwf	APP_DeviceCDCBasicDemoTasks@Data& (0+255),b
  2276                           
  2277                           ;app_device_cdc_basic.c: 180: Data.v[1] = (readBuffer[7]-0x30)*10 + (readBuffer[8]-0x30)
      +                          ;
  2278  0004DE  5189               	movf	(_readBuffer+7)& (0+255),w,b
  2279  0004E0  0D0A               	mullw	10
  2280  0004E2  50F3               	movf	prodl,w,c
  2281  0004E4  258A               	addwf	(_readBuffer+8)& (0+255),w,b
  2282  0004E6  0FF0               	addlw	240
  2283  0004E8  6FF3               	movwf	(APP_DeviceCDCBasicDemoTasks@Data+1)& (0+255),b
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;app_device_cdc_basic.c: 181: Data.v[2] = 0;
  2287  0004EA  6BF4               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+2)& (0+255),b
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;app_device_cdc_basic.c: 182: Data.v[3] = 0;
  2291  0004EC  6BF5               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+3)& (0+255),b
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;app_device_cdc_basic.c: 183: PIC18F26K40_loadPC(Address);
  2295  0004EE  D889               	call	PL20	;call to abstracted procedure
  2296  0004F0  EC68  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;app_device_cdc_basic.c: 184: PIC18F26K40_loadDataIntoNVM(Data, FALSE);
  2300  0004F4  D89A               	call	PL28	;call to abstracted procedure
  2301  0004F6  EC2C  F00B         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2302                           
  2303                           ;app_device_cdc_basic.c: 185: _delay((unsigned long)((5)*(12000000/4000.0)));
  2304  0004FA  0E14               	movlw	20
  2305  0004FC  0100               	movlb	0	; () banked
  2306  0004FE  6FEB               	movwf	??_APP_DeviceCDCBasicDemoTasks& (0+255),b
  2307  000500  0E79               	movlw	121
  2308  000502                     u4177:
  2309  000502  2EE8               	decfsz	wreg,f,c
  2310  000504  D7FE               	bra	u4177
  2311  000506  2FEB               	decfsz	??_APP_DeviceCDCBasicDemoTasks& (0+255),f,b
  2312  000508  D7FC               	bra	u4177
  2313  00050A  D000               	nop2	
  2314                           
  2315                           ;app_device_cdc_basic.c: 186: Data.v[0] = 0xff;
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;app_device_cdc_basic.c: 187: Data.v[1] = 0xff;
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;app_device_cdc_basic.c: 188: Data = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2322  00050C  D8A7               	call	PL104	;call to abstracted procedure
  2323  00050E  EC93  F006         	call	_PIC18F26K40_readThreeBytes
  2324  000512  D895               	call	PL30	;call to abstracted procedure
  2325                           
  2326                           ;app_device_cdc_basic.c: 193: writeBuffer[0] = Address.v[2];
  2327  000514  C0F0  F100         	movff	APP_DeviceCDCBasicDemoTasks@Address+2,_writeBuffer
  2328                           
  2329                           ;app_device_cdc_basic.c: 194: writeBuffer[1] = Address.v[1];
  2330  000518  C0EF  F101         	movff	APP_DeviceCDCBasicDemoTasks@Address+1,_writeBuffer+1
  2331                           
  2332                           ;app_device_cdc_basic.c: 195: writeBuffer[2] = Address.v[0];
  2333  00051C  C0EE  F102         	movff	APP_DeviceCDCBasicDemoTasks@Address,_writeBuffer+2
  2334                           
  2335                           ;app_device_cdc_basic.c: 196: writeBuffer[3] = Data.v[1];
  2336  000520  C0F3  F103         	movff	APP_DeviceCDCBasicDemoTasks@Data+1,_writeBuffer+3
  2337                           
  2338                           ;app_device_cdc_basic.c: 197: writeBuffer[4] = Data.v[0];
  2339  000524  C0F2  F104         	movff	APP_DeviceCDCBasicDemoTasks@Data,_writeBuffer+4
  2340                           
  2341                           ;app_device_cdc_basic.c: 198: putUSBUSART(writeBuffer,5);
  2342  000528  0E00               	movlw	low _writeBuffer
  2343  00052A  0100               	movlb	0	; () banked
  2344  00052C  6FD3               	movwf	putUSBUSART@data& (0+255),b
  2345  00052E  0E01               	movlw	high _writeBuffer
  2346  000530  6FD4               	movwf	(putUSBUSART@data+1)& (0+255),b
  2347  000532  0E05               	movlw	5
  2348  000534  6FD5               	movwf	putUSBUSART@length& (0+255),b
  2349  000536  ECBF  F00D         	call	_putUSBUSART	;wreg free
  2350                           
  2351                           ;app_device_cdc_basic.c: 199: break;
  2352  00053A  EF80  F004         	goto	_CDCTxService
  2353  00053E                     l197:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;app_device_cdc_basic.c: 202: for (i=0; i<10;i++){
  2357  00053E  6BED               	clrf	APP_DeviceCDCBasicDemoTasks@i& (0+255),b
  2358  000540                     l5077:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;app_device_cdc_basic.c: 203: Address.Val = 0x310000+i;
  2362  000540  0E00               	movlw	0
  2363  000542  25ED               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2364  000544  D867               	call	PL24	;call to abstracted procedure
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;app_device_cdc_basic.c: 204: PIC18F26K40_loadPC(Address);
  2368  000546  D85D               	call	PL20	;call to abstracted procedure
  2369  000548  EC68  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;app_device_cdc_basic.c: 205: Data.Val = GLOBAL_COUNTER;
  2373  00054C  51F8               	movf	_GLOBAL_COUNTER& (0+255),w,b
  2374  00054E  6FF2               	movwf	APP_DeviceCDCBasicDemoTasks@Data& (0+255),b
  2375  000550  6BF3               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+1)& (0+255),b
  2376  000552  6BF4               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+2)& (0+255),b
  2377  000554  6BF5               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+3)& (0+255),b
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;app_device_cdc_basic.c: 207: PIC18F26K40_loadDataIntoNVM(Data, FALSE);
  2381  000556  D869               	call	PL28	;call to abstracted procedure
  2382  000558  EC2C  F00B         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2383                           
  2384                           ;app_device_cdc_basic.c: 208: _delay((unsigned long)((5)*(12000000/4000.0)));
  2385  00055C  0E14               	movlw	20
  2386  00055E  0100               	movlb	0	; () banked
  2387  000560  6FEB               	movwf	??_APP_DeviceCDCBasicDemoTasks& (0+255),b
  2388  000562  0E79               	movlw	121
  2389  000564                     u4187:
  2390  000564  2EE8               	decfsz	wreg,f,c
  2391  000566  D7FE               	bra	u4187
  2392  000568  2FEB               	decfsz	??_APP_DeviceCDCBasicDemoTasks& (0+255),f,b
  2393  00056A  D7FC               	bra	u4187
  2394  00056C  D000               	nop2	
  2395                           
  2396                           ;app_device_cdc_basic.c: 209: GLOBAL_COUNTER++;
  2397  00056E  0100               	movlb	0	; () banked
  2398  000570  2BF8               	incf	_GLOBAL_COUNTER& (0+255),f,b
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;app_device_cdc_basic.c: 210: if (GLOBAL_COUNTER>122)
  2402  000572  0E7A               	movlw	122
  2403  000574  65F8               	cpfsgt	_GLOBAL_COUNTER& (0+255),b
  2404  000576  D002               	goto	l5093
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;app_device_cdc_basic.c: 211: GLOBAL_COUNTER = 0x30;
  2408  000578  0E30               	movlw	48
  2409  00057A  6FF8               	movwf	_GLOBAL_COUNTER& (0+255),b
  2410  00057C                     l5093:
  2411                           
  2412                           ; BSR set to: 0
  2413  00057C  2BED               	incf	APP_DeviceCDCBasicDemoTasks@i& (0+255),f,b
  2414                           
  2415                           ; BSR set to: 0
  2416  00057E  0E09               	movlw	9
  2417  000580  65ED               	cpfsgt	APP_DeviceCDCBasicDemoTasks@i& (0+255),b
  2418  000582  D7DE               	goto	l5077
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;app_device_cdc_basic.c: 212: }
  2422                           ;app_device_cdc_basic.c: 213: putrsUSBUSART("Done Writing.");
  2423  000584  0EC6               	movlw	low STR_4
  2424  000586  D864               	call	PL48	;call to abstracted procedure
  2425  000588  ECFD  F00A         	call	_putrsUSBUSART	;wreg free
  2426                           
  2427                           ;app_device_cdc_basic.c: 214: break;
  2428  00058C  EF80  F004         	goto	_CDCTxService
  2429  000590                     l201:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;app_device_cdc_basic.c: 217: for (i=0; i<10;i++){
  2433  000590  6BED               	clrf	APP_DeviceCDCBasicDemoTasks@i& (0+255),b
  2434  000592                     l5103:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;app_device_cdc_basic.c: 218: Address.Val = 0x310000+i;
  2438  000592  0E00               	movlw	0
  2439  000594  25ED               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2440  000596  D83E               	call	PL24	;call to abstracted procedure
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;app_device_cdc_basic.c: 219: PIC18F26K40_loadPC(Address);
  2444  000598  D834               	call	PL20	;call to abstracted procedure
  2445  00059A  EC68  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;app_device_cdc_basic.c: 220: Data = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2449  00059E  0E00               	movlw	0
  2450  0005A0  6FD9               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2451  0005A2  EC93  F006         	call	_PIC18F26K40_readThreeBytes
  2452  0005A6  D84B               	call	PL30	;call to abstracted procedure
  2453                           
  2454                           ;app_device_cdc_basic.c: 221: writeBuffer[i] = Data.v[0];
  2455  0005A8  0E00               	movlw	low _writeBuffer
  2456  0005AA  0100               	movlb	0	; () banked
  2457  0005AC  25ED               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2458  0005AE  6ED9               	movwf	fsr2l,c
  2459  0005B0  6ADA               	clrf	fsr2h,c
  2460  0005B2  0E01               	movlw	high _writeBuffer
  2461  0005B4  22DA               	addwfc	fsr2h,f,c
  2462  0005B6  C0F2  FFDF         	movff	APP_DeviceCDCBasicDemoTasks@Data,indf2
  2463                           
  2464                           ; BSR set to: 0
  2465  0005BA  2BED               	incf	APP_DeviceCDCBasicDemoTasks@i& (0+255),f,b
  2466                           
  2467                           ; BSR set to: 0
  2468  0005BC  0E09               	movlw	9
  2469  0005BE  65ED               	cpfsgt	APP_DeviceCDCBasicDemoTasks@i& (0+255),b
  2470  0005C0  D7E8               	goto	l5103
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;app_device_cdc_basic.c: 222: }
  2474                           ;app_device_cdc_basic.c: 223: putUSBUSART(writeBuffer,10);
  2475  0005C2  0E00               	movlw	low _writeBuffer
  2476  0005C4  6FD3               	movwf	putUSBUSART@data& (0+255),b
  2477  0005C6  0E01               	movlw	high _writeBuffer
  2478  0005C8  6FD4               	movwf	(putUSBUSART@data+1)& (0+255),b
  2479  0005CA  0E0A               	movlw	10
  2480  0005CC  6FD5               	movwf	putUSBUSART@length& (0+255),b
  2481  0005CE  ECBF  F00D         	call	_putUSBUSART	;wreg free
  2482                           
  2483                           ;app_device_cdc_basic.c: 224: break;
  2484  0005D2  EF80  F004         	goto	_CDCTxService
  2485  0005D6                     l5119:
  2486                           
  2487                           ; BSR set to: 0
  2488  0005D6  5182               	movf	_readBuffer& (0+255),w,b
  2489                           
  2490                           ; Switch size 1, requested type "space"
  2491                           ; Number of cases is 7, Range of values is 10 to 65
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte           22    12 (average)
  2495                           ;	Chosen strategy is simple_byte
  2496  0005D8  0A0A               	xorlw	10	; case 10
  2497  0005DA  E101 D729          	bz	l5019
  2498  0005DE  0A07               	xorlw	7	; case 13
  2499  0005E0  E101 D726          	bz	l5019
  2500  0005E4  0A3D               	xorlw	61	; case 48
  2501  0005E6  E101 D729          	bz	l5021
  2502  0005EA  0A01               	xorlw	1	; case 49
  2503  0005EC  E101 D72A          	bz	l5023
  2504  0005F0  0A03               	xorlw	3	; case 50
  2505  0005F2  E101 D72B          	bz	l193
  2506  0005F6  0A01               	xorlw	1	; case 51
  2507  0005F8  E101 D758          	bz	l5041
  2508  0005FC  0A72               	xorlw	114	; case 65
  2509  0005FE  E09F               	bz	l197
  2510  000600  D7C7               	goto	l201
  2511  000602                     __end_of_APP_DeviceCDCBasicDemoTasks:
  2512                           	opt stack 0
  2513  000602                     PL20:
  2514                           	opt stack 17
  2515  000602  C0EE  F0D9         	movff	APP_DeviceCDCBasicDemoTasks@Address,PIC18F26K40_loadPC@address
  2516  000606  C0EF  F0DA         	movff	APP_DeviceCDCBasicDemoTasks@Address+1,PIC18F26K40_loadPC@address+1
  2517  00060A  C0F0  F0DB         	movff	APP_DeviceCDCBasicDemoTasks@Address+2,PIC18F26K40_loadPC@address+2
  2518  00060E  C0F1  F0DC         	movff	APP_DeviceCDCBasicDemoTasks@Address+3,PIC18F26K40_loadPC@address+3
  2519  000612  0012               	return	
  2520  000614                     __end_ofPL20:
  2521                           	opt stack 0
  2522  000614                     PL24:
  2523                           	opt stack 17
  2524  000614  6FEE               	movwf	APP_DeviceCDCBasicDemoTasks@Address& (0+255),b
  2525  000616  6BEF               	clrf	(APP_DeviceCDCBasicDemoTasks@Address+1)& (0+255),b
  2526  000618  0E00               	movlw	0
  2527  00061A  23EF               	addwfc	(APP_DeviceCDCBasicDemoTasks@Address+1)& (0+255),f,b
  2528  00061C  6BF0               	clrf	(APP_DeviceCDCBasicDemoTasks@Address+2)& (0+255),b
  2529  00061E  0E31               	movlw	49
  2530  000620  23F0               	addwfc	(APP_DeviceCDCBasicDemoTasks@Address+2)& (0+255),f,b
  2531  000622  6BF1               	clrf	(APP_DeviceCDCBasicDemoTasks@Address+3)& (0+255),b
  2532  000624  0E00               	movlw	0
  2533  000626  23F1               	addwfc	(APP_DeviceCDCBasicDemoTasks@Address+3)& (0+255),f,b
  2534  000628  0C00               	retlw	0
  2535  00062A                     __end_ofPL24:
  2536                           	opt stack 0
  2537  00062A                     PL28:
  2538                           	opt stack 17
  2539  00062A  C0F2  F0D7         	movff	APP_DeviceCDCBasicDemoTasks@Data,PIC18F26K40_loadDataIntoNVM@data
  2540  00062E  C0F3  F0D8         	movff	APP_DeviceCDCBasicDemoTasks@Data+1,PIC18F26K40_loadDataIntoNVM@data+1
  2541  000632  C0F4  F0D9         	movff	APP_DeviceCDCBasicDemoTasks@Data+2,PIC18F26K40_loadDataIntoNVM@data+2
  2542  000636  C0F5  F0DA         	movff	APP_DeviceCDCBasicDemoTasks@Data+3,PIC18F26K40_loadDataIntoNVM@data+3
  2543  00063A  6BDB               	clrf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),b
  2544  00063C  0012               	return	
  2545  00063E                     __end_ofPL28:
  2546                           	opt stack 0
  2547  00063E                     PL30:
  2548                           	opt stack 17
  2549  00063E  C0D9  F0F2         	movff	?_PIC18F26K40_readThreeBytes,APP_DeviceCDCBasicDemoTasks@Data
  2550  000642  C0DA  F0F3         	movff	?_PIC18F26K40_readThreeBytes+1,APP_DeviceCDCBasicDemoTasks@Data+1
  2551  000646  C0DB  F0F4         	movff	?_PIC18F26K40_readThreeBytes+2,APP_DeviceCDCBasicDemoTasks@Data+2
  2552  00064A  C0DC  F0F5         	movff	?_PIC18F26K40_readThreeBytes+3,APP_DeviceCDCBasicDemoTasks@Data+3
  2553  00064E  0012               	return	
  2554  000650                     __end_ofPL30:
  2555                           	opt stack 0
  2556  000650                     PL48:
  2557                           	opt stack 17
  2558  000650  6FD3               	movwf	putrsUSBUSART@data& (0+255),b
  2559  000652  51D3               	movf	putrsUSBUSART@data& (0+255),w,b
  2560  000654  A4D8               	btfss	status,2,c
  2561  000656  0E03               	movlw	high __smallconst
  2562  000658  6FD4               	movwf	(putrsUSBUSART@data+1)& (0+255),b
  2563  00065A  0012               	return	
  2564  00065C                     __end_ofPL48:
  2565                           	opt stack 0
  2566  00065C                     PL104:
  2567                           	opt stack 17
  2568  00065C  0100               	movlb	0	; () banked
  2569  00065E  69F2               	setf	APP_DeviceCDCBasicDemoTasks@Data& (0+255),b
  2570  000660  69F3               	setf	(APP_DeviceCDCBasicDemoTasks@Data+1)& (0+255),b
  2571  000662  0E00               	movlw	0
  2572  000664  6FD9               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2573  000666  0C00               	retlw	0
  2574  000668                     __end_ofPL104:
  2575                           	opt stack 0
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           prodh	equ	0xFF4
  2581                           prodl	equ	0xFF3
  2582                           intcon	equ	0xFF2
  2583                           postinc0	equ	0xFEE
  2584                           wreg	equ	0xFE8
  2585                           indf1	equ	0xFE7
  2586                           postdec1	equ	0xFE5
  2587                           fsr1h	equ	0xFE2
  2588                           fsr1l	equ	0xFE1
  2589                           indf2	equ	0xFDF
  2590                           postinc2	equ	0xFDE
  2591                           postdec2	equ	0xFDD
  2592                           plusw2	equ	0xFDB
  2593                           fsr2h	equ	0xFDA
  2594                           fsr2l	equ	0xFD9
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _putrsUSBUSART *****************
  2598 ;; Defined at:
  2599 ;;		line 726 in file "picLibs/usb_device_cdc.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  data            2    0[BANK0 ] PTR const unsigned char 
  2602 ;;		 -> STR_4(14), STR_3(2), STR_2(2), STR_1(3), 
  2603 ;;		 -> buttonMessage(18), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  pData           2    4[BANK0 ] PTR const unsigned char 
  2606 ;;		 -> STR_4(14), STR_3(2), STR_2(2), STR_1(3), 
  2607 ;;		 -> buttonMessage(18), 
  2608 ;;  len             1    6[BANK0 ] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  2613 ;; Tracked objects:
  2614 ;;		On entry : 3F/0
  2615 ;;		On exit  : 3F/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2618 ;;      Params:         0       2       0       0
  2619 ;;      Locals:         0       3       0       0
  2620 ;;      Temps:          0       2       0       0
  2621 ;;      Totals:         0       7       0       0
  2622 ;;Total ram usage:        7 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:   10
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_APP_DeviceCDCBasicDemoTasks
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text8
  2633  0015FA                     __ptext8:
  2634                           	opt stack 0
  2635  0015FA                     _putrsUSBUSART:
  2636                           	opt stack 19
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;usb_device_cdc.c: 728: uint8_t len;
  2640                           ;usb_device_cdc.c: 729: const const char *pData;
  2641                           ;usb_device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;incstack = 0
  2645  0015FA  94A0               	bcf	4000,2,c	;volatile
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  2649  0015FC  5180               	movf	_cdc_trf_state& (0+255),w,b
  2650  0015FE  E002               	bz	l824
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;usb_device_cdc.c: 756: {
  2654                           ;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  2655  001600  84A0               	bsf	4000,2,c	;volatile
  2656                           
  2657                           ;usb_device_cdc.c: 758: return;
  2658  001602  0012               	return	
  2659  001604                     l824:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;usb_device_cdc.c: 759: }
  2663                           ;usb_device_cdc.c: 765: len = 0;
  2664  001604  6BD9               	clrf	putrsUSBUSART@len& (0+255),b
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;usb_device_cdc.c: 766: pData = data;
  2668  001606  C0D3  F0D7         	movff	putrsUSBUSART@data,putrsUSBUSART@pData
  2669  00160A  C0D4  F0D8         	movff	putrsUSBUSART@data+1,putrsUSBUSART@pData+1
  2670  00160E                     l4851:
  2671                           
  2672                           ;usb_device_cdc.c: 768: {
  2673                           ;usb_device_cdc.c: 769: len++;
  2674  00160E  0100               	movlb	0	; () banked
  2675  001610  2BD9               	incf	putrsUSBUSART@len& (0+255),f,b
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;usb_device_cdc.c: 770: if(len == 255) break;
  2679  001612  29D9               	incf	putrsUSBUSART@len& (0+255),w,b
  2680  001614  E015               	bz	l4859
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;usb_device_cdc.c: 771: }while(*pData++);
  2684  001616  51D7               	movf	putrsUSBUSART@pData& (0+255),w,b
  2685  001618  6FD5               	movwf	??_putrsUSBUSART& (0+255),b
  2686  00161A  51D8               	movf	(putrsUSBUSART@pData+1)& (0+255),w,b
  2687  00161C  6FD6               	movwf	(??_putrsUSBUSART+1)& (0+255),b
  2688  00161E  4BD7               	infsnz	putrsUSBUSART@pData& (0+255),f,b
  2689  001620  2BD8               	incf	(putrsUSBUSART@pData+1)& (0+255),f,b
  2690  001622  C0D5  FFF6         	movff	??_putrsUSBUSART,tblptrl
  2691  001626  C0D6  FFF7         	movff	??_putrsUSBUSART+1,tblptrh
  2692  00162A  6AF8               	clrf	tblptru,c
  2693  00162C  0E02               	movlw	(high __ramtop+-1)
  2694  00162E  64F7               	cpfsgt	tblptrh,c
  2695  001630  D003               	bra	u3777
  2696  001632  0008               	tblrd		*
  2697  001634  50F5               	movf	tablat,w,c
  2698  001636  D002               	bra	u3770
  2699  001638                     u3777:
  2700  001638  ECB7  F005         	call	PL18	;call to abstracted procedure
  2701  00163C                     u3770:
  2702  00163C  0900               	iorlw	0
  2703  00163E  E1E7               	bnz	l4851
  2704  001640                     l4859:
  2705                           
  2706                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  2707  001640  C0D3  F06D         	movff	putrsUSBUSART@data,_pCDCSrc
  2708  001644  C0D4  F06E         	movff	putrsUSBUSART@data+1,_pCDCSrc+1
  2709  001648  C0D9  F01B         	movff	putrsUSBUSART@len,_cdc_tx_len
  2710  00164C  0100               	movlb	0	; () banked
  2711  00164E  6B7C               	clrf	_cdc_mem_type& (0+255),b
  2712                           
  2713                           ; BSR set to: 0
  2714  001650  0E01               	movlw	1
  2715  001652  6F80               	movwf	_cdc_trf_state& (0+255),b
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  2719  001654  84A0               	bsf	4000,2,c	;volatile
  2720                           
  2721                           ; BSR set to: 0
  2722  001656  0C01               	retlw	1	;funcret
  2723  001658                     __end_of_putrsUSBUSART:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           intcon	equ	0xFF2
  2732                           postinc0	equ	0xFEE
  2733                           wreg	equ	0xFE8
  2734                           indf1	equ	0xFE7
  2735                           postdec1	equ	0xFE5
  2736                           fsr1h	equ	0xFE2
  2737                           fsr1l	equ	0xFE1
  2738                           indf2	equ	0xFDF
  2739                           postinc2	equ	0xFDE
  2740                           postdec2	equ	0xFDD
  2741                           plusw2	equ	0xFDB
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _putUSBUSART *****************
  2747 ;; Defined at:
  2748 ;;		line 556 in file "picLibs/usb_device_cdc.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  data            2    0[BANK0 ] PTR unsigned char 
  2751 ;;		 -> writeBuffer(64), 
  2752 ;;  length          1    2[BANK0 ] unsigned char 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 3F/0
  2761 ;;		On exit  : 3F/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2764 ;;      Params:         0       3       0       0
  2765 ;;      Locals:         0       0       0       0
  2766 ;;      Temps:          0       0       0       0
  2767 ;;      Totals:         0       3       0       0
  2768 ;;Total ram usage:        3 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:   10
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_APP_DeviceCDCBasicDemoTasks
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text9
  2779  001B7E                     __ptext9:
  2780                           	opt stack 0
  2781  001B7E                     _putUSBUSART:
  2782                           	opt stack 19
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;incstack = 0
  2789  001B7E  94A0               	bcf	4000,2,c	;volatile
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2793  001B80  5180               	movf	_cdc_trf_state& (0+255),w,b
  2794  001B82  E109               	bnz	l4905
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;usb_device_cdc.c: 583: {
  2798                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2799  001B84  C0D3  F06D         	movff	putUSBUSART@data,_pCDCSrc
  2800  001B88  C0D4  F06E         	movff	putUSBUSART@data+1,_pCDCSrc+1
  2801                           
  2802                           ; BSR set to: 0
  2803  001B8C  C0D5  F01B         	movff	putUSBUSART@length,_cdc_tx_len
  2804                           
  2805                           ; BSR set to: 0
  2806  001B90  0E01               	movlw	1
  2807  001B92  6F7C               	movwf	_cdc_mem_type& (0+255),b
  2808                           
  2809                           ; BSR set to: 0
  2810  001B94  6F80               	movwf	_cdc_trf_state& (0+255),b
  2811  001B96                     l4905:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;usb_device_cdc.c: 585: }
  2815                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2816  001B96  84A0               	bsf	4000,2,c	;volatile
  2817                           
  2818                           ; BSR set to: 0
  2819  001B98  0012               	return		;funcret
  2820  001B9A                     __end_of_putUSBUSART:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           indf1	equ	0xFE7
  2832                           postdec1	equ	0xFE5
  2833                           fsr1h	equ	0xFE2
  2834                           fsr1l	equ	0xFE1
  2835                           indf2	equ	0xFDF
  2836                           postinc2	equ	0xFDE
  2837                           postdec2	equ	0xFDD
  2838                           plusw2	equ	0xFDB
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _getsUSBUSART *****************
  2844 ;; Defined at:
  2845 ;;		line 485 in file "picLibs/usb_device_cdc.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  buffer          1    9[BANK0 ] PTR unsigned char 
  2848 ;;		 -> readBuffer(64), 
  2849 ;;  len             1   10[BANK0 ] unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      unsigned char 
  2854 ;; Registers used:
  2855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 3F/0
  2858 ;;		On exit  : 3F/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2861 ;;      Params:         0       2       0       0
  2862 ;;      Locals:         0       0       0       0
  2863 ;;      Temps:          0       1       0       0
  2864 ;;      Totals:         0       3       0       0
  2865 ;;Total ram usage:        3 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:   11
  2868 ;; This function calls:
  2869 ;;		_USBTransferOnePacket
  2870 ;; This function is called by:
  2871 ;;		_APP_DeviceCDCBasicDemoTasks
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text10
  2876  001458                     __ptext10:
  2877                           	opt stack 0
  2878  001458                     _getsUSBUSART:
  2879                           	opt stack 18
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;incstack = 0
  2886  001458  6A1C               	clrf	_cdc_rx_len,c
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2890  00145A  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2891  00145C  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  2892  00145E  E006               	bz	l4875
  2893                           
  2894                           ; BSR set to: 0
  2895  001460  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2896  001464  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2897  001468  BEDF               	btfsc	indf2,7,c
  2898  00146A  D024               	goto	l4889
  2899  00146C                     l4875:
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;usb_device_cdc.c: 490: {
  2903                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2904  00146C  D825               	call	PL80	;call to abstracted procedure
  2905  00146E  51DD               	movf	getsUSBUSART@len& (0+255),w,b
  2906  001470  5CDE               	subwf	postinc2,w,c
  2907  001472  E203               	bc	l4879
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2911  001474  D821               	call	PL80	;call to abstracted procedure
  2912  001476  50DF               	movf	indf2,w,c
  2913  001478  6FDD               	movwf	getsUSBUSART@len& (0+255),b
  2914  00147A                     l4879:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2918  00147A  6A1C               	clrf	_cdc_rx_len,c
  2919  00147C  D009               	goto	l4885
  2920  00147E                     l4881:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2924  00147E  0E80               	movlw	128
  2925  001480  241C               	addwf	_cdc_rx_len,w,c
  2926  001482  EC8E  F006         	call	PL122	;call to abstracted procedure
  2927  001486  51DC               	movf	getsUSBUSART@buffer& (0+255),w,b
  2928  001488  241C               	addwf	_cdc_rx_len,w,c
  2929  00148A  EC89  F006         	call	PL120	;call to abstracted procedure
  2930                           
  2931                           ; BSR set to: 0
  2932  00148E  2A1C               	incf	_cdc_rx_len,f,c
  2933  001490                     l4885:
  2934                           
  2935                           ; BSR set to: 0
  2936  001490  51DD               	movf	getsUSBUSART@len& (0+255),w,b
  2937  001492  5C1C               	subwf	_cdc_rx_len,w,c
  2938  001494  E3F4               	bnc	l4881
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2942  001496  0E00               	movlw	0
  2943  001498  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  2944  00149A  0E80               	movlw	128
  2945  00149C  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  2946  00149E  0E02               	movlw	2
  2947  0014A0  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  2948  0014A2  0E40               	movlw	64
  2949  0014A4  6FD6               	movwf	USBTransferOnePacket@len& (0+255),b
  2950  0014A6  0E02               	movlw	2
  2951  0014A8  ECD3  F005         	call	_USBTransferOnePacket
  2952  0014AC  C0D3  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  2953  0014B0  C0D4  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  2954  0014B4                     l4889:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;usb_device_cdc.c: 510: }
  2958                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2959  0014B4  501C               	movf	_cdc_rx_len,w,c
  2960                           
  2961                           ; BSR set to: 0
  2962  0014B6  0012               	return		;funcret
  2963  0014B8                     __end_of_getsUSBUSART:
  2964                           	opt stack 0
  2965  0014B8                     PL80:
  2966                           	opt stack 18
  2967  0014B8  EE20 F001          	lfsr	2,1
  2968  0014BC  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2969  0014BE  26D9               	addwf	fsr2l,f,c
  2970  0014C0  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  2971  0014C2  22DA               	addwfc	fsr2h,f,c
  2972  0014C4  0012               	return	
  2973  0014C6                     __end_ofPL80:
  2974                           	opt stack 0
  2975                           tblptru	equ	0xFF8
  2976                           tblptrh	equ	0xFF7
  2977                           tblptrl	equ	0xFF6
  2978                           tablat	equ	0xFF5
  2979                           prodh	equ	0xFF4
  2980                           prodl	equ	0xFF3
  2981                           intcon	equ	0xFF2
  2982                           postinc0	equ	0xFEE
  2983                           wreg	equ	0xFE8
  2984                           indf1	equ	0xFE7
  2985                           postdec1	equ	0xFE5
  2986                           fsr1h	equ	0xFE2
  2987                           fsr1l	equ	0xFE1
  2988                           indf2	equ	0xFDF
  2989                           postinc2	equ	0xFDE
  2990                           postdec2	equ	0xFDD
  2991                           plusw2	equ	0xFDB
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _PIC18F26K40_readThreeBytes *****************
  2997 ;; Defined at:
  2998 ;;		line 53 in file "libs/progPIC18F26K40.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  direction       1    wreg     enum E4265
  3001 ;;  IncreasePC      1    6[BANK0 ] enum E4064
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  direction       1   17[BANK0 ] enum E4265
  3004 ;;  data            4   18[BANK0 ] struct _DWORD_VAL
  3005 ;;  i               1   23[BANK0 ] unsigned char 
  3006 ;;  j               1   22[BANK0 ] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  4    6[BANK0 ] struct _DWORD_VAL
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 3F/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3016 ;;      Params:         0       4       0       0
  3017 ;;      Locals:         0       7       0       0
  3018 ;;      Temps:          0       7       0       0
  3019 ;;      Totals:         0      18       0       0
  3020 ;;Total ram usage:       18 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:   12
  3023 ;; This function calls:
  3024 ;;		_PIC18F26K40_sendByte
  3025 ;; This function is called by:
  3026 ;;		_APP_DeviceCDCBasicDemoTasks
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text11
  3031  000D26                     __ptext11:
  3032                           	opt stack 0
  3033  000D26                     _PIC18F26K40_readThreeBytes:
  3034                           	opt stack 17
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;incstack = 0
  3038                           ;PIC18F26K40_readThreeBytes@direction stored from wreg
  3039  000D26  6FE4               	movwf	PIC18F26K40_readThreeBytes@direction& (0+255),b
  3040                           
  3041                           ;progPIC18F26K40.c: 54: if (IncreasePC)
  3042  000D28  0100               	movlb	0	; () banked
  3043  000D2A  51D9               	movf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),w,b
  3044  000D2C  E005               	bz	l4761
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;progPIC18F26K40.c: 55: PIC18F26K40_sendByte(0xFE, MSBTOLSB);
  3048  000D2E  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3049  000D30  0EFE               	movlw	254
  3050  000D32  EC59  F00B         	call	_PIC18F26K40_sendByte
  3051  000D36  D004               	goto	l4763
  3052  000D38                     l4761:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;progPIC18F26K40.c: 56: else
  3056                           ;progPIC18F26K40.c: 57: PIC18F26K40_sendByte(0xFC, MSBTOLSB);
  3057  000D38  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3058  000D3A  0EFC               	movlw	252
  3059  000D3C  EC59  F00B         	call	_PIC18F26K40_sendByte
  3060  000D40                     l4763:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;progPIC18F26K40.c: 58: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3064  000D40  D000               	nop2		;2 cycle nop
  3065  000D42  F000               	nop	
  3066                           
  3067                           ;progPIC18F26K40.c: 59: DWORD_VAL data;
  3068                           ;progPIC18F26K40.c: 60: data.Val = 0x000000;
  3069  000D44  0100               	movlb	0	; () banked
  3070  000D46  6BE5               	clrf	PIC18F26K40_readThreeBytes@data& (0+255),b
  3071  000D48  6BE6               	clrf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),b
  3072  000D4A  6BE7               	clrf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),b
  3073  000D4C  6BE8               	clrf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),b
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;progPIC18F26K40.c: 61: BYTE i, j;
  3077                           ;progPIC18F26K40.c: 62: TRISCbits.TRISC6 = 1;
  3078  000D4E  8C94               	bsf	3988,6,c	;volatile
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;progPIC18F26K40.c: 63: for (i = 0; i < 23; i++) {
  3082  000D50  6BEA               	clrf	PIC18F26K40_readThreeBytes@i& (0+255),b
  3083  000D52                     l4775:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;progPIC18F26K40.c: 64: if (direction)
  3087  000D52  51E4               	movf	PIC18F26K40_readThreeBytes@direction& (0+255),w,b
  3088  000D54  E003               	bz	l4779
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;progPIC18F26K40.c: 65: j = i;
  3092  000D56  C0EA  F0E9         	movff	PIC18F26K40_readThreeBytes@i,PIC18F26K40_readThreeBytes@j
  3093  000D5A  D003               	goto	l4781
  3094  000D5C                     l4779:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;progPIC18F26K40.c: 66: else
  3098                           ;progPIC18F26K40.c: 67: j = 22-i;
  3099  000D5C  51EA               	movf	PIC18F26K40_readThreeBytes@i& (0+255),w,b
  3100  000D5E  0816               	sublw	22
  3101  000D60  6FE9               	movwf	PIC18F26K40_readThreeBytes@j& (0+255),b
  3102  000D62                     l4781:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;progPIC18F26K40.c: 68: LATCbits.LATC5 = 1;
  3106  000D62  8A8B               	bsf	3979,5,c	;volatile
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;progPIC18F26K40.c: 69: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3110  000D64  D000               	nop2		;2 cycle nop
  3111  000D66  F000               	nop	
  3112                           
  3113                           ;progPIC18F26K40.c: 70: if (PORTCbits.RC6 == 1)
  3114  000D68  AC82               	btfss	3970,6,c	;volatile
  3115  000D6A  D01F               	goto	l4789
  3116                           
  3117                           ;progPIC18F26K40.c: 71: data.Val = data.Val | ((DWORD)(0x1<<j));
  3118  000D6C  C0E9  F0DD         	movff	PIC18F26K40_readThreeBytes@j,??_PIC18F26K40_readThreeBytes
  3119  000D70  0E01               	movlw	1
  3120  000D72  0100               	movlb	0	; () banked
  3121  000D74  6FDE               	movwf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),b
  3122  000D76  6BDF               	clrf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),b
  3123  000D78  2BDD               	incf	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  3124  000D7A  D003               	goto	u3704
  3125  000D7C                     u3705:
  3126  000D7C  90D8               	bcf	status,0,c
  3127  000D7E  37DE               	rlcf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),f,b
  3128  000D80  37DF               	rlcf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),f,b
  3129  000D82                     u3704:
  3130  000D82  2FDD               	decfsz	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  3131  000D84  D7FB               	goto	u3705
  3132  000D86  C0DE  F0E0         	movff	??_PIC18F26K40_readThreeBytes+1,??_PIC18F26K40_readThreeBytes+3
  3133  000D8A  C0DF  F0E1         	movff	??_PIC18F26K40_readThreeBytes+2,??_PIC18F26K40_readThreeBytes+4
  3134  000D8E  0E00               	movlw	0
  3135  000D90  0100               	movlb	0	; () banked
  3136  000D92  BFE1               	btfsc	(??_PIC18F26K40_readThreeBytes+4)& (0+255),7,b
  3137  000D94  0EFF               	movlw	255
  3138  000D96  6FE2               	movwf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),b
  3139  000D98  6FE3               	movwf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),b
  3140  000D9A  51E0               	movf	(??_PIC18F26K40_readThreeBytes+3)& (0+255),w,b
  3141  000D9C  13E5               	iorwf	PIC18F26K40_readThreeBytes@data& (0+255),f,b
  3142  000D9E  51E1               	movf	(??_PIC18F26K40_readThreeBytes+4)& (0+255),w,b
  3143  000DA0  13E6               	iorwf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),f,b
  3144  000DA2  51E2               	movf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),w,b
  3145  000DA4  13E7               	iorwf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),f,b
  3146  000DA6  51E3               	movf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),w,b
  3147  000DA8  13E8               	iorwf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),f,b
  3148  000DAA                     l4789:
  3149                           
  3150                           ;progPIC18F26K40.c: 72: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3151  000DAA  D000               	nop2		;2 cycle nop
  3152  000DAC  F000               	nop	
  3153                           
  3154                           ;progPIC18F26K40.c: 73: LATCbits.LATC5 = 0;
  3155  000DAE  9A8B               	bcf	3979,5,c	;volatile
  3156                           
  3157                           ;progPIC18F26K40.c: 74: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3158  000DB0  D000               	nop2		;2 cycle nop
  3159  000DB2  F000               	nop	
  3160  000DB4  0100               	movlb	0	; () banked
  3161  000DB6  2BEA               	incf	PIC18F26K40_readThreeBytes@i& (0+255),f,b
  3162                           
  3163                           ; BSR set to: 0
  3164  000DB8  0E16               	movlw	22
  3165  000DBA  65EA               	cpfsgt	PIC18F26K40_readThreeBytes@i& (0+255),b
  3166  000DBC  D7CA               	goto	l4775
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;progPIC18F26K40.c: 75: }
  3170                           ;progPIC18F26K40.c: 76: LATCbits.LATC5 = 1;
  3171  000DBE  8A8B               	bsf	3979,5,c	;volatile
  3172                           
  3173                           ;progPIC18F26K40.c: 77: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3174  000DC0  D000               	nop2		;2 cycle nop
  3175  000DC2  F000               	nop	
  3176                           
  3177                           ;progPIC18F26K40.c: 78: LATCbits.LATC5 = 0;
  3178  000DC4  9A8B               	bcf	3979,5,c	;volatile
  3179                           
  3180                           ;progPIC18F26K40.c: 79: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3181  000DC6  D000               	nop2		;2 cycle nop
  3182  000DC8  F000               	nop	
  3183                           
  3184                           ;progPIC18F26K40.c: 81: TRISCbits.TRISC6 = 0;
  3185  000DCA  9C94               	bcf	3988,6,c	;volatile
  3186                           
  3187                           ;progPIC18F26K40.c: 82: return data;
  3188  000DCC  C0E5  F0D9         	movff	PIC18F26K40_readThreeBytes@data,?_PIC18F26K40_readThreeBytes
  3189  000DD0  C0E6  F0DA         	movff	PIC18F26K40_readThreeBytes@data+1,?_PIC18F26K40_readThreeBytes+1
  3190  000DD4  C0E7  F0DB         	movff	PIC18F26K40_readThreeBytes@data+2,?_PIC18F26K40_readThreeBytes+2
  3191  000DD8  C0E8  F0DC         	movff	PIC18F26K40_readThreeBytes@data+3,?_PIC18F26K40_readThreeBytes+3
  3192  000DDC  0C16               	retlw	22	;funcret
  3193  000DDE                     __end_of_PIC18F26K40_readThreeBytes:
  3194                           	opt stack 0
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           prodh	equ	0xFF4
  3200                           prodl	equ	0xFF3
  3201                           intcon	equ	0xFF2
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           indf1	equ	0xFE7
  3205                           postdec1	equ	0xFE5
  3206                           fsr1h	equ	0xFE2
  3207                           fsr1l	equ	0xFE1
  3208                           indf2	equ	0xFDF
  3209                           postinc2	equ	0xFDE
  3210                           postdec2	equ	0xFDD
  3211                           plusw2	equ	0xFDB
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _PIC18F26K40_loadPC *****************
  3217 ;; Defined at:
  3218 ;;		line 86 in file "libs/progPIC18F26K40.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  address         4    6[BANK0 ] struct _DWORD_VAL
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  tempAddress     4   10[BANK0 ] struct _DWORD_VAL
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 3F/0
  3229 ;;		On exit  : 3F/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3232 ;;      Params:         0       4       0       0
  3233 ;;      Locals:         0       4       0       0
  3234 ;;      Temps:          0       0       0       0
  3235 ;;      Totals:         0       8       0       0
  3236 ;;Total ram usage:        8 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:   12
  3239 ;; This function calls:
  3240 ;;		_PIC18F26K40_sendByte
  3241 ;; This function is called by:
  3242 ;;		_APP_DeviceCDCBasicDemoTasks
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text12
  3247  0018D0                     __ptext12:
  3248                           	opt stack 0
  3249  0018D0                     _PIC18F26K40_loadPC:
  3250                           	opt stack 17
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;progPIC18F26K40.c: 87: DWORD_VAL tempAddress;
  3254                           ;progPIC18F26K40.c: 88: tempAddress.Val= (address.Val<<1);
  3255                           
  3256                           ;incstack = 0
  3257  0018D0  90D8               	bcf	status,0,c
  3258  0018D2  35D9               	rlcf	PIC18F26K40_loadPC@address& (0+255),w,b
  3259  0018D4  6FDD               	movwf	PIC18F26K40_loadPC@tempAddress& (0+255),b
  3260  0018D6  35DA               	rlcf	(PIC18F26K40_loadPC@address+1)& (0+255),w,b
  3261  0018D8  6FDE               	movwf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),b
  3262  0018DA  35DB               	rlcf	(PIC18F26K40_loadPC@address+2)& (0+255),w,b
  3263  0018DC  6FDF               	movwf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),b
  3264  0018DE  35DC               	rlcf	(PIC18F26K40_loadPC@address+3)& (0+255),w,b
  3265  0018E0  6FE0               	movwf	(PIC18F26K40_loadPC@tempAddress+3)& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;progPIC18F26K40.c: 89: tempAddress.bits.b0 = 0;
  3269  0018E2  91DD               	bcf	PIC18F26K40_loadPC@tempAddress& (0+255),0,b
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;progPIC18F26K40.c: 90: tempAddress.bits.b23 = 0;
  3273  0018E4  9FDF               	bcf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),7,b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;progPIC18F26K40.c: 91: PIC18F26K40_sendByte(0x80, MSBTOLSB);
  3277  0018E6  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3278  0018E8  0E80               	movlw	128
  3279  0018EA  EC59  F00B         	call	_PIC18F26K40_sendByte
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;progPIC18F26K40.c: 92: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3283  0018EE  D000               	nop2		;2 cycle nop
  3284  0018F0  F000               	nop	
  3285                           
  3286                           ;progPIC18F26K40.c: 93: PIC18F26K40_sendByte(tempAddress.v[2], MSBTOLSB);
  3287  0018F2  0100               	movlb	0	; () banked
  3288  0018F4  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3289  0018F6  51DF               	movf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),w,b
  3290  0018F8  EC59  F00B         	call	_PIC18F26K40_sendByte
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;progPIC18F26K40.c: 94: PIC18F26K40_sendByte(tempAddress.v[1], MSBTOLSB);
  3294  0018FC  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3295  0018FE  51DE               	movf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),w,b
  3296  001900  EC59  F00B         	call	_PIC18F26K40_sendByte
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;progPIC18F26K40.c: 95: PIC18F26K40_sendByte(tempAddress.v[0], MSBTOLSB);
  3300  001904  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3301  001906  51DD               	movf	PIC18F26K40_loadPC@tempAddress& (0+255),w,b
  3302  001908  EF59  F00B         	goto	_PIC18F26K40_sendByte
  3303  00190C                     __end_of_PIC18F26K40_loadPC:
  3304                           	opt stack 0
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           prodh	equ	0xFF4
  3310                           prodl	equ	0xFF3
  3311                           intcon	equ	0xFF2
  3312                           postinc0	equ	0xFEE
  3313                           wreg	equ	0xFE8
  3314                           indf1	equ	0xFE7
  3315                           postdec1	equ	0xFE5
  3316                           fsr1h	equ	0xFE2
  3317                           fsr1l	equ	0xFE1
  3318                           indf2	equ	0xFDF
  3319                           postinc2	equ	0xFDE
  3320                           postdec2	equ	0xFDD
  3321                           plusw2	equ	0xFDB
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326 ;; *************** function _PIC18F26K40_loadDataIntoNVM *****************
  3327 ;; Defined at:
  3328 ;;		line 98 in file "libs/progPIC18F26K40.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  data            4    4[BANK0 ] struct _DWORD_VAL
  3331 ;;  IncreasePC      1    8[BANK0 ] enum E4064
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  tempData        4   10[BANK0 ] struct _DWORD_VAL
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 3F/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3343 ;;      Params:         0       5       0       0
  3344 ;;      Locals:         0       4       0       0
  3345 ;;      Temps:          0       1       0       0
  3346 ;;      Totals:         0      10       0       0
  3347 ;;Total ram usage:       10 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:   12
  3350 ;; This function calls:
  3351 ;;		_PIC18F26K40_sendByteMsbToLsb
  3352 ;; This function is called by:
  3353 ;;		_APP_DeviceCDCBasicDemoTasks
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text13
  3358  001658                     __ptext13:
  3359                           	opt stack 0
  3360  001658                     _PIC18F26K40_loadDataIntoNVM:
  3361                           	opt stack 17
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;progPIC18F26K40.c: 99: DWORD_VAL tempData;
  3365                           ;progPIC18F26K40.c: 100: tempData.Val = (data.Val <<1 );
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;incstack = 0
  3369  001658  90D8               	bcf	status,0,c
  3370  00165A  35D7               	rlcf	PIC18F26K40_loadDataIntoNVM@data& (0+255),w,b
  3371  00165C  6FDD               	movwf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),b
  3372  00165E  35D8               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+1)& (0+255),w,b
  3373  001660  6FDE               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),b
  3374  001662  35D9               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+2)& (0+255),w,b
  3375  001664  6FDF               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),b
  3376  001666  35DA               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+3)& (0+255),w,b
  3377  001668  6FE0               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+3)& (0+255),b
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;progPIC18F26K40.c: 101: tempData.bits.b0 = 0;
  3381  00166A  91DD               	bcf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),0,b
  3382                           
  3383                           ;progPIC18F26K40.c: 102: if (IncreasePC==TRUE)
  3384  00166C  05DB               	decf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),w,b
  3385  00166E  E104               	bnz	l4821
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;progPIC18F26K40.c: 103: PIC18F26K40_sendByteMsbToLsb(0x02);
  3389  001670  0E02               	movlw	2
  3390  001672  ECFF  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3391  001676  D003               	goto	l4823
  3392  001678                     l4821:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;progPIC18F26K40.c: 104: else
  3396                           ;progPIC18F26K40.c: 105: PIC18F26K40_sendByteMsbToLsb(0x00);
  3397  001678  0E00               	movlw	0
  3398  00167A  ECFF  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3399  00167E                     l4823:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;progPIC18F26K40.c: 106: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3403  00167E  D000               	nop2		;2 cycle nop
  3404  001680  F000               	nop	
  3405                           
  3406                           ;progPIC18F26K40.c: 107: PIC18F26K40_sendByteMsbToLsb(tempData.v[2]);
  3407  001682  0100               	movlb	0	; () banked
  3408  001684  51DF               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),w,b
  3409  001686  ECFF  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3410                           
  3411                           ;progPIC18F26K40.c: 108: PIC18F26K40_sendByteMsbToLsb(tempData.v[1]);
  3412  00168A  51DE               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),w,b
  3413  00168C  ECFF  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3414                           
  3415                           ;progPIC18F26K40.c: 109: PIC18F26K40_sendByteMsbToLsb(tempData.v[0]);
  3416  001690  51DD               	movf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),w,b
  3417  001692  ECFF  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;progPIC18F26K40.c: 110: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3421  001696  D000               	nop2		;2 cycle nop
  3422  001698  F000               	nop	
  3423                           
  3424                           ;progPIC18F26K40.c: 112: PIC18F26K40_sendByteMsbToLsb(0xE0);
  3425  00169A  0EE0               	movlw	224
  3426  00169C  ECFF  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;progPIC18F26K40.c: 113: _delay((unsigned long)((10)*(12000000/4000.0)));
  3430  0016A0  0E27               	movlw	39
  3431  0016A2  0100               	movlb	0	; () banked
  3432  0016A4  6FDC               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3433  0016A6  0EF5               	movlw	245
  3434  0016A8                     u4197:
  3435  0016A8  2EE8               	decfsz	wreg,f,c
  3436  0016AA  D7FE               	bra	u4197
  3437  0016AC  2FDC               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3438  0016AE  D7FC               	bra	u4197
  3439  0016B0  0012               	return		;funcret
  3440  0016B2                     __end_of_PIC18F26K40_loadDataIntoNVM:
  3441                           	opt stack 0
  3442                           tblptru	equ	0xFF8
  3443                           tblptrh	equ	0xFF7
  3444                           tblptrl	equ	0xFF6
  3445                           tablat	equ	0xFF5
  3446                           prodh	equ	0xFF4
  3447                           prodl	equ	0xFF3
  3448                           intcon	equ	0xFF2
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           indf1	equ	0xFE7
  3452                           postdec1	equ	0xFE5
  3453                           fsr1h	equ	0xFE2
  3454                           fsr1l	equ	0xFE1
  3455                           indf2	equ	0xFDF
  3456                           postinc2	equ	0xFDE
  3457                           postdec2	equ	0xFDD
  3458                           plusw2	equ	0xFDB
  3459                           fsr2h	equ	0xFDA
  3460                           fsr2l	equ	0xFD9
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function _PIC18F26K40_sendByteMsbToLsb *****************
  3464 ;; Defined at:
  3465 ;;		line 125 in file "libs/progPIC18F26K40.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  info            1    wreg     unsigned char 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  info            1    2[BANK0 ] unsigned char 
  3470 ;;  i               1    3[BANK0 ] char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 3F/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3480 ;;      Params:         0       0       0       0
  3481 ;;      Locals:         0       2       0       0
  3482 ;;      Temps:          0       2       0       0
  3483 ;;      Totals:         0       4       0       0
  3484 ;;Total ram usage:        4 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:   11
  3487 ;; This function calls:
  3488 ;;		_PIC18F26K40_setTrisToOut
  3489 ;; This function is called by:
  3490 ;;		_PIC18F26K40_loadDataIntoNVM
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text14
  3495  0017FE                     __ptext14:
  3496                           	opt stack 0
  3497  0017FE                     _PIC18F26K40_sendByteMsbToLsb:
  3498                           	opt stack 17
  3499                           
  3500                           ;incstack = 0
  3501                           ;PIC18F26K40_sendByteMsbToLsb@info stored from wreg
  3502  0017FE  0100               	movlb	0	; () banked
  3503  001800  6FD5               	movwf	PIC18F26K40_sendByteMsbToLsb@info& (0+255),b
  3504                           
  3505                           ;progPIC18F26K40.c: 126: PIC18F26K40_setTrisToOut ();
  3506  001802  EC0E  F00E         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3507                           
  3508                           ;progPIC18F26K40.c: 127: for (INT8 i = 7; i >= 0; i--) {
  3509  001806  0E07               	movlw	7
  3510  001808  0100               	movlb	0	; () banked
  3511  00180A  6FD6               	movwf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),b
  3512  00180C                     l128:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;progPIC18F26K40.c: 128: LATCbits.LATC5 = 1;
  3516  00180C  8A8B               	bsf	3979,5,c	;volatile
  3517                           
  3518                           ;progPIC18F26K40.c: 129: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3519  00180E  D000               	nop2		;2 cycle nop
  3520  001810  F000               	nop	
  3521                           
  3522                           ;progPIC18F26K40.c: 130: if ((info >> i) & 0x01)
  3523  001812  C0D6  F0D3         	movff	PIC18F26K40_sendByteMsbToLsb@i,??_PIC18F26K40_sendByteMsbToLsb
  3524  001816  C0D5  F0D4         	movff	PIC18F26K40_sendByteMsbToLsb@info,??_PIC18F26K40_sendByteMsbToLsb+1
  3525  00181A  0100               	movlb	0	; () banked
  3526  00181C  2BD3               	incf	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3527  00181E  D002               	goto	u3614
  3528  001820                     u3615:
  3529  001820  90D8               	bcf	status,0,c
  3530  001822  33D4               	rrcf	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),f,b
  3531  001824                     u3614:
  3532  001824  2FD3               	decfsz	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3533  001826  D7FC               	goto	u3615
  3534  001828  0100               	movlb	0	; () banked
  3535  00182A  A1D4               	btfss	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),0,b
  3536  00182C  D002               	goto	l130
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;progPIC18F26K40.c: 131: LATCbits.LATC6 = 1;
  3540  00182E  8C8B               	bsf	3979,6,c	;volatile
  3541  001830  D001               	goto	l131
  3542  001832                     l130:
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;progPIC18F26K40.c: 132: else
  3546                           ;progPIC18F26K40.c: 133: LATCbits.LATC6 = 0;
  3547  001832  9C8B               	bcf	3979,6,c	;volatile
  3548  001834                     l131:
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;progPIC18F26K40.c: 134: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3552  001834  D000               	nop2		;2 cycle nop
  3553  001836  F000               	nop	
  3554                           
  3555                           ;progPIC18F26K40.c: 135: LATCbits.LATC5 = 0;
  3556  001838  9A8B               	bcf	3979,5,c	;volatile
  3557                           
  3558                           ;progPIC18F26K40.c: 136: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3559  00183A  D000               	nop2		;2 cycle nop
  3560  00183C  F000               	nop	
  3561  00183E  0100               	movlb	0	; () banked
  3562  001840  07D6               	decf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),f,b
  3563                           
  3564                           ; BSR set to: 0
  3565  001842  BFD6               	btfsc	PIC18F26K40_sendByteMsbToLsb@i& (0+255),7,b
  3566                           
  3567                           ; BSR set to: 0
  3568  001844  0012               	return		;funcret
  3569  001846  D7E2               	goto	l128
  3570  001848                     __end_of_PIC18F26K40_sendByteMsbToLsb:
  3571                           	opt stack 0
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           prodh	equ	0xFF4
  3577                           prodl	equ	0xFF3
  3578                           intcon	equ	0xFF2
  3579                           postinc0	equ	0xFEE
  3580                           wreg	equ	0xFE8
  3581                           indf1	equ	0xFE7
  3582                           postdec1	equ	0xFE5
  3583                           fsr1h	equ	0xFE2
  3584                           fsr1l	equ	0xFE1
  3585                           indf2	equ	0xFDF
  3586                           postinc2	equ	0xFDE
  3587                           postdec2	equ	0xFDD
  3588                           plusw2	equ	0xFDB
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _PIC18F26K40_exitLowVoltageProg *****************
  3594 ;; Defined at:
  3595 ;;		line 27 in file "libs/progPIC18F26K40.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		None
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3609 ;;      Params:         0       0       0       0
  3610 ;;      Locals:         0       0       0       0
  3611 ;;      Temps:          0       0       0       0
  3612 ;;      Totals:         0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:   10
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_APP_DeviceCDCBasicDemoTasks
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text15
  3624  001C12                     __ptext15:
  3625                           	opt stack 0
  3626  001C12                     _PIC18F26K40_exitLowVoltageProg:
  3627                           	opt stack 19
  3628                           
  3629                           ;progPIC18F26K40.c: 28: TRISCbits.TRISC7 = 0;
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;incstack = 0
  3633  001C12  9E94               	bcf	3988,7,c	;volatile
  3634                           
  3635                           ;progPIC18F26K40.c: 29: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3636  001C14  D000               	nop2		;2 cycle nop
  3637  001C16  F000               	nop	
  3638                           
  3639                           ;progPIC18F26K40.c: 30: LATCbits.LATC7 = 1;
  3640  001C18  8E8B               	bsf	3979,7,c	;volatile
  3641  001C1A  0012               	return		;funcret
  3642  001C1C                     __end_of_PIC18F26K40_exitLowVoltageProg:
  3643                           	opt stack 0
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           intcon	equ	0xFF2
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           indf1	equ	0xFE7
  3654                           postdec1	equ	0xFE5
  3655                           fsr1h	equ	0xFE2
  3656                           fsr1l	equ	0xFE1
  3657                           indf2	equ	0xFDF
  3658                           postinc2	equ	0xFDE
  3659                           postdec2	equ	0xFDD
  3660                           plusw2	equ	0xFDB
  3661                           fsr2h	equ	0xFDA
  3662                           fsr2l	equ	0xFD9
  3663                           status	equ	0xFD8
  3664                           
  3665 ;; *************** function _PIC18F26K40_enterLowVoltageProg *****************
  3666 ;; Defined at:
  3667 ;;		line 10 in file "libs/progPIC18F26K40.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  code            4    6[BANK0 ] struct _DWORD_VAL
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 3F/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3681 ;;      Params:         0       0       0       0
  3682 ;;      Locals:         0       4       0       0
  3683 ;;      Temps:          0       0       0       0
  3684 ;;      Totals:         0       4       0       0
  3685 ;;Total ram usage:        4 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:   12
  3688 ;; This function calls:
  3689 ;;		_PIC18F26K40_sendByte
  3690 ;;		_PIC18F26K40_setTrisToOut
  3691 ;; This function is called by:
  3692 ;;		_APP_DeviceCDCBasicDemoTasks
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text16
  3697  001848                     __ptext16:
  3698                           	opt stack 0
  3699  001848                     _PIC18F26K40_enterLowVoltageProg:
  3700                           	opt stack 17
  3701                           
  3702                           ;progPIC18F26K40.c: 11: PIC18F26K40_setTrisToOut ();
  3703                           
  3704                           ;incstack = 0
  3705  001848  EC0E  F00E         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3706                           
  3707                           ;progPIC18F26K40.c: 12: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3708  00184C  D000               	nop2		;2 cycle nop
  3709  00184E  F000               	nop	
  3710                           
  3711                           ;progPIC18F26K40.c: 14: LATCbits.LATC7 = 0;
  3712  001850  9E8B               	bcf	3979,7,c	;volatile
  3713                           
  3714                           ;progPIC18F26K40.c: 15: LATCbits.LATC6 = 0;
  3715  001852  9C8B               	bcf	3979,6,c	;volatile
  3716                           
  3717                           ;progPIC18F26K40.c: 16: LATCbits.LATC5 = 0;
  3718  001854  9A8B               	bcf	3979,5,c	;volatile
  3719                           
  3720                           ;progPIC18F26K40.c: 17: (_delay((unsigned long)((250)*(12000000/4000000.0))));
  3721  001856  0EFA               	movlw	250
  3722  001858                     u4207:
  3723  001858  2EE8               	decfsz	wreg,f,c
  3724  00185A  D7FE               	bra	u4207
  3725                           
  3726                           ;progPIC18F26K40.c: 19: DWORD_VAL code;
  3727                           ;progPIC18F26K40.c: 20: code.Val = (0x4d434850);
  3728  00185C  0E50               	movlw	80
  3729  00185E  0100               	movlb	0	; () banked
  3730  001860  6FD9               	movwf	PIC18F26K40_enterLowVoltageProg@code& (0+255),b
  3731  001862  0E48               	movlw	72
  3732  001864  6FDA               	movwf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),b
  3733  001866  0E43               	movlw	67
  3734  001868  6FDB               	movwf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),b
  3735  00186A  0E4D               	movlw	77
  3736  00186C  6FDC               	movwf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),b
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;progPIC18F26K40.c: 21: PIC18F26K40_sendByte(code.v[3], MSBTOLSB);
  3740  00186E  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3741  001870  51DC               	movf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),w,b
  3742  001872  EC59  F00B         	call	_PIC18F26K40_sendByte
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;progPIC18F26K40.c: 22: PIC18F26K40_sendByte(code.v[2], MSBTOLSB);
  3746  001876  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3747  001878  51DB               	movf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),w,b
  3748  00187A  EC59  F00B         	call	_PIC18F26K40_sendByte
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;progPIC18F26K40.c: 23: PIC18F26K40_sendByte(code.v[1], MSBTOLSB);
  3752  00187E  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3753  001880  51DA               	movf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),w,b
  3754  001882  EC59  F00B         	call	_PIC18F26K40_sendByte
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;progPIC18F26K40.c: 24: PIC18F26K40_sendByte(code.v[0], MSBTOLSB);
  3758  001886  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3759  001888  51D9               	movf	PIC18F26K40_enterLowVoltageProg@code& (0+255),w,b
  3760  00188A  EF59  F00B         	goto	_PIC18F26K40_sendByte
  3761  00188E                     __end_of_PIC18F26K40_enterLowVoltageProg:
  3762                           	opt stack 0
  3763                           tblptru	equ	0xFF8
  3764                           tblptrh	equ	0xFF7
  3765                           tblptrl	equ	0xFF6
  3766                           tablat	equ	0xFF5
  3767                           prodh	equ	0xFF4
  3768                           prodl	equ	0xFF3
  3769                           intcon	equ	0xFF2
  3770                           postinc0	equ	0xFEE
  3771                           wreg	equ	0xFE8
  3772                           indf1	equ	0xFE7
  3773                           postdec1	equ	0xFE5
  3774                           fsr1h	equ	0xFE2
  3775                           fsr1l	equ	0xFE1
  3776                           indf2	equ	0xFDF
  3777                           postinc2	equ	0xFDE
  3778                           postdec2	equ	0xFDD
  3779                           plusw2	equ	0xFDB
  3780                           fsr2h	equ	0xFDA
  3781                           fsr2l	equ	0xFD9
  3782                           status	equ	0xFD8
  3783                           
  3784 ;; *************** function _PIC18F26K40_sendByte *****************
  3785 ;; Defined at:
  3786 ;;		line 33 in file "libs/progPIC18F26K40.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  info            1    wreg     unsigned char 
  3789 ;;  direction       1    0[BANK0 ] enum E4265
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  info            1    3[BANK0 ] unsigned char 
  3792 ;;  i               1    5[BANK0 ] unsigned char 
  3793 ;;  j               1    4[BANK0 ] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 3F/0
  3800 ;;		On exit  : 3F/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3803 ;;      Params:         0       1       0       0
  3804 ;;      Locals:         0       3       0       0
  3805 ;;      Temps:          0       2       0       0
  3806 ;;      Totals:         0       6       0       0
  3807 ;;Total ram usage:        6 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:   11
  3810 ;; This function calls:
  3811 ;;		_PIC18F26K40_setTrisToOut
  3812 ;; This function is called by:
  3813 ;;		_PIC18F26K40_enterLowVoltageProg
  3814 ;;		_PIC18F26K40_readThreeBytes
  3815 ;;		_PIC18F26K40_loadPC
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text17
  3820  0016B2                     __ptext17:
  3821                           	opt stack 0
  3822  0016B2                     _PIC18F26K40_sendByte:
  3823                           	opt stack 17
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;incstack = 0
  3827                           ;PIC18F26K40_sendByte@info stored from wreg
  3828  0016B2  6FD6               	movwf	PIC18F26K40_sendByte@info& (0+255),b
  3829                           
  3830                           ;progPIC18F26K40.c: 34: PIC18F26K40_setTrisToOut ();
  3831  0016B4  EC0E  F00E         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3832                           
  3833                           ;progPIC18F26K40.c: 35: BYTE i, j;
  3834                           ;progPIC18F26K40.c: 36: for (i = 0; i < 8; i++) {
  3835  0016B8  0100               	movlb	0	; () banked
  3836  0016BA  6BD8               	clrf	PIC18F26K40_sendByte@i& (0+255),b
  3837  0016BC                     l4671:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;progPIC18F26K40.c: 37: if (direction)
  3841  0016BC  51D3               	movf	PIC18F26K40_sendByte@direction& (0+255),w,b
  3842  0016BE  E003               	bz	l4675
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;progPIC18F26K40.c: 38: j = i;
  3846  0016C0  C0D8  F0D7         	movff	PIC18F26K40_sendByte@i,PIC18F26K40_sendByte@j
  3847  0016C4  D003               	goto	l4677
  3848  0016C6                     l4675:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;progPIC18F26K40.c: 39: else
  3852                           ;progPIC18F26K40.c: 40: j = 7-i;
  3853  0016C6  51D8               	movf	PIC18F26K40_sendByte@i& (0+255),w,b
  3854  0016C8  0807               	sublw	7
  3855  0016CA  6FD7               	movwf	PIC18F26K40_sendByte@j& (0+255),b
  3856  0016CC                     l4677:
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;progPIC18F26K40.c: 41: LATCbits.LATC5 = 1;
  3860  0016CC  8A8B               	bsf	3979,5,c	;volatile
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;progPIC18F26K40.c: 42: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3864  0016CE  D000               	nop2		;2 cycle nop
  3865  0016D0  F000               	nop	
  3866                           
  3867                           ;progPIC18F26K40.c: 43: if ((info >> j) & 0x01)
  3868  0016D2  C0D7  F0D4         	movff	PIC18F26K40_sendByte@j,??_PIC18F26K40_sendByte
  3869  0016D6  C0D6  F0D5         	movff	PIC18F26K40_sendByte@info,??_PIC18F26K40_sendByte+1
  3870  0016DA  0100               	movlb	0	; () banked
  3871  0016DC  2BD4               	incf	??_PIC18F26K40_sendByte& (0+255),f,b
  3872  0016DE  D002               	goto	u3584
  3873  0016E0                     u3585:
  3874  0016E0  90D8               	bcf	status,0,c
  3875  0016E2  33D5               	rrcf	(??_PIC18F26K40_sendByte+1)& (0+255),f,b
  3876  0016E4                     u3584:
  3877  0016E4  2FD4               	decfsz	??_PIC18F26K40_sendByte& (0+255),f,b
  3878  0016E6  D7FC               	goto	u3585
  3879  0016E8  0100               	movlb	0	; () banked
  3880  0016EA  A1D5               	btfss	(??_PIC18F26K40_sendByte+1)& (0+255),0,b
  3881  0016EC  D002               	goto	l105
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;progPIC18F26K40.c: 44: LATCbits.LATC6 = 1;
  3885  0016EE  8C8B               	bsf	3979,6,c	;volatile
  3886  0016F0  D001               	goto	l106
  3887  0016F2                     l105:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;progPIC18F26K40.c: 45: else
  3891                           ;progPIC18F26K40.c: 46: LATCbits.LATC6 = 0;
  3892  0016F2  9C8B               	bcf	3979,6,c	;volatile
  3893  0016F4                     l106:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;progPIC18F26K40.c: 47: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3897  0016F4  D000               	nop2		;2 cycle nop
  3898  0016F6  F000               	nop	
  3899                           
  3900                           ;progPIC18F26K40.c: 48: LATCbits.LATC5 = 0;
  3901  0016F8  9A8B               	bcf	3979,5,c	;volatile
  3902                           
  3903                           ;progPIC18F26K40.c: 49: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3904  0016FA  D000               	nop2		;2 cycle nop
  3905  0016FC  F000               	nop	
  3906  0016FE  0100               	movlb	0	; () banked
  3907  001700  2BD8               	incf	PIC18F26K40_sendByte@i& (0+255),f,b
  3908                           
  3909                           ; BSR set to: 0
  3910  001702  0E07               	movlw	7
  3911  001704  65D8               	cpfsgt	PIC18F26K40_sendByte@i& (0+255),b
  3912  001706  D7DA               	goto	l4671
  3913  001708  0C07               	retlw	7
  3914  00170A                     __end_of_PIC18F26K40_sendByte:
  3915                           	opt stack 0
  3916                           tblptru	equ	0xFF8
  3917                           tblptrh	equ	0xFF7
  3918                           tblptrl	equ	0xFF6
  3919                           tablat	equ	0xFF5
  3920                           prodh	equ	0xFF4
  3921                           prodl	equ	0xFF3
  3922                           intcon	equ	0xFF2
  3923                           postinc0	equ	0xFEE
  3924                           wreg	equ	0xFE8
  3925                           indf1	equ	0xFE7
  3926                           postdec1	equ	0xFE5
  3927                           fsr1h	equ	0xFE2
  3928                           fsr1l	equ	0xFE1
  3929                           indf2	equ	0xFDF
  3930                           postinc2	equ	0xFDE
  3931                           postdec2	equ	0xFDD
  3932                           plusw2	equ	0xFDB
  3933                           fsr2h	equ	0xFDA
  3934                           fsr2l	equ	0xFD9
  3935                           status	equ	0xFD8
  3936                           
  3937 ;; *************** function _PIC18F26K40_setTrisToOut *****************
  3938 ;; Defined at:
  3939 ;;		line 4 in file "libs/progPIC18F26K40.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		None
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3953 ;;      Params:         0       0       0       0
  3954 ;;      Locals:         0       0       0       0
  3955 ;;      Temps:          0       0       0       0
  3956 ;;      Totals:         0       0       0       0
  3957 ;;Total ram usage:        0 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:   10
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_PIC18F26K40_enterLowVoltageProg
  3964 ;;		_PIC18F26K40_sendByte
  3965 ;;		_PIC18F26K40_sendByteMsbToLsb
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text18
  3970  001C1C                     __ptext18:
  3971                           	opt stack 0
  3972  001C1C                     _PIC18F26K40_setTrisToOut:
  3973                           	opt stack 17
  3974                           
  3975                           ;progPIC18F26K40.c: 5: TRISCbits.TRISC7 = 0;
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;incstack = 0
  3979  001C1C  9E94               	bcf	3988,7,c	;volatile
  3980                           
  3981                           ;progPIC18F26K40.c: 6: TRISCbits.TRISC6 = 0;
  3982  001C1E  9C94               	bcf	3988,6,c	;volatile
  3983                           
  3984                           ;progPIC18F26K40.c: 7: TRISCbits.TRISC5 = 0;
  3985  001C20  9A94               	bcf	3988,5,c	;volatile
  3986  001C22  0012               	return		;funcret
  3987  001C24                     __end_of_PIC18F26K40_setTrisToOut:
  3988                           	opt stack 0
  3989                           tblptru	equ	0xFF8
  3990                           tblptrh	equ	0xFF7
  3991                           tblptrl	equ	0xFF6
  3992                           tablat	equ	0xFF5
  3993                           prodh	equ	0xFF4
  3994                           prodl	equ	0xFF3
  3995                           intcon	equ	0xFF2
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           indf1	equ	0xFE7
  3999                           postdec1	equ	0xFE5
  4000                           fsr1h	equ	0xFE2
  4001                           fsr1l	equ	0xFE1
  4002                           indf2	equ	0xFDF
  4003                           postinc2	equ	0xFDE
  4004                           postdec2	equ	0xFDD
  4005                           plusw2	equ	0xFDB
  4006                           fsr2h	equ	0xFDA
  4007                           fsr2l	equ	0xFD9
  4008                           status	equ	0xFD8
  4009                           
  4010 ;; *************** function _CDCTxService *****************
  4011 ;; Defined at:
  4012 ;;		line 836 in file "picLibs/usb_device_cdc.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  4017 ;;  i               1    9[BANK0 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 3F/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4027 ;;      Params:         0       0       0       0
  4028 ;;      Locals:         0       2       0       0
  4029 ;;      Temps:          0       0       0       0
  4030 ;;      Totals:         0       2       0       0
  4031 ;;Total ram usage:        2 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:   11
  4034 ;; This function calls:
  4035 ;;		_USBTransferOnePacket
  4036 ;; This function is called by:
  4037 ;;		_APP_DeviceCDCBasicDemoTasks
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text19
  4042  000900                     __ptext19:
  4043                           	opt stack 0
  4044  000900                     _CDCTxService:
  4045                           	opt stack 18
  4046                           
  4047                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  4048                           ;usb_device_cdc.c: 839: uint8_t i;
  4049                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  4050                           
  4051                           ;incstack = 0
  4052  000900  94A0               	bcf	4000,2,c	;volatile
  4053                           
  4054                           ;usb_device_cdc.c: 843: {};
  4055                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  4056  000902  0100               	movlb	0	; () banked
  4057  000904  5176               	movf	_CDCDataInHandle& (0+255),w,b
  4058  000906  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  4059  000908  E008               	bz	l4915
  4060                           
  4061                           ; BSR set to: 0
  4062  00090A  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
  4063  00090E  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  4064  000912  AEDF               	btfss	indf2,7,c
  4065  000914  D002               	goto	l4915
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;usb_device_cdc.c: 846: {
  4069                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  4070  000916  84A0               	bsf	4000,2,c	;volatile
  4071                           
  4072                           ;usb_device_cdc.c: 848: return;
  4073  000918  0012               	return	
  4074  00091A                     l4915:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;usb_device_cdc.c: 849: }
  4078                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  4079  00091A  0E03               	movlw	3
  4080  00091C  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  4081  00091E  E101               	bnz	l4919
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  4085  000920  6B80               	clrf	_cdc_trf_state& (0+255),b
  4086  000922                     l4919:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  4090  000922  5180               	movf	_cdc_trf_state& (0+255),w,b
  4091  000924  E102               	bnz	l4923
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;usb_device_cdc.c: 863: {
  4095                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  4096  000926  84A0               	bsf	4000,2,c	;volatile
  4097                           
  4098                           ;usb_device_cdc.c: 865: return;
  4099  000928  0012               	return	
  4100  00092A                     l4923:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;usb_device_cdc.c: 866: }
  4104                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  4105  00092A  0E02               	movlw	2
  4106  00092C  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  4107  00092E  E10D               	bnz	l4929
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;usb_device_cdc.c: 872: {
  4111                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  4112  000930  0E01               	movlw	1
  4113  000932  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  4114  000934  0E00               	movlw	0
  4115  000936  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  4116  000938  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4117  00093A  6FD6               	movwf	USBTransferOnePacket@len& (0+255),b
  4118  00093C  0E02               	movlw	2
  4119  00093E  ECD3  F005         	call	_USBTransferOnePacket
  4120  000942  D856               	call	PL108	;call to abstracted procedure
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  4124  000944  0E03               	movlw	3
  4125  000946  6F80               	movwf	_cdc_trf_state& (0+255),b
  4126                           
  4127                           ;usb_device_cdc.c: 876: }
  4128  000948  D03E               	goto	l4973
  4129  00094A                     l4929:
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  4133  00094A  0580               	decf	_cdc_trf_state& (0+255),w,b
  4134  00094C  E13C               	bnz	l4973
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;usb_device_cdc.c: 878: {
  4138                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  4139  00094E  0E40               	movlw	64
  4140  000950  641B               	cpfsgt	_cdc_tx_len,c
  4141  000952  D002               	goto	l838
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  4145  000954  6FDD               	movwf	CDCTxService@byte_to_send& (0+255),b
  4146  000956  D002               	goto	l4935
  4147  000958                     l838:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;usb_device_cdc.c: 884: else
  4151                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  4152  000958  C01B  F0DD         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  4153  00095C                     l4935:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  4157  00095C  51DD               	movf	CDCTxService@byte_to_send& (0+255),w,b
  4158  00095E  5E1B               	subwf	_cdc_tx_len,f,c
  4159                           
  4160                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  4161  000960  0E40               	movlw	64
  4162  000962  6F6A               	movwf	_pCDCDst& (0+255),b
  4163  000964  0E02               	movlw	2
  4164  000966  6F6B               	movwf	(_pCDCDst+1)& (0+255),b
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;usb_device_cdc.c: 894: i = byte_to_send;
  4168  000968  C0DD  F0DC         	movff	CDCTxService@byte_to_send,CDCTxService@i
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  4172  00096C  517C               	movf	_cdc_mem_type& (0+255),w,b
  4173  00096E  E00A               	bz	l4951
  4174  000970  D015               	goto	l4961
  4175  000972                     l4943:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;usb_device_cdc.c: 898: {
  4179                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  4180  000972  D82B               	call	PL52	;call to abstracted procedure
  4181  000974  64F7               	cpfsgt	tblptrh,c
  4182  000976  D003               	bra	u3927
  4183  000978  0008               	tblrd		*
  4184  00097A  50F5               	movf	tablat,w,c
  4185  00097C  D002               	bra	u3920
  4186  00097E                     u3927:
  4187  00097E  ECB7  F005         	call	PL18	;call to abstracted procedure
  4188  000982                     u3920:
  4189                           
  4190                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;usb_device_cdc.c: 902: i--;
  4197  000982  D82E               	call	PL70	;call to abstracted procedure
  4198  000984                     l4951:
  4199                           
  4200                           ; BSR set to: 0
  4201  000984  51DC               	movf	CDCTxService@i& (0+255),w,b
  4202  000986  E00C               	bz	l4963
  4203  000988  D7F4               	goto	l4943
  4204  00098A                     l4953:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;usb_device_cdc.c: 908: {
  4208                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  4209  00098A  D81F               	call	PL52	;call to abstracted procedure
  4210  00098C  64F7               	cpfsgt	tblptrh,c
  4211  00098E  D003               	bra	u3947
  4212  000990  0008               	tblrd		*
  4213  000992  50F5               	movf	tablat,w,c
  4214  000994  D002               	bra	u3940
  4215  000996                     u3947:
  4216  000996  ECB7  F005         	call	PL18	;call to abstracted procedure
  4217  00099A                     u3940:
  4218                           
  4219                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;usb_device_cdc.c: 912: i--;
  4226  00099A  D822               	call	PL70	;call to abstracted procedure
  4227  00099C                     l4961:
  4228                           
  4229                           ; BSR set to: 0
  4230  00099C  51DC               	movf	CDCTxService@i& (0+255),w,b
  4231  00099E  E1F5               	bnz	l4953
  4232  0009A0                     l4963:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;usb_device_cdc.c: 913: }
  4236                           ;usb_device_cdc.c: 914: }
  4237                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  4238  0009A0  501B               	movf	_cdc_tx_len,w,c
  4239  0009A2  E106               	bnz	l4971
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;usb_device_cdc.c: 921: {
  4243                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  4244  0009A4  0E40               	movlw	64
  4245  0009A6  19DD               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  4249  0009A8  0E02               	movlw	2
  4250  0009AA  A4D8               	btfss	status,2,c
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;usb_device_cdc.c: 924: else
  4254                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  4255  0009AC  0E03               	movlw	3
  4256  0009AE  6F80               	movwf	_cdc_trf_state& (0+255),b
  4257  0009B0                     l4971:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;usb_device_cdc.c: 926: }
  4261                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4262  0009B0  0E01               	movlw	1
  4263  0009B2  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  4264  0009B4  0E40               	movlw	64
  4265  0009B6  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  4266  0009B8  0E02               	movlw	2
  4267  0009BA  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4268  0009BC  C0DD  F0D6         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  4269  0009C0  ECD3  F005         	call	_USBTransferOnePacket
  4270  0009C4  D815               	call	PL108	;call to abstracted procedure
  4271  0009C6                     l4973:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;usb_device_cdc.c: 929: }
  4275                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  4276  0009C6  84A0               	bsf	4000,2,c	;volatile
  4277                           
  4278                           ; BSR set to: 0
  4279  0009C8  0012               	return		;funcret
  4280  0009CA                     __end_of_CDCTxService:
  4281                           	opt stack 0
  4282  0009CA                     PL52:
  4283                           	opt stack 18
  4284  0009CA  C06D  FFF6         	movff	_pCDCSrc,tblptrl
  4285  0009CE  C06E  FFF7         	movff	_pCDCSrc+1,tblptrh
  4286  0009D2  6AF8               	clrf	tblptru,c
  4287  0009D4  C06A  FFD9         	movff	_pCDCDst,fsr2l
  4288  0009D8  C06B  FFDA         	movff	_pCDCDst+1,fsr2h
  4289  0009DC  0E02               	movlw	(high __ramtop+-1)
  4290  0009DE  0012               	return	
  4291  0009E0                     __end_ofPL52:
  4292                           	opt stack 0
  4293  0009E0                     PL70:
  4294                           	opt stack 18
  4295  0009E0  6EDF               	movwf	indf2,c
  4296  0009E2  0100               	movlb	0	; () banked
  4297  0009E4  4B6A               	infsnz	_pCDCDst& (0+255),f,b
  4298  0009E6  2B6B               	incf	(_pCDCDst+1)& (0+255),f,b
  4299  0009E8  4B6D               	infsnz	_pCDCSrc& (0+255),f,b
  4300  0009EA  2B6E               	incf	(_pCDCSrc+1)& (0+255),f,b
  4301  0009EC  07DC               	decf	CDCTxService@i& (0+255),f,b
  4302  0009EE  0012               	return	
  4303  0009F0                     __end_ofPL70:
  4304                           	opt stack 0
  4305  0009F0                     PL108:
  4306                           	opt stack 18
  4307  0009F0  C0D3  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4308  0009F4  C0D4  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4309  0009F8  0012               	return	
  4310  0009FA                     __end_ofPL108:
  4311                           	opt stack 0
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           intcon	equ	0xFF2
  4319                           postinc0	equ	0xFEE
  4320                           wreg	equ	0xFE8
  4321                           indf1	equ	0xFE7
  4322                           postdec1	equ	0xFE5
  4323                           fsr1h	equ	0xFE2
  4324                           fsr1l	equ	0xFE1
  4325                           indf2	equ	0xFDF
  4326                           postinc2	equ	0xFDE
  4327                           postdec2	equ	0xFDD
  4328                           plusw2	equ	0xFDB
  4329                           fsr2h	equ	0xFDA
  4330                           fsr2l	equ	0xFD9
  4331                           status	equ	0xFD8
  4332                           
  4333 ;; *************** function _USBTransferOnePacket *****************
  4334 ;; Defined at:
  4335 ;;		line 995 in file "picLibs/usb_device.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  ep              1    wreg     unsigned char 
  4338 ;;  dir             1    0[BANK0 ] unsigned char 
  4339 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4340 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4341 ;;  len             1    3[BANK0 ] unsigned char 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  ep              1    6[BANK0 ] unsigned char 
  4344 ;;  handle          2    7[BANK0 ] PTR volatile struct __BD
  4345 ;;		 -> RAM(767), NULL(0), BDT(48), 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  2    0[BANK0 ] PTR void 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4350 ;; Tracked objects:
  4351 ;;		On entry : 3F/0
  4352 ;;		On exit  : 3F/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4355 ;;      Params:         0       4       0       0
  4356 ;;      Locals:         0       3       0       0
  4357 ;;      Temps:          0       2       0       0
  4358 ;;      Totals:         0       9       0       0
  4359 ;;Total ram usage:        9 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:   10
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_getsUSBUSART
  4366 ;;		_CDCTxService
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text20
  4371  000BA6                     __ptext20:
  4372                           	opt stack 0
  4373  000BA6                     _USBTransferOnePacket:
  4374                           	opt stack 18
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;incstack = 0
  4378                           ;USBTransferOnePacket@ep stored from wreg
  4379  000BA6  6FD9               	movwf	USBTransferOnePacket@ep& (0+255),b
  4380                           
  4381                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4382                           ;usb_device.c: 1000: if(dir != 0)
  4383  000BA8  0100               	movlb	0	; () banked
  4384  000BAA  51D3               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4385  000BAC  E004               	bz	l4709
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;usb_device.c: 1001: {
  4389                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4390  000BAE  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4391  000BB0  EC39  F007         	call	PL92	;call to abstracted procedure
  4392  000BB4  D003               	goto	L2
  4393  000BB6                     l4709:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;usb_device.c: 1005: else
  4397                           ;usb_device.c: 1006: {
  4398                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4399  000BB6  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4400  000BB8  EC42  F007         	call	PL100	;call to abstracted procedure
  4401  000BBC                     L2:
  4402  000BBC  6ED9               	movwf	fsr2l,c
  4403  000BBE  6ADA               	clrf	fsr2h,c
  4404  000BC0  CFDE F0DA          	movff	postinc2,USBTransferOnePacket@handle
  4405  000BC4  CFDD F0DB          	movff	postdec2,USBTransferOnePacket@handle+1
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;usb_device.c: 1009: }
  4409                           ;usb_device.c: 1013: if(handle == 0)
  4410  000BC8  51DA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4411  000BCA  11DB               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4412  000BCC  E103               	bnz	l4715
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;usb_device.c: 1014: {
  4416                           ;usb_device.c: 1015: return 0;
  4417  000BCE  6BD3               	clrf	?_USBTransferOnePacket& (0+255),b
  4418  000BD0  6BD4               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  4419  000BD2  0012               	return	
  4420  000BD4                     l4715:
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;usb_device.c: 1016: }
  4424                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4425  000BD4  EE20 F002          	lfsr	2,2
  4426  000BD8  D842               	call	PL118	;call to abstracted procedure
  4427  000BDA  C0D4  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4428  000BDE  C0D5  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4429                           
  4430                           ;usb_device.c: 1030: handle->CNT = len;
  4431  000BE2  EE20 F001          	lfsr	2,1
  4432  000BE6  D83B               	call	PL118	;call to abstracted procedure
  4433  000BE8  C0D6  FFDF         	movff	USBTransferOnePacket@len,indf2
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4437  000BEC  D833               	call	PL88	;call to abstracted procedure
  4438  000BEE  0E40               	movlw	64
  4439  000BF0  16DF               	andwf	indf2,f,c
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4443  000BF2  D830               	call	PL88	;call to abstracted procedure
  4444  000BF4  0E00               	movlw	0
  4445  000BF6  86DB               	bsf	plusw2,3,c
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4449  000BF8  D82D               	call	PL88	;call to abstracted procedure
  4450  000BFA  8EDB               	bsf	plusw2,7,c
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;usb_device.c: 1036: if(dir != 0)
  4454  000BFC  51D3               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4455  000BFE  E005               	bz	l4727
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;usb_device.c: 1037: {
  4459                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4460  000C00  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4461  000C02  D818               	call	PL34	;call to abstracted procedure
  4462  000C04  D81D               	call	PL56	;call to abstracted procedure
  4463  000C06  0F0F               	addlw	low _pBDTEntryIn
  4464  000C08  D004               	goto	L3
  4465  000C0A                     l4727:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;usb_device.c: 1041: else
  4469                           ;usb_device.c: 1042: {
  4470                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4471  000C0A  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4472  000C0C  D80D               	call	PL32	;call to abstracted procedure
  4473  000C0E  D818               	call	PL56	;call to abstracted procedure
  4474  000C10  0F60               	addlw	low _pBDTEntryOut
  4475  000C12                     L3:
  4476  000C12  6ED9               	movwf	fsr2l,c
  4477  000C14  6ADA               	clrf	fsr2h,c
  4478  000C16  C0D7  FFDE         	movff	??_USBTransferOnePacket,postinc2
  4479  000C1A  C0D8  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;usb_device.c: 1045: }
  4483                           ;usb_device.c: 1046: return (void*)handle;
  4484  000C1E  C0DA  F0D3         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4485  000C22  C0DB  F0D4         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4486                           
  4487                           ; BSR set to: 0
  4488  000C26  0012               	return		;funcret
  4489  000C28                     __end_of_USBTransferOnePacket:
  4490                           	opt stack 0
  4491  000C28                     PL32:
  4492                           	opt stack 19
  4493  000C28  0D02               	mullw	2
  4494  000C2A  50F3               	movf	prodl,w,c
  4495  000C2C  0F60               	addlw	low _pBDTEntryOut
  4496  000C2E  6ED9               	movwf	fsr2l,c
  4497  000C30  6ADA               	clrf	fsr2h,c
  4498  000C32  0012               	return	
  4499  000C34                     __end_ofPL32:
  4500                           	opt stack 0
  4501  000C34                     PL34:
  4502                           	opt stack 19
  4503  000C34  0D02               	mullw	2
  4504  000C36  50F3               	movf	prodl,w,c
  4505  000C38  0F0F               	addlw	low _pBDTEntryIn
  4506  000C3A  6ED9               	movwf	fsr2l,c
  4507  000C3C  6ADA               	clrf	fsr2h,c
  4508  000C3E  0012               	return	
  4509  000C40                     __end_ofPL34:
  4510                           	opt stack 0
  4511  000C40                     PL56:
  4512                           	opt stack 18
  4513  000C40  CFDE F0D7          	movff	postinc2,??_USBTransferOnePacket
  4514  000C44  CFDD F0D8          	movff	postdec2,??_USBTransferOnePacket+1
  4515  000C48  0E04               	movlw	4
  4516  000C4A  1BD7               	xorwf	??_USBTransferOnePacket& (0+255),f,b
  4517  000C4C  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4518  000C4E  0D02               	mullw	2
  4519  000C50  50F3               	movf	prodl,w,c
  4520  000C52  0012               	return	
  4521  000C54                     __end_ofPL56:
  4522                           	opt stack 0
  4523  000C54                     PL88:
  4524                           	opt stack 18
  4525  000C54  C0DA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4526  000C58  C0DB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4527  000C5C  0012               	return	
  4528  000C5E                     __end_ofPL88:
  4529                           	opt stack 0
  4530  000C5E                     PL118:
  4531                           	opt stack 18
  4532  000C5E  51DA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4533  000C60  26D9               	addwf	fsr2l,f,c
  4534  000C62  51DB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4535  000C64  22DA               	addwfc	fsr2h,f,c
  4536  000C66  0012               	return	
  4537  000C68                     __end_ofPL118:
  4538                           	opt stack 0
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           prodh	equ	0xFF4
  4544                           prodl	equ	0xFF3
  4545                           intcon	equ	0xFF2
  4546                           postinc0	equ	0xFEE
  4547                           wreg	equ	0xFE8
  4548                           indf1	equ	0xFE7
  4549                           postdec1	equ	0xFE5
  4550                           fsr1h	equ	0xFE2
  4551                           fsr1l	equ	0xFE1
  4552                           indf2	equ	0xFDF
  4553                           postinc2	equ	0xFDE
  4554                           postdec2	equ	0xFDD
  4555                           plusw2	equ	0xFDB
  4556                           fsr2h	equ	0xFDA
  4557                           fsr2l	equ	0xFD9
  4558                           status	equ	0xFD8
  4559                           
  4560 ;; *************** function _BUTTON_IsPressed *****************
  4561 ;; Defined at:
  4562 ;;		line 55 in file "picLibs/buttons.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  button          1    wreg     enum E3304
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  button          1    0[BANK0 ] enum E3304
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      unsigned char 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 3F/0
  4573 ;;		On exit  : 3F/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4576 ;;      Params:         0       0       0       0
  4577 ;;      Locals:         0       1       0       0
  4578 ;;      Temps:          0       0       0       0
  4579 ;;      Totals:         0       1       0       0
  4580 ;;Total ram usage:        1 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:   10
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_APP_DeviceCDCBasicDemoTasks
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text21
  4591  001BB6                     __ptext21:
  4592                           	opt stack 0
  4593  001BB6                     _BUTTON_IsPressed:
  4594                           	opt stack 19
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;incstack = 0
  4598                           ;BUTTON_IsPressed@button stored from wreg
  4599  001BB6  6FD3               	movwf	BUTTON_IsPressed@button& (0+255),b
  4600                           
  4601                           ;buttons.c: 57: switch(button)
  4602  001BB8  D003               	goto	l4837
  4603  001BBA                     l237:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4607  001BBA  A680               	btfss	3968,3,c	;volatile
  4608  001BBC  0C01               	retlw	1
  4609  001BBE  0C00               	retlw	0
  4610  001BC0                     l4837:
  4611  001BC0  0100               	movlb	0	; () banked
  4612  001BC2  51D3               	movf	BUTTON_IsPressed@button& (0+255),w,b
  4613                           
  4614                           ; Switch size 1, requested type "space"
  4615                           ; Number of cases is 2, Range of values is 0 to 1
  4616                           ; switch strategies available:
  4617                           ; Name         Instructions Cycles
  4618                           ; simple_byte            7     4 (average)
  4619                           ;	Chosen strategy is simple_byte
  4620  001BC4  B4D8               	btfsc	status,2,c
  4621  001BC6  0C00               	retlw	0
  4622  001BC8  0A01               	xorlw	1	; case 1
  4623  001BCA  A4D8               	btfss	status,2,c
  4624  001BCC  0C00               	retlw	0
  4625  001BCE  D7F5               	goto	l237
  4626  001BD0                     __end_of_BUTTON_IsPressed:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           postinc0	equ	0xFEE
  4636                           wreg	equ	0xFE8
  4637                           indf1	equ	0xFE7
  4638                           postdec1	equ	0xFE5
  4639                           fsr1h	equ	0xFE2
  4640                           fsr1l	equ	0xFE1
  4641                           indf2	equ	0xFDF
  4642                           postinc2	equ	0xFDE
  4643                           postdec2	equ	0xFDD
  4644                           plusw2	equ	0xFDB
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8
  4648                           
  4649 ;; *************** function _SYS_InterruptHigh *****************
  4650 ;; Defined at:
  4651 ;;		line 86 in file "picLibs/system.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4665 ;;      Params:         0       0       0       0
  4666 ;;      Locals:         0       0       0       0
  4667 ;;      Temps:         10       0       0       0
  4668 ;;      Totals:        10       0       0       0
  4669 ;;Total ram usage:       10 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    9
  4672 ;; This function calls:
  4673 ;;		_USBDeviceTasks
  4674 ;; This function is called by:
  4675 ;;		Interrupt level 2
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	intcode
  4680  000008                     __pintcode:
  4681                           	opt stack 0
  4682  000008                     _SYS_InterruptHigh:
  4683                           	opt stack 17
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;incstack = 0
  4687  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4688  00000A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh
  4689  00000E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+1
  4690  000012  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+2
  4691  000016  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+3
  4692  00001A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+4
  4693  00001E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+5
  4694  000022  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+6
  4695  000026  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+7
  4696  00002A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+8
  4697  00002E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+9
  4698                           
  4699                           ;system.c: 89: USBDeviceTasks();
  4700  000032  EC00  F004         	call	_USBDeviceTasks	;wreg free
  4701  000036  C051  FFF5         	movff	??_SYS_InterruptHigh+9,tablat
  4702  00003A  C050  FFF8         	movff	??_SYS_InterruptHigh+8,tblptru
  4703  00003E  C04F  FFF7         	movff	??_SYS_InterruptHigh+7,tblptrh
  4704  000042  C04E  FFF6         	movff	??_SYS_InterruptHigh+6,tblptrl
  4705  000046  C04D  FFF4         	movff	??_SYS_InterruptHigh+5,prodh
  4706  00004A  C04C  FFF3         	movff	??_SYS_InterruptHigh+4,prodl
  4707  00004E  C04B  FFDA         	movff	??_SYS_InterruptHigh+3,fsr2h
  4708  000052  C04A  FFD9         	movff	??_SYS_InterruptHigh+2,fsr2l
  4709  000056  C049  FFE2         	movff	??_SYS_InterruptHigh+1,fsr1h
  4710  00005A  C048  FFE1         	movff	??_SYS_InterruptHigh,fsr1l
  4711  00005E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4712  000060  0011               	retfie		f
  4713  000062                     __end_of_SYS_InterruptHigh:
  4714                           	opt stack 0
  4715                           tblptru	equ	0xFF8
  4716                           tblptrh	equ	0xFF7
  4717                           tblptrl	equ	0xFF6
  4718                           tablat	equ	0xFF5
  4719                           prodh	equ	0xFF4
  4720                           prodl	equ	0xFF3
  4721                           intcon	equ	0xFF2
  4722                           postinc0	equ	0xFEE
  4723                           wreg	equ	0xFE8
  4724                           indf1	equ	0xFE7
  4725                           postdec1	equ	0xFE5
  4726                           fsr1h	equ	0xFE2
  4727                           fsr1l	equ	0xFE1
  4728                           indf2	equ	0xFDF
  4729                           postinc2	equ	0xFDE
  4730                           postdec2	equ	0xFDD
  4731                           plusw2	equ	0xFDB
  4732                           fsr2h	equ	0xFDA
  4733                           fsr2l	equ	0xFD9
  4734                           status	equ	0xFD8
  4735                           
  4736 ;; *************** function _USBDeviceTasks *****************
  4737 ;; Defined at:
  4738 ;;		line 477 in file "picLibs/usb_device.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  i               1   29[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4752 ;;      Params:         0       0       0       0
  4753 ;;      Locals:         1       0       0       0
  4754 ;;      Temps:          0       0       0       0
  4755 ;;      Totals:         1       0       0       0
  4756 ;;Total ram usage:        1 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    8
  4759 ;; This function calls:
  4760 ;;		_USBCtrlEPAllowStatusStage
  4761 ;;		_USBCtrlEPService
  4762 ;;		_USBIncrement1msInternalTimers
  4763 ;;		_USBStallHandler
  4764 ;;		_USBSuspend
  4765 ;;		_USBWakeFromSuspend
  4766 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4767 ;;		i2_USBDeviceInit
  4768 ;; This function is called by:
  4769 ;;		_SYS_InterruptHigh
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text23
  4774  000800                     __ptext23:
  4775                           	opt stack 0
  4776  000800                     _USBDeviceTasks:
  4777                           	opt stack 17
  4778                           
  4779                           ;usb_device.c: 479: uint8_t i;
  4780                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4781                           
  4782                           ;incstack = 0
  4783  000800  0100               	movlb	0	; () banked
  4784  000802  0581               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4785  000804  E107               	bnz	i2l4423
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;usb_device.c: 591: {
  4789                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4790  000806  BA64               	btfsc	3940,5,c	;volatile
  4791  000808  D005               	goto	i2l4423
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;usb_device.c: 602: {
  4795                           ;usb_device.c: 608: {UIR = 0;};
  4796  00080A  6A62               	clrf	3938,c	;volatile
  4797                           
  4798                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4799  00080C  8060               	bsf	3936,0,c	;volatile
  4800                           
  4801                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4802  00080E  8860               	bsf	3936,4,c	;volatile
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4806  000810  0E02               	movlw	2
  4807  000812  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4808  000814                     i2l4423:
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;usb_device.c: 617: }
  4812                           ;usb_device.c: 618: }
  4813                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4814  000814  B462               	btfsc	3938,2,c	;volatile
  4815                           
  4816                           ; BSR set to: 0
  4817  000816  A460               	btfss	3936,2,c	;volatile
  4818  000818  D003               	goto	i2l4431
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;usb_device.c: 635: {
  4822                           ;usb_device.c: 636: (UIR &= 0xFB);
  4823  00081A  9462               	bcf	3938,2,c	;volatile
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;usb_device.c: 640: USBWakeFromSuspend();
  4827  00081C  EC82  F00D         	call	_USBWakeFromSuspend	;wreg free
  4828  000820                     i2l4431:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;usb_device.c: 642: }
  4832                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4833  000820  A264               	btfss	3940,1,c	;volatile
  4834  000822  D002               	goto	i2l485
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;usb_device.c: 648: {
  4838                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  4839  000824  94A1               	bcf	4001,2,c	;volatile
  4840                           
  4841                           ;usb_device.c: 650: return;
  4842  000826  0012               	return	
  4843  000828                     i2l485:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;usb_device.c: 651: }
  4847                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4848  000828  B062               	btfsc	3938,0,c	;volatile
  4849                           
  4850                           ; BSR set to: 0
  4851  00082A  A060               	btfss	3936,0,c	;volatile
  4852  00082C  D006               	goto	i2l4445
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;usb_device.c: 664: {
  4856                           ;usb_device.c: 665: USBDeviceInit();
  4857  00082E  ECFD  F004         	call	i2_USBDeviceInit	;wreg free
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4861  000832  84A0               	bsf	4000,2,c	;volatile
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4865  000834  0E04               	movlw	4
  4866  000836  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;usb_device.c: 681: (UIR &= 0xFE);
  4870  000838  9062               	bcf	3938,0,c	;volatile
  4871  00083A                     i2l4445:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;usb_device.c: 682: }
  4875                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4876  00083A  B862               	btfsc	3938,4,c	;volatile
  4877                           
  4878                           ; BSR set to: 0
  4879  00083C  A860               	btfss	3936,4,c	;volatile
  4880  00083E  D002               	goto	i2l4451
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;usb_device.c: 688: {
  4884                           ;usb_device.c: 694: USBSuspend();
  4885  000840  EC71  F00D         	call	_USBSuspend	;wreg free
  4886  000844                     i2l4451:
  4887                           
  4888                           ;usb_device.c: 696: }
  4889                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4890  000844  AC62               	btfss	3938,6,c	;volatile
  4891  000846  D013               	goto	i2l4469
  4892                           
  4893                           ;usb_device.c: 709: {
  4894                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4895  000848  AC60               	btfss	3936,6,c	;volatile
  4896  00084A  D007               	goto	i2l4457
  4897                           
  4898                           ;usb_device.c: 712: {
  4899                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4900  00084C  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4901  00084E  0E73               	movlw	115
  4902  000850  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4903  000852  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4904  000854  D850               	call	PL96	;call to abstracted procedure
  4905  000856  EC63  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4906  00085A                     i2l4457:
  4907                           
  4908                           ;usb_device.c: 714: }
  4909                           ;usb_device.c: 715: (UIR &= 0xBF);
  4910  00085A  9C62               	bcf	3938,6,c	;volatile
  4911                           
  4912                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4913  00085C  ECCD  F00D         	call	_USBIncrement1msInternalTimers	;wreg free
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4917  000860  5021               	movf	_USBStatusStageTimeoutCounter,w,c
  4918  000862  E001               	bz	i2l4465
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;usb_device.c: 736: {
  4922                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4923  000864  0621               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  4924  000866                     i2l4465:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;usb_device.c: 738: }
  4928                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4929  000866  5021               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4930  000868  E102               	bnz	i2l4469
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;usb_device.c: 745: {
  4934                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4935  00086A  EC48  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4936  00086E                     i2l4469:
  4937                           
  4938                           ;usb_device.c: 747: }
  4939                           ;usb_device.c: 749: }
  4940                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4941  00086E  BA62               	btfsc	3938,5,c	;volatile
  4942  000870  AA60               	btfss	3936,5,c	;volatile
  4943  000872  D002               	goto	i2l4475
  4944                           
  4945                           ;usb_device.c: 752: {
  4946                           ;usb_device.c: 753: USBStallHandler();
  4947  000874  ECBB  F00C         	call	_USBStallHandler	;wreg free
  4948  000878                     i2l4475:
  4949                           
  4950                           ;usb_device.c: 754: }
  4951                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4952  000878  B262               	btfsc	3938,1,c	;volatile
  4953  00087A  A260               	btfss	3936,1,c	;volatile
  4954  00087C  D009               	goto	i2l4483
  4955                           
  4956                           ;usb_device.c: 757: {
  4957                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4958  00087E  0E7F               	movlw	127
  4959  000880  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4960  000882  6836               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4961  000884  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4962  000886  D837               	call	PL96	;call to abstracted procedure
  4963  000888  EC63  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4964                           
  4965                           ;usb_device.c: 759: {UEIR = 0;};
  4966  00088C  010F               	movlb	15	; () banked
  4967  00088E  6B5F               	clrf	95,b	;volatile
  4968  000890                     i2l4483:
  4969                           
  4970                           ;usb_device.c: 767: }
  4971                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4972  000890  0E04               	movlw	4
  4973  000892  0100               	movlb	0	; () banked
  4974  000894  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4975  000896  D002               	goto	i2l495
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;usb_device.c: 775: {
  4979                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  4980  000898  94A1               	bcf	4001,2,c	;volatile
  4981                           
  4982                           ;usb_device.c: 777: return;
  4983  00089A  0C04               	retlw	4
  4984  00089C                     i2l495:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;usb_device.c: 778: }
  4988                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4989  00089C  A660               	btfss	3936,3,c	;volatile
  4990  00089E  D029               	goto	i2l496
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;usb_device.c: 784: {
  4994                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4995  0008A0  6A47               	clrf	USBDeviceTasks@i,c
  4996  0008A2                     i2l497:
  4997                           
  4998                           ;usb_device.c: 786: {
  4999                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  5000  0008A2  A662               	btfss	3938,3,c	;volatile
  5001  0008A4  D026               	goto	i2l496
  5002                           
  5003                           ;usb_device.c: 788: {
  5004                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  5005  0008A6  CF63 F028          	movff	3939,_USTATcopy	;volatile
  5006                           
  5007                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  5008  0008AA  3028               	rrcf	_USTATcopy,w,c	;volatile
  5009  0008AC  32E8               	rrcf	wreg,f,c
  5010  0008AE  32E8               	rrcf	wreg,f,c
  5011  0008B0  0B0F               	andlw	15
  5012  0008B2  6E23               	movwf	_endpoint_number,c	;volatile
  5013                           
  5014                           ;usb_device.c: 793: (UIR &= 0xF7);
  5015  0008B4  9662               	bcf	3938,3,c	;volatile
  5016                           
  5017                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  5018  0008B6  B428               	btfsc	_USTATcopy,2,c	;volatile
  5019  0008B8  D003               	goto	i2l4503
  5020                           
  5021                           ;usb_device.c: 799: {
  5022                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5023  0008BA  5023               	movf	_endpoint_number,w,c
  5024  0008BC  0F70               	addlw	low _ep_data_out
  5025  0008BE  D002               	goto	L4
  5026  0008C0                     i2l4503:
  5027                           
  5028                           ;usb_device.c: 802: else
  5029                           ;usb_device.c: 803: {
  5030                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5031  0008C0  5023               	movf	_endpoint_number,w,c
  5032  0008C2  0F73               	addlw	low _ep_data_in
  5033  0008C4                     L4:
  5034  0008C4  6ED9               	movwf	fsr2l,c
  5035  0008C6  6ADA               	clrf	fsr2h,c
  5036  0008C8  0100               	movlb	0	; () banked
  5037  0008CA  70DF               	btg	indf2,0,c
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;usb_device.c: 805: }
  5041                           ;usb_device.c: 810: if(endpoint_number == 0)
  5042  0008CC  5023               	movf	_endpoint_number,w,c	;volatile
  5043  0008CE  E103               	bnz	i2l4509
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;usb_device.c: 811: {
  5047                           ;usb_device.c: 812: USBCtrlEPService();
  5048  0008D0  ECBC  F009         	call	_USBCtrlEPService	;wreg free
  5049                           
  5050                           ;usb_device.c: 813: }
  5051  0008D4  D00A               	goto	i2l4511
  5052  0008D6                     i2l4509:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;usb_device.c: 814: else
  5056                           ;usb_device.c: 815: {
  5057                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5058  0008D6  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5059  0008D8  0E72               	movlw	114
  5060  0008DA  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5061  0008DC  0E28               	movlw	low _USTATcopy
  5062  0008DE  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5063  0008E0  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5064  0008E2  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5065  0008E4  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5066  0008E6  EC63  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5067  0008EA                     i2l4511:
  5068  0008EA  2A47               	incf	USBDeviceTasks@i,f,c
  5069  0008EC  0E03               	movlw	3
  5070  0008EE  6447               	cpfsgt	USBDeviceTasks@i,c
  5071  0008F0  D7D8               	goto	i2l497
  5072  0008F2                     i2l496:
  5073                           
  5074                           ;usb_device.c: 822: }
  5075                           ;usb_device.c: 823: }
  5076                           ;usb_device.c: 824: }
  5077                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  5078  0008F2  94A1               	bcf	4001,2,c	;volatile
  5079  0008F4  0012               	return		;funcret
  5080  0008F6                     __end_of_USBDeviceTasks:
  5081                           	opt stack 0
  5082  0008F6                     PL96:
  5083                           	opt stack 17
  5084  0008F6  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5085  0008F8  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5086  0008FA  0E01               	movlw	1
  5087  0008FC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5088  0008FE  0C01               	retlw	1
  5089  000900                     __end_ofPL96:
  5090                           	opt stack 0
  5091                           tblptru	equ	0xFF8
  5092                           tblptrh	equ	0xFF7
  5093                           tblptrl	equ	0xFF6
  5094                           tablat	equ	0xFF5
  5095                           prodh	equ	0xFF4
  5096                           prodl	equ	0xFF3
  5097                           intcon	equ	0xFF2
  5098                           postinc0	equ	0xFEE
  5099                           wreg	equ	0xFE8
  5100                           indf1	equ	0xFE7
  5101                           postdec1	equ	0xFE5
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           indf2	equ	0xFDF
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           plusw2	equ	0xFDB
  5108                           fsr2h	equ	0xFDA
  5109                           fsr2l	equ	0xFD9
  5110                           status	equ	0xFD8
  5111                           
  5112 ;; *************** function i2_USBDeviceInit *****************
  5113 ;; Defined at:
  5114 ;;		line 277 in file "picLibs/usb_device.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      void 
  5121 ;; Registers used:
  5122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 3F/0
  5125 ;;		On exit  : 3F/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5128 ;;      Params:         0       0       0       0
  5129 ;;      Locals:         1       0       0       0
  5130 ;;      Temps:          0       0       0       0
  5131 ;;      Totals:         1       0       0       0
  5132 ;;Total ram usage:        1 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    1
  5135 ;; This function calls:
  5136 ;;		i2_memset
  5137 ;; This function is called by:
  5138 ;;		_USBDeviceTasks
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text24
  5143  0009FA                     __ptext24:
  5144                           	opt stack 0
  5145  0009FA                     i2_USBDeviceInit:
  5146                           	opt stack 0
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;usb_device.c: 279: uint8_t i;
  5150                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5151                           
  5152                           ;incstack = 0
  5153                           
  5154                           ;usb_device.c: 285: ;
  5155                           ;usb_device.c: 288: {UEIR = 0;};
  5156                           
  5157                           ;usb_device.c: 291: {UIR = 0;};
  5158                           
  5159                           ;usb_device.c: 294: UEP0 = 0;
  5160  0009FA  D85C               	call	PL84	;call to abstracted procedure
  5161                           
  5162                           ; BSR set to: 15
  5163                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  5164  0009FC  ECE1  F007         	call	PL60	;call to abstracted procedure
  5165  000A00  EC5C  F00D         	call	i2_memset	;wreg free
  5166                           
  5167                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5168                           
  5169                           ; BSR set to: 15
  5170  000A04  ECB3  F00C         	call	PL38	;call to abstracted procedure
  5171                           
  5172                           ; BSR set to: 15
  5173                           ;usb_device.c: 301: ;
  5174                           ;usb_device.c: 304: ;
  5175                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5176  000A08  6A32               	clrf	i2USBDeviceInit@i,c
  5177  000A0A                     i2l4227:
  5178                           
  5179                           ;usb_device.c: 308: {
  5180                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5181  000A0A  5032               	movf	i2USBDeviceInit@i,w,c
  5182  000A0C  D847               	call	PL42	;call to abstracted procedure
  5183  000A0E  2A32               	incf	i2USBDeviceInit@i,f,c
  5184  000A10  0E0B               	movlw	11
  5185  000A12  6432               	cpfsgt	i2USBDeviceInit@i,c
  5186  000A14  D7FA               	goto	i2l4227
  5187                           
  5188                           ;usb_device.c: 310: }
  5189                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5190                           
  5191                           ;usb_device.c: 316: UADDR = 0x00;
  5192                           
  5193                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5194                           
  5195                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5196                           
  5197                           ;usb_device.c: 326: {
  5198                           ;usb_device.c: 327: (UIR &= 0xF7);
  5199                           
  5200                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5201                           
  5202                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5203                           
  5204                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5205                           
  5206                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5207                           
  5208                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5209                           
  5210                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5211                           
  5212                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5213                           
  5214                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5218  000A16  D82E               	call	PL22	;call to abstracted procedure
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5222  000A18  6A32               	clrf	i2USBDeviceInit@i,c
  5223  000A1A                     i2l4257:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;usb_device.c: 346: {
  5227                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5228  000A1A  5032               	movf	i2USBDeviceInit@i,w,c
  5229  000A1C  EC1A  F006         	call	PL34	;call to abstracted procedure
  5230  000A20  6ADE               	clrf	postinc2,c
  5231  000A22  6ADD               	clrf	postdec2,c
  5232                           
  5233                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5234  000A24  5032               	movf	i2USBDeviceInit@i,w,c
  5235  000A26  EC14  F006         	call	PL32	;call to abstracted procedure
  5236  000A2A  6ADE               	clrf	postinc2,c
  5237  000A2C  6ADD               	clrf	postdec2,c
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5241  000A2E  5032               	movf	i2USBDeviceInit@i,w,c
  5242  000A30  D84C               	call	PL98	;call to abstracted procedure
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5246  000A32  5032               	movf	i2USBDeviceInit@i,w,c
  5247  000A34  D845               	call	PL90	;call to abstracted procedure
  5248                           
  5249                           ; BSR set to: 0
  5250  000A36  2A32               	incf	i2USBDeviceInit@i,f,c
  5251                           
  5252                           ; BSR set to: 0
  5253  000A38  0E02               	movlw	2
  5254  000A3A  6432               	cpfsgt	i2USBDeviceInit@i,c
  5255  000A3C  D7EE               	goto	i2l4257
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;usb_device.c: 351: }
  5259                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5260  000A3E  0E08               	movlw	8
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5264                           
  5265                           ; BSR set to: 15
  5266                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  5267                           
  5268                           ; BSR set to: 2
  5269                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5270                           
  5271                           ; BSR set to: 2
  5272                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5273                           
  5274                           ; BSR set to: 2
  5275                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5276                           
  5277                           ; BSR set to: 2
  5278                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5279                           
  5280                           ; BSR set to: 2
  5281                           ;usb_device.c: 366: USB1msTickCount = 0;
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5288                           
  5289                           ; BSR set to: 0
  5290  000A40  D000               	goto	PL14	;call to abstracted procedure
  5291  000A42                     __end_ofi2_USBDeviceInit:
  5292                           	opt stack 0
  5293  000A42                     PL14:
  5294                           	opt stack 19
  5295  000A42  6E0F               	movwf	_pBDTEntryIn,c
  5296  000A44  0E02               	movlw	2
  5297  000A46  6E10               	movwf	_pBDTEntryIn+1,c
  5298  000A48  0E16               	movlw	22
  5299  000A4A  010F               	movlb	15	; () banked
  5300  000A4C  6F53               	movwf	83,b	;volatile
  5301  000A4E  0E02               	movlw	2
  5302  000A50  0102               	movlb	2	; () banked
  5303  000A52  6F03               	movwf	3,b	;volatile
  5304  000A54  0E30               	movlw	48
  5305  000A56  6F02               	movwf	2,b	;volatile
  5306  000A58  0E08               	movlw	8
  5307  000A5A  6F01               	movwf	1,b	;volatile
  5308  000A5C  0E04               	movlw	4
  5309  000A5E  6F00               	movwf	0,b	;volatile
  5310  000A60  8F00               	bsf	0,7,b	;volatile
  5311  000A62  6A29               	clrf	_USBActiveConfiguration,c	;volatile
  5312  000A64  0100               	movlb	0	; () banked
  5313  000A66  6B66               	clrf	_USB1msTickCount& (0+255),b	;volatile
  5314  000A68  6B67               	clrf	(_USB1msTickCount+1)& (0+255),b	;volatile
  5315  000A6A  6B68               	clrf	(_USB1msTickCount+2)& (0+255),b	;volatile
  5316  000A6C  6B69               	clrf	(_USB1msTickCount+3)& (0+255),b	;volatile
  5317  000A6E  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5318  000A70  6B81               	clrf	_USBDeviceState& (0+255),b	;volatile
  5319  000A72  0012               	return		;funcret
  5320  000A74                     __end_ofPL14:
  5321                           	opt stack 0
  5322  000A74                     PL22:
  5323                           	opt stack 19
  5324  000A74  8C64               	bsf	3940,6,c	;volatile
  5325  000A76  010F               	movlb	15	; () banked
  5326  000A78  6B5C               	clrf	92,b	;volatile
  5327  000A7A  9864               	bcf	3940,4,c	;volatile
  5328  000A7C  9C64               	bcf	3940,6,c	;volatile
  5329  000A7E                     l5153:
  5330  000A7E  9662               	bcf	3938,3,c	;volatile
  5331  000A80  6A0C               	clrf	_inPipes+3,c	;volatile
  5332  000A82  6A04               	clrf	_outPipes+3,c	;volatile
  5333  000A84  6A05               	clrf	_outPipes+4,c	;volatile
  5334  000A86  6A06               	clrf	_outPipes+5,c	;volatile
  5335  000A88  B662               	btfsc	3938,3,c	;volatile
  5336  000A8A  D7F9               	goto	l5153
  5337  000A8C  0E01               	movlw	1
  5338  000A8E  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5339  000A90  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5340  000A92  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5341  000A94  0100               	movlb	0	; () banked
  5342  000A96  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5343  000A98  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5344  000A9A  0012               	return	
  5345  000A9C                     __end_ofPL22:
  5346                           	opt stack 0
  5347  000A9C                     PL42:
  5348                           	opt stack 19
  5349  000A9C  0D04               	mullw	4
  5350  000A9E  0E00               	movlw	0
  5351  000AA0  24F3               	addwf	prodl,w,c
  5352  000AA2  6ED9               	movwf	fsr2l,c
  5353  000AA4  0E02               	movlw	2
  5354  000AA6  20F4               	addwfc	prodh,w,c
  5355  000AA8  6EDA               	movwf	fsr2h,c
  5356  000AAA  6ADE               	clrf	postinc2,c
  5357  000AAC  6ADE               	clrf	postinc2,c
  5358  000AAE  6ADE               	clrf	postinc2,c
  5359  000AB0  6ADD               	clrf	postdec2,c
  5360  000AB2  0012               	return	
  5361  000AB4                     __end_ofPL42:
  5362                           	opt stack 0
  5363  000AB4                     PL84:
  5364                           	opt stack 19
  5365  000AB4  94A0               	bcf	4000,2,c	;volatile
  5366  000AB6  010F               	movlb	15	; () banked
  5367  000AB8  6B5F               	clrf	95,b	;volatile
  5368  000ABA  6A62               	clrf	3938,c	;volatile
  5369  000ABC  6B53               	clrf	83,b	;volatile
  5370  000ABE  0012               	return	
  5371  000AC0                     __end_ofPL84:
  5372                           	opt stack 0
  5373  000AC0                     PL90:
  5374                           	opt stack 19
  5375  000AC0  0F70               	addlw	low _ep_data_out
  5376  000AC2  6ED9               	movwf	fsr2l,c
  5377  000AC4  6ADA               	clrf	fsr2h,c
  5378  000AC6  6ADF               	clrf	indf2,c
  5379  000AC8  0012               	return	
  5380  000ACA                     __end_ofPL90:
  5381                           	opt stack 0
  5382  000ACA                     PL98:
  5383                           	opt stack 19
  5384  000ACA  0F73               	addlw	low _ep_data_in
  5385  000ACC  6ED9               	movwf	fsr2l,c
  5386  000ACE  6ADA               	clrf	fsr2h,c
  5387  000AD0  6ADF               	clrf	indf2,c
  5388  000AD2  0012               	return	
  5389  000AD4                     __end_ofPL98:
  5390                           	opt stack 0
  5391                           tblptru	equ	0xFF8
  5392                           tblptrh	equ	0xFF7
  5393                           tblptrl	equ	0xFF6
  5394                           tablat	equ	0xFF5
  5395                           prodh	equ	0xFF4
  5396                           prodl	equ	0xFF3
  5397                           intcon	equ	0xFF2
  5398                           postinc0	equ	0xFEE
  5399                           wreg	equ	0xFE8
  5400                           indf1	equ	0xFE7
  5401                           postdec1	equ	0xFE5
  5402                           fsr1h	equ	0xFE2
  5403                           fsr1l	equ	0xFE1
  5404                           indf2	equ	0xFDF
  5405                           postinc2	equ	0xFDE
  5406                           postdec2	equ	0xFDD
  5407                           plusw2	equ	0xFDB
  5408                           fsr2h	equ	0xFDA
  5409                           fsr2l	equ	0xFD9
  5410                           status	equ	0xFD8
  5411                           
  5412 ;; *************** function _USBWakeFromSuspend *****************
  5413 ;; Defined at:
  5414 ;;		line 2303 in file "picLibs/usb_device.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 3F/0
  5425 ;;		On exit  : 3F/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5428 ;;      Params:         0       0       0       0
  5429 ;;      Locals:         0       0       0       0
  5430 ;;      Temps:          0       0       0       0
  5431 ;;      Totals:         0       0       0       0
  5432 ;;Total ram usage:        0 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    4
  5435 ;; This function calls:
  5436 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5437 ;; This function is called by:
  5438 ;;		_USBDeviceTasks
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text25
  5443  001B04                     __ptext25:
  5444                           	opt stack 0
  5445  001B04                     _USBWakeFromSuspend:
  5446                           	opt stack 20
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;incstack = 0
  5453  001B04  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5457  001B06  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5458  001B08  0E74               	movlw	116
  5459  001B0A  EC7C  F00D         	call	PL50	;call to abstracted procedure
  5460  001B0E  EC63  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5461                           
  5462                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5463  001B12  9264               	bcf	3940,1,c	;volatile
  5464                           
  5465                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5466  001B14  9460               	bcf	3936,2,c	;volatile
  5467                           
  5468                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5469  001B16  D001               	goto	i2l4153
  5470  001B18                     i2l4151:
  5471                           
  5472                           ;usb_device.c: 2343: {
  5473                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5474  001B18  9462               	bcf	3938,2,c	;volatile
  5475  001B1A                     i2l4153:
  5476  001B1A  B462               	btfsc	3938,2,c	;volatile
  5477  001B1C  D7FD               	goto	i2l4151
  5478                           
  5479                           ;usb_device.c: 2345: }
  5480                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5481  001B1E  0100               	movlb	0	; () banked
  5482  001B20  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5483                           
  5484                           ; BSR set to: 0
  5485  001B22  0012               	return		;funcret
  5486  001B24                     __end_of_USBWakeFromSuspend:
  5487                           	opt stack 0
  5488                           tblptru	equ	0xFF8
  5489                           tblptrh	equ	0xFF7
  5490                           tblptrl	equ	0xFF6
  5491                           tablat	equ	0xFF5
  5492                           prodh	equ	0xFF4
  5493                           prodl	equ	0xFF3
  5494                           intcon	equ	0xFF2
  5495                           postinc0	equ	0xFEE
  5496                           wreg	equ	0xFE8
  5497                           indf1	equ	0xFE7
  5498                           postdec1	equ	0xFE5
  5499                           fsr1h	equ	0xFE2
  5500                           fsr1l	equ	0xFE1
  5501                           indf2	equ	0xFDF
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           plusw2	equ	0xFDB
  5505                           fsr2h	equ	0xFDA
  5506                           fsr2l	equ	0xFD9
  5507                           status	equ	0xFD8
  5508                           
  5509 ;; *************** function _USBSuspend *****************
  5510 ;; Defined at:
  5511 ;;		line 2245 in file "picLibs/usb_device.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 3F/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5525 ;;      Params:         0       0       0       0
  5526 ;;      Locals:         0       0       0       0
  5527 ;;      Temps:          0       0       0       0
  5528 ;;      Totals:         0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    4
  5532 ;; This function calls:
  5533 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5534 ;; This function is called by:
  5535 ;;		_USBDeviceTasks
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text26
  5540  001AE2                     __ptext26:
  5541                           	opt stack 0
  5542  001AE2                     _USBSuspend:
  5543                           	opt stack 20
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;incstack = 0
  5550  001AE2  8460               	bsf	3936,2,c	;volatile
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5554  001AE4  9862               	bcf	3938,4,c	;volatile
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5558  001AE6  8264               	bsf	3940,1,c	;volatile
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5562  001AE8  0E01               	movlw	1
  5563  001AEA  6E24               	movwf	_USBBusIsSuspended,c	;volatile
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5567  001AEC  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5571  001AEE  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5572  001AF0  0E75               	movlw	117
  5573  001AF2  D802               	call	PL50	;call to abstracted procedure
  5574  001AF4  EF63  F00A         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5575  001AF8                     __end_of_USBSuspend:
  5576                           	opt stack 0
  5577  001AF8                     PL50:
  5578                           	opt stack 20
  5579  001AF8  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5580  001AFA  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5581  001AFC  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5582  001AFE  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5583  001B00  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5584  001B02  0012               	return	
  5585  001B04                     __end_ofPL50:
  5586                           	opt stack 0
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           intcon	equ	0xFF2
  5594                           postinc0	equ	0xFEE
  5595                           wreg	equ	0xFE8
  5596                           indf1	equ	0xFE7
  5597                           postdec1	equ	0xFE5
  5598                           fsr1h	equ	0xFE2
  5599                           fsr1l	equ	0xFE1
  5600                           indf2	equ	0xFDF
  5601                           postinc2	equ	0xFDE
  5602                           postdec2	equ	0xFDD
  5603                           plusw2	equ	0xFDB
  5604                           fsr2h	equ	0xFDA
  5605                           fsr2l	equ	0xFD9
  5606                           status	equ	0xFD8
  5607                           
  5608 ;; *************** function _USBStallHandler *****************
  5609 ;; Defined at:
  5610 ;;		line 2202 in file "picLibs/usb_device.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 3F/F
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5624 ;;      Params:         0       0       0       0
  5625 ;;      Locals:         0       0       0       0
  5626 ;;      Temps:          1       0       0       0
  5627 ;;      Totals:         1       0       0       0
  5628 ;;Total ram usage:        1 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_USBDeviceTasks
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text27
  5638  001976                     __ptext27:
  5639                           	opt stack 0
  5640  001976                     _USBStallHandler:
  5641                           	opt stack 24
  5642                           
  5643                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5644                           
  5645                           ;incstack = 0
  5646  001976  010F               	movlb	15	; () banked
  5647  001978  A153               	btfss	83,0,b	;volatile
  5648  00197A  D010               	goto	i2l635
  5649                           
  5650                           ; BSR set to: 15
  5651                           ;usb_device.c: 2215: {
  5652                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5653  00197C  D811               	call	PL36	;call to abstracted procedure
  5654  00197E  0E80               	movlw	128
  5655  001980  18DE               	xorwf	postinc2,w,c
  5656  001982  E10B               	bnz	i2l4187
  5657                           
  5658                           ; BSR set to: 15
  5659  001984  ECBA  F008         	call	PL16	;call to abstracted procedure
  5660  001988  0E84               	movlw	132
  5661  00198A  18DE               	xorwf	postinc2,w,c
  5662  00198C  E106               	bnz	i2l4187
  5663                           
  5664                           ; BSR set to: 15
  5665                           ;usb_device.c: 2218: {
  5666                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5667  00198E  D808               	call	PL36	;call to abstracted procedure
  5668  001990  0E0C               	movlw	12
  5669  001992  6EDF               	movwf	indf2,c
  5670                           
  5671                           ; BSR set to: 15
  5672                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5673  001994  D805               	call	PL36	;call to abstracted procedure
  5674  001996  0E00               	movlw	0
  5675  001998  8EDB               	bsf	plusw2,7,c
  5676  00199A                     i2l4187:
  5677                           
  5678                           ; BSR set to: 15
  5679                           ;usb_device.c: 2222: }
  5680                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5681  00199A  9153               	bcf	83,0,b	;volatile
  5682  00199C                     i2l635:
  5683                           
  5684                           ; BSR set to: 15
  5685                           ;usb_device.c: 2224: }
  5686                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5687  00199C  9A62               	bcf	3938,5,c	;volatile
  5688                           
  5689                           ; BSR set to: 15
  5690  00199E  0012               	return		;funcret
  5691  0019A0                     __end_of_USBStallHandler:
  5692                           	opt stack 0
  5693  0019A0                     PL36:
  5694                           	opt stack 24
  5695  0019A0  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5696  0019A4  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5697  0019A8  0012               	return	
  5698  0019AA                     __end_ofPL36:
  5699                           	opt stack 0
  5700                           tblptru	equ	0xFF8
  5701                           tblptrh	equ	0xFF7
  5702                           tblptrl	equ	0xFF6
  5703                           tablat	equ	0xFF5
  5704                           prodh	equ	0xFF4
  5705                           prodl	equ	0xFF3
  5706                           intcon	equ	0xFF2
  5707                           postinc0	equ	0xFEE
  5708                           wreg	equ	0xFE8
  5709                           indf1	equ	0xFE7
  5710                           postdec1	equ	0xFE5
  5711                           fsr1h	equ	0xFE2
  5712                           fsr1l	equ	0xFE1
  5713                           indf2	equ	0xFDF
  5714                           postinc2	equ	0xFDE
  5715                           postdec2	equ	0xFDD
  5716                           plusw2	equ	0xFDB
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8
  5720                           
  5721 ;; *************** function _USBIncrement1msInternalTimers *****************
  5722 ;; Defined at:
  5723 ;;		line 3025 in file "picLibs/usb_device.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;		None
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;		None
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 3F/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5737 ;;      Params:         0       0       0       0
  5738 ;;      Locals:         0       0       0       0
  5739 ;;      Temps:          0       0       0       0
  5740 ;;      Totals:         0       0       0       0
  5741 ;;Total ram usage:        0 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_USBDeviceTasks
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text28
  5751  001B9A                     __ptext28:
  5752                           	opt stack 0
  5753  001B9A                     _USBIncrement1msInternalTimers:
  5754                           	opt stack 24
  5755                           
  5756                           ;usb_device.c: 3033: USB1msTickCount++;
  5757                           
  5758                           ; BSR set to: 15
  5759                           ;incstack = 0
  5760  001B9A  0100               	movlb	0	; () banked
  5761  001B9C  2B66               	incf	_USB1msTickCount& (0+255),f,b	;volatile
  5762  001B9E  0E00               	movlw	0
  5763  001BA0  2367               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  5764  001BA2  2368               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  5765  001BA4  2369               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5769  001BA6  5024               	movf	_USBBusIsSuspended,w,c	;volatile
  5770  001BA8  A4D8               	btfss	status,2,c
  5771  001BAA  0012               	return	
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;usb_device.c: 3035: {
  5775                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5776  001BAC  2B7D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5780  001BAE  517D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  5781  001BB0  B4D8               	btfsc	status,2,c
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;usb_device.c: 3039: {
  5785                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5786  001BB2  697D               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5787                           
  5788                           ; BSR set to: 0
  5789  001BB4  0012               	return		;funcret
  5790  001BB6                     __end_of_USBIncrement1msInternalTimers:
  5791                           	opt stack 0
  5792                           tblptru	equ	0xFF8
  5793                           tblptrh	equ	0xFF7
  5794                           tblptrl	equ	0xFF6
  5795                           tablat	equ	0xFF5
  5796                           prodh	equ	0xFF4
  5797                           prodl	equ	0xFF3
  5798                           intcon	equ	0xFF2
  5799                           postinc0	equ	0xFEE
  5800                           wreg	equ	0xFE8
  5801                           indf1	equ	0xFE7
  5802                           postdec1	equ	0xFE5
  5803                           fsr1h	equ	0xFE2
  5804                           fsr1l	equ	0xFE1
  5805                           indf2	equ	0xFDF
  5806                           postinc2	equ	0xFDE
  5807                           postdec2	equ	0xFDD
  5808                           plusw2	equ	0xFDB
  5809                           fsr2h	equ	0xFDA
  5810                           fsr2l	equ	0xFD9
  5811                           status	equ	0xFD8
  5812                           
  5813 ;; *************** function _USBCtrlEPService *****************
  5814 ;; Defined at:
  5815 ;;		line 2372 in file "picLibs/usb_device.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;		None
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;		None
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      void 
  5822 ;; Registers used:
  5823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 3F/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5829 ;;      Params:         0       0       0       0
  5830 ;;      Locals:         0       0       0       0
  5831 ;;      Temps:          1       0       0       0
  5832 ;;      Totals:         1       0       0       0
  5833 ;;Total ram usage:        1 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    7
  5836 ;; This function calls:
  5837 ;;		_USBCtrlTrfInHandler
  5838 ;;		_USBCtrlTrfOutHandler
  5839 ;;		_USBCtrlTrfSetupHandler
  5840 ;;		_memcpy
  5841 ;; This function is called by:
  5842 ;;		_USBDeviceTasks
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text29
  5847  001378                     __ptext29:
  5848                           	opt stack 0
  5849  001378                     _USBCtrlEPService:
  5850                           	opt stack 17
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;incstack = 0
  5857  001378  0E2D               	movlw	45
  5858  00137A  6E21               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5862  00137C  C028  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5863  001380  0EFD               	movlw	253
  5864  001382  1646               	andwf	??_USBCtrlEPService,f,c
  5865  001384  E12A               	bnz	i2l4207
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;usb_device.c: 2383: {
  5869                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5870  001386  90D8               	bcf	status,0,c
  5871  001388  3028               	rrcf	_USTATcopy,w,c	;volatile
  5872  00138A  0B3F               	andlw	63
  5873  00138C  0D04               	mullw	4
  5874  00138E  0E00               	movlw	0
  5875  001390  24F3               	addwf	prodl,w,c
  5876  001392  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  5877  001394  0E02               	movlw	2
  5878  001396  20F4               	addwfc	prodh,w,c
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5882  001398  ECEB  F007         	call	PL102	;call to abstracted procedure
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5886  00139C  0E04               	movlw	4
  5887  00139E  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
  5888  0013A0  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5892  0013A2  ECD0  F00C         	call	PL36	;call to abstracted procedure
  5893  0013A6  30DF               	rrcf	indf2,w,c
  5894  0013A8  32E8               	rrcf	wreg,f,c
  5895  0013AA  0B0F               	andlw	15
  5896  0013AC  0A0D               	xorlw	13
  5897  0013AE  E002 EF92  F00D    	bnz	_USBCtrlTrfOutHandler
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;usb_device.c: 2400: {
  5901                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  5902  0013B4  0E30               	movlw	48
  5903  0013B6  6E2A               	movwf	memcpy@d1,c
  5904  0013B8  0E02               	movlw	2
  5905  0013BA  6E2B               	movwf	memcpy@d1+1,c
  5906  0013BC  EE20 F002          	lfsr	2,2
  5907  0013C0  EC7A  F009         	call	PL72	;call to abstracted procedure
  5908  0013C4  CFDE F02C          	movff	postinc2,memcpy@s1
  5909  0013C8  CFDD F02D          	movff	postdec2,memcpy@s1+1
  5910  0013CC  6A2F               	clrf	memcpy@n+1,c
  5911  0013CE  0E08               	movlw	8
  5912  0013D0  6E2E               	movwf	memcpy@n,c
  5913  0013D2  EC47  F00C         	call	_memcpy	;wreg free
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5917  0013D6  EFD9  F00B         	goto	_USBCtrlTrfSetupHandler	;wreg free
  5918  0013DA                     i2l4207:
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5922  0013DA  5028               	movf	_USTATcopy,w,c	;volatile
  5923  0013DC  0BFD               	andlw	253
  5924  0013DE  0A04               	xorlw	4
  5925  0013E0  B4D8               	btfsc	status,2,c
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;usb_device.c: 2417: {
  5929                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5930  0013E2  EC85  F008         	call	_USBCtrlTrfInHandler	;wreg free
  5931  0013E6  0012               	return		;funcret
  5932  0013E8                     __end_of_USBCtrlEPService:
  5933                           	opt stack 0
  5934                           tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           intcon	equ	0xFF2
  5941                           postinc0	equ	0xFEE
  5942                           wreg	equ	0xFE8
  5943                           indf1	equ	0xFE7
  5944                           postdec1	equ	0xFE5
  5945                           fsr1h	equ	0xFE2
  5946                           fsr1l	equ	0xFE1
  5947                           indf2	equ	0xFDF
  5948                           postinc2	equ	0xFDE
  5949                           postdec2	equ	0xFDD
  5950                           plusw2	equ	0xFDB
  5951                           fsr2h	equ	0xFDA
  5952                           fsr2l	equ	0xFD9
  5953                           status	equ	0xFD8
  5954                           
  5955 ;; *************** function _memcpy *****************
  5956 ;; Defined at:
  5957 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  d1              2    0[COMRAM] PTR void 
  5960 ;;		 -> SetupPkt(8), 
  5961 ;;  s1              2    2[COMRAM] PTR const void 
  5962 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5963 ;;  n               2    4[COMRAM] unsigned int 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5966 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5967 ;;  d               2    6[COMRAM] PTR unsigned char 
  5968 ;;		 -> SetupPkt(8), 
  5969 ;;  tmp             1   10[COMRAM] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  2    0[COMRAM] PTR void 
  5972 ;; Registers used:
  5973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5974 ;; Tracked objects:
  5975 ;;		On entry : 3F/0
  5976 ;;		On exit  : 3F/0
  5977 ;;		Unchanged: 3F/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5979 ;;      Params:         6       0       0       0
  5980 ;;      Locals:         5       0       0       0
  5981 ;;      Temps:          0       0       0       0
  5982 ;;      Totals:        11       0       0       0
  5983 ;;Total ram usage:       11 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_USBCtrlEPService
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text30
  5993  00188E                     __ptext30:
  5994                           	opt stack 0
  5995  00188E                     _memcpy:
  5996                           	opt stack 23
  5997                           
  5998                           ; BSR set to: 0
  5999                           
  6000                           ;incstack = 0
  6001  00188E  C02C  F032         	movff	memcpy@s1,memcpy@s
  6002  001892  C02D  F033         	movff	memcpy@s1+1,memcpy@s+1
  6003  001896  C02A  F030         	movff	memcpy@d1,memcpy@d
  6004  00189A  C02B  F031         	movff	memcpy@d1+1,memcpy@d+1
  6005  00189E  D010               	goto	i2l3817
  6006  0018A0                     i2l3809:
  6007                           
  6008                           ; BSR set to: 0
  6009  0018A0  C032  FFD9         	movff	memcpy@s,fsr2l
  6010  0018A4  C033  FFDA         	movff	memcpy@s+1,fsr2h
  6011  0018A8  50DF               	movf	indf2,w,c
  6012  0018AA  6E34               	movwf	memcpy@tmp,c
  6013                           
  6014                           ; BSR set to: 0
  6015  0018AC  4A32               	infsnz	memcpy@s,f,c
  6016  0018AE  2A33               	incf	memcpy@s+1,f,c
  6017                           
  6018                           ; BSR set to: 0
  6019  0018B0  C030  FFD9         	movff	memcpy@d,fsr2l
  6020  0018B4  C031  FFDA         	movff	memcpy@d+1,fsr2h
  6021  0018B8  C034  FFDF         	movff	memcpy@tmp,indf2
  6022                           
  6023                           ; BSR set to: 0
  6024  0018BC  4A30               	infsnz	memcpy@d,f,c
  6025  0018BE  2A31               	incf	memcpy@d+1,f,c
  6026  0018C0                     i2l3817:
  6027                           
  6028                           ; BSR set to: 0
  6029  0018C0  062E               	decf	memcpy@n,f,c
  6030  0018C2  A0D8               	btfss	status,0,c
  6031  0018C4  062F               	decf	memcpy@n+1,f,c
  6032  0018C6  282E               	incf	memcpy@n,w,c
  6033  0018C8  E1EB               	bnz	i2l3809
  6034  0018CA  282F               	incf	memcpy@n+1,w,c
  6035  0018CC  E1E9               	bnz	i2l3809
  6036                           
  6037                           ; BSR set to: 0
  6038  0018CE  0012               	return		;funcret
  6039  0018D0                     __end_of_memcpy:
  6040                           	opt stack 0
  6041                           tblptru	equ	0xFF8
  6042                           tblptrh	equ	0xFF7
  6043                           tblptrl	equ	0xFF6
  6044                           tablat	equ	0xFF5
  6045                           prodh	equ	0xFF4
  6046                           prodl	equ	0xFF3
  6047                           intcon	equ	0xFF2
  6048                           postinc0	equ	0xFEE
  6049                           wreg	equ	0xFE8
  6050                           indf1	equ	0xFE7
  6051                           postdec1	equ	0xFE5
  6052                           fsr1h	equ	0xFE2
  6053                           fsr1l	equ	0xFE1
  6054                           indf2	equ	0xFDF
  6055                           postinc2	equ	0xFDE
  6056                           postdec2	equ	0xFDD
  6057                           plusw2	equ	0xFDB
  6058                           fsr2h	equ	0xFDA
  6059                           fsr2l	equ	0xFD9
  6060                           status	equ	0xFD8
  6061                           
  6062 ;; *************** function _USBCtrlTrfSetupHandler *****************
  6063 ;; Defined at:
  6064 ;;		line 2465 in file "picLibs/usb_device.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;		None
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;		None
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 3F/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6078 ;;      Params:         0       0       0       0
  6079 ;;      Locals:         0       0       0       0
  6080 ;;      Temps:          0       0       0       0
  6081 ;;      Totals:         0       0       0       0
  6082 ;;Total ram usage:        0 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    6
  6085 ;; This function calls:
  6086 ;;		_USBCheckStdRequest
  6087 ;;		_USBCtrlEPServiceComplete
  6088 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6089 ;; This function is called by:
  6090 ;;		_USBCtrlEPService
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text31
  6095  0017B2                     __ptext31:
  6096                           	opt stack 0
  6097  0017B2                     _USBCtrlTrfSetupHandler:
  6098                           	opt stack 17
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;usb_device.c: 2470: shortPacketStatus = 0;
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;incstack = 0
  6105  0017B2  6A27               	clrf	_shortPacketStatus,c	;volatile
  6106                           
  6107                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  6108  0017B4  6A20               	clrf	_USBDeferStatusStagePacket,c	;volatile
  6109                           
  6110                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  6111  0017B6  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6112                           
  6113                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  6114  0017B8  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6115                           
  6116                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  6117  0017BA  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  6118                           
  6119                           ;usb_device.c: 2475: controlTransferState = 0;
  6120  0017BC  6A26               	clrf	_controlTransferState,c	;volatile
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6124  0017BE  ECBA  F008         	call	PL16	;call to abstracted procedure
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6128  0017C2  D817               	call	PL106	;call to abstracted procedure
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6132  0017C4  ECBA  F008         	call	PL16	;call to abstracted procedure
  6133                           
  6134                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6135  0017C8  D814               	call	PL106	;call to abstracted procedure
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  6139  0017CA  EC84  F006         	call	PL12	;call to abstracted procedure
  6140  0017CE  0E7F               	movlw	127
  6141  0017D0  16DF               	andwf	indf2,f,c
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  6145  0017D2  6A0C               	clrf	_inPipes+3,c	;volatile
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  6149  0017D4  6A0D               	clrf	_inPipes+4,c	;volatile
  6150  0017D6  6A0E               	clrf	_inPipes+5,c	;volatile
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  6154  0017D8  6A04               	clrf	_outPipes+3,c	;volatile
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  6158  0017DA  6A05               	clrf	_outPipes+4,c	;volatile
  6159  0017DC  6A06               	clrf	_outPipes+5,c	;volatile
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;usb_device.c: 2500: USBCheckStdRequest();
  6163  0017DE  EC3D  F008         	call	_USBCheckStdRequest	;wreg free
  6164                           
  6165                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  6166  0017E2  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6167  0017E4  0E03               	movlw	3
  6168  0017E6  EC7C  F00D         	call	PL50	;call to abstracted procedure
  6169  0017EA  EC63  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6170                           
  6171                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  6172  0017EE  EFF1  F007         	goto	_USBCtrlEPServiceComplete	;wreg free
  6173  0017F2                     __end_of_USBCtrlTrfSetupHandler:
  6174                           	opt stack 0
  6175  0017F2                     PL106:
  6176                           	opt stack 17
  6177  0017F2  0E7F               	movlw	127
  6178  0017F4  16DF               	andwf	indf2,f,c
  6179  0017F6  0E04               	movlw	4
  6180  0017F8  1A0F               	xorwf	_pBDTEntryIn,f,c
  6181  0017FA  5010               	movf	_pBDTEntryIn+1,w,c
  6182  0017FC  0012               	return	
  6183  0017FE                     __end_ofPL106:
  6184                           	opt stack 0
  6185                           tblptru	equ	0xFF8
  6186                           tblptrh	equ	0xFF7
  6187                           tblptrl	equ	0xFF6
  6188                           tablat	equ	0xFF5
  6189                           prodh	equ	0xFF4
  6190                           prodl	equ	0xFF3
  6191                           intcon	equ	0xFF2
  6192                           postinc0	equ	0xFEE
  6193                           wreg	equ	0xFE8
  6194                           indf1	equ	0xFE7
  6195                           postdec1	equ	0xFE5
  6196                           fsr1h	equ	0xFE2
  6197                           fsr1l	equ	0xFE1
  6198                           indf2	equ	0xFDF
  6199                           postinc2	equ	0xFDE
  6200                           postdec2	equ	0xFDD
  6201                           plusw2	equ	0xFDB
  6202                           fsr2h	equ	0xFDA
  6203                           fsr2l	equ	0xFD9
  6204                           status	equ	0xFD8
  6205                           
  6206 ;; *************** function _USBCtrlEPServiceComplete *****************
  6207 ;; Defined at:
  6208 ;;		line 1616 in file "picLibs/usb_device.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;		None
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      void 
  6215 ;; Registers used:
  6216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6222 ;;      Params:         0       0       0       0
  6223 ;;      Locals:         0       0       0       0
  6224 ;;      Temps:          0       0       0       0
  6225 ;;      Totals:         0       0       0       0
  6226 ;;Total ram usage:        0 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:    2
  6229 ;; This function calls:
  6230 ;;		_USBCtrlEPAllowDataStage
  6231 ;;		_USBCtrlEPAllowStatusStage
  6232 ;; This function is called by:
  6233 ;;		_USBCtrlTrfSetupHandler
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text32
  6238  000FE2                     __ptext32:
  6239                           	opt stack 0
  6240  000FE2                     _USBCtrlEPServiceComplete:
  6241                           	opt stack 20
  6242                           
  6243                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6244                           
  6245                           ;incstack = 0
  6246  000FE2  9864               	bcf	3940,4,c	;volatile
  6247                           
  6248                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6249  000FE4  BE0C               	btfsc	_inPipes+3,7,c	;volatile
  6250  000FE6  D015               	goto	i2l559
  6251                           
  6252                           ;usb_device.c: 1629: {
  6253                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6254  000FE8  AE04               	btfss	_outPipes+3,7,c	;volatile
  6255  000FEA  D00A               	goto	i2l3617
  6256                           
  6257                           ;usb_device.c: 1631: {
  6258                           ;usb_device.c: 1632: controlTransferState = 2;
  6259  000FEC  0E02               	movlw	2
  6260  000FEE  6E26               	movwf	_controlTransferState,c	;volatile
  6261                           
  6262                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6263  000FF0  0100               	movlb	0	; () banked
  6264  000FF2  517E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  6265  000FF4  E102               	bnz	i2l3613
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;usb_device.c: 1644: {
  6269                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6270  000FF6  EC85  F00B         	call	_USBCtrlEPAllowDataStage	;wreg free
  6271  000FFA                     i2l3613:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;usb_device.c: 1646: }
  6275                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6276  000FFA  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6280  000FFC  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6281                           
  6282                           ;usb_device.c: 1652: }
  6283  000FFE  0012               	return	
  6284  001000                     i2l3617:
  6285                           
  6286                           ;usb_device.c: 1653: else
  6287                           ;usb_device.c: 1654: {
  6288                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6289                           
  6290                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6291                           
  6292                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6293  001000  D825               	call	PL2	;call to abstracted procedure
  6294  001002  0E0C               	movlw	12
  6295                           
  6296                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6297  001004  EC7C  F006         	call	PL10	;call to abstracted procedure
  6298                           
  6299                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6300  001008  ECBA  F008         	call	PL16	;call to abstracted procedure
  6301  00100C  0E04               	movlw	4
  6302                           
  6303                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6304  00100E  EFB2  F008         	goto	PL8	;call to abstracted procedure
  6305  001012                     i2l559:
  6306                           
  6307                           ;usb_device.c: 1667: else
  6308                           ;usb_device.c: 1668: {
  6309                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6310  001012  0102               	movlb	2	; () banked
  6311  001014  AF30               	btfss	48,7,b	;volatile
  6312  001016  D00D               	goto	i2l3637
  6313                           
  6314                           ; BSR set to: 2
  6315                           ;usb_device.c: 1670: {
  6316                           ;usb_device.c: 1671: controlTransferState = 1;
  6317  001018  0E01               	movlw	1
  6318  00101A  6E26               	movwf	_controlTransferState,c	;volatile
  6319                           
  6320                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6321  00101C  501D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  6322  00101E  E102               	bnz	i2l3629
  6323                           
  6324                           ; BSR set to: 2
  6325                           ;usb_device.c: 1686: {
  6326                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6327  001020  EC85  F00B         	call	_USBCtrlEPAllowDataStage	;wreg free
  6328  001024                     i2l3629:
  6329                           
  6330                           ;usb_device.c: 1688: }
  6331                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6332  001024  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6333                           
  6334                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6335  001026  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6336                           
  6337                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6338  001028  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6339  00102A  A4D8               	btfss	status,2,c
  6340  00102C  0012               	return	
  6341                           
  6342                           ;usb_device.c: 1713: {
  6343                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6344  00102E  EF48  F009         	goto	_USBCtrlEPAllowStatusStage	;wreg free
  6345  001032                     i2l3637:
  6346                           
  6347                           ; BSR set to: 2
  6348                           ;usb_device.c: 1717: else
  6349                           ;usb_device.c: 1718: {
  6350                           ;usb_device.c: 1729: controlTransferState = 2;
  6351  001032  0E02               	movlw	2
  6352  001034  6E26               	movwf	_controlTransferState,c	;volatile
  6353                           
  6354                           ; BSR set to: 2
  6355                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6356                           
  6357                           ; BSR set to: 2
  6358                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6359                           
  6360                           ; BSR set to: 2
  6361                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6362  001036  D80A               	call	PL2	;call to abstracted procedure
  6363  001038  0E04               	movlw	4
  6364                           
  6365                           ; BSR set to: 2
  6366                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6367  00103A  EC7C  F006         	call	PL10	;call to abstracted procedure
  6368                           
  6369                           ; BSR set to: 2
  6370                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6371  00103E  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6372                           
  6373                           ; BSR set to: 2
  6374                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6375  001040  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6376                           
  6377                           ; BSR set to: 2
  6378                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6379  001042  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6380  001044  E102 EF48  F009    	bz	_USBCtrlEPAllowStatusStage
  6381  00104A  0012               	return	
  6382  00104C                     __end_of_USBCtrlEPServiceComplete:
  6383                           	opt stack 0
  6384  00104C                     PL2:
  6385                           	opt stack 20
  6386  00104C  EE20 F001          	lfsr	2,1
  6387  001050  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6388  001052  26D9               	addwf	fsr2l,f,c
  6389  001054  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6390  001056  22DA               	addwfc	fsr2h,f,c
  6391  001058  0E08               	movlw	8
  6392  00105A  6EDF               	movwf	indf2,c
  6393  00105C  EE20 F002          	lfsr	2,2
  6394  001060  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6395  001062  26D9               	addwf	fsr2l,f,c
  6396  001064  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6397  001066  22DA               	addwfc	fsr2h,f,c
  6398  001068  0E30               	movlw	48
  6399  00106A  6EDE               	movwf	postinc2,c
  6400  00106C  0E02               	movlw	2
  6401  00106E  6EDD               	movwf	postdec2,c
  6402  001070  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6403  001074  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6404  001078  0C02               	retlw	2
  6405  00107A                     __end_ofPL2:
  6406                           	opt stack 0
  6407                           tblptru	equ	0xFF8
  6408                           tblptrh	equ	0xFF7
  6409                           tblptrl	equ	0xFF6
  6410                           tablat	equ	0xFF5
  6411                           prodh	equ	0xFF4
  6412                           prodl	equ	0xFF3
  6413                           intcon	equ	0xFF2
  6414                           postinc0	equ	0xFEE
  6415                           wreg	equ	0xFE8
  6416                           indf1	equ	0xFE7
  6417                           postdec1	equ	0xFE5
  6418                           fsr1h	equ	0xFE2
  6419                           fsr1l	equ	0xFE1
  6420                           indf2	equ	0xFDF
  6421                           postinc2	equ	0xFDE
  6422                           postdec2	equ	0xFDD
  6423                           plusw2	equ	0xFDB
  6424                           fsr2h	equ	0xFDA
  6425                           fsr2l	equ	0xFD9
  6426                           status	equ	0xFD8
  6427                           
  6428 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6429 ;; Defined at:
  6430 ;;		line 1488 in file "picLibs/usb_device.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 3D/0
  6441 ;;		On exit  : 3F/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6444 ;;      Params:         0       0       0       0
  6445 ;;      Locals:         0       0       0       0
  6446 ;;      Temps:          0       0       0       0
  6447 ;;      Totals:         0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    1
  6451 ;; This function calls:
  6452 ;;		_USBCtrlTrfTxService
  6453 ;; This function is called by:
  6454 ;;		_USBCtrlEPServiceComplete
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text33
  6459  00170A                     __ptext33:
  6460                           	opt stack 0
  6461  00170A                     _USBCtrlEPAllowDataStage:
  6462                           	opt stack 20
  6463                           
  6464                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6465                           
  6466                           ;incstack = 0
  6467  00170A  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6468                           
  6469                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6470  00170C  0100               	movlb	0	; () banked
  6471  00170E  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6475  001710  0E02               	movlw	2
  6476  001712  1826               	xorwf	_controlTransferState,w,c	;volatile
  6477  001714  E112               	bnz	i2l3415
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;usb_device.c: 1494: {
  6481                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6482  001716  EE20 F001          	lfsr	2,1
  6483  00171A  EC72  F006         	call	PL4	;call to abstracted procedure
  6484                           
  6485                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  6486  00171E  EC77  F006         	call	PL6	;call to abstracted procedure
  6487  001722  EC72  F006         	call	PL4	;call to abstracted procedure
  6488  001726  0E38               	movlw	56
  6489  001728  6EDE               	movwf	postinc2,c
  6490  00172A  0E02               	movlw	2
  6491  00172C  6EDD               	movwf	postdec2,c
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6495  00172E  EC84  F006         	call	PL12	;call to abstracted procedure
  6496  001732  0E48               	movlw	72
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6500  001734  EC7C  F006         	call	PL10	;call to abstracted procedure
  6501                           
  6502                           ;usb_device.c: 1500: }
  6503  001738  0C00               	retlw	0
  6504  00173A                     i2l3415:
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;usb_device.c: 1501: else
  6508                           ;usb_device.c: 1502: {
  6509                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6510  00173A  500D               	movf	_inPipes+4,w,c	;volatile
  6511  00173C  0102               	movlb	2	; () banked
  6512  00173E  5D36               	subwf	54,w,b	;volatile
  6513  001740  500E               	movf	_inPipes+5,w,c	;volatile
  6514  001742  5937               	subwfb	55,w,b	;volatile
  6515  001744  E204               	bc	i2l3419
  6516                           
  6517                           ; BSR set to: 2
  6518                           ;usb_device.c: 1506: {
  6519                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6520  001746  C236 F00D          	movff	566,_inPipes+4	;volatile
  6521  00174A  C237 F00E          	movff	567,_inPipes+5	;volatile
  6522  00174E                     i2l3419:
  6523                           
  6524                           ; BSR set to: 2
  6525                           ;usb_device.c: 1508: }
  6526                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6527  00174E  EC4B  F007         	call	_USBCtrlTrfTxService	;wreg free
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  6531  001752  ECBF  F008         	call	PL44	;call to abstracted procedure
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6535  001756  ECBA  F008         	call	PL16	;call to abstracted procedure
  6536  00175A  0E48               	movlw	72
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6540                           
  6541                           ; BSR set to: 0
  6542  00175C  EFB2  F008         	goto	PL8	;call to abstracted procedure
  6543  001760                     __end_of_USBCtrlEPAllowDataStage:
  6544                           	opt stack 0
  6545                           tblptru	equ	0xFF8
  6546                           tblptrh	equ	0xFF7
  6547                           tblptrl	equ	0xFF6
  6548                           tablat	equ	0xFF5
  6549                           prodh	equ	0xFF4
  6550                           prodl	equ	0xFF3
  6551                           intcon	equ	0xFF2
  6552                           postinc0	equ	0xFEE
  6553                           wreg	equ	0xFE8
  6554                           indf1	equ	0xFE7
  6555                           postdec1	equ	0xFE5
  6556                           fsr1h	equ	0xFE2
  6557                           fsr1l	equ	0xFE1
  6558                           indf2	equ	0xFDF
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           plusw2	equ	0xFDB
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _USBCheckStdRequest *****************
  6567 ;; Defined at:
  6568 ;;		line 2686 in file "picLibs/usb_device.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 3F/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6582 ;;      Params:         0       0       0       0
  6583 ;;      Locals:         0       0       0       0
  6584 ;;      Temps:          1       0       0       0
  6585 ;;      Totals:         1       0       0       0
  6586 ;;Total ram usage:        1 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    5
  6589 ;; This function calls:
  6590 ;;		_USBStdFeatureReqHandler
  6591 ;;		_USBStdGetDscHandler
  6592 ;;		_USBStdGetStatusHandler
  6593 ;;		_USBStdSetCfgHandler
  6594 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6595 ;; This function is called by:
  6596 ;;		_USBCtrlTrfSetupHandler
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text34
  6601  00107A                     __ptext34:
  6602                           	opt stack 0
  6603  00107A                     _USBCheckStdRequest:
  6604                           	opt stack 17
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;incstack = 0
  6611  00107A  0102               	movlb	2	; () banked
  6612  00107C  3930               	swapf	48,w,b	;volatile
  6613  00107E  32E8               	rrcf	wreg,f,c
  6614  001080  0B03               	andlw	3
  6615  001082  E01D               	bz	i2l3735
  6616  001084  0012               	return	
  6617  001086                     i2l684:
  6618                           
  6619                           ; BSR set to: 2
  6620                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6621  001086  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6622                           
  6623                           ; BSR set to: 2
  6624                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6625  001088  0E08               	movlw	8
  6626  00108A  0100               	movlb	0	; () banked
  6627  00108C  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6628                           
  6629                           ;usb_device.c: 2696: break;
  6630  00108E  0C08               	retlw	8
  6631  001090                     i2l3709:
  6632                           
  6633                           ; BSR set to: 2
  6634                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6635  001090  0E29               	movlw	low _USBActiveConfiguration
  6636  001092  6E09               	movwf	_inPipes,c	;volatile
  6637                           
  6638                           ; BSR set to: 2
  6639                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6640                           
  6641                           ; BSR set to: 2
  6642                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6643                           
  6644                           ; BSR set to: 2
  6645                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6646                           
  6647                           ;usb_device.c: 2708: break;
  6648  001094  D034               	goto	PL86	;call to abstracted procedure
  6649  001096                     i2l3721:
  6650                           
  6651                           ; BSR set to: 2
  6652                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6653  001096  5134               	movf	52,w,b	;volatile
  6654  001098  0FD1               	addlw	low _USBAlternateInterface
  6655  00109A  6E45               	movwf	??_USBCheckStdRequest& (0+255),c
  6656  00109C  C045  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  6657                           
  6658                           ; BSR set to: 2
  6659                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6660                           
  6661                           ; BSR set to: 2
  6662                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6663                           
  6664                           ; BSR set to: 2
  6665                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6666                           
  6667                           ;usb_device.c: 2721: break;
  6668  0010A0  D02E               	goto	PL86	;call to abstracted procedure
  6669  0010A2                     i2l693:
  6670                           
  6671                           ; BSR set to: 2
  6672                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6673  0010A2  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6674                           
  6675                           ; BSR set to: 2
  6676                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6677  0010A4  5134               	movf	52,w,b	;volatile
  6678  0010A6  0FD1               	addlw	low _USBAlternateInterface
  6679  0010A8  6ED9               	movwf	fsr2l,c
  6680  0010AA  6ADA               	clrf	fsr2h,c
  6681  0010AC  C232 FFDF          	movff	562,indf2	;volatile
  6682                           
  6683                           ;usb_device.c: 2725: break;
  6684  0010B0  0012               	return	
  6685  0010B2                     i2l3731:
  6686                           
  6687                           ; BSR set to: 2
  6688                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6689  0010B2  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6690  0010B4  0E02               	movlw	2
  6691  0010B6  EC7C  F00D         	call	PL50	;call to abstracted procedure
  6692  0010BA  EF63  F00A         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6693  0010BE                     i2l3735:
  6694                           
  6695                           ; BSR set to: 2
  6696  0010BE  5131               	movf	49,w,b	;volatile
  6697                           
  6698                           ; Switch size 1, requested type "space"
  6699                           ; Number of cases is 11, Range of values is 0 to 12
  6700                           ; switch strategies available:
  6701                           ; Name         Instructions Cycles
  6702                           ; simple_byte           34    18 (average)
  6703                           ;	Chosen strategy is simple_byte
  6704  0010C0  E102 EF83  F009    	bz	_USBStdGetStatusHandler
  6705  0010C6  0A01               	xorlw	1	; case 1
  6706  0010C8  E102 EF34  F003    	bz	_USBStdFeatureReqHandler
  6707  0010CE  0A02               	xorlw	2	; case 3
  6708  0010D0  E102 EF34  F003    	bz	_USBStdFeatureReqHandler
  6709  0010D6  0A06               	xorlw	6	; case 5
  6710  0010D8  E0D6               	bz	i2l684
  6711  0010DA  0A03               	xorlw	3	; case 6
  6712  0010DC  E102 EF6A  F005    	bz	_USBStdGetDscHandler
  6713  0010E2  0A01               	xorlw	1	; case 7
  6714  0010E4  E0E6               	bz	i2l3731
  6715  0010E6  0A0F               	xorlw	15	; case 8
  6716  0010E8  E0D3               	bz	i2l3709
  6717  0010EA  0A01               	xorlw	1	; case 9
  6718  0010EC  E102 EF9F  F007    	bz	_USBStdSetCfgHandler
  6719  0010F2  0A03               	xorlw	3	; case 10
  6720  0010F4  E0D0               	bz	i2l3721
  6721  0010F6  0A01               	xorlw	1	; case 11
  6722  0010F8  E0D4               	bz	i2l693
  6723  0010FA  0A07               	xorlw	7	; case 12
  6724  0010FC  0012               	return	
  6725  0010FE                     __end_of_USBCheckStdRequest:
  6726                           	opt stack 0
  6727  0010FE                     PL86:
  6728                           	opt stack 17
  6729  0010FE  6A0A               	clrf	_inPipes+1,c	;volatile
  6730  001100  800C               	bsf	_inPipes+3,0,c	;volatile
  6731  001102  0E01               	movlw	1
  6732  001104  6E0D               	movwf	_inPipes+4,c	;volatile
  6733  001106  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6734  001108  0C01               	retlw	1
  6735  00110A                     __end_ofPL86:
  6736                           	opt stack 0
  6737                           tblptru	equ	0xFF8
  6738                           tblptrh	equ	0xFF7
  6739                           tblptrl	equ	0xFF6
  6740                           tablat	equ	0xFF5
  6741                           prodh	equ	0xFF4
  6742                           prodl	equ	0xFF3
  6743                           intcon	equ	0xFF2
  6744                           postinc0	equ	0xFEE
  6745                           wreg	equ	0xFE8
  6746                           indf1	equ	0xFE7
  6747                           postdec1	equ	0xFE5
  6748                           fsr1h	equ	0xFE2
  6749                           fsr1l	equ	0xFE1
  6750                           indf2	equ	0xFDF
  6751                           postinc2	equ	0xFDE
  6752                           postdec2	equ	0xFDD
  6753                           plusw2	equ	0xFDB
  6754                           fsr2h	equ	0xFDA
  6755                           fsr2l	equ	0xFD9
  6756                           status	equ	0xFD8
  6757                           
  6758 ;; *************** function _USBStdSetCfgHandler *****************
  6759 ;; Defined at:
  6760 ;;		line 1968 in file "picLibs/usb_device.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;		None
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  i               1   20[COMRAM] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6769 ;; Tracked objects:
  6770 ;;		On entry : 3D/2
  6771 ;;		On exit  : 3F/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6774 ;;      Params:         0       0       0       0
  6775 ;;      Locals:         1       0       0       0
  6776 ;;      Temps:          0       0       0       0
  6777 ;;      Totals:         1       0       0       0
  6778 ;;Total ram usage:        1 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; Hardware stack levels required when called:    4
  6781 ;; This function calls:
  6782 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6783 ;;		i2_memset
  6784 ;; This function is called by:
  6785 ;;		_USBCheckStdRequest
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text35
  6790  000F3E                     __ptext35:
  6791                           	opt stack 0
  6792  000F3E                     _USBStdSetCfgHandler:
  6793                           	opt stack 17
  6794                           
  6795                           ;usb_device.c: 1970: uint8_t i;
  6796                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6797                           
  6798                           ;incstack = 0
  6799  000F3E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6800                           
  6801                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  6802  000F40  D840               	call	PL60	;call to abstracted procedure
  6803  000F42  EC5C  F00D         	call	i2_memset	;wreg free
  6804                           
  6805                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6806  000F46  6A2A               	clrf	i2memset@p1,c
  6807  000F48  0E02               	movlw	2
  6808  000F4A  6E2B               	movwf	i2memset@p1+1,c
  6809  000F4C  6A2D               	clrf	i2memset@c+1,c
  6810  000F4E  6A2C               	clrf	i2memset@c,c
  6811  000F50  6A2F               	clrf	i2memset@n+1,c
  6812  000F52  0E30               	movlw	48
  6813  000F54  6E2E               	movwf	i2memset@n,c
  6814  000F56  EC5C  F00D         	call	i2_memset	;wreg free
  6815                           
  6816                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6817  000F5A  8C64               	bsf	3940,6,c	;volatile
  6818                           
  6819                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6820  000F5C  6A3E               	clrf	USBStdSetCfgHandler@i,c
  6821  000F5E                     i2l3439:
  6822                           
  6823                           ;usb_device.c: 1988: {
  6824                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6825  000F5E  503E               	movf	USBStdSetCfgHandler@i,w,c
  6826  000F60  EC65  F005         	call	PL98	;call to abstracted procedure
  6827                           
  6828                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6829  000F64  503E               	movf	USBStdSetCfgHandler@i,w,c
  6830  000F66  EC60  F005         	call	PL90	;call to abstracted procedure
  6831  000F6A  2A3E               	incf	USBStdSetCfgHandler@i,f,c
  6832  000F6C  0E02               	movlw	2
  6833  000F6E  643E               	cpfsgt	USBStdSetCfgHandler@i,c
  6834  000F70  D7F6               	goto	i2l3439
  6835                           
  6836                           ;usb_device.c: 1991: }
  6837                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6838  000F72  0ED1               	movlw	low _USBAlternateInterface
  6839  000F74  6E2A               	movwf	i2memset@p1,c
  6840  000F76  6A2B               	clrf	i2memset@p1+1,c
  6841  000F78  6A2D               	clrf	i2memset@c+1,c
  6842  000F7A  6A2C               	clrf	i2memset@c,c
  6843  000F7C  6A2F               	clrf	i2memset@n+1,c
  6844  000F7E  0E02               	movlw	2
  6845  000F80  6E2E               	movwf	i2memset@n,c
  6846  000F82  EC5C  F00D         	call	i2_memset	;wreg free
  6847                           
  6848                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6849  000F86  9C64               	bcf	3940,6,c	;volatile
  6850                           
  6851                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6852  000F88  0E08               	movlw	8
  6853  000F8A  6E0F               	movwf	_pBDTEntryIn,c
  6854  000F8C  0E02               	movlw	2
  6855  000F8E  6E10               	movwf	_pBDTEntryIn+1,c
  6856                           
  6857                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6858  000F90  0E00               	movlw	0
  6859  000F92  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  6860  000F94  0E02               	movlw	2
  6861                           
  6862                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6863  000F96  D81F               	call	PL102	;call to abstracted procedure
  6864                           
  6865                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6866  000F98  C232 F029          	movff	562,_USBActiveConfiguration	;volatile
  6867                           
  6868                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6869  000F9C  5029               	movf	_USBActiveConfiguration,w,c	;volatile
  6870  000F9E  E104               	bnz	i2l3461
  6871                           
  6872                           ;usb_device.c: 2010: {
  6873                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6874  000FA0  0E10               	movlw	16
  6875  000FA2  0100               	movlb	0	; () banked
  6876  000FA4  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6877                           
  6878                           ;usb_device.c: 2013: }
  6879  000FA6  0C10               	retlw	16
  6880  000FA8                     i2l3461:
  6881                           
  6882                           ;usb_device.c: 2014: else
  6883                           ;usb_device.c: 2015: {
  6884                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6885  000FA8  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6886  000FAA  0E01               	movlw	1
  6887  000FAC  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6888  000FAE  0E29               	movlw	low _USBActiveConfiguration
  6889  000FB0  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6890  000FB2  EC7B  F004         	call	PL96	;call to abstracted procedure
  6891  000FB6  EC63  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6892                           
  6893                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6894  000FBA  0E20               	movlw	32
  6895  000FBC  0100               	movlb	0	; () banked
  6896  000FBE  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6897                           
  6898                           ; BSR set to: 0
  6899  000FC0  0C20               	retlw	32	;funcret
  6900  000FC2                     __end_of_USBStdSetCfgHandler:
  6901                           	opt stack 0
  6902  000FC2                     PL60:
  6903                           	opt stack 23
  6904  000FC2  0E54               	movlw	84
  6905  000FC4  6E2A               	movwf	i2memset@p1,c
  6906  000FC6  0E0F               	movlw	15
  6907  000FC8  6E2B               	movwf	i2memset@p1+1,c
  6908  000FCA  6A2D               	clrf	i2memset@c+1,c
  6909  000FCC  6A2C               	clrf	i2memset@c,c
  6910  000FCE  6A2F               	clrf	i2memset@n+1,c
  6911  000FD0  0E02               	movlw	2
  6912  000FD2  6E2E               	movwf	i2memset@n,c
  6913  000FD4  0C02               	retlw	2
  6914  000FD6                     __end_ofPL60:
  6915                           	opt stack 0
  6916  000FD6                     PL102:
  6917                           	opt stack 17
  6918  000FD6  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6919  000FD8  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6920  000FDC  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6921  000FE0  0012               	return	
  6922  000FE2                     __end_ofPL102:
  6923                           	opt stack 0
  6924                           tblptru	equ	0xFF8
  6925                           tblptrh	equ	0xFF7
  6926                           tblptrl	equ	0xFF6
  6927                           tablat	equ	0xFF5
  6928                           prodh	equ	0xFF4
  6929                           prodl	equ	0xFF3
  6930                           intcon	equ	0xFF2
  6931                           postinc0	equ	0xFEE
  6932                           wreg	equ	0xFE8
  6933                           indf1	equ	0xFE7
  6934                           postdec1	equ	0xFE5
  6935                           fsr1h	equ	0xFE2
  6936                           fsr1l	equ	0xFE1
  6937                           indf2	equ	0xFDF
  6938                           postinc2	equ	0xFDE
  6939                           postdec2	equ	0xFDD
  6940                           plusw2	equ	0xFDB
  6941                           fsr2h	equ	0xFDA
  6942                           fsr2l	equ	0xFD9
  6943                           status	equ	0xFD8
  6944                           
  6945 ;; *************** function i2_memset *****************
  6946 ;; Defined at:
  6947 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  p1              2    0[COMRAM] PTR void 
  6950 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6951 ;;  c               2    2[COMRAM] int 
  6952 ;;  n               2    4[COMRAM] unsigned int 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  memset          2    6[COMRAM] PTR unsigned char 
  6955 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  2    0[COMRAM] PTR void 
  6958 ;; Registers used:
  6959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/F
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6965 ;;      Params:         6       0       0       0
  6966 ;;      Locals:         2       0       0       0
  6967 ;;      Temps:          0       0       0       0
  6968 ;;      Totals:         8       0       0       0
  6969 ;;Total ram usage:        8 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_USBStdSetCfgHandler
  6975 ;;		i2_USBDeviceInit
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text36
  6980  001AB8                     __ptext36:
  6981                           	opt stack 0
  6982  001AB8                     i2_memset:
  6983                           	opt stack 23
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;incstack = 0
  6987  001AB8  C02A  F030         	movff	i2memset@p1,i2memset@p
  6988  001ABC  C02B  F031         	movff	i2memset@p1+1,i2memset@p+1
  6989  001AC0  D008               	goto	i2l3371
  6990  001AC2                     i2l3367:
  6991  001AC2  C030  FFD9         	movff	i2memset@p,fsr2l
  6992  001AC6  C031  FFDA         	movff	i2memset@p+1,fsr2h
  6993  001ACA  C02C  FFDF         	movff	i2memset@c,indf2
  6994  001ACE  4A30               	infsnz	i2memset@p,f,c
  6995  001AD0  2A31               	incf	i2memset@p+1,f,c
  6996  001AD2                     i2l3371:
  6997  001AD2  062E               	decf	i2memset@n,f,c
  6998  001AD4  A0D8               	btfss	status,0,c
  6999  001AD6  062F               	decf	i2memset@n+1,f,c
  7000  001AD8  282E               	incf	i2memset@n,w,c
  7001  001ADA  E1F3               	bnz	i2l3367
  7002  001ADC  282F               	incf	i2memset@n+1,w,c
  7003  001ADE  E1F1               	bnz	i2l3367
  7004  001AE0  0012               	return		;funcret
  7005  001AE2                     __end_ofi2_memset:
  7006                           	opt stack 0
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           postinc0	equ	0xFEE
  7015                           wreg	equ	0xFE8
  7016                           indf1	equ	0xFE7
  7017                           postdec1	equ	0xFE5
  7018                           fsr1h	equ	0xFE2
  7019                           fsr1l	equ	0xFE1
  7020                           indf2	equ	0xFDF
  7021                           postinc2	equ	0xFDE
  7022                           postdec2	equ	0xFDD
  7023                           plusw2	equ	0xFDB
  7024                           fsr2h	equ	0xFDA
  7025                           fsr2l	equ	0xFD9
  7026                           status	equ	0xFD8
  7027                           
  7028 ;; *************** function _USBStdGetStatusHandler *****************
  7029 ;; Defined at:
  7030 ;;		line 2129 in file "picLibs/usb_device.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;		None
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;  p               2    0[COMRAM] PTR struct __BDT
  7035 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7040 ;; Tracked objects:
  7041 ;;		On entry : 3D/2
  7042 ;;		On exit  : 3F/2
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7045 ;;      Params:         0       0       0       0
  7046 ;;      Locals:         2       0       0       0
  7047 ;;      Temps:          0       0       0       0
  7048 ;;      Totals:         2       0       0       0
  7049 ;;Total ram usage:        2 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_USBCheckStdRequest
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           	psect	text37
  7059  001306                     __ptext37:
  7060                           	opt stack 0
  7061  001306                     _USBStdGetStatusHandler:
  7062                           	opt stack 21
  7063                           
  7064                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7065                           
  7066                           ;incstack = 0
  7067  001306  0102               	movlb	2	; () banked
  7068  001308  6B38               	clrf	56,b	;volatile
  7069                           
  7070                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7071  00130A  6B39               	clrf	57,b	;volatile
  7072                           
  7073                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7074  00130C  D020               	goto	i2l3511
  7075  00130E                     i2l622:
  7076                           
  7077                           ; BSR set to: 2
  7078                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7079  00130E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7080                           
  7081                           ; BSR set to: 2
  7082                           ;usb_device.c: 2145: }
  7083                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7084                           
  7085                           ;usb_device.c: 2142: if(0 == 1)
  7086  001310  0425               	decf	_RemoteWakeup,w,c	;volatile
  7087  001312  E124               	bnz	i2l625
  7088                           
  7089                           ; BSR set to: 2
  7090                           ;usb_device.c: 2148: {
  7091                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7092  001314  8338               	bsf	56,1,b	;volatile
  7093  001316  D022               	goto	i2l625
  7094  001318                     i2l626:
  7095                           
  7096                           ; BSR set to: 2
  7097                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7098  001318  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7099                           
  7100                           ;usb_device.c: 2154: break;
  7101  00131A  D020               	goto	i2l625
  7102  00131C                     i2l627:
  7103                           
  7104                           ; BSR set to: 2
  7105                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7106  00131C  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7107                           
  7108                           ;usb_device.c: 2160: {
  7109                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7110                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7111  00131E  BF34               	btfsc	52,7,b	;volatile
  7112  001320  D004               	goto	i2l3501
  7113                           
  7114                           ; BSR set to: 2
  7115                           ;usb_device.c: 2164: {
  7116                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7117  001322  ECFB  F003         	call	PL68	;call to abstracted procedure
  7118  001326  0F60               	addlw	low _pBDTEntryOut
  7119  001328  D003               	goto	L5
  7120  00132A                     i2l3501:
  7121                           
  7122                           ; BSR set to: 2
  7123                           ;usb_device.c: 2167: else
  7124                           ;usb_device.c: 2168: {
  7125                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7126  00132A  ECFB  F003         	call	PL68	;call to abstracted procedure
  7127  00132E  0F0F               	addlw	low _pBDTEntryIn
  7128  001330                     L5:
  7129  001330  6ED9               	movwf	fsr2l,c
  7130  001332  6ADA               	clrf	fsr2h,c
  7131  001334  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  7132  001338  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  7133                           
  7134                           ; BSR set to: 2
  7135                           ;usb_device.c: 2170: }
  7136                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7137  00133C  D818               	call	PL110	;call to abstracted procedure
  7138  00133E  AEDF               	btfss	indf2,7,c
  7139  001340  D00D               	goto	i2l625
  7140                           
  7141                           ; BSR set to: 2
  7142  001342  D815               	call	PL110	;call to abstracted procedure
  7143  001344  A4DF               	btfss	indf2,2,c
  7144  001346  D00A               	goto	i2l625
  7145                           
  7146                           ; BSR set to: 2
  7147                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7148  001348  0E01               	movlw	1
  7149  00134A  6F38               	movwf	56,b	;volatile
  7150  00134C  D007               	goto	i2l625
  7151  00134E                     i2l3511:
  7152                           
  7153                           ; BSR set to: 2
  7154  00134E  5130               	movf	48,w,b	;volatile
  7155  001350  0B1F               	andlw	31
  7156                           
  7157                           ; Switch size 1, requested type "space"
  7158                           ; Number of cases is 3, Range of values is 0 to 2
  7159                           ; switch strategies available:
  7160                           ; Name         Instructions Cycles
  7161                           ; simple_byte           10     6 (average)
  7162                           ;	Chosen strategy is simple_byte
  7163  001352  E0DD               	bz	i2l622
  7164  001354  0A01               	xorlw	1	; case 1
  7165  001356  E0E0               	bz	i2l626
  7166  001358  0A03               	xorlw	3	; case 2
  7167  00135A  E0E0               	bz	i2l627
  7168  00135C                     i2l625:
  7169                           
  7170                           ; BSR set to: 2
  7171                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7172  00135C  AE0C               	btfss	_inPipes+3,7,c	;volatile
  7173  00135E  0012               	return	
  7174                           
  7175                           ; BSR set to: 2
  7176                           ;usb_device.c: 2179: {
  7177                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7178  001360  0E38               	movlw	56
  7179  001362  6E09               	movwf	_inPipes,c	;volatile
  7180  001364  0E02               	movlw	2
  7181  001366  6E0A               	movwf	_inPipes+1,c	;volatile
  7182                           
  7183                           ; BSR set to: 2
  7184                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7185  001368  800C               	bsf	_inPipes+3,0,c	;volatile
  7186                           
  7187                           ; BSR set to: 2
  7188                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7189  00136A  6E0D               	movwf	_inPipes+4,c	;volatile
  7190                           
  7191                           ; BSR set to: 2
  7192  00136C  0C02               	retlw	2	;funcret
  7193  00136E                     __end_of_USBStdGetStatusHandler:
  7194                           	opt stack 0
  7195  00136E                     PL110:
  7196                           	opt stack 21
  7197  00136E  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  7198  001372  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  7199  001376  0012               	return	
  7200  001378                     __end_ofPL110:
  7201                           	opt stack 0
  7202                           tblptru	equ	0xFF8
  7203                           tblptrh	equ	0xFF7
  7204                           tblptrl	equ	0xFF6
  7205                           tablat	equ	0xFF5
  7206                           prodh	equ	0xFF4
  7207                           prodl	equ	0xFF3
  7208                           intcon	equ	0xFF2
  7209                           postinc0	equ	0xFEE
  7210                           wreg	equ	0xFE8
  7211                           indf1	equ	0xFE7
  7212                           postdec1	equ	0xFE5
  7213                           fsr1h	equ	0xFE2
  7214                           fsr1l	equ	0xFE1
  7215                           indf2	equ	0xFDF
  7216                           postinc2	equ	0xFDE
  7217                           postdec2	equ	0xFDD
  7218                           plusw2	equ	0xFDB
  7219                           fsr2h	equ	0xFDA
  7220                           fsr2l	equ	0xFD9
  7221                           status	equ	0xFD8
  7222                           
  7223 ;; *************** function _USBStdGetDscHandler *****************
  7224 ;; Defined at:
  7225 ;;		line 2043 in file "picLibs/usb_device.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;		None
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7234 ;; Tracked objects:
  7235 ;;		On entry : 3D/2
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7239 ;;      Params:         0       0       0       0
  7240 ;;      Locals:         0       0       0       0
  7241 ;;      Temps:          2       0       0       0
  7242 ;;      Totals:         2       0       0       0
  7243 ;;Total ram usage:        2 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_USBCheckStdRequest
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text38
  7253  000AD4                     __ptext38:
  7254                           	opt stack 0
  7255  000AD4                     _USBStdGetDscHandler:
  7256                           	opt stack 21
  7257                           
  7258                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7259                           
  7260                           ; BSR set to: 2
  7261                           ;incstack = 0
  7262  000AD4  0E80               	movlw	128
  7263  000AD6  0102               	movlb	2	; () banked
  7264  000AD8  1930               	xorwf	48,w,b	;volatile
  7265  000ADA  A4D8               	btfss	status,2,c
  7266  000ADC  0012               	return	
  7267                           
  7268                           ; BSR set to: 2
  7269                           ;usb_device.c: 2046: {
  7270                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7271  000ADE  0EC0               	movlw	192
  7272  000AE0  6E0C               	movwf	_inPipes+3,c	;volatile
  7273                           
  7274                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7275  000AE2  D03D               	goto	i2l3489
  7276  000AE4                     i2l3469:
  7277                           
  7278                           ; BSR set to: 2
  7279                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7280  000AE4  0EB0               	movlw	low _device_dsc
  7281  000AE6  6E09               	movwf	_inPipes,c	;volatile
  7282  000AE8  5009               	movf	_inPipes,w,c	;volatile
  7283  000AEA  A4D8               	btfss	status,2,c
  7284  000AEC  0E03               	movlw	high __smallconst
  7285  000AEE  6E0A               	movwf	_inPipes+1,c	;volatile
  7286                           
  7287                           ; BSR set to: 2
  7288                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7289  000AF0  6A0E               	clrf	_inPipes+5,c	;volatile
  7290  000AF2  0E12               	movlw	18
  7291  000AF4  6E0D               	movwf	_inPipes+4,c	;volatile
  7292                           
  7293                           ;usb_device.c: 2058: break;
  7294  000AF6  0C12               	retlw	18
  7295  000AF8                     i2l3473:
  7296                           
  7297                           ; BSR set to: 2
  7298                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7299  000AF8  5132               	movf	50,w,b	;volatile
  7300  000AFA  E116               	bnz	i2l612
  7301                           
  7302                           ; BSR set to: 2
  7303                           ;usb_device.c: 2064: {
  7304                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7305  000AFC  5132               	movf	50,w,b	;volatile
  7306  000AFE  0F04               	addlw	low _USB_CD_Ptr
  7307  000B00  D848               	call	PL58	;call to abstracted procedure
  7308                           
  7309                           ; BSR set to: 2
  7310                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7311  000B02  0E02               	movlw	2
  7312  000B04  D83A               	call	PL40	;call to abstracted procedure
  7313  000B06  64F7               	cpfsgt	tblptrh,c
  7314  000B08  D003               	bra	i2u215_47
  7315  000B0A  0008               	tblrd		*
  7316  000B0C  50F5               	movf	tablat,w,c
  7317  000B0E  D001               	bra	i2u215_40
  7318  000B10                     i2u215_47:
  7319  000B10  D82E               	call	PL18	;call to abstracted procedure
  7320  000B12                     i2u215_40:
  7321  000B12  6E0D               	movwf	_inPipes+4,c	;volatile
  7322                           
  7323                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7324  000B14  0E03               	movlw	3
  7325  000B16  D831               	call	PL40	;call to abstracted procedure
  7326  000B18  64F7               	cpfsgt	tblptrh,c
  7327  000B1A  D003               	bra	i2u216_47
  7328  000B1C  0008               	tblrd		*
  7329  000B1E  50F5               	movf	tablat,w,c
  7330  000B20  D001               	bra	i2u216_40
  7331  000B22                     i2u216_47:
  7332  000B22  D825               	call	PL18	;call to abstracted procedure
  7333  000B24                     i2u216_40:
  7334  000B24  6E0E               	movwf	_inPipes+5,c	;volatile
  7335                           
  7336                           ;usb_device.c: 2076: }
  7337  000B26  0012               	return	
  7338  000B28                     i2l612:
  7339                           
  7340                           ; BSR set to: 2
  7341                           ;usb_device.c: 2077: else
  7342                           ;usb_device.c: 2078: {
  7343                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7344  000B28  6A0C               	clrf	_inPipes+3,c	;volatile
  7345  000B2A  0012               	return	
  7346  000B2C                     i2l3481:
  7347                           
  7348                           ; BSR set to: 2
  7349                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7350  000B2C  0E03               	movlw	3
  7351  000B2E  6132               	cpfslt	50,b	;volatile
  7352  000B30  D012               	goto	i2l615
  7353                           
  7354                           ; BSR set to: 2
  7355                           ;usb_device.c: 2087: {
  7356                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7357  000B32  5132               	movf	50,w,b	;volatile
  7358  000B34  0F01               	addlw	low _USB_SD_Ptr
  7359  000B36  D82D               	call	PL58	;call to abstracted procedure
  7360                           
  7361                           ; BSR set to: 2
  7362                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7363  000B38  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
  7364  000B3C  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7365  000B40  6AF8               	clrf	tblptru,c
  7366  000B42  0E02               	movlw	(high __ramtop+-1)
  7367  000B44  64F7               	cpfsgt	tblptrh,c
  7368  000B46  D003               	bra	i2u218_47
  7369  000B48  0008               	tblrd		*
  7370  000B4A  50F5               	movf	tablat,w,c
  7371  000B4C  D001               	bra	i2u218_40
  7372  000B4E                     i2u218_47:
  7373  000B4E  D80F               	call	PL18	;call to abstracted procedure
  7374  000B50                     i2u218_40:
  7375  000B50  6E0D               	movwf	_inPipes+4,c	;volatile
  7376  000B52  6A0E               	clrf	_inPipes+5,c	;volatile
  7377                           
  7378                           ;usb_device.c: 2092: }
  7379  000B54  0012               	return	
  7380  000B56                     i2l615:
  7381                           
  7382                           ; BSR set to: 2
  7383                           ;usb_device.c: 2102: else
  7384                           ;usb_device.c: 2103: {
  7385                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7386  000B56  6A0C               	clrf	_inPipes+3,c	;volatile
  7387  000B58  0012               	return	
  7388  000B5A                     i2l617:
  7389                           
  7390                           ; BSR set to: 2
  7391                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7392  000B5A  6A0C               	clrf	_inPipes+3,c	;volatile
  7393                           
  7394                           ;usb_device.c: 2109: break;
  7395  000B5C  0012               	return	
  7396  000B5E                     i2l3489:
  7397                           
  7398                           ; BSR set to: 2
  7399  000B5E  5133               	movf	51,w,b	;volatile
  7400                           
  7401                           ; Switch size 1, requested type "space"
  7402                           ; Number of cases is 3, Range of values is 1 to 3
  7403                           ; switch strategies available:
  7404                           ; Name         Instructions Cycles
  7405                           ; simple_byte           10     6 (average)
  7406                           ;	Chosen strategy is simple_byte
  7407  000B60  0A01               	xorlw	1	; case 1
  7408  000B62  E0C0               	bz	i2l3469
  7409  000B64  0A03               	xorlw	3	; case 2
  7410  000B66  E0C8               	bz	i2l3473
  7411  000B68  0A01               	xorlw	1	; case 3
  7412  000B6A  E0E0               	bz	i2l3481
  7413  000B6C  D7F6               	goto	i2l617
  7414  000B6E                     __end_of_USBStdGetDscHandler:
  7415                           	opt stack 0
  7416  000B6E                     PL18:
  7417                           	opt stack 19
  7418  000B6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7419  000B72  CFF7 FFE2          	movff	tblptrh,fsr1h
  7420  000B76  50E7               	movf	indf1,w,c
  7421  000B78  0012               	return	
  7422  000B7A                     __end_ofPL18:
  7423                           	opt stack 0
  7424  000B7A                     PL40:
  7425                           	opt stack 21
  7426  000B7A  2409               	addwf	_inPipes,w,c	;volatile
  7427  000B7C  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7428  000B7E  0E00               	movlw	0
  7429  000B80  200A               	addwfc	_inPipes+1,w,c	;volatile
  7430  000B82  6E2B               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7431  000B84  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7432  000B88  C02B  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7433  000B8C  6AF8               	clrf	tblptru,c
  7434  000B8E  0E02               	movlw	(high __ramtop+-1)
  7435  000B90  0012               	return	
  7436  000B92                     __end_ofPL40:
  7437                           	opt stack 0
  7438  000B92                     PL58:
  7439                           	opt stack 21
  7440  000B92  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7441  000B94  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7442  000B98                     	if	1	;There is more than 1 active tblptr byte
  7443  000B98  0E03               	movlw	high __smallconst
  7444  000B9A  6EF7               	movwf	tblptrh,c
  7445  000B9C                     	endif
  7446  000B9C                     	if	0	;tblptru may be non-zero
  7447  000B9C                     	endif
  7448  000B9C                     	if	0	;tblptru may be non-zero
  7449  000B9C                     	endif
  7450  000B9C  0009               	tblrd		*+
  7451  000B9E  CFF5 F009          	movff	tablat,_inPipes	;volatile
  7452  000BA2  6E0A               	movwf	_inPipes+1,c	;volatile
  7453  000BA4  0012               	return	
  7454  000BA6                     __end_ofPL58:
  7455                           	opt stack 0
  7456                           tblptru	equ	0xFF8
  7457                           tblptrh	equ	0xFF7
  7458                           tblptrl	equ	0xFF6
  7459                           tablat	equ	0xFF5
  7460                           prodh	equ	0xFF4
  7461                           prodl	equ	0xFF3
  7462                           intcon	equ	0xFF2
  7463                           postinc0	equ	0xFEE
  7464                           wreg	equ	0xFE8
  7465                           indf1	equ	0xFE7
  7466                           postdec1	equ	0xFE5
  7467                           fsr1h	equ	0xFE2
  7468                           fsr1l	equ	0xFE1
  7469                           indf2	equ	0xFDF
  7470                           postinc2	equ	0xFDE
  7471                           postdec2	equ	0xFDD
  7472                           plusw2	equ	0xFDB
  7473                           fsr2h	equ	0xFDA
  7474                           fsr2l	equ	0xFD9
  7475                           status	equ	0xFD8
  7476                           
  7477 ;; *************** function _USBStdFeatureReqHandler *****************
  7478 ;; Defined at:
  7479 ;;		line 2754 in file "picLibs/usb_device.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;		None
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  p               2   25[COMRAM] PTR struct __BDT
  7484 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7485 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  7486 ;;		 -> UEP0(1), 
  7487 ;;  current_ep_d    1   24[COMRAM] struct .
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 3D/2
  7494 ;;		On exit  : 3D/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7497 ;;      Params:         0       0       0       0
  7498 ;;      Locals:         5       0       0       0
  7499 ;;      Temps:          2       0       0       0
  7500 ;;      Totals:         7       0       0       0
  7501 ;;Total ram usage:        7 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    4
  7504 ;; This function calls:
  7505 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7506 ;; This function is called by:
  7507 ;;		_USBCheckStdRequest
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text39
  7512  000668                     __ptext39:
  7513                           	opt stack 0
  7514  000668                     _USBStdFeatureReqHandler:
  7515                           	opt stack 17
  7516                           
  7517                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7518                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7519                           ;usb_device.c: 2761: unsigned char* pUEP;
  7520                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7521                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7522                           
  7523                           ;incstack = 0
  7524  000668  0102               	movlb	2	; () banked
  7525  00066A  0532               	decf	50,w,b	;volatile
  7526  00066C  E10B               	bnz	i2l3529
  7527                           
  7528                           ; BSR set to: 2
  7529  00066E  5130               	movf	48,w,b	;volatile
  7530  000670  0B1F               	andlw	31
  7531  000672  E108               	bnz	i2l3529
  7532                           
  7533                           ; BSR set to: 2
  7534                           ;usb_device.c: 2801: {
  7535                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7536  000674  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7537                           
  7538                           ; BSR set to: 2
  7539                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7540  000676  0E03               	movlw	3
  7541  000678  1931               	xorwf	49,w,b	;volatile
  7542  00067A  E103               	bnz	i2l700
  7543                           
  7544                           ; BSR set to: 2
  7545                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7546  00067C  0E01               	movlw	1
  7547  00067E  6E25               	movwf	_RemoteWakeup,c	;volatile
  7548  000680  D001               	goto	i2l3529
  7549  000682                     i2l700:
  7550                           
  7551                           ; BSR set to: 2
  7552                           ;usb_device.c: 2805: else
  7553                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7554  000682  6A25               	clrf	_RemoteWakeup,c	;volatile
  7555  000684                     i2l3529:
  7556                           
  7557                           ; BSR set to: 2
  7558                           ;usb_device.c: 2807: }
  7559                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7560                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7561                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7562                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7563  000684  5132               	movf	50,w,b	;volatile
  7564  000686  A4D8               	btfss	status,2,c
  7565  000688  0012               	return	
  7566                           
  7567                           ; BSR set to: 2
  7568  00068A  5130               	movf	48,w,b	;volatile
  7569  00068C  0B1F               	andlw	31
  7570  00068E  0A02               	xorlw	2
  7571  000690  A4D8               	btfss	status,2,c
  7572  000692  0012               	return	
  7573                           
  7574                           ; BSR set to: 2
  7575  000694  5134               	movf	52,w,b	;volatile
  7576  000696  0B0F               	andlw	15
  7577  000698  B4D8               	btfsc	status,2,c
  7578  00069A  0012               	return	
  7579                           
  7580                           ; BSR set to: 2
  7581  00069C  5134               	movf	52,w,b	;volatile
  7582  00069E  0B0F               	andlw	15
  7583  0006A0  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7584  0006A2  0E03               	movlw	3
  7585  0006A4  603E               	cpfslt	??_USBStdFeatureReqHandler,c
  7586  0006A6  0C03               	retlw	3
  7587                           
  7588                           ; BSR set to: 2
  7589  0006A8  0E20               	movlw	32
  7590  0006AA  0100               	movlb	0	; () banked
  7591  0006AC  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7592  0006AE  A4D8               	btfss	status,2,c
  7593  0006B0  0012               	return	
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;usb_device.c: 2814: {
  7597                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7598  0006B2  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7599                           
  7600                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7601  0006B4  0102               	movlb	2	; () banked
  7602  0006B6  BF34               	btfsc	52,7,b	;volatile
  7603  0006B8  D007               	goto	i2l3545
  7604                           
  7605                           ; BSR set to: 2
  7606                           ;usb_device.c: 2821: {
  7607                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7608  0006BA  5134               	movf	52,w,b	;volatile
  7609  0006BC  0B0F               	andlw	15
  7610  0006BE  EC14  F006         	call	PL32	;call to abstracted procedure
  7611                           
  7612                           ; BSR set to: 2
  7613                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7614  0006C2  D88B               	call	PL64	;call to abstracted procedure
  7615  0006C4  0F70               	addlw	low _ep_data_out
  7616  0006C6  D006               	goto	L6
  7617  0006C8                     i2l3545:
  7618                           
  7619                           ; BSR set to: 2
  7620                           ;usb_device.c: 2825: else
  7621                           ;usb_device.c: 2826: {
  7622                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7623  0006C8  5134               	movf	52,w,b	;volatile
  7624  0006CA  0B0F               	andlw	15
  7625  0006CC  EC1A  F006         	call	PL34	;call to abstracted procedure
  7626                           
  7627                           ; BSR set to: 2
  7628                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7629  0006D0  D884               	call	PL64	;call to abstracted procedure
  7630  0006D2  0F73               	addlw	low _ep_data_in
  7631  0006D4                     L6:
  7632  0006D4  6ED9               	movwf	fsr2l,c
  7633  0006D6  6ADA               	clrf	fsr2h,c
  7634  0006D8  50DF               	movf	indf2,w,c
  7635  0006DA  6E42               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7636                           
  7637                           ; BSR set to: 2
  7638                           ;usb_device.c: 2829: }
  7639                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7640  0006DC  B042               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7641  0006DE  D003               	goto	i2l3553
  7642                           
  7643                           ; BSR set to: 2
  7644                           ;usb_device.c: 2836: {
  7645                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7646  0006E0  0EFB               	movlw	251
  7647  0006E2  1643               	andwf	USBStdFeatureReqHandler@p,f,c
  7648  0006E4  D002               	goto	L7
  7649  0006E6                     i2l3553:
  7650                           
  7651                           ; BSR set to: 2
  7652                           ;usb_device.c: 2839: else
  7653                           ;usb_device.c: 2840: {
  7654                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7655  0006E6  0E04               	movlw	4
  7656  0006E8  1243               	iorwf	USBStdFeatureReqHandler@p,f,c
  7657  0006EA                     L7:
  7658  0006EA  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7659                           
  7660                           ; BSR set to: 2
  7661                           ;usb_device.c: 2842: }
  7662                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7663  0006EC  BF34               	btfsc	52,7,b	;volatile
  7664  0006EE  D003               	goto	i2l3559
  7665                           
  7666                           ; BSR set to: 2
  7667                           ;usb_device.c: 2848: {
  7668                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7669  0006F0  D882               	call	PL68	;call to abstracted procedure
  7670  0006F2  0F60               	addlw	low _pBDTEntryOut
  7671  0006F4  D002               	goto	L8
  7672  0006F6                     i2l3559:
  7673                           
  7674                           ; BSR set to: 2
  7675                           ;usb_device.c: 2851: else
  7676                           ;usb_device.c: 2852: {
  7677                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7678  0006F6  D87F               	call	PL68	;call to abstracted procedure
  7679  0006F8  0F0F               	addlw	low _pBDTEntryIn
  7680  0006FA                     L8:
  7681  0006FA  6ED9               	movwf	fsr2l,c
  7682  0006FC  6ADA               	clrf	fsr2h,c
  7683  0006FE  C043  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7684  000702  C044  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7685                           
  7686                           ; BSR set to: 2
  7687                           ;usb_device.c: 2854: }
  7688                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7689  000706  0E03               	movlw	3
  7690  000708  1931               	xorwf	49,w,b	;volatile
  7691  00070A  E114               	bnz	i2l3571
  7692                           
  7693                           ; BSR set to: 2
  7694                           ;usb_device.c: 2858: {
  7695                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7696  00070C  D856               	call	PL26	;call to abstracted procedure
  7697  00070E  AEDF               	btfss	indf2,7,c
  7698  000710  D00B               	goto	i2l710
  7699                           
  7700                           ; BSR set to: 2
  7701                           ;usb_device.c: 2860: {
  7702                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7703  000712  BF34               	btfsc	52,7,b	;volatile
  7704  000714  D003               	goto	i2l3569
  7705                           
  7706                           ; BSR set to: 2
  7707                           ;usb_device.c: 2864: {
  7708                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7709  000716  D86A               	call	PL66	;call to abstracted procedure
  7710  000718  0F70               	addlw	low _ep_data_out
  7711  00071A  D002               	goto	L9
  7712  00071C                     i2l3569:
  7713                           
  7714                           ; BSR set to: 2
  7715                           ;usb_device.c: 2867: else
  7716                           ;usb_device.c: 2868: {
  7717                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7718  00071C  D867               	call	PL66	;call to abstracted procedure
  7719  00071E  0F73               	addlw	low _ep_data_in
  7720  000720                     L9:
  7721  000720  6ED9               	movwf	fsr2l,c
  7722  000722  6ADA               	clrf	fsr2h,c
  7723  000724  0100               	movlb	0	; () banked
  7724  000726  82DF               	bsf	indf2,1,c
  7725  000728                     i2l710:
  7726                           
  7727                           ;usb_device.c: 2870: }
  7728                           ;usb_device.c: 2871: }
  7729                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7730  000728  D848               	call	PL26	;call to abstracted procedure
  7731  00072A  0E00               	movlw	0
  7732  00072C  84DB               	bsf	plusw2,2,c
  7733                           
  7734                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7735  00072E  D845               	call	PL26	;call to abstracted procedure
  7736  000730  8EDB               	bsf	plusw2,7,c
  7737                           
  7738                           ;usb_device.c: 2876: }
  7739  000732  0C00               	retlw	0
  7740  000734                     i2l3571:
  7741                           
  7742                           ; BSR set to: 2
  7743                           ;usb_device.c: 2877: else
  7744                           ;usb_device.c: 2878: {
  7745                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7746  000734  0E04               	movlw	4
  7747  000736  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7748  000738  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7749                           
  7750                           ; BSR set to: 2
  7751                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7752  00073A  D83F               	call	PL26	;call to abstracted procedure
  7753  00073C  AEDF               	btfss	indf2,7,c
  7754  00073E  D00A               	goto	i2l3581
  7755                           
  7756                           ; BSR set to: 2
  7757                           ;usb_device.c: 2885: {
  7758                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7759  000740  D83C               	call	PL26	;call to abstracted procedure
  7760  000742  0E7F               	movlw	127
  7761  000744  16DF               	andwf	indf2,f,c
  7762                           
  7763                           ; BSR set to: 2
  7764                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7765  000746  D839               	call	PL26	;call to abstracted procedure
  7766  000748  0E00               	movlw	0
  7767  00074A  8CDB               	bsf	plusw2,6,c
  7768                           
  7769                           ; BSR set to: 2
  7770                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7771  00074C  D83B               	call	PL46	;call to abstracted procedure
  7772  00074E  EC63  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7773                           
  7774                           ;usb_device.c: 2891: }
  7775  000752  D003               	goto	i2l3583
  7776  000754                     i2l3581:
  7777                           
  7778                           ; BSR set to: 2
  7779                           ;usb_device.c: 2892: else
  7780                           ;usb_device.c: 2893: {
  7781                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7782  000754  D832               	call	PL26	;call to abstracted procedure
  7783  000756  0E00               	movlw	0
  7784  000758  8CDB               	bsf	plusw2,6,c
  7785  00075A                     i2l3583:
  7786                           
  7787                           ;usb_device.c: 2896: }
  7788                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7789  00075A  0E04               	movlw	4
  7790  00075C  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7791  00075E  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7792                           
  7793                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7794  000760  B242               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7795  000762  D003               	goto	i2l718
  7796  000764  D82A               	call	PL26	;call to abstracted procedure
  7797  000766  AEDF               	btfss	indf2,7,c
  7798  000768  D013               	goto	i2l3597
  7799  00076A                     i2l718:
  7800                           
  7801                           ;usb_device.c: 2907: {
  7802                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7803  00076A  0102               	movlb	2	; () banked
  7804  00076C  BF34               	btfsc	52,7,b	;volatile
  7805  00076E  D003               	goto	i2l3591
  7806                           
  7807                           ; BSR set to: 2
  7808                           ;usb_device.c: 2909: {
  7809                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7810  000770  D83D               	call	PL66	;call to abstracted procedure
  7811  000772  0F70               	addlw	low _ep_data_out
  7812  000774  D002               	goto	L10
  7813  000776                     i2l3591:
  7814                           
  7815                           ; BSR set to: 2
  7816                           ;usb_device.c: 2912: else
  7817                           ;usb_device.c: 2913: {
  7818                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7819  000776  D83A               	call	PL66	;call to abstracted procedure
  7820  000778  0F73               	addlw	low _ep_data_in
  7821  00077A                     L10:
  7822  00077A  6ED9               	movwf	fsr2l,c
  7823  00077C  6ADA               	clrf	fsr2h,c
  7824  00077E  0100               	movlb	0	; () banked
  7825  000780  92DF               	bcf	indf2,1,c
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;usb_device.c: 2915: }
  7829                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7830  000782  D81B               	call	PL26	;call to abstracted procedure
  7831  000784  0E3B               	movlw	59
  7832  000786  16DF               	andwf	indf2,f,c
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7836  000788  D81D               	call	PL46	;call to abstracted procedure
  7837  00078A  EC63  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7838                           
  7839                           ;usb_device.c: 2921: }
  7840  00078E  D003               	goto	i2l3599
  7841  000790                     i2l3597:
  7842                           
  7843                           ;usb_device.c: 2922: else
  7844                           ;usb_device.c: 2923: {
  7845                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7846  000790  D814               	call	PL26	;call to abstracted procedure
  7847  000792  0E3B               	movlw	59
  7848  000794  16DF               	andwf	indf2,f,c
  7849  000796                     i2l3599:
  7850                           
  7851                           ;usb_device.c: 2926: }
  7852                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7853  000796  0102               	movlb	2	; () banked
  7854  000798  5134               	movf	52,w,b	;volatile
  7855  00079A  0B0F               	andlw	15
  7856  00079C  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7857  00079E  6A3F               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  7858  0007A0  0E53               	movlw	83
  7859  0007A2  243E               	addwf	??_USBStdFeatureReqHandler,w,c
  7860  0007A4  6E40               	movwf	USBStdFeatureReqHandler@pUEP,c
  7861  0007A6  0E0F               	movlw	15
  7862  0007A8  203F               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  7863  0007AA  6E41               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7864                           
  7865                           ; BSR set to: 2
  7866                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7867  0007AC  C040  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7868  0007B0  C041  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7869  0007B4  0EFE               	movlw	254
  7870  0007B6  16DF               	andwf	indf2,f,c
  7871  0007B8  0CFE               	retlw	254	;funcret
  7872  0007BA                     __end_of_USBStdFeatureReqHandler:
  7873                           	opt stack 0
  7874  0007BA                     PL26:
  7875                           	opt stack 17
  7876  0007BA  C043  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7877  0007BE  C044  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7878  0007C2  0012               	return	
  7879  0007C4                     __end_ofPL26:
  7880                           	opt stack 0
  7881  0007C4                     PL46:
  7882                           	opt stack 17
  7883  0007C4  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7884  0007C6  0E05               	movlw	5
  7885  0007C8  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7886  0007CA  C043  F038         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7887  0007CE  C044  F039         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7888  0007D2  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7889  0007D4  0E02               	movlw	2
  7890  0007D6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7891  0007D8  0C02               	retlw	2
  7892  0007DA                     __end_ofPL46:
  7893                           	opt stack 0
  7894  0007DA                     PL64:
  7895                           	opt stack 17
  7896  0007DA  CFDE F043          	movff	postinc2,USBStdFeatureReqHandler@p
  7897  0007DE  CFDD F044          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7898  0007E2  5134               	movf	52,w,b	;volatile
  7899  0007E4  0B0F               	andlw	15
  7900  0007E6  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7901  0007E8  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7902  0007EA  0012               	return	
  7903  0007EC                     __end_ofPL64:
  7904                           	opt stack 0
  7905  0007EC                     PL66:
  7906                           	opt stack 17
  7907  0007EC  5134               	movf	52,w,b	;volatile
  7908  0007EE  0B0F               	andlw	15
  7909  0007F0  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7910  0007F2  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7911  0007F4  0012               	return	
  7912  0007F6                     __end_ofPL66:
  7913                           	opt stack 0
  7914  0007F6                     PL68:
  7915                           	opt stack 21
  7916  0007F6  5134               	movf	52,w,b	;volatile
  7917  0007F8  0B0F               	andlw	15
  7918  0007FA  0D02               	mullw	2
  7919  0007FC  50F3               	movf	prodl,w,c
  7920  0007FE  0012               	return	
  7921  000800                     __end_ofPL68:
  7922                           	opt stack 0
  7923                           tblptru	equ	0xFF8
  7924                           tblptrh	equ	0xFF7
  7925                           tblptrl	equ	0xFF6
  7926                           tablat	equ	0xFF5
  7927                           prodh	equ	0xFF4
  7928                           prodl	equ	0xFF3
  7929                           intcon	equ	0xFF2
  7930                           postinc0	equ	0xFEE
  7931                           wreg	equ	0xFE8
  7932                           indf1	equ	0xFE7
  7933                           postdec1	equ	0xFE5
  7934                           fsr1h	equ	0xFE2
  7935                           fsr1l	equ	0xFE1
  7936                           indf2	equ	0xFDF
  7937                           postinc2	equ	0xFDE
  7938                           postdec2	equ	0xFDD
  7939                           plusw2	equ	0xFDB
  7940                           fsr2h	equ	0xFDA
  7941                           fsr2l	equ	0xFD9
  7942                           status	equ	0xFD8
  7943                           
  7944 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7945 ;; Defined at:
  7946 ;;		line 51 in file "picLibs/usb_events.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  event           2   12[COMRAM] enum E3370
  7949 ;;  pdata           2   14[COMRAM] PTR void 
  7950 ;;		 -> RAM(767), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7951 ;;		 -> BDT(48), 
  7952 ;;  size            2   16[COMRAM] unsigned int 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      unsigned char 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7964 ;;      Params:         6       0       0       0
  7965 ;;      Locals:         0       0       0       0
  7966 ;;      Temps:          2       0       0       0
  7967 ;;      Totals:         8       0       0       0
  7968 ;;Total ram usage:        8 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:    3
  7971 ;; This function calls:
  7972 ;;		_APP_DeviceCDCBasicDemoInitialize
  7973 ;;		_APP_LEDUpdateUSBStatus
  7974 ;;		_CDCInitEP
  7975 ;;		_USBCheckCDCRequest
  7976 ;;		i2_SYSTEM_Initialize
  7977 ;; This function is called by:
  7978 ;;		_USBDeviceTasks
  7979 ;;		_USBStdSetCfgHandler
  7980 ;;		_USBSuspend
  7981 ;;		_USBWakeFromSuspend
  7982 ;;		_USBCtrlTrfSetupHandler
  7983 ;;		_USBCheckStdRequest
  7984 ;;		_USBStdFeatureReqHandler
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text40
  7989  0014C6                     __ptext40:
  7990                           	opt stack 0
  7991  0014C6                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7992                           	opt stack 21
  7993                           
  7994                           ;usb_events.c: 53: switch( (int) event )
  7995                           
  7996                           ;incstack = 0
  7997  0014C6  D00E               	goto	i2l3311
  7998  0014C8                     i2l3299:
  7999                           
  8000                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  8001  0014C8  ECF4  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  8002                           
  8003                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  8004  0014CC  0E01               	movlw	1
  8005  0014CE  EFA2  F00D         	goto	i2_SYSTEM_Initialize
  8006  0014D2                     i2l3301:
  8007                           
  8008                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  8009  0014D2  ECF4  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  8010                           
  8011                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  8012  0014D6  0E02               	movlw	2
  8013  0014D8  EFA2  F00D         	goto	i2_SYSTEM_Initialize
  8014  0014DC                     i2l3303:
  8015                           
  8016                           ;usb_events.c: 91: CDCInitEP();
  8017  0014DC  ECB0  F00B         	call	_CDCInitEP	;wreg free
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;usb_events.c: 92: APP_DeviceCDCBasicDemoInitialize();
  8021  0014E0  EFE8  F00D         	goto	_APP_DeviceCDCBasicDemoInitialize	;wreg free
  8022  0014E4                     i2l3311:
  8023  0014E4  C036  F03C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  8024  0014E8  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  8025                           
  8026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8027                           ; Switch size 1, requested type "space"
  8028                           ; Number of cases is 2, Range of values is 0 to 127
  8029                           ; switch strategies available:
  8030                           ; Name         Instructions Cycles
  8031                           ; simple_byte            7     4 (average)
  8032                           ;	Chosen strategy is simple_byte
  8033  0014EC  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  8034  0014EE  E004               	bz	i2l5275
  8035  0014F0  0A7F               	xorlw	127	; case 127
  8036  0014F2  A4D8               	btfss	status,2,c
  8037  0014F4  0012               	return	
  8038  0014F6  D01A               	goto	i2l5277
  8039  0014F8                     i2l5275:
  8040                           
  8041                           ; Switch size 1, requested type "space"
  8042                           ; Number of cases is 8, Range of values is 1 to 117
  8043                           ; switch strategies available:
  8044                           ; Name         Instructions Cycles
  8045                           ; simple_byte           25    13 (average)
  8046                           ;	Chosen strategy is simple_byte
  8047  0014F8  503C               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  8048  0014FA  0A01               	xorlw	1	; case 1
  8049  0014FC  E0EF               	bz	i2l3303
  8050  0014FE  0A03               	xorlw	3	; case 2
  8051  001500  B4D8               	btfsc	status,2,c
  8052  001502  0012               	return	
  8053  001504  0A01               	xorlw	1	; case 3
  8054  001506  E102 EFCA  F008    	bz	_USBCheckCDCRequest
  8055  00150C  0A06               	xorlw	6	; case 5
  8056  00150E  B4D8               	btfsc	status,2,c
  8057  001510  0012               	return	
  8058  001512  0A77               	xorlw	119	; case 114
  8059  001514  B4D8               	btfsc	status,2,c
  8060  001516  0012               	return	
  8061  001518  0A01               	xorlw	1	; case 115
  8062  00151A  E102 EFF4  F009    	bz	_APP_LEDUpdateUSBStatus
  8063  001520  0A07               	xorlw	7	; case 116
  8064  001522  E0D7               	bz	i2l3301
  8065  001524  0A01               	xorlw	1	; case 117
  8066  001526  A4D8               	btfss	status,2,c
  8067  001528  0012               	return	
  8068  00152A  D7CE               	goto	i2l3299
  8069  00152C                     i2l5277:
  8070                           
  8071                           ; Switch size 1, requested type "space"
  8072                           ; Number of cases is 1, Range of values is 255 to 255
  8073                           ; switch strategies available:
  8074                           ; Name         Instructions Cycles
  8075                           ; simple_byte            4     3 (average)
  8076                           ;	Chosen strategy is simple_byte
  8077  00152C  1C3C               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  8078  00152E  0012               	return	
  8079  001530                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  8080                           	opt stack 0
  8081                           tblptru	equ	0xFF8
  8082                           tblptrh	equ	0xFF7
  8083                           tblptrl	equ	0xFF6
  8084                           tablat	equ	0xFF5
  8085                           prodh	equ	0xFF4
  8086                           prodl	equ	0xFF3
  8087                           intcon	equ	0xFF2
  8088                           postinc0	equ	0xFEE
  8089                           wreg	equ	0xFE8
  8090                           indf1	equ	0xFE7
  8091                           postdec1	equ	0xFE5
  8092                           fsr1h	equ	0xFE2
  8093                           fsr1l	equ	0xFE1
  8094                           indf2	equ	0xFDF
  8095                           postinc2	equ	0xFDE
  8096                           postdec2	equ	0xFDD
  8097                           plusw2	equ	0xFDB
  8098                           fsr2h	equ	0xFDA
  8099                           fsr2l	equ	0xFD9
  8100                           status	equ	0xFD8
  8101                           
  8102 ;; *************** function i2_SYSTEM_Initialize *****************
  8103 ;; Defined at:
  8104 ;;		line 66 in file "picLibs/system.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  state           1    wreg     enum E3329
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  state           1    1[COMRAM] enum E3329
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  1    wreg      void 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2, status,0, cstack
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8118 ;;      Params:         0       0       0       0
  8119 ;;      Locals:         1       0       0       0
  8120 ;;      Temps:          0       0       0       0
  8121 ;;      Totals:         1       0       0       0
  8122 ;;Total ram usage:        1 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    1
  8125 ;; This function calls:
  8126 ;;		i2_BUTTON_Enable
  8127 ;;		i2_LED_Enable
  8128 ;; This function is called by:
  8129 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text41
  8134  001B44                     __ptext41:
  8135                           	opt stack 0
  8136  001B44                     i2_SYSTEM_Initialize:
  8137                           	opt stack 22
  8138                           
  8139                           ;incstack = 0
  8140                           ;i2SYSTEM_Initialize@state stored from wreg
  8141  001B44  6E2B               	movwf	i2SYSTEM_Initialize@state,c
  8142                           
  8143                           ;system.c: 68: switch(state)
  8144  001B46  D006               	goto	i2l3293
  8145  001B48                     i2l3289:
  8146                           
  8147                           ;system.c: 71: LED_Enable(LED_D1);
  8148  001B48  0E01               	movlw	1
  8149  001B4A  EC05  F00D         	call	i2_LED_Enable
  8150                           
  8151                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  8152  001B4E  0E01               	movlw	1
  8153  001B50  EFFE  F00D         	goto	i2_BUTTON_Enable
  8154  001B54                     i2l3293:
  8155  001B54  502B               	movf	i2SYSTEM_Initialize@state,w,c
  8156                           
  8157                           ; Switch size 1, requested type "space"
  8158                           ; Number of cases is 3, Range of values is 0 to 2
  8159                           ; switch strategies available:
  8160                           ; Name         Instructions Cycles
  8161                           ; simple_byte           10     6 (average)
  8162                           ;	Chosen strategy is simple_byte
  8163  001B56  E0F8               	bz	i2l3289
  8164  001B58  D000               	goto	PL114	;call to abstracted procedure
  8165  001B5A                     __end_ofi2_SYSTEM_Initialize:
  8166                           	opt stack 0
  8167  001B5A                     PL114:
  8168                           	opt stack 19
  8169  001B5A  0A01               	xorlw	1	; case 1
  8170  001B5C  A4D8               	btfss	status,2,c
  8171  001B5E  0A03               	xorlw	3	; case 2
  8172  001B60  0012               	return	
  8173  001B62                     __end_ofPL114:
  8174                           	opt stack 0
  8175                           tblptru	equ	0xFF8
  8176                           tblptrh	equ	0xFF7
  8177                           tblptrl	equ	0xFF6
  8178                           tablat	equ	0xFF5
  8179                           prodh	equ	0xFF4
  8180                           prodl	equ	0xFF3
  8181                           intcon	equ	0xFF2
  8182                           postinc0	equ	0xFEE
  8183                           wreg	equ	0xFE8
  8184                           indf1	equ	0xFE7
  8185                           postdec1	equ	0xFE5
  8186                           fsr1h	equ	0xFE2
  8187                           fsr1l	equ	0xFE1
  8188                           indf2	equ	0xFDF
  8189                           postinc2	equ	0xFDE
  8190                           postdec2	equ	0xFDD
  8191                           plusw2	equ	0xFDB
  8192                           fsr2h	equ	0xFDA
  8193                           fsr2l	equ	0xFD9
  8194                           status	equ	0xFD8
  8195                           
  8196 ;; *************** function i2_LED_Enable *****************
  8197 ;; Defined at:
  8198 ;;		line 220 in file "picLibs/leds.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  led             1    wreg     enum E2
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  led             1    0[COMRAM] enum E2
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2, status,0
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8212 ;;      Params:         0       0       0       0
  8213 ;;      Locals:         1       0       0       0
  8214 ;;      Temps:          0       0       0       0
  8215 ;;      Totals:         1       0       0       0
  8216 ;;Total ram usage:        1 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; This function calls:
  8219 ;;		Nothing
  8220 ;; This function is called by:
  8221 ;;		i2_SYSTEM_Initialize
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text42
  8226  001A0A                     __ptext42:
  8227                           	opt stack 0
  8228  001A0A                     i2_LED_Enable:
  8229                           	opt stack 22
  8230                           
  8231                           ;incstack = 0
  8232                           ;i2LED_Enable@led stored from wreg
  8233  001A0A  6E2A               	movwf	i2LED_Enable@led,c
  8234                           
  8235                           ;leds.c: 222: switch(led)
  8236  001A0C  D008               	goto	i2l3149
  8237  001A0E                     i2l295:
  8238                           
  8239                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  8240  001A0E  9094               	bcf	3988,0,c	;volatile
  8241                           
  8242                           ;leds.c: 226: break;
  8243  001A10  0012               	return	
  8244  001A12                     i2l297:
  8245                           
  8246                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  8247  001A12  9294               	bcf	3988,1,c	;volatile
  8248                           
  8249                           ;leds.c: 230: break;
  8250  001A14  0012               	return	
  8251  001A16                     i2l298:
  8252                           
  8253                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  8254  001A16  9494               	bcf	3988,2,c	;volatile
  8255                           
  8256                           ;leds.c: 234: break;
  8257  001A18  0012               	return	
  8258  001A1A                     i2l299:
  8259                           
  8260                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  8261  001A1A  9694               	bcf	3988,3,c	;volatile
  8262                           
  8263                           ;leds.c: 238: break;
  8264  001A1C  0012               	return	
  8265  001A1E                     i2l3149:
  8266  001A1E  502A               	movf	i2LED_Enable@led,w,c
  8267                           
  8268                           ; Switch size 1, requested type "space"
  8269                           ; Number of cases is 5, Range of values is 0 to 4
  8270                           ; switch strategies available:
  8271                           ; Name         Instructions Cycles
  8272                           ; simple_byte           16     9 (average)
  8273                           ;	Chosen strategy is simple_byte
  8274  001A20  B4D8               	btfsc	status,2,c
  8275  001A22  0012               	return	
  8276  001A24  0A01               	xorlw	1	; case 1
  8277  001A26  E0F3               	bz	i2l295
  8278  001A28  0A03               	xorlw	3	; case 2
  8279  001A2A  E0F3               	bz	i2l297
  8280  001A2C  0A01               	xorlw	1	; case 3
  8281  001A2E  E0F3               	bz	i2l298
  8282  001A30  0A07               	xorlw	7	; case 4
  8283  001A32  E0F3               	bz	i2l299
  8284  001A34  0012               	return		;funcret
  8285  001A36                     __end_ofi2_LED_Enable:
  8286                           	opt stack 0
  8287                           tblptru	equ	0xFF8
  8288                           tblptrh	equ	0xFF7
  8289                           tblptrl	equ	0xFF6
  8290                           tablat	equ	0xFF5
  8291                           prodh	equ	0xFF4
  8292                           prodl	equ	0xFF3
  8293                           intcon	equ	0xFF2
  8294                           postinc0	equ	0xFEE
  8295                           wreg	equ	0xFE8
  8296                           indf1	equ	0xFE7
  8297                           postdec1	equ	0xFE5
  8298                           fsr1h	equ	0xFE2
  8299                           fsr1l	equ	0xFE1
  8300                           indf2	equ	0xFDF
  8301                           postinc2	equ	0xFDE
  8302                           postdec2	equ	0xFDD
  8303                           plusw2	equ	0xFDB
  8304                           fsr2h	equ	0xFDA
  8305                           fsr2l	equ	0xFD9
  8306                           status	equ	0xFD8
  8307                           
  8308 ;; *************** function i2_BUTTON_Enable *****************
  8309 ;; Defined at:
  8310 ;;		line 85 in file "picLibs/buttons.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  button          1    wreg     enum E3304
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  button          1    0[COMRAM] enum E3304
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8324 ;;      Params:         0       0       0       0
  8325 ;;      Locals:         1       0       0       0
  8326 ;;      Temps:          0       0       0       0
  8327 ;;      Totals:         1       0       0       0
  8328 ;;Total ram usage:        1 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; This function calls:
  8331 ;;		Nothing
  8332 ;; This function is called by:
  8333 ;;		i2_SYSTEM_Initialize
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text43
  8338  001BFC                     __ptext43:
  8339                           	opt stack 0
  8340  001BFC                     i2_BUTTON_Enable:
  8341                           	opt stack 22
  8342                           
  8343                           ;incstack = 0
  8344                           ;i2BUTTON_Enable@button stored from wreg
  8345  001BFC  6E2A               	movwf	i2BUTTON_Enable@button,c
  8346                           
  8347                           ;buttons.c: 87: switch(button)
  8348  001BFE  502A               	movf	i2BUTTON_Enable@button,w,c
  8349                           
  8350                           ; Switch size 1, requested type "space"
  8351                           ; Number of cases is 2, Range of values is 0 to 1
  8352                           ; switch strategies available:
  8353                           ; Name         Instructions Cycles
  8354                           ; simple_byte            7     4 (average)
  8355                           ;	Chosen strategy is simple_byte
  8356  001C00  D000               	goto	PL124	;call to abstracted procedure
  8357  001C02                     __end_ofi2_BUTTON_Enable:
  8358                           	opt stack 0
  8359  001C02                     PL124:
  8360                           	opt stack 19
  8361  001C02  A4D8               	btfss	status,2,c
  8362  001C04  0A01               	xorlw	1	; case 1
  8363  001C06  0012               	return	
  8364  001C08                     __end_ofPL124:
  8365                           	opt stack 0
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           prodh	equ	0xFF4
  8371                           prodl	equ	0xFF3
  8372                           intcon	equ	0xFF2
  8373                           postinc0	equ	0xFEE
  8374                           wreg	equ	0xFE8
  8375                           indf1	equ	0xFE7
  8376                           postdec1	equ	0xFE5
  8377                           fsr1h	equ	0xFE2
  8378                           fsr1l	equ	0xFE1
  8379                           indf2	equ	0xFDF
  8380                           postinc2	equ	0xFDE
  8381                           postdec2	equ	0xFDD
  8382                           plusw2	equ	0xFDB
  8383                           fsr2h	equ	0xFDA
  8384                           fsr2l	equ	0xFD9
  8385                           status	equ	0xFD8
  8386                           
  8387 ;; *************** function _USBCheckCDCRequest *****************
  8388 ;; Defined at:
  8389 ;;		line 147 in file "picLibs/usb_device_cdc.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 3F/2
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8403 ;;      Params:         0       0       0       0
  8404 ;;      Locals:         0       0       0       0
  8405 ;;      Temps:          0       0       0       0
  8406 ;;      Totals:         0       0       0       0
  8407 ;;Total ram usage:        0 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text44
  8417  001194                     __ptext44:
  8418                           	opt stack 0
  8419  001194                     _USBCheckCDCRequest:
  8420                           	opt stack 23
  8421                           
  8422                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8423                           
  8424                           ;incstack = 0
  8425  001194  0102               	movlb	2	; () banked
  8426  001196  5130               	movf	48,w,b	;volatile
  8427  001198  0B1F               	andlw	31
  8428  00119A  06E8               	decf	wreg,f,c
  8429  00119C  E001               	bz	i2l3227
  8430  00119E  0012               	return	
  8431  0011A0                     i2l3227:
  8432                           
  8433                           ; BSR set to: 2
  8434                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8435  0011A0  3930               	swapf	48,w,b	;volatile
  8436  0011A2  32E8               	rrcf	wreg,f,c
  8437  0011A4  0B03               	andlw	3
  8438  0011A6  06E8               	decf	wreg,f,c
  8439  0011A8  E001               	bz	i2l3231
  8440  0011AA  0012               	return	
  8441  0011AC                     i2l3231:
  8442                           
  8443                           ; BSR set to: 2
  8444                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8445                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8446  0011AC  5134               	movf	52,w,b	;volatile
  8447  0011AE  E027               	bz	i2l3267
  8448                           
  8449                           ; BSR set to: 2
  8450  0011B0  0534               	decf	52,w,b	;volatile
  8451  0011B2  E025               	bz	i2l3267
  8452  0011B4  0012               	return	
  8453  0011B6                     i2l3237:
  8454                           
  8455                           ; BSR set to: 2
  8456                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8457  0011B6  0EC2               	movlw	low _dummy_encapsulated_cmd_response
  8458  0011B8  6E09               	movwf	_inPipes,c	;volatile
  8459  0011BA  6A0A               	clrf	_inPipes+1,c	;volatile
  8460                           
  8461                           ; BSR set to: 2
  8462                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8463  0011BC  6A0E               	clrf	_inPipes+5,c	;volatile
  8464  0011BE  0E08               	movlw	8
  8465  0011C0  6E0D               	movwf	_inPipes+4,c	;volatile
  8466                           
  8467                           ; BSR set to: 2
  8468                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8469  0011C2  800C               	bsf	_inPipes+3,0,c	;volatile
  8470                           
  8471                           ; BSR set to: 2
  8472                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8473  0011C4  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8474                           
  8475                           ;usb_device_cdc.c: 175: break;
  8476  0011C6  0C08               	retlw	8
  8477  0011C8                     i2l3245:
  8478                           
  8479                           ; BSR set to: 2
  8480                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8481  0011C8  0EC2               	movlw	low _dummy_encapsulated_cmd_response
  8482  0011CA  6E09               	movwf	_inPipes,c	;volatile
  8483  0011CC  6A0A               	clrf	_inPipes+1,c	;volatile
  8484                           
  8485                           ; BSR set to: 2
  8486                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8487  0011CE  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8488                           
  8489                           ;usb_device_cdc.c: 180: break;
  8490  0011D0  0012               	return	
  8491  0011D2                     i2l785:
  8492                           
  8493                           ; BSR set to: 2
  8494                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8495  0011D2  C236 F005          	movff	566,_outPipes+4	;volatile
  8496  0011D6  C237 F006          	movff	567,_outPipes+5	;volatile
  8497                           
  8498                           ; BSR set to: 2
  8499                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8500  0011DA  0ECA               	movlw	low _line_coding
  8501  0011DC  6E01               	movwf	_outPipes,c	;volatile
  8502                           
  8503                           ; BSR set to: 2
  8504                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8505  0011DE  6A07               	clrf	_outPipes+6,c	;volatile
  8506  0011E0  6A08               	clrf	_outPipes+7,c	;volatile
  8507                           
  8508                           ; BSR set to: 2
  8509                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8510  0011E2  8E04               	bsf	_outPipes+3,7,c	;volatile
  8511                           
  8512                           ;usb_device_cdc.c: 189: break;
  8513  0011E4  0012               	return	
  8514  0011E6                     i2l3255:
  8515                           
  8516                           ; BSR set to: 2
  8517                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8518  0011E6  0ECA               	movlw	low _line_coding
  8519  0011E8  6E09               	movwf	_inPipes,c	;volatile
  8520  0011EA  6A0A               	clrf	_inPipes+1,c	;volatile
  8521                           
  8522                           ; BSR set to: 2
  8523  0011EC  6A0E               	clrf	_inPipes+5,c	;volatile
  8524  0011EE  0E07               	movlw	7
  8525  0011F0  6E0D               	movwf	_inPipes+4,c	;volatile
  8526                           
  8527                           ; BSR set to: 2
  8528  0011F2  0EC1               	movlw	193
  8529  0011F4  6E0C               	movwf	_inPipes+3,c	;volatile
  8530                           
  8531                           ;usb_device_cdc.c: 196: break;
  8532  0011F6  0CC1               	retlw	193
  8533  0011F8                     i2l3261:
  8534                           
  8535                           ; BSR set to: 2
  8536                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8537  0011F8  5132               	movf	50,w,b	;volatile
  8538                           
  8539                           ; BSR set to: 2
  8540                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8541  0011FA  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8542                           
  8543                           ;usb_device_cdc.c: 232: break;
  8544  0011FC  0012               	return	
  8545  0011FE                     i2l3267:
  8546                           
  8547                           ; BSR set to: 2
  8548  0011FE  5131               	movf	49,w,b	;volatile
  8549                           
  8550                           ; Switch size 1, requested type "space"
  8551                           ; Number of cases is 5, Range of values is 0 to 34
  8552                           ; switch strategies available:
  8553                           ; Name         Instructions Cycles
  8554                           ; simple_byte           16     9 (average)
  8555                           ;	Chosen strategy is simple_byte
  8556  001200  E0DA               	bz	i2l3237
  8557  001202  0A01               	xorlw	1	; case 1
  8558  001204  E0E1               	bz	i2l3245
  8559  001206  0A21               	xorlw	33	; case 32
  8560  001208  E0E4               	bz	i2l785
  8561  00120A  0A01               	xorlw	1	; case 33
  8562  00120C  E0EC               	bz	i2l3255
  8563  00120E  0A03               	xorlw	3	; case 34
  8564  001210  E0F3               	bz	i2l3261
  8565                           
  8566                           ; BSR set to: 2
  8567  001212  0012               	return		;funcret
  8568  001214                     __end_of_USBCheckCDCRequest:
  8569                           	opt stack 0
  8570                           tblptru	equ	0xFF8
  8571                           tblptrh	equ	0xFF7
  8572                           tblptrl	equ	0xFF6
  8573                           tablat	equ	0xFF5
  8574                           prodh	equ	0xFF4
  8575                           prodl	equ	0xFF3
  8576                           intcon	equ	0xFF2
  8577                           postinc0	equ	0xFEE
  8578                           wreg	equ	0xFE8
  8579                           indf1	equ	0xFE7
  8580                           postdec1	equ	0xFE5
  8581                           fsr1h	equ	0xFE2
  8582                           fsr1l	equ	0xFE1
  8583                           indf2	equ	0xFDF
  8584                           postinc2	equ	0xFDE
  8585                           postdec2	equ	0xFDD
  8586                           plusw2	equ	0xFDB
  8587                           fsr2h	equ	0xFDA
  8588                           fsr2l	equ	0xFD9
  8589                           status	equ	0xFD8
  8590                           
  8591 ;; *************** function _CDCInitEP *****************
  8592 ;; Defined at:
  8593 ;;		line 294 in file "picLibs/usb_device_cdc.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;		None
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 3F/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8607 ;;      Params:         0       0       0       0
  8608 ;;      Locals:         0       0       0       0
  8609 ;;      Temps:          0       0       0       0
  8610 ;;      Totals:         0       0       0       0
  8611 ;;Total ram usage:        0 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:    2
  8614 ;; This function calls:
  8615 ;;		_USBEnableEndpoint
  8616 ;;		i2_USBTransferOnePacket
  8617 ;; This function is called by:
  8618 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           	psect	text45
  8623  001760                     __ptext45:
  8624                           	opt stack 0
  8625  001760                     _CDCInitEP:
  8626                           	opt stack 21
  8627                           
  8628                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8629                           
  8630                           ; BSR set to: 2
  8631                           ;incstack = 0
  8632  001760  0100               	movlb	0	; () banked
  8633  001762  6BCA               	clrf	_line_coding& (0+255),b
  8634  001764  0E4B               	movlw	75
  8635  001766  6FCB               	movwf	(_line_coding+1)& (0+255),b
  8636  001768  6BCC               	clrf	(_line_coding+2)& (0+255),b
  8637  00176A  6BCD               	clrf	(_line_coding+3)& (0+255),b
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8641  00176C  6BCE               	clrf	(_line_coding+4)& (0+255),b
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8645  00176E  6BCF               	clrf	(_line_coding+5)& (0+255),b
  8646                           
  8647                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8648  001770  0E08               	movlw	8
  8649  001772  6FD0               	movwf	(_line_coding+6)& (0+255),b
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8653  001774  6A1C               	clrf	_cdc_rx_len,c
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8657  001776  0E1A               	movlw	26
  8658  001778  6E32               	movwf	USBEnableEndpoint@options,c
  8659  00177A  0E01               	movlw	1
  8660  00177C  EC86  F00C         	call	_USBEnableEndpoint
  8661                           
  8662                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8663  001780  0E1E               	movlw	30
  8664  001782  6E32               	movwf	USBEnableEndpoint@options,c
  8665  001784  0E02               	movlw	2
  8666  001786  EC86  F00C         	call	_USBEnableEndpoint
  8667                           
  8668                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8669  00178A  0E00               	movlw	0
  8670  00178C  6E2A               	movwf	i2USBTransferOnePacket@dir,c
  8671  00178E  0E80               	movlw	128
  8672  001790  6E2B               	movwf	i2USBTransferOnePacket@data,c
  8673  001792  0E02               	movlw	2
  8674  001794  6E2C               	movwf	i2USBTransferOnePacket@data+1,c
  8675  001796  0E40               	movlw	64
  8676  001798  6E2D               	movwf	i2USBTransferOnePacket@len,c
  8677  00179A  0E02               	movlw	2
  8678  00179C  ECEF  F006         	call	i2_USBTransferOnePacket
  8679  0017A0  C02A  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  8680  0017A4  C02B  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8681                           
  8682                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8683  0017A8  0100               	movlb	0	; () banked
  8684  0017AA  6B76               	clrf	_CDCDataInHandle& (0+255),b
  8685  0017AC  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8689  0017AE  6B80               	clrf	_cdc_trf_state& (0+255),b
  8690                           
  8691                           ; BSR set to: 0
  8692  0017B0  0012               	return		;funcret
  8693  0017B2                     __end_of_CDCInitEP:
  8694                           	opt stack 0
  8695                           tblptru	equ	0xFF8
  8696                           tblptrh	equ	0xFF7
  8697                           tblptrl	equ	0xFF6
  8698                           tablat	equ	0xFF5
  8699                           prodh	equ	0xFF4
  8700                           prodl	equ	0xFF3
  8701                           intcon	equ	0xFF2
  8702                           postinc0	equ	0xFEE
  8703                           wreg	equ	0xFE8
  8704                           indf1	equ	0xFE7
  8705                           postdec1	equ	0xFE5
  8706                           fsr1h	equ	0xFE2
  8707                           fsr1l	equ	0xFE1
  8708                           indf2	equ	0xFDF
  8709                           postinc2	equ	0xFDE
  8710                           postdec2	equ	0xFDD
  8711                           plusw2	equ	0xFDB
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function i2_USBTransferOnePacket *****************
  8717 ;; Defined at:
  8718 ;;		line 995 in file "picLibs/usb_device.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  ep              1    wreg     unsigned char 
  8721 ;;  dir             1    0[COMRAM] unsigned char 
  8722 ;;  data            2    1[COMRAM] PTR unsigned char 
  8723 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8724 ;;  len             1    3[COMRAM] unsigned char 
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  ep              1    6[COMRAM] unsigned char 
  8727 ;;  USBTransferO    2    7[COMRAM] PTR volatile struct __BD
  8728 ;;		 -> RAM(767), NULL(0), BDT(48), 
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  2    0[COMRAM] PTR void 
  8731 ;; Registers used:
  8732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8738 ;;      Params:         4       0       0       0
  8739 ;;      Locals:         3       0       0       0
  8740 ;;      Temps:          2       0       0       0
  8741 ;;      Totals:         9       0       0       0
  8742 ;;Total ram usage:        9 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_CDCInitEP
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           	psect	text46
  8752  000DDE                     __ptext46:
  8753                           	opt stack 0
  8754  000DDE                     i2_USBTransferOnePacket:
  8755                           	opt stack 22
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;incstack = 0
  8759                           ;i2USBTransferOnePacket@ep stored from wreg
  8760  000DDE  6E30               	movwf	i2USBTransferOnePacket@ep,c
  8761                           
  8762                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8763                           ;usb_device.c: 1000: if(dir != 0)
  8764  000DE0  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8765  000DE2  E003               	bz	i2l3155
  8766                           
  8767                           ;usb_device.c: 1001: {
  8768                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8769  000DE4  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8770  000DE6  D845               	call	PL92	;call to abstracted procedure
  8771  000DE8  D002               	goto	L11
  8772  000DEA                     i2l3155:
  8773                           
  8774                           ;usb_device.c: 1005: else
  8775                           ;usb_device.c: 1006: {
  8776                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8777  000DEA  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8778  000DEC  D84B               	call	PL100	;call to abstracted procedure
  8779  000DEE                     L11:
  8780  000DEE  6ED9               	movwf	fsr2l,c
  8781  000DF0  6ADA               	clrf	fsr2h,c
  8782  000DF2  CFDE F031          	movff	postinc2,i2USBTransferOnePacket@handle
  8783  000DF6  CFDD F032          	movff	postdec2,i2USBTransferOnePacket@handle+1
  8784                           
  8785                           ;usb_device.c: 1009: }
  8786                           ;usb_device.c: 1013: if(handle == 0)
  8787  000DFA  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8788  000DFC  1032               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  8789  000DFE  E103               	bnz	i2l3161
  8790                           
  8791                           ;usb_device.c: 1014: {
  8792                           ;usb_device.c: 1015: return 0;
  8793  000E00  6A2A               	clrf	?i2_USBTransferOnePacket,c
  8794  000E02  6A2B               	clrf	?i2_USBTransferOnePacket+1,c
  8795  000E04  0012               	return	
  8796  000E06                     i2l3161:
  8797                           
  8798                           ;usb_device.c: 1016: }
  8799                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8800  000E06  EE20 F002          	lfsr	2,2
  8801  000E0A  D840               	call	PL112	;call to abstracted procedure
  8802  000E0C  C02B  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  8803  000E10  C02C  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  8804                           
  8805                           ;usb_device.c: 1030: handle->CNT = len;
  8806  000E14  EE20 F001          	lfsr	2,1
  8807  000E18  D839               	call	PL112	;call to abstracted procedure
  8808  000E1A  C02D  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  8809                           
  8810                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8811  000E1E  D82D               	call	PL94	;call to abstracted procedure
  8812  000E20  0E40               	movlw	64
  8813  000E22  16DF               	andwf	indf2,f,c
  8814                           
  8815                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8816  000E24  D82A               	call	PL94	;call to abstracted procedure
  8817  000E26  0E00               	movlw	0
  8818  000E28  86DB               	bsf	plusw2,3,c
  8819                           
  8820                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8821  000E2A  D827               	call	PL94	;call to abstracted procedure
  8822  000E2C  8EDB               	bsf	plusw2,7,c
  8823                           
  8824                           ;usb_device.c: 1036: if(dir != 0)
  8825  000E2E  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8826  000E30  E006               	bz	i2l3173
  8827                           
  8828                           ;usb_device.c: 1037: {
  8829                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8830  000E32  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8831  000E34  EC1A  F006         	call	PL34	;call to abstracted procedure
  8832  000E38  D812               	call	PL54	;call to abstracted procedure
  8833  000E3A  0F0F               	addlw	low _pBDTEntryIn
  8834  000E3C  D005               	goto	L12
  8835  000E3E                     i2l3173:
  8836                           
  8837                           ;usb_device.c: 1041: else
  8838                           ;usb_device.c: 1042: {
  8839                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8840  000E3E  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8841  000E40  EC14  F006         	call	PL32	;call to abstracted procedure
  8842  000E44  D80C               	call	PL54	;call to abstracted procedure
  8843  000E46  0F60               	addlw	low _pBDTEntryOut
  8844  000E48                     L12:
  8845  000E48  6ED9               	movwf	fsr2l,c
  8846  000E4A  6ADA               	clrf	fsr2h,c
  8847  000E4C  C02E  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
  8848  000E50  C02F  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
  8849                           
  8850                           ;usb_device.c: 1045: }
  8851                           ;usb_device.c: 1046: return (void*)handle;
  8852  000E54  C031  F02A         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  8853  000E58  C032  F02B         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  8854  000E5C  0012               	return		;funcret
  8855  000E5E                     __end_ofi2_USBTransferOnePacket:
  8856                           	opt stack 0
  8857  000E5E                     PL54:
  8858                           	opt stack 22
  8859  000E5E  CFDE F02E          	movff	postinc2,??i2_USBTransferOnePacket
  8860  000E62  CFDD F02F          	movff	postdec2,??i2_USBTransferOnePacket+1
  8861  000E66  0E04               	movlw	4
  8862  000E68  1A2E               	xorwf	??i2_USBTransferOnePacket,f,c
  8863  000E6A  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8864  000E6C  0D02               	mullw	2
  8865  000E6E  50F3               	movf	prodl,w,c
  8866  000E70  0012               	return	
  8867  000E72                     __end_ofPL54:
  8868                           	opt stack 0
  8869  000E72                     PL92:
  8870                           	opt stack 18
  8871  000E72  0D02               	mullw	2
  8872  000E74  50F3               	movf	prodl,w,c
  8873  000E76  0F0F               	addlw	low _pBDTEntryIn
  8874  000E78  0012               	return	
  8875  000E7A                     __end_ofPL92:
  8876                           	opt stack 0
  8877  000E7A                     PL94:
  8878                           	opt stack 22
  8879  000E7A  C031  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  8880  000E7E  C032  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  8881  000E82  0012               	return	
  8882  000E84                     __end_ofPL94:
  8883                           	opt stack 0
  8884  000E84                     PL100:
  8885                           	opt stack 18
  8886  000E84  0D02               	mullw	2
  8887  000E86  50F3               	movf	prodl,w,c
  8888  000E88  0F60               	addlw	low _pBDTEntryOut
  8889  000E8A  0012               	return	
  8890  000E8C                     __end_ofPL100:
  8891                           	opt stack 0
  8892  000E8C                     PL112:
  8893                           	opt stack 22
  8894  000E8C  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8895  000E8E  26D9               	addwf	fsr2l,f,c
  8896  000E90  5032               	movf	i2USBTransferOnePacket@handle+1,w,c
  8897  000E92  22DA               	addwfc	fsr2h,f,c
  8898  000E94  0012               	return	
  8899  000E96                     __end_ofPL112:
  8900                           	opt stack 0
  8901                           tblptru	equ	0xFF8
  8902                           tblptrh	equ	0xFF7
  8903                           tblptrl	equ	0xFF6
  8904                           tablat	equ	0xFF5
  8905                           prodh	equ	0xFF4
  8906                           prodl	equ	0xFF3
  8907                           intcon	equ	0xFF2
  8908                           postinc0	equ	0xFEE
  8909                           wreg	equ	0xFE8
  8910                           indf1	equ	0xFE7
  8911                           postdec1	equ	0xFE5
  8912                           fsr1h	equ	0xFE2
  8913                           fsr1l	equ	0xFE1
  8914                           indf2	equ	0xFDF
  8915                           postinc2	equ	0xFDE
  8916                           postdec2	equ	0xFDD
  8917                           plusw2	equ	0xFDB
  8918                           fsr2h	equ	0xFDA
  8919                           fsr2l	equ	0xFD9
  8920                           status	equ	0xFD8
  8921                           
  8922 ;; *************** function _USBEnableEndpoint *****************
  8923 ;; Defined at:
  8924 ;;		line 878 in file "picLibs/usb_device.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;  ep              1    wreg     unsigned char 
  8927 ;;  options         1    8[COMRAM] unsigned char 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  ep              1   11[COMRAM] unsigned char 
  8930 ;;  p               2    9[COMRAM] PTR unsigned char 
  8931 ;;		 -> UEP0(1), 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8941 ;;      Params:         1       0       0       0
  8942 ;;      Locals:         3       0       0       0
  8943 ;;      Temps:          0       0       0       0
  8944 ;;      Totals:         4       0       0       0
  8945 ;;Total ram usage:        4 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    1
  8948 ;; This function calls:
  8949 ;;		_USBConfigureEndpoint
  8950 ;; This function is called by:
  8951 ;;		_CDCInitEP
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text47
  8956  00190C                     __ptext47:
  8957                           	opt stack 0
  8958  00190C                     _USBEnableEndpoint:
  8959                           	opt stack 21
  8960                           
  8961                           ;incstack = 0
  8962                           ;USBEnableEndpoint@ep stored from wreg
  8963  00190C  6E35               	movwf	USBEnableEndpoint@ep,c
  8964                           
  8965                           ;usb_device.c: 880: unsigned char* p;
  8966                           ;usb_device.c: 884: if(options & 0x04)
  8967  00190E  A432               	btfss	USBEnableEndpoint@options,2,c
  8968  001910  D004               	goto	i2l3131
  8969                           
  8970                           ;usb_device.c: 885: {
  8971                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8972  001912  6A2A               	clrf	USBConfigureEndpoint@direction,c
  8973  001914  5035               	movf	USBEnableEndpoint@ep,w,c
  8974  001916  EC0A  F009         	call	_USBConfigureEndpoint
  8975  00191A                     i2l3131:
  8976                           
  8977                           ;usb_device.c: 887: }
  8978                           ;usb_device.c: 888: if(options & 0x02)
  8979  00191A  A232               	btfss	USBEnableEndpoint@options,1,c
  8980  00191C  D005               	goto	i2l3135
  8981                           
  8982                           ;usb_device.c: 889: {
  8983                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8984  00191E  0E01               	movlw	1
  8985  001920  6E2A               	movwf	USBConfigureEndpoint@direction,c
  8986  001922  5035               	movf	USBEnableEndpoint@ep,w,c
  8987  001924  EC0A  F009         	call	_USBConfigureEndpoint
  8988  001928                     i2l3135:
  8989                           
  8990                           ;usb_device.c: 891: }
  8991                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8992  001928  0E53               	movlw	83
  8993  00192A  2435               	addwf	USBEnableEndpoint@ep,w,c
  8994  00192C  6E33               	movwf	USBEnableEndpoint@p,c
  8995  00192E  6A34               	clrf	USBEnableEndpoint@p+1,c
  8996  001930  0E0F               	movlw	15
  8997  001932  2234               	addwfc	USBEnableEndpoint@p+1,f,c
  8998                           
  8999                           ;usb_device.c: 901: *p = options;
  9000  001934  C033  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  9001  001938  C034  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  9002  00193C  C032  FFDF         	movff	USBEnableEndpoint@options,indf2
  9003  001940  0C0F               	retlw	15	;funcret
  9004  001942                     __end_of_USBEnableEndpoint:
  9005                           	opt stack 0
  9006                           tblptru	equ	0xFF8
  9007                           tblptrh	equ	0xFF7
  9008                           tblptrl	equ	0xFF6
  9009                           tablat	equ	0xFF5
  9010                           prodh	equ	0xFF4
  9011                           prodl	equ	0xFF3
  9012                           intcon	equ	0xFF2
  9013                           postinc0	equ	0xFEE
  9014                           wreg	equ	0xFE8
  9015                           indf1	equ	0xFE7
  9016                           postdec1	equ	0xFE5
  9017                           fsr1h	equ	0xFE2
  9018                           fsr1l	equ	0xFE1
  9019                           indf2	equ	0xFDF
  9020                           postinc2	equ	0xFDE
  9021                           postdec2	equ	0xFDD
  9022                           plusw2	equ	0xFDB
  9023                           fsr2h	equ	0xFDA
  9024                           fsr2l	equ	0xFD9
  9025                           status	equ	0xFD8
  9026                           
  9027 ;; *************** function _USBConfigureEndpoint *****************
  9028 ;; Defined at:
  9029 ;;		line 1543 in file "picLibs/usb_device.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  EPNum           1    wreg     unsigned char 
  9032 ;;  direction       1    0[COMRAM] unsigned char 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  EPNum           1    5[COMRAM] unsigned char 
  9035 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  9036 ;;		 -> BDT(48), 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  1    wreg      void 
  9039 ;; Registers used:
  9040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9046 ;;      Params:         1       0       0       0
  9047 ;;      Locals:         3       0       0       0
  9048 ;;      Temps:          4       0       0       0
  9049 ;;      Totals:         8       0       0       0
  9050 ;;Total ram usage:        8 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_USBEnableEndpoint
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           	psect	text48
  9060  001214                     __ptext48:
  9061                           	opt stack 0
  9062  001214                     _USBConfigureEndpoint:
  9063                           	opt stack 21
  9064                           
  9065                           ;incstack = 0
  9066                           ;USBConfigureEndpoint@EPNum stored from wreg
  9067  001214  6E2F               	movwf	USBConfigureEndpoint@EPNum,c
  9068                           
  9069                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  9070                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  9071  001216  6A30               	clrf	USBConfigureEndpoint@handle,c
  9072  001218  0E02               	movlw	2
  9073  00121A  6E31               	movwf	USBConfigureEndpoint@handle+1,c
  9074                           
  9075                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  9076  00121C  502A               	movf	USBConfigureEndpoint@direction,w,c
  9077  00121E  6E2B               	movwf	??_USBConfigureEndpoint& (0+255),c
  9078  001220  6A2C               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  9079  001222  90D8               	bcf	status,0,c
  9080  001224  362B               	rlcf	??_USBConfigureEndpoint,f,c
  9081  001226  362C               	rlcf	??_USBConfigureEndpoint+1,f,c
  9082  001228  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9083  00122A  6E2D               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  9084  00122C  6A2E               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  9085  00122E  D824               	call	PL82	;call to abstracted procedure
  9086  001230  502B               	movf	??_USBConfigureEndpoint,w,c
  9087  001232  262D               	addwf	??_USBConfigureEndpoint+2,f,c
  9088  001234  502C               	movf	??_USBConfigureEndpoint+1,w,c
  9089  001236  222E               	addwfc	??_USBConfigureEndpoint+3,f,c
  9090  001238  D81F               	call	PL82	;call to abstracted procedure
  9091  00123A  502D               	movf	??_USBConfigureEndpoint+2,w,c
  9092  00123C  2630               	addwf	USBConfigureEndpoint@handle,f,c
  9093  00123E  502E               	movf	??_USBConfigureEndpoint+3,w,c
  9094  001240  2231               	addwfc	USBConfigureEndpoint@handle+1,f,c
  9095                           
  9096                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  9097  001242  D821               	call	PL116	;call to abstracted procedure
  9098  001244  9EDF               	bcf	indf2,7,c
  9099                           
  9100                           ;usb_device.c: 1557: if(direction == 0)
  9101  001246  502A               	movf	USBConfigureEndpoint@direction,w,c
  9102  001248  E104               	bnz	i2l3109
  9103                           
  9104                           ;usb_device.c: 1558: {
  9105                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  9106  00124A  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9107  00124C  EC42  F007         	call	PL100	;call to abstracted procedure
  9108  001250  D003               	goto	L13
  9109  001252                     i2l3109:
  9110                           
  9111                           ;usb_device.c: 1561: else
  9112                           ;usb_device.c: 1562: {
  9113                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  9114  001252  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9115  001254  EC39  F007         	call	PL92	;call to abstracted procedure
  9116  001258                     L13:
  9117  001258  6ED9               	movwf	fsr2l,c
  9118  00125A  6ADA               	clrf	fsr2h,c
  9119  00125C  C030  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  9120  001260  C031  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  9121                           
  9122                           ;usb_device.c: 1564: }
  9123                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  9124  001264  D810               	call	PL116	;call to abstracted procedure
  9125  001266  9CDF               	bcf	indf2,6,c
  9126                           
  9127                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  9128  001268  EE20 F004          	lfsr	2,4
  9129  00126C  5030               	movf	USBConfigureEndpoint@handle,w,c
  9130  00126E  26D9               	addwf	fsr2l,f,c
  9131  001270  5031               	movf	USBConfigureEndpoint@handle+1,w,c
  9132  001272  22DA               	addwfc	fsr2h,f,c
  9133  001274  8CDF               	bsf	indf2,6,c
  9134  001276  0012               	return		;funcret
  9135  001278                     __end_of_USBConfigureEndpoint:
  9136                           	opt stack 0
  9137  001278                     PL82:
  9138                           	opt stack 21
  9139  001278  90D8               	bcf	status,0,c
  9140  00127A  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  9141  00127C  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  9142  00127E  90D8               	bcf	status,0,c
  9143  001280  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  9144  001282  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  9145  001284  0012               	return	
  9146  001286                     __end_ofPL82:
  9147                           	opt stack 0
  9148  001286                     PL116:
  9149                           	opt stack 21
  9150  001286  C030  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  9151  00128A  C031  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  9152  00128E  0012               	return	
  9153  001290                     __end_ofPL116:
  9154                           	opt stack 0
  9155                           tblptru	equ	0xFF8
  9156                           tblptrh	equ	0xFF7
  9157                           tblptrl	equ	0xFF6
  9158                           tablat	equ	0xFF5
  9159                           prodh	equ	0xFF4
  9160                           prodl	equ	0xFF3
  9161                           intcon	equ	0xFF2
  9162                           postinc0	equ	0xFEE
  9163                           wreg	equ	0xFE8
  9164                           indf1	equ	0xFE7
  9165                           postdec1	equ	0xFE5
  9166                           fsr1h	equ	0xFE2
  9167                           fsr1l	equ	0xFE1
  9168                           indf2	equ	0xFDF
  9169                           postinc2	equ	0xFDE
  9170                           postdec2	equ	0xFDD
  9171                           plusw2	equ	0xFDB
  9172                           fsr2h	equ	0xFDA
  9173                           fsr2l	equ	0xFD9
  9174                           status	equ	0xFD8
  9175                           
  9176 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  9177 ;; Defined at:
  9178 ;;		line 50 in file "picLibs/app_led_usb_status.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		wreg, status,2, status,0, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9192 ;;      Params:         0       0       0       0
  9193 ;;      Locals:         0       0       0       0
  9194 ;;      Temps:          0       0       0       0
  9195 ;;      Totals:         0       0       0       0
  9196 ;;Total ram usage:        0 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    1
  9199 ;; This function calls:
  9200 ;;		_LED_Off
  9201 ;;		_LED_On
  9202 ;; This function is called by:
  9203 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text49
  9208  0013E8                     __ptext49:
  9209                           	opt stack 0
  9210  0013E8                     _APP_LEDUpdateUSBStatus:
  9211                           	opt stack 22
  9212                           
  9213                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  9214                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  9215                           
  9216                           ;incstack = 0
  9217  0013E8  A264               	btfss	3940,1,c	;volatile
  9218  0013EA  D02E               	goto	i2l3219
  9219                           
  9220                           ;app_led_usb_status.c: 55: {
  9221                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  9222  0013EC  0E01               	movlw	1
  9223  0013EE  EF31  F00D         	goto	_LED_Off
  9224  0013F2                     i2l3193:
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  9228  0013F2  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9229  0013F4  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9230  0013F6  E104               	bnz	i2l3197
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;app_led_usb_status.c: 66: {
  9234                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  9235  0013F8  0E01               	movlw	1
  9236  0013FA  EC1B  F00D         	call	_LED_On
  9237                           
  9238                           ;app_led_usb_status.c: 68: }
  9239  0013FE  D029               	goto	i2l3221
  9240  001400                     i2l3197:
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  9244  001400  0E4B               	movlw	75
  9245  001402  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9246  001404  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9247  001406  E104               	bnz	i2l3201
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;app_led_usb_status.c: 70: {
  9251                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  9252  001408  0E01               	movlw	1
  9253  00140A  EC31  F00D         	call	_LED_Off
  9254                           
  9255                           ;app_led_usb_status.c: 72: }
  9256  00140E  D021               	goto	i2l3221
  9257  001410                     i2l3201:
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  9261  001410  501A               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9262  001412  E103               	bnz	i2u188_40
  9263  001414  0E97               	movlw	151
  9264  001416  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9265  001418  E31C               	bnc	i2l3221
  9266  00141A                     i2u188_40:
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;app_led_usb_status.c: 74: {
  9270                           ;app_led_usb_status.c: 75: ledCount = 0;
  9271  00141A  6A19               	clrf	APP_LEDUpdateUSBStatus@ledCount,c
  9272  00141C  6A1A               	clrf	APP_LEDUpdateUSBStatus@ledCount+1,c
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;app_led_usb_status.c: 76: }
  9276                           ;app_led_usb_status.c: 77: break;
  9277  00141E  D019               	goto	i2l3221
  9278  001420                     i2l3205:
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  9282  001420  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9283  001422  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9284  001424  E104               	bnz	i2l3209
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;app_led_usb_status.c: 83: {
  9288                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  9289  001426  0E01               	movlw	1
  9290  001428  EC1B  F00D         	call	_LED_On
  9291                           
  9292                           ;app_led_usb_status.c: 85: }
  9293  00142C  D012               	goto	i2l3221
  9294  00142E                     i2l3209:
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  9298  00142E  0E32               	movlw	50
  9299  001430  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9300  001432  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9301  001434  E104               	bnz	i2l3213
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;app_led_usb_status.c: 87: {
  9305                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  9306  001436  0E01               	movlw	1
  9307  001438  EC31  F00D         	call	_LED_Off
  9308                           
  9309                           ;app_led_usb_status.c: 89: }
  9310  00143C  D00A               	goto	i2l3221
  9311  00143E                     i2l3213:
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  9315  00143E  0EB7               	movlw	183
  9316  001440  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9317  001442  0E03               	movlw	3
  9318  001444  581A               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9319  001446  D7E8               	goto	L14
  9320  001448                     i2l3219:
  9321  001448  0100               	movlb	0	; () banked
  9322  00144A  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  9323                           
  9324                           ; Switch size 1, requested type "space"
  9325                           ; Number of cases is 1, Range of values is 32 to 32
  9326                           ; switch strategies available:
  9327                           ; Name         Instructions Cycles
  9328                           ; simple_byte            4     3 (average)
  9329                           ;	Chosen strategy is simple_byte
  9330  00144C  0A20               	xorlw	32	; case 32
  9331  00144E  E0D1               	bz	i2l3193
  9332  001450  D7E7               	goto	i2l3205
  9333  001452                     i2l3221:
  9334                           
  9335                           ;app_led_usb_status.c: 98: ledCount++;
  9336  001452  4A19               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
  9337  001454  2A1A               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
  9338  001456  0012               	return		;funcret
  9339  001458                     __end_of_APP_LEDUpdateUSBStatus:
  9340                           	opt stack 0
  9341                           tblptru	equ	0xFF8
  9342                           tblptrh	equ	0xFF7
  9343                           tblptrl	equ	0xFF6
  9344                           tablat	equ	0xFF5
  9345                           prodh	equ	0xFF4
  9346                           prodl	equ	0xFF3
  9347                           intcon	equ	0xFF2
  9348                           postinc0	equ	0xFEE
  9349                           wreg	equ	0xFE8
  9350                           indf1	equ	0xFE7
  9351                           postdec1	equ	0xFE5
  9352                           fsr1h	equ	0xFE2
  9353                           fsr1l	equ	0xFE1
  9354                           indf2	equ	0xFDF
  9355                           postinc2	equ	0xFDE
  9356                           postdec2	equ	0xFDD
  9357                           plusw2	equ	0xFDB
  9358                           fsr2h	equ	0xFDA
  9359                           fsr2l	equ	0xFD9
  9360                           status	equ	0xFD8
  9361                           
  9362 ;; *************** function _LED_On *****************
  9363 ;; Defined at:
  9364 ;;		line 59 in file "picLibs/leds.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  led             1    wreg     enum E2
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;  led             1    0[COMRAM] enum E2
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9378 ;;      Params:         0       0       0       0
  9379 ;;      Locals:         1       0       0       0
  9380 ;;      Temps:          0       0       0       0
  9381 ;;      Totals:         1       0       0       0
  9382 ;;Total ram usage:        1 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; This function calls:
  9385 ;;		Nothing
  9386 ;; This function is called by:
  9387 ;;		_APP_LEDUpdateUSBStatus
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text50
  9392  001A36                     __ptext50:
  9393                           	opt stack 0
  9394  001A36                     _LED_On:
  9395                           	opt stack 22
  9396                           
  9397                           ;incstack = 0
  9398                           ;LED_On@led stored from wreg
  9399  001A36  6E2A               	movwf	LED_On@led,c
  9400                           
  9401                           ;leds.c: 61: switch(led)
  9402  001A38  D008               	goto	i2l3125
  9403  001A3A                     i2l255:
  9404                           
  9405                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9406  001A3A  808B               	bsf	3979,0,c	;volatile
  9407                           
  9408                           ;leds.c: 65: break;
  9409  001A3C  0012               	return	
  9410  001A3E                     i2l257:
  9411                           
  9412                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9413  001A3E  828B               	bsf	3979,1,c	;volatile
  9414                           
  9415                           ;leds.c: 69: break;
  9416  001A40  0012               	return	
  9417  001A42                     i2l258:
  9418                           
  9419                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9420  001A42  848B               	bsf	3979,2,c	;volatile
  9421                           
  9422                           ;leds.c: 73: break;
  9423  001A44  0012               	return	
  9424  001A46                     i2l259:
  9425                           
  9426                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9427  001A46  868B               	bsf	3979,3,c	;volatile
  9428                           
  9429                           ;leds.c: 77: break;
  9430  001A48  0012               	return	
  9431  001A4A                     i2l3125:
  9432  001A4A  502A               	movf	LED_On@led,w,c
  9433                           
  9434                           ; Switch size 1, requested type "space"
  9435                           ; Number of cases is 5, Range of values is 0 to 4
  9436                           ; switch strategies available:
  9437                           ; Name         Instructions Cycles
  9438                           ; simple_byte           16     9 (average)
  9439                           ;	Chosen strategy is simple_byte
  9440  001A4C  B4D8               	btfsc	status,2,c
  9441  001A4E  0012               	return	
  9442  001A50  0A01               	xorlw	1	; case 1
  9443  001A52  E0F3               	bz	i2l255
  9444  001A54  0A03               	xorlw	3	; case 2
  9445  001A56  E0F3               	bz	i2l257
  9446  001A58  0A01               	xorlw	1	; case 3
  9447  001A5A  E0F3               	bz	i2l258
  9448  001A5C  0A07               	xorlw	7	; case 4
  9449  001A5E  E0F3               	bz	i2l259
  9450  001A60  0012               	return		;funcret
  9451  001A62                     __end_of_LED_On:
  9452                           	opt stack 0
  9453                           tblptru	equ	0xFF8
  9454                           tblptrh	equ	0xFF7
  9455                           tblptrl	equ	0xFF6
  9456                           tablat	equ	0xFF5
  9457                           prodh	equ	0xFF4
  9458                           prodl	equ	0xFF3
  9459                           intcon	equ	0xFF2
  9460                           postinc0	equ	0xFEE
  9461                           wreg	equ	0xFE8
  9462                           indf1	equ	0xFE7
  9463                           postdec1	equ	0xFE5
  9464                           fsr1h	equ	0xFE2
  9465                           fsr1l	equ	0xFE1
  9466                           indf2	equ	0xFDF
  9467                           postinc2	equ	0xFDE
  9468                           postdec2	equ	0xFDD
  9469                           plusw2	equ	0xFDB
  9470                           fsr2h	equ	0xFDA
  9471                           fsr2l	equ	0xFD9
  9472                           status	equ	0xFD8
  9473                           
  9474 ;; *************** function _LED_Off *****************
  9475 ;; Defined at:
  9476 ;;		line 100 in file "picLibs/leds.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  led             1    wreg     enum E2
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  led             1    0[COMRAM] enum E2
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9490 ;;      Params:         0       0       0       0
  9491 ;;      Locals:         1       0       0       0
  9492 ;;      Temps:          0       0       0       0
  9493 ;;      Totals:         1       0       0       0
  9494 ;;Total ram usage:        1 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_APP_LEDUpdateUSBStatus
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text51
  9504  001A62                     __ptext51:
  9505                           	opt stack 0
  9506  001A62                     _LED_Off:
  9507                           	opt stack 22
  9508                           
  9509                           ;incstack = 0
  9510                           ;LED_Off@led stored from wreg
  9511  001A62  6E2A               	movwf	LED_Off@led,c
  9512                           
  9513                           ;leds.c: 102: switch(led)
  9514  001A64  D008               	goto	i2l3119
  9515  001A66                     i2l265:
  9516                           
  9517                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9518  001A66  908B               	bcf	3979,0,c	;volatile
  9519                           
  9520                           ;leds.c: 106: break;
  9521  001A68  0012               	return	
  9522  001A6A                     i2l267:
  9523                           
  9524                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9525  001A6A  928B               	bcf	3979,1,c	;volatile
  9526                           
  9527                           ;leds.c: 110: break;
  9528  001A6C  0012               	return	
  9529  001A6E                     i2l268:
  9530                           
  9531                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9532  001A6E  948B               	bcf	3979,2,c	;volatile
  9533                           
  9534                           ;leds.c: 114: break;
  9535  001A70  0012               	return	
  9536  001A72                     i2l269:
  9537                           
  9538                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9539  001A72  968B               	bcf	3979,3,c	;volatile
  9540                           
  9541                           ;leds.c: 118: break;
  9542  001A74  0012               	return	
  9543  001A76                     i2l3119:
  9544  001A76  502A               	movf	LED_Off@led,w,c
  9545                           
  9546                           ; Switch size 1, requested type "space"
  9547                           ; Number of cases is 5, Range of values is 0 to 4
  9548                           ; switch strategies available:
  9549                           ; Name         Instructions Cycles
  9550                           ; simple_byte           16     9 (average)
  9551                           ;	Chosen strategy is simple_byte
  9552  001A78  B4D8               	btfsc	status,2,c
  9553  001A7A  0012               	return	
  9554  001A7C  0A01               	xorlw	1	; case 1
  9555  001A7E  E0F3               	bz	i2l265
  9556  001A80  0A03               	xorlw	3	; case 2
  9557  001A82  E0F3               	bz	i2l267
  9558  001A84  0A01               	xorlw	1	; case 3
  9559  001A86  E0F3               	bz	i2l268
  9560  001A88  0A07               	xorlw	7	; case 4
  9561  001A8A  E0F3               	bz	i2l269
  9562  001A8C  0012               	return		;funcret
  9563  001A8E                     __end_of_LED_Off:
  9564                           	opt stack 0
  9565                           tblptru	equ	0xFF8
  9566                           tblptrh	equ	0xFF7
  9567                           tblptrl	equ	0xFF6
  9568                           tablat	equ	0xFF5
  9569                           prodh	equ	0xFF4
  9570                           prodl	equ	0xFF3
  9571                           intcon	equ	0xFF2
  9572                           postinc0	equ	0xFEE
  9573                           wreg	equ	0xFE8
  9574                           indf1	equ	0xFE7
  9575                           postdec1	equ	0xFE5
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           indf2	equ	0xFDF
  9579                           postinc2	equ	0xFDE
  9580                           postdec2	equ	0xFDD
  9581                           plusw2	equ	0xFDB
  9582                           fsr2h	equ	0xFDA
  9583                           fsr2l	equ	0xFD9
  9584                           status	equ	0xFD8
  9585                           
  9586 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  9587 ;; Defined at:
  9588 ;;		line 53 in file "picLibs/app_device_cdc_basic.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;		None
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;		None
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  1    wreg      void 
  9595 ;; Registers used:
  9596 ;;		wreg, status,2
  9597 ;; Tracked objects:
  9598 ;;		On entry : 3F/0
  9599 ;;		On exit  : 3F/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9602 ;;      Params:         0       0       0       0
  9603 ;;      Locals:         0       0       0       0
  9604 ;;      Temps:          0       0       0       0
  9605 ;;      Totals:         0       0       0       0
  9606 ;;Total ram usage:        0 bytes
  9607 ;; Hardware stack levels used:    1
  9608 ;; This function calls:
  9609 ;;		Nothing
  9610 ;; This function is called by:
  9611 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text52
  9616  001BD0                     __ptext52:
  9617                           	opt stack 0
  9618  001BD0                     _APP_DeviceCDCBasicDemoInitialize:
  9619                           	opt stack 23
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;app_device_cdc_basic.c: 55: line_coding.bCharFormat = 0;
  9623                           
  9624                           ;incstack = 0
  9625  001BD0  6BCE               	clrf	(_line_coding+4)& (0+255),b
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;app_device_cdc_basic.c: 56: line_coding.bDataBits = 8;
  9629  001BD2  0E08               	movlw	8
  9630  001BD4  6FD0               	movwf	(_line_coding+6)& (0+255),b
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;app_device_cdc_basic.c: 57: line_coding.bParityType = 0;
  9634  001BD6  6BCF               	clrf	(_line_coding+5)& (0+255),b
  9635                           
  9636                           ;app_device_cdc_basic.c: 58: line_coding.dwDTERate = 9600;
  9637  001BD8  0E80               	movlw	128
  9638  001BDA  6FCA               	movwf	_line_coding& (0+255),b
  9639  001BDC  0E25               	movlw	37
  9640  001BDE  6FCB               	movwf	(_line_coding+1)& (0+255),b
  9641  001BE0  0E00               	movlw	0
  9642  001BE2  6BCC               	clrf	(_line_coding+2)& (0+255),b
  9643  001BE4  6BCD               	clrf	(_line_coding+3)& (0+255),b
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;app_device_cdc_basic.c: 60: buttonPressed = 0;
  9647  001BE6  6B7F               	clrf	_buttonPressed& (0+255),b
  9648                           
  9649                           ; BSR set to: 0
  9650  001BE8  0012               	return		;funcret
  9651  001BEA                     __end_of_APP_DeviceCDCBasicDemoInitialize:
  9652                           	opt stack 0
  9653                           tblptru	equ	0xFF8
  9654                           tblptrh	equ	0xFF7
  9655                           tblptrl	equ	0xFF6
  9656                           tablat	equ	0xFF5
  9657                           prodh	equ	0xFF4
  9658                           prodl	equ	0xFF3
  9659                           intcon	equ	0xFF2
  9660                           postinc0	equ	0xFEE
  9661                           wreg	equ	0xFE8
  9662                           indf1	equ	0xFE7
  9663                           postdec1	equ	0xFE5
  9664                           fsr1h	equ	0xFE2
  9665                           fsr1l	equ	0xFE1
  9666                           indf2	equ	0xFDF
  9667                           postinc2	equ	0xFDE
  9668                           postdec2	equ	0xFDD
  9669                           plusw2	equ	0xFDB
  9670                           fsr2h	equ	0xFDA
  9671                           fsr2l	equ	0xFD9
  9672                           status	equ	0xFD8
  9673                           
  9674 ;; *************** function _USBCtrlTrfOutHandler *****************
  9675 ;; Defined at:
  9676 ;;		line 2538 in file "picLibs/usb_device.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;		None
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9685 ;; Tracked objects:
  9686 ;;		On entry : 3F/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9690 ;;      Params:         0       0       0       0
  9691 ;;      Locals:         0       0       0       0
  9692 ;;      Temps:          0       0       0       0
  9693 ;;      Totals:         0       0       0       0
  9694 ;;Total ram usage:        0 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; Hardware stack levels required when called:    2
  9697 ;; This function calls:
  9698 ;;		_USBCtrlTrfRxService
  9699 ;; This function is called by:
  9700 ;;		_USBCtrlEPService
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           	psect	text53
  9705  001B24                     __ptext53:
  9706                           	opt stack 0
  9707  001B24                     _USBCtrlTrfOutHandler:
  9708                           	opt stack 21
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;incstack = 0
  9715  001B24  0E02               	movlw	2
  9716  001B26  1826               	xorwf	_controlTransferState,w,c	;volatile
  9717  001B28  E102               	bnz	i2l660
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;usb_device.c: 2541: {
  9721                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9722  001B2A  EF34  F006         	goto	_USBCtrlTrfRxService	;wreg free
  9723  001B2E                     i2l660:
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;usb_device.c: 2544: else
  9727                           ;usb_device.c: 2545: {
  9728                           ;usb_device.c: 2548: controlTransferState = 0;
  9729  001B2E  6A26               	clrf	_controlTransferState,c	;volatile
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9733  001B30  5022               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9734  001B32  E106               	bnz	i2l662
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;usb_device.c: 2556: {
  9738                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9739                           
  9740                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9744  001B34  EC26  F008         	call	PL2	;call to abstracted procedure
  9745  001B38  0E0C               	movlw	12
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9749  001B3A  EC7C  F006         	call	PL10	;call to abstracted procedure
  9750                           
  9751                           ;usb_device.c: 2561: }
  9752  001B3E  0C00               	retlw	0
  9753  001B40                     i2l662:
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;usb_device.c: 2562: else
  9757                           ;usb_device.c: 2563: {
  9758                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9759  001B40  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9760  001B42  0012               	return		;funcret
  9761  001B44                     __end_of_USBCtrlTrfOutHandler:
  9762                           	opt stack 0
  9763                           tblptru	equ	0xFF8
  9764                           tblptrh	equ	0xFF7
  9765                           tblptrl	equ	0xFF6
  9766                           tablat	equ	0xFF5
  9767                           prodh	equ	0xFF4
  9768                           prodl	equ	0xFF3
  9769                           intcon	equ	0xFF2
  9770                           postinc0	equ	0xFEE
  9771                           wreg	equ	0xFE8
  9772                           indf1	equ	0xFE7
  9773                           postdec1	equ	0xFE5
  9774                           fsr1h	equ	0xFE2
  9775                           fsr1l	equ	0xFE1
  9776                           indf2	equ	0xFDF
  9777                           postinc2	equ	0xFDE
  9778                           postdec2	equ	0xFDD
  9779                           plusw2	equ	0xFDB
  9780                           fsr2h	equ	0xFDA
  9781                           fsr2l	equ	0xFD9
  9782                           status	equ	0xFD8
  9783                           
  9784 ;; *************** function _USBCtrlTrfRxService *****************
  9785 ;; Defined at:
  9786 ;;		line 1852 in file "picLibs/usb_device.c"
  9787 ;; Parameters:    Size  Location     Type
  9788 ;;		None
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  byteToRead      1    1[COMRAM] unsigned char 
  9791 ;;  i               1    0[COMRAM] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 3F/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9801 ;;      Params:         0       0       0       0
  9802 ;;      Locals:         2       0       0       0
  9803 ;;      Temps:          0       0       0       0
  9804 ;;      Totals:         2       0       0       0
  9805 ;;Total ram usage:        2 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    1
  9808 ;; This function calls:
  9809 ;;		_USBCtrlEPAllowStatusStage
  9810 ;; This function is called by:
  9811 ;;		_USBCtrlTrfOutHandler
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           	psect	text54
  9816  000C68                     __ptext54:
  9817                           	opt stack 0
  9818  000C68                     _USBCtrlTrfRxService:
  9819                           	opt stack 21
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;usb_device.c: 1854: uint8_t byteToRead;
  9823                           ;usb_device.c: 1855: uint8_t i;
  9824                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9825                           
  9826                           ;incstack = 0
  9827  000C68  EE20 F001          	lfsr	2,1
  9828  000C6C  EC7A  F009         	call	PL72	;call to abstracted procedure
  9829  000C70  50DF               	movf	indf2,w,c
  9830  000C72  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9834  000C74  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9835  000C76  5C05               	subwf	_outPipes+4,w,c	;volatile
  9836  000C78  0E00               	movlw	0
  9837  000C7A  5806               	subwfb	_outPipes+5,w,c	;volatile
  9838  000C7C  E202               	bc	i2l3661
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;usb_device.c: 1866: {
  9842                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9843  000C7E  C005  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9844  000C82                     i2l3661:
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;usb_device.c: 1868: }
  9848                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9849  000C82  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9850  000C84  5E05               	subwf	_outPipes+4,f,c	;volatile
  9851  000C86  0E00               	movlw	0
  9852  000C88  5A06               	subwfb	_outPipes+5,f,c	;volatile
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9856  000C8A  6A2A               	clrf	USBCtrlTrfRxService@i,c
  9857  000C8C  D007               	goto	i2l3671
  9858  000C8E                     i2l3665:
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;usb_device.c: 1875: {
  9862                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9863  000C8E  0E38               	movlw	56
  9864  000C90  242A               	addwf	USBCtrlTrfRxService@i,w,c
  9865  000C92  D844               	call	PL122	;call to abstracted procedure
  9866  000C94  5001               	movf	_outPipes,w,c	;volatile
  9867  000C96  D83D               	call	PL120	;call to abstracted procedure
  9868                           
  9869                           ; BSR set to: 0
  9870  000C98  2A01               	incf	_outPipes,f,c	;volatile
  9871                           
  9872                           ; BSR set to: 0
  9873  000C9A  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  9874  000C9C                     i2l3671:
  9875                           
  9876                           ; BSR set to: 0
  9877  000C9C  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9878  000C9E  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  9879  000CA0  E3F6               	bnc	i2l3665
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;usb_device.c: 1877: }
  9883                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9884  000CA2  5005               	movf	_outPipes+4,w,c	;volatile
  9885  000CA4  1006               	iorwf	_outPipes+5,w,c	;volatile
  9886  000CA6  E014               	bz	i2l3687
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;usb_device.c: 1882: {
  9890                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9891  000CA8  EE20 F001          	lfsr	2,1
  9892  000CAC  D81B               	call	PL4	;call to abstracted procedure
  9893                           
  9894                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9895  000CAE  D81F               	call	PL6	;call to abstracted procedure
  9896  000CB0  D819               	call	PL4	;call to abstracted procedure
  9897  000CB2  0E38               	movlw	56
  9898  000CB4  EC7F  F009         	call	PL74	;call to abstracted procedure
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9902  000CB8  ECD0  F00C         	call	PL36	;call to abstracted procedure
  9903  000CBC  BCDF               	btfsc	indf2,6,c
  9904  000CBE  D004               	goto	i2l3683
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;usb_device.c: 1886: {
  9908                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9909  000CC0  D823               	call	PL12	;call to abstracted procedure
  9910  000CC2  0E48               	movlw	72
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9914  000CC4  D819               	call	PL10	;call to abstracted procedure
  9915                           
  9916                           ;usb_device.c: 1889: }
  9917  000CC6  0C00               	retlw	0
  9918  000CC8                     i2l3683:
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;usb_device.c: 1890: else
  9922                           ;usb_device.c: 1891: {
  9923                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9924  000CC8  D81F               	call	PL12	;call to abstracted procedure
  9925  000CCA  0E08               	movlw	8
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9929  000CCC  D815               	call	PL10	;call to abstracted procedure
  9930  000CCE  0C00               	retlw	0
  9931  000CD0                     i2l3687:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;usb_device.c: 1896: else
  9935                           ;usb_device.c: 1897: {
  9936                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9937                           
  9938                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9942  000CD0  EC26  F008         	call	PL2	;call to abstracted procedure
  9943  000CD4  0E04               	movlw	4
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9947  000CD6  D810               	call	PL10	;call to abstracted procedure
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;usb_device.c: 1926: }
  9951                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;usb_device.c: 1915: {
  9955                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9956  000CD8  9E04               	bcf	_outPipes+3,7,c	;volatile
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9960  000CDA  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9961  000CDC  B4D8               	btfsc	status,2,c
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;usb_device.c: 1942: {
  9965                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9966  000CDE  EC48  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9967  000CE2  0012               	return		;funcret
  9968  000CE4                     __end_of_USBCtrlTrfRxService:
  9969                           	opt stack 0
  9970  000CE4                     PL4:
  9971                           	opt stack 20
  9972  000CE4  5015               	movf	_pBDTEntryEP0OutNext,w,c
  9973  000CE6  26D9               	addwf	fsr2l,f,c
  9974  000CE8  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  9975  000CEA  22DA               	addwfc	fsr2h,f,c
  9976  000CEC  0012               	return	
  9977  000CEE                     __end_ofPL4:
  9978                           	opt stack 0
  9979  000CEE                     PL6:
  9980                           	opt stack 20
  9981  000CEE  0E08               	movlw	8
  9982  000CF0  6EDF               	movwf	indf2,c
  9983  000CF2  EE20 F002          	lfsr	2,2
  9984  000CF6  0C08               	retlw	8
  9985  000CF8                     __end_ofPL6:
  9986                           	opt stack 0
  9987  000CF8                     PL10:
  9988                           	opt stack 20
  9989  000CF8  6EDF               	movwf	indf2,c
  9990  000CFA  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9991  000CFE  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9992  000D02  0E00               	movlw	0
  9993  000D04  8EDB               	bsf	plusw2,7,c
  9994  000D06  0C00               	retlw	0
  9995  000D08                     __end_ofPL10:
  9996                           	opt stack 0
  9997  000D08                     PL12:
  9998                           	opt stack 17
  9999  000D08  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10000  000D0C  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10001  000D10  0012               	return	
 10002  000D12                     __end_ofPL12:
 10003                           	opt stack 0
 10004  000D12                     PL120:
 10005                           	opt stack 18
 10006  000D12  6EE1               	movwf	fsr1l,c
 10007  000D14  6AE2               	clrf	fsr1h,c
 10008  000D16  CFDF FFE7          	movff	indf2,indf1
 10009  000D1A  0012               	return	
 10010  000D1C                     __end_ofPL120:
 10011                           	opt stack 0
 10012  000D1C                     PL122:
 10013                           	opt stack 18
 10014  000D1C  6ED9               	movwf	fsr2l,c
 10015  000D1E  6ADA               	clrf	fsr2h,c
 10016  000D20  0E02               	movlw	2
 10017  000D22  22DA               	addwfc	fsr2h,f,c
 10018  000D24  0C02               	retlw	2
 10019  000D26                     __end_ofPL122:
 10020                           	opt stack 0
 10021                           tblptru	equ	0xFF8
 10022                           tblptrh	equ	0xFF7
 10023                           tblptrl	equ	0xFF6
 10024                           tablat	equ	0xFF5
 10025                           prodh	equ	0xFF4
 10026                           prodl	equ	0xFF3
 10027                           intcon	equ	0xFF2
 10028                           postinc0	equ	0xFEE
 10029                           wreg	equ	0xFE8
 10030                           indf1	equ	0xFE7
 10031                           postdec1	equ	0xFE5
 10032                           fsr1h	equ	0xFE2
 10033                           fsr1l	equ	0xFE1
 10034                           indf2	equ	0xFDF
 10035                           postinc2	equ	0xFDE
 10036                           postdec2	equ	0xFDD
 10037                           plusw2	equ	0xFDB
 10038                           fsr2h	equ	0xFDA
 10039                           fsr2l	equ	0xFD9
 10040                           status	equ	0xFD8
 10041                           
 10042 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 10043 ;; Defined at:
 10044 ;;		line 1416 in file "picLibs/usb_device.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10058 ;;      Params:         0       0       0       0
 10059 ;;      Locals:         0       0       0       0
 10060 ;;      Temps:          0       0       0       0
 10061 ;;      Totals:         0       0       0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_USBDeviceTasks
 10068 ;;		_USBCtrlEPServiceComplete
 10069 ;;		_USBCtrlTrfRxService
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text55
 10074  001290                     __ptext55:
 10075                           	opt stack 0
 10076  001290                     _USBCtrlEPAllowStatusStage:
 10077                           	opt stack 21
 10078                           
 10079                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 10080                           
 10081                           ;incstack = 0
 10082  001290  501F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 10083  001292  A4D8               	btfss	status,2,c
 10084  001294  0012               	return	
 10085                           
 10086                           ;usb_device.c: 1424: {
 10087                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 10088  001296  0E01               	movlw	1
 10089  001298  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 10090                           
 10091                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 10092  00129A  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 10093  00129C  A4D8               	btfss	status,2,c
 10094  00129E  0012               	return	
 10095                           
 10096                           ;usb_device.c: 1427: {
 10097                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 10098  0012A0  0E01               	movlw	1
 10099  0012A2  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 10100                           
 10101                           ;usb_device.c: 1432: if(controlTransferState == 2)
 10102  0012A4  0E02               	movlw	2
 10103  0012A6  1826               	xorwf	_controlTransferState,w,c	;volatile
 10104  0012A8  E10A               	bnz	i2l3387
 10105                           
 10106                           ;usb_device.c: 1433: {
 10107                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 10108  0012AA  EE20 F001          	lfsr	2,1
 10109  0012AE  EC92  F007         	call	PL76	;call to abstracted procedure
 10110  0012B2  6ADF               	clrf	indf2,c
 10111                           
 10112                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10113  0012B4  ECBA  F008         	call	PL16	;call to abstracted procedure
 10114  0012B8  0E48               	movlw	72
 10115                           
 10116                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10117                           
 10118                           ;usb_device.c: 1437: }
 10119  0012BA  EFB2  F008         	goto	PL8	;call to abstracted procedure
 10120  0012BE                     i2l3387:
 10121                           
 10122                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 10123  0012BE  0426               	decf	_controlTransferState,w,c	;volatile
 10124  0012C0  A4D8               	btfss	status,2,c
 10125  0012C2  0012               	return	
 10126                           
 10127                           ;usb_device.c: 1439: {
 10128                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 10129  0012C4  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
 10130                           
 10131                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 10132  0012C6  EE20 F001          	lfsr	2,1
 10133  0012CA  D814               	call	PL72	;call to abstracted procedure
 10134                           
 10135                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 10136  0012CC  EC77  F006         	call	PL6	;call to abstracted procedure
 10137  0012D0  D811               	call	PL72	;call to abstracted procedure
 10138  0012D2  0E30               	movlw	48
 10139  0012D4  D814               	call	PL74	;call to abstracted procedure
 10140                           
 10141                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10142  0012D6  ECD0  F00C         	call	PL36	;call to abstracted procedure
 10143  0012DA  0E04               	movlw	4
 10144  0012DC  6EDF               	movwf	indf2,c
 10145                           
 10146                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10147  0012DE  ECD0  F00C         	call	PL36	;call to abstracted procedure
 10148  0012E2  0E00               	movlw	0
 10149  0012E4  8EDB               	bsf	plusw2,7,c
 10150                           
 10151                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 10152  0012E6  0E01               	movlw	1
 10153  0012E8  6E22               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 10154                           
 10155                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 10156                           
 10157                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10158                           
 10159                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10160  0012EA  EC26  F008         	call	PL2	;call to abstracted procedure
 10161  0012EE  0E80               	movlw	128
 10162  0012F0  6EDF               	movwf	indf2,c
 10163  0012F2  0C80               	retlw	128
 10164  0012F4                     __end_of_USBCtrlEPAllowStatusStage:
 10165                           	opt stack 0
 10166  0012F4                     PL72:
 10167                           	opt stack 17
 10168  0012F4  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 10169  0012F6  26D9               	addwf	fsr2l,f,c
 10170  0012F8  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10171  0012FA  22DA               	addwfc	fsr2h,f,c
 10172  0012FC  0012               	return	
 10173  0012FE                     __end_ofPL72:
 10174                           	opt stack 0
 10175  0012FE                     PL74:
 10176                           	opt stack 21
 10177  0012FE  6EDE               	movwf	postinc2,c
 10178  001300  0E02               	movlw	2
 10179  001302  6EDD               	movwf	postdec2,c
 10180  001304  0C02               	retlw	2
 10181  001306                     __end_ofPL74:
 10182                           	opt stack 0
 10183                           tblptru	equ	0xFF8
 10184                           tblptrh	equ	0xFF7
 10185                           tblptrl	equ	0xFF6
 10186                           tablat	equ	0xFF5
 10187                           prodh	equ	0xFF4
 10188                           prodl	equ	0xFF3
 10189                           intcon	equ	0xFF2
 10190                           postinc0	equ	0xFEE
 10191                           wreg	equ	0xFE8
 10192                           indf1	equ	0xFE7
 10193                           postdec1	equ	0xFE5
 10194                           fsr1h	equ	0xFE2
 10195                           fsr1l	equ	0xFE1
 10196                           indf2	equ	0xFDF
 10197                           postinc2	equ	0xFDE
 10198                           postdec2	equ	0xFDD
 10199                           plusw2	equ	0xFDB
 10200                           fsr2h	equ	0xFDA
 10201                           fsr2l	equ	0xFD9
 10202                           status	equ	0xFD8
 10203                           
 10204 ;; *************** function _USBCtrlTrfInHandler *****************
 10205 ;; Defined at:
 10206 ;;		line 2592 in file "picLibs/usb_device.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;		None
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;  lastDTS         1    1[COMRAM] unsigned char 
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      void 
 10213 ;; Registers used:
 10214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10215 ;; Tracked objects:
 10216 ;;		On entry : 3F/0
 10217 ;;		On exit  : 3F/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10220 ;;      Params:         0       0       0       0
 10221 ;;      Locals:         1       0       0       0
 10222 ;;      Temps:          0       0       0       0
 10223 ;;      Totals:         1       0       0       0
 10224 ;;Total ram usage:        1 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; Hardware stack levels required when called:    1
 10227 ;; This function calls:
 10228 ;;		_USBCtrlTrfTxService
 10229 ;; This function is called by:
 10230 ;;		_USBCtrlEPService
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           	psect	text56
 10235  00110A                     __ptext56:
 10236                           	opt stack 0
 10237  00110A                     _USBCtrlTrfInHandler:
 10238                           	opt stack 0
 10239                           
 10240                           ; BSR set to: 0
 10241                           ;usb_device.c: 2594: uint8_t lastDTS;
 10242                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 10243                           
 10244                           ;incstack = 0
 10245  00110A  D834               	call	PL16	;call to abstracted procedure
 10246  00110C  0E00               	movlw	0
 10247  00110E  BCDF               	btfsc	indf2,6,c
 10248  001110  0E01               	movlw	1
 10249  001112  6E2B               	movwf	USBCtrlTrfInHandler@lastDTS,c
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10253  001114  0E04               	movlw	4
 10254  001116  1A0F               	xorwf	_pBDTEntryIn,f,c
 10255  001118  5010               	movf	_pBDTEntryIn+1,w,c
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 10259  00111A  0E08               	movlw	8
 10260  00111C  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 10261  00111E  E10B               	bnz	i2l3869
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;usb_device.c: 2605: {
 10265                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 10266  001120  0102               	movlb	2	; () banked
 10267  001122  5132               	movf	50,w,b	;volatile
 10268  001124  0B7F               	andlw	127
 10269  001126  010F               	movlb	15	; () banked
 10270  001128  6F5C               	movwf	92,b	;volatile
 10271                           
 10272                           ; BSR set to: 15
 10273                           ;usb_device.c: 2607: if(UADDR != 0u)
 10274  00112A  515C               	movf	92,w,b
 10275                           
 10276                           ; BSR set to: 15
 10277                           ;usb_device.c: 2608: {
 10278                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 10279  00112C  0E10               	movlw	16
 10280  00112E  B4D8               	btfsc	status,2,c
 10281                           
 10282                           ; BSR set to: 15
 10283                           ;usb_device.c: 2611: else
 10284                           ;usb_device.c: 2612: {
 10285                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 10286  001130  0E04               	movlw	4
 10287                           
 10288                           ;usb_device.c: 2610: }
 10289  001132  0100               	movlb	0	; () banked
 10290  001134  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
 10291  001136                     i2l3869:
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;usb_device.c: 2614: }
 10295                           ;usb_device.c: 2615: }
 10296                           ;usb_device.c: 2618: if(controlTransferState == 1)
 10297  001136  0426               	decf	_controlTransferState,w,c	;volatile
 10298  001138  E111               	bnz	i2l670
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;usb_device.c: 2619: {
 10302                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 10303  00113A  D821               	call	PL44	;call to abstracted procedure
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10307  00113C  EC4B  F007         	call	_USBCtrlTrfTxService	;wreg free
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10311  001140  0E02               	movlw	2
 10312  001142  1827               	xorwf	_shortPacketStatus,w,c	;volatile
 10313  001144  E103               	bnz	i2l3881
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;usb_device.c: 2628: {
 10317                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10318  001146  D816               	call	PL16	;call to abstracted procedure
 10319  001148  0E04               	movlw	4
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10323                           
 10324                           ;usb_device.c: 2633: }
 10325  00114A  D00C               	goto	PL8	;call to abstracted procedure
 10326  00114C                     i2l3881:
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;usb_device.c: 2634: else
 10330                           ;usb_device.c: 2635: {
 10331                           ;usb_device.c: 2636: if(lastDTS == 0)
 10332  00114C  502B               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10333  00114E  E103               	bnz	i2l3887
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;usb_device.c: 2637: {
 10337                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10338  001150  D811               	call	PL16	;call to abstracted procedure
 10339  001152  0E48               	movlw	72
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10343                           
 10344                           ;usb_device.c: 2640: }
 10345  001154  D007               	goto	PL8	;call to abstracted procedure
 10346  001156                     i2l3887:
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;usb_device.c: 2641: else
 10350                           ;usb_device.c: 2642: {
 10351                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10352  001156  D80E               	call	PL16	;call to abstracted procedure
 10353  001158  0E08               	movlw	8
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10357  00115A  D004               	goto	PL8	;call to abstracted procedure
 10358  00115C                     i2l670:
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;usb_device.c: 2648: else
 10362                           ;usb_device.c: 2649: {
 10363                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10364  00115C  BE04               	btfsc	_outPipes+3,7,c	;volatile
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;usb_device.c: 2658: }
 10368                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;usb_device.c: 2656: {
 10372                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10373  00115E  9E04               	bcf	_outPipes+3,7,c	;volatile
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;usb_device.c: 2660: }
 10377                           ;usb_device.c: 2662: controlTransferState = 0;
 10378  001160  6A26               	clrf	_controlTransferState,c	;volatile
 10379                           
 10380                           ; BSR set to: 0
 10381  001162  0012               	return		;funcret
 10382  001164                     __end_of_USBCtrlTrfInHandler:
 10383                           	opt stack 0
 10384  001164                     PL8:
 10385                           	opt stack 20
 10386  001164  6EDF               	movwf	indf2,c
 10387  001166  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10388  00116A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10389  00116E  0E00               	movlw	0
 10390  001170  8EDB               	bsf	plusw2,7,c
 10391  001172  0C00               	retlw	0
 10392  001174                     __end_ofPL8:
 10393                           	opt stack 0
 10394  001174                     PL16:
 10395                           	opt stack 24
 10396  001174  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10397  001178  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10398  00117C  0012               	return	
 10399  00117E                     __end_ofPL16:
 10400                           	opt stack 0
 10401  00117E                     PL44:
 10402                           	opt stack 20
 10403  00117E  EE20 F002          	lfsr	2,2
 10404  001182  500F               	movf	_pBDTEntryIn,w,c
 10405  001184  26D9               	addwf	fsr2l,f,c
 10406  001186  5010               	movf	_pBDTEntryIn+1,w,c
 10407  001188  22DA               	addwfc	fsr2h,f,c
 10408  00118A  0E38               	movlw	56
 10409  00118C  6EDE               	movwf	postinc2,c
 10410  00118E  0E02               	movlw	2
 10411  001190  6EDD               	movwf	postdec2,c
 10412  001192  0C02               	retlw	2
 10413  001194                     __end_ofPL44:
 10414                           	opt stack 0
 10415                           tblptru	equ	0xFF8
 10416                           tblptrh	equ	0xFF7
 10417                           tblptrl	equ	0xFF6
 10418                           tablat	equ	0xFF5
 10419                           prodh	equ	0xFF4
 10420                           prodl	equ	0xFF3
 10421                           intcon	equ	0xFF2
 10422                           postinc0	equ	0xFEE
 10423                           wreg	equ	0xFE8
 10424                           indf1	equ	0xFE7
 10425                           postdec1	equ	0xFE5
 10426                           fsr1h	equ	0xFE2
 10427                           fsr1l	equ	0xFE1
 10428                           indf2	equ	0xFDF
 10429                           postinc2	equ	0xFDE
 10430                           postdec2	equ	0xFDD
 10431                           plusw2	equ	0xFDB
 10432                           fsr2h	equ	0xFDA
 10433                           fsr2l	equ	0xFD9
 10434                           status	equ	0xFD8
 10435                           
 10436 ;; *************** function _USBCtrlTrfTxService *****************
 10437 ;; Defined at:
 10438 ;;		line 1771 in file "picLibs/usb_device.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;		None
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      void 
 10445 ;; Registers used:
 10446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10447 ;; Tracked objects:
 10448 ;;		On entry : 3D/2
 10449 ;;		On exit  : 3F/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10452 ;;      Params:         0       0       0       0
 10453 ;;      Locals:         1       0       0       0
 10454 ;;      Temps:          0       0       0       0
 10455 ;;      Totals:         1       0       0       0
 10456 ;;Total ram usage:        1 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; This function calls:
 10459 ;;		Nothing
 10460 ;; This function is called by:
 10461 ;;		_USBCtrlEPAllowDataStage
 10462 ;;		_USBCtrlTrfInHandler
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text57
 10467  000E96                     __ptext57:
 10468                           	opt stack 0
 10469  000E96                     _USBCtrlTrfTxService:
 10470                           	opt stack 20
 10471                           
 10472                           ;usb_device.c: 1773: uint8_t byteToSend;
 10473                           ;usb_device.c: 1777: byteToSend = 8;
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;incstack = 0
 10477  000E96  0E08               	movlw	8
 10478  000E98  6E2A               	movwf	USBCtrlTrfTxService@byteToSend,c
 10479                           
 10480                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10481  000E9A  500E               	movf	_inPipes+5,w,c	;volatile
 10482  000E9C  E10D               	bnz	i2l3335
 10483  000E9E  0E08               	movlw	8
 10484  000EA0  5C0D               	subwf	_inPipes+4,w,c	;volatile
 10485  000EA2  E20A               	bc	i2l3335
 10486                           
 10487                           ;usb_device.c: 1779: {
 10488                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10489  000EA4  C00D  F02A         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10490                           
 10491                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10492  000EA8  5027               	movf	_shortPacketStatus,w,c	;volatile
 10493  000EAA  E102               	bnz	i2l3331
 10494                           
 10495                           ;usb_device.c: 1788: {
 10496                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10497  000EAC  0E01               	movlw	1
 10498  000EAE  D003               	goto	L16
 10499  000EB0                     i2l3331:
 10500                           
 10501                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10502  000EB0  0427               	decf	_shortPacketStatus,w,c	;volatile
 10503  000EB2  E102               	bnz	i2l3335
 10504                           
 10505                           ;usb_device.c: 1792: {
 10506                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10507  000EB4  0E02               	movlw	2
 10508  000EB6                     L16:
 10509  000EB6  6E27               	movwf	_shortPacketStatus,c	;volatile
 10510  000EB8                     i2l3335:
 10511                           
 10512                           ;usb_device.c: 1794: }
 10513                           ;usb_device.c: 1795: }
 10514                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10515  000EB8  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10516  000EBA  5E0D               	subwf	_inPipes+4,f,c	;volatile
 10517  000EBC  0E00               	movlw	0
 10518  000EBE  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 10519                           
 10520                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10521  000EC0  EE20 F001          	lfsr	2,1
 10522  000EC4  D82F               	call	PL76	;call to abstracted procedure
 10523  000EC6  C02A  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10524                           
 10525                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10526  000ECA  0E38               	movlw	56
 10527  000ECC  0100               	movlb	0	; () banked
 10528  000ECE  6F7A               	movwf	_pDst& (0+255),b
 10529  000ED0  0E02               	movlw	2
 10530  000ED2  6F7B               	movwf	(_pDst+1)& (0+255),b
 10531                           
 10532                           ; BSR set to: 0
 10533                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10534  000ED4  B00C               	btfsc	_inPipes+3,0,c	;volatile
 10535  000ED6  D01A               	goto	i2l3363
 10536  000ED8  D00B               	goto	i2l3353
 10537  000EDA                     i2l3345:
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;usb_device.c: 1812: {
 10541                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10542  000EDA  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10543  000EDE  D819               	call	PL62	;call to abstracted procedure
 10544  000EE0  64F7               	cpfsgt	tblptrh,c
 10545  000EE2  D003               	bra	i2u200_47
 10546  000EE4  0008               	tblrd		*
 10547  000EE6  50F5               	movf	tablat,w,c
 10548  000EE8  D002               	bra	i2u200_40
 10549  000EEA                     i2u200_47:
 10550  000EEA  ECB7  F005         	call	PL18	;call to abstracted procedure
 10551  000EEE                     i2u200_40:
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;usb_device.c: 1814: byteToSend--;
 10555  000EEE  D81F               	call	PL78	;call to abstracted procedure
 10556  000EF0                     i2l3353:
 10557                           
 10558                           ; BSR set to: 0
 10559  000EF0  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10560  000EF2  E1F3               	bnz	i2l3345
 10561  000EF4  0012               	return	
 10562  000EF6                     i2l3355:
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;usb_device.c: 1820: {
 10566                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10567  000EF6  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10568  000EFA  D80B               	call	PL62	;call to abstracted procedure
 10569  000EFC  64F7               	cpfsgt	tblptrh,c
 10570  000EFE  D003               	bra	i2u202_47
 10571  000F00  0008               	tblrd		*
 10572  000F02  50F5               	movf	tablat,w,c
 10573  000F04  D002               	bra	i2u202_40
 10574  000F06                     i2u202_47:
 10575  000F06  ECB7  F005         	call	PL18	;call to abstracted procedure
 10576  000F0A                     i2u202_40:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;usb_device.c: 1822: byteToSend--;
 10580  000F0A  D811               	call	PL78	;call to abstracted procedure
 10581  000F0C                     i2l3363:
 10582                           
 10583                           ; BSR set to: 0
 10584  000F0C  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10585  000F0E  E1F3               	bnz	i2l3355
 10586                           
 10587                           ; BSR set to: 0
 10588  000F10  0012               	return		;funcret
 10589  000F12                     __end_of_USBCtrlTrfTxService:
 10590                           	opt stack 0
 10591  000F12                     PL62:
 10592                           	opt stack 20
 10593  000F12  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10594  000F16  6AF8               	clrf	tblptru,c
 10595  000F18  C07A  FFD9         	movff	_pDst,fsr2l
 10596  000F1C  C07B  FFDA         	movff	_pDst+1,fsr2h
 10597  000F20  0E02               	movlw	(high __ramtop+-1)
 10598  000F22  0012               	return	
 10599  000F24                     __end_ofPL62:
 10600                           	opt stack 0
 10601  000F24                     PL76:
 10602                           	opt stack 21
 10603  000F24  500F               	movf	_pBDTEntryIn,w,c
 10604  000F26  26D9               	addwf	fsr2l,f,c
 10605  000F28  5010               	movf	_pBDTEntryIn+1,w,c
 10606  000F2A  22DA               	addwfc	fsr2h,f,c
 10607  000F2C  0012               	return	
 10608  000F2E                     __end_ofPL76:
 10609                           	opt stack 0
 10610  000F2E                     PL78:
 10611                           	opt stack 20
 10612  000F2E  6EDF               	movwf	indf2,c
 10613  000F30  4A09               	infsnz	_inPipes,f,c	;volatile
 10614  000F32  2A0A               	incf	_inPipes+1,f,c	;volatile
 10615  000F34  0100               	movlb	0	; () banked
 10616  000F36  4B7A               	infsnz	_pDst& (0+255),f,b
 10617  000F38  2B7B               	incf	(_pDst+1)& (0+255),f,b
 10618  000F3A  062A               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10619  000F3C  0012               	return	
 10620  000F3E                     __end_ofPL78:
 10621                           	opt stack 0
 10622                           tblptru	equ	0xFF8
 10623                           tblptrh	equ	0xFF7
 10624                           tblptrl	equ	0xFF6
 10625                           tablat	equ	0xFF5
 10626                           prodh	equ	0xFF4
 10627                           prodl	equ	0xFF3
 10628                           intcon	equ	0xFF2
 10629                           postinc0	equ	0xFEE
 10630                           wreg	equ	0xFE8
 10631                           indf1	equ	0xFE7
 10632                           postdec1	equ	0xFE5
 10633                           fsr1h	equ	0xFE2
 10634                           fsr1l	equ	0xFE1
 10635                           indf2	equ	0xFDF
 10636                           postinc2	equ	0xFDE
 10637                           postdec2	equ	0xFDD
 10638                           plusw2	equ	0xFDB
 10639                           fsr2h	equ	0xFDA
 10640                           fsr2l	equ	0xFD9
 10641                           status	equ	0xFD8
 10642                           tblptru	equ	0xFF8
 10643                           tblptrh	equ	0xFF7
 10644                           tblptrl	equ	0xFF6
 10645                           tablat	equ	0xFF5
 10646                           prodh	equ	0xFF4
 10647                           prodl	equ	0xFF3
 10648                           intcon	equ	0xFF2
 10649                           postinc0	equ	0xFEE
 10650                           wreg	equ	0xFE8
 10651                           indf1	equ	0xFE7
 10652                           postdec1	equ	0xFE5
 10653                           fsr1h	equ	0xFE2
 10654                           fsr1l	equ	0xFE1
 10655                           indf2	equ	0xFDF
 10656                           postinc2	equ	0xFDE
 10657                           postdec2	equ	0xFDD
 10658                           plusw2	equ	0xFDB
 10659                           fsr2h	equ	0xFDA
 10660                           fsr2l	equ	0xFD9
 10661                           status	equ	0xFD8
 10662                           
 10663                           	psect	rparam
 10664  0000                     tblptru	equ	0xFF8
 10665                           tblptrh	equ	0xFF7
 10666                           tblptrl	equ	0xFF6
 10667                           tablat	equ	0xFF5
 10668                           prodh	equ	0xFF4
 10669                           prodl	equ	0xFF3
 10670                           intcon	equ	0xFF2
 10671                           postinc0	equ	0xFEE
 10672                           wreg	equ	0xFE8
 10673                           indf1	equ	0xFE7
 10674                           postdec1	equ	0xFE5
 10675                           fsr1h	equ	0xFE2
 10676                           fsr1l	equ	0xFE1
 10677                           indf2	equ	0xFDF
 10678                           postinc2	equ	0xFDE
 10679                           postdec2	equ	0xFDD
 10680                           plusw2	equ	0xFDB
 10681                           fsr2h	equ	0xFDA
 10682                           fsr2l	equ	0xFD9
 10683                           status	equ	0xFD8
 10684                           
 10685                           	psect	temp
 10686  000052                     btemp:
 10687                           	opt stack 0
 10688  000052                     	ds	1
 10689  0000                     int$flags	set	btemp
 10690                           tblptru	equ	0xFF8
 10691                           tblptrh	equ	0xFF7
 10692                           tblptrl	equ	0xFF6
 10693                           tablat	equ	0xFF5
 10694                           prodh	equ	0xFF4
 10695                           prodl	equ	0xFF3
 10696                           intcon	equ	0xFF2
 10697                           postinc0	equ	0xFEE
 10698                           wreg	equ	0xFE8
 10699                           indf1	equ	0xFE7
 10700                           postdec1	equ	0xFE5
 10701                           fsr1h	equ	0xFE2
 10702                           fsr1l	equ	0xFE1
 10703                           indf2	equ	0xFDF
 10704                           postinc2	equ	0xFDE
 10705                           postdec2	equ	0xFDD
 10706                           plusw2	equ	0xFDB
 10707                           fsr2h	equ	0xFDA
 10708                           fsr2l	equ	0xFD9
 10709                           status	equ	0xFD8
 10710                           tblptru	equ	0xFF8
 10711                           tblptrh	equ	0xFF7
 10712                           tblptrl	equ	0xFF6
 10713                           tablat	equ	0xFF5
 10714                           prodh	equ	0xFF4
 10715                           prodl	equ	0xFF3
 10716                           intcon	equ	0xFF2
 10717                           postinc0	equ	0xFEE
 10718                           wreg	equ	0xFE8
 10719                           indf1	equ	0xFE7
 10720                           postdec1	equ	0xFE5
 10721                           fsr1h	equ	0xFE2
 10722                           fsr1l	equ	0xFE1
 10723                           indf2	equ	0xFDF
 10724                           postinc2	equ	0xFDE
 10725                           postdec2	equ	0xFDD
 10726                           plusw2	equ	0xFDB
 10727                           fsr2h	equ	0xFDA
 10728                           fsr2l	equ	0xFD9
 10729                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    197
    Data        19
    BSS         220
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      81
    BANK0           160     37     153
    BANK1           256      0      82
    BANK2            64      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    putrsUSBUSART@data	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[14]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[3]), 
		 -> buttonMessage(BANK1[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[14]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[3]), 
		 -> buttonMessage(BANK1[18]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK0[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4454_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4454_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4454_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4454_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMh[64]), cdc_data_rx(BIGRAMh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2772$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2762$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2762$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2738$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2738$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2738$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2738$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_APP_DeviceCDCBasicDemoTasks
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_PIC18F26K40_readThreeBytes
    _getsUSBUSART->_USBTransferOnePacket
    _PIC18F26K40_readThreeBytes->_PIC18F26K40_sendByte
    _PIC18F26K40_loadPC->_PIC18F26K40_sendByte
    _PIC18F26K40_loadDataIntoNVM->_PIC18F26K40_sendByteMsbToLsb
    _PIC18F26K40_enterLowVoltageProg->_PIC18F26K40_sendByte
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14269
                                             35 BANK0      2     2      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK0      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                         11    11      0   12842
                                             24 BANK0     11    11      0
                   _BUTTON_IsPressed
                       _CDCTxService
    _PIC18F26K40_enterLowVoltageProg
     _PIC18F26K40_exitLowVoltageProg
        _PIC18F26K40_loadDataIntoNVM
                 _PIC18F26K40_loadPC
         _PIC18F26K40_readThreeBytes
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        7     5      2     684
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     0      3     478
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         3     1      2    2232
                                              9 BANK0      3     1      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_readThreeBytes                          18    14      4    1847
                                              6 BANK0     18    14      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadPC                                   8     4      4    1855
                                              6 BANK0      8     4      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadDataIntoNVM                         10     5      5     921
                                              4 BANK0     10     5      5
       _PIC18F26K40_sendByteMsbToLsb
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByteMsbToLsb                         4     4      0     130
                                              0 BANK0      4     4      0
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_exitLowVoltageProg                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_enterLowVoltageProg                      4     4      0    1405
                                              6 BANK0      4     4      0
               _PIC18F26K40_sendByte
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByte                                 6     5      1    1269
                                              0 BANK0      6     5      1
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (4) _PIC18F26K40_setTrisToOut                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2129
                                              9 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1928
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SYS_InterruptHigh                                   10    10      0   30325
                                             30 COMRAM    10    10      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       1     1      0   30325
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     1     1      0   17702
                                             28 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               0     0      0   17063
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   12982
                                             27 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 1     1      0    4487
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    4460
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3989
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                          _CDCInitEP
                 _USBCheckCDCRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (8) i2_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (9) i2_LED_Enable                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_BUTTON_Enable                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i2_USBTransferOnePacket                               9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (8) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (9) _LED_On                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _LED_Off                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _PIC18F26K40_enterLowVoltageProg
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
       _PIC18F26K40_setTrisToOut
     _PIC18F26K40_exitLowVoltageProg
     _PIC18F26K40_loadDataIntoNVM
       _PIC18F26K40_sendByteMsbToLsb
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_loadPC
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_readThreeBytes
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            1FF      0       0      12        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0      52       6       32.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      51       1       86.2%
BIGRAMh             40      0       0      11        0.0%
BITBANK2            40      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C       7        0.0%
DATA                 0      0     13C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 30 17:04:46 2017

                               _USB_SD_Ptr 0301                                         PL2 104C  
                                       PL4 0CE4                                         PL6 0CEE  
                                       PL8 1164                                ?_LED_Enable 002A  
                            _USBDeviceInit 1530                         __size_of_CDCInitEP 0052  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                                      PL10 0CF8                                        PL20 0602  
                                      PL12 0D08                                        PL30 063E  
                                      PL22 0A74                                        PL14 0A42  
                                      PL40 0B7A                                        PL32 0C28  
                                      PL24 0614                                        PL16 1174  
                                      PL50 1AF8                                        PL42 0A9C  
                                      PL34 0C34                                        PL26 07BA  
                                      PL18 0B6E                                        PL60 0FC2  
                                      PL52 09CA                                        PL44 117E  
                                      PL36 19A0                                        PL28 062A  
                                      PL70 09E0                                        PL62 0F12  
                                      PL54 0E5E                                        PL46 07C4  
                                      PL38 1966                                __CFG_LVP$ON 000000  
                                      PL80 14B8                                        PL72 12F4  
                                      PL64 07DA                                        PL56 0C40  
                                      PL48 0650                                        PL90 0AC0  
                                      PL82 1278                                        PL74 12FE  
                                      PL66 07EC                                        PL58 0B92  
                                      PL92 0E72                                        PL84 0AB4  
                                      PL76 0F24                                        PL68 07F6  
                                      PL94 0E7A                                        PL86 10FE  
                                      PL78 0F2E                                        PL96 08F6  
                                      PL88 0C54                                        PL98 0ACA  
     USER_USB_CALLBACK_EVENT_HANDLER@event 0036       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0038  
                                      l105 16F2                                        l201 0590  
                                      l106 16F4                                        l130 1832  
                                      l131 1834                                        l128 180C  
                                      l237 1BBA                                        l181 040E  
              __end_of_USBStdGetDscHandler 0B6E                                        l193 044C  
                                      l178 03E6                                        l197 053E  
                                      l534 195A                                        l295 19E0  
                                      l535 1958                                        l297 19E4  
                                      l298 19E8                                        l299 19EC  
                                      l824 1604                                        _BDT 000200  
                                      l838 0958                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                                        _UIE 000F60  
                                      _UIR 000F62                     _APP_LEDUpdateUSBStatus 13E8  
                               _USBSuspend 1AE2                               __CFG_BORV$30 000000  
                     USBStdSetCfgHandler@i 003E                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 0800  
                           _USBDeviceState 0081                               __CFG_FOSC$XT 000000  
                            _BUTTON_Enable 1C08                      ??_USBCtrlTrfRxService 002A  
                 __size_ofi2_USBDeviceInit 0048                             ??_getsUSBUSART 00DE  
                                     PL100 0E84                                       PL110 136E  
                                     PL102 0FD6                                       PL120 0D12  
                                     PL112 0E8C                                       PL104 065C  
                                     PL122 0D1C                                       PL114 1B5A  
                                     PL106 17F2                                       PL124 1C02  
                                     PL116 1286                                       PL108 09F0  
                                     PL118 0C5E                   USBEnableEndpoint@options 0032  
                          __end_of_LED_Off 1A8E                                       l5011 0410  
               USBConfigureEndpoint@handle 0030                                       l5021 043C  
                                     l5103 0592                                       l5023 0444  
                                     l5041 04AC                                       l5019 0430  
                                     l5125 1B68                                       l5039 04A0  
                                     l5119 05D6                                       l5231 19BC  
                                     l5129 1B74                                       l5153 0A7E  
                                     l5147 1554                                       l5093 057C  
                                     l5077 0540                                       l5177 1568  
                                     l4715 0BD4                                       l4709 0BB6  
                                     l4821 1678                                       l4727 0C0A  
                                     l4671 16BC                                       l4823 167E  
                                     l4761 0D38                                       l4905 1B96  
                                     l4923 092A                                       l4915 091A  
                                     l4675 16C6                                       l4763 0D40  
                                     l4851 160E                                       l4837 1BC0  
                                     l4677 16CC                                       l4781 0D62  
                                     l4943 0972                                       l4951 0984  
                                     l4935 095C                                       l4919 0922  
                                     l4775 0D52                                       l4953 098A  
                                     l4961 099C                                       l4929 094A  
                                     l4881 147E                                       l4971 09B0  
                                     l4963 09A0                                       l4779 0D5C  
                                     l4875 146C                                       l4859 1640  
                                     l4973 09C6                                       l4789 0DAA  
                                     l4885 1490                                       l4879 147A  
                                     l4889 14B4                                       l4985 19F0  
                                     l4993 1AA8                                       l4989 1A98  
                    ??i2_SYSTEM_Initialize 002B                                       STR_1 03D4  
                                     STR_2 03D9                                       STR_3 03D7  
                                     STR_4 03C6                                       u4207 1858  
                                     u4157 19CC                                       u3614 1824  
                                     u3615 1820                                       u4167 047A  
                                     u3704 0D82                                       u3705 0D7C  
                                     u4177 0502                                       u4187 0564  
                                     u4197 16A8                                       u3920 0982  
                                     u3584 16E4                                       u3585 16E0  
                                     u3770 163C                                       u3940 099A  
                                     u3927 097E                                       u3777 1638  
                                     u3947 0996                      ??_USBCtrlTrfTxService 002A  
                                     _UCFG 000F61                                       _UEP0 000F53  
                                     _UEP1 000F54                                       _UEIE 000F5B  
                                     _UCON 000F64                                       _UEIR 000F5F  
                          _CDCDataInHandle 0076     USBStdFeatureReqHandler@current_ep_data 0042  
                                     _pDst 007A                                       _main 19AA  
                 ??i2_USBTransferOnePacket 002E                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                            _USBDeviceAttach 1942  
                                     btemp 0052                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0062  
                 __size_ofi2_BUTTON_Enable 0006                              __CFG_IESO$OFF 000000  
               __end_of_USBCheckStdRequest 10FE                     ??_USBCtrlTrfOutHandler 002C  
                             ___param_bank 000000                  ??_USBStdFeatureReqHandler 003E  
                   __size_of_putrsUSBUSART 005E                       _PIC18F26K40_sendByte 16B2  
                 ??_USBStdGetStatusHandler 002A                             ?_USBDeviceInit 002A  
                            __CFG_PLLEN$ON 000000             PIC18F26K40_readThreeBytes@data 00E5  
                              _writeBuffer 0100                                      ?_main 002A  
        __size_of_USBCtrlEPServiceComplete 006A                                      _ANSEL 000F7E  
                   __end_of_USBDeviceTasks 08F6                  ?_USBCtrlEPServiceComplete 002A  
                                    i2l255 1A3A                                      i2l265 1A66  
                                    i2l257 1A3E                                      i2l258 1A42  
                                    i2l267 1A6A                                      i2l259 1A46  
                                    i2l268 1A6E                                      i2l700 0682  
                                    i2l612 0B28                                      i2l269 1A72  
                                    i2l710 0728                                      i2l622 130E  
                                    i2l295 1A0E                                      i2l615 0B56  
                                    i2l297 1A12                                      i2l617 0B5A  
                                    i2l625 135C                                      i2l298 1A16  
                                    i2l626 1318                                      i2l299 1A1A  
                                    i2l627 131C                                      i2l635 199C  
                                    i2l660 1B2E                                      i2l485 0828  
                                    i2l670 115C                                      i2l662 1B40  
                                    i2l718 076A                                      i2l559 1012  
                                    i2l495 089C                                      i2l496 08F2  
                                    i2l497 08A2                                      i2l684 1086  
                                    i2l693 10A2                                      i2l785 11D2  
                                    _UADDR 000F5C                             __CFG_BBSIZ$OFF 000000  
                                    _USTAT 000F63           __end_of_PIC18F26K40_setTrisToOut 1C24  
                            __CFG_WRT0$OFF 000000         __size_of_USBCtrlEPAllowStatusStage 0064  
                            __CFG_WRT1$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             ?_BUTTON_Enable 002A  
                           __CFG_EBTR1$OFF 000000            __end_of_USBCtrlEPAllowDataStage 1760  
                                    _sd000 03C2                                      _sd001 037C  
                                    _sd002 0348                              __CFG_WRTB$OFF 000000  
           ?_USBIncrement1msInternalTimers 002A                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                               i2memset@p1 002A                  __size_of_BUTTON_IsPressed 001A  
                           __CFG_BOREN$OFF 000000                                      tablat 000FF5  
                      __size_of_LED_Enable 0030                                      plusw2 000FDB  
                        __end_of_CDCInitEP 17B2                                      status 000FD8  
                             __end_ofPL100 0E8C                               __end_ofPL110 1378  
                             __end_ofPL102 0FE2                               __end_ofPL120 0D1C  
                             __end_ofPL112 0E96                               __end_ofPL104 0668  
                             __end_ofPL122 0D26                               __end_ofPL114 1B62  
                             __end_ofPL106 17FE                               __end_ofPL124 1C08  
                             __end_ofPL116 1290                               __end_ofPL108 09FA  
                             __end_ofPL118 0C68                           __end_ofi2_memset 1AE2  
                          putUSBUSART@data 00D3               __size_of_USBStdSetCfgHandler 0084  
                           __CFG_MCLRE$OFF 000000                            __initialization 1596  
                    ?_PIC18F26K40_sendByte 00D3                               __end_of_main 19DA  
              __size_of_PIC18F26K40_loadPC 003C                  __size_of_USBCtrlEPService 0070  
                                   ??_main 00F6                              __activetblptr 000002  
                          ?_USBDeviceTasks 002A                                ?_USBSuspend 002A  
                                ??_LED_Off 002A                               _cdc_mem_type 007C  
                            _putrsUSBUSART 15FA                    __end_of_USBDeviceAttach 1966  
                         _CDCDataOutHandle 0078            PIC18F26K40_loadDataIntoNVM@data 00D7  
                                   _ANSELH 000F7F                            getsUSBUSART@len 00DD  
                   SYSTEM_Initialize@state 00D4                      __size_of_CDCTxService 00CA  
                                   i2l3201 1410                                     i2l3131 191A  
                                   i2l3125 1A4A                                     i2l3213 143E  
                                   i2l3205 1420                                     i2l3221 1452  
                                   i2l3109 1252                                     i2l3301 14D2  
                                   i2l3119 1A76                                     i2l3135 1928  
                                   i2l3231 11AC                                     i2l3303 14DC  
                                   i2l3311 14E4                                     _LED_On 1A36  
                                   i2l3209 142E                                     i2l3161 0E06  
                                   i2l3331 0EB0                                     i2l3219 1448  
                                   i2l3155 0DEA                                     i2l3227 11A0  
                                   i2l3173 0E3E                                     i2l3261 11F8  
                                   i2l3245 11C8                                     i2l3237 11B6  
                                   i2l3149 1A1E                                     i2l3501 132A  
                           __CFG_WDTEN$OFF 000000                                     i2l3335 0EB8  
                                   i2l3255 11E6                                     i2l3511 134E  
                                   i2l3415 173A                                     i2l4207 13DA  
                                   i2l4151 1B18                                     i2l3345 0EDA  
                                   i2l3353 0EF0                                     i2l3193 13F2  
                                   i2l4153 1B1A                                     i2l3355 0EF6  
                                   i2l3363 0F0C                                     i2l3267 11FE  
                                   i2l3371 1AD2                                     i2l3419 174E  
                                   i2l4227 0A0A                                     i2l3197 1400  
                                   i2l3293 1B54                                     i2l3461 0FA8  
                                   i2l3613 0FFA                                     i2l3367 1AC2  
                                   i2l3439 0F5E                                     i2l4511 08EA  
                                   i2l4503 08C0                                     i2l4431 0820  
                                   i2l4423 0814                                     i2l3289 1B48  
                                   i2l3553 06E6                                     i2l3545 06C8  
                                   i2l3529 0684                                     i2l3481 0B2C  
                                   i2l3473 0AF8                                     i2l3721 1096  
                                   i2l3617 1000                                     i2l4257 0A1A  
                                   i2l3387 12BE                                     i2l3299 14C8  
                                   i2l3571 0734                                     i2l3731 10B2  
                                   i2l4187 199A                                     i2l4451 0844  
                                   i2l3661 0C82                                     i2l3581 0754  
                                   i2l3469 0AE4                                     i2l3709 1090  
                                   i2l3629 1024                                     i2l3637 1032  
                                   i2l4509 08D6                                     i2l4445 083A  
                                   i2l3671 0C9C                                     i2l3591 0776  
                                   i2l3583 075A                                     i2l3559 06F6  
                                   i2l3735 10BE                                     i2l3665 0C8E  
                                   i2l3569 071C                                     i2l3489 0B5E  
                                   i2l3809 18A0                                     i2l3817 18C0  
                                   i2l4465 0866                                     i2l4457 085A  
                                   i2l3683 0CC8                                     i2l5275 14F8  
                                   i2l4483 0890                                     i2l4475 0878  
                                   i2l5277 152C                                     i2l3597 0790  
                                   i2l4469 086E                                     i2l3687 0CD0  
                                   i2l3599 0796                                     i2l3881 114C  
                                   i2l3869 1136                                     i2l3887 1156  
                            CDCTxService@i 00DC                   i2USBTransferOnePacket@ep 0030  
                        ??i2_USBDeviceInit 0032            __size_ofi2_USBTransferOnePacket 0080  
                        _shortPacketStatus 0027                             __CFG_XINST$OFF 000000  
             ??_PIC18F26K40_readThreeBytes 00DD                            USBDeviceTasks@i 0047  
              USBStdFeatureReqHandler@pUEP 0040                   USBTransferOnePacket@data 00D4  
               USBCtrlTrfInHandler@lastDTS 002B                            ??_USBDeviceInit 00DB  
                             ?_putUSBUSART 00D3                             __CFG_STVREN$ON 000000  
                     __end_of_getsUSBUSART 14B8                          ??i2_BUTTON_Enable 002A  
                        _USBEnableEndpoint 190C            __size_of_USBStdGetStatusHandler 0068  
                                   _memcpy 188E                              ?i2_LED_Enable 002A  
                                   _memset 1A8E                                     clear_0 15CE  
                                   clear_1 15DA                                     clear_2 15E6  
              PIC18F26K40_readThreeBytes@i 00EA                PIC18F26K40_readThreeBytes@j 00E9  
                       ?_USBEnableEndpoint 0032              __size_of_USBTransferOnePacket 0082  
                          ??_BUTTON_Enable 00D3                               _CDCTxService 0900  
                             __mediumconst 0000                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                           ?_putrsUSBUSART 00D3                        ??_USBEnableEndpoint 0033  
                              _CtrlTrfData 000238                            __CFG_HFOFST$OFF 000000  
                 _PIC18F26K40_setTrisToOut 1C1C               ?_APP_DeviceCDCBasicDemoTasks 002A  
      __size_of_PIC18F26K40_readThreeBytes 00B8                       _controlTransferState 0026  
                        _SYSTEM_Initialize 1B62                                 __accesstop 0060  
                  __end_of__initialization 15EC                         ?_SYSTEM_Initialize 002A  
                            ___rparam_used 000001                   __size_of_USBStallHandler 002A  
                      __size_of_USBSuspend 0016                     ??_PIC18F26K40_sendByte 00D4  
                           __pcstackCOMRAM 002A                  __end_of_USBEnableEndpoint 1942  
                            __end_of_sd000 03C6                              __end_of_sd001 03B0  
                            __end_of_sd002 037C                               __pidataBANK0 1C24  
                             __pidataBANK1 1BEA                        ??_SYSTEM_Initialize 00D4  
                                LED_On@led 002A           __size_of_USBCtrlEPAllowDataStage 0056  
                           ??i2_LED_Enable 002A                               ??_LED_Enable 00D3  
            __size_of_USBConfigureEndpoint 0064                __end_of_USBCtrlTrfInHandler 1164  
                  ?_APP_LEDUpdateUSBStatus 002A                                 __end_ofPL2 107A  
                               __end_ofPL4 0CEE                                 __end_ofPL6 0CF8  
                               __end_ofPL8 1174                     i2_USBTransferOnePacket 0DDE  
                          __CFG_PCLKEN$OFF 000000                                  ?i2_memset 002A  
                               _cdc_rx_len 001C                                 _cdc_tx_len 001B  
             ?_PIC18F26K40_loadDataIntoNVM 00D7                              _buttonMessage 0140  
                 ??_USBCtrlTrfSetupHandler 0046                    _USBTicksSinceSuspendEnd 007D  
                         ?_USBDeviceAttach 002A                  __end_of_SYSTEM_Initialize 1B7E  
                         _BUTTON_IsPressed 1BB6                     _USBStdGetStatusHandler 1306  
                            _buttonPressed 007F                                 __pbssBANK0 0060  
                               __pbssBANK1 0100                                    ?_LED_On 002A  
            ??_APP_DeviceCDCBasicDemoTasks 00EB   __end_of_APP_DeviceCDCBasicDemoInitialize 1BEA  
__size_of_APP_DeviceCDCBasicDemoInitialize 001A         ??_APP_DeviceCDCBasicDemoInitialize 002A  
        ?_APP_DeviceCDCBasicDemoInitialize 002A           _APP_DeviceCDCBasicDemoInitialize 1BD0  
                       __end_of_LED_Enable 1A0A                __size_of_USBWakeFromSuspend 0020  
                              _pBDTEntryIn 000F           __end_of_USBCtrlEPServiceComplete 104C  
              __size_of_USBCheckCDCRequest 0080                       USBCtrlTrfRxService@i 002A  
                            LED_Enable@led 00D3             __end_of_APP_LEDUpdateUSBStatus 1458  
                                  ?_memcpy 002A               APP_DeviceCDCBasicDemoTasks@i 00ED  
                                  ?_memset 00D3                                 _device_dsc 03B0  
                         _USBCtrlEPService 1378                                 _ep_data_in 0073  
              __end_of_USBCtrlTrfRxService 0CE4                         _USBCheckStdRequest 107A  
                        _configDescriptor1 0305                            ??_putrsUSBUSART 00D5  
          APP_DeviceCDCBasicDemoTasks@Data 00F2                                    _LED_Off 1A62  
              __end_ofi2_SYSTEM_Initialize 1B5A                                 ??i2_memset 0030  
              __end_of_USBCtrlTrfTxService 0F12                        _USBStdSetCfgHandler 0F3E  
      PIC18F26K40_loadDataIntoNVM@tempData 00DD                            __CFG_USBDIV$OFF 000000  
                      ?_USBCheckStdRequest 002A               __size_of_USBStdGetDscHandler 009A  
            ??_PIC18F26K40_loadDataIntoNVM 00DC                                    _UIEbits 000F60  
                                  _UIRbits 000F62                            __size_of_LED_On 002C  
                            _cdc_trf_state 0080             APP_LEDUpdateUSBStatus@ledCount 0019  
       __end_of_PIC18F26K40_readThreeBytes 0DDE                 _PIC18F26K40_readThreeBytes 0D26  
                                  _pCDCDst 006A                                    _pCDCSrc 006D  
                          __CFG_PWRTEN$OFF 000000                      __size_of_getsUSBUSART 0060  
                                  __Hparam 0000            ??_USBIncrement1msInternalTimers 002A  
                     ?_USBStdSetCfgHandler 002A                                  _CDCInitEP 1760  
                                  __Lparam 0000                 __size_of_USBEnableEndpoint 0036  
                               _readBuffer 0082                       ??_USBCheckStdRequest 0045  
            __size_of_USBCtrlTrfOutHandler 0020                           ??_USBDeviceTasks 0047  
                        ??_USBStallHandler 002A                               __psmallconst 0300  
     __size_of_APP_DeviceCDCBasicDemoTasks 0226                       __size_of_putUSBUSART 001C  
                                  __pcinit 1596                         getsUSBUSART@buffer 00DC  
                          __size_of_memcpy 0042                            __size_of_memset 002A  
                __end_of_configDescriptor1 0348                                    __ramtop 0300  
       APP_DeviceCDCBasicDemoTasks@Address 00EE                                    __ptext0 19AA  
                                  __ptext1 1530                                    __ptext2 1A8E  
                                  __ptext3 1942                                    __ptext4 1B62  
                                  __ptext5 19DA                                    __ptext6 1C08  
                                  __ptext7 03DC                                    __ptext8 15FA  
                                  __ptext9 1B7E                                    _inPipes 0009  
              _USBDeferOUTDataStagePackets 007E                               ??_USBSuspend 003E  
                          i2_USBDeviceInit 09FA                           i2USBDeviceInit@i 0032  
                    PIC18F26K40_sendByte@i 00D8                      PIC18F26K40_sendByte@j 00D7  
                       __end_of_USB_CD_Ptr 0305                 __size_of_SYSTEM_Initialize 001C  
          __size_of_USBCtrlTrfSetupHandler 0040                       end_of_initialization 15EC  
                             _getsUSBUSART 1458                       __end_ofi2_LED_Enable 1A36  
                       __end_of_USB_SD_Ptr 0304                                    memcpy@d 0030  
                                  memcpy@n 002E                                    memcpy@s 0032  
                      _pBDTEntryEP0OutNext 0015                                    memset@c 00D5  
                                  memset@n 00D7                                    memset@p 00D9  
                            __Lmediumconst 0000                            _USB1msTickCount 0066  
          _dummy_encapsulated_cmd_response 00C2                            i2_BUTTON_Enable 1BFC  
                 ?_USBStdFeatureReqHandler 002A                      ??_USBStdSetCfgHandler 003E  
                               ?_CDCInitEP 002A                         __end_of_USBSuspend 1AF8  
     __size_of_PIC18F26K40_loadDataIntoNVM 005A                    _USBCtrlEPAllowDataStage 170A  
                                  postdec1 000FE5                                    postdec2 000FDD  
               __end_of_PIC18F26K40_loadPC 190C                                    postinc0 000FEE  
                                  postinc2 000FDE                   PIC18F26K40_sendByte@info 00D6  
  __end_of_PIC18F26K40_enterLowVoltageProg 188E   __size_of_PIC18F26K40_enterLowVoltageProg 0046  
         ?_PIC18F26K40_enterLowVoltageProg 002A          ??_PIC18F26K40_enterLowVoltageProg 00D9  
          _PIC18F26K40_enterLowVoltageProg 1848                   _USBCtrlEPServiceComplete 0FE2  
               _USBStatusStageEnabledFlag1 001F                 _USBStatusStageEnabledFlag2 001E  
                       USBEnableEndpoint@p 0033                                  _PORTAbits 000F80  
                                _PORTCbits 000F82                 ??_PIC18F26K40_setTrisToOut 00D3  
                                _TRISCbits 000F94              PIC18F26K40_loadPC@tempAddress 00DD  
                       _BothEP0OutUOWNsSet 0022                  USBConfigureEndpoint@EPNum 002F  
               ?_USBCtrlEPAllowStatusStage 002A                             _GLOBAL_COUNTER 00F8  
      USER_USB_CALLBACK_EVENT_HANDLER@size 003A    APP_DeviceCDCBasicDemoTasks@numBytesRead 00EC  
                                _USTATcopy 0028            ?_PIC18F26K40_exitLowVoltageProg 002A  
         ??_PIC18F26K40_exitLowVoltageProg 00D3               __end_of_USBTransferOnePacket 0C28  
                           __end_of_LED_On 1A62                          putUSBUSART@length 00D5  
                   _USBCtrlTrfSetupHandler 17B2                   __end_of_BUTTON_IsPressed 1BD0  
                  ?i2_USBTransferOnePacket 002A                      __end_of_USBDeviceInit 1596  
    __end_of_USBIncrement1msInternalTimers 1BB6     __size_of_USBIncrement1msInternalTimers 001C  
            _USBIncrement1msInternalTimers 1B9A                                 LED_Off@led 002A  
                  __end_ofi2_USBDeviceInit 0A42                                  i2memset@c 002C  
                                i2memset@n 002E                                  i2memset@p 0030  
                           __end_of_memcpy 18D0                         putrsUSBUSART@pData 00D7  
                           __end_of_memset 1AB8                          _USBBusIsSuspended 0024  
                              __end_ofPL10 0D08                                __end_ofPL20 0614  
                              __end_ofPL12 0D12                                __end_ofPL30 0650  
                              __end_ofPL22 0A9C                                __end_ofPL14 0A74  
                              __end_ofPL40 0B92                                __end_ofPL32 0C34  
                              __end_ofPL24 062A                                __end_ofPL16 117E  
                              __end_ofPL50 1B04                                __end_ofPL42 0AB4  
                              __end_ofPL34 0C40                                __end_ofPL26 07C4  
                              __end_ofPL18 0B7A                                __end_ofPL60 0FD6  
                              __end_ofPL52 09E0                                __end_ofPL44 1194  
                              __end_ofPL36 19AA                                __end_ofPL28 063E  
                              __end_ofPL70 09F0                                __end_ofPL62 0F24  
                              __end_ofPL54 0E72                                __end_ofPL46 07DA  
                              __end_ofPL38 1976                                __end_ofPL80 14C6  
                              __end_ofPL72 12FE                                __end_ofPL64 07EC  
                              __end_ofPL56 0C54                                __end_ofPL48 065C  
                              __end_ofPL90 0ACA                                __end_ofPL82 1286  
                              __end_ofPL74 1306                                __end_ofPL66 07F6  
                              __end_ofPL58 0BA6                                __end_ofPL92 0E7A  
                              __end_ofPL84 0AC0                                __end_ofPL76 0F2E  
                              __end_ofPL68 0800                                __end_ofPL94 0E84  
                              __end_ofPL86 110A                                __end_ofPL78 0F3E  
                              __end_ofPL96 0900                                __end_ofPL88 0C5E  
                              __end_ofPL98 0AD4                        start_initialization 1596  
                  ?_USBStdGetStatusHandler 002A                   i2SYSTEM_Initialize@state 002B  
                    __end_of_BUTTON_Enable 1C12              USBCtrlTrfRxService@byteToRead 002B  
                  __end_ofi2_BUTTON_Enable 1C02                                _cdc_data_rx 000280  
                              _cdc_data_tx 000240                          __size_ofi2_memset 002A  
             __end_of_USBConfigureEndpoint 1278            __end_of_USBStdFeatureReqHandler 07BA  
                                 ??_LED_On 002A          __end_of_USBCtrlEPAllowStatusStage 12F4  
                 __end_of_USBCtrlEPService 13E8                  ??_USBCtrlEPAllowDataStage 002B  
                              ??_CDCInitEP 0036                             USBDeviceInit@i 00DB  
                   _pBDTEntryEP0OutCurrent 0017                    USBTransferOnePacket@dir 00D3  
                  USBTransferOnePacket@len 00D6             __end_ofi2_USBTransferOnePacket 0E5E  
            __size_of_PIC18F26K40_sendByte 0058                        _USBStdGetDscHandler 0AD4  
      PIC18F26K40_readThreeBytes@direction 00E4                                __pdataBANK0 00F8  
                              __pdataBANK1 0140                                   ??_memcpy 0030  
                                 ??_memset 00D9                     BUTTON_IsPressed@button 00D3  
                   _USBActiveConfiguration 0029             __end_of_USBStdGetStatusHandler 136E  
                PIC18F26K40_loadPC@address 00D9                                   ?_LED_Off 002A  
                              __pbssCOMRAM 0001                              __pcstackBANK0 00D3  
             __size_of_USBCtrlTrfInHandler 005A                      __size_ofi2_LED_Enable 002C  
                     ?_USBStdGetDscHandler 002A                 __end_of_USBWakeFromSuspend 1B24  
                          _USBStallHandler 1976                               _pBDTEntryOut 0060  
               __end_of_USBCheckCDCRequest 1214                   __size_of_USBDeviceAttach 0024  
              ?_PIC18F26K40_readThreeBytes 00D9                      i2BUTTON_Enable@button 002A  
                                __pintcode 0008                               i2_LED_Enable 1A0A  
                         ?i2_USBDeviceInit 002A                       _USBTransferOnePacket 0BA6  
                              __smallconst 0300                      __end_of_putrsUSBUSART 1658  
             __end_of_USBCtrlTrfOutHandler 1B44                      ??_USBStdGetDscHandler 002A  
                              _ep_data_out 0070                           ?i2_BUTTON_Enable 002A  
      __end_of_APP_DeviceCDCBasicDemoTasks 0602                _APP_DeviceCDCBasicDemoTasks 03DC  
             __size_of_USBCtrlTrfRxService 007C              USBConfigureEndpoint@direction 002A  
             __size_ofi2_SYSTEM_Initialize 0016               __size_of_USBCtrlTrfTxService 007C  
                                 _LATCbits 000F8B                 ??_USBCtrlEPServiceComplete 002B  
                                 _IPR2bits 000FA2                                   _PIE2bits 000FA0  
    PIC18F26K40_loadDataIntoNVM@IncreasePC 00DB                                   i2u200_40 0EEE  
                                 i2u200_47 0EEA                                   i2u202_40 0F0A  
     __end_of_PIC18F26K40_sendByteMsbToLsb 1848      __size_of_PIC18F26K40_sendByteMsbToLsb 004A  
             _PIC18F26K40_sendByteMsbToLsb 17FE                                   i2u202_47 0F06  
                                 i2u215_40 0B12                                   i2u215_47 0B10  
                                 i2u216_40 0B24                                   i2u216_47 0B22  
                                 i2u218_40 0B50                                   i2u218_47 0B4E  
                                 _PIR2bits 000FA1                                   i2u188_40 141A  
                                 _RCONbits 000FD0                              ??_putUSBUSART 00D6  
                         __CFG_WDTPS$32768 000000                                   _UEP0bits 000F53  
               _USBDeferINDataStagePackets 001D                __size_of_USBCheckStdRequest 0084  
                                 _UCONbits 000F64                       _USBConfigureEndpoint 1214  
         __size_of_USBStdFeatureReqHandler 0152                      ?_USBTransferOnePacket 00D3  
                          i2LED_Enable@led 002A                          _SYS_InterruptHigh 0008  
                            ?_CDCTxService 002A                               _RemoteWakeup 0025  
                                 i2_memset 1AB8        __end_of_PIC18F26K40_loadDataIntoNVM 16B2  
              _PIC18F26K40_loadDataIntoNVM 1658                         _PIC18F26K40_loadPC 18D0  
                         __size_of_LED_Off 002C                         ?_SYS_InterruptHigh 002A  
                  __end_of_USBStallHandler 19A0                                  copy_data0 15AA  
                        putrsUSBUSART@data 00D3                ??_USBCtrlEPAllowStatusStage 002A  
              __end_of_USBStdSetCfgHandler 0FC2                        ?_PIC18F26K40_loadPC 00D9  
                      ??_SYS_InterruptHigh 0048                         __end_of_device_dsc 03C2  
                 ??_APP_LEDUpdateUSBStatus 002B                    ?_USBCtrlTrfSetupHandler 002A  
                  USBStdGetStatusHandler@p 002A                                   __Hrparam 0000  
      PIC18F26K40_enterLowVoltageProg@code 00D9                                  memcpy@tmp 0034  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 00D9  
         PIC18F26K40_sendByteMsbToLsb@info 00D5              ?_PIC18F26K40_sendByteMsbToLsb 002A  
                                 _SetupPkt 000230                      ?_USBConfigureEndpoint 002A  
   __end_of_PIC18F26K40_exitLowVoltageProg 1C1C    __size_of_PIC18F26K40_exitLowVoltageProg 000A  
           _PIC18F26K40_exitLowVoltageProg 1C12                          ??_USBDeviceAttach 00D3  
                        ?_BUTTON_IsPressed 002A                       ??_PIC18F26K40_loadPC 00DD  
                __end_of_SYS_InterruptHigh 0062                         ??_BUTTON_IsPressed 00D3  
                      __end_of_putUSBUSART 1B9A                                _line_coding 00CA  
                           ??_CDCTxService 00DC              PIC18F26K40_sendByte@direction 00D3  
                  __size_of_USBDeviceTasks 00F6                                   __ptext10 1458  
                                 __ptext11 0D26                                   __ptext20 0BA6  
                                 __ptext12 18D0                                   __ptext21 1BB6  
                                 __ptext13 1658                                   __ptext30 188E  
                                 __ptext14 17FE                                   __ptext31 17B2  
                                 __ptext23 0800                                   __ptext15 1C12  
                                 __ptext40 14C6                                   __ptext32 0FE2  
                                 __ptext24 09FA                                   __ptext16 1848  
                                 __ptext41 1B44                                   __ptext33 170A  
                                 __ptext25 1B04                                   __ptext17 16B2  
                                 __ptext50 1A36                                   __ptext42 1A0A  
                                 __ptext34 107A                                   __ptext26 1AE2  
                                 __ptext18 1C1C                                   __ptext51 1A62  
                                 __ptext43 1BFC                                   __ptext35 0F3E  
                                 __ptext27 1976                                   __ptext19 0900  
                                 __ptext52 1BD0                                   __ptext44 1194  
                                 __ptext36 1AB8                                   __ptext28 1B9A  
                                 __ptext53 1B24                                   __ptext45 1760  
                                 __ptext37 1306                                   __ptext29 1378  
                                 __ptext54 0C68                                   __ptext46 0DDE  
                                 __ptext38 0AD4                                   __ptext55 1290  
                                 __ptext47 190C                                   __ptext39 0668  
                                 __ptext56 110A                                   __ptext48 1214  
                                 __ptext57 0E96                                   __ptext49 13E8  
        __size_of_PIC18F26K40_setTrisToOut 0008             __end_of_USBCtrlTrfSetupHandler 17F2  
                            __size_of_main 0030                          ?_USBCtrlEPService 002A  
                ?_PIC18F26K40_setTrisToOut 002A                         ??_USBCtrlEPService 0046  
                      _USBCtrlTrfInHandler 110A                        BUTTON_Enable@button 00D3  
                                 _outPipes 0001                       _USBCtrlTrfOutHandler 1B24  
                                 int$flags 0052                  _USBCtrlEPAllowStatusStage 1290  
                               _LED_Enable 19DA                     ??_USBTransferOnePacket 00D7  
                         putrsUSBUSART@len 00D9                  _USBDeferStatusStagePacket 0020  
                 CDCTxService@byte_to_send 00DD                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002A                                   memcpy@d1 002A  
                                 memcpy@s1 002C              USBCtrlTrfTxService@byteToSend 002A  
             __end_of_PIC18F26K40_sendByte 170A                                   memset@p1 00D3  
                         ?_USBStallHandler 002A                   USBStdFeatureReqHandler@p 0043  
                                 intlevel2 0000                     __size_of_USBDeviceInit 0066  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1530   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 006A  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 003C           ?_USER_USB_CALLBACK_EVENT_HANDLER 0036  
          _USER_USB_CALLBACK_EVENT_HANDLER 14C6               i2USBTransferOnePacket@handle 0031  
          __size_of_APP_LEDUpdateUSBStatus 0070                 i2USBTransferOnePacket@data 002B  
                   ??_USBConfigureEndpoint 002B                      ?_USBCtrlTrfOutHandler 002A  
                   __size_of_BUTTON_Enable 000A                                _putUSBUSART 1B7E  
                     __CFG_CPUDIV$NOCLKDIV 000000                        _USBCtrlTrfRxService 0C68  
                       _USBWakeFromSuspend 1B04                    _USBStdFeatureReqHandler 0668  
                      i2_SYSTEM_Initialize 1B44                         _USBCheckCDCRequest 1194  
                      _USBCtrlTrfTxService 0E96                 __size_of_SYS_InterruptHigh 005A  
           ??_PIC18F26K40_sendByteMsbToLsb 00D3              PIC18F26K40_sendByteMsbToLsb@i 00D6  
                      ?_USBWakeFromSuspend 002A                      ??_USBCtrlTrfInHandler 002B  
                    _USBAlternateInterface 00D1                        ?_USBCheckCDCRequest 002A  
                i2USBTransferOnePacket@dir 002A                  i2USBTransferOnePacket@len 002D  
                      USBEnableEndpoint@ep 0035                            _endpoint_number 0023  
                     ?_USBCtrlTrfRxService 002A                              ?_getsUSBUSART 00DC  
                     ?i2_SYSTEM_Initialize 002A                   ?_USBCtrlEPAllowDataStage 002A  
                     ?_USBCtrlTrfTxService 002A               _USBStatusStageTimeoutCounter 0021  
     PIC18F26K40_readThreeBytes@IncreasePC 00D9                       ??_USBWakeFromSuspend 003E  
               USBTransferOnePacket@handle 00DA                       __end_of_CDCTxService 09CA  
                     ??_USBCheckCDCRequest 002A                                 _USB_CD_Ptr 0304  
