

Microchip Technology PIC18 PRO Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 29 20:07:25 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	pa_nodes0,global,class=CODE,delta=1
    75                           	dabs	1,0x200,48,_BDT
    76                           	dabs	1,0x280,15,_cdc_data_rx
    77                           	dabs	1,0x240,15,_cdc_data_tx
    78                           	dabs	1,0x238,8,_CtrlTrfData
    79                           	dabs	1,0x230,8,_SetupPkt
    80  0000                     
    81                           ; Version 1.42
    82                           ; Generated 13/04/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F14K50 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     tblptru	equ	0xFF8
   116                           tblptrh	equ	0xFF7
   117                           tblptrl	equ	0xFF6
   118                           tablat	equ	0xFF5
   119                           prodh	equ	0xFF4
   120                           prodl	equ	0xFF3
   121                           intcon	equ	0xFF2
   122                           wreg	equ	0xFE8
   123                           indf1	equ	0xFE7
   124                           fsr1h	equ	0xFE2
   125                           fsr1l	equ	0xFE1
   126                           indf2	equ	0xFDF
   127                           postinc2	equ	0xFDE
   128                           postdec2	equ	0xFDD
   129                           plusw2	equ	0xFDB
   130                           fsr2h	equ	0xFDA
   131                           fsr2l	equ	0xFD9
   132                           status	equ	0xFD8
   133                           
   134                           	psect	idataBANK0
   135  001AE8                     __pidataBANK0:
   136                           	opt stack 0
   137                           
   138                           ;initializer for _buttonMessage
   139  001AE8  42                 	db	66
   140  001AE9  75                 	db	117
   141  001AEA  74                 	db	116
   142  001AEB  74                 	db	116
   143  001AEC  6F                 	db	111
   144  001AED  6E                 	db	110
   145  001AEE  20                 	db	32
   146  001AEF  70                 	db	112
   147  001AF0  72                 	db	114
   148  001AF1  65                 	db	101
   149  001AF2  73                 	db	115
   150  001AF3  73                 	db	115
   151  001AF4  65                 	db	101
   152  001AF5  64                 	db	100
   153  001AF6  2E                 	db	46
   154  001AF7  0D                 	db	13
   155  001AF8  0A                 	db	10
   156  001AF9  00                 	db	0
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           prodh	equ	0xFF4
   162                           prodl	equ	0xFF3
   163                           intcon	equ	0xFF2
   164                           wreg	equ	0xFE8
   165                           indf1	equ	0xFE7
   166                           fsr1h	equ	0xFE2
   167                           fsr1l	equ	0xFE1
   168                           indf2	equ	0xFDF
   169                           postinc2	equ	0xFDE
   170                           postdec2	equ	0xFDD
   171                           plusw2	equ	0xFDB
   172                           fsr2h	equ	0xFDA
   173                           fsr2l	equ	0xFD9
   174                           status	equ	0xFD8
   175                           
   176                           	psect	smallconst
   177  000300                     __psmallconst:
   178                           	opt stack 0
   179  000300  00                 	db	0
   180  000301                     _USB_SD_Ptr:
   181                           	opt stack 0
   182  000301  C2                 	db	low _sd000
   183  000302  7C                 	db	low _sd001
   184  000303  48                 	db	low _sd002
   185  000304                     __end_of_USB_SD_Ptr:
   186                           	opt stack 0
   187  000304                     _USB_CD_Ptr:
   188                           	opt stack 0
   189  000304  05                 	db	low _configDescriptor1
   190  000305                     __end_of_USB_CD_Ptr:
   191                           	opt stack 0
   192  000305                     _configDescriptor1:
   193                           	opt stack 0
   194  000305  09                 	db	9
   195  000306  02                 	db	2
   196  000307  43                 	db	67
   197  000308  00                 	db	0
   198  000309  02                 	db	2
   199  00030A  01                 	db	1
   200  00030B  00                 	db	0
   201  00030C  C0                 	db	192
   202  00030D  32                 	db	50
   203  00030E  09                 	db	9
   204  00030F  04                 	db	4
   205  000310  00                 	db	0
   206  000311  00                 	db	0
   207  000312  01                 	db	1
   208  000313  02                 	db	2
   209  000314  02                 	db	2
   210  000315  01                 	db	1
   211  000316  00                 	db	0
   212  000317  05                 	db	5
   213  000318  24                 	db	36
   214  000319  00                 	db	0
   215  00031A  10                 	db	16
   216  00031B  01                 	db	1
   217  00031C  04                 	db	4
   218  00031D  24                 	db	36
   219  00031E  02                 	db	2
   220  00031F  02                 	db	2
   221  000320  05                 	db	5
   222  000321  24                 	db	36
   223  000322  06                 	db	6
   224  000323  00                 	db	0
   225  000324  01                 	db	1
   226  000325  05                 	db	5
   227  000326  24                 	db	36
   228  000327  01                 	db	1
   229  000328  00                 	db	0
   230  000329  01                 	db	1
   231  00032A  07                 	db	7
   232  00032B  05                 	db	5
   233  00032C  81                 	db	129
   234  00032D  03                 	db	3
   235  00032E  08                 	db	8
   236  00032F  00                 	db	0
   237  000330  02                 	db	2
   238  000331  09                 	db	9
   239  000332  04                 	db	4
   240  000333  01                 	db	1
   241  000334  00                 	db	0
   242  000335  02                 	db	2
   243  000336  0A                 	db	10
   244  000337  00                 	db	0
   245  000338  00                 	db	0
   246  000339  00                 	db	0
   247  00033A  07                 	db	7
   248  00033B  05                 	db	5
   249  00033C  02                 	db	2
   250  00033D  02                 	db	2
   251  00033E  40                 	db	64
   252  00033F  00                 	db	0
   253  000340  00                 	db	0
   254  000341  07                 	db	7
   255  000342  05                 	db	5
   256  000343  82                 	db	130
   257  000344  02                 	db	2
   258  000345  40                 	db	64
   259  000346  00                 	db	0
   260  000347  00                 	db	0
   261  000348                     __end_of_configDescriptor1:
   262                           	opt stack 0
   263  000348                     _sd002:
   264                           	opt stack 0
   265  000348  34                 	db	52
   266  000349  03                 	db	3
   267  00034A  0043               	dw	67
   268  00034C  0044               	dw	68
   269  00034E  0043               	dw	67
   270  000350  0020               	dw	32
   271  000352  0052               	dw	82
   272  000354  0053               	dw	83
   273  000356  002D               	dw	45
   274  000358  0032               	dw	50
   275  00035A  0033               	dw	51
   276  00035C  0032               	dw	50
   277  00035E  0020               	dw	32
   278  000360  0045               	dw	69
   279  000362  006D               	dw	109
   280  000364  0075               	dw	117
   281  000366  006C               	dw	108
   282  000368  0061               	dw	97
   283  00036A  0074               	dw	116
   284  00036C  0069               	dw	105
   285  00036E  006F               	dw	111
   286  000370  006E               	dw	110
   287  000372  0020               	dw	32
   288  000374  0044               	dw	68
   289  000376  0065               	dw	101
   290  000378  006D               	dw	109
   291  00037A  006F               	dw	111
   292  00037C                     __end_of_sd002:
   293                           	opt stack 0
   294  00037C                     _sd001:
   295                           	opt stack 0
   296  00037C  34                 	db	52
   297  00037D  03                 	db	3
   298  00037E  004D               	dw	77
   299  000380  0069               	dw	105
   300  000382  0063               	dw	99
   301  000384  0072               	dw	114
   302  000386  006F               	dw	111
   303  000388  0063               	dw	99
   304  00038A  0068               	dw	104
   305  00038C  0069               	dw	105
   306  00038E  0070               	dw	112
   307  000390  0020               	dw	32
   308  000392  0054               	dw	84
   309  000394  0065               	dw	101
   310  000396  0063               	dw	99
   311  000398  0068               	dw	104
   312  00039A  006E               	dw	110
   313  00039C  006F               	dw	111
   314  00039E  006C               	dw	108
   315  0003A0  006F               	dw	111
   316  0003A2  0067               	dw	103
   317  0003A4  0079               	dw	121
   318  0003A6  0020               	dw	32
   319  0003A8  0049               	dw	73
   320  0003AA  006E               	dw	110
   321  0003AC  0063               	dw	99
   322  0003AE  002E               	dw	46
   323  0003B0                     __end_of_sd001:
   324                           	opt stack 0
   325  0003B0                     _device_dsc:
   326                           	opt stack 0
   327  0003B0  12                 	db	18
   328  0003B1  01                 	db	1
   329  0003B2  0200               	dw	512
   330  0003B4  02                 	db	2
   331  0003B5  00                 	db	0
   332  0003B6  00                 	db	0
   333  0003B7  08                 	db	8
   334  0003B8  04D8               	dw	1240
   335  0003BA  000A               	dw	10
   336  0003BC  0100               	dw	256
   337  0003BE  01                 	db	1
   338  0003BF  02                 	db	2
   339  0003C0  00                 	db	0
   340  0003C1  01                 	db	1
   341  0003C2                     __end_of_device_dsc:
   342                           	opt stack 0
   343  0003C2                     _sd000:
   344                           	opt stack 0
   345  0003C2  04                 	db	4
   346  0003C3  03                 	db	3
   347  0003C4  0409               	dw	1033
   348  0003C6                     __end_of_sd000:
   349                           	opt stack 0
   350  0000                     _UEP0bits	set	3923
   351  0000                     _UADDR	set	3932
   352  0000                     _UEIE	set	3931
   353  0000                     _UEIR	set	3935
   354  0000                     _UEP1	set	3924
   355  0000                     _UEP0	set	3923
   356  0000                     _ANSELH	set	3967
   357  0000                     _ANSEL	set	3966
   358  0000                     _INTCONbits	set	4082
   359  0000                     _IPR2bits	set	4002
   360  0000                     _RCONbits	set	4048
   361  0000                     _UCON	set	3940
   362  0000                     _USTAT	set	3939
   363  0000                     _PIR2bits	set	4001
   364  0000                     _UIEbits	set	3936
   365  0000                     _UIRbits	set	3938
   366  0000                     _UIE	set	3936
   367  0000                     _UCFG	set	3937
   368  0000                     _UIR	set	3938
   369  0000                     _PIE2bits	set	4000
   370  0000                     _PORTAbits	set	3968
   371  0000                     _UCONbits	set	3940
   372  0000                     _PORTCbits	set	3970
   373  0000                     _LATCbits	set	3979
   374  0000                     _TRISCbits	set	3988
   375                           
   376                           ; #config settings
   377  0003C6  00                 	db	0	; dummy byte at the end
   378  0000                     tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           prodh	equ	0xFF4
   383                           prodl	equ	0xFF3
   384                           intcon	equ	0xFF2
   385                           wreg	equ	0xFE8
   386                           indf1	equ	0xFE7
   387                           fsr1h	equ	0xFE2
   388                           fsr1l	equ	0xFE1
   389                           indf2	equ	0xFDF
   390                           postinc2	equ	0xFDE
   391                           postdec2	equ	0xFDD
   392                           plusw2	equ	0xFDB
   393                           fsr2h	equ	0xFDA
   394                           fsr2l	equ	0xFD9
   395                           status	equ	0xFD8
   396                           
   397                           	psect	cinit
   398  001714                     __pcinit:
   399                           	opt stack 0
   400  001714                     start_initialization:
   401                           	opt stack 0
   402  001714                     __initialization:
   403                           	opt stack 0
   404                           
   405                           ; Initialize objects allocated to BANK0 (18 bytes)
   406                           ; load TBLPTR registers with __pidataBANK0
   407  001714  0EE8               	movlw	low __pidataBANK0
   408  001716  6EF6               	movwf	tblptrl,c
   409  001718  0E1A               	movlw	high __pidataBANK0
   410  00171A  6EF7               	movwf	tblptrh,c
   411  00171C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   412  00171E  6EF8               	movwf	tblptru,c
   413  001720  EE00  F0D0         	lfsr	0,__pdataBANK0
   414  001724  EE10 F012          	lfsr	1,18
   415  001728                     copy_data0:
   416  001728  0009               	tblrd		*+
   417  00172A  CFF5 FFEE          	movff	tablat,postinc0
   418  00172E  50E5               	movf	postdec1,w,c
   419  001730  50E1               	movf	fsr1l,w,c
   420  001732  E1FA               	bnz	copy_data0
   421                           
   422                           ; Clear objects allocated to BANK0 (81 bytes)
   423  001734  EE00  F060         	lfsr	0,__pbssBANK0
   424  001738  0E51               	movlw	81
   425  00173A                     clear_0:
   426  00173A  6AEE               	clrf	postinc0,c
   427  00173C  06E8               	decf	wreg,f,c
   428  00173E  E1FD               	bnz	clear_0
   429                           
   430                           ; Clear objects allocated to COMRAM (41 bytes)
   431  001740  EE00  F001         	lfsr	0,__pbssCOMRAM
   432  001744  0E29               	movlw	41
   433  001746                     clear_1:
   434  001746  6AEE               	clrf	postinc0,c
   435  001748  06E8               	decf	wreg,f,c
   436  00174A  E1FD               	bnz	clear_1
   437  00174C                     end_of_initialization:
   438                           	opt stack 0
   439  00174C                     __end_of__initialization:
   440                           	opt stack 0
   441  00174C  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   442  00174E  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   443  001750  0E00               	movlw	low (__Lmediumconst shr (0+16))
   444  001752  6EF8               	movwf	tblptru,c
   445  001754  0100               	movlb	0
   446  001756  EF56  F00C         	goto	_main	;jump to C main() function
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           prodh	equ	0xFF4
   452                           prodl	equ	0xFF3
   453                           intcon	equ	0xFF2
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           indf1	equ	0xFE7
   457                           postdec1	equ	0xFE5
   458                           fsr1h	equ	0xFE2
   459                           fsr1l	equ	0xFE1
   460                           indf2	equ	0xFDF
   461                           postinc2	equ	0xFDE
   462                           postdec2	equ	0xFDD
   463                           plusw2	equ	0xFDB
   464                           fsr2h	equ	0xFDA
   465                           fsr2l	equ	0xFD9
   466                           status	equ	0xFD8
   467                           
   468                           	psect	bssCOMRAM
   469  000001                     __pbssCOMRAM:
   470                           	opt stack 0
   471  000001                     _outPipes:
   472                           	opt stack 0
   473  000001                     	ds	8
   474  000009                     _inPipes:
   475                           	opt stack 0
   476  000009                     	ds	6
   477  00000F                     _pBDTEntryIn:
   478                           	opt stack 0
   479  00000F                     	ds	6
   480  000015                     _pBDTEntryEP0OutNext:
   481                           	opt stack 0
   482  000015                     	ds	2
   483  000017                     _pBDTEntryEP0OutCurrent:
   484                           	opt stack 0
   485  000017                     	ds	2
   486  000019                     APP_LEDUpdateUSBStatus@ledCount:
   487                           	opt stack 0
   488  000019                     	ds	2
   489  00001B                     _cdc_tx_len:
   490                           	opt stack 0
   491  00001B                     	ds	1
   492  00001C                     _cdc_rx_len:
   493                           	opt stack 0
   494  00001C                     	ds	1
   495  00001D                     _USBDeferINDataStagePackets:
   496                           	opt stack 0
   497  00001D                     	ds	1
   498  00001E                     _USBStatusStageEnabledFlag2:
   499                           	opt stack 0
   500  00001E                     	ds	1
   501  00001F                     _USBStatusStageEnabledFlag1:
   502                           	opt stack 0
   503  00001F                     	ds	1
   504  000020                     _USBDeferStatusStagePacket:
   505                           	opt stack 0
   506  000020                     	ds	1
   507  000021                     _USBStatusStageTimeoutCounter:
   508                           	opt stack 0
   509  000021                     	ds	1
   510  000022                     _BothEP0OutUOWNsSet:
   511                           	opt stack 0
   512  000022                     	ds	1
   513  000023                     _endpoint_number:
   514                           	opt stack 0
   515  000023                     	ds	1
   516  000024                     _USBBusIsSuspended:
   517                           	opt stack 0
   518  000024                     	ds	1
   519  000025                     _RemoteWakeup:
   520                           	opt stack 0
   521  000025                     	ds	1
   522  000026                     _controlTransferState:
   523                           	opt stack 0
   524  000026                     	ds	1
   525  000027                     _shortPacketStatus:
   526                           	opt stack 0
   527  000027                     	ds	1
   528  000028                     _USTATcopy:
   529                           	opt stack 0
   530  000028                     	ds	1
   531  000029                     _USBActiveConfiguration:
   532                           	opt stack 0
   533  000029                     	ds	1
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           prodh	equ	0xFF4
   539                           prodl	equ	0xFF3
   540                           intcon	equ	0xFF2
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           indf1	equ	0xFE7
   544                           postdec1	equ	0xFE5
   545                           fsr1h	equ	0xFE2
   546                           fsr1l	equ	0xFE1
   547                           indf2	equ	0xFDF
   548                           postinc2	equ	0xFDE
   549                           postdec2	equ	0xFDD
   550                           plusw2	equ	0xFDB
   551                           fsr2h	equ	0xFDA
   552                           fsr2l	equ	0xFD9
   553                           status	equ	0xFD8
   554                           
   555                           	psect	bssBANK0
   556  000060                     __pbssBANK0:
   557                           	opt stack 0
   558  000060                     _pBDTEntryOut:
   559                           	opt stack 0
   560  000060                     	ds	6
   561  000066                     _USB1msTickCount:
   562                           	opt stack 0
   563  000066                     	ds	4
   564  00006A                     _pCDCDst:
   565                           	opt stack 0
   566  00006A                     	ds	3
   567  00006D                     _pCDCSrc:
   568                           	opt stack 0
   569  00006D                     	ds	3
   570  000070                     _ep_data_out:
   571                           	opt stack 0
   572  000070                     	ds	3
   573  000073                     _ep_data_in:
   574                           	opt stack 0
   575  000073                     	ds	3
   576  000076                     _CDCDataInHandle:
   577                           	opt stack 0
   578  000076                     	ds	2
   579  000078                     _CDCDataOutHandle:
   580                           	opt stack 0
   581  000078                     	ds	2
   582  00007A                     _pDst:
   583                           	opt stack 0
   584  00007A                     	ds	2
   585  00007C                     _cdc_mem_type:
   586                           	opt stack 0
   587  00007C                     	ds	1
   588  00007D                     _USBTicksSinceSuspendEnd:
   589                           	opt stack 0
   590  00007D                     	ds	1
   591  00007E                     _USBDeferOUTDataStagePackets:
   592                           	opt stack 0
   593  00007E                     	ds	1
   594  00007F                     _buttonPressed:
   595                           	opt stack 0
   596  00007F                     	ds	1
   597  000080                     _cdc_trf_state:
   598                           	opt stack 0
   599  000080                     	ds	1
   600  000081                     _USBDeviceState:
   601                           	opt stack 0
   602  000081                     	ds	1
   603  000082                     _writeBuffer:
   604                           	opt stack 0
   605  000082                     	ds	15
   606  000091                     _readBuffer:
   607                           	opt stack 0
   608  000091                     	ds	15
   609  0000A0                     _dummy_encapsulated_cmd_response:
   610                           	opt stack 0
   611  0000A0                     	ds	8
   612  0000A8                     _line_coding:
   613                           	opt stack 0
   614  0000A8                     	ds	7
   615  0000AF                     _USBAlternateInterface:
   616                           	opt stack 0
   617  0000AF                     	ds	2
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           prodh	equ	0xFF4
   623                           prodl	equ	0xFF3
   624                           intcon	equ	0xFF2
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           indf1	equ	0xFE7
   628                           postdec1	equ	0xFE5
   629                           fsr1h	equ	0xFE2
   630                           fsr1l	equ	0xFE1
   631                           indf2	equ	0xFDF
   632                           postinc2	equ	0xFDE
   633                           postdec2	equ	0xFDD
   634                           plusw2	equ	0xFDB
   635                           fsr2h	equ	0xFDA
   636                           fsr2l	equ	0xFD9
   637                           status	equ	0xFD8
   638                           
   639                           	psect	dataBANK0
   640  0000D0                     __pdataBANK0:
   641                           	opt stack 0
   642  0000D0                     _buttonMessage:
   643                           	opt stack 0
   644  0000D0                     	ds	18
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           prodh	equ	0xFF4
   650                           prodl	equ	0xFF3
   651                           intcon	equ	0xFF2
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           indf1	equ	0xFE7
   655                           postdec1	equ	0xFE5
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           indf2	equ	0xFDF
   659                           postinc2	equ	0xFDE
   660                           postdec2	equ	0xFDD
   661                           plusw2	equ	0xFDB
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8
   665                           
   666                           	psect	cstackBANK0
   667  0000B1                     __pcstackBANK0:
   668                           	opt stack 0
   669  0000B1                     ??_PIC18F26K40_sendByteMsbToLsb:
   670  0000B1                     ?_USBTransferOnePacket:
   671                           	opt stack 0
   672  0000B1                     PIC18F26K40_sendByte@direction:
   673                           	opt stack 0
   674  0000B1                     BUTTON_IsPressed@button:
   675                           	opt stack 0
   676  0000B1                     BUTTON_Enable@button:
   677                           	opt stack 0
   678  0000B1                     LED_Enable@led:
   679                           	opt stack 0
   680  0000B1                     USBTransferOnePacket@dir:
   681                           	opt stack 0
   682  0000B1                     putUSBUSART@data:
   683                           	opt stack 0
   684  0000B1                     putrsUSBUSART@data:
   685                           	opt stack 0
   686  0000B1                     memset@p1:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x0
   690  0000B1                     	ds	1
   691  0000B2                     ??_PIC18F26K40_sendByte:
   692  0000B2                     SYSTEM_Initialize@state:
   693                           	opt stack 0
   694  0000B2                     putUSBUSART@length:
   695                           	opt stack 0
   696  0000B2                     putrsUSBUSART@pData:
   697                           	opt stack 0
   698  0000B2                     USBTransferOnePacket@data:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x1
   702  0000B2                     	ds	1
   703  0000B3                     PIC18F26K40_sendByteMsbToLsb@info:
   704                           	opt stack 0
   705  0000B3                     putrsUSBUSART@len:
   706                           	opt stack 0
   707  0000B3                     memset@c:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x2
   711  0000B3                     	ds	1
   712  0000B4                     PIC18F26K40_sendByte@info:
   713                           	opt stack 0
   714  0000B4                     PIC18F26K40_sendByteMsbToLsb@i:
   715                           	opt stack 0
   716  0000B4                     USBTransferOnePacket@len:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x3
   720  0000B4                     	ds	1
   721  0000B5                     ??_USBTransferOnePacket:
   722  0000B5                     PIC18F26K40_sendByte@j:
   723                           	opt stack 0
   724  0000B5                     memset@n:
   725                           	opt stack 0
   726  0000B5                     PIC18F26K40_loadDataIntoNVM@data:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x4
   730  0000B5                     	ds	1
   731  0000B6                     PIC18F26K40_sendByte@i:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x5
   735  0000B6                     	ds	1
   736  0000B7                     ?_PIC18F26K40_readThreeBytes:
   737                           	opt stack 0
   738  0000B7                     PIC18F26K40_readThreeBytes@IncreasePC:
   739                           	opt stack 0
   740  0000B7                     USBTransferOnePacket@ep:
   741                           	opt stack 0
   742  0000B7                     memset@p:
   743                           	opt stack 0
   744  0000B7                     PIC18F26K40_enterLowVoltageProg@code:
   745                           	opt stack 0
   746  0000B7                     PIC18F26K40_loadPC@address:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x6
   750  0000B7                     	ds	1
   751  0000B8                     USBTransferOnePacket@handle:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x7
   755  0000B8                     	ds	1
   756  0000B9                     PIC18F26K40_loadDataIntoNVM@IncreasePC:
   757                           	opt stack 0
   758  0000B9                     USBDeviceInit@i:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x8
   762  0000B9                     	ds	1
   763  0000BA                     PIC18F26K40_loadDataIntoNVM@LatchType:
   764                           	opt stack 0
   765  0000BA                     getsUSBUSART@buffer:
   766                           	opt stack 0
   767  0000BA                     CDCTxService@i:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x9
   771  0000BA                     	ds	1
   772  0000BB                     ??_PIC18F26K40_readThreeBytes:
   773  0000BB                     ??_PIC18F26K40_loadDataIntoNVM:
   774  0000BB                     getsUSBUSART@len:
   775                           	opt stack 0
   776  0000BB                     CDCTxService@byte_to_send:
   777                           	opt stack 0
   778  0000BB                     PIC18F26K40_loadPC@tempAddress:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0xA
   782  0000BB                     	ds	1
   783  0000BC                     PIC18F26K40_loadDataIntoNVM@tempData:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0xB
   787  0000BC                     	ds	6
   788  0000C2                     PIC18F26K40_readThreeBytes@direction:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x11
   792  0000C2                     	ds	1
   793  0000C3                     PIC18F26K40_readThreeBytes@data:
   794                           	opt stack 0
   795                           
   796                           ; 4 bytes @ 0x12
   797  0000C3                     	ds	4
   798  0000C7                     PIC18F26K40_readThreeBytes@j:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x16
   802  0000C7                     	ds	1
   803  0000C8                     PIC18F26K40_readThreeBytes@i:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x17
   807  0000C8                     	ds	1
   808  0000C9                     APP_DeviceCDCBasicDemoTasks@numBytesRead:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x18
   812  0000C9                     	ds	1
   813  0000CA                     APP_DeviceCDCBasicDemoTasks@a:
   814                           	opt stack 0
   815                           
   816                           ; 4 bytes @ 0x19
   817  0000CA                     	ds	4
   818  0000CE                     ??_main:
   819                           
   820                           ; 1 bytes @ 0x1D
   821  0000CE                     	ds	2
   822                           tblptru	equ	0xFF8
   823                           tblptrh	equ	0xFF7
   824                           tblptrl	equ	0xFF6
   825                           tablat	equ	0xFF5
   826                           prodh	equ	0xFF4
   827                           prodl	equ	0xFF3
   828                           intcon	equ	0xFF2
   829                           postinc0	equ	0xFEE
   830                           wreg	equ	0xFE8
   831                           indf1	equ	0xFE7
   832                           postdec1	equ	0xFE5
   833                           fsr1h	equ	0xFE2
   834                           fsr1l	equ	0xFE1
   835                           indf2	equ	0xFDF
   836                           postinc2	equ	0xFDE
   837                           postdec2	equ	0xFDD
   838                           plusw2	equ	0xFDB
   839                           fsr2h	equ	0xFDA
   840                           fsr2l	equ	0xFD9
   841                           status	equ	0xFD8
   842                           
   843                           	psect	cstackCOMRAM
   844  00002A                     __pcstackCOMRAM:
   845                           	opt stack 0
   846  00002A                     ??_USBStdGetDscHandler:
   847  00002A                     ?i2_USBTransferOnePacket:
   848                           	opt stack 0
   849  00002A                     LED_On@led:
   850                           	opt stack 0
   851  00002A                     LED_Off@led:
   852                           	opt stack 0
   853  00002A                     USBConfigureEndpoint@direction:
   854                           	opt stack 0
   855  00002A                     USBCtrlTrfTxService@byteToSend:
   856                           	opt stack 0
   857  00002A                     USBCtrlTrfRxService@i:
   858                           	opt stack 0
   859  00002A                     i2BUTTON_Enable@button:
   860                           	opt stack 0
   861  00002A                     i2LED_Enable@led:
   862                           	opt stack 0
   863  00002A                     i2USBTransferOnePacket@dir:
   864                           	opt stack 0
   865  00002A                     USBStdGetStatusHandler@p:
   866                           	opt stack 0
   867  00002A                     memcpy@d1:
   868                           	opt stack 0
   869  00002A                     i2memset@p1:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x0
   873  00002A                     	ds	1
   874  00002B                     ??_USBConfigureEndpoint:
   875  00002B                     USBCtrlTrfRxService@byteToRead:
   876                           	opt stack 0
   877  00002B                     USBCtrlTrfInHandler@lastDTS:
   878                           	opt stack 0
   879  00002B                     i2SYSTEM_Initialize@state:
   880                           	opt stack 0
   881  00002B                     i2USBTransferOnePacket@data:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x1
   885  00002B                     	ds	1
   886  00002C                     memcpy@s1:
   887                           	opt stack 0
   888  00002C                     i2memset@c:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x2
   892  00002C                     	ds	1
   893  00002D                     i2USBTransferOnePacket@len:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x3
   897  00002D                     	ds	1
   898  00002E                     ??i2_USBTransferOnePacket:
   899  00002E                     memcpy@n:
   900                           	opt stack 0
   901  00002E                     i2memset@n:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x4
   905  00002E                     	ds	1
   906  00002F                     USBConfigureEndpoint@EPNum:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x5
   910  00002F                     	ds	1
   911  000030                     i2USBTransferOnePacket@ep:
   912                           	opt stack 0
   913  000030                     USBConfigureEndpoint@handle:
   914                           	opt stack 0
   915  000030                     memcpy@d:
   916                           	opt stack 0
   917  000030                     i2memset@p:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x6
   921  000030                     	ds	1
   922  000031                     i2USBTransferOnePacket@handle:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x7
   926  000031                     	ds	1
   927  000032                     USBEnableEndpoint@options:
   928                           	opt stack 0
   929  000032                     i2USBDeviceInit@i:
   930                           	opt stack 0
   931  000032                     memcpy@s:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x8
   935  000032                     	ds	1
   936  000033                     USBEnableEndpoint@p:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x9
   940  000033                     	ds	1
   941  000034                     memcpy@tmp:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0xA
   945  000034                     	ds	1
   946  000035                     USBEnableEndpoint@ep:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0xB
   950  000035                     	ds	1
   951  000036                     USER_USB_CALLBACK_EVENT_HANDLER@event:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0xC
   955  000036                     	ds	2
   956  000038                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0xE
   960  000038                     	ds	2
   961  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@size:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x10
   965  00003A                     	ds	2
   966  00003C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
   967                           
   968                           ; 1 bytes @ 0x12
   969  00003C                     	ds	2
   970  00003E                     ??_USBStdFeatureReqHandler:
   971  00003E                     USBStdSetCfgHandler@i:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x14
   975  00003E                     	ds	2
   976  000040                     USBStdFeatureReqHandler@pUEP:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x16
   980  000040                     	ds	2
   981  000042                     USBStdFeatureReqHandler@current_ep_data:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x18
   985  000042                     	ds	1
   986  000043                     USBStdFeatureReqHandler@p:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x19
   990  000043                     	ds	2
   991  000045                     ??_USBCheckStdRequest:
   992                           
   993                           ; 1 bytes @ 0x1B
   994  000045                     	ds	1
   995  000046                     ??_USBCtrlEPService:
   996  000046                     
   997                           ; 1 bytes @ 0x1C
   998  000046                     	ds	1
   999  000047                     USBDeviceTasks@i:
  1000                           	opt stack 0
  1001                           
  1002                           ; 1 bytes @ 0x1D
  1003  000047                     	ds	1
  1004  000048                     ??_SYS_InterruptHigh:
  1005                           
  1006                           ; 1 bytes @ 0x1E
  1007  000048                     	ds	10
  1008                           tblptru	equ	0xFF8
  1009                           tblptrh	equ	0xFF7
  1010                           tblptrl	equ	0xFF6
  1011                           tablat	equ	0xFF5
  1012                           prodh	equ	0xFF4
  1013                           prodl	equ	0xFF3
  1014                           intcon	equ	0xFF2
  1015                           postinc0	equ	0xFEE
  1016                           wreg	equ	0xFE8
  1017                           indf1	equ	0xFE7
  1018                           postdec1	equ	0xFE5
  1019                           fsr1h	equ	0xFE2
  1020                           fsr1l	equ	0xFE1
  1021                           indf2	equ	0xFDF
  1022                           postinc2	equ	0xFDE
  1023                           postdec2	equ	0xFDD
  1024                           plusw2	equ	0xFDB
  1025                           fsr2h	equ	0xFDA
  1026                           fsr2l	equ	0xFD9
  1027                           status	equ	0xFD8
  1028                           
  1029 ;;
  1030 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1031 ;;
  1032 ;; *************** function _main *****************
  1033 ;; Defined at:
  1034 ;;		line 12 in file "main.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0
  1050 ;;      Temps:          0       2       0       0       0
  1051 ;;      Totals:         0       2       0       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels required when called:   14
  1054 ;; This function calls:
  1055 ;;		_APP_DeviceCDCBasicDemoTasks
  1056 ;;		_SYSTEM_Initialize
  1057 ;;		_USBDeviceAttach
  1058 ;;		_USBDeviceInit
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text0
  1065  0018AC                     __ptext0:
  1066                           	opt stack 0
  1067  0018AC                     _main:
  1068                           	opt stack 17
  1069                           
  1070                           ;main.c: 13: ANSEL = ANSELH = 0;
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;incstack = 0
  1074  0018AC  6A7F               	clrf	3967,c	;volatile
  1075  0018AE  6A7E               	clrf	3966,c	;volatile
  1076                           
  1077                           ;main.c: 14: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1078  0018B0  0E00               	movlw	0
  1079  0018B2  EC32  F00D         	call	_SYSTEM_Initialize
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;main.c: 15: USBDeviceInit();
  1083  0018B6  EC5F  F00A         	call	_USBDeviceInit	;wreg free
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 16: USBDeviceAttach();
  1087  0018BA  EC08  F00C         	call	_USBDeviceAttach	;wreg free
  1088  0018BE                     l5160:
  1089                           
  1090                           ;main.c: 18: ;
  1091                           ;main.c: 37: APP_DeviceCDCBasicDemoTasks();
  1092  0018BE  ECE4  F001         	call	_APP_DeviceCDCBasicDemoTasks	;wreg free
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;main.c: 38: _delay((unsigned long)((100)*(12000000/4000.0)));
  1096  0018C2  0E02               	movlw	2
  1097  0018C4  0100               	movlb	0	; () banked
  1098  0018C6  6FCF               	movwf	(??_main+1)& (0+255),b
  1099  0018C8  0E86               	movlw	134
  1100  0018CA  6FCE               	movwf	??_main& (0+255),b
  1101  0018CC  0E99               	movlw	153
  1102  0018CE                     u4067:
  1103  0018CE  2EE8               	decfsz	wreg,f,c
  1104  0018D0  D7FE               	bra	u4067
  1105  0018D2  2FCE               	decfsz	??_main& (0+255),f,b
  1106  0018D4  D7FC               	bra	u4067
  1107  0018D6  2FCF               	decfsz	(??_main+1)& (0+255),f,b
  1108  0018D8  D7FA               	bra	u4067
  1109  0018DA  D7F1               	goto	l5160
  1110  0018DC                     __end_of_main:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           prodh	equ	0xFF4
  1117                           prodl	equ	0xFF3
  1118                           intcon	equ	0xFF2
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           indf1	equ	0xFE7
  1122                           postdec1	equ	0xFE5
  1123                           fsr1h	equ	0xFE2
  1124                           fsr1l	equ	0xFE1
  1125                           indf2	equ	0xFDF
  1126                           postinc2	equ	0xFDE
  1127                           postdec2	equ	0xFDD
  1128                           plusw2	equ	0xFDB
  1129                           fsr2h	equ	0xFDA
  1130                           fsr2l	equ	0xFD9
  1131                           status	equ	0xFD8
  1132                           
  1133 ;; *************** function _USBDeviceInit *****************
  1134 ;; Defined at:
  1135 ;;		line 277 in file "picLibs/usb_device.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  i               1    8[BANK0 ] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 3F/0
  1146 ;;		On exit  : 3F/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       1       0       0       0
  1151 ;;      Temps:          0       0       0       0       0
  1152 ;;      Totals:         0       1       0       0       0
  1153 ;;Total ram usage:        1 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:   11
  1156 ;; This function calls:
  1157 ;;		_memset
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text1
  1164  0014BE                     __ptext1:
  1165                           	opt stack 0
  1166  0014BE                     _USBDeviceInit:
  1167                           	opt stack 0
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;usb_device.c: 279: uint8_t i;
  1171                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1172                           
  1173                           ;incstack = 0
  1174                           
  1175                           ;usb_device.c: 285: ;
  1176                           ;usb_device.c: 288: {UEIR = 0;};
  1177                           
  1178                           ;usb_device.c: 291: {UIR = 0;};
  1179                           
  1180                           ;usb_device.c: 294: UEP0 = 0;
  1181  0014BE  EC59  F004         	call	PL80	;call to abstracted procedure
  1182                           
  1183                           ; BSR set to: 15
  1184                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1185  0014C2  0E54               	movlw	84
  1186  0014C4  0100               	movlb	0	; () banked
  1187  0014C6  6FB1               	movwf	memset@p1& (0+255),b
  1188  0014C8  0E0F               	movlw	15
  1189  0014CA  6FB2               	movwf	(memset@p1+1)& (0+255),b
  1190  0014CC  6BB4               	clrf	(memset@c+1)& (0+255),b
  1191  0014CE  6BB3               	clrf	memset@c& (0+255),b
  1192  0014D0  6BB6               	clrf	(memset@n+1)& (0+255),b
  1193  0014D2  0E02               	movlw	2
  1194  0014D4  6FB5               	movwf	memset@n& (0+255),b
  1195  0014D6  ECC8  F00C         	call	_memset	;wreg free
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1199                           
  1200                           ; BSR set to: 0
  1201                           
  1202                           ; BSR set to: 15
  1203  0014DA  EC1A  F00C         	call	PL38	;call to abstracted procedure
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;usb_device.c: 301: ;
  1207                           ;usb_device.c: 304: ;
  1208                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1209  0014DE  0100               	movlb	0	; () banked
  1210  0014E0  6BB9               	clrf	USBDeviceInit@i& (0+255),b
  1211  0014E2                     l5076:
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;usb_device.c: 308: {
  1215                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1216  0014E2  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1217  0014E4  EC4D  F004         	call	PL42	;call to abstracted procedure
  1218                           
  1219                           ; BSR set to: 0
  1220  0014E8  2BB9               	incf	USBDeviceInit@i& (0+255),f,b
  1221                           
  1222                           ; BSR set to: 0
  1223  0014EA  0E0B               	movlw	11
  1224  0014EC  65B9               	cpfsgt	USBDeviceInit@i& (0+255),b
  1225  0014EE  D7F9               	goto	l5076
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;usb_device.c: 310: }
  1229                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1230                           
  1231                           ;usb_device.c: 316: UADDR = 0x00;
  1232                           
  1233                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1234                           
  1235                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1236                           
  1237                           ;usb_device.c: 326: {
  1238                           ;usb_device.c: 327: (UIR &= 0xF7);
  1239                           
  1240                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1241                           
  1242                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1243                           
  1244                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1245                           
  1246                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1247                           
  1248                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1249                           
  1250                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1251                           
  1252                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1253                           
  1254                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1258  0014F0  EC39  F004         	call	PL22	;call to abstracted procedure
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1262  0014F4  6BB9               	clrf	USBDeviceInit@i& (0+255),b
  1263  0014F6                     l5106:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;usb_device.c: 346: {
  1267                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1268  0014F6  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1269  0014F8  ECE2  F005         	call	PL34	;call to abstracted procedure
  1270  0014FC  6ADE               	clrf	postinc2,c
  1271  0014FE  6ADD               	clrf	postdec2,c
  1272                           
  1273                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1274  001500  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1275  001502  ECDC  F005         	call	PL30	;call to abstracted procedure
  1276  001506  6ADE               	clrf	postinc2,c
  1277  001508  6ADD               	clrf	postdec2,c
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1281  00150A  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1282  00150C  EC64  F004         	call	PL94	;call to abstracted procedure
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1286  001510  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1287  001512  EC5F  F004         	call	PL86	;call to abstracted procedure
  1288                           
  1289                           ; BSR set to: 0
  1290  001516  2BB9               	incf	USBDeviceInit@i& (0+255),f,b
  1291                           
  1292                           ; BSR set to: 0
  1293  001518  0E02               	movlw	2
  1294  00151A  65B9               	cpfsgt	USBDeviceInit@i& (0+255),b
  1295  00151C  D7EC               	goto	l5106
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;usb_device.c: 351: }
  1299                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1300  00151E  0E08               	movlw	8
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1304                           
  1305                           ; BSR set to: 15
  1306                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1307                           
  1308                           ; BSR set to: 2
  1309                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1310                           
  1311                           ; BSR set to: 2
  1312                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1313                           
  1314                           ; BSR set to: 2
  1315                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1316                           
  1317                           ; BSR set to: 2
  1318                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1319                           
  1320                           ; BSR set to: 2
  1321                           ;usb_device.c: 366: USB1msTickCount = 0;
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1328                           
  1329                           ; BSR set to: 0
  1330  001520  EF20  F004         	goto	PL18	;call to abstracted procedure
  1331  001524                     __end_of_USBDeviceInit:
  1332                           	opt stack 0
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           prodh	equ	0xFF4
  1338                           prodl	equ	0xFF3
  1339                           intcon	equ	0xFF2
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           indf1	equ	0xFE7
  1343                           postdec1	equ	0xFE5
  1344                           fsr1h	equ	0xFE2
  1345                           fsr1l	equ	0xFE1
  1346                           indf2	equ	0xFDF
  1347                           postinc2	equ	0xFDE
  1348                           postdec2	equ	0xFDD
  1349                           plusw2	equ	0xFDB
  1350                           fsr2h	equ	0xFDA
  1351                           fsr2l	equ	0xFD9
  1352                           status	equ	0xFD8
  1353                           
  1354 ;; *************** function _memset *****************
  1355 ;; Defined at:
  1356 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  p1              2    0[BANK0 ] PTR void 
  1359 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1360 ;;  c               2    2[BANK0 ] int 
  1361 ;;  n               2    4[BANK0 ] unsigned int 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  p               2    6[BANK0 ] PTR unsigned char 
  1364 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2    0[BANK0 ] PTR void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 3F/0
  1371 ;;		On exit  : 3F/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1374 ;;      Params:         0       6       0       0       0
  1375 ;;      Locals:         0       2       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         0       8       0       0       0
  1378 ;;Total ram usage:        8 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:   10
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_USBDeviceInit
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text2
  1389  001990                     __ptext2:
  1390                           	opt stack 0
  1391  001990                     _memset:
  1392                           	opt stack 19
  1393                           
  1394                           ; BSR set to: 0
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;incstack = 0
  1398  001990  C0B1  F0B7         	movff	memset@p1,memset@p
  1399  001994  C0B2  F0B8         	movff	memset@p1+1,memset@p+1
  1400  001998  D008               	goto	l4934
  1401  00199A                     l4930:
  1402                           
  1403                           ; BSR set to: 0
  1404  00199A  C0B7  FFD9         	movff	memset@p,fsr2l
  1405  00199E  C0B8  FFDA         	movff	memset@p+1,fsr2h
  1406  0019A2  C0B3  FFDF         	movff	memset@c,indf2
  1407                           
  1408                           ; BSR set to: 0
  1409  0019A6  4BB7               	infsnz	memset@p& (0+255),f,b
  1410  0019A8  2BB8               	incf	(memset@p+1)& (0+255),f,b
  1411  0019AA                     l4934:
  1412                           
  1413                           ; BSR set to: 0
  1414  0019AA  07B5               	decf	memset@n& (0+255),f,b
  1415  0019AC  A0D8               	btfss	status,0,c
  1416  0019AE  07B6               	decf	(memset@n+1)& (0+255),f,b
  1417  0019B0  29B5               	incf	memset@n& (0+255),w,b
  1418  0019B2  E1F3               	bnz	l4930
  1419  0019B4  29B6               	incf	(memset@n+1)& (0+255),w,b
  1420  0019B6  E1F1               	bnz	l4930
  1421                           
  1422                           ; BSR set to: 0
  1423  0019B8  0012               	return		;funcret
  1424  0019BA                     __end_of_memset:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           prodh	equ	0xFF4
  1431                           prodl	equ	0xFF3
  1432                           intcon	equ	0xFF2
  1433                           postinc0	equ	0xFEE
  1434                           wreg	equ	0xFE8
  1435                           indf1	equ	0xFE7
  1436                           postdec1	equ	0xFE5
  1437                           fsr1h	equ	0xFE2
  1438                           fsr1l	equ	0xFE1
  1439                           indf2	equ	0xFDF
  1440                           postinc2	equ	0xFDE
  1441                           postdec2	equ	0xFDD
  1442                           plusw2	equ	0xFDB
  1443                           fsr2h	equ	0xFDA
  1444                           fsr2l	equ	0xFD9
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _USBDeviceAttach *****************
  1448 ;; Defined at:
  1449 ;;		line 1352 in file "picLibs/usb_device.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2
  1458 ;; Tracked objects:
  1459 ;;		On entry : 3F/0
  1460 ;;		On exit  : 3F/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:   10
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text3
  1478  001810                     __ptext3:
  1479                           	opt stack 0
  1480  001810                     _USBDeviceAttach:
  1481                           	opt stack 20
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;usb_device.c: 1356: {
  1485                           ;usb_device.c: 1357: if(1 == 1)
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;incstack = 0
  1489  001810  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1490  001812  A4D8               	btfss	status,2,c
  1491  001814  0012               	return	
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;usb_device.c: 1358: {
  1495                           ;usb_device.c: 1360: UCON = 0;
  1496  001816  6A64               	clrf	3940,c	;volatile
  1497                           
  1498                           ;usb_device.c: 1363: UIE = 0;
  1499  001818  6A60               	clrf	3936,c	;volatile
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1503  00181A  D80C               	call	PL38	;call to abstracted procedure
  1504                           
  1505                           ; BSR set to: 15
  1506                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1507  00181C  8ED0               	bsf	4048,7,c	;volatile
  1508                           
  1509                           ; BSR set to: 15
  1510  00181E  84A2               	bsf	4002,2,c	;volatile
  1511                           
  1512                           ; BSR set to: 15
  1513  001820  84A0               	bsf	4000,2,c	;volatile
  1514                           
  1515                           ; BSR set to: 15
  1516  001822  8EF2               	bsf	intcon,7,c	;volatile
  1517                           
  1518                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1519  001824  D001               	goto	l453
  1520  001826                     l454:
  1521  001826  8664               	bsf	3940,3,c	;volatile
  1522  001828                     l453:
  1523  001828  A664               	btfss	3940,3,c	;volatile
  1524  00182A  D7FD               	goto	l454
  1525                           
  1526                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1527  00182C  0E01               	movlw	1
  1528  00182E  0100               	movlb	0	; () banked
  1529  001830  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  1530                           
  1531                           ; BSR set to: 0
  1532  001832  0C01               	retlw	1	;funcret
  1533  001834                     __end_of_USBDeviceAttach:
  1534                           	opt stack 0
  1535  001834                     PL38:
  1536                           	opt stack 19
  1537  001834  0E16               	movlw	22
  1538  001836  6E61               	movwf	3937,c	;volatile
  1539  001838  0E9F               	movlw	159
  1540  00183A  010F               	movlb	15	; () banked
  1541  00183C  6F5B               	movwf	91,b	;volatile
  1542  00183E  0E7B               	movlw	123
  1543  001840  6E60               	movwf	3936,c	;volatile
  1544  001842  0C7B               	retlw	123
  1545  001844                     __end_ofPL38:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           intcon	equ	0xFF2
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           indf1	equ	0xFE7
  1557                           postdec1	equ	0xFE5
  1558                           fsr1h	equ	0xFE2
  1559                           fsr1l	equ	0xFE1
  1560                           indf2	equ	0xFDF
  1561                           postinc2	equ	0xFDE
  1562                           postdec2	equ	0xFDD
  1563                           plusw2	equ	0xFDB
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _SYSTEM_Initialize *****************
  1569 ;; Defined at:
  1570 ;;		line 66 in file "picLibs/system.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  state           1    wreg     enum E3329
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  state           1    1[BANK0 ] enum E3329
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 3F/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         0       1       0       0       0
  1586 ;;      Temps:          0       0       0       0       0
  1587 ;;      Totals:         0       1       0       0       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:   11
  1591 ;; This function calls:
  1592 ;;		_BUTTON_Enable
  1593 ;;		_LED_Enable
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text4
  1600  001A64                     __ptext4:
  1601                           	opt stack 0
  1602  001A64                     _SYSTEM_Initialize:
  1603                           	opt stack 19
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;incstack = 0
  1607                           ;SYSTEM_Initialize@state stored from wreg
  1608  001A64  0100               	movlb	0	; () banked
  1609  001A66  6FB2               	movwf	SYSTEM_Initialize@state& (0+255),b
  1610                           
  1611                           ;system.c: 68: switch(state)
  1612  001A68  D006               	goto	l5058
  1613  001A6A                     l5054:
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;system.c: 71: LED_Enable(LED_D1);
  1617  001A6A  0E01               	movlw	1
  1618  001A6C  EC6E  F00C         	call	_LED_Enable
  1619                           
  1620                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  1621  001A70  0E01               	movlw	1
  1622  001A72  EF89  F00D         	goto	_BUTTON_Enable
  1623  001A76                     l5058:
  1624  001A76  0100               	movlb	0	; () banked
  1625  001A78  51B2               	movf	SYSTEM_Initialize@state& (0+255),w,b
  1626                           
  1627                           ; Switch size 1, requested type "space"
  1628                           ; Number of cases is 3, Range of values is 0 to 2
  1629                           ; switch strategies available:
  1630                           ; Name         Instructions Cycles
  1631                           ; simple_byte           10     6 (average)
  1632                           ;	Chosen strategy is simple_byte
  1633  001A7A  E0F7               	bz	l5054
  1634  001A7C  EF2E  F00D         	goto	PL106	;call to abstracted procedure
  1635  001A80                     __end_of_SYSTEM_Initialize:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           prodh	equ	0xFF4
  1642                           prodl	equ	0xFF3
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           indf1	equ	0xFE7
  1647                           postdec1	equ	0xFE5
  1648                           fsr1h	equ	0xFE2
  1649                           fsr1l	equ	0xFE1
  1650                           indf2	equ	0xFDF
  1651                           postinc2	equ	0xFDE
  1652                           postdec2	equ	0xFDD
  1653                           plusw2	equ	0xFDB
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _LED_Enable *****************
  1659 ;; Defined at:
  1660 ;;		line 220 in file "picLibs/leds.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  led             1    wreg     enum E2
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  led             1    0[BANK0 ] enum E2
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 3F/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         0       1       0       0       0
  1676 ;;      Temps:          0       0       0       0       0
  1677 ;;      Totals:         0       1       0       0       0
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:   10
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_SYSTEM_Initialize
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text5
  1689  0018DC                     __ptext5:
  1690                           	opt stack 0
  1691  0018DC                     _LED_Enable:
  1692                           	opt stack 19
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;incstack = 0
  1696                           ;LED_Enable@led stored from wreg
  1697  0018DC  0100               	movlb	0	; () banked
  1698  0018DE  6FB1               	movwf	LED_Enable@led& (0+255),b
  1699                           
  1700                           ;leds.c: 222: switch(led)
  1701  0018E0  D008               	goto	l4926
  1702  0018E2                     l214:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  1706  0018E2  9094               	bcf	3988,0,c	;volatile
  1707                           
  1708                           ;leds.c: 226: break;
  1709  0018E4  0012               	return	
  1710  0018E6                     l216:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  1714  0018E6  9294               	bcf	3988,1,c	;volatile
  1715                           
  1716                           ;leds.c: 230: break;
  1717  0018E8  0012               	return	
  1718  0018EA                     l217:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  1722  0018EA  9494               	bcf	3988,2,c	;volatile
  1723                           
  1724                           ;leds.c: 234: break;
  1725  0018EC  0012               	return	
  1726  0018EE                     l218:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  1730  0018EE  9694               	bcf	3988,3,c	;volatile
  1731                           
  1732                           ;leds.c: 238: break;
  1733  0018F0  0012               	return	
  1734  0018F2                     l4926:
  1735  0018F2  0100               	movlb	0	; () banked
  1736  0018F4  51B1               	movf	LED_Enable@led& (0+255),w,b
  1737                           
  1738                           ; Switch size 1, requested type "space"
  1739                           ; Number of cases is 5, Range of values is 0 to 4
  1740                           ; switch strategies available:
  1741                           ; Name         Instructions Cycles
  1742                           ; simple_byte           16     9 (average)
  1743                           ;	Chosen strategy is simple_byte
  1744  0018F6  B4D8               	btfsc	status,2,c
  1745  0018F8  0012               	return	
  1746  0018FA  0A01               	xorlw	1	; case 1
  1747  0018FC  E0F2               	bz	l214
  1748  0018FE  0A03               	xorlw	3	; case 2
  1749  001900  E0F2               	bz	l216
  1750  001902  0A01               	xorlw	1	; case 3
  1751  001904  E0F2               	bz	l217
  1752  001906  0A07               	xorlw	7	; case 4
  1753  001908  E0F2               	bz	l218
  1754                           
  1755                           ; BSR set to: 0
  1756  00190A  0012               	return		;funcret
  1757  00190C                     __end_of_LED_Enable:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           postinc0	equ	0xFEE
  1767                           wreg	equ	0xFE8
  1768                           indf1	equ	0xFE7
  1769                           postdec1	equ	0xFE5
  1770                           fsr1h	equ	0xFE2
  1771                           fsr1l	equ	0xFE1
  1772                           indf2	equ	0xFDF
  1773                           postinc2	equ	0xFDE
  1774                           postdec2	equ	0xFDD
  1775                           plusw2	equ	0xFDB
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _BUTTON_Enable *****************
  1781 ;; Defined at:
  1782 ;;		line 85 in file "picLibs/buttons.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  button          1    wreg     enum E3304
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  button          1    0[BANK0 ] enum E3304
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 3F/0
  1793 ;;		On exit  : 3F/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1796 ;;      Params:         0       0       0       0       0
  1797 ;;      Locals:         0       1       0       0       0
  1798 ;;      Temps:          0       0       0       0       0
  1799 ;;      Totals:         0       1       0       0       0
  1800 ;;Total ram usage:        1 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:   10
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_SYSTEM_Initialize
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text6
  1811  001B12                     __ptext6:
  1812                           	opt stack 0
  1813  001B12                     _BUTTON_Enable:
  1814                           	opt stack 19
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;incstack = 0
  1818                           ;BUTTON_Enable@button stored from wreg
  1819  001B12  6FB1               	movwf	BUTTON_Enable@button& (0+255),b
  1820                           
  1821                           ;buttons.c: 87: switch(button)
  1822  001B14  0100               	movlb	0	; () banked
  1823  001B16  51B1               	movf	BUTTON_Enable@button& (0+255),w,b
  1824                           
  1825                           ; Switch size 1, requested type "space"
  1826                           ; Number of cases is 2, Range of values is 0 to 1
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            7     4 (average)
  1830                           ;	Chosen strategy is simple_byte
  1831  001B18  EF86  F00D         	goto	PL118	;call to abstracted procedure
  1832  001B1C                     __end_of_BUTTON_Enable:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           prodh	equ	0xFF4
  1839                           prodl	equ	0xFF3
  1840                           intcon	equ	0xFF2
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           indf1	equ	0xFE7
  1844                           postdec1	equ	0xFE5
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           indf2	equ	0xFDF
  1848                           postinc2	equ	0xFDE
  1849                           postdec2	equ	0xFDD
  1850                           plusw2	equ	0xFDB
  1851                           fsr2h	equ	0xFDA
  1852                           fsr2l	equ	0xFD9
  1853                           status	equ	0xFD8
  1854                           
  1855 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  1856 ;; Defined at:
  1857 ;;		line 77 in file "picLibs/app_device_cdc_basic.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  a               4   25[BANK0 ] struct _DWORD_VAL
  1862 ;;  numBytesRead    1   24[BANK0 ] unsigned char 
  1863 ;;  i               1    0        unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 3F/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         0       5       0       0       0
  1875 ;;      Temps:          0       0       0       0       0
  1876 ;;      Totals:         0       5       0       0       0
  1877 ;;Total ram usage:        5 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:   13
  1880 ;; This function calls:
  1881 ;;		_BUTTON_IsPressed
  1882 ;;		_CDCTxService
  1883 ;;		_PIC18F26K40_enterLowVoltageProg
  1884 ;;		_PIC18F26K40_exitLowVoltageProg
  1885 ;;		_PIC18F26K40_loadDataIntoNVM
  1886 ;;		_PIC18F26K40_loadPC
  1887 ;;		_PIC18F26K40_readThreeBytes
  1888 ;;		_getsUSBUSART
  1889 ;;		_putUSBUSART
  1890 ;;		_putrsUSBUSART
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text7
  1897  0003C8                     __ptext7:
  1898                           	opt stack 0
  1899  0003C8                     _APP_DeviceCDCBasicDemoTasks:
  1900                           	opt stack 17
  1901                           
  1902                           ;app_device_cdc_basic.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;incstack = 0
  1906  0003C8  0E20               	movlw	32
  1907  0003CA  0100               	movlb	0	; () banked
  1908  0003CC  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  1909  0003CE  D001               	goto	l101
  1910  0003D0  0C20               	retlw	32
  1911  0003D2                     l101:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;app_device_cdc_basic.c: 85: }
  1915                           ;app_device_cdc_basic.c: 91: if( UCONbits.SUSPND== 1 )
  1916  0003D2  B264               	btfsc	3940,1,c	;volatile
  1917  0003D4  0012               	return	
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;app_device_cdc_basic.c: 94: }
  1921                           ;app_device_cdc_basic.c: 99: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  1922  0003D6  0E01               	movlw	1
  1923  0003D8  EC4E  F00D         	call	_BUTTON_IsPressed
  1924  0003DC  06E8               	decf	wreg,f,c
  1925  0003DE  E10B               	bnz	l104
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;app_device_cdc_basic.c: 100: {
  1929                           ;app_device_cdc_basic.c: 104: if(buttonPressed == 0)
  1930  0003E0  517F               	movf	_buttonPressed& (0+255),w,b
  1931  0003E2  E10A               	bnz	l4952
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;app_device_cdc_basic.c: 105: {
  1935                           ;app_device_cdc_basic.c: 108: if((cdc_trf_state == 0) == 1)
  1936  0003E4  5180               	movf	_cdc_trf_state& (0+255),w,b
  1937  0003E6  E108               	bnz	l4952
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;app_device_cdc_basic.c: 109: {
  1941                           ;app_device_cdc_basic.c: 110: putrsUSBUSART(buttonMessage);
  1942  0003E8  0ED0               	movlw	low _buttonMessage
  1943  0003EA  6FB1               	movwf	putrsUSBUSART@data& (0+255),b
  1944  0003EC  EC22  F00C         	call	_putrsUSBUSART	;wreg free
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;app_device_cdc_basic.c: 111: buttonPressed = 1;
  1948  0003F0  0E01               	movlw	1
  1949  0003F2  6F7F               	movwf	_buttonPressed& (0+255),b
  1950  0003F4  D001               	goto	l4952
  1951  0003F6                     l104:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;app_device_cdc_basic.c: 115: else
  1955                           ;app_device_cdc_basic.c: 116: {
  1956                           ;app_device_cdc_basic.c: 120: buttonPressed = 0;
  1957  0003F6  6B7F               	clrf	_buttonPressed& (0+255),b
  1958  0003F8                     l4952:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;app_device_cdc_basic.c: 121: }
  1962                           ;app_device_cdc_basic.c: 126: if( (cdc_trf_state == 0) == 1) {
  1963  0003F8  5180               	movf	_cdc_trf_state& (0+255),w,b
  1964  0003FA  E002 EFD2  F004    	bnz	_CDCTxService
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;app_device_cdc_basic.c: 127: uint8_t i;
  1968                           ;app_device_cdc_basic.c: 128: uint8_t numBytesRead;
  1969                           ;app_device_cdc_basic.c: 129: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  1970  000400  0E91               	movlw	low _readBuffer
  1971  000402  6FBA               	movwf	getsUSBUSART@buffer& (0+255),b
  1972  000404  0E0F               	movlw	15
  1973  000406  6FBB               	movwf	getsUSBUSART@len& (0+255),b
  1974  000408  ECF3  F009         	call	_getsUSBUSART	;wreg free
  1975  00040C  6FC9               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),b
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;app_device_cdc_basic.c: 130: if(numBytesRead > 0) {
  1979  00040E  51C9               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  1980  000410  E161               	bnz	l5046
  1981  000412  EFD2  F004         	goto	_CDCTxService
  1982  000416                     l4960:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;app_device_cdc_basic.c: 134: PIC18F26K40_enterLowVoltageProg();
  1986  000416  EC3D  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;app_device_cdc_basic.c: 135: a.v[3] = 0;
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;app_device_cdc_basic.c: 136: a.v[2] = readBuffer[1];
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;app_device_cdc_basic.c: 137: a.v[1] = readBuffer[2];
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;app_device_cdc_basic.c: 138: a.v[0] = readBuffer[3];
  1999                           
  2000                           ;app_device_cdc_basic.c: 139: PIC18F26K40_loadPC(a);
  2001  00041A  D873               	call	PL8	;call to abstracted procedure
  2002  00041C  ECCE  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2003                           
  2004                           ;app_device_cdc_basic.c: 140: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2005  000420  0E00               	movlw	0
  2006  000422  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2007  000424  EC39  F005         	call	_PIC18F26K40_readThreeBytes
  2008  000428  D88E               	call	PL26	;call to abstracted procedure
  2009                           
  2010                           ;app_device_cdc_basic.c: 141: writeBuffer[0] = a.v[1];
  2011  00042A  C0CB  F082         	movff	APP_DeviceCDCBasicDemoTasks@a+1,_writeBuffer
  2012                           
  2013                           ;app_device_cdc_basic.c: 142: writeBuffer[1] = a.v[0];
  2014  00042E  C0CA  F083         	movff	APP_DeviceCDCBasicDemoTasks@a,_writeBuffer+1
  2015  000432                     l4974:
  2016                           
  2017                           ;app_device_cdc_basic.c: 143: PIC18F26K40_exitLowVoltageProg();
  2018  000432  EC7D  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2019                           
  2020                           ;app_device_cdc_basic.c: 144: break;
  2021  000436  D05C               	goto	l5048
  2022  000438                     l4976:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;app_device_cdc_basic.c: 146: PIC18F26K40_enterLowVoltageProg();
  2026  000438  EC3D  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;app_device_cdc_basic.c: 147: a.v[3] = 0;
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;app_device_cdc_basic.c: 148: a.v[2] = readBuffer[1];
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;app_device_cdc_basic.c: 149: a.v[1] = readBuffer[2];
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;app_device_cdc_basic.c: 150: a.v[0] = readBuffer[3];
  2039                           
  2040                           ;app_device_cdc_basic.c: 151: PIC18F26K40_loadPC(a);
  2041  00043C  D862               	call	PL8	;call to abstracted procedure
  2042  00043E  ECCE  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;app_device_cdc_basic.c: 152: a.v[3] = 0x0;
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;app_device_cdc_basic.c: 153: a.v[2] = 0x0;
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;app_device_cdc_basic.c: 154: a.v[1] = readBuffer[4];
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;app_device_cdc_basic.c: 155: a.v[0] = readBuffer[5];
  2055                           
  2056                           ;app_device_cdc_basic.c: 156: PIC18F26K40_loadDataIntoNVM(a, FALSE, EXTERNALLY);
  2057  000442  D86F               	call	PL10	;call to abstracted procedure
  2058  000444  ECB7  F006         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2059                           
  2060                           ;app_device_cdc_basic.c: 157: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2061  000448  D887               	call	PL116	;call to abstracted procedure
  2062  00044A  EC39  F005         	call	_PIC18F26K40_readThreeBytes
  2063  00044E  D7EC               	goto	L1
  2064  000450                     l5000:
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;app_device_cdc_basic.c: 163: PIC18F26K40_enterLowVoltageProg();
  2068  000450  EC3D  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;app_device_cdc_basic.c: 164: a.v[3] = 0;
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;app_device_cdc_basic.c: 165: a.v[2] = readBuffer[1];
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;app_device_cdc_basic.c: 166: a.v[1] = readBuffer[2];
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;app_device_cdc_basic.c: 167: a.v[0] = readBuffer[3];
  2081                           
  2082                           ;app_device_cdc_basic.c: 168: PIC18F26K40_loadPC(a);
  2083  000454  D856               	call	PL8	;call to abstracted procedure
  2084  000456  ECCE  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;app_device_cdc_basic.c: 169: a.v[3] = 0x0;
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;app_device_cdc_basic.c: 170: a.v[2] = 0x0;
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;app_device_cdc_basic.c: 171: a.v[1] = readBuffer[4];
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;app_device_cdc_basic.c: 172: a.v[0] = readBuffer[5];
  2097                           
  2098                           ;app_device_cdc_basic.c: 173: PIC18F26K40_loadDataIntoNVM(a, FALSE, EXTERNALLY);
  2099  00045A  D863               	call	PL10	;call to abstracted procedure
  2100  00045C  ECB7  F006         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2101                           
  2102                           ;app_device_cdc_basic.c: 174: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2103  000460  D87B               	call	PL116	;call to abstracted procedure
  2104  000462  EC39  F005         	call	_PIC18F26K40_readThreeBytes
  2105  000466  D86F               	call	PL26	;call to abstracted procedure
  2106                           
  2107                           ;app_device_cdc_basic.c: 175: if ((a.v[0] == readBuffer[5]) && (a.v[1] == readBuffer[4])
      +                          )
  2108  000468  0100               	movlb	0	; () banked
  2109  00046A  51CA               	movf	APP_DeviceCDCBasicDemoTasks@a& (0+255),w,b
  2110  00046C  1996               	xorwf	(_readBuffer+5)& (0+255),w,b
  2111  00046E  E106               	bnz	l115
  2112                           
  2113                           ; BSR set to: 0
  2114  000470  5195               	movf	(_readBuffer+4)& (0+255),w,b
  2115  000472  19CB               	xorwf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),w,b
  2116  000474  E103               	bnz	l115
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;app_device_cdc_basic.c: 176: writeBuffer[0] = 0x01;
  2120  000476  0E01               	movlw	1
  2121  000478  6F82               	movwf	_writeBuffer& (0+255),b
  2122  00047A  D7DB               	goto	l4974
  2123  00047C                     l115:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;app_device_cdc_basic.c: 177: else
  2127                           ;app_device_cdc_basic.c: 178: writeBuffer[0] = 0x00;
  2128  00047C  6B82               	clrf	_writeBuffer& (0+255),b
  2129  00047E  D7D9               	goto	l4974
  2130  000480                     l5026:
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;app_device_cdc_basic.c: 182: PIC18F26K40_enterLowVoltageProg();
  2134  000480  EC3D  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2135                           
  2136                           ;app_device_cdc_basic.c: 183: break;
  2137  000484  D035               	goto	l5048
  2138  000486                     l119:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;app_device_cdc_basic.c: 188: a.v[3] = 0;
  2142                           
  2143                           ;app_device_cdc_basic.c: 189: a.v[2] = readBuffer[1];
  2144                           
  2145                           ;app_device_cdc_basic.c: 190: a.v[1] = readBuffer[2];
  2146                           
  2147                           ;app_device_cdc_basic.c: 191: a.v[0] = readBuffer[3];
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;app_device_cdc_basic.c: 192: PIC18F26K40_loadPC(a);
  2151  000486  D83D               	call	PL8	;call to abstracted procedure
  2152  000488  ECCE  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;app_device_cdc_basic.c: 193: a.v[3] = 0x0;
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;app_device_cdc_basic.c: 194: a.v[2] = 0x0;
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;app_device_cdc_basic.c: 195: a.v[1] = readBuffer[4];
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;app_device_cdc_basic.c: 196: a.v[0] = readBuffer[5];
  2165                           
  2166                           ;app_device_cdc_basic.c: 197: PIC18F26K40_loadDataIntoNVM(a, FALSE, EXTERNALLY);
  2167  00048C  D84A               	call	PL10	;call to abstracted procedure
  2168  00048E  ECB7  F006         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2169                           
  2170                           ;app_device_cdc_basic.c: 198: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2171  000492  D862               	call	PL116	;call to abstracted procedure
  2172  000494  EC39  F005         	call	_PIC18F26K40_readThreeBytes
  2173  000498  D856               	call	PL26	;call to abstracted procedure
  2174                           
  2175                           ;app_device_cdc_basic.c: 199: if ((a.v[0] == readBuffer[5]) && (a.v[1] == readBuffer[4])
      +                          )
  2176  00049A  0100               	movlb	0	; () banked
  2177  00049C  51CA               	movf	APP_DeviceCDCBasicDemoTasks@a& (0+255),w,b
  2178  00049E  1996               	xorwf	(_readBuffer+5)& (0+255),w,b
  2179  0004A0  E106               	bnz	l120
  2180                           
  2181                           ; BSR set to: 0
  2182  0004A2  5195               	movf	(_readBuffer+4)& (0+255),w,b
  2183  0004A4  19CB               	xorwf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),w,b
  2184  0004A6  E103               	bnz	l120
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;app_device_cdc_basic.c: 200: writeBuffer[0] = 0x01;
  2188  0004A8  0E01               	movlw	1
  2189  0004AA  6F82               	movwf	_writeBuffer& (0+255),b
  2190  0004AC  D001               	goto	l121
  2191  0004AE                     l120:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;app_device_cdc_basic.c: 201: else
  2195                           ;app_device_cdc_basic.c: 202: writeBuffer[0] = 0x00;
  2196  0004AE  6B82               	clrf	_writeBuffer& (0+255),b
  2197  0004B0                     l121:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;app_device_cdc_basic.c: 203: writeBuffer[1] = readBuffer[0];
  2201  0004B0  C091  F083         	movff	_readBuffer,_writeBuffer+1
  2202                           
  2203                           ;app_device_cdc_basic.c: 204: writeBuffer[2] = readBuffer[1];
  2204  0004B4  C092  F084         	movff	_readBuffer+1,_writeBuffer+2
  2205                           
  2206                           ;app_device_cdc_basic.c: 205: writeBuffer[3] = readBuffer[2];
  2207  0004B8  C093  F085         	movff	_readBuffer+2,_writeBuffer+3
  2208                           
  2209                           ;app_device_cdc_basic.c: 206: writeBuffer[4] = readBuffer[3];
  2210  0004BC  C094  F086         	movff	_readBuffer+3,_writeBuffer+4
  2211                           
  2212                           ;app_device_cdc_basic.c: 207: writeBuffer[5] = readBuffer[4];
  2213  0004C0  C095  F087         	movff	_readBuffer+4,_writeBuffer+5
  2214                           
  2215                           ;app_device_cdc_basic.c: 208: writeBuffer[6] = readBuffer[5];
  2216  0004C4  C096  F088         	movff	_readBuffer+5,_writeBuffer+6
  2217                           
  2218                           ;app_device_cdc_basic.c: 209: break;
  2219  0004C8  D013               	goto	l5048
  2220  0004CA                     l122:
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;app_device_cdc_basic.c: 211: writeBuffer[0] = readBuffer[0];
  2224  0004CA  C091  F082         	movff	_readBuffer,_writeBuffer
  2225                           
  2226                           ;app_device_cdc_basic.c: 212: writeBuffer[1] = readBuffer[1];
  2227  0004CE  C092  F083         	movff	_readBuffer+1,_writeBuffer+1
  2228                           
  2229                           ;app_device_cdc_basic.c: 213: }
  2230  0004D2  D00E               	goto	l5048
  2231  0004D4                     l5046:
  2232                           
  2233                           ; BSR set to: 0
  2234  0004D4  5191               	movf	_readBuffer& (0+255),w,b
  2235                           
  2236                           ; Switch size 1, requested type "space"
  2237                           ; Number of cases is 6, Range of values is 48 to 53
  2238                           ; switch strategies available:
  2239                           ; Name         Instructions Cycles
  2240                           ; simple_byte           19    10 (average)
  2241                           ;	Chosen strategy is simple_byte
  2242  0004D6  0A30               	xorlw	48	; case 48
  2243  0004D8  E09E               	bz	l4960
  2244  0004DA  0A01               	xorlw	1	; case 49
  2245  0004DC  E0AD               	bz	l4976
  2246  0004DE  0A03               	xorlw	3	; case 50
  2247  0004E0  E0B7               	bz	l5000
  2248  0004E2  0A01               	xorlw	1	; case 51
  2249  0004E4  E0CD               	bz	l5026
  2250  0004E6  0A07               	xorlw	7	; case 52
  2251  0004E8  E0A4               	bz	l4974
  2252  0004EA  0A01               	xorlw	1	; case 53
  2253  0004EC  E0CC               	bz	l119
  2254  0004EE  D7ED               	goto	l122
  2255  0004F0                     l5048:
  2256                           
  2257                           ;app_device_cdc_basic.c: 214: putUSBUSART(writeBuffer,numBytesRead);
  2258  0004F0  0E82               	movlw	low _writeBuffer
  2259  0004F2  0100               	movlb	0	; () banked
  2260  0004F4  6FB1               	movwf	putUSBUSART@data& (0+255),b
  2261  0004F6  C0C9  F0B2         	movff	APP_DeviceCDCBasicDemoTasks@numBytesRead,putUSBUSART@length
  2262  0004FA  EC68  F00D         	call	_putUSBUSART	;wreg free
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;app_device_cdc_basic.c: 215: }
  2266                           ;app_device_cdc_basic.c: 216: }
  2267                           ;app_device_cdc_basic.c: 217: CDCTxService();
  2268  0004FE  EFD2  F004         	goto	_CDCTxService	;wreg free
  2269  000502                     __end_of_APP_DeviceCDCBasicDemoTasks:
  2270                           	opt stack 0
  2271  000502                     PL8:
  2272                           	opt stack 17
  2273  000502  6BCD               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2274  000504  C092  F0CC         	movff	_readBuffer+1,APP_DeviceCDCBasicDemoTasks@a+2
  2275  000508  C093  F0CB         	movff	_readBuffer+2,APP_DeviceCDCBasicDemoTasks@a+1
  2276  00050C  C094  F0CA         	movff	_readBuffer+3,APP_DeviceCDCBasicDemoTasks@a
  2277  000510  C0CA  F0B7         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadPC@address
  2278  000514  C0CB  F0B8         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadPC@address+1
  2279  000518  C0CC  F0B9         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadPC@address+2
  2280  00051C  C0CD  F0BA         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadPC@address+3
  2281  000520  0012               	return	
  2282  000522                     __end_ofPL8:
  2283                           	opt stack 0
  2284  000522                     PL10:
  2285                           	opt stack 17
  2286  000522  6BCD               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2287  000524  6BCC               	clrf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2288  000526  C095  F0CB         	movff	_readBuffer+4,APP_DeviceCDCBasicDemoTasks@a+1
  2289  00052A  C096  F0CA         	movff	_readBuffer+5,APP_DeviceCDCBasicDemoTasks@a
  2290  00052E  C0CA  F0B5         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadDataIntoNVM@data
  2291  000532  C0CB  F0B6         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadDataIntoNVM@data+1
  2292  000536  C0CC  F0B7         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadDataIntoNVM@data+2
  2293  00053A  C0CD  F0B8         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadDataIntoNVM@data+3
  2294  00053E  6BB9               	clrf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),b
  2295  000540  0E01               	movlw	1
  2296  000542  6FBA               	movwf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),b
  2297  000544  0C01               	retlw	1
  2298  000546                     __end_ofPL10:
  2299                           	opt stack 0
  2300  000546                     PL26:
  2301                           	opt stack 17
  2302  000546  C0B7  F0CA         	movff	?_PIC18F26K40_readThreeBytes,APP_DeviceCDCBasicDemoTasks@a
  2303  00054A  C0B8  F0CB         	movff	?_PIC18F26K40_readThreeBytes+1,APP_DeviceCDCBasicDemoTasks@a+1
  2304  00054E  C0B9  F0CC         	movff	?_PIC18F26K40_readThreeBytes+2,APP_DeviceCDCBasicDemoTasks@a+2
  2305  000552  C0BA  F0CD         	movff	?_PIC18F26K40_readThreeBytes+3,APP_DeviceCDCBasicDemoTasks@a+3
  2306  000556  0012               	return	
  2307  000558                     __end_ofPL26:
  2308                           	opt stack 0
  2309  000558                     PL116:
  2310                           	opt stack 17
  2311  000558  0E00               	movlw	0
  2312  00055A  0100               	movlb	0	; () banked
  2313  00055C  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2314  00055E  0C00               	retlw	0
  2315  000560                     __end_ofPL116:
  2316                           	opt stack 0
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           intcon	equ	0xFF2
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           indf1	equ	0xFE7
  2327                           postdec1	equ	0xFE5
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           indf2	equ	0xFDF
  2331                           postinc2	equ	0xFDE
  2332                           postdec2	equ	0xFDD
  2333                           plusw2	equ	0xFDB
  2334                           fsr2h	equ	0xFDA
  2335                           fsr2l	equ	0xFD9
  2336                           status	equ	0xFD8
  2337                           
  2338 ;; *************** function _putrsUSBUSART *****************
  2339 ;; Defined at:
  2340 ;;		line 726 in file "picLibs/usb_device_cdc.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  data            1    0[BANK0 ] PTR const unsigned char 
  2343 ;;		 -> buttonMessage(18), 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  len             1    2[BANK0 ] unsigned char 
  2346 ;;  pData           1    1[BANK0 ] PTR const unsigned char 
  2347 ;;		 -> buttonMessage(18), 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 3F/0
  2354 ;;		On exit  : 3F/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2357 ;;      Params:         0       1       0       0       0
  2358 ;;      Locals:         0       2       0       0       0
  2359 ;;      Temps:          0       0       0       0       0
  2360 ;;      Totals:         0       3       0       0       0
  2361 ;;Total ram usage:        3 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:   10
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_APP_DeviceCDCBasicDemoTasks
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text8
  2372  001844                     __ptext8:
  2373                           	opt stack 0
  2374  001844                     _putrsUSBUSART:
  2375                           	opt stack 19
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;usb_device_cdc.c: 728: uint8_t len;
  2379                           ;usb_device_cdc.c: 729: const const char *pData;
  2380                           ;usb_device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;incstack = 0
  2384  001844  94A0               	bcf	4000,2,c	;volatile
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  2388  001846  5180               	movf	_cdc_trf_state& (0+255),w,b
  2389  001848  E002               	bz	l743
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;usb_device_cdc.c: 756: {
  2393                           ;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  2394  00184A  84A0               	bsf	4000,2,c	;volatile
  2395                           
  2396                           ;usb_device_cdc.c: 758: return;
  2397  00184C  0012               	return	
  2398  00184E                     l743:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;usb_device_cdc.c: 759: }
  2402                           ;usb_device_cdc.c: 765: len = 0;
  2403  00184E  6BB3               	clrf	putrsUSBUSART@len& (0+255),b
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;usb_device_cdc.c: 766: pData = data;
  2407  001850  C0B1  F0B2         	movff	putrsUSBUSART@data,putrsUSBUSART@pData
  2408  001854                     l4792:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;usb_device_cdc.c: 768: {
  2412                           ;usb_device_cdc.c: 769: len++;
  2413  001854  2BB3               	incf	putrsUSBUSART@len& (0+255),f,b
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;usb_device_cdc.c: 770: if(len == 255) break;
  2417  001856  29B3               	incf	putrsUSBUSART@len& (0+255),w,b
  2418  001858  E006               	bz	l4800
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;usb_device_cdc.c: 771: }while(*pData++);
  2422  00185A  2BB2               	incf	putrsUSBUSART@pData& (0+255),f,b
  2423  00185C  05B2               	decf	putrsUSBUSART@pData& (0+255),w,b
  2424  00185E  6ED9               	movwf	fsr2l,c
  2425  001860  6ADA               	clrf	fsr2h,c
  2426  001862  50DF               	movf	indf2,w,c
  2427  001864  E1F7               	bnz	l4792
  2428  001866                     l4800:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  2432  001866  C0B1  F06D         	movff	putrsUSBUSART@data,_pCDCSrc
  2433                           
  2434                           ; BSR set to: 0
  2435  00186A  C0B3  F01B         	movff	putrsUSBUSART@len,_cdc_tx_len
  2436                           
  2437                           ; BSR set to: 0
  2438  00186E  6B7C               	clrf	_cdc_mem_type& (0+255),b
  2439                           
  2440                           ; BSR set to: 0
  2441  001870  0E01               	movlw	1
  2442  001872  6F80               	movwf	_cdc_trf_state& (0+255),b
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  2446  001874  84A0               	bsf	4000,2,c	;volatile
  2447                           
  2448                           ; BSR set to: 0
  2449  001876  0C01               	retlw	1	;funcret
  2450  001878                     __end_of_putrsUSBUSART:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           intcon	equ	0xFF2
  2459                           postinc0	equ	0xFEE
  2460                           wreg	equ	0xFE8
  2461                           indf1	equ	0xFE7
  2462                           postdec1	equ	0xFE5
  2463                           fsr1h	equ	0xFE2
  2464                           fsr1l	equ	0xFE1
  2465                           indf2	equ	0xFDF
  2466                           postinc2	equ	0xFDE
  2467                           postdec2	equ	0xFDD
  2468                           plusw2	equ	0xFDB
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _putUSBUSART *****************
  2474 ;; Defined at:
  2475 ;;		line 556 in file "picLibs/usb_device_cdc.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  data            1    0[BANK0 ] PTR unsigned char 
  2478 ;;		 -> writeBuffer(15), 
  2479 ;;  length          1    1[BANK0 ] unsigned char 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0
  2486 ;; Tracked objects:
  2487 ;;		On entry : 3F/0
  2488 ;;		On exit  : 3F/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2491 ;;      Params:         0       2       0       0       0
  2492 ;;      Locals:         0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0
  2494 ;;      Totals:         0       2       0       0       0
  2495 ;;Total ram usage:        2 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:   10
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_APP_DeviceCDCBasicDemoTasks
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text9
  2506  001AD0                     __ptext9:
  2507                           	opt stack 0
  2508  001AD0                     _putUSBUSART:
  2509                           	opt stack 19
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;incstack = 0
  2516  001AD0  94A0               	bcf	4000,2,c	;volatile
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2520  001AD2  5180               	movf	_cdc_trf_state& (0+255),w,b
  2521  001AD4  E107               	bnz	l4846
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;usb_device_cdc.c: 583: {
  2525                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2526  001AD6  C0B1  F06D         	movff	putUSBUSART@data,_pCDCSrc
  2527                           
  2528                           ; BSR set to: 0
  2529  001ADA  C0B2  F01B         	movff	putUSBUSART@length,_cdc_tx_len
  2530                           
  2531                           ; BSR set to: 0
  2532  001ADE  0E01               	movlw	1
  2533  001AE0  6F7C               	movwf	_cdc_mem_type& (0+255),b
  2534                           
  2535                           ; BSR set to: 0
  2536  001AE2  6F80               	movwf	_cdc_trf_state& (0+255),b
  2537  001AE4                     l4846:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;usb_device_cdc.c: 585: }
  2541                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2542  001AE4  84A0               	bsf	4000,2,c	;volatile
  2543                           
  2544                           ; BSR set to: 0
  2545  001AE6  0012               	return		;funcret
  2546  001AE8                     __end_of_putUSBUSART:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           intcon	equ	0xFF2
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           indf1	equ	0xFE7
  2558                           postdec1	equ	0xFE5
  2559                           fsr1h	equ	0xFE2
  2560                           fsr1l	equ	0xFE1
  2561                           indf2	equ	0xFDF
  2562                           postinc2	equ	0xFDE
  2563                           postdec2	equ	0xFDD
  2564                           plusw2	equ	0xFDB
  2565                           fsr2h	equ	0xFDA
  2566                           fsr2l	equ	0xFD9
  2567                           status	equ	0xFD8
  2568                           
  2569 ;; *************** function _getsUSBUSART *****************
  2570 ;; Defined at:
  2571 ;;		line 485 in file "picLibs/usb_device_cdc.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  buffer          1    9[BANK0 ] PTR unsigned char 
  2574 ;;		 -> readBuffer(15), 
  2575 ;;  len             1   10[BANK0 ] unsigned char 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      unsigned char 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 3F/0
  2584 ;;		On exit  : 3F/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2587 ;;      Params:         0       2       0       0       0
  2588 ;;      Locals:         0       0       0       0       0
  2589 ;;      Temps:          0       1       0       0       0
  2590 ;;      Totals:         0       3       0       0       0
  2591 ;;Total ram usage:        3 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:   11
  2594 ;; This function calls:
  2595 ;;		_USBTransferOnePacket
  2596 ;; This function is called by:
  2597 ;;		_APP_DeviceCDCBasicDemoTasks
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text10
  2602  0013E6                     __ptext10:
  2603                           	opt stack 0
  2604  0013E6                     _getsUSBUSART:
  2605                           	opt stack 18
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;incstack = 0
  2612  0013E6  6A1C               	clrf	_cdc_rx_len,c
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2616  0013E8  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2617  0013EA  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  2618  0013EC  E006               	bz	l4816
  2619                           
  2620                           ; BSR set to: 0
  2621  0013EE  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2622  0013F2  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2623  0013F6  BEDF               	btfsc	indf2,7,c
  2624  0013F8  D024               	goto	l4830
  2625  0013FA                     l4816:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;usb_device_cdc.c: 490: {
  2629                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2630  0013FA  D825               	call	PL76	;call to abstracted procedure
  2631  0013FC  51BB               	movf	getsUSBUSART@len& (0+255),w,b
  2632  0013FE  5CDE               	subwf	postinc2,w,c
  2633  001400  E203               	bc	l4820
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2637  001402  D821               	call	PL76	;call to abstracted procedure
  2638  001404  50DF               	movf	indf2,w,c
  2639  001406  6FBB               	movwf	getsUSBUSART@len& (0+255),b
  2640  001408                     l4820:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2644  001408  6A1C               	clrf	_cdc_rx_len,c
  2645  00140A  D009               	goto	l4826
  2646  00140C                     l4822:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2650  00140C  0E80               	movlw	128
  2651  00140E  241C               	addwf	_cdc_rx_len,w,c
  2652  001410  EC56  F006         	call	PL114	;call to abstracted procedure
  2653  001414  51BA               	movf	getsUSBUSART@buffer& (0+255),w,b
  2654  001416  241C               	addwf	_cdc_rx_len,w,c
  2655  001418  EC51  F006         	call	PL112	;call to abstracted procedure
  2656                           
  2657                           ; BSR set to: 0
  2658  00141C  2A1C               	incf	_cdc_rx_len,f,c
  2659  00141E                     l4826:
  2660                           
  2661                           ; BSR set to: 0
  2662  00141E  51BB               	movf	getsUSBUSART@len& (0+255),w,b
  2663  001420  5C1C               	subwf	_cdc_rx_len,w,c
  2664  001422  E3F4               	bnc	l4822
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2668  001424  0E00               	movlw	0
  2669  001426  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  2670  001428  0E80               	movlw	128
  2671  00142A  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  2672  00142C  0E02               	movlw	2
  2673  00142E  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  2674  001430  0E0F               	movlw	15
  2675  001432  6FB4               	movwf	USBTransferOnePacket@len& (0+255),b
  2676  001434  0E02               	movlw	2
  2677  001436  EC9B  F005         	call	_USBTransferOnePacket
  2678  00143A  C0B1  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  2679  00143E  C0B2  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  2680  001442                     l4830:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;usb_device_cdc.c: 510: }
  2684                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2685  001442  501C               	movf	_cdc_rx_len,w,c
  2686                           
  2687                           ; BSR set to: 0
  2688  001444  0012               	return		;funcret
  2689  001446                     __end_of_getsUSBUSART:
  2690                           	opt stack 0
  2691  001446                     PL76:
  2692                           	opt stack 18
  2693  001446  EE20 F001          	lfsr	2,1
  2694  00144A  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2695  00144C  26D9               	addwf	fsr2l,f,c
  2696  00144E  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  2697  001450  22DA               	addwfc	fsr2h,f,c
  2698  001452  0012               	return	
  2699  001454                     __end_ofPL76:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           prodh	equ	0xFF4
  2706                           prodl	equ	0xFF3
  2707                           intcon	equ	0xFF2
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           indf1	equ	0xFE7
  2711                           postdec1	equ	0xFE5
  2712                           fsr1h	equ	0xFE2
  2713                           fsr1l	equ	0xFE1
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           postdec2	equ	0xFDD
  2717                           plusw2	equ	0xFDB
  2718                           fsr2h	equ	0xFDA
  2719                           fsr2l	equ	0xFD9
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _PIC18F26K40_readThreeBytes *****************
  2723 ;; Defined at:
  2724 ;;		line 53 in file "libs/progPIC18F26K40.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  direction       1    wreg     enum E4265
  2727 ;;  IncreasePC      1    6[BANK0 ] enum E4064
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  direction       1   17[BANK0 ] enum E4265
  2730 ;;  data            4   18[BANK0 ] struct _DWORD_VAL
  2731 ;;  i               1   23[BANK0 ] unsigned char 
  2732 ;;  j               1   22[BANK0 ] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  4    6[BANK0 ] struct _DWORD_VAL
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 3F/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2742 ;;      Params:         0       4       0       0       0
  2743 ;;      Locals:         0       7       0       0       0
  2744 ;;      Temps:          0       7       0       0       0
  2745 ;;      Totals:         0      18       0       0       0
  2746 ;;Total ram usage:       18 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:   12
  2749 ;; This function calls:
  2750 ;;		_PIC18F26K40_sendByte
  2751 ;; This function is called by:
  2752 ;;		_APP_DeviceCDCBasicDemoTasks
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text11
  2757  000A72                     __ptext11:
  2758                           	opt stack 0
  2759  000A72                     _PIC18F26K40_readThreeBytes:
  2760                           	opt stack 17
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;incstack = 0
  2764                           ;PIC18F26K40_readThreeBytes@direction stored from wreg
  2765  000A72  6FC2               	movwf	PIC18F26K40_readThreeBytes@direction& (0+255),b
  2766                           
  2767                           ;progPIC18F26K40.c: 54: if (IncreasePC)
  2768  000A74  0100               	movlb	0	; () banked
  2769  000A76  51B7               	movf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),w,b
  2770  000A78  E005               	bz	l4686
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;progPIC18F26K40.c: 55: PIC18F26K40_sendByte(0xFE, MSBTOLSB);
  2774  000A7A  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2775  000A7C  0EFE               	movlw	254
  2776  000A7E  EC92  F00A         	call	_PIC18F26K40_sendByte
  2777  000A82  D004               	goto	l4688
  2778  000A84                     l4686:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;progPIC18F26K40.c: 56: else
  2782                           ;progPIC18F26K40.c: 57: PIC18F26K40_sendByte(0xFC, MSBTOLSB);
  2783  000A84  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2784  000A86  0EFC               	movlw	252
  2785  000A88  EC92  F00A         	call	_PIC18F26K40_sendByte
  2786  000A8C                     l4688:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;progPIC18F26K40.c: 58: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  2790  000A8C  D000               	nop2		;2 cycle nop
  2791  000A8E  D000               	nop2		;2 cycle nop
  2792  000A90  D000               	nop2		;2 cycle nop
  2793                           
  2794                           ;progPIC18F26K40.c: 59: DWORD_VAL data;
  2795                           ;progPIC18F26K40.c: 60: data.Val = 0x000000;
  2796  000A92  0100               	movlb	0	; () banked
  2797  000A94  6BC3               	clrf	PIC18F26K40_readThreeBytes@data& (0+255),b
  2798  000A96  6BC4               	clrf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),b
  2799  000A98  6BC5               	clrf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),b
  2800  000A9A  6BC6               	clrf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),b
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;progPIC18F26K40.c: 61: BYTE i, j;
  2804                           ;progPIC18F26K40.c: 62: TRISCbits.TRISC6 = 1;
  2805  000A9C  8C94               	bsf	3988,6,c	;volatile
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;progPIC18F26K40.c: 63: for (i = 0; i < 23; i++) {
  2809  000A9E  6BC8               	clrf	PIC18F26K40_readThreeBytes@i& (0+255),b
  2810  000AA0                     l4700:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;progPIC18F26K40.c: 64: if (direction)
  2814  000AA0  51C2               	movf	PIC18F26K40_readThreeBytes@direction& (0+255),w,b
  2815  000AA2  E003               	bz	l4704
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;progPIC18F26K40.c: 65: j = i;
  2819  000AA4  C0C8  F0C7         	movff	PIC18F26K40_readThreeBytes@i,PIC18F26K40_readThreeBytes@j
  2820  000AA8  D003               	goto	l4706
  2821  000AAA                     l4704:
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;progPIC18F26K40.c: 66: else
  2825                           ;progPIC18F26K40.c: 67: j = 22-i;
  2826  000AAA  51C8               	movf	PIC18F26K40_readThreeBytes@i& (0+255),w,b
  2827  000AAC  0816               	sublw	22
  2828  000AAE  6FC7               	movwf	PIC18F26K40_readThreeBytes@j& (0+255),b
  2829  000AB0                     l4706:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;progPIC18F26K40.c: 68: LATCbits.LATC5 = 1;
  2833  000AB0  8A8B               	bsf	3979,5,c	;volatile
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;progPIC18F26K40.c: 69: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  2837  000AB2  D000               	nop2		;2 cycle nop
  2838  000AB4  D000               	nop2		;2 cycle nop
  2839  000AB6  D000               	nop2		;2 cycle nop
  2840                           
  2841                           ;progPIC18F26K40.c: 70: if (PORTCbits.RC6 == 1)
  2842  000AB8  AC82               	btfss	3970,6,c	;volatile
  2843  000ABA  D01F               	goto	l4714
  2844                           
  2845                           ;progPIC18F26K40.c: 71: data.Val = data.Val | ((DWORD)(0x1<<j));
  2846  000ABC  C0C7  F0BB         	movff	PIC18F26K40_readThreeBytes@j,??_PIC18F26K40_readThreeBytes
  2847  000AC0  0E01               	movlw	1
  2848  000AC2  0100               	movlb	0	; () banked
  2849  000AC4  6FBC               	movwf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),b
  2850  000AC6  6BBD               	clrf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),b
  2851  000AC8  2BBB               	incf	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2852  000ACA  D003               	goto	u3644
  2853  000ACC                     u3645:
  2854  000ACC  90D8               	bcf	status,0,c
  2855  000ACE  37BC               	rlcf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),f,b
  2856  000AD0  37BD               	rlcf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),f,b
  2857  000AD2                     u3644:
  2858  000AD2  2FBB               	decfsz	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2859  000AD4  D7FB               	goto	u3645
  2860  000AD6  C0BC  F0BE         	movff	??_PIC18F26K40_readThreeBytes+1,??_PIC18F26K40_readThreeBytes+3
  2861  000ADA  C0BD  F0BF         	movff	??_PIC18F26K40_readThreeBytes+2,??_PIC18F26K40_readThreeBytes+4
  2862  000ADE  0E00               	movlw	0
  2863  000AE0  0100               	movlb	0	; () banked
  2864  000AE2  BFBF               	btfsc	(??_PIC18F26K40_readThreeBytes+4)& (0+255),7,b
  2865  000AE4  0EFF               	movlw	255
  2866  000AE6  6FC0               	movwf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),b
  2867  000AE8  6FC1               	movwf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),b
  2868  000AEA  51BE               	movf	(??_PIC18F26K40_readThreeBytes+3)& (0+255),w,b
  2869  000AEC  13C3               	iorwf	PIC18F26K40_readThreeBytes@data& (0+255),f,b
  2870  000AEE  51BF               	movf	(??_PIC18F26K40_readThreeBytes+4)& (0+255),w,b
  2871  000AF0  13C4               	iorwf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),f,b
  2872  000AF2  51C0               	movf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),w,b
  2873  000AF4  13C5               	iorwf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),f,b
  2874  000AF6  51C1               	movf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),w,b
  2875  000AF8  13C6               	iorwf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),f,b
  2876  000AFA                     l4714:
  2877                           
  2878                           ;progPIC18F26K40.c: 72: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  2879  000AFA  D000               	nop2		;2 cycle nop
  2880  000AFC  D000               	nop2		;2 cycle nop
  2881  000AFE  D000               	nop2		;2 cycle nop
  2882                           
  2883                           ;progPIC18F26K40.c: 73: LATCbits.LATC5 = 0;
  2884  000B00  9A8B               	bcf	3979,5,c	;volatile
  2885                           
  2886                           ;progPIC18F26K40.c: 74: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  2887  000B02  D000               	nop2		;2 cycle nop
  2888  000B04  D000               	nop2		;2 cycle nop
  2889  000B06  D000               	nop2		;2 cycle nop
  2890  000B08  0100               	movlb	0	; () banked
  2891  000B0A  2BC8               	incf	PIC18F26K40_readThreeBytes@i& (0+255),f,b
  2892                           
  2893                           ; BSR set to: 0
  2894  000B0C  0E16               	movlw	22
  2895  000B0E  65C8               	cpfsgt	PIC18F26K40_readThreeBytes@i& (0+255),b
  2896  000B10  D7C7               	goto	l4700
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;progPIC18F26K40.c: 75: }
  2900                           ;progPIC18F26K40.c: 76: LATCbits.LATC5 = 1;
  2901  000B12  8A8B               	bsf	3979,5,c	;volatile
  2902                           
  2903                           ;progPIC18F26K40.c: 77: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  2904  000B14  D000               	nop2		;2 cycle nop
  2905  000B16  D000               	nop2		;2 cycle nop
  2906  000B18  D000               	nop2		;2 cycle nop
  2907                           
  2908                           ;progPIC18F26K40.c: 78: LATCbits.LATC5 = 0;
  2909  000B1A  9A8B               	bcf	3979,5,c	;volatile
  2910                           
  2911                           ;progPIC18F26K40.c: 79: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  2912  000B1C  D000               	nop2		;2 cycle nop
  2913  000B1E  D000               	nop2		;2 cycle nop
  2914  000B20  D000               	nop2		;2 cycle nop
  2915                           
  2916                           ;progPIC18F26K40.c: 81: TRISCbits.TRISC6 = 0;
  2917  000B22  9C94               	bcf	3988,6,c	;volatile
  2918                           
  2919                           ;progPIC18F26K40.c: 82: return data;
  2920  000B24  C0C3  F0B7         	movff	PIC18F26K40_readThreeBytes@data,?_PIC18F26K40_readThreeBytes
  2921  000B28  C0C4  F0B8         	movff	PIC18F26K40_readThreeBytes@data+1,?_PIC18F26K40_readThreeBytes+1
  2922  000B2C  C0C5  F0B9         	movff	PIC18F26K40_readThreeBytes@data+2,?_PIC18F26K40_readThreeBytes+2
  2923  000B30  C0C6  F0BA         	movff	PIC18F26K40_readThreeBytes@data+3,?_PIC18F26K40_readThreeBytes+3
  2924  000B34  0C16               	retlw	22	;funcret
  2925  000B36                     __end_of_PIC18F26K40_readThreeBytes:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           intcon	equ	0xFF2
  2934                           postinc0	equ	0xFEE
  2935                           wreg	equ	0xFE8
  2936                           indf1	equ	0xFE7
  2937                           postdec1	equ	0xFE5
  2938                           fsr1h	equ	0xFE2
  2939                           fsr1l	equ	0xFE1
  2940                           indf2	equ	0xFDF
  2941                           postinc2	equ	0xFDE
  2942                           postdec2	equ	0xFDD
  2943                           plusw2	equ	0xFDB
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _PIC18F26K40_loadPC *****************
  2949 ;; Defined at:
  2950 ;;		line 86 in file "libs/progPIC18F26K40.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  address         4    6[BANK0 ] struct _DWORD_VAL
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  tempAddress     4   10[BANK0 ] struct _DWORD_VAL
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 3F/0
  2961 ;;		On exit  : 3F/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2964 ;;      Params:         0       4       0       0       0
  2965 ;;      Locals:         0       4       0       0       0
  2966 ;;      Temps:          0       0       0       0       0
  2967 ;;      Totals:         0       8       0       0       0
  2968 ;;Total ram usage:        8 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:   12
  2971 ;; This function calls:
  2972 ;;		_PIC18F26K40_sendByte
  2973 ;; This function is called by:
  2974 ;;		_APP_DeviceCDCBasicDemoTasks
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text12
  2979  00179C                     __ptext12:
  2980                           	opt stack 0
  2981  00179C                     _PIC18F26K40_loadPC:
  2982                           	opt stack 17
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;progPIC18F26K40.c: 87: DWORD_VAL tempAddress;
  2986                           ;progPIC18F26K40.c: 88: tempAddress.Val= (address.Val<<1);
  2987                           
  2988                           ;incstack = 0
  2989  00179C  90D8               	bcf	status,0,c
  2990  00179E  35B7               	rlcf	PIC18F26K40_loadPC@address& (0+255),w,b
  2991  0017A0  6FBB               	movwf	PIC18F26K40_loadPC@tempAddress& (0+255),b
  2992  0017A2  35B8               	rlcf	(PIC18F26K40_loadPC@address+1)& (0+255),w,b
  2993  0017A4  6FBC               	movwf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),b
  2994  0017A6  35B9               	rlcf	(PIC18F26K40_loadPC@address+2)& (0+255),w,b
  2995  0017A8  6FBD               	movwf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),b
  2996  0017AA  35BA               	rlcf	(PIC18F26K40_loadPC@address+3)& (0+255),w,b
  2997  0017AC  6FBE               	movwf	(PIC18F26K40_loadPC@tempAddress+3)& (0+255),b
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;progPIC18F26K40.c: 89: tempAddress.bits.b0 = 0;
  3001  0017AE  91BB               	bcf	PIC18F26K40_loadPC@tempAddress& (0+255),0,b
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;progPIC18F26K40.c: 90: tempAddress.bits.b23 = 0;
  3005  0017B0  9FBD               	bcf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),7,b
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;progPIC18F26K40.c: 91: PIC18F26K40_sendByte(0x80, MSBTOLSB);
  3009  0017B2  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3010  0017B4  0E80               	movlw	128
  3011  0017B6  EC92  F00A         	call	_PIC18F26K40_sendByte
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;progPIC18F26K40.c: 92: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3015  0017BA  D000               	nop2		;2 cycle nop
  3016  0017BC  D000               	nop2		;2 cycle nop
  3017  0017BE  D000               	nop2		;2 cycle nop
  3018                           
  3019                           ;progPIC18F26K40.c: 93: PIC18F26K40_sendByte(tempAddress.v[2], MSBTOLSB);
  3020  0017C0  0100               	movlb	0	; () banked
  3021  0017C2  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3022  0017C4  51BD               	movf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),w,b
  3023  0017C6  EC92  F00A         	call	_PIC18F26K40_sendByte
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;progPIC18F26K40.c: 94: PIC18F26K40_sendByte(tempAddress.v[1], MSBTOLSB);
  3027  0017CA  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3028  0017CC  51BC               	movf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),w,b
  3029  0017CE  EC92  F00A         	call	_PIC18F26K40_sendByte
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;progPIC18F26K40.c: 95: PIC18F26K40_sendByte(tempAddress.v[0], MSBTOLSB);
  3033  0017D2  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3034  0017D4  51BB               	movf	PIC18F26K40_loadPC@tempAddress& (0+255),w,b
  3035  0017D6  EF92  F00A         	goto	_PIC18F26K40_sendByte
  3036  0017DA                     __end_of_PIC18F26K40_loadPC:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           prodh	equ	0xFF4
  3043                           prodl	equ	0xFF3
  3044                           intcon	equ	0xFF2
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           indf1	equ	0xFE7
  3048                           postdec1	equ	0xFE5
  3049                           fsr1h	equ	0xFE2
  3050                           fsr1l	equ	0xFE1
  3051                           indf2	equ	0xFDF
  3052                           postinc2	equ	0xFDE
  3053                           postdec2	equ	0xFDD
  3054                           plusw2	equ	0xFDB
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _PIC18F26K40_loadDataIntoNVM *****************
  3060 ;; Defined at:
  3061 ;;		line 98 in file "libs/progPIC18F26K40.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  data            4    4[BANK0 ] struct _DWORD_VAL
  3064 ;;  IncreasePC      1    8[BANK0 ] enum E4064
  3065 ;;  LatchType       1    9[BANK0 ] enum E4265
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  tempData        4   11[BANK0 ] struct _DWORD_VAL
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 3F/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3077 ;;      Params:         0       6       0       0       0
  3078 ;;      Locals:         0       4       0       0       0
  3079 ;;      Temps:          0       1       0       0       0
  3080 ;;      Totals:         0      11       0       0       0
  3081 ;;Total ram usage:       11 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:   12
  3084 ;; This function calls:
  3085 ;;		_PIC18F26K40_sendByteMsbToLsb
  3086 ;; This function is called by:
  3087 ;;		_APP_DeviceCDCBasicDemoTasks
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text13
  3092  000D6E                     __ptext13:
  3093                           	opt stack 0
  3094  000D6E                     _PIC18F26K40_loadDataIntoNVM:
  3095                           	opt stack 17
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;progPIC18F26K40.c: 99: DWORD_VAL tempData;
  3099                           ;progPIC18F26K40.c: 100: tempData.Val = (data.Val <<1 );
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;incstack = 0
  3103  000D6E  90D8               	bcf	status,0,c
  3104  000D70  35B5               	rlcf	PIC18F26K40_loadDataIntoNVM@data& (0+255),w,b
  3105  000D72  6FBC               	movwf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),b
  3106  000D74  35B6               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+1)& (0+255),w,b
  3107  000D76  6FBD               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),b
  3108  000D78  35B7               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+2)& (0+255),w,b
  3109  000D7A  6FBE               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),b
  3110  000D7C  35B8               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+3)& (0+255),w,b
  3111  000D7E  6FBF               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+3)& (0+255),b
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;progPIC18F26K40.c: 101: tempData.bits.b0 = 0;
  3115  000D80  91BC               	bcf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),0,b
  3116                           
  3117                           ;progPIC18F26K40.c: 102: if (IncreasePC==TRUE)
  3118  000D82  05B9               	decf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),w,b
  3119  000D84  E104               	bnz	l4746
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;progPIC18F26K40.c: 103: PIC18F26K40_sendByteMsbToLsb(0x02);
  3123  000D86  0E02               	movlw	2
  3124  000D88  EC15  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3125  000D8C  D003               	goto	l4748
  3126  000D8E                     l4746:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;progPIC18F26K40.c: 104: else
  3130                           ;progPIC18F26K40.c: 105: PIC18F26K40_sendByteMsbToLsb(0x00);
  3131  000D8E  0E00               	movlw	0
  3132  000D90  EC15  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3133  000D94                     l4748:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;progPIC18F26K40.c: 106: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3137  000D94  D000               	nop2		;2 cycle nop
  3138  000D96  D000               	nop2		;2 cycle nop
  3139  000D98  D000               	nop2		;2 cycle nop
  3140                           
  3141                           ;progPIC18F26K40.c: 107: PIC18F26K40_sendByteMsbToLsb(tempData.v[2]);
  3142  000D9A  0100               	movlb	0	; () banked
  3143  000D9C  51BE               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),w,b
  3144  000D9E  EC15  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3145                           
  3146                           ;progPIC18F26K40.c: 108: PIC18F26K40_sendByteMsbToLsb(tempData.v[1]);
  3147  000DA2  51BD               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),w,b
  3148  000DA4  EC15  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3149                           
  3150                           ;progPIC18F26K40.c: 109: PIC18F26K40_sendByteMsbToLsb(tempData.v[0]);
  3151  000DA8  51BC               	movf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),w,b
  3152  000DAA  EC15  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;progPIC18F26K40.c: 110: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3156  000DAE  D000               	nop2		;2 cycle nop
  3157  000DB0  D000               	nop2		;2 cycle nop
  3158  000DB2  D000               	nop2		;2 cycle nop
  3159                           
  3160                           ;progPIC18F26K40.c: 111: switch (LatchType) {
  3161  000DB4  D031               	goto	l4768
  3162  000DB6                     l4752:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;progPIC18F26K40.c: 114: PIC18F26K40_sendByteMsbToLsb(0xE0);
  3166  000DB6  0EE0               	movlw	224
  3167  000DB8  EC15  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;progPIC18F26K40.c: 115: _delay((unsigned long)((10)*(12000000/4000.0)));
  3171  000DBC  0E27               	movlw	39
  3172  000DBE  0100               	movlb	0	; () banked
  3173  000DC0  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3174  000DC2  0EF5               	movlw	245
  3175  000DC4                     u4077:
  3176  000DC4  2EE8               	decfsz	wreg,f,c
  3177  000DC6  D7FE               	bra	u4077
  3178  000DC8  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3179  000DCA  D7FC               	bra	u4077
  3180                           
  3181                           ;progPIC18F26K40.c: 116: break;
  3182  000DCC  0012               	return	
  3183  000DCE                     l4756:
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;progPIC18F26K40.c: 118: PIC18F26K40_sendByteMsbToLsb(0xC0);
  3187  000DCE  0EC0               	movlw	192
  3188  000DD0  EC15  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;progPIC18F26K40.c: 119: (_delay((unsigned long)((2)*(12000000/4000.0))));
  3192  000DD4  0E08               	movlw	8
  3193  000DD6  0100               	movlb	0	; () banked
  3194  000DD8  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3195  000DDA  0EC9               	movlw	201
  3196  000DDC                     u4087:
  3197  000DDC  2EE8               	decfsz	wreg,f,c
  3198  000DDE  D7FE               	bra	u4087
  3199  000DE0  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3200  000DE2  D7FC               	bra	u4087
  3201  000DE4  D000               	nop2	
  3202                           
  3203                           ;progPIC18F26K40.c: 120: (_delay((unsigned long)((500)*(12000000/4000000.0))));
  3204  000DE6  0ED6               	movlw	214
  3205  000DE8                     u4097:
  3206  000DE8  D000               	nop2	
  3207  000DEA  D000               	nop2	
  3208  000DEC  2EE8               	decfsz	wreg,f,c
  3209  000DEE  D7FC               	bra	u4097
  3210  000DF0  D000               	nop2	
  3211                           
  3212                           ;progPIC18F26K40.c: 121: PIC18F26K40_sendByteMsbToLsb(0x82);
  3213  000DF2  0E82               	movlw	130
  3214  000DF4  EC15  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;progPIC18F26K40.c: 122: (_delay((unsigned long)((2)*(12000000/4000.0))));
  3218  000DF8  0E08               	movlw	8
  3219  000DFA  0100               	movlb	0	; () banked
  3220  000DFC  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3221  000DFE  0EC9               	movlw	201
  3222  000E00                     u4107:
  3223  000E00  2EE8               	decfsz	wreg,f,c
  3224  000E02  D7FE               	bra	u4107
  3225  000E04  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3226  000E06  D7FC               	bra	u4107
  3227  000E08  D000               	nop2	
  3228                           
  3229                           ;progPIC18F26K40.c: 123: (_delay((unsigned long)((500)*(12000000/4000000.0))));
  3230  000E0A  0ED6               	movlw	214
  3231  000E0C                     u4117:
  3232  000E0C  D000               	nop2	
  3233  000E0E  D000               	nop2	
  3234  000E10  2EE8               	decfsz	wreg,f,c
  3235  000E12  D7FC               	bra	u4117
  3236  000E14  D000               	nop2	
  3237                           
  3238                           ;progPIC18F26K40.c: 124: break;
  3239  000E16  0012               	return	
  3240  000E18                     l4768:
  3241  000E18  0100               	movlb	0	; () banked
  3242  000E1A  51BA               	movf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),w,b
  3243                           
  3244                           ; Switch size 1, requested type "space"
  3245                           ; Number of cases is 2, Range of values is 0 to 1
  3246                           ; switch strategies available:
  3247                           ; Name         Instructions Cycles
  3248                           ; simple_byte            7     4 (average)
  3249                           ;	Chosen strategy is simple_byte
  3250  000E1C  E0CC               	bz	l4752
  3251  000E1E  0A01               	xorlw	1	; case 1
  3252  000E20  E0D6               	bz	l4756
  3253  000E22  0012               	return		;funcret
  3254  000E24                     __end_of_PIC18F26K40_loadDataIntoNVM:
  3255                           	opt stack 0
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           prodh	equ	0xFF4
  3261                           prodl	equ	0xFF3
  3262                           intcon	equ	0xFF2
  3263                           postinc0	equ	0xFEE
  3264                           wreg	equ	0xFE8
  3265                           indf1	equ	0xFE7
  3266                           postdec1	equ	0xFE5
  3267                           fsr1h	equ	0xFE2
  3268                           fsr1l	equ	0xFE1
  3269                           indf2	equ	0xFDF
  3270                           postinc2	equ	0xFDE
  3271                           postdec2	equ	0xFDD
  3272                           plusw2	equ	0xFDB
  3273                           fsr2h	equ	0xFDA
  3274                           fsr2l	equ	0xFD9
  3275                           status	equ	0xFD8
  3276                           
  3277 ;; *************** function _PIC18F26K40_sendByteMsbToLsb *****************
  3278 ;; Defined at:
  3279 ;;		line 128 in file "libs/progPIC18F26K40.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  info            1    wreg     unsigned char 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  info            1    2[BANK0 ] unsigned char 
  3284 ;;  i               1    3[BANK0 ] char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 3F/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         0       2       0       0       0
  3296 ;;      Temps:          0       2       0       0       0
  3297 ;;      Totals:         0       4       0       0       0
  3298 ;;Total ram usage:        4 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:   11
  3301 ;; This function calls:
  3302 ;;		_PIC18F26K40_setTrisToOut
  3303 ;; This function is called by:
  3304 ;;		_PIC18F26K40_loadDataIntoNVM
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text14
  3309  00162A                     __ptext14:
  3310                           	opt stack 0
  3311  00162A                     _PIC18F26K40_sendByteMsbToLsb:
  3312                           	opt stack 17
  3313                           
  3314                           ;incstack = 0
  3315                           ;PIC18F26K40_sendByteMsbToLsb@info stored from wreg
  3316  00162A  0100               	movlb	0	; () banked
  3317  00162C  6FB3               	movwf	PIC18F26K40_sendByteMsbToLsb@info& (0+255),b
  3318                           
  3319                           ;progPIC18F26K40.c: 129: PIC18F26K40_setTrisToOut ();
  3320  00162E  EC8E  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3321                           
  3322                           ;progPIC18F26K40.c: 130: for (INT8 i = 7; i >= 0; i--) {
  3323  001632  0E07               	movlw	7
  3324  001634  0100               	movlb	0	; () banked
  3325  001636  6FB4               	movwf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),b
  3326  001638                     l55:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;progPIC18F26K40.c: 131: LATCbits.LATC5 = 1;
  3330  001638  8A8B               	bsf	3979,5,c	;volatile
  3331                           
  3332                           ;progPIC18F26K40.c: 132: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3333  00163A  D000               	nop2		;2 cycle nop
  3334  00163C  D000               	nop2		;2 cycle nop
  3335  00163E  D000               	nop2		;2 cycle nop
  3336                           
  3337                           ;progPIC18F26K40.c: 133: if ((info >> i) & 0x01)
  3338  001640  C0B4  F0B1         	movff	PIC18F26K40_sendByteMsbToLsb@i,??_PIC18F26K40_sendByteMsbToLsb
  3339  001644  C0B3  F0B2         	movff	PIC18F26K40_sendByteMsbToLsb@info,??_PIC18F26K40_sendByteMsbToLsb+1
  3340  001648  0100               	movlb	0	; () banked
  3341  00164A  2BB1               	incf	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3342  00164C  D002               	goto	u3554
  3343  00164E                     u3555:
  3344  00164E  90D8               	bcf	status,0,c
  3345  001650  33B2               	rrcf	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),f,b
  3346  001652                     u3554:
  3347  001652  2FB1               	decfsz	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3348  001654  D7FC               	goto	u3555
  3349  001656  0100               	movlb	0	; () banked
  3350  001658  A1B2               	btfss	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),0,b
  3351  00165A  D002               	goto	l57
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;progPIC18F26K40.c: 134: LATCbits.LATC6 = 1;
  3355  00165C  8C8B               	bsf	3979,6,c	;volatile
  3356  00165E  D001               	goto	l58
  3357  001660                     l57:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;progPIC18F26K40.c: 135: else
  3361                           ;progPIC18F26K40.c: 136: LATCbits.LATC6 = 0;
  3362  001660  9C8B               	bcf	3979,6,c	;volatile
  3363  001662                     l58:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;progPIC18F26K40.c: 137: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3367  001662  D000               	nop2		;2 cycle nop
  3368  001664  D000               	nop2		;2 cycle nop
  3369  001666  D000               	nop2		;2 cycle nop
  3370                           
  3371                           ;progPIC18F26K40.c: 138: LATCbits.LATC5 = 0;
  3372  001668  9A8B               	bcf	3979,5,c	;volatile
  3373                           
  3374                           ;progPIC18F26K40.c: 139: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3375  00166A  D000               	nop2		;2 cycle nop
  3376  00166C  D000               	nop2		;2 cycle nop
  3377  00166E  D000               	nop2		;2 cycle nop
  3378  001670  0100               	movlb	0	; () banked
  3379  001672  07B4               	decf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),f,b
  3380                           
  3381                           ; BSR set to: 0
  3382  001674  BFB4               	btfsc	PIC18F26K40_sendByteMsbToLsb@i& (0+255),7,b
  3383                           
  3384                           ; BSR set to: 0
  3385  001676  0012               	return		;funcret
  3386  001678  D7DF               	goto	l55
  3387  00167A                     __end_of_PIC18F26K40_sendByteMsbToLsb:
  3388                           	opt stack 0
  3389                           tblptru	equ	0xFF8
  3390                           tblptrh	equ	0xFF7
  3391                           tblptrl	equ	0xFF6
  3392                           tablat	equ	0xFF5
  3393                           prodh	equ	0xFF4
  3394                           prodl	equ	0xFF3
  3395                           intcon	equ	0xFF2
  3396                           postinc0	equ	0xFEE
  3397                           wreg	equ	0xFE8
  3398                           indf1	equ	0xFE7
  3399                           postdec1	equ	0xFE5
  3400                           fsr1h	equ	0xFE2
  3401                           fsr1l	equ	0xFE1
  3402                           indf2	equ	0xFDF
  3403                           postinc2	equ	0xFDE
  3404                           postdec2	equ	0xFDD
  3405                           plusw2	equ	0xFDB
  3406                           fsr2h	equ	0xFDA
  3407                           fsr2l	equ	0xFD9
  3408                           status	equ	0xFD8
  3409                           
  3410 ;; *************** function _PIC18F26K40_exitLowVoltageProg *****************
  3411 ;; Defined at:
  3412 ;;		line 27 in file "libs/progPIC18F26K40.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		None
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0
  3429 ;;      Totals:         0       0       0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:   10
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_APP_DeviceCDCBasicDemoTasks
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text15
  3441  001AFA                     __ptext15:
  3442                           	opt stack 0
  3443  001AFA                     _PIC18F26K40_exitLowVoltageProg:
  3444                           	opt stack 19
  3445                           
  3446                           ;progPIC18F26K40.c: 28: TRISCbits.TRISC7 = 0;
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;incstack = 0
  3450  001AFA  9E94               	bcf	3988,7,c	;volatile
  3451                           
  3452                           ;progPIC18F26K40.c: 29: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3453  001AFC  D000               	nop2		;2 cycle nop
  3454  001AFE  D000               	nop2		;2 cycle nop
  3455  001B00  D000               	nop2		;2 cycle nop
  3456                           
  3457                           ;progPIC18F26K40.c: 30: LATCbits.LATC7 = 1;
  3458  001B02  8E8B               	bsf	3979,7,c	;volatile
  3459  001B04  0012               	return		;funcret
  3460  001B06                     __end_of_PIC18F26K40_exitLowVoltageProg:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           prodh	equ	0xFF4
  3467                           prodl	equ	0xFF3
  3468                           intcon	equ	0xFF2
  3469                           postinc0	equ	0xFEE
  3470                           wreg	equ	0xFE8
  3471                           indf1	equ	0xFE7
  3472                           postdec1	equ	0xFE5
  3473                           fsr1h	equ	0xFE2
  3474                           fsr1l	equ	0xFE1
  3475                           indf2	equ	0xFDF
  3476                           postinc2	equ	0xFDE
  3477                           postdec2	equ	0xFDD
  3478                           plusw2	equ	0xFDB
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           
  3483 ;; *************** function _PIC18F26K40_enterLowVoltageProg *****************
  3484 ;; Defined at:
  3485 ;;		line 10 in file "libs/progPIC18F26K40.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  code            4    6[BANK0 ] struct _DWORD_VAL
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 3F/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3499 ;;      Params:         0       0       0       0       0
  3500 ;;      Locals:         0       4       0       0       0
  3501 ;;      Temps:          0       0       0       0       0
  3502 ;;      Totals:         0       4       0       0       0
  3503 ;;Total ram usage:        4 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:   12
  3506 ;; This function calls:
  3507 ;;		_PIC18F26K40_sendByte
  3508 ;;		_PIC18F26K40_setTrisToOut
  3509 ;; This function is called by:
  3510 ;;		_APP_DeviceCDCBasicDemoTasks
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text16
  3515  00167A                     __ptext16:
  3516                           	opt stack 0
  3517  00167A                     _PIC18F26K40_enterLowVoltageProg:
  3518                           	opt stack 17
  3519                           
  3520                           ;progPIC18F26K40.c: 11: PIC18F26K40_setTrisToOut ();
  3521                           
  3522                           ;incstack = 0
  3523  00167A  EC8E  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3524                           
  3525                           ;progPIC18F26K40.c: 12: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3526  00167E  D000               	nop2		;2 cycle nop
  3527  001680  D000               	nop2		;2 cycle nop
  3528  001682  D000               	nop2		;2 cycle nop
  3529                           
  3530                           ;progPIC18F26K40.c: 14: LATCbits.LATC7 = 0;
  3531  001684  9E8B               	bcf	3979,7,c	;volatile
  3532                           
  3533                           ;progPIC18F26K40.c: 15: LATCbits.LATC6 = 0;
  3534  001686  9C8B               	bcf	3979,6,c	;volatile
  3535                           
  3536                           ;progPIC18F26K40.c: 16: LATCbits.LATC5 = 0;
  3537  001688  9A8B               	bcf	3979,5,c	;volatile
  3538                           
  3539                           ;progPIC18F26K40.c: 17: (_delay((unsigned long)((500)*(12000000/4000000.0))));
  3540  00168A  0ED6               	movlw	214
  3541  00168C                     u4127:
  3542  00168C  D000               	nop2	
  3543  00168E  D000               	nop2	
  3544  001690  2EE8               	decfsz	wreg,f,c
  3545  001692  D7FC               	bra	u4127
  3546  001694  D000               	nop2	
  3547                           
  3548                           ;progPIC18F26K40.c: 19: DWORD_VAL code;
  3549                           ;progPIC18F26K40.c: 20: code.Val = (0x4d434850);
  3550  001696  0E50               	movlw	80
  3551  001698  0100               	movlb	0	; () banked
  3552  00169A  6FB7               	movwf	PIC18F26K40_enterLowVoltageProg@code& (0+255),b
  3553  00169C  0E48               	movlw	72
  3554  00169E  6FB8               	movwf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),b
  3555  0016A0  0E43               	movlw	67
  3556  0016A2  6FB9               	movwf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),b
  3557  0016A4  0E4D               	movlw	77
  3558  0016A6  6FBA               	movwf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),b
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;progPIC18F26K40.c: 21: PIC18F26K40_sendByte(code.v[3], MSBTOLSB);
  3562  0016A8  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3563  0016AA  51BA               	movf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),w,b
  3564  0016AC  EC92  F00A         	call	_PIC18F26K40_sendByte
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;progPIC18F26K40.c: 22: PIC18F26K40_sendByte(code.v[2], MSBTOLSB);
  3568  0016B0  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3569  0016B2  51B9               	movf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),w,b
  3570  0016B4  EC92  F00A         	call	_PIC18F26K40_sendByte
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;progPIC18F26K40.c: 23: PIC18F26K40_sendByte(code.v[1], MSBTOLSB);
  3574  0016B8  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3575  0016BA  51B8               	movf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),w,b
  3576  0016BC  EC92  F00A         	call	_PIC18F26K40_sendByte
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;progPIC18F26K40.c: 24: PIC18F26K40_sendByte(code.v[0], MSBTOLSB);
  3580  0016C0  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3581  0016C2  51B7               	movf	PIC18F26K40_enterLowVoltageProg@code& (0+255),w,b
  3582  0016C4  EF92  F00A         	goto	_PIC18F26K40_sendByte
  3583  0016C8                     __end_of_PIC18F26K40_enterLowVoltageProg:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           indf1	equ	0xFE7
  3595                           postdec1	equ	0xFE5
  3596                           fsr1h	equ	0xFE2
  3597                           fsr1l	equ	0xFE1
  3598                           indf2	equ	0xFDF
  3599                           postinc2	equ	0xFDE
  3600                           postdec2	equ	0xFDD
  3601                           plusw2	equ	0xFDB
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8
  3605                           
  3606 ;; *************** function _PIC18F26K40_sendByte *****************
  3607 ;; Defined at:
  3608 ;;		line 33 in file "libs/progPIC18F26K40.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  info            1    wreg     unsigned char 
  3611 ;;  direction       1    0[BANK0 ] enum E4265
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  info            1    3[BANK0 ] unsigned char 
  3614 ;;  i               1    5[BANK0 ] unsigned char 
  3615 ;;  j               1    4[BANK0 ] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 3F/0
  3622 ;;		On exit  : 3F/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3625 ;;      Params:         0       1       0       0       0
  3626 ;;      Locals:         0       3       0       0       0
  3627 ;;      Temps:          0       2       0       0       0
  3628 ;;      Totals:         0       6       0       0       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:   11
  3632 ;; This function calls:
  3633 ;;		_PIC18F26K40_setTrisToOut
  3634 ;; This function is called by:
  3635 ;;		_PIC18F26K40_enterLowVoltageProg
  3636 ;;		_PIC18F26K40_readThreeBytes
  3637 ;;		_PIC18F26K40_loadPC
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text17
  3642  001524                     __ptext17:
  3643                           	opt stack 0
  3644  001524                     _PIC18F26K40_sendByte:
  3645                           	opt stack 17
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;incstack = 0
  3649                           ;PIC18F26K40_sendByte@info stored from wreg
  3650  001524  6FB4               	movwf	PIC18F26K40_sendByte@info& (0+255),b
  3651                           
  3652                           ;progPIC18F26K40.c: 34: PIC18F26K40_setTrisToOut ();
  3653  001526  EC8E  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3654                           
  3655                           ;progPIC18F26K40.c: 35: BYTE i, j;
  3656                           ;progPIC18F26K40.c: 36: for (i = 0; i < 8; i++) {
  3657  00152A  0100               	movlb	0	; () banked
  3658  00152C  6BB6               	clrf	PIC18F26K40_sendByte@i& (0+255),b
  3659  00152E                     l4596:
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;progPIC18F26K40.c: 37: if (direction)
  3663  00152E  51B1               	movf	PIC18F26K40_sendByte@direction& (0+255),w,b
  3664  001530  E003               	bz	l4600
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;progPIC18F26K40.c: 38: j = i;
  3668  001532  C0B6  F0B5         	movff	PIC18F26K40_sendByte@i,PIC18F26K40_sendByte@j
  3669  001536  D003               	goto	l4602
  3670  001538                     l4600:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;progPIC18F26K40.c: 39: else
  3674                           ;progPIC18F26K40.c: 40: j = 7-i;
  3675  001538  51B6               	movf	PIC18F26K40_sendByte@i& (0+255),w,b
  3676  00153A  0807               	sublw	7
  3677  00153C  6FB5               	movwf	PIC18F26K40_sendByte@j& (0+255),b
  3678  00153E                     l4602:
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;progPIC18F26K40.c: 41: LATCbits.LATC5 = 1;
  3682  00153E  8A8B               	bsf	3979,5,c	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;progPIC18F26K40.c: 42: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3686  001540  D000               	nop2		;2 cycle nop
  3687  001542  D000               	nop2		;2 cycle nop
  3688  001544  D000               	nop2		;2 cycle nop
  3689                           
  3690                           ;progPIC18F26K40.c: 43: if ((info >> j) & 0x01)
  3691  001546  C0B5  F0B2         	movff	PIC18F26K40_sendByte@j,??_PIC18F26K40_sendByte
  3692  00154A  C0B4  F0B3         	movff	PIC18F26K40_sendByte@info,??_PIC18F26K40_sendByte+1
  3693  00154E  0100               	movlb	0	; () banked
  3694  001550  2BB2               	incf	??_PIC18F26K40_sendByte& (0+255),f,b
  3695  001552  D002               	goto	u3524
  3696  001554                     u3525:
  3697  001554  90D8               	bcf	status,0,c
  3698  001556  33B3               	rrcf	(??_PIC18F26K40_sendByte+1)& (0+255),f,b
  3699  001558                     u3524:
  3700  001558  2FB2               	decfsz	??_PIC18F26K40_sendByte& (0+255),f,b
  3701  00155A  D7FC               	goto	u3525
  3702  00155C  0100               	movlb	0	; () banked
  3703  00155E  A1B3               	btfss	(??_PIC18F26K40_sendByte+1)& (0+255),0,b
  3704  001560  D002               	goto	l28
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;progPIC18F26K40.c: 44: LATCbits.LATC6 = 1;
  3708  001562  8C8B               	bsf	3979,6,c	;volatile
  3709  001564  D001               	goto	l29
  3710  001566                     l28:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;progPIC18F26K40.c: 45: else
  3714                           ;progPIC18F26K40.c: 46: LATCbits.LATC6 = 0;
  3715  001566  9C8B               	bcf	3979,6,c	;volatile
  3716  001568                     l29:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;progPIC18F26K40.c: 47: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3720  001568  D000               	nop2		;2 cycle nop
  3721  00156A  D000               	nop2		;2 cycle nop
  3722  00156C  D000               	nop2		;2 cycle nop
  3723                           
  3724                           ;progPIC18F26K40.c: 48: LATCbits.LATC5 = 0;
  3725  00156E  9A8B               	bcf	3979,5,c	;volatile
  3726                           
  3727                           ;progPIC18F26K40.c: 49: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3728  001570  D000               	nop2		;2 cycle nop
  3729  001572  D000               	nop2		;2 cycle nop
  3730  001574  D000               	nop2		;2 cycle nop
  3731  001576  0100               	movlb	0	; () banked
  3732  001578  2BB6               	incf	PIC18F26K40_sendByte@i& (0+255),f,b
  3733                           
  3734                           ; BSR set to: 0
  3735  00157A  0E07               	movlw	7
  3736  00157C  65B6               	cpfsgt	PIC18F26K40_sendByte@i& (0+255),b
  3737  00157E  D7D7               	goto	l4596
  3738  001580  0C07               	retlw	7
  3739  001582                     __end_of_PIC18F26K40_sendByte:
  3740                           	opt stack 0
  3741                           tblptru	equ	0xFF8
  3742                           tblptrh	equ	0xFF7
  3743                           tblptrl	equ	0xFF6
  3744                           tablat	equ	0xFF5
  3745                           prodh	equ	0xFF4
  3746                           prodl	equ	0xFF3
  3747                           intcon	equ	0xFF2
  3748                           postinc0	equ	0xFEE
  3749                           wreg	equ	0xFE8
  3750                           indf1	equ	0xFE7
  3751                           postdec1	equ	0xFE5
  3752                           fsr1h	equ	0xFE2
  3753                           fsr1l	equ	0xFE1
  3754                           indf2	equ	0xFDF
  3755                           postinc2	equ	0xFDE
  3756                           postdec2	equ	0xFDD
  3757                           plusw2	equ	0xFDB
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _PIC18F26K40_setTrisToOut *****************
  3763 ;; Defined at:
  3764 ;;		line 4 in file "libs/progPIC18F26K40.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		None
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3778 ;;      Params:         0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:   10
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_PIC18F26K40_enterLowVoltageProg
  3789 ;;		_PIC18F26K40_sendByte
  3790 ;;		_PIC18F26K40_sendByteMsbToLsb
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text18
  3795  001B1C                     __ptext18:
  3796                           	opt stack 0
  3797  001B1C                     _PIC18F26K40_setTrisToOut:
  3798                           	opt stack 17
  3799                           
  3800                           ;progPIC18F26K40.c: 5: TRISCbits.TRISC7 = 0;
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;incstack = 0
  3804  001B1C  9E94               	bcf	3988,7,c	;volatile
  3805                           
  3806                           ;progPIC18F26K40.c: 6: TRISCbits.TRISC6 = 0;
  3807  001B1E  9C94               	bcf	3988,6,c	;volatile
  3808                           
  3809                           ;progPIC18F26K40.c: 7: TRISCbits.TRISC5 = 0;
  3810  001B20  9A94               	bcf	3988,5,c	;volatile
  3811  001B22  0012               	return		;funcret
  3812  001B24                     __end_of_PIC18F26K40_setTrisToOut:
  3813                           	opt stack 0
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           intcon	equ	0xFF2
  3821                           postinc0	equ	0xFEE
  3822                           wreg	equ	0xFE8
  3823                           indf1	equ	0xFE7
  3824                           postdec1	equ	0xFE5
  3825                           fsr1h	equ	0xFE2
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           postinc2	equ	0xFDE
  3829                           postdec2	equ	0xFDD
  3830                           plusw2	equ	0xFDB
  3831                           fsr2h	equ	0xFDA
  3832                           fsr2l	equ	0xFD9
  3833                           status	equ	0xFD8
  3834                           
  3835 ;; *************** function _CDCTxService *****************
  3836 ;; Defined at:
  3837 ;;		line 836 in file "picLibs/usb_device_cdc.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  3842 ;;  i               1    9[BANK0 ] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 3F/0
  3849 ;;		On exit  : 3F/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3852 ;;      Params:         0       0       0       0       0
  3853 ;;      Locals:         0       2       0       0       0
  3854 ;;      Temps:          0       0       0       0       0
  3855 ;;      Totals:         0       2       0       0       0
  3856 ;;Total ram usage:        2 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:   11
  3859 ;; This function calls:
  3860 ;;		_USBTransferOnePacket
  3861 ;; This function is called by:
  3862 ;;		_APP_DeviceCDCBasicDemoTasks
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text19
  3867  0009A4                     __ptext19:
  3868                           	opt stack 0
  3869  0009A4                     _CDCTxService:
  3870                           	opt stack 18
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3874                           ;usb_device_cdc.c: 839: uint8_t i;
  3875                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3876                           
  3877                           ;incstack = 0
  3878  0009A4  94A0               	bcf	4000,2,c	;volatile
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;usb_device_cdc.c: 843: {};
  3882                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3883  0009A6  5176               	movf	_CDCDataInHandle& (0+255),w,b
  3884  0009A8  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3885  0009AA  E008               	bz	l4856
  3886                           
  3887                           ; BSR set to: 0
  3888  0009AC  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
  3889  0009B0  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3890  0009B4  AEDF               	btfss	indf2,7,c
  3891  0009B6  D002               	goto	l4856
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;usb_device_cdc.c: 846: {
  3895                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3896  0009B8  84A0               	bsf	4000,2,c	;volatile
  3897                           
  3898                           ;usb_device_cdc.c: 848: return;
  3899  0009BA  0012               	return	
  3900  0009BC                     l4856:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;usb_device_cdc.c: 849: }
  3904                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3905  0009BC  0E03               	movlw	3
  3906  0009BE  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3907  0009C0  E101               	bnz	l4860
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3911  0009C2  6B80               	clrf	_cdc_trf_state& (0+255),b
  3912  0009C4                     l4860:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3916  0009C4  5180               	movf	_cdc_trf_state& (0+255),w,b
  3917  0009C6  E102               	bnz	l4864
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;usb_device_cdc.c: 863: {
  3921                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3922  0009C8  84A0               	bsf	4000,2,c	;volatile
  3923                           
  3924                           ;usb_device_cdc.c: 865: return;
  3925  0009CA  0012               	return	
  3926  0009CC                     l4864:
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;usb_device_cdc.c: 866: }
  3930                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3931  0009CC  0E02               	movlw	2
  3932  0009CE  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3933  0009D0  E10D               	bnz	l4870
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;usb_device_cdc.c: 872: {
  3937                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3938  0009D2  0E01               	movlw	1
  3939  0009D4  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  3940  0009D6  0E00               	movlw	0
  3941  0009D8  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  3942  0009DA  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3943  0009DC  6FB4               	movwf	USBTransferOnePacket@len& (0+255),b
  3944  0009DE  0E02               	movlw	2
  3945  0009E0  EC9B  F005         	call	_USBTransferOnePacket
  3946  0009E4  D841               	call	PL100	;call to abstracted procedure
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3950  0009E6  0E03               	movlw	3
  3951  0009E8  6F80               	movwf	_cdc_trf_state& (0+255),b
  3952                           
  3953                           ;usb_device_cdc.c: 876: }
  3954  0009EA  D02E               	goto	l4914
  3955  0009EC                     l4870:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3959  0009EC  0580               	decf	_cdc_trf_state& (0+255),w,b
  3960  0009EE  E12C               	bnz	l4914
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;usb_device_cdc.c: 878: {
  3964                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3965  0009F0  0E0F               	movlw	15
  3966  0009F2  641B               	cpfsgt	_cdc_tx_len,c
  3967  0009F4  D002               	goto	l757
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3971  0009F6  6FBB               	movwf	CDCTxService@byte_to_send& (0+255),b
  3972  0009F8  D002               	goto	l4876
  3973  0009FA                     l757:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;usb_device_cdc.c: 884: else
  3977                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3978  0009FA  C01B  F0BB         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3979  0009FE                     l4876:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3983  0009FE  51BB               	movf	CDCTxService@byte_to_send& (0+255),w,b
  3984  000A00  5E1B               	subwf	_cdc_tx_len,f,c
  3985                           
  3986                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3987  000A02  0E40               	movlw	64
  3988  000A04  6F6A               	movwf	_pCDCDst& (0+255),b
  3989  000A06  0E02               	movlw	2
  3990  000A08  6F6B               	movwf	(_pCDCDst+1)& (0+255),b
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3994  000A0A  C0BB  F0BA         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3998  000A0E  517C               	movf	_cdc_mem_type& (0+255),w,b
  3999  000A10  E002               	bz	l4892
  4000  000A12  D005               	goto	l4902
  4001  000A14                     l4884:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;usb_device_cdc.c: 898: {
  4005                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;usb_device_cdc.c: 902: i--;
  4015  000A14  D81B               	call	PL28	;call to abstracted procedure
  4016  000A16                     l4892:
  4017                           
  4018                           ; BSR set to: 0
  4019  000A16  51BA               	movf	CDCTxService@i& (0+255),w,b
  4020  000A18  E004               	bz	l4904
  4021  000A1A  D7FC               	goto	l4884
  4022  000A1C                     l4894:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;usb_device_cdc.c: 908: {
  4026                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;usb_device_cdc.c: 912: i--;
  4036  000A1C  D817               	call	PL28	;call to abstracted procedure
  4037  000A1E                     l4902:
  4038                           
  4039                           ; BSR set to: 0
  4040  000A1E  51BA               	movf	CDCTxService@i& (0+255),w,b
  4041  000A20  E1FD               	bnz	l4894
  4042  000A22                     l4904:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;usb_device_cdc.c: 913: }
  4046                           ;usb_device_cdc.c: 914: }
  4047                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  4048  000A22  501B               	movf	_cdc_tx_len,w,c
  4049  000A24  E106               	bnz	l4912
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;usb_device_cdc.c: 921: {
  4053                           ;usb_device_cdc.c: 922: if(byte_to_send == 15)
  4054  000A26  0E0F               	movlw	15
  4055  000A28  19BB               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  4059  000A2A  0E02               	movlw	2
  4060  000A2C  A4D8               	btfss	status,2,c
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;usb_device_cdc.c: 924: else
  4064                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  4065  000A2E  0E03               	movlw	3
  4066  000A30  6F80               	movwf	_cdc_trf_state& (0+255),b
  4067  000A32                     l4912:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;usb_device_cdc.c: 926: }
  4071                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4072  000A32  0E01               	movlw	1
  4073  000A34  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  4074  000A36  0E40               	movlw	64
  4075  000A38  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  4076  000A3A  0E02               	movlw	2
  4077  000A3C  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4078  000A3E  C0BB  F0B4         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  4079  000A42  EC9B  F005         	call	_USBTransferOnePacket
  4080  000A46  D810               	call	PL100	;call to abstracted procedure
  4081  000A48                     l4914:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;usb_device_cdc.c: 929: }
  4085                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  4086  000A48  84A0               	bsf	4000,2,c	;volatile
  4087                           
  4088                           ; BSR set to: 0
  4089  000A4A  0012               	return		;funcret
  4090  000A4C                     __end_of_CDCTxService:
  4091                           	opt stack 0
  4092  000A4C                     PL28:
  4093                           	opt stack 18
  4094  000A4C  516D               	movf	_pCDCSrc& (0+255),w,b
  4095  000A4E  6ED9               	movwf	fsr2l,c
  4096  000A50  6ADA               	clrf	fsr2h,c
  4097  000A52  C06A  FFE1         	movff	_pCDCDst,fsr1l
  4098  000A56  C06B  FFE2         	movff	_pCDCDst+1,fsr1h
  4099  000A5A  CFDF FFE7          	movff	indf2,indf1
  4100  000A5E  4B6A               	infsnz	_pCDCDst& (0+255),f,b
  4101  000A60  2B6B               	incf	(_pCDCDst+1)& (0+255),f,b
  4102  000A62  2B6D               	incf	_pCDCSrc& (0+255),f,b
  4103  000A64  07BA               	decf	CDCTxService@i& (0+255),f,b
  4104  000A66  0012               	return	
  4105  000A68                     __end_ofPL28:
  4106                           	opt stack 0
  4107  000A68                     PL100:
  4108                           	opt stack 18
  4109  000A68  C0B1  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4110  000A6C  C0B2  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4111  000A70  0012               	return	
  4112  000A72                     __end_ofPL100:
  4113                           	opt stack 0
  4114                           tblptru	equ	0xFF8
  4115                           tblptrh	equ	0xFF7
  4116                           tblptrl	equ	0xFF6
  4117                           tablat	equ	0xFF5
  4118                           prodh	equ	0xFF4
  4119                           prodl	equ	0xFF3
  4120                           intcon	equ	0xFF2
  4121                           postinc0	equ	0xFEE
  4122                           wreg	equ	0xFE8
  4123                           indf1	equ	0xFE7
  4124                           postdec1	equ	0xFE5
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           indf2	equ	0xFDF
  4128                           postinc2	equ	0xFDE
  4129                           postdec2	equ	0xFDD
  4130                           plusw2	equ	0xFDB
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _USBTransferOnePacket *****************
  4136 ;; Defined at:
  4137 ;;		line 995 in file "picLibs/usb_device.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  ep              1    wreg     unsigned char 
  4140 ;;  dir             1    0[BANK0 ] unsigned char 
  4141 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4142 ;;		 -> cdc_data_tx(15), cdc_data_rx(15), NULL(0), 
  4143 ;;  len             1    3[BANK0 ] unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  ep              1    6[BANK0 ] unsigned char 
  4146 ;;  handle          2    7[BANK0 ] PTR volatile struct __BD
  4147 ;;		 -> RAM(767), NULL(0), BDT(48), 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    0[BANK0 ] PTR void 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4152 ;; Tracked objects:
  4153 ;;		On entry : 3F/0
  4154 ;;		On exit  : 3F/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4157 ;;      Params:         0       4       0       0       0
  4158 ;;      Locals:         0       3       0       0       0
  4159 ;;      Temps:          0       2       0       0       0
  4160 ;;      Totals:         0       9       0       0       0
  4161 ;;Total ram usage:        9 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:   10
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_getsUSBUSART
  4168 ;;		_CDCTxService
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text20
  4173  000B36                     __ptext20:
  4174                           	opt stack 0
  4175  000B36                     _USBTransferOnePacket:
  4176                           	opt stack 18
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;incstack = 0
  4180                           ;USBTransferOnePacket@ep stored from wreg
  4181  000B36  6FB7               	movwf	USBTransferOnePacket@ep& (0+255),b
  4182                           
  4183                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4184                           ;usb_device.c: 1000: if(dir != 0)
  4185  000B38  0100               	movlb	0	; () banked
  4186  000B3A  51B1               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4187  000B3C  E004               	bz	l4634
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;usb_device.c: 1001: {
  4191                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4192  000B3E  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4193  000B40  ECA9  F006         	call	PL88	;call to abstracted procedure
  4194  000B44  D003               	goto	L3
  4195  000B46                     l4634:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;usb_device.c: 1005: else
  4199                           ;usb_device.c: 1006: {
  4200                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4201  000B46  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4202  000B48  ECA5  F006         	call	PL82	;call to abstracted procedure
  4203  000B4C                     L3:
  4204  000B4C  6ED9               	movwf	fsr2l,c
  4205  000B4E  6ADA               	clrf	fsr2h,c
  4206  000B50  CFDE F0B8          	movff	postinc2,USBTransferOnePacket@handle
  4207  000B54  CFDD F0B9          	movff	postdec2,USBTransferOnePacket@handle+1
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;usb_device.c: 1009: }
  4211                           ;usb_device.c: 1013: if(handle == 0)
  4212  000B58  51B8               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4213  000B5A  11B9               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4214  000B5C  E103               	bnz	l4640
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;usb_device.c: 1014: {
  4218                           ;usb_device.c: 1015: return 0;
  4219  000B5E  6BB1               	clrf	?_USBTransferOnePacket& (0+255),b
  4220  000B60  6BB2               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  4221  000B62  0012               	return	
  4222  000B64                     l4640:
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;usb_device.c: 1016: }
  4226                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4227  000B64  EE20 F002          	lfsr	2,2
  4228  000B68  D842               	call	PL110	;call to abstracted procedure
  4229  000B6A  C0B2  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4230  000B6E  C0B3  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4231                           
  4232                           ;usb_device.c: 1030: handle->CNT = len;
  4233  000B72  EE20 F001          	lfsr	2,1
  4234  000B76  D83B               	call	PL110	;call to abstracted procedure
  4235  000B78  C0B4  FFDF         	movff	USBTransferOnePacket@len,indf2
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4239  000B7C  D833               	call	PL84	;call to abstracted procedure
  4240  000B7E  0E40               	movlw	64
  4241  000B80  16DF               	andwf	indf2,f,c
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4245  000B82  D830               	call	PL84	;call to abstracted procedure
  4246  000B84  0E00               	movlw	0
  4247  000B86  86DB               	bsf	plusw2,3,c
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4251  000B88  D82D               	call	PL84	;call to abstracted procedure
  4252  000B8A  8EDB               	bsf	plusw2,7,c
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;usb_device.c: 1036: if(dir != 0)
  4256  000B8C  51B1               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4257  000B8E  E005               	bz	l4652
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;usb_device.c: 1037: {
  4261                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4262  000B90  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4263  000B92  D818               	call	PL34	;call to abstracted procedure
  4264  000B94  D81D               	call	PL56	;call to abstracted procedure
  4265  000B96  0F0F               	addlw	low _pBDTEntryIn
  4266  000B98  D004               	goto	L4
  4267  000B9A                     l4652:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;usb_device.c: 1041: else
  4271                           ;usb_device.c: 1042: {
  4272                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4273  000B9A  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4274  000B9C  D80D               	call	PL30	;call to abstracted procedure
  4275  000B9E  D818               	call	PL56	;call to abstracted procedure
  4276  000BA0  0F60               	addlw	low _pBDTEntryOut
  4277  000BA2                     L4:
  4278  000BA2  6ED9               	movwf	fsr2l,c
  4279  000BA4  6ADA               	clrf	fsr2h,c
  4280  000BA6  C0B5  FFDE         	movff	??_USBTransferOnePacket,postinc2
  4281  000BAA  C0B6  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;usb_device.c: 1045: }
  4285                           ;usb_device.c: 1046: return (void*)handle;
  4286  000BAE  C0B8  F0B1         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4287  000BB2  C0B9  F0B2         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4288                           
  4289                           ; BSR set to: 0
  4290  000BB6  0012               	return		;funcret
  4291  000BB8                     __end_of_USBTransferOnePacket:
  4292                           	opt stack 0
  4293  000BB8                     PL30:
  4294                           	opt stack 19
  4295  000BB8  0D02               	mullw	2
  4296  000BBA  50F3               	movf	prodl,w,c
  4297  000BBC  0F60               	addlw	low _pBDTEntryOut
  4298  000BBE  6ED9               	movwf	fsr2l,c
  4299  000BC0  6ADA               	clrf	fsr2h,c
  4300  000BC2  0012               	return	
  4301  000BC4                     __end_ofPL30:
  4302                           	opt stack 0
  4303  000BC4                     PL34:
  4304                           	opt stack 19
  4305  000BC4  0D02               	mullw	2
  4306  000BC6  50F3               	movf	prodl,w,c
  4307  000BC8  0F0F               	addlw	low _pBDTEntryIn
  4308  000BCA  6ED9               	movwf	fsr2l,c
  4309  000BCC  6ADA               	clrf	fsr2h,c
  4310  000BCE  0012               	return	
  4311  000BD0                     __end_ofPL34:
  4312                           	opt stack 0
  4313  000BD0                     PL56:
  4314                           	opt stack 18
  4315  000BD0  CFDE F0B5          	movff	postinc2,??_USBTransferOnePacket
  4316  000BD4  CFDD F0B6          	movff	postdec2,??_USBTransferOnePacket+1
  4317  000BD8  0E04               	movlw	4
  4318  000BDA  1BB5               	xorwf	??_USBTransferOnePacket& (0+255),f,b
  4319  000BDC  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4320  000BDE  0D02               	mullw	2
  4321  000BE0  50F3               	movf	prodl,w,c
  4322  000BE2  0012               	return	
  4323  000BE4                     __end_ofPL56:
  4324                           	opt stack 0
  4325  000BE4                     PL84:
  4326                           	opt stack 18
  4327  000BE4  C0B8  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4328  000BE8  C0B9  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4329  000BEC  0012               	return	
  4330  000BEE                     __end_ofPL84:
  4331                           	opt stack 0
  4332  000BEE                     PL110:
  4333                           	opt stack 18
  4334  000BEE  51B8               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4335  000BF0  26D9               	addwf	fsr2l,f,c
  4336  000BF2  51B9               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4337  000BF4  22DA               	addwfc	fsr2h,f,c
  4338  000BF6  0012               	return	
  4339  000BF8                     __end_ofPL110:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           prodh	equ	0xFF4
  4346                           prodl	equ	0xFF3
  4347                           intcon	equ	0xFF2
  4348                           postinc0	equ	0xFEE
  4349                           wreg	equ	0xFE8
  4350                           indf1	equ	0xFE7
  4351                           postdec1	equ	0xFE5
  4352                           fsr1h	equ	0xFE2
  4353                           fsr1l	equ	0xFE1
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           postdec2	equ	0xFDD
  4357                           plusw2	equ	0xFDB
  4358                           fsr2h	equ	0xFDA
  4359                           fsr2l	equ	0xFD9
  4360                           status	equ	0xFD8
  4361                           
  4362 ;; *************** function _BUTTON_IsPressed *****************
  4363 ;; Defined at:
  4364 ;;		line 55 in file "picLibs/buttons.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  button          1    wreg     enum E3304
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  button          1    0[BANK0 ] enum E3304
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      unsigned char 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0
  4373 ;; Tracked objects:
  4374 ;;		On entry : 3F/0
  4375 ;;		On exit  : 3F/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4378 ;;      Params:         0       0       0       0       0
  4379 ;;      Locals:         0       1       0       0       0
  4380 ;;      Temps:          0       0       0       0       0
  4381 ;;      Totals:         0       1       0       0       0
  4382 ;;Total ram usage:        1 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:   10
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_APP_DeviceCDCBasicDemoTasks
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text21
  4393  001A9C                     __ptext21:
  4394                           	opt stack 0
  4395  001A9C                     _BUTTON_IsPressed:
  4396                           	opt stack 19
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;incstack = 0
  4400                           ;BUTTON_IsPressed@button stored from wreg
  4401  001A9C  6FB1               	movwf	BUTTON_IsPressed@button& (0+255),b
  4402                           
  4403                           ;buttons.c: 57: switch(button)
  4404  001A9E  D003               	goto	l4778
  4405  001AA0                     l156:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4409  001AA0  A680               	btfss	3968,3,c	;volatile
  4410  001AA2  0C01               	retlw	1
  4411  001AA4  0C00               	retlw	0
  4412  001AA6                     l4778:
  4413  001AA6  0100               	movlb	0	; () banked
  4414  001AA8  51B1               	movf	BUTTON_IsPressed@button& (0+255),w,b
  4415                           
  4416                           ; Switch size 1, requested type "space"
  4417                           ; Number of cases is 2, Range of values is 0 to 1
  4418                           ; switch strategies available:
  4419                           ; Name         Instructions Cycles
  4420                           ; simple_byte            7     4 (average)
  4421                           ;	Chosen strategy is simple_byte
  4422  001AAA  B4D8               	btfsc	status,2,c
  4423  001AAC  0C00               	retlw	0
  4424  001AAE  0A01               	xorlw	1	; case 1
  4425  001AB0  A4D8               	btfss	status,2,c
  4426  001AB2  0C00               	retlw	0
  4427  001AB4  D7F5               	goto	l156
  4428  001AB6                     __end_of_BUTTON_IsPressed:
  4429                           	opt stack 0
  4430                           tblptru	equ	0xFF8
  4431                           tblptrh	equ	0xFF7
  4432                           tblptrl	equ	0xFF6
  4433                           tablat	equ	0xFF5
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           intcon	equ	0xFF2
  4437                           postinc0	equ	0xFEE
  4438                           wreg	equ	0xFE8
  4439                           indf1	equ	0xFE7
  4440                           postdec1	equ	0xFE5
  4441                           fsr1h	equ	0xFE2
  4442                           fsr1l	equ	0xFE1
  4443                           indf2	equ	0xFDF
  4444                           postinc2	equ	0xFDE
  4445                           postdec2	equ	0xFDD
  4446                           plusw2	equ	0xFDB
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _SYS_InterruptHigh *****************
  4452 ;; Defined at:
  4453 ;;		line 86 in file "picLibs/system.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4467 ;;      Params:         0       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0
  4469 ;;      Temps:         10       0       0       0       0
  4470 ;;      Totals:        10       0       0       0       0
  4471 ;;Total ram usage:       10 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    9
  4474 ;; This function calls:
  4475 ;;		_USBDeviceTasks
  4476 ;; This function is called by:
  4477 ;;		Interrupt level 2
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	intcode
  4482  000008                     __pintcode:
  4483                           	opt stack 0
  4484  000008                     _SYS_InterruptHigh:
  4485                           	opt stack 17
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;incstack = 0
  4489  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4490  00000A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh
  4491  00000E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+1
  4492  000012  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+2
  4493  000016  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+3
  4494  00001A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+4
  4495  00001E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+5
  4496  000022  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+6
  4497  000026  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+7
  4498  00002A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+8
  4499  00002E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+9
  4500                           
  4501                           ;system.c: 89: USBDeviceTasks();
  4502  000032  EC7C  F003         	call	_USBDeviceTasks	;wreg free
  4503  000036  C051  FFF5         	movff	??_SYS_InterruptHigh+9,tablat
  4504  00003A  C050  FFF8         	movff	??_SYS_InterruptHigh+8,tblptru
  4505  00003E  C04F  FFF7         	movff	??_SYS_InterruptHigh+7,tblptrh
  4506  000042  C04E  FFF6         	movff	??_SYS_InterruptHigh+6,tblptrl
  4507  000046  C04D  FFF4         	movff	??_SYS_InterruptHigh+5,prodh
  4508  00004A  C04C  FFF3         	movff	??_SYS_InterruptHigh+4,prodl
  4509  00004E  C04B  FFDA         	movff	??_SYS_InterruptHigh+3,fsr2h
  4510  000052  C04A  FFD9         	movff	??_SYS_InterruptHigh+2,fsr2l
  4511  000056  C049  FFE2         	movff	??_SYS_InterruptHigh+1,fsr1h
  4512  00005A  C048  FFE1         	movff	??_SYS_InterruptHigh,fsr1l
  4513  00005E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4514  000060  0011               	retfie		f
  4515  000062                     __end_of_SYS_InterruptHigh:
  4516                           	opt stack 0
  4517                           tblptru	equ	0xFF8
  4518                           tblptrh	equ	0xFF7
  4519                           tblptrl	equ	0xFF6
  4520                           tablat	equ	0xFF5
  4521                           prodh	equ	0xFF4
  4522                           prodl	equ	0xFF3
  4523                           intcon	equ	0xFF2
  4524                           postinc0	equ	0xFEE
  4525                           wreg	equ	0xFE8
  4526                           indf1	equ	0xFE7
  4527                           postdec1	equ	0xFE5
  4528                           fsr1h	equ	0xFE2
  4529                           fsr1l	equ	0xFE1
  4530                           indf2	equ	0xFDF
  4531                           postinc2	equ	0xFDE
  4532                           postdec2	equ	0xFDD
  4533                           plusw2	equ	0xFDB
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           status	equ	0xFD8
  4537                           
  4538 ;; *************** function _USBDeviceTasks *****************
  4539 ;; Defined at:
  4540 ;;		line 477 in file "picLibs/usb_device.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  i               1   29[COMRAM] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4554 ;;      Params:         0       0       0       0       0
  4555 ;;      Locals:         1       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0
  4557 ;;      Totals:         1       0       0       0       0
  4558 ;;Total ram usage:        1 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    8
  4561 ;; This function calls:
  4562 ;;		_USBCtrlEPAllowStatusStage
  4563 ;;		_USBCtrlEPService
  4564 ;;		_USBIncrement1msInternalTimers
  4565 ;;		_USBStallHandler
  4566 ;;		_USBSuspend
  4567 ;;		_USBWakeFromSuspend
  4568 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4569 ;;		i2_USBDeviceInit
  4570 ;; This function is called by:
  4571 ;;		_SYS_InterruptHigh
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text23
  4576  0006F8                     __ptext23:
  4577                           	opt stack 0
  4578  0006F8                     _USBDeviceTasks:
  4579                           	opt stack 17
  4580                           
  4581                           ;usb_device.c: 479: uint8_t i;
  4582                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4583                           
  4584                           ;incstack = 0
  4585  0006F8  0100               	movlb	0	; () banked
  4586  0006FA  0581               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4587  0006FC  E107               	bnz	i2l4348
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;usb_device.c: 591: {
  4591                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4592  0006FE  BA64               	btfsc	3940,5,c	;volatile
  4593  000700  D005               	goto	i2l4348
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;usb_device.c: 602: {
  4597                           ;usb_device.c: 608: {UIR = 0;};
  4598  000702  6A62               	clrf	3938,c	;volatile
  4599                           
  4600                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4601  000704  8060               	bsf	3936,0,c	;volatile
  4602                           
  4603                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4604  000706  8860               	bsf	3936,4,c	;volatile
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4608  000708  0E02               	movlw	2
  4609  00070A  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4610  00070C                     i2l4348:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;usb_device.c: 617: }
  4614                           ;usb_device.c: 618: }
  4615                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4616  00070C  B462               	btfsc	3938,2,c	;volatile
  4617                           
  4618                           ; BSR set to: 0
  4619  00070E  A460               	btfss	3936,2,c	;volatile
  4620  000710  D003               	goto	i2l4356
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;usb_device.c: 635: {
  4624                           ;usb_device.c: 636: (UIR &= 0xFB);
  4625  000712  9462               	bcf	3938,2,c	;volatile
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;usb_device.c: 640: USBWakeFromSuspend();
  4629  000714  EC03  F00D         	call	_USBWakeFromSuspend	;wreg free
  4630  000718                     i2l4356:
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;usb_device.c: 642: }
  4634                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4635  000718  A264               	btfss	3940,1,c	;volatile
  4636  00071A  D002               	goto	i2l404
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;usb_device.c: 648: {
  4640                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  4641  00071C  94A1               	bcf	4001,2,c	;volatile
  4642                           
  4643                           ;usb_device.c: 650: return;
  4644  00071E  0012               	return	
  4645  000720                     i2l404:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;usb_device.c: 651: }
  4649                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4650  000720  B062               	btfsc	3938,0,c	;volatile
  4651                           
  4652                           ; BSR set to: 0
  4653  000722  A060               	btfss	3936,0,c	;volatile
  4654  000724  D006               	goto	i2l4370
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;usb_device.c: 664: {
  4658                           ;usb_device.c: 665: USBDeviceInit();
  4659  000726  ECFC  F003         	call	i2_USBDeviceInit	;wreg free
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4663  00072A  84A0               	bsf	4000,2,c	;volatile
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4667  00072C  0E04               	movlw	4
  4668  00072E  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;usb_device.c: 681: (UIR &= 0xFE);
  4672  000730  9062               	bcf	3938,0,c	;volatile
  4673  000732                     i2l4370:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;usb_device.c: 682: }
  4677                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4678  000732  B862               	btfsc	3938,4,c	;volatile
  4679                           
  4680                           ; BSR set to: 0
  4681  000734  A860               	btfss	3936,4,c	;volatile
  4682  000736  D002               	goto	i2l4376
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;usb_device.c: 688: {
  4686                           ;usb_device.c: 694: USBSuspend();
  4687  000738  ECF2  F00C         	call	_USBSuspend	;wreg free
  4688  00073C                     i2l4376:
  4689                           
  4690                           ;usb_device.c: 696: }
  4691                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4692  00073C  AC62               	btfss	3938,6,c	;volatile
  4693  00073E  D013               	goto	i2l4394
  4694                           
  4695                           ;usb_device.c: 709: {
  4696                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4697  000740  AC60               	btfss	3936,6,c	;volatile
  4698  000742  D007               	goto	i2l4382
  4699                           
  4700                           ;usb_device.c: 712: {
  4701                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4702  000744  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4703  000746  0E73               	movlw	115
  4704  000748  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4705  00074A  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4706  00074C  D850               	call	PL92	;call to abstracted procedure
  4707  00074E  EC2A  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4708  000752                     i2l4382:
  4709                           
  4710                           ;usb_device.c: 714: }
  4711                           ;usb_device.c: 715: (UIR &= 0xBF);
  4712  000752  9C62               	bcf	3938,6,c	;volatile
  4713                           
  4714                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4715  000754  EC40  F00D         	call	_USBIncrement1msInternalTimers	;wreg free
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4719  000758  5021               	movf	_USBStatusStageTimeoutCounter,w,c
  4720  00075A  E001               	bz	i2l4390
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;usb_device.c: 736: {
  4724                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4725  00075C  0621               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  4726  00075E                     i2l4390:
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;usb_device.c: 738: }
  4730                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4731  00075E  5021               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4732  000760  E102               	bnz	i2l4394
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;usb_device.c: 745: {
  4736                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4737  000762  EC0F  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4738  000766                     i2l4394:
  4739                           
  4740                           ;usb_device.c: 747: }
  4741                           ;usb_device.c: 749: }
  4742                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4743  000766  BA62               	btfsc	3938,5,c	;volatile
  4744  000768  AA60               	btfss	3936,5,c	;volatile
  4745  00076A  D002               	goto	i2l4400
  4746                           
  4747                           ;usb_device.c: 752: {
  4748                           ;usb_device.c: 753: USBStallHandler();
  4749  00076C  EC3C  F00C         	call	_USBStallHandler	;wreg free
  4750  000770                     i2l4400:
  4751                           
  4752                           ;usb_device.c: 754: }
  4753                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4754  000770  B262               	btfsc	3938,1,c	;volatile
  4755  000772  A260               	btfss	3936,1,c	;volatile
  4756  000774  D009               	goto	i2l4408
  4757                           
  4758                           ;usb_device.c: 757: {
  4759                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4760  000776  0E7F               	movlw	127
  4761  000778  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4762  00077A  6836               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4763  00077C  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4764  00077E  D837               	call	PL92	;call to abstracted procedure
  4765  000780  EC2A  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4766                           
  4767                           ;usb_device.c: 759: {UEIR = 0;};
  4768  000784  010F               	movlb	15	; () banked
  4769  000786  6B5F               	clrf	95,b	;volatile
  4770  000788                     i2l4408:
  4771                           
  4772                           ;usb_device.c: 767: }
  4773                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4774  000788  0E04               	movlw	4
  4775  00078A  0100               	movlb	0	; () banked
  4776  00078C  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4777  00078E  D002               	goto	i2l414
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;usb_device.c: 775: {
  4781                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  4782  000790  94A1               	bcf	4001,2,c	;volatile
  4783                           
  4784                           ;usb_device.c: 777: return;
  4785  000792  0C04               	retlw	4
  4786  000794                     i2l414:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;usb_device.c: 778: }
  4790                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4791  000794  A660               	btfss	3936,3,c	;volatile
  4792  000796  D029               	goto	i2l415
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;usb_device.c: 784: {
  4796                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4797  000798  6A47               	clrf	USBDeviceTasks@i,c
  4798  00079A                     i2l416:
  4799                           
  4800                           ;usb_device.c: 786: {
  4801                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4802  00079A  A662               	btfss	3938,3,c	;volatile
  4803  00079C  D026               	goto	i2l415
  4804                           
  4805                           ;usb_device.c: 788: {
  4806                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4807  00079E  CF63 F028          	movff	3939,_USTATcopy	;volatile
  4808                           
  4809                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4810  0007A2  3028               	rrcf	_USTATcopy,w,c	;volatile
  4811  0007A4  32E8               	rrcf	wreg,f,c
  4812  0007A6  32E8               	rrcf	wreg,f,c
  4813  0007A8  0B0F               	andlw	15
  4814  0007AA  6E23               	movwf	_endpoint_number,c	;volatile
  4815                           
  4816                           ;usb_device.c: 793: (UIR &= 0xF7);
  4817  0007AC  9662               	bcf	3938,3,c	;volatile
  4818                           
  4819                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4820  0007AE  B428               	btfsc	_USTATcopy,2,c	;volatile
  4821  0007B0  D003               	goto	i2l4428
  4822                           
  4823                           ;usb_device.c: 799: {
  4824                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4825  0007B2  5023               	movf	_endpoint_number,w,c
  4826  0007B4  0F70               	addlw	low _ep_data_out
  4827  0007B6  D002               	goto	L5
  4828  0007B8                     i2l4428:
  4829                           
  4830                           ;usb_device.c: 802: else
  4831                           ;usb_device.c: 803: {
  4832                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4833  0007B8  5023               	movf	_endpoint_number,w,c
  4834  0007BA  0F73               	addlw	low _ep_data_in
  4835  0007BC                     L5:
  4836  0007BC  6ED9               	movwf	fsr2l,c
  4837  0007BE  6ADA               	clrf	fsr2h,c
  4838  0007C0  0100               	movlb	0	; () banked
  4839  0007C2  70DF               	btg	indf2,0,c
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;usb_device.c: 805: }
  4843                           ;usb_device.c: 810: if(endpoint_number == 0)
  4844  0007C4  5023               	movf	_endpoint_number,w,c	;volatile
  4845  0007C6  E103               	bnz	i2l4434
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;usb_device.c: 811: {
  4849                           ;usb_device.c: 812: USBCtrlEPService();
  4850  0007C8  EC83  F009         	call	_USBCtrlEPService	;wreg free
  4851                           
  4852                           ;usb_device.c: 813: }
  4853  0007CC  D00A               	goto	i2l4436
  4854  0007CE                     i2l4434:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;usb_device.c: 814: else
  4858                           ;usb_device.c: 815: {
  4859                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4860  0007CE  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4861  0007D0  0E72               	movlw	114
  4862  0007D2  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4863  0007D4  0E28               	movlw	low _USTATcopy
  4864  0007D6  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4865  0007D8  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4866  0007DA  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4867  0007DC  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4868  0007DE  EC2A  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4869  0007E2                     i2l4436:
  4870  0007E2  2A47               	incf	USBDeviceTasks@i,f,c
  4871  0007E4  0E03               	movlw	3
  4872  0007E6  6447               	cpfsgt	USBDeviceTasks@i,c
  4873  0007E8  D7D8               	goto	i2l416
  4874  0007EA                     i2l415:
  4875                           
  4876                           ;usb_device.c: 822: }
  4877                           ;usb_device.c: 823: }
  4878                           ;usb_device.c: 824: }
  4879                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  4880  0007EA  94A1               	bcf	4001,2,c	;volatile
  4881  0007EC  0012               	return		;funcret
  4882  0007EE                     __end_of_USBDeviceTasks:
  4883                           	opt stack 0
  4884  0007EE                     PL92:
  4885                           	opt stack 17
  4886  0007EE  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4887  0007F0  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4888  0007F2  0E01               	movlw	1
  4889  0007F4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4890  0007F6  0C01               	retlw	1
  4891  0007F8                     __end_ofPL92:
  4892                           	opt stack 0
  4893                           tblptru	equ	0xFF8
  4894                           tblptrh	equ	0xFF7
  4895                           tblptrl	equ	0xFF6
  4896                           tablat	equ	0xFF5
  4897                           prodh	equ	0xFF4
  4898                           prodl	equ	0xFF3
  4899                           intcon	equ	0xFF2
  4900                           postinc0	equ	0xFEE
  4901                           wreg	equ	0xFE8
  4902                           indf1	equ	0xFE7
  4903                           postdec1	equ	0xFE5
  4904                           fsr1h	equ	0xFE2
  4905                           fsr1l	equ	0xFE1
  4906                           indf2	equ	0xFDF
  4907                           postinc2	equ	0xFDE
  4908                           postdec2	equ	0xFDD
  4909                           plusw2	equ	0xFDB
  4910                           fsr2h	equ	0xFDA
  4911                           fsr2l	equ	0xFD9
  4912                           status	equ	0xFD8
  4913                           
  4914 ;; *************** function i2_USBDeviceInit *****************
  4915 ;; Defined at:
  4916 ;;		line 277 in file "picLibs/usb_device.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;		None
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      void 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 3F/0
  4927 ;;		On exit  : 3F/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4930 ;;      Params:         0       0       0       0       0
  4931 ;;      Locals:         1       0       0       0       0
  4932 ;;      Temps:          0       0       0       0       0
  4933 ;;      Totals:         1       0       0       0       0
  4934 ;;Total ram usage:        1 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    1
  4937 ;; This function calls:
  4938 ;;		i2_memset
  4939 ;; This function is called by:
  4940 ;;		_USBDeviceTasks
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text24
  4945  0007F8                     __ptext24:
  4946                           	opt stack 0
  4947  0007F8                     i2_USBDeviceInit:
  4948                           	opt stack 0
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;usb_device.c: 279: uint8_t i;
  4952                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4953                           
  4954                           ;incstack = 0
  4955                           
  4956                           ;usb_device.c: 285: ;
  4957                           ;usb_device.c: 288: {UEIR = 0;};
  4958                           
  4959                           ;usb_device.c: 291: {UIR = 0;};
  4960                           
  4961                           ;usb_device.c: 294: UEP0 = 0;
  4962  0007F8  D85C               	call	PL80	;call to abstracted procedure
  4963                           
  4964                           ; BSR set to: 15
  4965                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  4966  0007FA  ECA8  F007         	call	PL52	;call to abstracted procedure
  4967  0007FE  ECDD  F00C         	call	i2_memset	;wreg free
  4968                           
  4969                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4970                           
  4971                           ; BSR set to: 15
  4972  000802  EC1A  F00C         	call	PL38	;call to abstracted procedure
  4973                           
  4974                           ; BSR set to: 15
  4975                           ;usb_device.c: 301: ;
  4976                           ;usb_device.c: 304: ;
  4977                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4978  000806  6A32               	clrf	i2USBDeviceInit@i,c
  4979  000808                     i2l4164:
  4980                           
  4981                           ;usb_device.c: 308: {
  4982                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4983  000808  5032               	movf	i2USBDeviceInit@i,w,c
  4984  00080A  D847               	call	PL42	;call to abstracted procedure
  4985  00080C  2A32               	incf	i2USBDeviceInit@i,f,c
  4986  00080E  0E0B               	movlw	11
  4987  000810  6432               	cpfsgt	i2USBDeviceInit@i,c
  4988  000812  D7FA               	goto	i2l4164
  4989                           
  4990                           ;usb_device.c: 310: }
  4991                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4992                           
  4993                           ;usb_device.c: 316: UADDR = 0x00;
  4994                           
  4995                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4996                           
  4997                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4998                           
  4999                           ;usb_device.c: 326: {
  5000                           ;usb_device.c: 327: (UIR &= 0xF7);
  5001                           
  5002                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5003                           
  5004                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5005                           
  5006                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5007                           
  5008                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5009                           
  5010                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5011                           
  5012                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5013                           
  5014                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5015                           
  5016                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5020  000814  D82E               	call	PL22	;call to abstracted procedure
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5024  000816  6A32               	clrf	i2USBDeviceInit@i,c
  5025  000818                     i2l4194:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;usb_device.c: 346: {
  5029                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5030  000818  5032               	movf	i2USBDeviceInit@i,w,c
  5031  00081A  ECE2  F005         	call	PL34	;call to abstracted procedure
  5032  00081E  6ADE               	clrf	postinc2,c
  5033  000820  6ADD               	clrf	postdec2,c
  5034                           
  5035                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5036  000822  5032               	movf	i2USBDeviceInit@i,w,c
  5037  000824  ECDC  F005         	call	PL30	;call to abstracted procedure
  5038  000828  6ADE               	clrf	postinc2,c
  5039  00082A  6ADD               	clrf	postdec2,c
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5043  00082C  5032               	movf	i2USBDeviceInit@i,w,c
  5044  00082E  D84C               	call	PL94	;call to abstracted procedure
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5048  000830  5032               	movf	i2USBDeviceInit@i,w,c
  5049  000832  D845               	call	PL86	;call to abstracted procedure
  5050                           
  5051                           ; BSR set to: 0
  5052  000834  2A32               	incf	i2USBDeviceInit@i,f,c
  5053                           
  5054                           ; BSR set to: 0
  5055  000836  0E02               	movlw	2
  5056  000838  6432               	cpfsgt	i2USBDeviceInit@i,c
  5057  00083A  D7EE               	goto	i2l4194
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;usb_device.c: 351: }
  5061                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5062  00083C  0E08               	movlw	8
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5066                           
  5067                           ; BSR set to: 15
  5068                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  5069                           
  5070                           ; BSR set to: 2
  5071                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5072                           
  5073                           ; BSR set to: 2
  5074                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5075                           
  5076                           ; BSR set to: 2
  5077                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5078                           
  5079                           ; BSR set to: 2
  5080                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5081                           
  5082                           ; BSR set to: 2
  5083                           ;usb_device.c: 366: USB1msTickCount = 0;
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5090                           
  5091                           ; BSR set to: 0
  5092  00083E  D000               	goto	PL18	;call to abstracted procedure
  5093  000840                     __end_ofi2_USBDeviceInit:
  5094                           	opt stack 0
  5095  000840                     PL18:
  5096                           	opt stack 19
  5097  000840  6E0F               	movwf	_pBDTEntryIn,c
  5098  000842  0E02               	movlw	2
  5099  000844  6E10               	movwf	_pBDTEntryIn+1,c
  5100  000846  0E16               	movlw	22
  5101  000848  010F               	movlb	15	; () banked
  5102  00084A  6F53               	movwf	83,b	;volatile
  5103  00084C  0E02               	movlw	2
  5104  00084E  0102               	movlb	2	; () banked
  5105  000850  6F03               	movwf	3,b	;volatile
  5106  000852  0E30               	movlw	48
  5107  000854  6F02               	movwf	2,b	;volatile
  5108  000856  0E08               	movlw	8
  5109  000858  6F01               	movwf	1,b	;volatile
  5110  00085A  0E04               	movlw	4
  5111  00085C  6F00               	movwf	0,b	;volatile
  5112  00085E  8F00               	bsf	0,7,b	;volatile
  5113  000860  6A29               	clrf	_USBActiveConfiguration,c	;volatile
  5114  000862  0100               	movlb	0	; () banked
  5115  000864  6B66               	clrf	_USB1msTickCount& (0+255),b	;volatile
  5116  000866  6B67               	clrf	(_USB1msTickCount+1)& (0+255),b	;volatile
  5117  000868  6B68               	clrf	(_USB1msTickCount+2)& (0+255),b	;volatile
  5118  00086A  6B69               	clrf	(_USB1msTickCount+3)& (0+255),b	;volatile
  5119  00086C  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5120  00086E  6B81               	clrf	_USBDeviceState& (0+255),b	;volatile
  5121  000870  0012               	return		;funcret
  5122  000872                     __end_ofPL18:
  5123                           	opt stack 0
  5124  000872                     PL22:
  5125                           	opt stack 19
  5126  000872  8C64               	bsf	3940,6,c	;volatile
  5127  000874  010F               	movlb	15	; () banked
  5128  000876  6B5C               	clrf	92,b	;volatile
  5129  000878  9864               	bcf	3940,4,c	;volatile
  5130  00087A  9C64               	bcf	3940,6,c	;volatile
  5131  00087C                     l5082:
  5132  00087C  9662               	bcf	3938,3,c	;volatile
  5133  00087E  6A0C               	clrf	_inPipes+3,c	;volatile
  5134  000880  6A04               	clrf	_outPipes+3,c	;volatile
  5135  000882  6A05               	clrf	_outPipes+4,c	;volatile
  5136  000884  6A06               	clrf	_outPipes+5,c	;volatile
  5137  000886  B662               	btfsc	3938,3,c	;volatile
  5138  000888  D7F9               	goto	l5082
  5139  00088A  0E01               	movlw	1
  5140  00088C  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5141  00088E  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5142  000890  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5143  000892  0100               	movlb	0	; () banked
  5144  000894  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5145  000896  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5146  000898  0012               	return	
  5147  00089A                     __end_ofPL22:
  5148                           	opt stack 0
  5149  00089A                     PL42:
  5150                           	opt stack 19
  5151  00089A  0D04               	mullw	4
  5152  00089C  0E00               	movlw	0
  5153  00089E  24F3               	addwf	prodl,w,c
  5154  0008A0  6ED9               	movwf	fsr2l,c
  5155  0008A2  0E02               	movlw	2
  5156  0008A4  20F4               	addwfc	prodh,w,c
  5157  0008A6  6EDA               	movwf	fsr2h,c
  5158  0008A8  6ADE               	clrf	postinc2,c
  5159  0008AA  6ADE               	clrf	postinc2,c
  5160  0008AC  6ADE               	clrf	postinc2,c
  5161  0008AE  6ADD               	clrf	postdec2,c
  5162  0008B0  0012               	return	
  5163  0008B2                     __end_ofPL42:
  5164                           	opt stack 0
  5165  0008B2                     PL80:
  5166                           	opt stack 19
  5167  0008B2  94A0               	bcf	4000,2,c	;volatile
  5168  0008B4  010F               	movlb	15	; () banked
  5169  0008B6  6B5F               	clrf	95,b	;volatile
  5170  0008B8  6A62               	clrf	3938,c	;volatile
  5171  0008BA  6B53               	clrf	83,b	;volatile
  5172  0008BC  0012               	return	
  5173  0008BE                     __end_ofPL80:
  5174                           	opt stack 0
  5175  0008BE                     PL86:
  5176                           	opt stack 19
  5177  0008BE  0F70               	addlw	low _ep_data_out
  5178  0008C0  6ED9               	movwf	fsr2l,c
  5179  0008C2  6ADA               	clrf	fsr2h,c
  5180  0008C4  6ADF               	clrf	indf2,c
  5181  0008C6  0012               	return	
  5182  0008C8                     __end_ofPL86:
  5183                           	opt stack 0
  5184  0008C8                     PL94:
  5185                           	opt stack 19
  5186  0008C8  0F73               	addlw	low _ep_data_in
  5187  0008CA  6ED9               	movwf	fsr2l,c
  5188  0008CC  6ADA               	clrf	fsr2h,c
  5189  0008CE  6ADF               	clrf	indf2,c
  5190  0008D0  0012               	return	
  5191  0008D2                     __end_ofPL94:
  5192                           	opt stack 0
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           prodh	equ	0xFF4
  5198                           prodl	equ	0xFF3
  5199                           intcon	equ	0xFF2
  5200                           postinc0	equ	0xFEE
  5201                           wreg	equ	0xFE8
  5202                           indf1	equ	0xFE7
  5203                           postdec1	equ	0xFE5
  5204                           fsr1h	equ	0xFE2
  5205                           fsr1l	equ	0xFE1
  5206                           indf2	equ	0xFDF
  5207                           postinc2	equ	0xFDE
  5208                           postdec2	equ	0xFDD
  5209                           plusw2	equ	0xFDB
  5210                           fsr2h	equ	0xFDA
  5211                           fsr2l	equ	0xFD9
  5212                           status	equ	0xFD8
  5213                           
  5214 ;; *************** function _USBWakeFromSuspend *****************
  5215 ;; Defined at:
  5216 ;;		line 2303 in file "picLibs/usb_device.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;		None
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;		None
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 3F/0
  5227 ;;		On exit  : 3F/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5230 ;;      Params:         0       0       0       0       0
  5231 ;;      Locals:         0       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0
  5233 ;;      Totals:         0       0       0       0       0
  5234 ;;Total ram usage:        0 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    4
  5237 ;; This function calls:
  5238 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5239 ;; This function is called by:
  5240 ;;		_USBDeviceTasks
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text25
  5245  001A06                     __ptext25:
  5246                           	opt stack 0
  5247  001A06                     _USBWakeFromSuspend:
  5248                           	opt stack 20
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;incstack = 0
  5255  001A06  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5259  001A08  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5260  001A0A  0E74               	movlw	116
  5261  001A0C  ECFD  F00C         	call	PL44	;call to abstracted procedure
  5262  001A10  EC2A  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5263                           
  5264                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5265  001A14  9264               	bcf	3940,1,c	;volatile
  5266                           
  5267                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5268  001A16  9460               	bcf	3936,2,c	;volatile
  5269                           
  5270                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5271  001A18  D001               	goto	i2l4090
  5272  001A1A                     i2l4088:
  5273                           
  5274                           ;usb_device.c: 2343: {
  5275                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5276  001A1A  9462               	bcf	3938,2,c	;volatile
  5277  001A1C                     i2l4090:
  5278  001A1C  B462               	btfsc	3938,2,c	;volatile
  5279  001A1E  D7FD               	goto	i2l4088
  5280                           
  5281                           ;usb_device.c: 2345: }
  5282                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5283  001A20  0100               	movlb	0	; () banked
  5284  001A22  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5285                           
  5286                           ; BSR set to: 0
  5287  001A24  0012               	return		;funcret
  5288  001A26                     __end_of_USBWakeFromSuspend:
  5289                           	opt stack 0
  5290                           tblptru	equ	0xFF8
  5291                           tblptrh	equ	0xFF7
  5292                           tblptrl	equ	0xFF6
  5293                           tablat	equ	0xFF5
  5294                           prodh	equ	0xFF4
  5295                           prodl	equ	0xFF3
  5296                           intcon	equ	0xFF2
  5297                           postinc0	equ	0xFEE
  5298                           wreg	equ	0xFE8
  5299                           indf1	equ	0xFE7
  5300                           postdec1	equ	0xFE5
  5301                           fsr1h	equ	0xFE2
  5302                           fsr1l	equ	0xFE1
  5303                           indf2	equ	0xFDF
  5304                           postinc2	equ	0xFDE
  5305                           postdec2	equ	0xFDD
  5306                           plusw2	equ	0xFDB
  5307                           fsr2h	equ	0xFDA
  5308                           fsr2l	equ	0xFD9
  5309                           status	equ	0xFD8
  5310                           
  5311 ;; *************** function _USBSuspend *****************
  5312 ;; Defined at:
  5313 ;;		line 2245 in file "picLibs/usb_device.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 3F/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5327 ;;      Params:         0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0
  5330 ;;      Totals:         0       0       0       0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    4
  5334 ;; This function calls:
  5335 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5336 ;; This function is called by:
  5337 ;;		_USBDeviceTasks
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text26
  5342  0019E4                     __ptext26:
  5343                           	opt stack 0
  5344  0019E4                     _USBSuspend:
  5345                           	opt stack 20
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;incstack = 0
  5352  0019E4  8460               	bsf	3936,2,c	;volatile
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5356  0019E6  9862               	bcf	3938,4,c	;volatile
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5360  0019E8  8264               	bsf	3940,1,c	;volatile
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5364  0019EA  0E01               	movlw	1
  5365  0019EC  6E24               	movwf	_USBBusIsSuspended,c	;volatile
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5369  0019EE  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5373  0019F0  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5374  0019F2  0E75               	movlw	117
  5375  0019F4  D802               	call	PL44	;call to abstracted procedure
  5376  0019F6  EF2A  F00A         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5377  0019FA                     __end_of_USBSuspend:
  5378                           	opt stack 0
  5379  0019FA                     PL44:
  5380                           	opt stack 20
  5381  0019FA  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5382  0019FC  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5383  0019FE  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5384  001A00  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5385  001A02  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5386  001A04  0012               	return	
  5387  001A06                     __end_ofPL44:
  5388                           	opt stack 0
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           prodh	equ	0xFF4
  5394                           prodl	equ	0xFF3
  5395                           intcon	equ	0xFF2
  5396                           postinc0	equ	0xFEE
  5397                           wreg	equ	0xFE8
  5398                           indf1	equ	0xFE7
  5399                           postdec1	equ	0xFE5
  5400                           fsr1h	equ	0xFE2
  5401                           fsr1l	equ	0xFE1
  5402                           indf2	equ	0xFDF
  5403                           postinc2	equ	0xFDE
  5404                           postdec2	equ	0xFDD
  5405                           plusw2	equ	0xFDB
  5406                           fsr2h	equ	0xFDA
  5407                           fsr2l	equ	0xFD9
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function _USBStallHandler *****************
  5411 ;; Defined at:
  5412 ;;		line 2202 in file "picLibs/usb_device.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;		None
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 3F/F
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5426 ;;      Params:         0       0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0
  5428 ;;      Temps:          1       0       0       0       0
  5429 ;;      Totals:         1       0       0       0       0
  5430 ;;Total ram usage:        1 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; This function calls:
  5433 ;;		Nothing
  5434 ;; This function is called by:
  5435 ;;		_USBDeviceTasks
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text27
  5440  001878                     __ptext27:
  5441                           	opt stack 0
  5442  001878                     _USBStallHandler:
  5443                           	opt stack 24
  5444                           
  5445                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5446                           
  5447                           ;incstack = 0
  5448  001878  010F               	movlb	15	; () banked
  5449  00187A  A153               	btfss	83,0,b	;volatile
  5450  00187C  D010               	goto	i2l554
  5451                           
  5452                           ; BSR set to: 15
  5453                           ;usb_device.c: 2215: {
  5454                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5455  00187E  D811               	call	PL36	;call to abstracted procedure
  5456  001880  0E80               	movlw	128
  5457  001882  18DE               	xorwf	postinc2,w,c
  5458  001884  E10B               	bnz	i2l4124
  5459                           
  5460                           ; BSR set to: 15
  5461  001886  EC81  F008         	call	PL20	;call to abstracted procedure
  5462  00188A  0E84               	movlw	132
  5463  00188C  18DE               	xorwf	postinc2,w,c
  5464  00188E  E106               	bnz	i2l4124
  5465                           
  5466                           ; BSR set to: 15
  5467                           ;usb_device.c: 2218: {
  5468                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5469  001890  D808               	call	PL36	;call to abstracted procedure
  5470  001892  0E0C               	movlw	12
  5471  001894  6EDF               	movwf	indf2,c
  5472                           
  5473                           ; BSR set to: 15
  5474                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5475  001896  D805               	call	PL36	;call to abstracted procedure
  5476  001898  0E00               	movlw	0
  5477  00189A  8EDB               	bsf	plusw2,7,c
  5478  00189C                     i2l4124:
  5479                           
  5480                           ; BSR set to: 15
  5481                           ;usb_device.c: 2222: }
  5482                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5483  00189C  9153               	bcf	83,0,b	;volatile
  5484  00189E                     i2l554:
  5485                           
  5486                           ; BSR set to: 15
  5487                           ;usb_device.c: 2224: }
  5488                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5489  00189E  9A62               	bcf	3938,5,c	;volatile
  5490                           
  5491                           ; BSR set to: 15
  5492  0018A0  0012               	return		;funcret
  5493  0018A2                     __end_of_USBStallHandler:
  5494                           	opt stack 0
  5495  0018A2                     PL36:
  5496                           	opt stack 24
  5497  0018A2  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5498  0018A6  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5499  0018AA  0012               	return	
  5500  0018AC                     __end_ofPL36:
  5501                           	opt stack 0
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           prodh	equ	0xFF4
  5507                           prodl	equ	0xFF3
  5508                           intcon	equ	0xFF2
  5509                           postinc0	equ	0xFEE
  5510                           wreg	equ	0xFE8
  5511                           indf1	equ	0xFE7
  5512                           postdec1	equ	0xFE5
  5513                           fsr1h	equ	0xFE2
  5514                           fsr1l	equ	0xFE1
  5515                           indf2	equ	0xFDF
  5516                           postinc2	equ	0xFDE
  5517                           postdec2	equ	0xFDD
  5518                           plusw2	equ	0xFDB
  5519                           fsr2h	equ	0xFDA
  5520                           fsr2l	equ	0xFD9
  5521                           status	equ	0xFD8
  5522                           
  5523 ;; *************** function _USBIncrement1msInternalTimers *****************
  5524 ;; Defined at:
  5525 ;;		line 3025 in file "picLibs/usb_device.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 3F/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5539 ;;      Params:         0       0       0       0       0
  5540 ;;      Locals:         0       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0
  5542 ;;      Totals:         0       0       0       0       0
  5543 ;;Total ram usage:        0 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_USBDeviceTasks
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text28
  5553  001A80                     __ptext28:
  5554                           	opt stack 0
  5555  001A80                     _USBIncrement1msInternalTimers:
  5556                           	opt stack 24
  5557                           
  5558                           ;usb_device.c: 3033: USB1msTickCount++;
  5559                           
  5560                           ; BSR set to: 15
  5561                           ;incstack = 0
  5562  001A80  0100               	movlb	0	; () banked
  5563  001A82  2B66               	incf	_USB1msTickCount& (0+255),f,b	;volatile
  5564  001A84  0E00               	movlw	0
  5565  001A86  2367               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  5566  001A88  2368               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  5567  001A8A  2369               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5571  001A8C  5024               	movf	_USBBusIsSuspended,w,c	;volatile
  5572  001A8E  A4D8               	btfss	status,2,c
  5573  001A90  0012               	return	
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;usb_device.c: 3035: {
  5577                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5578  001A92  2B7D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5582  001A94  517D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  5583  001A96  B4D8               	btfsc	status,2,c
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;usb_device.c: 3039: {
  5587                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5588  001A98  697D               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5589                           
  5590                           ; BSR set to: 0
  5591  001A9A  0012               	return		;funcret
  5592  001A9C                     __end_of_USBIncrement1msInternalTimers:
  5593                           	opt stack 0
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           intcon	equ	0xFF2
  5601                           postinc0	equ	0xFEE
  5602                           wreg	equ	0xFE8
  5603                           indf1	equ	0xFE7
  5604                           postdec1	equ	0xFE5
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           plusw2	equ	0xFDB
  5611                           fsr2h	equ	0xFDA
  5612                           fsr2l	equ	0xFD9
  5613                           status	equ	0xFD8
  5614                           
  5615 ;; *************** function _USBCtrlEPService *****************
  5616 ;; Defined at:
  5617 ;;		line 2372 in file "picLibs/usb_device.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 3F/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5631 ;;      Params:         0       0       0       0       0
  5632 ;;      Locals:         0       0       0       0       0
  5633 ;;      Temps:          1       0       0       0       0
  5634 ;;      Totals:         1       0       0       0       0
  5635 ;;Total ram usage:        1 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    7
  5638 ;; This function calls:
  5639 ;;		_USBCtrlTrfInHandler
  5640 ;;		_USBCtrlTrfOutHandler
  5641 ;;		_USBCtrlTrfSetupHandler
  5642 ;;		_memcpy
  5643 ;; This function is called by:
  5644 ;;		_USBDeviceTasks
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text29
  5649  001306                     __ptext29:
  5650                           	opt stack 0
  5651  001306                     _USBCtrlEPService:
  5652                           	opt stack 17
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;incstack = 0
  5659  001306  0E2D               	movlw	45
  5660  001308  6E21               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5664  00130A  C028  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5665  00130E  0EFD               	movlw	253
  5666  001310  1646               	andwf	??_USBCtrlEPService,f,c
  5667  001312  E12A               	bnz	i2l4144
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;usb_device.c: 2383: {
  5671                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5672  001314  90D8               	bcf	status,0,c
  5673  001316  3028               	rrcf	_USTATcopy,w,c	;volatile
  5674  001318  0B3F               	andlw	63
  5675  00131A  0D04               	mullw	4
  5676  00131C  0E00               	movlw	0
  5677  00131E  24F3               	addwf	prodl,w,c
  5678  001320  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  5679  001322  0E02               	movlw	2
  5680  001324  20F4               	addwfc	prodh,w,c
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5684  001326  ECB2  F007         	call	PL96	;call to abstracted procedure
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5688  00132A  0E04               	movlw	4
  5689  00132C  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
  5690  00132E  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5694  001330  EC51  F00C         	call	PL36	;call to abstracted procedure
  5695  001334  30DF               	rrcf	indf2,w,c
  5696  001336  32E8               	rrcf	wreg,f,c
  5697  001338  0B0F               	andlw	15
  5698  00133A  0A0D               	xorlw	13
  5699  00133C  E002 EF13  F00D    	bnz	_USBCtrlTrfOutHandler
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;usb_device.c: 2400: {
  5703                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  5704  001342  0E30               	movlw	48
  5705  001344  6E2A               	movwf	memcpy@d1,c
  5706  001346  0E02               	movlw	2
  5707  001348  6E2B               	movwf	memcpy@d1+1,c
  5708  00134A  EE20 F002          	lfsr	2,2
  5709  00134E  EC41  F009         	call	PL66	;call to abstracted procedure
  5710  001352  CFDE F02C          	movff	postinc2,memcpy@s1
  5711  001356  CFDD F02D          	movff	postdec2,memcpy@s1+1
  5712  00135A  6A2F               	clrf	memcpy@n+1,c
  5713  00135C  0E08               	movlw	8
  5714  00135E  6E2E               	movwf	memcpy@n,c
  5715  001360  ECAD  F00B         	call	_memcpy	;wreg free
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5719  001364  EF64  F00B         	goto	_USBCtrlTrfSetupHandler	;wreg free
  5720  001368                     i2l4144:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5724  001368  5028               	movf	_USTATcopy,w,c	;volatile
  5725  00136A  0BFD               	andlw	253
  5726  00136C  0A04               	xorlw	4
  5727  00136E  B4D8               	btfsc	status,2,c
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;usb_device.c: 2417: {
  5731                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5732  001370  EC4C  F008         	call	_USBCtrlTrfInHandler	;wreg free
  5733  001374  0012               	return		;funcret
  5734  001376                     __end_of_USBCtrlEPService:
  5735                           	opt stack 0
  5736                           tblptru	equ	0xFF8
  5737                           tblptrh	equ	0xFF7
  5738                           tblptrl	equ	0xFF6
  5739                           tablat	equ	0xFF5
  5740                           prodh	equ	0xFF4
  5741                           prodl	equ	0xFF3
  5742                           intcon	equ	0xFF2
  5743                           postinc0	equ	0xFEE
  5744                           wreg	equ	0xFE8
  5745                           indf1	equ	0xFE7
  5746                           postdec1	equ	0xFE5
  5747                           fsr1h	equ	0xFE2
  5748                           fsr1l	equ	0xFE1
  5749                           indf2	equ	0xFDF
  5750                           postinc2	equ	0xFDE
  5751                           postdec2	equ	0xFDD
  5752                           plusw2	equ	0xFDB
  5753                           fsr2h	equ	0xFDA
  5754                           fsr2l	equ	0xFD9
  5755                           status	equ	0xFD8
  5756                           
  5757 ;; *************** function _memcpy *****************
  5758 ;; Defined at:
  5759 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  d1              2    0[COMRAM] PTR void 
  5762 ;;		 -> SetupPkt(8), 
  5763 ;;  s1              2    2[COMRAM] PTR const void 
  5764 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5765 ;;  n               2    4[COMRAM] unsigned int 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5768 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5769 ;;  d               2    6[COMRAM] PTR unsigned char 
  5770 ;;		 -> SetupPkt(8), 
  5771 ;;  tmp             1   10[COMRAM] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  2    0[COMRAM] PTR void 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 3F/0
  5778 ;;		On exit  : 3F/0
  5779 ;;		Unchanged: 3F/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5781 ;;      Params:         6       0       0       0       0
  5782 ;;      Locals:         5       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0
  5784 ;;      Totals:        11       0       0       0       0
  5785 ;;Total ram usage:       11 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_USBCtrlEPService
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text30
  5795  00175A                     __ptext30:
  5796                           	opt stack 0
  5797  00175A                     _memcpy:
  5798                           	opt stack 23
  5799                           
  5800                           ; BSR set to: 0
  5801                           
  5802                           ;incstack = 0
  5803  00175A  C02C  F032         	movff	memcpy@s1,memcpy@s
  5804  00175E  C02D  F033         	movff	memcpy@s1+1,memcpy@s+1
  5805  001762  C02A  F030         	movff	memcpy@d1,memcpy@d
  5806  001766  C02B  F031         	movff	memcpy@d1+1,memcpy@d+1
  5807  00176A  D010               	goto	i2l3738
  5808  00176C                     i2l3730:
  5809                           
  5810                           ; BSR set to: 0
  5811  00176C  C032  FFD9         	movff	memcpy@s,fsr2l
  5812  001770  C033  FFDA         	movff	memcpy@s+1,fsr2h
  5813  001774  50DF               	movf	indf2,w,c
  5814  001776  6E34               	movwf	memcpy@tmp,c
  5815                           
  5816                           ; BSR set to: 0
  5817  001778  4A32               	infsnz	memcpy@s,f,c
  5818  00177A  2A33               	incf	memcpy@s+1,f,c
  5819                           
  5820                           ; BSR set to: 0
  5821  00177C  C030  FFD9         	movff	memcpy@d,fsr2l
  5822  001780  C031  FFDA         	movff	memcpy@d+1,fsr2h
  5823  001784  C034  FFDF         	movff	memcpy@tmp,indf2
  5824                           
  5825                           ; BSR set to: 0
  5826  001788  4A30               	infsnz	memcpy@d,f,c
  5827  00178A  2A31               	incf	memcpy@d+1,f,c
  5828  00178C                     i2l3738:
  5829                           
  5830                           ; BSR set to: 0
  5831  00178C  062E               	decf	memcpy@n,f,c
  5832  00178E  A0D8               	btfss	status,0,c
  5833  001790  062F               	decf	memcpy@n+1,f,c
  5834  001792  282E               	incf	memcpy@n,w,c
  5835  001794  E1EB               	bnz	i2l3730
  5836  001796  282F               	incf	memcpy@n+1,w,c
  5837  001798  E1E9               	bnz	i2l3730
  5838                           
  5839                           ; BSR set to: 0
  5840  00179A  0012               	return		;funcret
  5841  00179C                     __end_of_memcpy:
  5842                           	opt stack 0
  5843                           tblptru	equ	0xFF8
  5844                           tblptrh	equ	0xFF7
  5845                           tblptrl	equ	0xFF6
  5846                           tablat	equ	0xFF5
  5847                           prodh	equ	0xFF4
  5848                           prodl	equ	0xFF3
  5849                           intcon	equ	0xFF2
  5850                           postinc0	equ	0xFEE
  5851                           wreg	equ	0xFE8
  5852                           indf1	equ	0xFE7
  5853                           postdec1	equ	0xFE5
  5854                           fsr1h	equ	0xFE2
  5855                           fsr1l	equ	0xFE1
  5856                           indf2	equ	0xFDF
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           plusw2	equ	0xFDB
  5860                           fsr2h	equ	0xFDA
  5861                           fsr2l	equ	0xFD9
  5862                           status	equ	0xFD8
  5863                           
  5864 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5865 ;; Defined at:
  5866 ;;		line 2465 in file "picLibs/usb_device.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;		None
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 3F/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5880 ;;      Params:         0       0       0       0       0
  5881 ;;      Locals:         0       0       0       0       0
  5882 ;;      Temps:          0       0       0       0       0
  5883 ;;      Totals:         0       0       0       0       0
  5884 ;;Total ram usage:        0 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    6
  5887 ;; This function calls:
  5888 ;;		_USBCheckStdRequest
  5889 ;;		_USBCtrlEPServiceComplete
  5890 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5891 ;; This function is called by:
  5892 ;;		_USBCtrlEPService
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text31
  5897  0016C8                     __ptext31:
  5898                           	opt stack 0
  5899  0016C8                     _USBCtrlTrfSetupHandler:
  5900                           	opt stack 17
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;incstack = 0
  5907  0016C8  6A27               	clrf	_shortPacketStatus,c	;volatile
  5908                           
  5909                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5910  0016CA  6A20               	clrf	_USBDeferStatusStagePacket,c	;volatile
  5911                           
  5912                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5913  0016CC  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5914                           
  5915                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5916  0016CE  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5917                           
  5918                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5919  0016D0  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  5920                           
  5921                           ;usb_device.c: 2475: controlTransferState = 0;
  5922  0016D2  6A26               	clrf	_controlTransferState,c	;volatile
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5926  0016D4  EC81  F008         	call	PL20	;call to abstracted procedure
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5930  0016D8  D817               	call	PL98	;call to abstracted procedure
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5934  0016DA  EC81  F008         	call	PL20	;call to abstracted procedure
  5935                           
  5936                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5937  0016DE  D814               	call	PL98	;call to abstracted procedure
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5941  0016E0  EC4C  F006         	call	PL16	;call to abstracted procedure
  5942  0016E4  0E7F               	movlw	127
  5943  0016E6  16DF               	andwf	indf2,f,c
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5947  0016E8  6A0C               	clrf	_inPipes+3,c	;volatile
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5951  0016EA  6A0D               	clrf	_inPipes+4,c	;volatile
  5952  0016EC  6A0E               	clrf	_inPipes+5,c	;volatile
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5956  0016EE  6A04               	clrf	_outPipes+3,c	;volatile
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5960  0016F0  6A05               	clrf	_outPipes+4,c	;volatile
  5961  0016F2  6A06               	clrf	_outPipes+5,c	;volatile
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;usb_device.c: 2500: USBCheckStdRequest();
  5965  0016F4  EC04  F008         	call	_USBCheckStdRequest	;wreg free
  5966                           
  5967                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5968  0016F8  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5969  0016FA  0E03               	movlw	3
  5970  0016FC  ECFD  F00C         	call	PL44	;call to abstracted procedure
  5971  001700  EC2A  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5972                           
  5973                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5974  001704  EFB8  F007         	goto	_USBCtrlEPServiceComplete	;wreg free
  5975  001708                     __end_of_USBCtrlTrfSetupHandler:
  5976                           	opt stack 0
  5977  001708                     PL98:
  5978                           	opt stack 17
  5979  001708  0E7F               	movlw	127
  5980  00170A  16DF               	andwf	indf2,f,c
  5981  00170C  0E04               	movlw	4
  5982  00170E  1A0F               	xorwf	_pBDTEntryIn,f,c
  5983  001710  5010               	movf	_pBDTEntryIn+1,w,c
  5984  001712  0012               	return	
  5985  001714                     __end_ofPL98:
  5986                           	opt stack 0
  5987                           tblptru	equ	0xFF8
  5988                           tblptrh	equ	0xFF7
  5989                           tblptrl	equ	0xFF6
  5990                           tablat	equ	0xFF5
  5991                           prodh	equ	0xFF4
  5992                           prodl	equ	0xFF3
  5993                           intcon	equ	0xFF2
  5994                           postinc0	equ	0xFEE
  5995                           wreg	equ	0xFE8
  5996                           indf1	equ	0xFE7
  5997                           postdec1	equ	0xFE5
  5998                           fsr1h	equ	0xFE2
  5999                           fsr1l	equ	0xFE1
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           postdec2	equ	0xFDD
  6003                           plusw2	equ	0xFDB
  6004                           fsr2h	equ	0xFDA
  6005                           fsr2l	equ	0xFD9
  6006                           status	equ	0xFD8
  6007                           
  6008 ;; *************** function _USBCtrlEPServiceComplete *****************
  6009 ;; Defined at:
  6010 ;;		line 1616 in file "picLibs/usb_device.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6024 ;;      Params:         0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0
  6026 ;;      Temps:          0       0       0       0       0
  6027 ;;      Totals:         0       0       0       0       0
  6028 ;;Total ram usage:        0 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    2
  6031 ;; This function calls:
  6032 ;;		_USBCtrlEPAllowDataStage
  6033 ;;		_USBCtrlEPAllowStatusStage
  6034 ;; This function is called by:
  6035 ;;		_USBCtrlTrfSetupHandler
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text32
  6040  000F70                     __ptext32:
  6041                           	opt stack 0
  6042  000F70                     _USBCtrlEPServiceComplete:
  6043                           	opt stack 20
  6044                           
  6045                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6046                           
  6047                           ;incstack = 0
  6048  000F70  9864               	bcf	3940,4,c	;volatile
  6049                           
  6050                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6051  000F72  BE0C               	btfsc	_inPipes+3,7,c	;volatile
  6052  000F74  D015               	goto	i2l478
  6053                           
  6054                           ;usb_device.c: 1629: {
  6055                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6056  000F76  AE04               	btfss	_outPipes+3,7,c	;volatile
  6057  000F78  D00A               	goto	i2l3538
  6058                           
  6059                           ;usb_device.c: 1631: {
  6060                           ;usb_device.c: 1632: controlTransferState = 2;
  6061  000F7A  0E02               	movlw	2
  6062  000F7C  6E26               	movwf	_controlTransferState,c	;volatile
  6063                           
  6064                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6065  000F7E  0100               	movlb	0	; () banked
  6066  000F80  517E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  6067  000F82  E102               	bnz	i2l3534
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;usb_device.c: 1644: {
  6071                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6072  000F84  ECC1  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  6073  000F88                     i2l3534:
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;usb_device.c: 1646: }
  6077                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6078  000F88  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6082  000F8A  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6083                           
  6084                           ;usb_device.c: 1652: }
  6085  000F8C  0012               	return	
  6086  000F8E                     i2l3538:
  6087                           
  6088                           ;usb_device.c: 1653: else
  6089                           ;usb_device.c: 1654: {
  6090                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6091                           
  6092                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6093                           
  6094                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6095  000F8E  D825               	call	PL2	;call to abstracted procedure
  6096  000F90  0E0C               	movlw	12
  6097                           
  6098                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6099  000F92  EC44  F006         	call	PL14	;call to abstracted procedure
  6100                           
  6101                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6102  000F96  EC81  F008         	call	PL20	;call to abstracted procedure
  6103  000F9A  0E04               	movlw	4
  6104                           
  6105                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6106  000F9C  EF79  F008         	goto	PL12	;call to abstracted procedure
  6107  000FA0                     i2l478:
  6108                           
  6109                           ;usb_device.c: 1667: else
  6110                           ;usb_device.c: 1668: {
  6111                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6112  000FA0  0102               	movlb	2	; () banked
  6113  000FA2  AF30               	btfss	48,7,b	;volatile
  6114  000FA4  D00D               	goto	i2l3558
  6115                           
  6116                           ; BSR set to: 2
  6117                           ;usb_device.c: 1670: {
  6118                           ;usb_device.c: 1671: controlTransferState = 1;
  6119  000FA6  0E01               	movlw	1
  6120  000FA8  6E26               	movwf	_controlTransferState,c	;volatile
  6121                           
  6122                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6123  000FAA  501D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  6124  000FAC  E102               	bnz	i2l3550
  6125                           
  6126                           ; BSR set to: 2
  6127                           ;usb_device.c: 1686: {
  6128                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6129  000FAE  ECC1  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  6130  000FB2                     i2l3550:
  6131                           
  6132                           ;usb_device.c: 1688: }
  6133                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6134  000FB2  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6135                           
  6136                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6137  000FB4  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6138                           
  6139                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6140  000FB6  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6141  000FB8  A4D8               	btfss	status,2,c
  6142  000FBA  0012               	return	
  6143                           
  6144                           ;usb_device.c: 1713: {
  6145                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6146  000FBC  EF0F  F009         	goto	_USBCtrlEPAllowStatusStage	;wreg free
  6147  000FC0                     i2l3558:
  6148                           
  6149                           ; BSR set to: 2
  6150                           ;usb_device.c: 1717: else
  6151                           ;usb_device.c: 1718: {
  6152                           ;usb_device.c: 1729: controlTransferState = 2;
  6153  000FC0  0E02               	movlw	2
  6154  000FC2  6E26               	movwf	_controlTransferState,c	;volatile
  6155                           
  6156                           ; BSR set to: 2
  6157                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6158                           
  6159                           ; BSR set to: 2
  6160                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6161                           
  6162                           ; BSR set to: 2
  6163                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6164  000FC4  D80A               	call	PL2	;call to abstracted procedure
  6165  000FC6  0E04               	movlw	4
  6166                           
  6167                           ; BSR set to: 2
  6168                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6169  000FC8  EC44  F006         	call	PL14	;call to abstracted procedure
  6170                           
  6171                           ; BSR set to: 2
  6172                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6173  000FCC  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6174                           
  6175                           ; BSR set to: 2
  6176                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6177  000FCE  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6178                           
  6179                           ; BSR set to: 2
  6180                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6181  000FD0  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6182  000FD2  E102 EF0F  F009    	bz	_USBCtrlEPAllowStatusStage
  6183  000FD8  0012               	return	
  6184  000FDA                     __end_of_USBCtrlEPServiceComplete:
  6185                           	opt stack 0
  6186  000FDA                     PL2:
  6187                           	opt stack 20
  6188  000FDA  EE20 F001          	lfsr	2,1
  6189  000FDE  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6190  000FE0  26D9               	addwf	fsr2l,f,c
  6191  000FE2  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6192  000FE4  22DA               	addwfc	fsr2h,f,c
  6193  000FE6  0E08               	movlw	8
  6194  000FE8  6EDF               	movwf	indf2,c
  6195  000FEA  EE20 F002          	lfsr	2,2
  6196  000FEE  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6197  000FF0  26D9               	addwf	fsr2l,f,c
  6198  000FF2  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6199  000FF4  22DA               	addwfc	fsr2h,f,c
  6200  000FF6  0E30               	movlw	48
  6201  000FF8  6EDE               	movwf	postinc2,c
  6202  000FFA  0E02               	movlw	2
  6203  000FFC  6EDD               	movwf	postdec2,c
  6204  000FFE  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6205  001002  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6206  001006  0C02               	retlw	2
  6207  001008                     __end_ofPL2:
  6208                           	opt stack 0
  6209                           tblptru	equ	0xFF8
  6210                           tblptrh	equ	0xFF7
  6211                           tblptrl	equ	0xFF6
  6212                           tablat	equ	0xFF5
  6213                           prodh	equ	0xFF4
  6214                           prodl	equ	0xFF3
  6215                           intcon	equ	0xFF2
  6216                           postinc0	equ	0xFEE
  6217                           wreg	equ	0xFE8
  6218                           indf1	equ	0xFE7
  6219                           postdec1	equ	0xFE5
  6220                           fsr1h	equ	0xFE2
  6221                           fsr1l	equ	0xFE1
  6222                           indf2	equ	0xFDF
  6223                           postinc2	equ	0xFDE
  6224                           postdec2	equ	0xFDD
  6225                           plusw2	equ	0xFDB
  6226                           fsr2h	equ	0xFDA
  6227                           fsr2l	equ	0xFD9
  6228                           status	equ	0xFD8
  6229                           
  6230 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6231 ;; Defined at:
  6232 ;;		line 1488 in file "picLibs/usb_device.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  1    wreg      void 
  6239 ;; Registers used:
  6240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6241 ;; Tracked objects:
  6242 ;;		On entry : 3D/0
  6243 ;;		On exit  : 3F/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6246 ;;      Params:         0       0       0       0       0
  6247 ;;      Locals:         0       0       0       0       0
  6248 ;;      Temps:          0       0       0       0       0
  6249 ;;      Totals:         0       0       0       0       0
  6250 ;;Total ram usage:        0 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    1
  6253 ;; This function calls:
  6254 ;;		_USBCtrlTrfTxService
  6255 ;; This function is called by:
  6256 ;;		_USBCtrlEPServiceComplete
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text33
  6261  001582                     __ptext33:
  6262                           	opt stack 0
  6263  001582                     _USBCtrlEPAllowDataStage:
  6264                           	opt stack 20
  6265                           
  6266                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6267                           
  6268                           ;incstack = 0
  6269  001582  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6270                           
  6271                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6272  001584  0100               	movlb	0	; () banked
  6273  001586  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6277  001588  0E02               	movlw	2
  6278  00158A  1826               	xorwf	_controlTransferState,w,c	;volatile
  6279  00158C  E112               	bnz	i2l3336
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;usb_device.c: 1494: {
  6283                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6284  00158E  EE20 F001          	lfsr	2,1
  6285  001592  EC3A  F006         	call	PL4	;call to abstracted procedure
  6286                           
  6287                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  6288  001596  EC3F  F006         	call	PL6	;call to abstracted procedure
  6289  00159A  EC3A  F006         	call	PL4	;call to abstracted procedure
  6290  00159E  0E38               	movlw	56
  6291  0015A0  6EDE               	movwf	postinc2,c
  6292  0015A2  0E02               	movlw	2
  6293  0015A4  6EDD               	movwf	postdec2,c
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6297  0015A6  EC4C  F006         	call	PL16	;call to abstracted procedure
  6298  0015AA  0E48               	movlw	72
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6302  0015AC  EC44  F006         	call	PL14	;call to abstracted procedure
  6303                           
  6304                           ;usb_device.c: 1500: }
  6305  0015B0  0C00               	retlw	0
  6306  0015B2                     i2l3336:
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;usb_device.c: 1501: else
  6310                           ;usb_device.c: 1502: {
  6311                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6312  0015B2  500D               	movf	_inPipes+4,w,c	;volatile
  6313  0015B4  0102               	movlb	2	; () banked
  6314  0015B6  5D36               	subwf	54,w,b	;volatile
  6315  0015B8  500E               	movf	_inPipes+5,w,c	;volatile
  6316  0015BA  5937               	subwfb	55,w,b	;volatile
  6317  0015BC  E204               	bc	i2l3340
  6318                           
  6319                           ; BSR set to: 2
  6320                           ;usb_device.c: 1506: {
  6321                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6322  0015BE  C236 F00D          	movff	566,_inPipes+4	;volatile
  6323  0015C2  C237 F00E          	movff	567,_inPipes+5	;volatile
  6324  0015C6                     i2l3340:
  6325                           
  6326                           ; BSR set to: 2
  6327                           ;usb_device.c: 1508: }
  6328                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6329  0015C6  EC12  F007         	call	_USBCtrlTrfTxService	;wreg free
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  6333  0015CA  EC86  F008         	call	PL46	;call to abstracted procedure
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6337  0015CE  EC81  F008         	call	PL20	;call to abstracted procedure
  6338  0015D2  0E48               	movlw	72
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6342                           
  6343                           ; BSR set to: 0
  6344  0015D4  EF79  F008         	goto	PL12	;call to abstracted procedure
  6345  0015D8                     __end_of_USBCtrlEPAllowDataStage:
  6346                           	opt stack 0
  6347                           tblptru	equ	0xFF8
  6348                           tblptrh	equ	0xFF7
  6349                           tblptrl	equ	0xFF6
  6350                           tablat	equ	0xFF5
  6351                           prodh	equ	0xFF4
  6352                           prodl	equ	0xFF3
  6353                           intcon	equ	0xFF2
  6354                           postinc0	equ	0xFEE
  6355                           wreg	equ	0xFE8
  6356                           indf1	equ	0xFE7
  6357                           postdec1	equ	0xFE5
  6358                           fsr1h	equ	0xFE2
  6359                           fsr1l	equ	0xFE1
  6360                           indf2	equ	0xFDF
  6361                           postinc2	equ	0xFDE
  6362                           postdec2	equ	0xFDD
  6363                           plusw2	equ	0xFDB
  6364                           fsr2h	equ	0xFDA
  6365                           fsr2l	equ	0xFD9
  6366                           status	equ	0xFD8
  6367                           
  6368 ;; *************** function _USBCheckStdRequest *****************
  6369 ;; Defined at:
  6370 ;;		line 2686 in file "picLibs/usb_device.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;		None
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1    wreg      void 
  6377 ;; Registers used:
  6378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 3F/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6384 ;;      Params:         0       0       0       0       0
  6385 ;;      Locals:         0       0       0       0       0
  6386 ;;      Temps:          1       0       0       0       0
  6387 ;;      Totals:         1       0       0       0       0
  6388 ;;Total ram usage:        1 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    5
  6391 ;; This function calls:
  6392 ;;		_USBStdFeatureReqHandler
  6393 ;;		_USBStdGetDscHandler
  6394 ;;		_USBStdGetStatusHandler
  6395 ;;		_USBStdSetCfgHandler
  6396 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6397 ;; This function is called by:
  6398 ;;		_USBCtrlTrfSetupHandler
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text34
  6403  001008                     __ptext34:
  6404                           	opt stack 0
  6405  001008                     _USBCheckStdRequest:
  6406                           	opt stack 17
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;incstack = 0
  6413  001008  0102               	movlb	2	; () banked
  6414  00100A  3930               	swapf	48,w,b	;volatile
  6415  00100C  32E8               	rrcf	wreg,f,c
  6416  00100E  0B03               	andlw	3
  6417  001010  E01D               	bz	i2l3656
  6418  001012  0012               	return	
  6419  001014                     i2l603:
  6420                           
  6421                           ; BSR set to: 2
  6422                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6423  001014  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6424                           
  6425                           ; BSR set to: 2
  6426                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6427  001016  0E08               	movlw	8
  6428  001018  0100               	movlb	0	; () banked
  6429  00101A  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6430                           
  6431                           ;usb_device.c: 2696: break;
  6432  00101C  0C08               	retlw	8
  6433  00101E                     i2l3630:
  6434                           
  6435                           ; BSR set to: 2
  6436                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6437  00101E  0E29               	movlw	low _USBActiveConfiguration
  6438  001020  6E09               	movwf	_inPipes,c	;volatile
  6439                           
  6440                           ; BSR set to: 2
  6441                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6442                           
  6443                           ; BSR set to: 2
  6444                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6445                           
  6446                           ; BSR set to: 2
  6447                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6448                           
  6449                           ;usb_device.c: 2708: break;
  6450  001022  D034               	goto	PL74	;call to abstracted procedure
  6451  001024                     i2l3642:
  6452                           
  6453                           ; BSR set to: 2
  6454                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6455  001024  5134               	movf	52,w,b	;volatile
  6456  001026  0FAF               	addlw	low _USBAlternateInterface
  6457  001028  6E45               	movwf	??_USBCheckStdRequest& (0+255),c
  6458  00102A  C045  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  6459                           
  6460                           ; BSR set to: 2
  6461                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6462                           
  6463                           ; BSR set to: 2
  6464                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6465                           
  6466                           ; BSR set to: 2
  6467                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6468                           
  6469                           ;usb_device.c: 2721: break;
  6470  00102E  D02E               	goto	PL74	;call to abstracted procedure
  6471  001030                     i2l612:
  6472                           
  6473                           ; BSR set to: 2
  6474                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6475  001030  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6476                           
  6477                           ; BSR set to: 2
  6478                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6479  001032  5134               	movf	52,w,b	;volatile
  6480  001034  0FAF               	addlw	low _USBAlternateInterface
  6481  001036  6ED9               	movwf	fsr2l,c
  6482  001038  6ADA               	clrf	fsr2h,c
  6483  00103A  C232 FFDF          	movff	562,indf2	;volatile
  6484                           
  6485                           ;usb_device.c: 2725: break;
  6486  00103E  0012               	return	
  6487  001040                     i2l3652:
  6488                           
  6489                           ; BSR set to: 2
  6490                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6491  001040  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6492  001042  0E02               	movlw	2
  6493  001044  ECFD  F00C         	call	PL44	;call to abstracted procedure
  6494  001048  EF2A  F00A         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6495  00104C                     i2l3656:
  6496                           
  6497                           ; BSR set to: 2
  6498  00104C  5131               	movf	49,w,b	;volatile
  6499                           
  6500                           ; Switch size 1, requested type "space"
  6501                           ; Number of cases is 11, Range of values is 0 to 12
  6502                           ; switch strategies available:
  6503                           ; Name         Instructions Cycles
  6504                           ; simple_byte           34    18 (average)
  6505                           ;	Chosen strategy is simple_byte
  6506  00104E  E102 EF4A  F009    	bz	_USBStdGetStatusHandler
  6507  001054  0A01               	xorlw	1	; case 1
  6508  001056  E102 EFB0  F002    	bz	_USBStdFeatureReqHandler
  6509  00105C  0A02               	xorlw	2	; case 3
  6510  00105E  E102 EFB0  F002    	bz	_USBStdFeatureReqHandler
  6511  001064  0A06               	xorlw	6	; case 5
  6512  001066  E0D6               	bz	i2l603
  6513  001068  0A03               	xorlw	3	; case 6
  6514  00106A  E102 EF69  F004    	bz	_USBStdGetDscHandler
  6515  001070  0A01               	xorlw	1	; case 7
  6516  001072  E0E6               	bz	i2l3652
  6517  001074  0A0F               	xorlw	15	; case 8
  6518  001076  E0D3               	bz	i2l3630
  6519  001078  0A01               	xorlw	1	; case 9
  6520  00107A  E102 EF66  F007    	bz	_USBStdSetCfgHandler
  6521  001080  0A03               	xorlw	3	; case 10
  6522  001082  E0D0               	bz	i2l3642
  6523  001084  0A01               	xorlw	1	; case 11
  6524  001086  E0D4               	bz	i2l612
  6525  001088  0A07               	xorlw	7	; case 12
  6526  00108A  0012               	return	
  6527  00108C                     __end_of_USBCheckStdRequest:
  6528                           	opt stack 0
  6529  00108C                     PL74:
  6530                           	opt stack 17
  6531  00108C  6A0A               	clrf	_inPipes+1,c	;volatile
  6532  00108E  800C               	bsf	_inPipes+3,0,c	;volatile
  6533  001090  0E01               	movlw	1
  6534  001092  6E0D               	movwf	_inPipes+4,c	;volatile
  6535  001094  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6536  001096  0C01               	retlw	1
  6537  001098                     __end_ofPL74:
  6538                           	opt stack 0
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           prodh	equ	0xFF4
  6544                           prodl	equ	0xFF3
  6545                           intcon	equ	0xFF2
  6546                           postinc0	equ	0xFEE
  6547                           wreg	equ	0xFE8
  6548                           indf1	equ	0xFE7
  6549                           postdec1	equ	0xFE5
  6550                           fsr1h	equ	0xFE2
  6551                           fsr1l	equ	0xFE1
  6552                           indf2	equ	0xFDF
  6553                           postinc2	equ	0xFDE
  6554                           postdec2	equ	0xFDD
  6555                           plusw2	equ	0xFDB
  6556                           fsr2h	equ	0xFDA
  6557                           fsr2l	equ	0xFD9
  6558                           status	equ	0xFD8
  6559                           
  6560 ;; *************** function _USBStdSetCfgHandler *****************
  6561 ;; Defined at:
  6562 ;;		line 1968 in file "picLibs/usb_device.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  i               1   20[COMRAM] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 3D/2
  6573 ;;		On exit  : 3F/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6576 ;;      Params:         0       0       0       0       0
  6577 ;;      Locals:         1       0       0       0       0
  6578 ;;      Temps:          0       0       0       0       0
  6579 ;;      Totals:         1       0       0       0       0
  6580 ;;Total ram usage:        1 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    4
  6583 ;; This function calls:
  6584 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6585 ;;		i2_memset
  6586 ;; This function is called by:
  6587 ;;		_USBCheckStdRequest
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text35
  6592  000ECC                     __ptext35:
  6593                           	opt stack 0
  6594  000ECC                     _USBStdSetCfgHandler:
  6595                           	opt stack 17
  6596                           
  6597                           ;usb_device.c: 1970: uint8_t i;
  6598                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6599                           
  6600                           ;incstack = 0
  6601  000ECC  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6602                           
  6603                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  6604  000ECE  D840               	call	PL52	;call to abstracted procedure
  6605  000ED0  ECDD  F00C         	call	i2_memset	;wreg free
  6606                           
  6607                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6608  000ED4  6A2A               	clrf	i2memset@p1,c
  6609  000ED6  0E02               	movlw	2
  6610  000ED8  6E2B               	movwf	i2memset@p1+1,c
  6611  000EDA  6A2D               	clrf	i2memset@c+1,c
  6612  000EDC  6A2C               	clrf	i2memset@c,c
  6613  000EDE  6A2F               	clrf	i2memset@n+1,c
  6614  000EE0  0E30               	movlw	48
  6615  000EE2  6E2E               	movwf	i2memset@n,c
  6616  000EE4  ECDD  F00C         	call	i2_memset	;wreg free
  6617                           
  6618                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6619  000EE8  8C64               	bsf	3940,6,c	;volatile
  6620                           
  6621                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6622  000EEA  6A3E               	clrf	USBStdSetCfgHandler@i,c
  6623  000EEC                     i2l3360:
  6624                           
  6625                           ;usb_device.c: 1988: {
  6626                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6627  000EEC  503E               	movf	USBStdSetCfgHandler@i,w,c
  6628  000EEE  EC64  F004         	call	PL94	;call to abstracted procedure
  6629                           
  6630                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6631  000EF2  503E               	movf	USBStdSetCfgHandler@i,w,c
  6632  000EF4  EC5F  F004         	call	PL86	;call to abstracted procedure
  6633  000EF8  2A3E               	incf	USBStdSetCfgHandler@i,f,c
  6634  000EFA  0E02               	movlw	2
  6635  000EFC  643E               	cpfsgt	USBStdSetCfgHandler@i,c
  6636  000EFE  D7F6               	goto	i2l3360
  6637                           
  6638                           ;usb_device.c: 1991: }
  6639                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6640  000F00  0EAF               	movlw	low _USBAlternateInterface
  6641  000F02  6E2A               	movwf	i2memset@p1,c
  6642  000F04  6A2B               	clrf	i2memset@p1+1,c
  6643  000F06  6A2D               	clrf	i2memset@c+1,c
  6644  000F08  6A2C               	clrf	i2memset@c,c
  6645  000F0A  6A2F               	clrf	i2memset@n+1,c
  6646  000F0C  0E02               	movlw	2
  6647  000F0E  6E2E               	movwf	i2memset@n,c
  6648  000F10  ECDD  F00C         	call	i2_memset	;wreg free
  6649                           
  6650                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6651  000F14  9C64               	bcf	3940,6,c	;volatile
  6652                           
  6653                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6654  000F16  0E08               	movlw	8
  6655  000F18  6E0F               	movwf	_pBDTEntryIn,c
  6656  000F1A  0E02               	movlw	2
  6657  000F1C  6E10               	movwf	_pBDTEntryIn+1,c
  6658                           
  6659                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6660  000F1E  0E00               	movlw	0
  6661  000F20  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  6662  000F22  0E02               	movlw	2
  6663                           
  6664                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6665  000F24  D81F               	call	PL96	;call to abstracted procedure
  6666                           
  6667                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6668  000F26  C232 F029          	movff	562,_USBActiveConfiguration	;volatile
  6669                           
  6670                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6671  000F2A  5029               	movf	_USBActiveConfiguration,w,c	;volatile
  6672  000F2C  E104               	bnz	i2l3382
  6673                           
  6674                           ;usb_device.c: 2010: {
  6675                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6676  000F2E  0E10               	movlw	16
  6677  000F30  0100               	movlb	0	; () banked
  6678  000F32  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6679                           
  6680                           ;usb_device.c: 2013: }
  6681  000F34  0C10               	retlw	16
  6682  000F36                     i2l3382:
  6683                           
  6684                           ;usb_device.c: 2014: else
  6685                           ;usb_device.c: 2015: {
  6686                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6687  000F36  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6688  000F38  0E01               	movlw	1
  6689  000F3A  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6690  000F3C  0E29               	movlw	low _USBActiveConfiguration
  6691  000F3E  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6692  000F40  ECF7  F003         	call	PL92	;call to abstracted procedure
  6693  000F44  EC2A  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6694                           
  6695                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6696  000F48  0E20               	movlw	32
  6697  000F4A  0100               	movlb	0	; () banked
  6698  000F4C  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6699                           
  6700                           ; BSR set to: 0
  6701  000F4E  0C20               	retlw	32	;funcret
  6702  000F50                     __end_of_USBStdSetCfgHandler:
  6703                           	opt stack 0
  6704  000F50                     PL52:
  6705                           	opt stack 23
  6706  000F50  0E54               	movlw	84
  6707  000F52  6E2A               	movwf	i2memset@p1,c
  6708  000F54  0E0F               	movlw	15
  6709  000F56  6E2B               	movwf	i2memset@p1+1,c
  6710  000F58  6A2D               	clrf	i2memset@c+1,c
  6711  000F5A  6A2C               	clrf	i2memset@c,c
  6712  000F5C  6A2F               	clrf	i2memset@n+1,c
  6713  000F5E  0E02               	movlw	2
  6714  000F60  6E2E               	movwf	i2memset@n,c
  6715  000F62  0C02               	retlw	2
  6716  000F64                     __end_ofPL52:
  6717                           	opt stack 0
  6718  000F64                     PL96:
  6719                           	opt stack 17
  6720  000F64  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6721  000F66  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6722  000F6A  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6723  000F6E  0012               	return	
  6724  000F70                     __end_ofPL96:
  6725                           	opt stack 0
  6726                           tblptru	equ	0xFF8
  6727                           tblptrh	equ	0xFF7
  6728                           tblptrl	equ	0xFF6
  6729                           tablat	equ	0xFF5
  6730                           prodh	equ	0xFF4
  6731                           prodl	equ	0xFF3
  6732                           intcon	equ	0xFF2
  6733                           postinc0	equ	0xFEE
  6734                           wreg	equ	0xFE8
  6735                           indf1	equ	0xFE7
  6736                           postdec1	equ	0xFE5
  6737                           fsr1h	equ	0xFE2
  6738                           fsr1l	equ	0xFE1
  6739                           indf2	equ	0xFDF
  6740                           postinc2	equ	0xFDE
  6741                           postdec2	equ	0xFDD
  6742                           plusw2	equ	0xFDB
  6743                           fsr2h	equ	0xFDA
  6744                           fsr2l	equ	0xFD9
  6745                           status	equ	0xFD8
  6746                           
  6747 ;; *************** function i2_memset *****************
  6748 ;; Defined at:
  6749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  p1              2    0[COMRAM] PTR void 
  6752 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6753 ;;  c               2    2[COMRAM] int 
  6754 ;;  n               2    4[COMRAM] unsigned int 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  memset          2    6[COMRAM] PTR unsigned char 
  6757 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  2    0[COMRAM] PTR void 
  6760 ;; Registers used:
  6761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/F
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6767 ;;      Params:         6       0       0       0       0
  6768 ;;      Locals:         2       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0
  6770 ;;      Totals:         8       0       0       0       0
  6771 ;;Total ram usage:        8 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; This function calls:
  6774 ;;		Nothing
  6775 ;; This function is called by:
  6776 ;;		_USBStdSetCfgHandler
  6777 ;;		i2_USBDeviceInit
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text36
  6782  0019BA                     __ptext36:
  6783                           	opt stack 0
  6784  0019BA                     i2_memset:
  6785                           	opt stack 23
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;incstack = 0
  6789  0019BA  C02A  F030         	movff	i2memset@p1,i2memset@p
  6790  0019BE  C02B  F031         	movff	i2memset@p1+1,i2memset@p+1
  6791  0019C2  D008               	goto	i2l3292
  6792  0019C4                     i2l3288:
  6793  0019C4  C030  FFD9         	movff	i2memset@p,fsr2l
  6794  0019C8  C031  FFDA         	movff	i2memset@p+1,fsr2h
  6795  0019CC  C02C  FFDF         	movff	i2memset@c,indf2
  6796  0019D0  4A30               	infsnz	i2memset@p,f,c
  6797  0019D2  2A31               	incf	i2memset@p+1,f,c
  6798  0019D4                     i2l3292:
  6799  0019D4  062E               	decf	i2memset@n,f,c
  6800  0019D6  A0D8               	btfss	status,0,c
  6801  0019D8  062F               	decf	i2memset@n+1,f,c
  6802  0019DA  282E               	incf	i2memset@n,w,c
  6803  0019DC  E1F3               	bnz	i2l3288
  6804  0019DE  282F               	incf	i2memset@n+1,w,c
  6805  0019E0  E1F1               	bnz	i2l3288
  6806  0019E2  0012               	return		;funcret
  6807  0019E4                     __end_ofi2_memset:
  6808                           	opt stack 0
  6809                           tblptru	equ	0xFF8
  6810                           tblptrh	equ	0xFF7
  6811                           tblptrl	equ	0xFF6
  6812                           tablat	equ	0xFF5
  6813                           prodh	equ	0xFF4
  6814                           prodl	equ	0xFF3
  6815                           intcon	equ	0xFF2
  6816                           postinc0	equ	0xFEE
  6817                           wreg	equ	0xFE8
  6818                           indf1	equ	0xFE7
  6819                           postdec1	equ	0xFE5
  6820                           fsr1h	equ	0xFE2
  6821                           fsr1l	equ	0xFE1
  6822                           indf2	equ	0xFDF
  6823                           postinc2	equ	0xFDE
  6824                           postdec2	equ	0xFDD
  6825                           plusw2	equ	0xFDB
  6826                           fsr2h	equ	0xFDA
  6827                           fsr2l	equ	0xFD9
  6828                           status	equ	0xFD8
  6829                           
  6830 ;; *************** function _USBStdGetStatusHandler *****************
  6831 ;; Defined at:
  6832 ;;		line 2129 in file "picLibs/usb_device.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  p               2    0[COMRAM] PTR struct __BDT
  6837 ;;		 -> RAM(767), NULL(0), BDT(48), 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6842 ;; Tracked objects:
  6843 ;;		On entry : 3D/2
  6844 ;;		On exit  : 3F/2
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6847 ;;      Params:         0       0       0       0       0
  6848 ;;      Locals:         2       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0
  6850 ;;      Totals:         2       0       0       0       0
  6851 ;;Total ram usage:        2 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_USBCheckStdRequest
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text37
  6861  001294                     __ptext37:
  6862                           	opt stack 0
  6863  001294                     _USBStdGetStatusHandler:
  6864                           	opt stack 21
  6865                           
  6866                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6867                           
  6868                           ;incstack = 0
  6869  001294  0102               	movlb	2	; () banked
  6870  001296  6B38               	clrf	56,b	;volatile
  6871                           
  6872                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6873  001298  6B39               	clrf	57,b	;volatile
  6874                           
  6875                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6876  00129A  D020               	goto	i2l3432
  6877  00129C                     i2l541:
  6878                           
  6879                           ; BSR set to: 2
  6880                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6881  00129C  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6882                           
  6883                           ; BSR set to: 2
  6884                           ;usb_device.c: 2145: }
  6885                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6886                           
  6887                           ;usb_device.c: 2142: if(0 == 1)
  6888  00129E  0425               	decf	_RemoteWakeup,w,c	;volatile
  6889  0012A0  E124               	bnz	i2l544
  6890                           
  6891                           ; BSR set to: 2
  6892                           ;usb_device.c: 2148: {
  6893                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6894  0012A2  8338               	bsf	56,1,b	;volatile
  6895  0012A4  D022               	goto	i2l544
  6896  0012A6                     i2l545:
  6897                           
  6898                           ; BSR set to: 2
  6899                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6900  0012A6  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6901                           
  6902                           ;usb_device.c: 2154: break;
  6903  0012A8  D020               	goto	i2l544
  6904  0012AA                     i2l546:
  6905                           
  6906                           ; BSR set to: 2
  6907                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6908  0012AA  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6909                           
  6910                           ;usb_device.c: 2160: {
  6911                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6912                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6913  0012AC  BF34               	btfsc	52,7,b	;volatile
  6914  0012AE  D004               	goto	i2l3422
  6915                           
  6916                           ; BSR set to: 2
  6917                           ;usb_device.c: 2164: {
  6918                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6919  0012B0  EC77  F003         	call	PL64	;call to abstracted procedure
  6920  0012B4  0F60               	addlw	low _pBDTEntryOut
  6921  0012B6  D003               	goto	L6
  6922  0012B8                     i2l3422:
  6923                           
  6924                           ; BSR set to: 2
  6925                           ;usb_device.c: 2167: else
  6926                           ;usb_device.c: 2168: {
  6927                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6928  0012B8  EC77  F003         	call	PL64	;call to abstracted procedure
  6929  0012BC  0F0F               	addlw	low _pBDTEntryIn
  6930  0012BE                     L6:
  6931  0012BE  6ED9               	movwf	fsr2l,c
  6932  0012C0  6ADA               	clrf	fsr2h,c
  6933  0012C2  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  6934  0012C6  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  6935                           
  6936                           ; BSR set to: 2
  6937                           ;usb_device.c: 2170: }
  6938                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6939  0012CA  D818               	call	PL102	;call to abstracted procedure
  6940  0012CC  AEDF               	btfss	indf2,7,c
  6941  0012CE  D00D               	goto	i2l544
  6942                           
  6943                           ; BSR set to: 2
  6944  0012D0  D815               	call	PL102	;call to abstracted procedure
  6945  0012D2  A4DF               	btfss	indf2,2,c
  6946  0012D4  D00A               	goto	i2l544
  6947                           
  6948                           ; BSR set to: 2
  6949                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6950  0012D6  0E01               	movlw	1
  6951  0012D8  6F38               	movwf	56,b	;volatile
  6952  0012DA  D007               	goto	i2l544
  6953  0012DC                     i2l3432:
  6954                           
  6955                           ; BSR set to: 2
  6956  0012DC  5130               	movf	48,w,b	;volatile
  6957  0012DE  0B1F               	andlw	31
  6958                           
  6959                           ; Switch size 1, requested type "space"
  6960                           ; Number of cases is 3, Range of values is 0 to 2
  6961                           ; switch strategies available:
  6962                           ; Name         Instructions Cycles
  6963                           ; simple_byte           10     6 (average)
  6964                           ;	Chosen strategy is simple_byte
  6965  0012E0  E0DD               	bz	i2l541
  6966  0012E2  0A01               	xorlw	1	; case 1
  6967  0012E4  E0E0               	bz	i2l545
  6968  0012E6  0A03               	xorlw	3	; case 2
  6969  0012E8  E0E0               	bz	i2l546
  6970  0012EA                     i2l544:
  6971                           
  6972                           ; BSR set to: 2
  6973                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6974  0012EA  AE0C               	btfss	_inPipes+3,7,c	;volatile
  6975  0012EC  0012               	return	
  6976                           
  6977                           ; BSR set to: 2
  6978                           ;usb_device.c: 2179: {
  6979                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6980  0012EE  0E38               	movlw	56
  6981  0012F0  6E09               	movwf	_inPipes,c	;volatile
  6982  0012F2  0E02               	movlw	2
  6983  0012F4  6E0A               	movwf	_inPipes+1,c	;volatile
  6984                           
  6985                           ; BSR set to: 2
  6986                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6987  0012F6  800C               	bsf	_inPipes+3,0,c	;volatile
  6988                           
  6989                           ; BSR set to: 2
  6990                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6991  0012F8  6E0D               	movwf	_inPipes+4,c	;volatile
  6992                           
  6993                           ; BSR set to: 2
  6994  0012FA  0C02               	retlw	2	;funcret
  6995  0012FC                     __end_of_USBStdGetStatusHandler:
  6996                           	opt stack 0
  6997  0012FC                     PL102:
  6998                           	opt stack 21
  6999  0012FC  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  7000  001300  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  7001  001304  0012               	return	
  7002  001306                     __end_ofPL102:
  7003                           	opt stack 0
  7004                           tblptru	equ	0xFF8
  7005                           tblptrh	equ	0xFF7
  7006                           tblptrl	equ	0xFF6
  7007                           tablat	equ	0xFF5
  7008                           prodh	equ	0xFF4
  7009                           prodl	equ	0xFF3
  7010                           intcon	equ	0xFF2
  7011                           postinc0	equ	0xFEE
  7012                           wreg	equ	0xFE8
  7013                           indf1	equ	0xFE7
  7014                           postdec1	equ	0xFE5
  7015                           fsr1h	equ	0xFE2
  7016                           fsr1l	equ	0xFE1
  7017                           indf2	equ	0xFDF
  7018                           postinc2	equ	0xFDE
  7019                           postdec2	equ	0xFDD
  7020                           plusw2	equ	0xFDB
  7021                           fsr2h	equ	0xFDA
  7022                           fsr2l	equ	0xFD9
  7023                           status	equ	0xFD8
  7024                           
  7025 ;; *************** function _USBStdGetDscHandler *****************
  7026 ;; Defined at:
  7027 ;;		line 2043 in file "picLibs/usb_device.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;		None
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;		None
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7036 ;; Tracked objects:
  7037 ;;		On entry : 3D/2
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7041 ;;      Params:         0       0       0       0       0
  7042 ;;      Locals:         0       0       0       0       0
  7043 ;;      Temps:          2       0       0       0       0
  7044 ;;      Totals:         2       0       0       0       0
  7045 ;;Total ram usage:        2 bytes
  7046 ;; Hardware stack levels used:    1
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_USBCheckStdRequest
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text38
  7055  0008D2                     __ptext38:
  7056                           	opt stack 0
  7057  0008D2                     _USBStdGetDscHandler:
  7058                           	opt stack 21
  7059                           
  7060                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7061                           
  7062                           ; BSR set to: 2
  7063                           ;incstack = 0
  7064  0008D2  0E80               	movlw	128
  7065  0008D4  0102               	movlb	2	; () banked
  7066  0008D6  1930               	xorwf	48,w,b	;volatile
  7067  0008D8  A4D8               	btfss	status,2,c
  7068  0008DA  0012               	return	
  7069                           
  7070                           ; BSR set to: 2
  7071                           ;usb_device.c: 2046: {
  7072                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7073  0008DC  0EC0               	movlw	192
  7074  0008DE  6E0C               	movwf	_inPipes+3,c	;volatile
  7075                           
  7076                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7077  0008E0  D03D               	goto	i2l3410
  7078  0008E2                     i2l3390:
  7079                           
  7080                           ; BSR set to: 2
  7081                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7082  0008E2  0EB0               	movlw	low _device_dsc
  7083  0008E4  6E09               	movwf	_inPipes,c	;volatile
  7084  0008E6  5009               	movf	_inPipes,w,c	;volatile
  7085  0008E8  A4D8               	btfss	status,2,c
  7086  0008EA  0E03               	movlw	high __smallconst
  7087  0008EC  6E0A               	movwf	_inPipes+1,c	;volatile
  7088                           
  7089                           ; BSR set to: 2
  7090                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7091  0008EE  6A0E               	clrf	_inPipes+5,c	;volatile
  7092  0008F0  0E12               	movlw	18
  7093  0008F2  6E0D               	movwf	_inPipes+4,c	;volatile
  7094                           
  7095                           ;usb_device.c: 2058: break;
  7096  0008F4  0C12               	retlw	18
  7097  0008F6                     i2l3394:
  7098                           
  7099                           ; BSR set to: 2
  7100                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7101  0008F6  5132               	movf	50,w,b	;volatile
  7102  0008F8  E116               	bnz	i2l531
  7103                           
  7104                           ; BSR set to: 2
  7105                           ;usb_device.c: 2064: {
  7106                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7107  0008FA  5132               	movf	50,w,b	;volatile
  7108  0008FC  0F04               	addlw	low _USB_CD_Ptr
  7109  0008FE  D848               	call	PL50	;call to abstracted procedure
  7110                           
  7111                           ; BSR set to: 2
  7112                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7113  000900  0E02               	movlw	2
  7114  000902  D83A               	call	PL40	;call to abstracted procedure
  7115  000904  64F7               	cpfsgt	tblptrh,c
  7116  000906  D003               	bra	i2u212_47
  7117  000908  0008               	tblrd		*
  7118  00090A  50F5               	movf	tablat,w,c
  7119  00090C  D001               	bra	i2u212_40
  7120  00090E                     i2u212_47:
  7121  00090E  D82E               	call	PL32	;call to abstracted procedure
  7122  000910                     i2u212_40:
  7123  000910  6E0D               	movwf	_inPipes+4,c	;volatile
  7124                           
  7125                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7126  000912  0E03               	movlw	3
  7127  000914  D831               	call	PL40	;call to abstracted procedure
  7128  000916  64F7               	cpfsgt	tblptrh,c
  7129  000918  D003               	bra	i2u213_47
  7130  00091A  0008               	tblrd		*
  7131  00091C  50F5               	movf	tablat,w,c
  7132  00091E  D001               	bra	i2u213_40
  7133  000920                     i2u213_47:
  7134  000920  D825               	call	PL32	;call to abstracted procedure
  7135  000922                     i2u213_40:
  7136  000922  6E0E               	movwf	_inPipes+5,c	;volatile
  7137                           
  7138                           ;usb_device.c: 2076: }
  7139  000924  0012               	return	
  7140  000926                     i2l531:
  7141                           
  7142                           ; BSR set to: 2
  7143                           ;usb_device.c: 2077: else
  7144                           ;usb_device.c: 2078: {
  7145                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7146  000926  6A0C               	clrf	_inPipes+3,c	;volatile
  7147  000928  0012               	return	
  7148  00092A                     i2l3402:
  7149                           
  7150                           ; BSR set to: 2
  7151                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7152  00092A  0E03               	movlw	3
  7153  00092C  6132               	cpfslt	50,b	;volatile
  7154  00092E  D012               	goto	i2l534
  7155                           
  7156                           ; BSR set to: 2
  7157                           ;usb_device.c: 2087: {
  7158                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7159  000930  5132               	movf	50,w,b	;volatile
  7160  000932  0F01               	addlw	low _USB_SD_Ptr
  7161  000934  D82D               	call	PL50	;call to abstracted procedure
  7162                           
  7163                           ; BSR set to: 2
  7164                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7165  000936  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
  7166  00093A  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7167  00093E  6AF8               	clrf	tblptru,c
  7168  000940  0E02               	movlw	(high __ramtop+-1)
  7169  000942  64F7               	cpfsgt	tblptrh,c
  7170  000944  D003               	bra	i2u215_47
  7171  000946  0008               	tblrd		*
  7172  000948  50F5               	movf	tablat,w,c
  7173  00094A  D001               	bra	i2u215_40
  7174  00094C                     i2u215_47:
  7175  00094C  D80F               	call	PL32	;call to abstracted procedure
  7176  00094E                     i2u215_40:
  7177  00094E  6E0D               	movwf	_inPipes+4,c	;volatile
  7178  000950  6A0E               	clrf	_inPipes+5,c	;volatile
  7179                           
  7180                           ;usb_device.c: 2092: }
  7181  000952  0012               	return	
  7182  000954                     i2l534:
  7183                           
  7184                           ; BSR set to: 2
  7185                           ;usb_device.c: 2102: else
  7186                           ;usb_device.c: 2103: {
  7187                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7188  000954  6A0C               	clrf	_inPipes+3,c	;volatile
  7189  000956  0012               	return	
  7190  000958                     i2l536:
  7191                           
  7192                           ; BSR set to: 2
  7193                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7194  000958  6A0C               	clrf	_inPipes+3,c	;volatile
  7195                           
  7196                           ;usb_device.c: 2109: break;
  7197  00095A  0012               	return	
  7198  00095C                     i2l3410:
  7199                           
  7200                           ; BSR set to: 2
  7201  00095C  5133               	movf	51,w,b	;volatile
  7202                           
  7203                           ; Switch size 1, requested type "space"
  7204                           ; Number of cases is 3, Range of values is 1 to 3
  7205                           ; switch strategies available:
  7206                           ; Name         Instructions Cycles
  7207                           ; simple_byte           10     6 (average)
  7208                           ;	Chosen strategy is simple_byte
  7209  00095E  0A01               	xorlw	1	; case 1
  7210  000960  E0C0               	bz	i2l3390
  7211  000962  0A03               	xorlw	3	; case 2
  7212  000964  E0C8               	bz	i2l3394
  7213  000966  0A01               	xorlw	1	; case 3
  7214  000968  E0E0               	bz	i2l3402
  7215  00096A  D7F6               	goto	i2l536
  7216  00096C                     __end_of_USBStdGetDscHandler:
  7217                           	opt stack 0
  7218  00096C                     PL32:
  7219                           	opt stack 21
  7220  00096C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7221  000970  CFF7 FFE2          	movff	tblptrh,fsr1h
  7222  000974  50E7               	movf	indf1,w,c
  7223  000976  0012               	return	
  7224  000978                     __end_ofPL32:
  7225                           	opt stack 0
  7226  000978                     PL40:
  7227                           	opt stack 21
  7228  000978  2409               	addwf	_inPipes,w,c	;volatile
  7229  00097A  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7230  00097C  0E00               	movlw	0
  7231  00097E  200A               	addwfc	_inPipes+1,w,c	;volatile
  7232  000980  6E2B               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7233  000982  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7234  000986  C02B  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7235  00098A  6AF8               	clrf	tblptru,c
  7236  00098C  0E02               	movlw	(high __ramtop+-1)
  7237  00098E  0012               	return	
  7238  000990                     __end_ofPL40:
  7239                           	opt stack 0
  7240  000990                     PL50:
  7241                           	opt stack 21
  7242  000990  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7243  000992  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7244  000996                     	if	1	;There is more than 1 active tblptr byte
  7245  000996  0E03               	movlw	high __smallconst
  7246  000998  6EF7               	movwf	tblptrh,c
  7247  00099A                     	endif
  7248  00099A                     	if	0	;tblptru may be non-zero
  7249  00099A                     	endif
  7250  00099A                     	if	0	;tblptru may be non-zero
  7251  00099A                     	endif
  7252  00099A  0009               	tblrd		*+
  7253  00099C  CFF5 F009          	movff	tablat,_inPipes	;volatile
  7254  0009A0  6E0A               	movwf	_inPipes+1,c	;volatile
  7255  0009A2  0012               	return	
  7256  0009A4                     __end_ofPL50:
  7257                           	opt stack 0
  7258                           tblptru	equ	0xFF8
  7259                           tblptrh	equ	0xFF7
  7260                           tblptrl	equ	0xFF6
  7261                           tablat	equ	0xFF5
  7262                           prodh	equ	0xFF4
  7263                           prodl	equ	0xFF3
  7264                           intcon	equ	0xFF2
  7265                           postinc0	equ	0xFEE
  7266                           wreg	equ	0xFE8
  7267                           indf1	equ	0xFE7
  7268                           postdec1	equ	0xFE5
  7269                           fsr1h	equ	0xFE2
  7270                           fsr1l	equ	0xFE1
  7271                           indf2	equ	0xFDF
  7272                           postinc2	equ	0xFDE
  7273                           postdec2	equ	0xFDD
  7274                           plusw2	equ	0xFDB
  7275                           fsr2h	equ	0xFDA
  7276                           fsr2l	equ	0xFD9
  7277                           status	equ	0xFD8
  7278                           
  7279 ;; *************** function _USBStdFeatureReqHandler *****************
  7280 ;; Defined at:
  7281 ;;		line 2754 in file "picLibs/usb_device.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;		None
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  p               2   25[COMRAM] PTR struct __BDT
  7286 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7287 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  7288 ;;		 -> UEP0(1), 
  7289 ;;  current_ep_d    1   24[COMRAM] struct .
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7294 ;; Tracked objects:
  7295 ;;		On entry : 3D/2
  7296 ;;		On exit  : 3D/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7299 ;;      Params:         0       0       0       0       0
  7300 ;;      Locals:         5       0       0       0       0
  7301 ;;      Temps:          2       0       0       0       0
  7302 ;;      Totals:         7       0       0       0       0
  7303 ;;Total ram usage:        7 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    4
  7306 ;; This function calls:
  7307 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7308 ;; This function is called by:
  7309 ;;		_USBCheckStdRequest
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text39
  7314  000560                     __ptext39:
  7315                           	opt stack 0
  7316  000560                     _USBStdFeatureReqHandler:
  7317                           	opt stack 17
  7318                           
  7319                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7320                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7321                           ;usb_device.c: 2761: unsigned char* pUEP;
  7322                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7323                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7324                           
  7325                           ;incstack = 0
  7326  000560  0102               	movlb	2	; () banked
  7327  000562  0532               	decf	50,w,b	;volatile
  7328  000564  E10B               	bnz	i2l3450
  7329                           
  7330                           ; BSR set to: 2
  7331  000566  5130               	movf	48,w,b	;volatile
  7332  000568  0B1F               	andlw	31
  7333  00056A  E108               	bnz	i2l3450
  7334                           
  7335                           ; BSR set to: 2
  7336                           ;usb_device.c: 2801: {
  7337                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7338  00056C  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7339                           
  7340                           ; BSR set to: 2
  7341                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7342  00056E  0E03               	movlw	3
  7343  000570  1931               	xorwf	49,w,b	;volatile
  7344  000572  E103               	bnz	i2l619
  7345                           
  7346                           ; BSR set to: 2
  7347                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7348  000574  0E01               	movlw	1
  7349  000576  6E25               	movwf	_RemoteWakeup,c	;volatile
  7350  000578  D001               	goto	i2l3450
  7351  00057A                     i2l619:
  7352                           
  7353                           ; BSR set to: 2
  7354                           ;usb_device.c: 2805: else
  7355                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7356  00057A  6A25               	clrf	_RemoteWakeup,c	;volatile
  7357  00057C                     i2l3450:
  7358                           
  7359                           ; BSR set to: 2
  7360                           ;usb_device.c: 2807: }
  7361                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7362                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7363                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7364                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7365  00057C  5132               	movf	50,w,b	;volatile
  7366  00057E  A4D8               	btfss	status,2,c
  7367  000580  0012               	return	
  7368                           
  7369                           ; BSR set to: 2
  7370  000582  5130               	movf	48,w,b	;volatile
  7371  000584  0B1F               	andlw	31
  7372  000586  0A02               	xorlw	2
  7373  000588  A4D8               	btfss	status,2,c
  7374  00058A  0012               	return	
  7375                           
  7376                           ; BSR set to: 2
  7377  00058C  5134               	movf	52,w,b	;volatile
  7378  00058E  0B0F               	andlw	15
  7379  000590  B4D8               	btfsc	status,2,c
  7380  000592  0012               	return	
  7381                           
  7382                           ; BSR set to: 2
  7383  000594  5134               	movf	52,w,b	;volatile
  7384  000596  0B0F               	andlw	15
  7385  000598  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7386  00059A  0E03               	movlw	3
  7387  00059C  603E               	cpfslt	??_USBStdFeatureReqHandler,c
  7388  00059E  0C03               	retlw	3
  7389                           
  7390                           ; BSR set to: 2
  7391  0005A0  0E20               	movlw	32
  7392  0005A2  0100               	movlb	0	; () banked
  7393  0005A4  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7394  0005A6  A4D8               	btfss	status,2,c
  7395  0005A8  0012               	return	
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;usb_device.c: 2814: {
  7399                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7400  0005AA  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7401                           
  7402                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7403  0005AC  0102               	movlb	2	; () banked
  7404  0005AE  BF34               	btfsc	52,7,b	;volatile
  7405  0005B0  D007               	goto	i2l3466
  7406                           
  7407                           ; BSR set to: 2
  7408                           ;usb_device.c: 2821: {
  7409                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7410  0005B2  5134               	movf	52,w,b	;volatile
  7411  0005B4  0B0F               	andlw	15
  7412  0005B6  ECDC  F005         	call	PL30	;call to abstracted procedure
  7413                           
  7414                           ; BSR set to: 2
  7415                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7416  0005BA  D88B               	call	PL60	;call to abstracted procedure
  7417  0005BC  0F70               	addlw	low _ep_data_out
  7418  0005BE  D006               	goto	L7
  7419  0005C0                     i2l3466:
  7420                           
  7421                           ; BSR set to: 2
  7422                           ;usb_device.c: 2825: else
  7423                           ;usb_device.c: 2826: {
  7424                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7425  0005C0  5134               	movf	52,w,b	;volatile
  7426  0005C2  0B0F               	andlw	15
  7427  0005C4  ECE2  F005         	call	PL34	;call to abstracted procedure
  7428                           
  7429                           ; BSR set to: 2
  7430                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7431  0005C8  D884               	call	PL60	;call to abstracted procedure
  7432  0005CA  0F73               	addlw	low _ep_data_in
  7433  0005CC                     L7:
  7434  0005CC  6ED9               	movwf	fsr2l,c
  7435  0005CE  6ADA               	clrf	fsr2h,c
  7436  0005D0  50DF               	movf	indf2,w,c
  7437  0005D2  6E42               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7438                           
  7439                           ; BSR set to: 2
  7440                           ;usb_device.c: 2829: }
  7441                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7442  0005D4  B042               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7443  0005D6  D003               	goto	i2l3474
  7444                           
  7445                           ; BSR set to: 2
  7446                           ;usb_device.c: 2836: {
  7447                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7448  0005D8  0EFB               	movlw	251
  7449  0005DA  1643               	andwf	USBStdFeatureReqHandler@p,f,c
  7450  0005DC  D002               	goto	L8
  7451  0005DE                     i2l3474:
  7452                           
  7453                           ; BSR set to: 2
  7454                           ;usb_device.c: 2839: else
  7455                           ;usb_device.c: 2840: {
  7456                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7457  0005DE  0E04               	movlw	4
  7458  0005E0  1243               	iorwf	USBStdFeatureReqHandler@p,f,c
  7459  0005E2                     L8:
  7460  0005E2  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7461                           
  7462                           ; BSR set to: 2
  7463                           ;usb_device.c: 2842: }
  7464                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7465  0005E4  BF34               	btfsc	52,7,b	;volatile
  7466  0005E6  D003               	goto	i2l3480
  7467                           
  7468                           ; BSR set to: 2
  7469                           ;usb_device.c: 2848: {
  7470                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7471  0005E8  D882               	call	PL64	;call to abstracted procedure
  7472  0005EA  0F60               	addlw	low _pBDTEntryOut
  7473  0005EC  D002               	goto	L9
  7474  0005EE                     i2l3480:
  7475                           
  7476                           ; BSR set to: 2
  7477                           ;usb_device.c: 2851: else
  7478                           ;usb_device.c: 2852: {
  7479                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7480  0005EE  D87F               	call	PL64	;call to abstracted procedure
  7481  0005F0  0F0F               	addlw	low _pBDTEntryIn
  7482  0005F2                     L9:
  7483  0005F2  6ED9               	movwf	fsr2l,c
  7484  0005F4  6ADA               	clrf	fsr2h,c
  7485  0005F6  C043  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7486  0005FA  C044  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7487                           
  7488                           ; BSR set to: 2
  7489                           ;usb_device.c: 2854: }
  7490                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7491  0005FE  0E03               	movlw	3
  7492  000600  1931               	xorwf	49,w,b	;volatile
  7493  000602  E114               	bnz	i2l3492
  7494                           
  7495                           ; BSR set to: 2
  7496                           ;usb_device.c: 2858: {
  7497                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7498  000604  D856               	call	PL24	;call to abstracted procedure
  7499  000606  AEDF               	btfss	indf2,7,c
  7500  000608  D00B               	goto	i2l629
  7501                           
  7502                           ; BSR set to: 2
  7503                           ;usb_device.c: 2860: {
  7504                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7505  00060A  BF34               	btfsc	52,7,b	;volatile
  7506  00060C  D003               	goto	i2l3490
  7507                           
  7508                           ; BSR set to: 2
  7509                           ;usb_device.c: 2864: {
  7510                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7511  00060E  D86A               	call	PL62	;call to abstracted procedure
  7512  000610  0F70               	addlw	low _ep_data_out
  7513  000612  D002               	goto	L10
  7514  000614                     i2l3490:
  7515                           
  7516                           ; BSR set to: 2
  7517                           ;usb_device.c: 2867: else
  7518                           ;usb_device.c: 2868: {
  7519                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7520  000614  D867               	call	PL62	;call to abstracted procedure
  7521  000616  0F73               	addlw	low _ep_data_in
  7522  000618                     L10:
  7523  000618  6ED9               	movwf	fsr2l,c
  7524  00061A  6ADA               	clrf	fsr2h,c
  7525  00061C  0100               	movlb	0	; () banked
  7526  00061E  82DF               	bsf	indf2,1,c
  7527  000620                     i2l629:
  7528                           
  7529                           ;usb_device.c: 2870: }
  7530                           ;usb_device.c: 2871: }
  7531                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7532  000620  D848               	call	PL24	;call to abstracted procedure
  7533  000622  0E00               	movlw	0
  7534  000624  84DB               	bsf	plusw2,2,c
  7535                           
  7536                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7537  000626  D845               	call	PL24	;call to abstracted procedure
  7538  000628  8EDB               	bsf	plusw2,7,c
  7539                           
  7540                           ;usb_device.c: 2876: }
  7541  00062A  0C00               	retlw	0
  7542  00062C                     i2l3492:
  7543                           
  7544                           ; BSR set to: 2
  7545                           ;usb_device.c: 2877: else
  7546                           ;usb_device.c: 2878: {
  7547                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7548  00062C  0E04               	movlw	4
  7549  00062E  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7550  000630  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7551                           
  7552                           ; BSR set to: 2
  7553                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7554  000632  D83F               	call	PL24	;call to abstracted procedure
  7555  000634  AEDF               	btfss	indf2,7,c
  7556  000636  D00A               	goto	i2l3502
  7557                           
  7558                           ; BSR set to: 2
  7559                           ;usb_device.c: 2885: {
  7560                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7561  000638  D83C               	call	PL24	;call to abstracted procedure
  7562  00063A  0E7F               	movlw	127
  7563  00063C  16DF               	andwf	indf2,f,c
  7564                           
  7565                           ; BSR set to: 2
  7566                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7567  00063E  D839               	call	PL24	;call to abstracted procedure
  7568  000640  0E00               	movlw	0
  7569  000642  8CDB               	bsf	plusw2,6,c
  7570                           
  7571                           ; BSR set to: 2
  7572                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7573  000644  D83B               	call	PL48	;call to abstracted procedure
  7574  000646  EC2A  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7575                           
  7576                           ;usb_device.c: 2891: }
  7577  00064A  D003               	goto	i2l3504
  7578  00064C                     i2l3502:
  7579                           
  7580                           ; BSR set to: 2
  7581                           ;usb_device.c: 2892: else
  7582                           ;usb_device.c: 2893: {
  7583                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7584  00064C  D832               	call	PL24	;call to abstracted procedure
  7585  00064E  0E00               	movlw	0
  7586  000650  8CDB               	bsf	plusw2,6,c
  7587  000652                     i2l3504:
  7588                           
  7589                           ;usb_device.c: 2896: }
  7590                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7591  000652  0E04               	movlw	4
  7592  000654  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7593  000656  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7594                           
  7595                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7596  000658  B242               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7597  00065A  D003               	goto	i2l637
  7598  00065C  D82A               	call	PL24	;call to abstracted procedure
  7599  00065E  AEDF               	btfss	indf2,7,c
  7600  000660  D013               	goto	i2l3518
  7601  000662                     i2l637:
  7602                           
  7603                           ;usb_device.c: 2907: {
  7604                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7605  000662  0102               	movlb	2	; () banked
  7606  000664  BF34               	btfsc	52,7,b	;volatile
  7607  000666  D003               	goto	i2l3512
  7608                           
  7609                           ; BSR set to: 2
  7610                           ;usb_device.c: 2909: {
  7611                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7612  000668  D83D               	call	PL62	;call to abstracted procedure
  7613  00066A  0F70               	addlw	low _ep_data_out
  7614  00066C  D002               	goto	L11
  7615  00066E                     i2l3512:
  7616                           
  7617                           ; BSR set to: 2
  7618                           ;usb_device.c: 2912: else
  7619                           ;usb_device.c: 2913: {
  7620                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7621  00066E  D83A               	call	PL62	;call to abstracted procedure
  7622  000670  0F73               	addlw	low _ep_data_in
  7623  000672                     L11:
  7624  000672  6ED9               	movwf	fsr2l,c
  7625  000674  6ADA               	clrf	fsr2h,c
  7626  000676  0100               	movlb	0	; () banked
  7627  000678  92DF               	bcf	indf2,1,c
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;usb_device.c: 2915: }
  7631                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7632  00067A  D81B               	call	PL24	;call to abstracted procedure
  7633  00067C  0E3B               	movlw	59
  7634  00067E  16DF               	andwf	indf2,f,c
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7638  000680  D81D               	call	PL48	;call to abstracted procedure
  7639  000682  EC2A  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7640                           
  7641                           ;usb_device.c: 2921: }
  7642  000686  D003               	goto	i2l3520
  7643  000688                     i2l3518:
  7644                           
  7645                           ;usb_device.c: 2922: else
  7646                           ;usb_device.c: 2923: {
  7647                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7648  000688  D814               	call	PL24	;call to abstracted procedure
  7649  00068A  0E3B               	movlw	59
  7650  00068C  16DF               	andwf	indf2,f,c
  7651  00068E                     i2l3520:
  7652                           
  7653                           ;usb_device.c: 2926: }
  7654                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7655  00068E  0102               	movlb	2	; () banked
  7656  000690  5134               	movf	52,w,b	;volatile
  7657  000692  0B0F               	andlw	15
  7658  000694  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7659  000696  6A3F               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  7660  000698  0E53               	movlw	83
  7661  00069A  243E               	addwf	??_USBStdFeatureReqHandler,w,c
  7662  00069C  6E40               	movwf	USBStdFeatureReqHandler@pUEP,c
  7663  00069E  0E0F               	movlw	15
  7664  0006A0  203F               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  7665  0006A2  6E41               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7666                           
  7667                           ; BSR set to: 2
  7668                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7669  0006A4  C040  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7670  0006A8  C041  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7671  0006AC  0EFE               	movlw	254
  7672  0006AE  16DF               	andwf	indf2,f,c
  7673  0006B0  0CFE               	retlw	254	;funcret
  7674  0006B2                     __end_of_USBStdFeatureReqHandler:
  7675                           	opt stack 0
  7676  0006B2                     PL24:
  7677                           	opt stack 17
  7678  0006B2  C043  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7679  0006B6  C044  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7680  0006BA  0012               	return	
  7681  0006BC                     __end_ofPL24:
  7682                           	opt stack 0
  7683  0006BC                     PL48:
  7684                           	opt stack 17
  7685  0006BC  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7686  0006BE  0E05               	movlw	5
  7687  0006C0  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7688  0006C2  C043  F038         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7689  0006C6  C044  F039         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7690  0006CA  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7691  0006CC  0E02               	movlw	2
  7692  0006CE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7693  0006D0  0C02               	retlw	2
  7694  0006D2                     __end_ofPL48:
  7695                           	opt stack 0
  7696  0006D2                     PL60:
  7697                           	opt stack 17
  7698  0006D2  CFDE F043          	movff	postinc2,USBStdFeatureReqHandler@p
  7699  0006D6  CFDD F044          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7700  0006DA  5134               	movf	52,w,b	;volatile
  7701  0006DC  0B0F               	andlw	15
  7702  0006DE  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7703  0006E0  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7704  0006E2  0012               	return	
  7705  0006E4                     __end_ofPL60:
  7706                           	opt stack 0
  7707  0006E4                     PL62:
  7708                           	opt stack 17
  7709  0006E4  5134               	movf	52,w,b	;volatile
  7710  0006E6  0B0F               	andlw	15
  7711  0006E8  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7712  0006EA  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7713  0006EC  0012               	return	
  7714  0006EE                     __end_ofPL62:
  7715                           	opt stack 0
  7716  0006EE                     PL64:
  7717                           	opt stack 21
  7718  0006EE  5134               	movf	52,w,b	;volatile
  7719  0006F0  0B0F               	andlw	15
  7720  0006F2  0D02               	mullw	2
  7721  0006F4  50F3               	movf	prodl,w,c
  7722  0006F6  0012               	return	
  7723  0006F8                     __end_ofPL64:
  7724                           	opt stack 0
  7725                           tblptru	equ	0xFF8
  7726                           tblptrh	equ	0xFF7
  7727                           tblptrl	equ	0xFF6
  7728                           tablat	equ	0xFF5
  7729                           prodh	equ	0xFF4
  7730                           prodl	equ	0xFF3
  7731                           intcon	equ	0xFF2
  7732                           postinc0	equ	0xFEE
  7733                           wreg	equ	0xFE8
  7734                           indf1	equ	0xFE7
  7735                           postdec1	equ	0xFE5
  7736                           fsr1h	equ	0xFE2
  7737                           fsr1l	equ	0xFE1
  7738                           indf2	equ	0xFDF
  7739                           postinc2	equ	0xFDE
  7740                           postdec2	equ	0xFDD
  7741                           plusw2	equ	0xFDB
  7742                           fsr2h	equ	0xFDA
  7743                           fsr2l	equ	0xFD9
  7744                           status	equ	0xFD8
  7745                           
  7746 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7747 ;; Defined at:
  7748 ;;		line 51 in file "picLibs/usb_events.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  event           2   12[COMRAM] enum E3370
  7751 ;;  pdata           2   14[COMRAM] PTR void 
  7752 ;;		 -> RAM(767), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7753 ;;		 -> BDT(48), 
  7754 ;;  size            2   16[COMRAM] unsigned int 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;		None
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      unsigned char 
  7759 ;; Registers used:
  7760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7766 ;;      Params:         6       0       0       0       0
  7767 ;;      Locals:         0       0       0       0       0
  7768 ;;      Temps:          2       0       0       0       0
  7769 ;;      Totals:         8       0       0       0       0
  7770 ;;Total ram usage:        8 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    3
  7773 ;; This function calls:
  7774 ;;		_APP_DeviceCDCBasicDemoInitialize
  7775 ;;		_APP_LEDUpdateUSBStatus
  7776 ;;		_CDCInitEP
  7777 ;;		_USBCheckCDCRequest
  7778 ;;		i2_SYSTEM_Initialize
  7779 ;; This function is called by:
  7780 ;;		_USBDeviceTasks
  7781 ;;		_USBStdSetCfgHandler
  7782 ;;		_USBSuspend
  7783 ;;		_USBWakeFromSuspend
  7784 ;;		_USBCtrlTrfSetupHandler
  7785 ;;		_USBCheckStdRequest
  7786 ;;		_USBStdFeatureReqHandler
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text40
  7791  001454                     __ptext40:
  7792                           	opt stack 0
  7793  001454                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7794                           	opt stack 21
  7795                           
  7796                           ;usb_events.c: 53: switch( (int) event )
  7797                           
  7798                           ;incstack = 0
  7799  001454  D00E               	goto	i2l3232
  7800  001456                     i2l3220:
  7801                           
  7802                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  7803  001456  ECBB  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7804                           
  7805                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7806  00145A  0E01               	movlw	1
  7807  00145C  EF23  F00D         	goto	i2_SYSTEM_Initialize
  7808  001460                     i2l3222:
  7809                           
  7810                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  7811  001460  ECBB  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7812                           
  7813                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7814  001464  0E02               	movlw	2
  7815  001466  EF23  F00D         	goto	i2_SYSTEM_Initialize
  7816  00146A                     i2l3224:
  7817                           
  7818                           ;usb_events.c: 91: CDCInitEP();
  7819  00146A  ECEC  F00A         	call	_CDCInitEP	;wreg free
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;usb_events.c: 92: APP_DeviceCDCBasicDemoInitialize();
  7823  00146E  EF5B  F00D         	goto	_APP_DeviceCDCBasicDemoInitialize	;wreg free
  7824  001472                     i2l3232:
  7825  001472  C036  F03C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7826  001476  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7827                           
  7828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7829                           ; Switch size 1, requested type "space"
  7830                           ; Number of cases is 2, Range of values is 0 to 127
  7831                           ; switch strategies available:
  7832                           ; Name         Instructions Cycles
  7833                           ; simple_byte            7     4 (average)
  7834                           ;	Chosen strategy is simple_byte
  7835  00147A  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7836  00147C  E004               	bz	i2l5204
  7837  00147E  0A7F               	xorlw	127	; case 127
  7838  001480  A4D8               	btfss	status,2,c
  7839  001482  0012               	return	
  7840  001484  D01A               	goto	i2l5206
  7841  001486                     i2l5204:
  7842                           
  7843                           ; Switch size 1, requested type "space"
  7844                           ; Number of cases is 8, Range of values is 1 to 117
  7845                           ; switch strategies available:
  7846                           ; Name         Instructions Cycles
  7847                           ; simple_byte           25    13 (average)
  7848                           ;	Chosen strategy is simple_byte
  7849  001486  503C               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7850  001488  0A01               	xorlw	1	; case 1
  7851  00148A  E0EF               	bz	i2l3224
  7852  00148C  0A03               	xorlw	3	; case 2
  7853  00148E  B4D8               	btfsc	status,2,c
  7854  001490  0012               	return	
  7855  001492  0A01               	xorlw	1	; case 3
  7856  001494  E102 EF91  F008    	bz	_USBCheckCDCRequest
  7857  00149A  0A06               	xorlw	6	; case 5
  7858  00149C  B4D8               	btfsc	status,2,c
  7859  00149E  0012               	return	
  7860  0014A0  0A77               	xorlw	119	; case 114
  7861  0014A2  B4D8               	btfsc	status,2,c
  7862  0014A4  0012               	return	
  7863  0014A6  0A01               	xorlw	1	; case 115
  7864  0014A8  E102 EFBB  F009    	bz	_APP_LEDUpdateUSBStatus
  7865  0014AE  0A07               	xorlw	7	; case 116
  7866  0014B0  E0D7               	bz	i2l3222
  7867  0014B2  0A01               	xorlw	1	; case 117
  7868  0014B4  A4D8               	btfss	status,2,c
  7869  0014B6  0012               	return	
  7870  0014B8  D7CE               	goto	i2l3220
  7871  0014BA                     i2l5206:
  7872                           
  7873                           ; Switch size 1, requested type "space"
  7874                           ; Number of cases is 1, Range of values is 255 to 255
  7875                           ; switch strategies available:
  7876                           ; Name         Instructions Cycles
  7877                           ; simple_byte            4     3 (average)
  7878                           ;	Chosen strategy is simple_byte
  7879  0014BA  1C3C               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7880  0014BC  0012               	return	
  7881  0014BE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7882                           	opt stack 0
  7883                           tblptru	equ	0xFF8
  7884                           tblptrh	equ	0xFF7
  7885                           tblptrl	equ	0xFF6
  7886                           tablat	equ	0xFF5
  7887                           prodh	equ	0xFF4
  7888                           prodl	equ	0xFF3
  7889                           intcon	equ	0xFF2
  7890                           postinc0	equ	0xFEE
  7891                           wreg	equ	0xFE8
  7892                           indf1	equ	0xFE7
  7893                           postdec1	equ	0xFE5
  7894                           fsr1h	equ	0xFE2
  7895                           fsr1l	equ	0xFE1
  7896                           indf2	equ	0xFDF
  7897                           postinc2	equ	0xFDE
  7898                           postdec2	equ	0xFDD
  7899                           plusw2	equ	0xFDB
  7900                           fsr2h	equ	0xFDA
  7901                           fsr2l	equ	0xFD9
  7902                           status	equ	0xFD8
  7903                           
  7904 ;; *************** function i2_SYSTEM_Initialize *****************
  7905 ;; Defined at:
  7906 ;;		line 66 in file "picLibs/system.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  state           1    wreg     enum E3329
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  state           1    1[COMRAM] enum E3329
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7920 ;;      Params:         0       0       0       0       0
  7921 ;;      Locals:         1       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0
  7923 ;;      Totals:         1       0       0       0       0
  7924 ;;Total ram usage:        1 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    1
  7927 ;; This function calls:
  7928 ;;		i2_BUTTON_Enable
  7929 ;;		i2_LED_Enable
  7930 ;; This function is called by:
  7931 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text41
  7936  001A46                     __ptext41:
  7937                           	opt stack 0
  7938  001A46                     i2_SYSTEM_Initialize:
  7939                           	opt stack 22
  7940                           
  7941                           ;incstack = 0
  7942                           ;i2SYSTEM_Initialize@state stored from wreg
  7943  001A46  6E2B               	movwf	i2SYSTEM_Initialize@state,c
  7944                           
  7945                           ;system.c: 68: switch(state)
  7946  001A48  D006               	goto	i2l3214
  7947  001A4A                     i2l3210:
  7948                           
  7949                           ;system.c: 71: LED_Enable(LED_D1);
  7950  001A4A  0E01               	movlw	1
  7951  001A4C  EC86  F00C         	call	i2_LED_Enable
  7952                           
  7953                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  7954  001A50  0E01               	movlw	1
  7955  001A52  EF83  F00D         	goto	i2_BUTTON_Enable
  7956  001A56                     i2l3214:
  7957  001A56  502B               	movf	i2SYSTEM_Initialize@state,w,c
  7958                           
  7959                           ; Switch size 1, requested type "space"
  7960                           ; Number of cases is 3, Range of values is 0 to 2
  7961                           ; switch strategies available:
  7962                           ; Name         Instructions Cycles
  7963                           ; simple_byte           10     6 (average)
  7964                           ;	Chosen strategy is simple_byte
  7965  001A58  E0F8               	bz	i2l3210
  7966  001A5A  D000               	goto	PL106	;call to abstracted procedure
  7967  001A5C                     __end_ofi2_SYSTEM_Initialize:
  7968                           	opt stack 0
  7969  001A5C                     PL106:
  7970                           	opt stack 19
  7971  001A5C  0A01               	xorlw	1	; case 1
  7972  001A5E  A4D8               	btfss	status,2,c
  7973  001A60  0A03               	xorlw	3	; case 2
  7974  001A62  0012               	return	
  7975  001A64                     __end_ofPL106:
  7976                           	opt stack 0
  7977                           tblptru	equ	0xFF8
  7978                           tblptrh	equ	0xFF7
  7979                           tblptrl	equ	0xFF6
  7980                           tablat	equ	0xFF5
  7981                           prodh	equ	0xFF4
  7982                           prodl	equ	0xFF3
  7983                           intcon	equ	0xFF2
  7984                           postinc0	equ	0xFEE
  7985                           wreg	equ	0xFE8
  7986                           indf1	equ	0xFE7
  7987                           postdec1	equ	0xFE5
  7988                           fsr1h	equ	0xFE2
  7989                           fsr1l	equ	0xFE1
  7990                           indf2	equ	0xFDF
  7991                           postinc2	equ	0xFDE
  7992                           postdec2	equ	0xFDD
  7993                           plusw2	equ	0xFDB
  7994                           fsr2h	equ	0xFDA
  7995                           fsr2l	equ	0xFD9
  7996                           status	equ	0xFD8
  7997                           
  7998 ;; *************** function i2_LED_Enable *****************
  7999 ;; Defined at:
  8000 ;;		line 220 in file "picLibs/leds.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  led             1    wreg     enum E2
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;  led             1    0[COMRAM] enum E2
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  1    wreg      void 
  8007 ;; Registers used:
  8008 ;;		wreg, status,2, status,0
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8014 ;;      Params:         0       0       0       0       0
  8015 ;;      Locals:         1       0       0       0       0
  8016 ;;      Temps:          0       0       0       0       0
  8017 ;;      Totals:         1       0       0       0       0
  8018 ;;Total ram usage:        1 bytes
  8019 ;; Hardware stack levels used:    1
  8020 ;; This function calls:
  8021 ;;		Nothing
  8022 ;; This function is called by:
  8023 ;;		i2_SYSTEM_Initialize
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text42
  8028  00190C                     __ptext42:
  8029                           	opt stack 0
  8030  00190C                     i2_LED_Enable:
  8031                           	opt stack 22
  8032                           
  8033                           ;incstack = 0
  8034                           ;i2LED_Enable@led stored from wreg
  8035  00190C  6E2A               	movwf	i2LED_Enable@led,c
  8036                           
  8037                           ;leds.c: 222: switch(led)
  8038  00190E  D008               	goto	i2l3070
  8039  001910                     i2l214:
  8040                           
  8041                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  8042  001910  9094               	bcf	3988,0,c	;volatile
  8043                           
  8044                           ;leds.c: 226: break;
  8045  001912  0012               	return	
  8046  001914                     i2l216:
  8047                           
  8048                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  8049  001914  9294               	bcf	3988,1,c	;volatile
  8050                           
  8051                           ;leds.c: 230: break;
  8052  001916  0012               	return	
  8053  001918                     i2l217:
  8054                           
  8055                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  8056  001918  9494               	bcf	3988,2,c	;volatile
  8057                           
  8058                           ;leds.c: 234: break;
  8059  00191A  0012               	return	
  8060  00191C                     i2l218:
  8061                           
  8062                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  8063  00191C  9694               	bcf	3988,3,c	;volatile
  8064                           
  8065                           ;leds.c: 238: break;
  8066  00191E  0012               	return	
  8067  001920                     i2l3070:
  8068  001920  502A               	movf	i2LED_Enable@led,w,c
  8069                           
  8070                           ; Switch size 1, requested type "space"
  8071                           ; Number of cases is 5, Range of values is 0 to 4
  8072                           ; switch strategies available:
  8073                           ; Name         Instructions Cycles
  8074                           ; simple_byte           16     9 (average)
  8075                           ;	Chosen strategy is simple_byte
  8076  001922  B4D8               	btfsc	status,2,c
  8077  001924  0012               	return	
  8078  001926  0A01               	xorlw	1	; case 1
  8079  001928  E0F3               	bz	i2l214
  8080  00192A  0A03               	xorlw	3	; case 2
  8081  00192C  E0F3               	bz	i2l216
  8082  00192E  0A01               	xorlw	1	; case 3
  8083  001930  E0F3               	bz	i2l217
  8084  001932  0A07               	xorlw	7	; case 4
  8085  001934  E0F3               	bz	i2l218
  8086  001936  0012               	return		;funcret
  8087  001938                     __end_ofi2_LED_Enable:
  8088                           	opt stack 0
  8089                           tblptru	equ	0xFF8
  8090                           tblptrh	equ	0xFF7
  8091                           tblptrl	equ	0xFF6
  8092                           tablat	equ	0xFF5
  8093                           prodh	equ	0xFF4
  8094                           prodl	equ	0xFF3
  8095                           intcon	equ	0xFF2
  8096                           postinc0	equ	0xFEE
  8097                           wreg	equ	0xFE8
  8098                           indf1	equ	0xFE7
  8099                           postdec1	equ	0xFE5
  8100                           fsr1h	equ	0xFE2
  8101                           fsr1l	equ	0xFE1
  8102                           indf2	equ	0xFDF
  8103                           postinc2	equ	0xFDE
  8104                           postdec2	equ	0xFDD
  8105                           plusw2	equ	0xFDB
  8106                           fsr2h	equ	0xFDA
  8107                           fsr2l	equ	0xFD9
  8108                           status	equ	0xFD8
  8109                           
  8110 ;; *************** function i2_BUTTON_Enable *****************
  8111 ;; Defined at:
  8112 ;;		line 85 in file "picLibs/buttons.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  button          1    wreg     enum E3304
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;  button          1    0[COMRAM] enum E3304
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      void 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8126 ;;      Params:         0       0       0       0       0
  8127 ;;      Locals:         1       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0
  8129 ;;      Totals:         1       0       0       0       0
  8130 ;;Total ram usage:        1 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		i2_SYSTEM_Initialize
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text43
  8140  001B06                     __ptext43:
  8141                           	opt stack 0
  8142  001B06                     i2_BUTTON_Enable:
  8143                           	opt stack 22
  8144                           
  8145                           ;incstack = 0
  8146                           ;i2BUTTON_Enable@button stored from wreg
  8147  001B06  6E2A               	movwf	i2BUTTON_Enable@button,c
  8148                           
  8149                           ;buttons.c: 87: switch(button)
  8150  001B08  502A               	movf	i2BUTTON_Enable@button,w,c
  8151                           
  8152                           ; Switch size 1, requested type "space"
  8153                           ; Number of cases is 2, Range of values is 0 to 1
  8154                           ; switch strategies available:
  8155                           ; Name         Instructions Cycles
  8156                           ; simple_byte            7     4 (average)
  8157                           ;	Chosen strategy is simple_byte
  8158  001B0A  D000               	goto	PL118	;call to abstracted procedure
  8159  001B0C                     __end_ofi2_BUTTON_Enable:
  8160                           	opt stack 0
  8161  001B0C                     PL118:
  8162                           	opt stack 19
  8163  001B0C  A4D8               	btfss	status,2,c
  8164  001B0E  0A01               	xorlw	1	; case 1
  8165  001B10  0012               	return	
  8166  001B12                     __end_ofPL118:
  8167                           	opt stack 0
  8168                           tblptru	equ	0xFF8
  8169                           tblptrh	equ	0xFF7
  8170                           tblptrl	equ	0xFF6
  8171                           tablat	equ	0xFF5
  8172                           prodh	equ	0xFF4
  8173                           prodl	equ	0xFF3
  8174                           intcon	equ	0xFF2
  8175                           postinc0	equ	0xFEE
  8176                           wreg	equ	0xFE8
  8177                           indf1	equ	0xFE7
  8178                           postdec1	equ	0xFE5
  8179                           fsr1h	equ	0xFE2
  8180                           fsr1l	equ	0xFE1
  8181                           indf2	equ	0xFDF
  8182                           postinc2	equ	0xFDE
  8183                           postdec2	equ	0xFDD
  8184                           plusw2	equ	0xFDB
  8185                           fsr2h	equ	0xFDA
  8186                           fsr2l	equ	0xFD9
  8187                           status	equ	0xFD8
  8188                           
  8189 ;; *************** function _USBCheckCDCRequest *****************
  8190 ;; Defined at:
  8191 ;;		line 147 in file "picLibs/usb_device_cdc.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 3F/2
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8205 ;;      Params:         0       0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0
  8208 ;;      Totals:         0       0       0       0       0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217                           
  8218                           	psect	text44
  8219  001122                     __ptext44:
  8220                           	opt stack 0
  8221  001122                     _USBCheckCDCRequest:
  8222                           	opt stack 23
  8223                           
  8224                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8225                           
  8226                           ;incstack = 0
  8227  001122  0102               	movlb	2	; () banked
  8228  001124  5130               	movf	48,w,b	;volatile
  8229  001126  0B1F               	andlw	31
  8230  001128  06E8               	decf	wreg,f,c
  8231  00112A  E001               	bz	i2l3148
  8232  00112C  0012               	return	
  8233  00112E                     i2l3148:
  8234                           
  8235                           ; BSR set to: 2
  8236                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8237  00112E  3930               	swapf	48,w,b	;volatile
  8238  001130  32E8               	rrcf	wreg,f,c
  8239  001132  0B03               	andlw	3
  8240  001134  06E8               	decf	wreg,f,c
  8241  001136  E001               	bz	i2l3152
  8242  001138  0012               	return	
  8243  00113A                     i2l3152:
  8244                           
  8245                           ; BSR set to: 2
  8246                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8247                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8248  00113A  5134               	movf	52,w,b	;volatile
  8249  00113C  E027               	bz	i2l3188
  8250                           
  8251                           ; BSR set to: 2
  8252  00113E  0534               	decf	52,w,b	;volatile
  8253  001140  E025               	bz	i2l3188
  8254  001142  0012               	return	
  8255  001144                     i2l3158:
  8256                           
  8257                           ; BSR set to: 2
  8258                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8259  001144  0EA0               	movlw	low _dummy_encapsulated_cmd_response
  8260  001146  6E09               	movwf	_inPipes,c	;volatile
  8261  001148  6A0A               	clrf	_inPipes+1,c	;volatile
  8262                           
  8263                           ; BSR set to: 2
  8264                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8265  00114A  6A0E               	clrf	_inPipes+5,c	;volatile
  8266  00114C  0E08               	movlw	8
  8267  00114E  6E0D               	movwf	_inPipes+4,c	;volatile
  8268                           
  8269                           ; BSR set to: 2
  8270                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8271  001150  800C               	bsf	_inPipes+3,0,c	;volatile
  8272                           
  8273                           ; BSR set to: 2
  8274                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8275  001152  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8276                           
  8277                           ;usb_device_cdc.c: 175: break;
  8278  001154  0C08               	retlw	8
  8279  001156                     i2l3166:
  8280                           
  8281                           ; BSR set to: 2
  8282                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8283  001156  0EA0               	movlw	low _dummy_encapsulated_cmd_response
  8284  001158  6E09               	movwf	_inPipes,c	;volatile
  8285  00115A  6A0A               	clrf	_inPipes+1,c	;volatile
  8286                           
  8287                           ; BSR set to: 2
  8288                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8289  00115C  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8290                           
  8291                           ;usb_device_cdc.c: 180: break;
  8292  00115E  0012               	return	
  8293  001160                     i2l704:
  8294                           
  8295                           ; BSR set to: 2
  8296                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8297  001160  C236 F005          	movff	566,_outPipes+4	;volatile
  8298  001164  C237 F006          	movff	567,_outPipes+5	;volatile
  8299                           
  8300                           ; BSR set to: 2
  8301                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8302  001168  0EA8               	movlw	low _line_coding
  8303  00116A  6E01               	movwf	_outPipes,c	;volatile
  8304                           
  8305                           ; BSR set to: 2
  8306                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8307  00116C  6A07               	clrf	_outPipes+6,c	;volatile
  8308  00116E  6A08               	clrf	_outPipes+7,c	;volatile
  8309                           
  8310                           ; BSR set to: 2
  8311                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8312  001170  8E04               	bsf	_outPipes+3,7,c	;volatile
  8313                           
  8314                           ;usb_device_cdc.c: 189: break;
  8315  001172  0012               	return	
  8316  001174                     i2l3176:
  8317                           
  8318                           ; BSR set to: 2
  8319                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8320  001174  0EA8               	movlw	low _line_coding
  8321  001176  6E09               	movwf	_inPipes,c	;volatile
  8322  001178  6A0A               	clrf	_inPipes+1,c	;volatile
  8323                           
  8324                           ; BSR set to: 2
  8325  00117A  6A0E               	clrf	_inPipes+5,c	;volatile
  8326  00117C  0E07               	movlw	7
  8327  00117E  6E0D               	movwf	_inPipes+4,c	;volatile
  8328                           
  8329                           ; BSR set to: 2
  8330  001180  0EC1               	movlw	193
  8331  001182  6E0C               	movwf	_inPipes+3,c	;volatile
  8332                           
  8333                           ;usb_device_cdc.c: 196: break;
  8334  001184  0CC1               	retlw	193
  8335  001186                     i2l3182:
  8336                           
  8337                           ; BSR set to: 2
  8338                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8339  001186  5132               	movf	50,w,b	;volatile
  8340                           
  8341                           ; BSR set to: 2
  8342                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8343  001188  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8344                           
  8345                           ;usb_device_cdc.c: 232: break;
  8346  00118A  0012               	return	
  8347  00118C                     i2l3188:
  8348                           
  8349                           ; BSR set to: 2
  8350  00118C  5131               	movf	49,w,b	;volatile
  8351                           
  8352                           ; Switch size 1, requested type "space"
  8353                           ; Number of cases is 5, Range of values is 0 to 34
  8354                           ; switch strategies available:
  8355                           ; Name         Instructions Cycles
  8356                           ; simple_byte           16     9 (average)
  8357                           ;	Chosen strategy is simple_byte
  8358  00118E  E0DA               	bz	i2l3158
  8359  001190  0A01               	xorlw	1	; case 1
  8360  001192  E0E1               	bz	i2l3166
  8361  001194  0A21               	xorlw	33	; case 32
  8362  001196  E0E4               	bz	i2l704
  8363  001198  0A01               	xorlw	1	; case 33
  8364  00119A  E0EC               	bz	i2l3176
  8365  00119C  0A03               	xorlw	3	; case 34
  8366  00119E  E0F3               	bz	i2l3182
  8367                           
  8368                           ; BSR set to: 2
  8369  0011A0  0012               	return		;funcret
  8370  0011A2                     __end_of_USBCheckCDCRequest:
  8371                           	opt stack 0
  8372                           tblptru	equ	0xFF8
  8373                           tblptrh	equ	0xFF7
  8374                           tblptrl	equ	0xFF6
  8375                           tablat	equ	0xFF5
  8376                           prodh	equ	0xFF4
  8377                           prodl	equ	0xFF3
  8378                           intcon	equ	0xFF2
  8379                           postinc0	equ	0xFEE
  8380                           wreg	equ	0xFE8
  8381                           indf1	equ	0xFE7
  8382                           postdec1	equ	0xFE5
  8383                           fsr1h	equ	0xFE2
  8384                           fsr1l	equ	0xFE1
  8385                           indf2	equ	0xFDF
  8386                           postinc2	equ	0xFDE
  8387                           postdec2	equ	0xFDD
  8388                           plusw2	equ	0xFDB
  8389                           fsr2h	equ	0xFDA
  8390                           fsr2l	equ	0xFD9
  8391                           status	equ	0xFD8
  8392                           
  8393 ;; *************** function _CDCInitEP *****************
  8394 ;; Defined at:
  8395 ;;		line 294 in file "picLibs/usb_device_cdc.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;		None
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;		None
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 3F/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8409 ;;      Params:         0       0       0       0       0
  8410 ;;      Locals:         0       0       0       0       0
  8411 ;;      Temps:          0       0       0       0       0
  8412 ;;      Totals:         0       0       0       0       0
  8413 ;;Total ram usage:        0 bytes
  8414 ;; Hardware stack levels used:    1
  8415 ;; Hardware stack levels required when called:    2
  8416 ;; This function calls:
  8417 ;;		_USBEnableEndpoint
  8418 ;;		i2_USBTransferOnePacket
  8419 ;; This function is called by:
  8420 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text45
  8425  0015D8                     __ptext45:
  8426                           	opt stack 0
  8427  0015D8                     _CDCInitEP:
  8428                           	opt stack 21
  8429                           
  8430                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8431                           
  8432                           ; BSR set to: 2
  8433                           ;incstack = 0
  8434  0015D8  0100               	movlb	0	; () banked
  8435  0015DA  6BA8               	clrf	_line_coding& (0+255),b
  8436  0015DC  0E4B               	movlw	75
  8437  0015DE  6FA9               	movwf	(_line_coding+1)& (0+255),b
  8438  0015E0  6BAA               	clrf	(_line_coding+2)& (0+255),b
  8439  0015E2  6BAB               	clrf	(_line_coding+3)& (0+255),b
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8443  0015E4  6BAC               	clrf	(_line_coding+4)& (0+255),b
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8447  0015E6  6BAD               	clrf	(_line_coding+5)& (0+255),b
  8448                           
  8449                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8450  0015E8  0E08               	movlw	8
  8451  0015EA  6FAE               	movwf	(_line_coding+6)& (0+255),b
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8455  0015EC  6A1C               	clrf	_cdc_rx_len,c
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8459  0015EE  0E1A               	movlw	26
  8460  0015F0  6E32               	movwf	USBEnableEndpoint@options,c
  8461  0015F2  0E01               	movlw	1
  8462  0015F4  ECED  F00B         	call	_USBEnableEndpoint
  8463                           
  8464                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8465  0015F8  0E1E               	movlw	30
  8466  0015FA  6E32               	movwf	USBEnableEndpoint@options,c
  8467  0015FC  0E02               	movlw	2
  8468  0015FE  ECED  F00B         	call	_USBEnableEndpoint
  8469                           
  8470                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8471  001602  0E00               	movlw	0
  8472  001604  6E2A               	movwf	i2USBTransferOnePacket@dir,c
  8473  001606  0E80               	movlw	128
  8474  001608  6E2B               	movwf	i2USBTransferOnePacket@data,c
  8475  00160A  0E02               	movlw	2
  8476  00160C  6E2C               	movwf	i2USBTransferOnePacket@data+1,c
  8477  00160E  0E0F               	movlw	15
  8478  001610  6E2D               	movwf	i2USBTransferOnePacket@len,c
  8479  001612  0E02               	movlw	2
  8480  001614  EC5B  F006         	call	i2_USBTransferOnePacket
  8481  001618  C02A  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  8482  00161C  C02B  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8483                           
  8484                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8485  001620  0100               	movlb	0	; () banked
  8486  001622  6B76               	clrf	_CDCDataInHandle& (0+255),b
  8487  001624  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8491  001626  6B80               	clrf	_cdc_trf_state& (0+255),b
  8492                           
  8493                           ; BSR set to: 0
  8494  001628  0012               	return		;funcret
  8495  00162A                     __end_of_CDCInitEP:
  8496                           	opt stack 0
  8497                           tblptru	equ	0xFF8
  8498                           tblptrh	equ	0xFF7
  8499                           tblptrl	equ	0xFF6
  8500                           tablat	equ	0xFF5
  8501                           prodh	equ	0xFF4
  8502                           prodl	equ	0xFF3
  8503                           intcon	equ	0xFF2
  8504                           postinc0	equ	0xFEE
  8505                           wreg	equ	0xFE8
  8506                           indf1	equ	0xFE7
  8507                           postdec1	equ	0xFE5
  8508                           fsr1h	equ	0xFE2
  8509                           fsr1l	equ	0xFE1
  8510                           indf2	equ	0xFDF
  8511                           postinc2	equ	0xFDE
  8512                           postdec2	equ	0xFDD
  8513                           plusw2	equ	0xFDB
  8514                           fsr2h	equ	0xFDA
  8515                           fsr2l	equ	0xFD9
  8516                           status	equ	0xFD8
  8517                           
  8518 ;; *************** function i2_USBTransferOnePacket *****************
  8519 ;; Defined at:
  8520 ;;		line 995 in file "picLibs/usb_device.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  ep              1    wreg     unsigned char 
  8523 ;;  dir             1    0[COMRAM] unsigned char 
  8524 ;;  data            2    1[COMRAM] PTR unsigned char 
  8525 ;;		 -> cdc_data_tx(15), cdc_data_rx(15), NULL(0), 
  8526 ;;  len             1    3[COMRAM] unsigned char 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  ep              1    6[COMRAM] unsigned char 
  8529 ;;  USBTransferO    2    7[COMRAM] PTR volatile struct __BD
  8530 ;;		 -> RAM(767), NULL(0), BDT(48), 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  2    0[COMRAM] PTR void 
  8533 ;; Registers used:
  8534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8540 ;;      Params:         4       0       0       0       0
  8541 ;;      Locals:         3       0       0       0       0
  8542 ;;      Temps:          2       0       0       0       0
  8543 ;;      Totals:         9       0       0       0       0
  8544 ;;Total ram usage:        9 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; This function calls:
  8547 ;;		Nothing
  8548 ;; This function is called by:
  8549 ;;		_CDCInitEP
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text46
  8554  000CB6                     __ptext46:
  8555                           	opt stack 0
  8556  000CB6                     i2_USBTransferOnePacket:
  8557                           	opt stack 22
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;incstack = 0
  8561                           ;i2USBTransferOnePacket@ep stored from wreg
  8562  000CB6  6E30               	movwf	i2USBTransferOnePacket@ep,c
  8563                           
  8564                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8565                           ;usb_device.c: 1000: if(dir != 0)
  8566  000CB8  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8567  000CBA  E003               	bz	i2l3076
  8568                           
  8569                           ;usb_device.c: 1001: {
  8570                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8571  000CBC  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8572  000CBE  D849               	call	PL88	;call to abstracted procedure
  8573  000CC0  D002               	goto	L12
  8574  000CC2                     i2l3076:
  8575                           
  8576                           ;usb_device.c: 1005: else
  8577                           ;usb_device.c: 1006: {
  8578                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8579  000CC2  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8580  000CC4  D842               	call	PL82	;call to abstracted procedure
  8581  000CC6                     L12:
  8582  000CC6  6ED9               	movwf	fsr2l,c
  8583  000CC8  6ADA               	clrf	fsr2h,c
  8584  000CCA  CFDE F031          	movff	postinc2,i2USBTransferOnePacket@handle
  8585  000CCE  CFDD F032          	movff	postdec2,i2USBTransferOnePacket@handle+1
  8586                           
  8587                           ;usb_device.c: 1009: }
  8588                           ;usb_device.c: 1013: if(handle == 0)
  8589  000CD2  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8590  000CD4  1032               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  8591  000CD6  E103               	bnz	i2l3082
  8592                           
  8593                           ;usb_device.c: 1014: {
  8594                           ;usb_device.c: 1015: return 0;
  8595  000CD8  6A2A               	clrf	?i2_USBTransferOnePacket,c
  8596  000CDA  6A2B               	clrf	?i2_USBTransferOnePacket+1,c
  8597  000CDC  0012               	return	
  8598  000CDE                     i2l3082:
  8599                           
  8600                           ;usb_device.c: 1016: }
  8601                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8602  000CDE  EE20 F002          	lfsr	2,2
  8603  000CE2  D840               	call	PL104	;call to abstracted procedure
  8604  000CE4  C02B  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  8605  000CE8  C02C  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  8606                           
  8607                           ;usb_device.c: 1030: handle->CNT = len;
  8608  000CEC  EE20 F001          	lfsr	2,1
  8609  000CF0  D839               	call	PL104	;call to abstracted procedure
  8610  000CF2  C02D  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  8611                           
  8612                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8613  000CF6  D831               	call	PL90	;call to abstracted procedure
  8614  000CF8  0E40               	movlw	64
  8615  000CFA  16DF               	andwf	indf2,f,c
  8616                           
  8617                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8618  000CFC  D82E               	call	PL90	;call to abstracted procedure
  8619  000CFE  0E00               	movlw	0
  8620  000D00  86DB               	bsf	plusw2,3,c
  8621                           
  8622                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8623  000D02  D82B               	call	PL90	;call to abstracted procedure
  8624  000D04  8EDB               	bsf	plusw2,7,c
  8625                           
  8626                           ;usb_device.c: 1036: if(dir != 0)
  8627  000D06  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8628  000D08  E006               	bz	i2l3094
  8629                           
  8630                           ;usb_device.c: 1037: {
  8631                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8632  000D0A  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8633  000D0C  ECE2  F005         	call	PL34	;call to abstracted procedure
  8634  000D10  D812               	call	PL54	;call to abstracted procedure
  8635  000D12  0F0F               	addlw	low _pBDTEntryIn
  8636  000D14  D005               	goto	L13
  8637  000D16                     i2l3094:
  8638                           
  8639                           ;usb_device.c: 1041: else
  8640                           ;usb_device.c: 1042: {
  8641                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8642  000D16  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8643  000D18  ECDC  F005         	call	PL30	;call to abstracted procedure
  8644  000D1C  D80C               	call	PL54	;call to abstracted procedure
  8645  000D1E  0F60               	addlw	low _pBDTEntryOut
  8646  000D20                     L13:
  8647  000D20  6ED9               	movwf	fsr2l,c
  8648  000D22  6ADA               	clrf	fsr2h,c
  8649  000D24  C02E  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
  8650  000D28  C02F  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
  8651                           
  8652                           ;usb_device.c: 1045: }
  8653                           ;usb_device.c: 1046: return (void*)handle;
  8654  000D2C  C031  F02A         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  8655  000D30  C032  F02B         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  8656  000D34  0012               	return		;funcret
  8657  000D36                     __end_ofi2_USBTransferOnePacket:
  8658                           	opt stack 0
  8659  000D36                     PL54:
  8660                           	opt stack 22
  8661  000D36  CFDE F02E          	movff	postinc2,??i2_USBTransferOnePacket
  8662  000D3A  CFDD F02F          	movff	postdec2,??i2_USBTransferOnePacket+1
  8663  000D3E  0E04               	movlw	4
  8664  000D40  1A2E               	xorwf	??i2_USBTransferOnePacket,f,c
  8665  000D42  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8666  000D44  0D02               	mullw	2
  8667  000D46  50F3               	movf	prodl,w,c
  8668  000D48  0012               	return	
  8669  000D4A                     __end_ofPL54:
  8670                           	opt stack 0
  8671  000D4A                     PL82:
  8672                           	opt stack 18
  8673  000D4A  0D02               	mullw	2
  8674  000D4C  50F3               	movf	prodl,w,c
  8675  000D4E  0F60               	addlw	low _pBDTEntryOut
  8676  000D50  0012               	return	
  8677  000D52                     __end_ofPL82:
  8678                           	opt stack 0
  8679  000D52                     PL88:
  8680                           	opt stack 18
  8681  000D52  0D02               	mullw	2
  8682  000D54  50F3               	movf	prodl,w,c
  8683  000D56  0F0F               	addlw	low _pBDTEntryIn
  8684  000D58  0012               	return	
  8685  000D5A                     __end_ofPL88:
  8686                           	opt stack 0
  8687  000D5A                     PL90:
  8688                           	opt stack 22
  8689  000D5A  C031  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  8690  000D5E  C032  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  8691  000D62  0012               	return	
  8692  000D64                     __end_ofPL90:
  8693                           	opt stack 0
  8694  000D64                     PL104:
  8695                           	opt stack 22
  8696  000D64  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8697  000D66  26D9               	addwf	fsr2l,f,c
  8698  000D68  5032               	movf	i2USBTransferOnePacket@handle+1,w,c
  8699  000D6A  22DA               	addwfc	fsr2h,f,c
  8700  000D6C  0012               	return	
  8701  000D6E                     __end_ofPL104:
  8702                           	opt stack 0
  8703                           tblptru	equ	0xFF8
  8704                           tblptrh	equ	0xFF7
  8705                           tblptrl	equ	0xFF6
  8706                           tablat	equ	0xFF5
  8707                           prodh	equ	0xFF4
  8708                           prodl	equ	0xFF3
  8709                           intcon	equ	0xFF2
  8710                           postinc0	equ	0xFEE
  8711                           wreg	equ	0xFE8
  8712                           indf1	equ	0xFE7
  8713                           postdec1	equ	0xFE5
  8714                           fsr1h	equ	0xFE2
  8715                           fsr1l	equ	0xFE1
  8716                           indf2	equ	0xFDF
  8717                           postinc2	equ	0xFDE
  8718                           postdec2	equ	0xFDD
  8719                           plusw2	equ	0xFDB
  8720                           fsr2h	equ	0xFDA
  8721                           fsr2l	equ	0xFD9
  8722                           status	equ	0xFD8
  8723                           
  8724 ;; *************** function _USBEnableEndpoint *****************
  8725 ;; Defined at:
  8726 ;;		line 878 in file "picLibs/usb_device.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  ep              1    wreg     unsigned char 
  8729 ;;  options         1    8[COMRAM] unsigned char 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  ep              1   11[COMRAM] unsigned char 
  8732 ;;  p               2    9[COMRAM] PTR unsigned char 
  8733 ;;		 -> UEP0(1), 
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8743 ;;      Params:         1       0       0       0       0
  8744 ;;      Locals:         3       0       0       0       0
  8745 ;;      Temps:          0       0       0       0       0
  8746 ;;      Totals:         4       0       0       0       0
  8747 ;;Total ram usage:        4 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:    1
  8750 ;; This function calls:
  8751 ;;		_USBConfigureEndpoint
  8752 ;; This function is called by:
  8753 ;;		_CDCInitEP
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text47
  8758  0017DA                     __ptext47:
  8759                           	opt stack 0
  8760  0017DA                     _USBEnableEndpoint:
  8761                           	opt stack 21
  8762                           
  8763                           ;incstack = 0
  8764                           ;USBEnableEndpoint@ep stored from wreg
  8765  0017DA  6E35               	movwf	USBEnableEndpoint@ep,c
  8766                           
  8767                           ;usb_device.c: 880: unsigned char* p;
  8768                           ;usb_device.c: 884: if(options & 0x04)
  8769  0017DC  A432               	btfss	USBEnableEndpoint@options,2,c
  8770  0017DE  D004               	goto	i2l3052
  8771                           
  8772                           ;usb_device.c: 885: {
  8773                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8774  0017E0  6A2A               	clrf	USBConfigureEndpoint@direction,c
  8775  0017E2  5035               	movf	USBEnableEndpoint@ep,w,c
  8776  0017E4  ECD1  F008         	call	_USBConfigureEndpoint
  8777  0017E8                     i2l3052:
  8778                           
  8779                           ;usb_device.c: 887: }
  8780                           ;usb_device.c: 888: if(options & 0x02)
  8781  0017E8  A232               	btfss	USBEnableEndpoint@options,1,c
  8782  0017EA  D005               	goto	i2l3056
  8783                           
  8784                           ;usb_device.c: 889: {
  8785                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8786  0017EC  0E01               	movlw	1
  8787  0017EE  6E2A               	movwf	USBConfigureEndpoint@direction,c
  8788  0017F0  5035               	movf	USBEnableEndpoint@ep,w,c
  8789  0017F2  ECD1  F008         	call	_USBConfigureEndpoint
  8790  0017F6                     i2l3056:
  8791                           
  8792                           ;usb_device.c: 891: }
  8793                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8794  0017F6  0E53               	movlw	83
  8795  0017F8  2435               	addwf	USBEnableEndpoint@ep,w,c
  8796  0017FA  6E33               	movwf	USBEnableEndpoint@p,c
  8797  0017FC  6A34               	clrf	USBEnableEndpoint@p+1,c
  8798  0017FE  0E0F               	movlw	15
  8799  001800  2234               	addwfc	USBEnableEndpoint@p+1,f,c
  8800                           
  8801                           ;usb_device.c: 901: *p = options;
  8802  001802  C033  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8803  001806  C034  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8804  00180A  C032  FFDF         	movff	USBEnableEndpoint@options,indf2
  8805  00180E  0C0F               	retlw	15	;funcret
  8806  001810                     __end_of_USBEnableEndpoint:
  8807                           	opt stack 0
  8808                           tblptru	equ	0xFF8
  8809                           tblptrh	equ	0xFF7
  8810                           tblptrl	equ	0xFF6
  8811                           tablat	equ	0xFF5
  8812                           prodh	equ	0xFF4
  8813                           prodl	equ	0xFF3
  8814                           intcon	equ	0xFF2
  8815                           postinc0	equ	0xFEE
  8816                           wreg	equ	0xFE8
  8817                           indf1	equ	0xFE7
  8818                           postdec1	equ	0xFE5
  8819                           fsr1h	equ	0xFE2
  8820                           fsr1l	equ	0xFE1
  8821                           indf2	equ	0xFDF
  8822                           postinc2	equ	0xFDE
  8823                           postdec2	equ	0xFDD
  8824                           plusw2	equ	0xFDB
  8825                           fsr2h	equ	0xFDA
  8826                           fsr2l	equ	0xFD9
  8827                           status	equ	0xFD8
  8828                           
  8829 ;; *************** function _USBConfigureEndpoint *****************
  8830 ;; Defined at:
  8831 ;;		line 1543 in file "picLibs/usb_device.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;  EPNum           1    wreg     unsigned char 
  8834 ;;  direction       1    0[COMRAM] unsigned char 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  EPNum           1    5[COMRAM] unsigned char 
  8837 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  8838 ;;		 -> BDT(48), 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8848 ;;      Params:         1       0       0       0       0
  8849 ;;      Locals:         3       0       0       0       0
  8850 ;;      Temps:          4       0       0       0       0
  8851 ;;      Totals:         8       0       0       0       0
  8852 ;;Total ram usage:        8 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; This function calls:
  8855 ;;		Nothing
  8856 ;; This function is called by:
  8857 ;;		_USBEnableEndpoint
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text48
  8862  0011A2                     __ptext48:
  8863                           	opt stack 0
  8864  0011A2                     _USBConfigureEndpoint:
  8865                           	opt stack 21
  8866                           
  8867                           ;incstack = 0
  8868                           ;USBConfigureEndpoint@EPNum stored from wreg
  8869  0011A2  6E2F               	movwf	USBConfigureEndpoint@EPNum,c
  8870                           
  8871                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8872                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8873  0011A4  6A30               	clrf	USBConfigureEndpoint@handle,c
  8874  0011A6  0E02               	movlw	2
  8875  0011A8  6E31               	movwf	USBConfigureEndpoint@handle+1,c
  8876                           
  8877                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8878  0011AA  502A               	movf	USBConfigureEndpoint@direction,w,c
  8879  0011AC  6E2B               	movwf	??_USBConfigureEndpoint& (0+255),c
  8880  0011AE  6A2C               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8881  0011B0  90D8               	bcf	status,0,c
  8882  0011B2  362B               	rlcf	??_USBConfigureEndpoint,f,c
  8883  0011B4  362C               	rlcf	??_USBConfigureEndpoint+1,f,c
  8884  0011B6  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8885  0011B8  6E2D               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8886  0011BA  6A2E               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8887  0011BC  D824               	call	PL78	;call to abstracted procedure
  8888  0011BE  502B               	movf	??_USBConfigureEndpoint,w,c
  8889  0011C0  262D               	addwf	??_USBConfigureEndpoint+2,f,c
  8890  0011C2  502C               	movf	??_USBConfigureEndpoint+1,w,c
  8891  0011C4  222E               	addwfc	??_USBConfigureEndpoint+3,f,c
  8892  0011C6  D81F               	call	PL78	;call to abstracted procedure
  8893  0011C8  502D               	movf	??_USBConfigureEndpoint+2,w,c
  8894  0011CA  2630               	addwf	USBConfigureEndpoint@handle,f,c
  8895  0011CC  502E               	movf	??_USBConfigureEndpoint+3,w,c
  8896  0011CE  2231               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8897                           
  8898                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8899  0011D0  D821               	call	PL108	;call to abstracted procedure
  8900  0011D2  9EDF               	bcf	indf2,7,c
  8901                           
  8902                           ;usb_device.c: 1557: if(direction == 0)
  8903  0011D4  502A               	movf	USBConfigureEndpoint@direction,w,c
  8904  0011D6  E104               	bnz	i2l3030
  8905                           
  8906                           ;usb_device.c: 1558: {
  8907                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8908  0011D8  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8909  0011DA  ECA5  F006         	call	PL82	;call to abstracted procedure
  8910  0011DE  D003               	goto	L14
  8911  0011E0                     i2l3030:
  8912                           
  8913                           ;usb_device.c: 1561: else
  8914                           ;usb_device.c: 1562: {
  8915                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8916  0011E0  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8917  0011E2  ECA9  F006         	call	PL88	;call to abstracted procedure
  8918  0011E6                     L14:
  8919  0011E6  6ED9               	movwf	fsr2l,c
  8920  0011E8  6ADA               	clrf	fsr2h,c
  8921  0011EA  C030  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8922  0011EE  C031  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8923                           
  8924                           ;usb_device.c: 1564: }
  8925                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8926  0011F2  D810               	call	PL108	;call to abstracted procedure
  8927  0011F4  9CDF               	bcf	indf2,6,c
  8928                           
  8929                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8930  0011F6  EE20 F004          	lfsr	2,4
  8931  0011FA  5030               	movf	USBConfigureEndpoint@handle,w,c
  8932  0011FC  26D9               	addwf	fsr2l,f,c
  8933  0011FE  5031               	movf	USBConfigureEndpoint@handle+1,w,c
  8934  001200  22DA               	addwfc	fsr2h,f,c
  8935  001202  8CDF               	bsf	indf2,6,c
  8936  001204  0012               	return		;funcret
  8937  001206                     __end_of_USBConfigureEndpoint:
  8938                           	opt stack 0
  8939  001206                     PL78:
  8940                           	opt stack 21
  8941  001206  90D8               	bcf	status,0,c
  8942  001208  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8943  00120A  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8944  00120C  90D8               	bcf	status,0,c
  8945  00120E  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8946  001210  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8947  001212  0012               	return	
  8948  001214                     __end_ofPL78:
  8949                           	opt stack 0
  8950  001214                     PL108:
  8951                           	opt stack 21
  8952  001214  C030  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8953  001218  C031  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8954  00121C  0012               	return	
  8955  00121E                     __end_ofPL108:
  8956                           	opt stack 0
  8957                           tblptru	equ	0xFF8
  8958                           tblptrh	equ	0xFF7
  8959                           tblptrl	equ	0xFF6
  8960                           tablat	equ	0xFF5
  8961                           prodh	equ	0xFF4
  8962                           prodl	equ	0xFF3
  8963                           intcon	equ	0xFF2
  8964                           postinc0	equ	0xFEE
  8965                           wreg	equ	0xFE8
  8966                           indf1	equ	0xFE7
  8967                           postdec1	equ	0xFE5
  8968                           fsr1h	equ	0xFE2
  8969                           fsr1l	equ	0xFE1
  8970                           indf2	equ	0xFDF
  8971                           postinc2	equ	0xFDE
  8972                           postdec2	equ	0xFDD
  8973                           plusw2	equ	0xFDB
  8974                           fsr2h	equ	0xFDA
  8975                           fsr2l	equ	0xFD9
  8976                           status	equ	0xFD8
  8977                           
  8978 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8979 ;; Defined at:
  8980 ;;		line 50 in file "picLibs/app_led_usb_status.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;		None
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8994 ;;      Params:         0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0
  8997 ;;      Totals:         0       0       0       0       0
  8998 ;;Total ram usage:        0 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    1
  9001 ;; This function calls:
  9002 ;;		_LED_Off
  9003 ;;		_LED_On
  9004 ;; This function is called by:
  9005 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text49
  9010  001376                     __ptext49:
  9011                           	opt stack 0
  9012  001376                     _APP_LEDUpdateUSBStatus:
  9013                           	opt stack 22
  9014                           
  9015                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  9016                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  9017                           
  9018                           ;incstack = 0
  9019  001376  A264               	btfss	3940,1,c	;volatile
  9020  001378  D02E               	goto	i2l3140
  9021                           
  9022                           ;app_led_usb_status.c: 55: {
  9023                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  9024  00137A  0E01               	movlw	1
  9025  00137C  EFB2  F00C         	goto	_LED_Off
  9026  001380                     i2l3114:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  9030  001380  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9031  001382  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9032  001384  E104               	bnz	i2l3118
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;app_led_usb_status.c: 66: {
  9036                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  9037  001386  0E01               	movlw	1
  9038  001388  EC9C  F00C         	call	_LED_On
  9039                           
  9040                           ;app_led_usb_status.c: 68: }
  9041  00138C  D029               	goto	i2l3142
  9042  00138E                     i2l3118:
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  9046  00138E  0E4B               	movlw	75
  9047  001390  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9048  001392  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9049  001394  E104               	bnz	i2l3122
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;app_led_usb_status.c: 70: {
  9053                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  9054  001396  0E01               	movlw	1
  9055  001398  ECB2  F00C         	call	_LED_Off
  9056                           
  9057                           ;app_led_usb_status.c: 72: }
  9058  00139C  D021               	goto	i2l3142
  9059  00139E                     i2l3122:
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  9063  00139E  501A               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9064  0013A0  E103               	bnz	i2u185_40
  9065  0013A2  0E97               	movlw	151
  9066  0013A4  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9067  0013A6  E31C               	bnc	i2l3142
  9068  0013A8                     i2u185_40:
  9069                           
  9070                           ; BSR set to: 0
  9071                           ;app_led_usb_status.c: 74: {
  9072                           ;app_led_usb_status.c: 75: ledCount = 0;
  9073  0013A8  6A19               	clrf	APP_LEDUpdateUSBStatus@ledCount,c
  9074  0013AA  6A1A               	clrf	APP_LEDUpdateUSBStatus@ledCount+1,c
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;app_led_usb_status.c: 76: }
  9078                           ;app_led_usb_status.c: 77: break;
  9079  0013AC  D019               	goto	i2l3142
  9080  0013AE                     i2l3126:
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  9084  0013AE  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9085  0013B0  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9086  0013B2  E104               	bnz	i2l3130
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;app_led_usb_status.c: 83: {
  9090                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  9091  0013B4  0E01               	movlw	1
  9092  0013B6  EC9C  F00C         	call	_LED_On
  9093                           
  9094                           ;app_led_usb_status.c: 85: }
  9095  0013BA  D012               	goto	i2l3142
  9096  0013BC                     i2l3130:
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  9100  0013BC  0E32               	movlw	50
  9101  0013BE  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9102  0013C0  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9103  0013C2  E104               	bnz	i2l3134
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;app_led_usb_status.c: 87: {
  9107                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  9108  0013C4  0E01               	movlw	1
  9109  0013C6  ECB2  F00C         	call	_LED_Off
  9110                           
  9111                           ;app_led_usb_status.c: 89: }
  9112  0013CA  D00A               	goto	i2l3142
  9113  0013CC                     i2l3134:
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  9117  0013CC  0EB7               	movlw	183
  9118  0013CE  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9119  0013D0  0E03               	movlw	3
  9120  0013D2  581A               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9121  0013D4  D7E8               	goto	L15
  9122  0013D6                     i2l3140:
  9123  0013D6  0100               	movlb	0	; () banked
  9124  0013D8  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  9125                           
  9126                           ; Switch size 1, requested type "space"
  9127                           ; Number of cases is 1, Range of values is 32 to 32
  9128                           ; switch strategies available:
  9129                           ; Name         Instructions Cycles
  9130                           ; simple_byte            4     3 (average)
  9131                           ;	Chosen strategy is simple_byte
  9132  0013DA  0A20               	xorlw	32	; case 32
  9133  0013DC  E0D1               	bz	i2l3114
  9134  0013DE  D7E7               	goto	i2l3126
  9135  0013E0                     i2l3142:
  9136                           
  9137                           ;app_led_usb_status.c: 98: ledCount++;
  9138  0013E0  4A19               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
  9139  0013E2  2A1A               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
  9140  0013E4  0012               	return		;funcret
  9141  0013E6                     __end_of_APP_LEDUpdateUSBStatus:
  9142                           	opt stack 0
  9143                           tblptru	equ	0xFF8
  9144                           tblptrh	equ	0xFF7
  9145                           tblptrl	equ	0xFF6
  9146                           tablat	equ	0xFF5
  9147                           prodh	equ	0xFF4
  9148                           prodl	equ	0xFF3
  9149                           intcon	equ	0xFF2
  9150                           postinc0	equ	0xFEE
  9151                           wreg	equ	0xFE8
  9152                           indf1	equ	0xFE7
  9153                           postdec1	equ	0xFE5
  9154                           fsr1h	equ	0xFE2
  9155                           fsr1l	equ	0xFE1
  9156                           indf2	equ	0xFDF
  9157                           postinc2	equ	0xFDE
  9158                           postdec2	equ	0xFDD
  9159                           plusw2	equ	0xFDB
  9160                           fsr2h	equ	0xFDA
  9161                           fsr2l	equ	0xFD9
  9162                           status	equ	0xFD8
  9163                           
  9164 ;; *************** function _LED_On *****************
  9165 ;; Defined at:
  9166 ;;		line 59 in file "picLibs/leds.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  led             1    wreg     enum E2
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  led             1    0[COMRAM] enum E2
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg, status,2, status,0
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9180 ;;      Params:         0       0       0       0       0
  9181 ;;      Locals:         1       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0
  9183 ;;      Totals:         1       0       0       0       0
  9184 ;;Total ram usage:        1 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; This function calls:
  9187 ;;		Nothing
  9188 ;; This function is called by:
  9189 ;;		_APP_LEDUpdateUSBStatus
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           	psect	text50
  9194  001938                     __ptext50:
  9195                           	opt stack 0
  9196  001938                     _LED_On:
  9197                           	opt stack 22
  9198                           
  9199                           ;incstack = 0
  9200                           ;LED_On@led stored from wreg
  9201  001938  6E2A               	movwf	LED_On@led,c
  9202                           
  9203                           ;leds.c: 61: switch(led)
  9204  00193A  D008               	goto	i2l3046
  9205  00193C                     i2l174:
  9206                           
  9207                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9208  00193C  808B               	bsf	3979,0,c	;volatile
  9209                           
  9210                           ;leds.c: 65: break;
  9211  00193E  0012               	return	
  9212  001940                     i2l176:
  9213                           
  9214                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9215  001940  828B               	bsf	3979,1,c	;volatile
  9216                           
  9217                           ;leds.c: 69: break;
  9218  001942  0012               	return	
  9219  001944                     i2l177:
  9220                           
  9221                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9222  001944  848B               	bsf	3979,2,c	;volatile
  9223                           
  9224                           ;leds.c: 73: break;
  9225  001946  0012               	return	
  9226  001948                     i2l178:
  9227                           
  9228                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9229  001948  868B               	bsf	3979,3,c	;volatile
  9230                           
  9231                           ;leds.c: 77: break;
  9232  00194A  0012               	return	
  9233  00194C                     i2l3046:
  9234  00194C  502A               	movf	LED_On@led,w,c
  9235                           
  9236                           ; Switch size 1, requested type "space"
  9237                           ; Number of cases is 5, Range of values is 0 to 4
  9238                           ; switch strategies available:
  9239                           ; Name         Instructions Cycles
  9240                           ; simple_byte           16     9 (average)
  9241                           ;	Chosen strategy is simple_byte
  9242  00194E  B4D8               	btfsc	status,2,c
  9243  001950  0012               	return	
  9244  001952  0A01               	xorlw	1	; case 1
  9245  001954  E0F3               	bz	i2l174
  9246  001956  0A03               	xorlw	3	; case 2
  9247  001958  E0F3               	bz	i2l176
  9248  00195A  0A01               	xorlw	1	; case 3
  9249  00195C  E0F3               	bz	i2l177
  9250  00195E  0A07               	xorlw	7	; case 4
  9251  001960  E0F3               	bz	i2l178
  9252  001962  0012               	return		;funcret
  9253  001964                     __end_of_LED_On:
  9254                           	opt stack 0
  9255                           tblptru	equ	0xFF8
  9256                           tblptrh	equ	0xFF7
  9257                           tblptrl	equ	0xFF6
  9258                           tablat	equ	0xFF5
  9259                           prodh	equ	0xFF4
  9260                           prodl	equ	0xFF3
  9261                           intcon	equ	0xFF2
  9262                           postinc0	equ	0xFEE
  9263                           wreg	equ	0xFE8
  9264                           indf1	equ	0xFE7
  9265                           postdec1	equ	0xFE5
  9266                           fsr1h	equ	0xFE2
  9267                           fsr1l	equ	0xFE1
  9268                           indf2	equ	0xFDF
  9269                           postinc2	equ	0xFDE
  9270                           postdec2	equ	0xFDD
  9271                           plusw2	equ	0xFDB
  9272                           fsr2h	equ	0xFDA
  9273                           fsr2l	equ	0xFD9
  9274                           status	equ	0xFD8
  9275                           
  9276 ;; *************** function _LED_Off *****************
  9277 ;; Defined at:
  9278 ;;		line 100 in file "picLibs/leds.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;  led             1    wreg     enum E2
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  led             1    0[COMRAM] enum E2
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      void 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9292 ;;      Params:         0       0       0       0       0
  9293 ;;      Locals:         1       0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0
  9295 ;;      Totals:         1       0       0       0       0
  9296 ;;Total ram usage:        1 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		_APP_LEDUpdateUSBStatus
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text51
  9306  001964                     __ptext51:
  9307                           	opt stack 0
  9308  001964                     _LED_Off:
  9309                           	opt stack 22
  9310                           
  9311                           ;incstack = 0
  9312                           ;LED_Off@led stored from wreg
  9313  001964  6E2A               	movwf	LED_Off@led,c
  9314                           
  9315                           ;leds.c: 102: switch(led)
  9316  001966  D008               	goto	i2l3040
  9317  001968                     i2l184:
  9318                           
  9319                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9320  001968  908B               	bcf	3979,0,c	;volatile
  9321                           
  9322                           ;leds.c: 106: break;
  9323  00196A  0012               	return	
  9324  00196C                     i2l186:
  9325                           
  9326                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9327  00196C  928B               	bcf	3979,1,c	;volatile
  9328                           
  9329                           ;leds.c: 110: break;
  9330  00196E  0012               	return	
  9331  001970                     i2l187:
  9332                           
  9333                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9334  001970  948B               	bcf	3979,2,c	;volatile
  9335                           
  9336                           ;leds.c: 114: break;
  9337  001972  0012               	return	
  9338  001974                     i2l188:
  9339                           
  9340                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9341  001974  968B               	bcf	3979,3,c	;volatile
  9342                           
  9343                           ;leds.c: 118: break;
  9344  001976  0012               	return	
  9345  001978                     i2l3040:
  9346  001978  502A               	movf	LED_Off@led,w,c
  9347                           
  9348                           ; Switch size 1, requested type "space"
  9349                           ; Number of cases is 5, Range of values is 0 to 4
  9350                           ; switch strategies available:
  9351                           ; Name         Instructions Cycles
  9352                           ; simple_byte           16     9 (average)
  9353                           ;	Chosen strategy is simple_byte
  9354  00197A  B4D8               	btfsc	status,2,c
  9355  00197C  0012               	return	
  9356  00197E  0A01               	xorlw	1	; case 1
  9357  001980  E0F3               	bz	i2l184
  9358  001982  0A03               	xorlw	3	; case 2
  9359  001984  E0F3               	bz	i2l186
  9360  001986  0A01               	xorlw	1	; case 3
  9361  001988  E0F3               	bz	i2l187
  9362  00198A  0A07               	xorlw	7	; case 4
  9363  00198C  E0F3               	bz	i2l188
  9364  00198E  0012               	return		;funcret
  9365  001990                     __end_of_LED_Off:
  9366                           	opt stack 0
  9367                           tblptru	equ	0xFF8
  9368                           tblptrh	equ	0xFF7
  9369                           tblptrl	equ	0xFF6
  9370                           tablat	equ	0xFF5
  9371                           prodh	equ	0xFF4
  9372                           prodl	equ	0xFF3
  9373                           intcon	equ	0xFF2
  9374                           postinc0	equ	0xFEE
  9375                           wreg	equ	0xFE8
  9376                           indf1	equ	0xFE7
  9377                           postdec1	equ	0xFE5
  9378                           fsr1h	equ	0xFE2
  9379                           fsr1l	equ	0xFE1
  9380                           indf2	equ	0xFDF
  9381                           postinc2	equ	0xFDE
  9382                           postdec2	equ	0xFDD
  9383                           plusw2	equ	0xFDB
  9384                           fsr2h	equ	0xFDA
  9385                           fsr2l	equ	0xFD9
  9386                           status	equ	0xFD8
  9387                           
  9388 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  9389 ;; Defined at:
  9390 ;;		line 53 in file "picLibs/app_device_cdc_basic.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;		None
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;		None
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  1    wreg      void 
  9397 ;; Registers used:
  9398 ;;		wreg, status,2
  9399 ;; Tracked objects:
  9400 ;;		On entry : 3F/0
  9401 ;;		On exit  : 3F/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9404 ;;      Params:         0       0       0       0       0
  9405 ;;      Locals:         0       0       0       0       0
  9406 ;;      Temps:          0       0       0       0       0
  9407 ;;      Totals:         0       0       0       0       0
  9408 ;;Total ram usage:        0 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; This function calls:
  9411 ;;		Nothing
  9412 ;; This function is called by:
  9413 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9414 ;; This function uses a non-reentrant model
  9415 ;;
  9416                           
  9417                           	psect	text52
  9418  001AB6                     __ptext52:
  9419                           	opt stack 0
  9420  001AB6                     _APP_DeviceCDCBasicDemoInitialize:
  9421                           	opt stack 23
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;app_device_cdc_basic.c: 55: line_coding.bCharFormat = 0;
  9425                           
  9426                           ;incstack = 0
  9427  001AB6  6BAC               	clrf	(_line_coding+4)& (0+255),b
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;app_device_cdc_basic.c: 56: line_coding.bDataBits = 8;
  9431  001AB8  0E08               	movlw	8
  9432  001ABA  6FAE               	movwf	(_line_coding+6)& (0+255),b
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;app_device_cdc_basic.c: 57: line_coding.bParityType = 0;
  9436  001ABC  6BAD               	clrf	(_line_coding+5)& (0+255),b
  9437                           
  9438                           ;app_device_cdc_basic.c: 58: line_coding.dwDTERate = 9600;
  9439  001ABE  0E80               	movlw	128
  9440  001AC0  6FA8               	movwf	_line_coding& (0+255),b
  9441  001AC2  0E25               	movlw	37
  9442  001AC4  6FA9               	movwf	(_line_coding+1)& (0+255),b
  9443  001AC6  0E00               	movlw	0
  9444  001AC8  6BAA               	clrf	(_line_coding+2)& (0+255),b
  9445  001ACA  6BAB               	clrf	(_line_coding+3)& (0+255),b
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;app_device_cdc_basic.c: 60: buttonPressed = 0;
  9449  001ACC  6B7F               	clrf	_buttonPressed& (0+255),b
  9450                           
  9451                           ; BSR set to: 0
  9452  001ACE  0012               	return		;funcret
  9453  001AD0                     __end_of_APP_DeviceCDCBasicDemoInitialize:
  9454                           	opt stack 0
  9455                           tblptru	equ	0xFF8
  9456                           tblptrh	equ	0xFF7
  9457                           tblptrl	equ	0xFF6
  9458                           tablat	equ	0xFF5
  9459                           prodh	equ	0xFF4
  9460                           prodl	equ	0xFF3
  9461                           intcon	equ	0xFF2
  9462                           postinc0	equ	0xFEE
  9463                           wreg	equ	0xFE8
  9464                           indf1	equ	0xFE7
  9465                           postdec1	equ	0xFE5
  9466                           fsr1h	equ	0xFE2
  9467                           fsr1l	equ	0xFE1
  9468                           indf2	equ	0xFDF
  9469                           postinc2	equ	0xFDE
  9470                           postdec2	equ	0xFDD
  9471                           plusw2	equ	0xFDB
  9472                           fsr2h	equ	0xFDA
  9473                           fsr2l	equ	0xFD9
  9474                           status	equ	0xFD8
  9475                           
  9476 ;; *************** function _USBCtrlTrfOutHandler *****************
  9477 ;; Defined at:
  9478 ;;		line 2538 in file "picLibs/usb_device.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;		None
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;		None
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  1    wreg      void 
  9485 ;; Registers used:
  9486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9487 ;; Tracked objects:
  9488 ;;		On entry : 3F/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9492 ;;      Params:         0       0       0       0       0
  9493 ;;      Locals:         0       0       0       0       0
  9494 ;;      Temps:          0       0       0       0       0
  9495 ;;      Totals:         0       0       0       0       0
  9496 ;;Total ram usage:        0 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    2
  9499 ;; This function calls:
  9500 ;;		_USBCtrlTrfRxService
  9501 ;; This function is called by:
  9502 ;;		_USBCtrlEPService
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text53
  9507  001A26                     __ptext53:
  9508                           	opt stack 0
  9509  001A26                     _USBCtrlTrfOutHandler:
  9510                           	opt stack 21
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;incstack = 0
  9517  001A26  0E02               	movlw	2
  9518  001A28  1826               	xorwf	_controlTransferState,w,c	;volatile
  9519  001A2A  E102               	bnz	i2l579
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;usb_device.c: 2541: {
  9523                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9524  001A2C  EFFC  F005         	goto	_USBCtrlTrfRxService	;wreg free
  9525  001A30                     i2l579:
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;usb_device.c: 2544: else
  9529                           ;usb_device.c: 2545: {
  9530                           ;usb_device.c: 2548: controlTransferState = 0;
  9531  001A30  6A26               	clrf	_controlTransferState,c	;volatile
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9535  001A32  5022               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9536  001A34  E106               	bnz	i2l581
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;usb_device.c: 2556: {
  9540                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9541                           
  9542                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9546  001A36  ECED  F007         	call	PL2	;call to abstracted procedure
  9547  001A3A  0E0C               	movlw	12
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9551  001A3C  EC44  F006         	call	PL14	;call to abstracted procedure
  9552                           
  9553                           ;usb_device.c: 2561: }
  9554  001A40  0C00               	retlw	0
  9555  001A42                     i2l581:
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;usb_device.c: 2562: else
  9559                           ;usb_device.c: 2563: {
  9560                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9561  001A42  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9562  001A44  0012               	return		;funcret
  9563  001A46                     __end_of_USBCtrlTrfOutHandler:
  9564                           	opt stack 0
  9565                           tblptru	equ	0xFF8
  9566                           tblptrh	equ	0xFF7
  9567                           tblptrl	equ	0xFF6
  9568                           tablat	equ	0xFF5
  9569                           prodh	equ	0xFF4
  9570                           prodl	equ	0xFF3
  9571                           intcon	equ	0xFF2
  9572                           postinc0	equ	0xFEE
  9573                           wreg	equ	0xFE8
  9574                           indf1	equ	0xFE7
  9575                           postdec1	equ	0xFE5
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           indf2	equ	0xFDF
  9579                           postinc2	equ	0xFDE
  9580                           postdec2	equ	0xFDD
  9581                           plusw2	equ	0xFDB
  9582                           fsr2h	equ	0xFDA
  9583                           fsr2l	equ	0xFD9
  9584                           status	equ	0xFD8
  9585                           
  9586 ;; *************** function _USBCtrlTrfRxService *****************
  9587 ;; Defined at:
  9588 ;;		line 1852 in file "picLibs/usb_device.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;		None
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  byteToRead      1    1[COMRAM] unsigned char 
  9593 ;;  i               1    0[COMRAM] unsigned char 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      void 
  9596 ;; Registers used:
  9597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9598 ;; Tracked objects:
  9599 ;;		On entry : 3F/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9603 ;;      Params:         0       0       0       0       0
  9604 ;;      Locals:         2       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0
  9606 ;;      Totals:         2       0       0       0       0
  9607 ;;Total ram usage:        2 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; Hardware stack levels required when called:    1
  9610 ;; This function calls:
  9611 ;;		_USBCtrlEPAllowStatusStage
  9612 ;; This function is called by:
  9613 ;;		_USBCtrlTrfOutHandler
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text54
  9618  000BF8                     __ptext54:
  9619                           	opt stack 0
  9620  000BF8                     _USBCtrlTrfRxService:
  9621                           	opt stack 21
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;usb_device.c: 1854: uint8_t byteToRead;
  9625                           ;usb_device.c: 1855: uint8_t i;
  9626                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9627                           
  9628                           ;incstack = 0
  9629  000BF8  EE20 F001          	lfsr	2,1
  9630  000BFC  EC41  F009         	call	PL66	;call to abstracted procedure
  9631  000C00  50DF               	movf	indf2,w,c
  9632  000C02  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9636  000C04  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9637  000C06  5C05               	subwf	_outPipes+4,w,c	;volatile
  9638  000C08  0E00               	movlw	0
  9639  000C0A  5806               	subwfb	_outPipes+5,w,c	;volatile
  9640  000C0C  E202               	bc	i2l3582
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;usb_device.c: 1866: {
  9644                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9645  000C0E  C005  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9646  000C12                     i2l3582:
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;usb_device.c: 1868: }
  9650                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9651  000C12  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9652  000C14  5E05               	subwf	_outPipes+4,f,c	;volatile
  9653  000C16  0E00               	movlw	0
  9654  000C18  5A06               	subwfb	_outPipes+5,f,c	;volatile
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9658  000C1A  6A2A               	clrf	USBCtrlTrfRxService@i,c
  9659  000C1C  D007               	goto	i2l3592
  9660  000C1E                     i2l3586:
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;usb_device.c: 1875: {
  9664                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9665  000C1E  0E38               	movlw	56
  9666  000C20  242A               	addwf	USBCtrlTrfRxService@i,w,c
  9667  000C22  D844               	call	PL114	;call to abstracted procedure
  9668  000C24  5001               	movf	_outPipes,w,c	;volatile
  9669  000C26  D83D               	call	PL112	;call to abstracted procedure
  9670                           
  9671                           ; BSR set to: 0
  9672  000C28  2A01               	incf	_outPipes,f,c	;volatile
  9673                           
  9674                           ; BSR set to: 0
  9675  000C2A  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  9676  000C2C                     i2l3592:
  9677                           
  9678                           ; BSR set to: 0
  9679  000C2C  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9680  000C2E  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  9681  000C30  E3F6               	bnc	i2l3586
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;usb_device.c: 1877: }
  9685                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9686  000C32  5005               	movf	_outPipes+4,w,c	;volatile
  9687  000C34  1006               	iorwf	_outPipes+5,w,c	;volatile
  9688  000C36  E014               	bz	i2l3608
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;usb_device.c: 1882: {
  9692                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9693  000C38  EE20 F001          	lfsr	2,1
  9694  000C3C  D81B               	call	PL4	;call to abstracted procedure
  9695                           
  9696                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9697  000C3E  D81F               	call	PL6	;call to abstracted procedure
  9698  000C40  D819               	call	PL4	;call to abstracted procedure
  9699  000C42  0E38               	movlw	56
  9700  000C44  EC46  F009         	call	PL68	;call to abstracted procedure
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9704  000C48  EC51  F00C         	call	PL36	;call to abstracted procedure
  9705  000C4C  BCDF               	btfsc	indf2,6,c
  9706  000C4E  D004               	goto	i2l3604
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;usb_device.c: 1886: {
  9710                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9711  000C50  D823               	call	PL16	;call to abstracted procedure
  9712  000C52  0E48               	movlw	72
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9716  000C54  D819               	call	PL14	;call to abstracted procedure
  9717                           
  9718                           ;usb_device.c: 1889: }
  9719  000C56  0C00               	retlw	0
  9720  000C58                     i2l3604:
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;usb_device.c: 1890: else
  9724                           ;usb_device.c: 1891: {
  9725                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9726  000C58  D81F               	call	PL16	;call to abstracted procedure
  9727  000C5A  0E08               	movlw	8
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9731  000C5C  D815               	call	PL14	;call to abstracted procedure
  9732  000C5E  0C00               	retlw	0
  9733  000C60                     i2l3608:
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;usb_device.c: 1896: else
  9737                           ;usb_device.c: 1897: {
  9738                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9739                           
  9740                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9744  000C60  ECED  F007         	call	PL2	;call to abstracted procedure
  9745  000C64  0E04               	movlw	4
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9749  000C66  D810               	call	PL14	;call to abstracted procedure
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;usb_device.c: 1926: }
  9753                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;usb_device.c: 1915: {
  9757                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9758  000C68  9E04               	bcf	_outPipes+3,7,c	;volatile
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9762  000C6A  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9763  000C6C  B4D8               	btfsc	status,2,c
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;usb_device.c: 1942: {
  9767                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9768  000C6E  EC0F  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9769  000C72  0012               	return		;funcret
  9770  000C74                     __end_of_USBCtrlTrfRxService:
  9771                           	opt stack 0
  9772  000C74                     PL4:
  9773                           	opt stack 20
  9774  000C74  5015               	movf	_pBDTEntryEP0OutNext,w,c
  9775  000C76  26D9               	addwf	fsr2l,f,c
  9776  000C78  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  9777  000C7A  22DA               	addwfc	fsr2h,f,c
  9778  000C7C  0012               	return	
  9779  000C7E                     __end_ofPL4:
  9780                           	opt stack 0
  9781  000C7E                     PL6:
  9782                           	opt stack 20
  9783  000C7E  0E08               	movlw	8
  9784  000C80  6EDF               	movwf	indf2,c
  9785  000C82  EE20 F002          	lfsr	2,2
  9786  000C86  0C08               	retlw	8
  9787  000C88                     __end_ofPL6:
  9788                           	opt stack 0
  9789  000C88                     PL14:
  9790                           	opt stack 20
  9791  000C88  6EDF               	movwf	indf2,c
  9792  000C8A  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9793  000C8E  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9794  000C92  0E00               	movlw	0
  9795  000C94  8EDB               	bsf	plusw2,7,c
  9796  000C96  0C00               	retlw	0
  9797  000C98                     __end_ofPL14:
  9798                           	opt stack 0
  9799  000C98                     PL16:
  9800                           	opt stack 17
  9801  000C98  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9802  000C9C  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9803  000CA0  0012               	return	
  9804  000CA2                     __end_ofPL16:
  9805                           	opt stack 0
  9806  000CA2                     PL112:
  9807                           	opt stack 18
  9808  000CA2  6EE1               	movwf	fsr1l,c
  9809  000CA4  6AE2               	clrf	fsr1h,c
  9810  000CA6  CFDF FFE7          	movff	indf2,indf1
  9811  000CAA  0012               	return	
  9812  000CAC                     __end_ofPL112:
  9813                           	opt stack 0
  9814  000CAC                     PL114:
  9815                           	opt stack 18
  9816  000CAC  6ED9               	movwf	fsr2l,c
  9817  000CAE  6ADA               	clrf	fsr2h,c
  9818  000CB0  0E02               	movlw	2
  9819  000CB2  22DA               	addwfc	fsr2h,f,c
  9820  000CB4  0C02               	retlw	2
  9821  000CB6                     __end_ofPL114:
  9822                           	opt stack 0
  9823                           tblptru	equ	0xFF8
  9824                           tblptrh	equ	0xFF7
  9825                           tblptrl	equ	0xFF6
  9826                           tablat	equ	0xFF5
  9827                           prodh	equ	0xFF4
  9828                           prodl	equ	0xFF3
  9829                           intcon	equ	0xFF2
  9830                           postinc0	equ	0xFEE
  9831                           wreg	equ	0xFE8
  9832                           indf1	equ	0xFE7
  9833                           postdec1	equ	0xFE5
  9834                           fsr1h	equ	0xFE2
  9835                           fsr1l	equ	0xFE1
  9836                           indf2	equ	0xFDF
  9837                           postinc2	equ	0xFDE
  9838                           postdec2	equ	0xFDD
  9839                           plusw2	equ	0xFDB
  9840                           fsr2h	equ	0xFDA
  9841                           fsr2l	equ	0xFD9
  9842                           status	equ	0xFD8
  9843                           
  9844 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9845 ;; Defined at:
  9846 ;;		line 1416 in file "picLibs/usb_device.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;		None
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;		None
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  1    wreg      void 
  9853 ;; Registers used:
  9854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9860 ;;      Params:         0       0       0       0       0
  9861 ;;      Locals:         0       0       0       0       0
  9862 ;;      Temps:          0       0       0       0       0
  9863 ;;      Totals:         0       0       0       0       0
  9864 ;;Total ram usage:        0 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; This function calls:
  9867 ;;		Nothing
  9868 ;; This function is called by:
  9869 ;;		_USBDeviceTasks
  9870 ;;		_USBCtrlEPServiceComplete
  9871 ;;		_USBCtrlTrfRxService
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text55
  9876  00121E                     __ptext55:
  9877                           	opt stack 0
  9878  00121E                     _USBCtrlEPAllowStatusStage:
  9879                           	opt stack 21
  9880                           
  9881                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9882                           
  9883                           ;incstack = 0
  9884  00121E  501F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  9885  001220  A4D8               	btfss	status,2,c
  9886  001222  0012               	return	
  9887                           
  9888                           ;usb_device.c: 1424: {
  9889                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9890  001224  0E01               	movlw	1
  9891  001226  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9892                           
  9893                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9894  001228  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  9895  00122A  A4D8               	btfss	status,2,c
  9896  00122C  0012               	return	
  9897                           
  9898                           ;usb_device.c: 1427: {
  9899                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9900  00122E  0E01               	movlw	1
  9901  001230  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9902                           
  9903                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9904  001232  0E02               	movlw	2
  9905  001234  1826               	xorwf	_controlTransferState,w,c	;volatile
  9906  001236  E10A               	bnz	i2l3308
  9907                           
  9908                           ;usb_device.c: 1433: {
  9909                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9910  001238  EE20 F001          	lfsr	2,1
  9911  00123C  EC59  F007         	call	PL70	;call to abstracted procedure
  9912  001240  6ADF               	clrf	indf2,c
  9913                           
  9914                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9915  001242  EC81  F008         	call	PL20	;call to abstracted procedure
  9916  001246  0E48               	movlw	72
  9917                           
  9918                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9919                           
  9920                           ;usb_device.c: 1437: }
  9921  001248  EF79  F008         	goto	PL12	;call to abstracted procedure
  9922  00124C                     i2l3308:
  9923                           
  9924                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9925  00124C  0426               	decf	_controlTransferState,w,c	;volatile
  9926  00124E  A4D8               	btfss	status,2,c
  9927  001250  0012               	return	
  9928                           
  9929                           ;usb_device.c: 1439: {
  9930                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9931  001252  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9932                           
  9933                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9934  001254  EE20 F001          	lfsr	2,1
  9935  001258  D814               	call	PL66	;call to abstracted procedure
  9936                           
  9937                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  9938  00125A  EC3F  F006         	call	PL6	;call to abstracted procedure
  9939  00125E  D811               	call	PL66	;call to abstracted procedure
  9940  001260  0E30               	movlw	48
  9941  001262  D814               	call	PL68	;call to abstracted procedure
  9942                           
  9943                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9944  001264  EC51  F00C         	call	PL36	;call to abstracted procedure
  9945  001268  0E04               	movlw	4
  9946  00126A  6EDF               	movwf	indf2,c
  9947                           
  9948                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9949  00126C  EC51  F00C         	call	PL36	;call to abstracted procedure
  9950  001270  0E00               	movlw	0
  9951  001272  8EDB               	bsf	plusw2,7,c
  9952                           
  9953                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9954  001274  0E01               	movlw	1
  9955  001276  6E22               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9956                           
  9957                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9958                           
  9959                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9960                           
  9961                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9962  001278  ECED  F007         	call	PL2	;call to abstracted procedure
  9963  00127C  0E80               	movlw	128
  9964  00127E  6EDF               	movwf	indf2,c
  9965  001280  0C80               	retlw	128
  9966  001282                     __end_of_USBCtrlEPAllowStatusStage:
  9967                           	opt stack 0
  9968  001282                     PL66:
  9969                           	opt stack 17
  9970  001282  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
  9971  001284  26D9               	addwf	fsr2l,f,c
  9972  001286  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9973  001288  22DA               	addwfc	fsr2h,f,c
  9974  00128A  0012               	return	
  9975  00128C                     __end_ofPL66:
  9976                           	opt stack 0
  9977  00128C                     PL68:
  9978                           	opt stack 21
  9979  00128C  6EDE               	movwf	postinc2,c
  9980  00128E  0E02               	movlw	2
  9981  001290  6EDD               	movwf	postdec2,c
  9982  001292  0C02               	retlw	2
  9983  001294                     __end_ofPL68:
  9984                           	opt stack 0
  9985                           tblptru	equ	0xFF8
  9986                           tblptrh	equ	0xFF7
  9987                           tblptrl	equ	0xFF6
  9988                           tablat	equ	0xFF5
  9989                           prodh	equ	0xFF4
  9990                           prodl	equ	0xFF3
  9991                           intcon	equ	0xFF2
  9992                           postinc0	equ	0xFEE
  9993                           wreg	equ	0xFE8
  9994                           indf1	equ	0xFE7
  9995                           postdec1	equ	0xFE5
  9996                           fsr1h	equ	0xFE2
  9997                           fsr1l	equ	0xFE1
  9998                           indf2	equ	0xFDF
  9999                           postinc2	equ	0xFDE
 10000                           postdec2	equ	0xFDD
 10001                           plusw2	equ	0xFDB
 10002                           fsr2h	equ	0xFDA
 10003                           fsr2l	equ	0xFD9
 10004                           status	equ	0xFD8
 10005                           
 10006 ;; *************** function _USBCtrlTrfInHandler *****************
 10007 ;; Defined at:
 10008 ;;		line 2592 in file "picLibs/usb_device.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;		None
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  lastDTS         1    1[COMRAM] unsigned char 
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      void 
 10015 ;; Registers used:
 10016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 3F/0
 10019 ;;		On exit  : 3F/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
 10022 ;;      Params:         0       0       0       0       0
 10023 ;;      Locals:         1       0       0       0       0
 10024 ;;      Temps:          0       0       0       0       0
 10025 ;;      Totals:         1       0       0       0       0
 10026 ;;Total ram usage:        1 bytes
 10027 ;; Hardware stack levels used:    1
 10028 ;; Hardware stack levels required when called:    1
 10029 ;; This function calls:
 10030 ;;		_USBCtrlTrfTxService
 10031 ;; This function is called by:
 10032 ;;		_USBCtrlEPService
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text56
 10037  001098                     __ptext56:
 10038                           	opt stack 0
 10039  001098                     _USBCtrlTrfInHandler:
 10040                           	opt stack 0
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;usb_device.c: 2594: uint8_t lastDTS;
 10044                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 10045                           
 10046                           ;incstack = 0
 10047  001098  D834               	call	PL20	;call to abstracted procedure
 10048  00109A  0E00               	movlw	0
 10049  00109C  BCDF               	btfsc	indf2,6,c
 10050  00109E  0E01               	movlw	1
 10051  0010A0  6E2B               	movwf	USBCtrlTrfInHandler@lastDTS,c
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10055  0010A2  0E04               	movlw	4
 10056  0010A4  1A0F               	xorwf	_pBDTEntryIn,f,c
 10057  0010A6  5010               	movf	_pBDTEntryIn+1,w,c
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 10061  0010A8  0E08               	movlw	8
 10062  0010AA  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 10063  0010AC  E10B               	bnz	i2l3790
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;usb_device.c: 2605: {
 10067                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 10068  0010AE  0102               	movlb	2	; () banked
 10069  0010B0  5132               	movf	50,w,b	;volatile
 10070  0010B2  0B7F               	andlw	127
 10071  0010B4  010F               	movlb	15	; () banked
 10072  0010B6  6F5C               	movwf	92,b	;volatile
 10073                           
 10074                           ; BSR set to: 15
 10075                           ;usb_device.c: 2607: if(UADDR != 0u)
 10076  0010B8  515C               	movf	92,w,b
 10077                           
 10078                           ; BSR set to: 15
 10079                           ;usb_device.c: 2608: {
 10080                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 10081  0010BA  0E10               	movlw	16
 10082  0010BC  B4D8               	btfsc	status,2,c
 10083                           
 10084                           ; BSR set to: 15
 10085                           ;usb_device.c: 2611: else
 10086                           ;usb_device.c: 2612: {
 10087                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 10088  0010BE  0E04               	movlw	4
 10089                           
 10090                           ;usb_device.c: 2610: }
 10091  0010C0  0100               	movlb	0	; () banked
 10092  0010C2  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
 10093  0010C4                     i2l3790:
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;usb_device.c: 2614: }
 10097                           ;usb_device.c: 2615: }
 10098                           ;usb_device.c: 2618: if(controlTransferState == 1)
 10099  0010C4  0426               	decf	_controlTransferState,w,c	;volatile
 10100  0010C6  E111               	bnz	i2l589
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;usb_device.c: 2619: {
 10104                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 10105  0010C8  D821               	call	PL46	;call to abstracted procedure
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10109  0010CA  EC12  F007         	call	_USBCtrlTrfTxService	;wreg free
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10113  0010CE  0E02               	movlw	2
 10114  0010D0  1827               	xorwf	_shortPacketStatus,w,c	;volatile
 10115  0010D2  E103               	bnz	i2l3802
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;usb_device.c: 2628: {
 10119                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10120  0010D4  D816               	call	PL20	;call to abstracted procedure
 10121  0010D6  0E04               	movlw	4
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10125                           
 10126                           ;usb_device.c: 2633: }
 10127  0010D8  D00C               	goto	PL12	;call to abstracted procedure
 10128  0010DA                     i2l3802:
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;usb_device.c: 2634: else
 10132                           ;usb_device.c: 2635: {
 10133                           ;usb_device.c: 2636: if(lastDTS == 0)
 10134  0010DA  502B               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10135  0010DC  E103               	bnz	i2l3808
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;usb_device.c: 2637: {
 10139                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10140  0010DE  D811               	call	PL20	;call to abstracted procedure
 10141  0010E0  0E48               	movlw	72
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10145                           
 10146                           ;usb_device.c: 2640: }
 10147  0010E2  D007               	goto	PL12	;call to abstracted procedure
 10148  0010E4                     i2l3808:
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;usb_device.c: 2641: else
 10152                           ;usb_device.c: 2642: {
 10153                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10154  0010E4  D80E               	call	PL20	;call to abstracted procedure
 10155  0010E6  0E08               	movlw	8
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10159  0010E8  D004               	goto	PL12	;call to abstracted procedure
 10160  0010EA                     i2l589:
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;usb_device.c: 2648: else
 10164                           ;usb_device.c: 2649: {
 10165                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10166  0010EA  BE04               	btfsc	_outPipes+3,7,c	;volatile
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;usb_device.c: 2658: }
 10170                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10171                           
 10172                           ; BSR set to: 0
 10173                           ;usb_device.c: 2656: {
 10174                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10175  0010EC  9E04               	bcf	_outPipes+3,7,c	;volatile
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;usb_device.c: 2660: }
 10179                           ;usb_device.c: 2662: controlTransferState = 0;
 10180  0010EE  6A26               	clrf	_controlTransferState,c	;volatile
 10181                           
 10182                           ; BSR set to: 0
 10183  0010F0  0012               	return		;funcret
 10184  0010F2                     __end_of_USBCtrlTrfInHandler:
 10185                           	opt stack 0
 10186  0010F2                     PL12:
 10187                           	opt stack 20
 10188  0010F2  6EDF               	movwf	indf2,c
 10189  0010F4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10190  0010F8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10191  0010FC  0E00               	movlw	0
 10192  0010FE  8EDB               	bsf	plusw2,7,c
 10193  001100  0C00               	retlw	0
 10194  001102                     __end_ofPL12:
 10195                           	opt stack 0
 10196  001102                     PL20:
 10197                           	opt stack 24
 10198  001102  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10199  001106  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10200  00110A  0012               	return	
 10201  00110C                     __end_ofPL20:
 10202                           	opt stack 0
 10203  00110C                     PL46:
 10204                           	opt stack 20
 10205  00110C  EE20 F002          	lfsr	2,2
 10206  001110  500F               	movf	_pBDTEntryIn,w,c
 10207  001112  26D9               	addwf	fsr2l,f,c
 10208  001114  5010               	movf	_pBDTEntryIn+1,w,c
 10209  001116  22DA               	addwfc	fsr2h,f,c
 10210  001118  0E38               	movlw	56
 10211  00111A  6EDE               	movwf	postinc2,c
 10212  00111C  0E02               	movlw	2
 10213  00111E  6EDD               	movwf	postdec2,c
 10214  001120  0C02               	retlw	2
 10215  001122                     __end_ofPL46:
 10216                           	opt stack 0
 10217                           tblptru	equ	0xFF8
 10218                           tblptrh	equ	0xFF7
 10219                           tblptrl	equ	0xFF6
 10220                           tablat	equ	0xFF5
 10221                           prodh	equ	0xFF4
 10222                           prodl	equ	0xFF3
 10223                           intcon	equ	0xFF2
 10224                           postinc0	equ	0xFEE
 10225                           wreg	equ	0xFE8
 10226                           indf1	equ	0xFE7
 10227                           postdec1	equ	0xFE5
 10228                           fsr1h	equ	0xFE2
 10229                           fsr1l	equ	0xFE1
 10230                           indf2	equ	0xFDF
 10231                           postinc2	equ	0xFDE
 10232                           postdec2	equ	0xFDD
 10233                           plusw2	equ	0xFDB
 10234                           fsr2h	equ	0xFDA
 10235                           fsr2l	equ	0xFD9
 10236                           status	equ	0xFD8
 10237                           
 10238 ;; *************** function _USBCtrlTrfTxService *****************
 10239 ;; Defined at:
 10240 ;;		line 1771 in file "picLibs/usb_device.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10249 ;; Tracked objects:
 10250 ;;		On entry : 3D/2
 10251 ;;		On exit  : 3F/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
 10254 ;;      Params:         0       0       0       0       0
 10255 ;;      Locals:         1       0       0       0       0
 10256 ;;      Temps:          0       0       0       0       0
 10257 ;;      Totals:         1       0       0       0       0
 10258 ;;Total ram usage:        1 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_USBCtrlEPAllowDataStage
 10264 ;;		_USBCtrlTrfInHandler
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           	psect	text57
 10269  000E24                     __ptext57:
 10270                           	opt stack 0
 10271  000E24                     _USBCtrlTrfTxService:
 10272                           	opt stack 20
 10273                           
 10274                           ;usb_device.c: 1773: uint8_t byteToSend;
 10275                           ;usb_device.c: 1777: byteToSend = 8;
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;incstack = 0
 10279  000E24  0E08               	movlw	8
 10280  000E26  6E2A               	movwf	USBCtrlTrfTxService@byteToSend,c
 10281                           
 10282                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10283  000E28  500E               	movf	_inPipes+5,w,c	;volatile
 10284  000E2A  E10D               	bnz	i2l3256
 10285  000E2C  0E08               	movlw	8
 10286  000E2E  5C0D               	subwf	_inPipes+4,w,c	;volatile
 10287  000E30  E20A               	bc	i2l3256
 10288                           
 10289                           ;usb_device.c: 1779: {
 10290                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10291  000E32  C00D  F02A         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10292                           
 10293                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10294  000E36  5027               	movf	_shortPacketStatus,w,c	;volatile
 10295  000E38  E102               	bnz	i2l3252
 10296                           
 10297                           ;usb_device.c: 1788: {
 10298                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10299  000E3A  0E01               	movlw	1
 10300  000E3C  D003               	goto	L17
 10301  000E3E                     i2l3252:
 10302                           
 10303                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10304  000E3E  0427               	decf	_shortPacketStatus,w,c	;volatile
 10305  000E40  E102               	bnz	i2l3256
 10306                           
 10307                           ;usb_device.c: 1792: {
 10308                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10309  000E42  0E02               	movlw	2
 10310  000E44                     L17:
 10311  000E44  6E27               	movwf	_shortPacketStatus,c	;volatile
 10312  000E46                     i2l3256:
 10313                           
 10314                           ;usb_device.c: 1794: }
 10315                           ;usb_device.c: 1795: }
 10316                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10317  000E46  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10318  000E48  5E0D               	subwf	_inPipes+4,f,c	;volatile
 10319  000E4A  0E00               	movlw	0
 10320  000E4C  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 10321                           
 10322                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10323  000E4E  EE20 F001          	lfsr	2,1
 10324  000E52  D82F               	call	PL70	;call to abstracted procedure
 10325  000E54  C02A  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10326                           
 10327                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10328  000E58  0E38               	movlw	56
 10329  000E5A  0100               	movlb	0	; () banked
 10330  000E5C  6F7A               	movwf	_pDst& (0+255),b
 10331  000E5E  0E02               	movlw	2
 10332  000E60  6F7B               	movwf	(_pDst+1)& (0+255),b
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10336  000E62  B00C               	btfsc	_inPipes+3,0,c	;volatile
 10337  000E64  D01A               	goto	i2l3284
 10338  000E66  D00B               	goto	i2l3274
 10339  000E68                     i2l3266:
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;usb_device.c: 1812: {
 10343                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10344  000E68  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10345  000E6C  D819               	call	PL58	;call to abstracted procedure
 10346  000E6E  64F7               	cpfsgt	tblptrh,c
 10347  000E70  D003               	bra	i2u197_47
 10348  000E72  0008               	tblrd		*
 10349  000E74  50F5               	movf	tablat,w,c
 10350  000E76  D002               	bra	i2u197_40
 10351  000E78                     i2u197_47:
 10352  000E78  ECB6  F004         	call	PL32	;call to abstracted procedure
 10353  000E7C                     i2u197_40:
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;usb_device.c: 1814: byteToSend--;
 10357  000E7C  D81F               	call	PL72	;call to abstracted procedure
 10358  000E7E                     i2l3274:
 10359                           
 10360                           ; BSR set to: 0
 10361  000E7E  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10362  000E80  E1F3               	bnz	i2l3266
 10363  000E82  0012               	return	
 10364  000E84                     i2l3276:
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;usb_device.c: 1820: {
 10368                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10369  000E84  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10370  000E88  D80B               	call	PL58	;call to abstracted procedure
 10371  000E8A  64F7               	cpfsgt	tblptrh,c
 10372  000E8C  D003               	bra	i2u199_47
 10373  000E8E  0008               	tblrd		*
 10374  000E90  50F5               	movf	tablat,w,c
 10375  000E92  D002               	bra	i2u199_40
 10376  000E94                     i2u199_47:
 10377  000E94  ECB6  F004         	call	PL32	;call to abstracted procedure
 10378  000E98                     i2u199_40:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;usb_device.c: 1822: byteToSend--;
 10382  000E98  D811               	call	PL72	;call to abstracted procedure
 10383  000E9A                     i2l3284:
 10384                           
 10385                           ; BSR set to: 0
 10386  000E9A  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10387  000E9C  E1F3               	bnz	i2l3276
 10388                           
 10389                           ; BSR set to: 0
 10390  000E9E  0012               	return		;funcret
 10391  000EA0                     __end_of_USBCtrlTrfTxService:
 10392                           	opt stack 0
 10393  000EA0                     PL58:
 10394                           	opt stack 20
 10395  000EA0  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10396  000EA4  6AF8               	clrf	tblptru,c
 10397  000EA6  C07A  FFD9         	movff	_pDst,fsr2l
 10398  000EAA  C07B  FFDA         	movff	_pDst+1,fsr2h
 10399  000EAE  0E02               	movlw	(high __ramtop+-1)
 10400  000EB0  0012               	return	
 10401  000EB2                     __end_ofPL58:
 10402                           	opt stack 0
 10403  000EB2                     PL70:
 10404                           	opt stack 21
 10405  000EB2  500F               	movf	_pBDTEntryIn,w,c
 10406  000EB4  26D9               	addwf	fsr2l,f,c
 10407  000EB6  5010               	movf	_pBDTEntryIn+1,w,c
 10408  000EB8  22DA               	addwfc	fsr2h,f,c
 10409  000EBA  0012               	return	
 10410  000EBC                     __end_ofPL70:
 10411                           	opt stack 0
 10412  000EBC                     PL72:
 10413                           	opt stack 20
 10414  000EBC  6EDF               	movwf	indf2,c
 10415  000EBE  4A09               	infsnz	_inPipes,f,c	;volatile
 10416  000EC0  2A0A               	incf	_inPipes+1,f,c	;volatile
 10417  000EC2  0100               	movlb	0	; () banked
 10418  000EC4  4B7A               	infsnz	_pDst& (0+255),f,b
 10419  000EC6  2B7B               	incf	(_pDst+1)& (0+255),f,b
 10420  000EC8  062A               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10421  000ECA  0012               	return	
 10422  000ECC                     __end_ofPL72:
 10423                           	opt stack 0
 10424                           tblptru	equ	0xFF8
 10425                           tblptrh	equ	0xFF7
 10426                           tblptrl	equ	0xFF6
 10427                           tablat	equ	0xFF5
 10428                           prodh	equ	0xFF4
 10429                           prodl	equ	0xFF3
 10430                           intcon	equ	0xFF2
 10431                           postinc0	equ	0xFEE
 10432                           wreg	equ	0xFE8
 10433                           indf1	equ	0xFE7
 10434                           postdec1	equ	0xFE5
 10435                           fsr1h	equ	0xFE2
 10436                           fsr1l	equ	0xFE1
 10437                           indf2	equ	0xFDF
 10438                           postinc2	equ	0xFDE
 10439                           postdec2	equ	0xFDD
 10440                           plusw2	equ	0xFDB
 10441                           fsr2h	equ	0xFDA
 10442                           fsr2l	equ	0xFD9
 10443                           status	equ	0xFD8
 10444                           tblptru	equ	0xFF8
 10445                           tblptrh	equ	0xFF7
 10446                           tblptrl	equ	0xFF6
 10447                           tablat	equ	0xFF5
 10448                           prodh	equ	0xFF4
 10449                           prodl	equ	0xFF3
 10450                           intcon	equ	0xFF2
 10451                           postinc0	equ	0xFEE
 10452                           wreg	equ	0xFE8
 10453                           indf1	equ	0xFE7
 10454                           postdec1	equ	0xFE5
 10455                           fsr1h	equ	0xFE2
 10456                           fsr1l	equ	0xFE1
 10457                           indf2	equ	0xFDF
 10458                           postinc2	equ	0xFDE
 10459                           postdec2	equ	0xFDD
 10460                           plusw2	equ	0xFDB
 10461                           fsr2h	equ	0xFDA
 10462                           fsr2l	equ	0xFD9
 10463                           status	equ	0xFD8
 10464                           
 10465                           	psect	rparam
 10466  0000                     tblptru	equ	0xFF8
 10467                           tblptrh	equ	0xFF7
 10468                           tblptrl	equ	0xFF6
 10469                           tablat	equ	0xFF5
 10470                           prodh	equ	0xFF4
 10471                           prodl	equ	0xFF3
 10472                           intcon	equ	0xFF2
 10473                           postinc0	equ	0xFEE
 10474                           wreg	equ	0xFE8
 10475                           indf1	equ	0xFE7
 10476                           postdec1	equ	0xFE5
 10477                           fsr1h	equ	0xFE2
 10478                           fsr1l	equ	0xFE1
 10479                           indf2	equ	0xFDF
 10480                           postinc2	equ	0xFDE
 10481                           postdec2	equ	0xFDD
 10482                           plusw2	equ	0xFDB
 10483                           fsr2h	equ	0xFDA
 10484                           fsr2l	equ	0xFD9
 10485                           status	equ	0xFD8
 10486                           
 10487                           	psect	temp
 10488  000052                     btemp:
 10489                           	opt stack 0
 10490  000052                     	ds	1
 10491  0000                     int$flags	set	btemp
 10492                           tblptru	equ	0xFF8
 10493                           tblptrh	equ	0xFF7
 10494                           tblptrl	equ	0xFF6
 10495                           tablat	equ	0xFF5
 10496                           prodh	equ	0xFF4
 10497                           prodl	equ	0xFF3
 10498                           intcon	equ	0xFF2
 10499                           postinc0	equ	0xFEE
 10500                           wreg	equ	0xFE8
 10501                           indf1	equ	0xFE7
 10502                           postdec1	equ	0xFE5
 10503                           fsr1h	equ	0xFE2
 10504                           fsr1l	equ	0xFE1
 10505                           indf2	equ	0xFDF
 10506                           postinc2	equ	0xFDE
 10507                           postdec2	equ	0xFDD
 10508                           plusw2	equ	0xFDB
 10509                           fsr2h	equ	0xFDA
 10510                           fsr2l	equ	0xFD9
 10511                           status	equ	0xFD8
 10512                           tblptru	equ	0xFF8
 10513                           tblptrh	equ	0xFF7
 10514                           tblptrl	equ	0xFF6
 10515                           tablat	equ	0xFF5
 10516                           prodh	equ	0xFF4
 10517                           prodl	equ	0xFF3
 10518                           intcon	equ	0xFF2
 10519                           postinc0	equ	0xFEE
 10520                           wreg	equ	0xFE8
 10521                           indf1	equ	0xFE7
 10522                           postdec1	equ	0xFE5
 10523                           fsr1h	equ	0xFE2
 10524                           fsr1l	equ	0xFE1
 10525                           indf2	equ	0xFDF
 10526                           postinc2	equ	0xFDE
 10527                           postdec2	equ	0xFDD
 10528                           plusw2	equ	0xFDB
 10529                           fsr2h	equ	0xFDA
 10530                           fsr2l	equ	0xFD9
 10531                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    197
    Data        18
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      81
    BANK0           160     31     130
    BANK1           256      0       0
    BANK2l           49      0       0
    BANK2h          113      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[767]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[767]), SetupPkt(BIGRAMhl[8]), 

    putrsUSBUSART@data	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK0[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK0[18]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 15
		 -> writeBuffer(BANK0[15]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 15
		 -> readBuffer(BANK0[15]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3760_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3760_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3760_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3760_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 15
		 -> cdc_data_tx(BIGRAMhl[15]), cdc_data_rx(BIGRAMhl[15]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2078$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2068$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2068$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2044$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2044$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2044$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2044$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_APP_DeviceCDCBasicDemoTasks
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_PIC18F26K40_readThreeBytes
    _getsUSBUSART->_USBTransferOnePacket
    _PIC18F26K40_readThreeBytes->_PIC18F26K40_sendByte
    _PIC18F26K40_loadPC->_PIC18F26K40_sendByte
    _PIC18F26K40_loadDataIntoNVM->_PIC18F26K40_sendByteMsbToLsb
    _PIC18F26K40_enterLowVoltageProg->_PIC18F26K40_sendByte
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2l

    None.

Critical Paths under _SYS_InterruptHigh in BANK2l

    None.

Critical Paths under _main in BANK2h

    None.

Critical Paths under _SYS_InterruptHigh in BANK2h

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14184
                                             29 BANK0      2     2      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK0      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                          6     6      0   12757
                                             24 BANK0      5     5      0
                   _BUTTON_IsPressed
                       _CDCTxService
    _PIC18F26K40_enterLowVoltageProg
     _PIC18F26K40_exitLowVoltageProg
        _PIC18F26K40_loadDataIntoNVM
                 _PIC18F26K40_loadPC
         _PIC18F26K40_readThreeBytes
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        3     2      1     268
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          2     0      2     270
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         3     1      2    2232
                                              9 BANK0      3     1      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_readThreeBytes                          18    14      4    1951
                                              6 BANK0     18    14      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadPC                                   8     4      4    1855
                                              6 BANK0      8     4      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadDataIntoNVM                         11     5      6    1264
                                              4 BANK0     11     5      6
       _PIC18F26K40_sendByteMsbToLsb
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByteMsbToLsb                         4     4      0     130
                                              0 BANK0      4     4      0
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_exitLowVoltageProg                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_enterLowVoltageProg                      4     4      0    1405
                                              6 BANK0      4     4      0
               _PIC18F26K40_sendByte
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByte                                 6     5      1    1269
                                              0 BANK0      6     5      1
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (4) _PIC18F26K40_setTrisToOut                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2129
                                              9 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1928
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SYS_InterruptHigh                                   10    10      0   30325
                                             30 COMRAM    10    10      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       1     1      0   30325
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     1     1      0   17702
                                             28 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               0     0      0   17063
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   12982
                                             27 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 1     1      0    4487
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    4460
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3989
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                          _CDCInitEP
                 _USBCheckCDCRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (8) i2_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (9) i2_LED_Enable                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_BUTTON_Enable                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i2_USBTransferOnePacket                               9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (8) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (9) _LED_On                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _LED_Off                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _PIC18F26K40_enterLowVoltageProg
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
       _PIC18F26K40_setTrisToOut
     _PIC18F26K40_exitLowVoltageProg
     _PIC18F26K40_loadDataIntoNVM
       _PIC18F26K40_sendByteMsbToLsb
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_loadPC
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_readThreeBytes
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            1FF      0       0      14        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1F      82       4       81.3%
BIGRAMhh            71      0       0      12        0.0%
BITBANK2h           71      0       0       9        0.0%
BANK2h              71      0       0      10        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      51       1       86.2%
BIGRAMhl            31      0       0      13        0.0%
BITBANK2l           31      0       0      11        0.0%
BANK2l              31      0       0       7        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3       8        0.0%
DATA                 0      0      D3      15        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 29 20:07:25 2017

                               _USB_SD_Ptr 0301                                         PL2 0FDA  
                                       PL4 0C74                                         PL6 0C7E  
                                       PL8 0502                                         l28 1566  
                                       l29 1568                                         l55 1638  
                                       l57 1660                                         l58 1662  
                              ?_LED_Enable 002A                              _USBDeviceInit 14BE  
                       __size_of_CDCInitEP 0052                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                                        PL10 0522  
                                      PL20 1102                                        PL12 10F2  
                                      PL30 0BB8                                        PL22 0872  
                                      PL14 0C88                                        PL40 0978  
                                      PL32 096C                                        PL24 06B2  
                                      PL16 0C98                                        PL50 0990  
                                      PL42 089A                                        PL34 0BC4  
                                      PL26 0546                                        PL18 0840  
                                      PL60 06D2                                        PL52 0F50  
                                      PL44 19FA                                        PL36 18A2  
                                      PL28 0A4C                                        PL70 0EB2  
                                      PL62 06E4                                        PL54 0D36  
                                      PL46 110C                                        PL38 1834  
                              __CFG_LVP$ON 000000                                        PL80 08B2  
                                      PL72 0EBC                                        PL64 06EE  
                                      PL56 0BD0                                        PL48 06BC  
                                      PL90 0D5A                                        PL82 0D4A  
                                      PL74 108C                                        PL66 1282  
                                      PL58 0EA0                                        PL92 07EE  
                                      PL84 0BE4                                        PL76 1446  
                                      PL68 128C                                        PL94 08C8  
                                      PL86 08BE                                        PL78 1206  
                                      PL96 0F64                                        PL88 0D52  
                                      PL98 1708       USER_USB_CALLBACK_EVENT_HANDLER@event 0036  
     USER_USB_CALLBACK_EVENT_HANDLER@pdata 0038                                        l101 03D2  
                                      l120 04AE                                        l104 03F6  
                                      l121 04B0                                        l122 04CA  
                                      l115 047C                                        l214 18E2  
                                      l119 0486                                        l216 18E6  
                                      l217 18EA                                        l218 18EE  
                                      l156 1AA0                __end_of_USBStdGetDscHandler 096C  
                                      l453 1828                                        l454 1826  
                                      l743 184E                                        _BDT 000200  
                                      l757 09FA                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                                        _UIE 000F60  
                                      _UIR 000F62                     _APP_LEDUpdateUSBStatus 1376  
                               _USBSuspend 19E4                               __CFG_BORV$30 000000  
                     USBStdSetCfgHandler@i 003E                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 06F8  
                           _USBDeviceState 0081                               __CFG_FOSC$XT 000000  
                            _BUTTON_Enable 1B12                      ??_USBCtrlTrfRxService 002A  
                 __size_ofi2_USBDeviceInit 0048                             ??_getsUSBUSART 00BC  
                                     PL100 0A68                                       PL110 0BEE  
                                     PL102 12FC                                       PL112 0CA2  
                                     PL104 0D64                                       PL114 0CAC  
                                     PL106 1A5C                                       PL116 0558  
                                     PL108 1214                                       PL118 1B0C  
                 USBEnableEndpoint@options 0032                            __end_of_LED_Off 1990  
                                     l5000 0450                 USBConfigureEndpoint@handle 0030  
                                     l5026 0480                                       l5106 14F6  
                                     l5046 04D4                                       l5054 1A6A  
                                     l4600 1538                                       l5048 04F0  
                                     l5160 18BE                                       l4602 153E  
                                     l5058 1A76                                       l5082 087C  
                                     l4700 0AA0                                       l5076 14E2  
                                     l4640 0B64                                       l4704 0AAA  
                                     l4800 1866                                       l4634 0B46  
                                     l4714 0AFA                                       l4706 0AB0  
                                     l4652 0B9A                                       l4820 1408  
                                     l4902 0A1E                                       l4822 140C  
                                     l4830 1442                                       l4912 0A32  
                                     l4904 0A22                                       l4752 0DB6  
                                     l4816 13FA                                       l4914 0A48  
                                     l4746 0D8E                                       l4826 141E  
                                     l4930 199A                                       l4860 09C4  
                                     l4596 152E                                       l4756 0DCE  
                                     l4748 0D94                                       l4870 09EC  
                                     l4686 0A84                                       l4846 1AE4  
                                     l4926 18F2                                       l4934 19AA  
                                     l4864 09CC                                       l4856 09BC  
                                     l4768 0E18                                       l4688 0A8C  
                                     l4792 1854                                       l4960 0416  
                                     l4952 03F8                                       l4778 1AA6  
                                     l4884 0A14                                       l4892 0A16  
                                     l4876 09FE                                       l4894 0A1C  
                                     l4974 0432                                       l4976 0438  
                    ??i2_SYSTEM_Initialize 002B                                       u4107 0E00  
                                     u4117 0E0C                                       u4127 168C  
                                     u4067 18CE                                       u3524 1558  
                                     u3525 1554                                       u4077 0DC4  
                                     u4087 0DDC                                       u4097 0DE8  
                                     u3554 1652                                       u3555 164E  
                                     u3644 0AD2                                       u3645 0ACC  
                    ??_USBCtrlTrfTxService 002A                                       _UCFG 000F61  
                                     _UEP0 000F53                                       _UEP1 000F54  
                                     _UEIE 000F5B                                       _UCON 000F64  
                                     _UEIR 000F5F                            _CDCDataInHandle 0076  
   USBStdFeatureReqHandler@current_ep_data 0042                                       _pDst 007A  
                                     _main 18AC                   ??i2_USBTransferOnePacket 002E  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                          _USBDeviceAttach 1810                                       btemp 0052  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0062                   __size_ofi2_BUTTON_Enable 0006  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 108C  
                   ??_USBCtrlTrfOutHandler 002C                               ___param_bank 000000  
                ??_USBStdFeatureReqHandler 003E                     __size_of_putrsUSBUSART 0034  
                     _PIC18F26K40_sendByte 1524                   ??_USBStdGetStatusHandler 002A  
                           ?_USBDeviceInit 002A                              __CFG_PLLEN$ON 000000  
           PIC18F26K40_readThreeBytes@data 00C3                                _writeBuffer 0082  
                                    ?_main 002A          __size_of_USBCtrlEPServiceComplete 006A  
                                    _ANSEL 000F7E                     __end_of_USBDeviceTasks 07EE  
                ?_USBCtrlEPServiceComplete 002A                                      i2l214 1910  
                                    i2l216 1914                                      i2l217 1918  
                                    i2l218 191C                                      i2l404 0720  
                                    i2l174 193C                                      i2l414 0794  
                                    i2l415 07EA                                      i2l184 1968  
                                    i2l176 1940                                      i2l416 079A  
                                    i2l177 1944                                      i2l186 196C  
                                    i2l178 1948                                      i2l187 1970  
                                    i2l531 0926                                      i2l603 1014  
                                    i2l188 1974                                      i2l612 1030  
                                    i2l541 129C                                      i2l534 0954  
                                    i2l704 1160                                      i2l536 0958  
                                    i2l544 12EA                                      i2l545 12A6  
                                    i2l546 12AA                                      i2l554 189E  
                                    i2l619 057A                                      i2l581 1A42  
                                    i2l637 0662                                      i2l629 0620  
                                    i2l478 0FA0                                      i2l579 1A30  
                                    i2l589 10EA                                      _UADDR 000F5C  
                           __CFG_BBSIZ$OFF 000000                                      _USTAT 000F63  
         __end_of_PIC18F26K40_setTrisToOut 1B24                              __CFG_WRT0$OFF 000000  
       __size_of_USBCtrlEPAllowStatusStage 0064                              __CFG_WRT1$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           ?_BUTTON_Enable 002A                             __CFG_EBTR1$OFF 000000  
          __end_of_USBCtrlEPAllowDataStage 15D8                                      _sd000 03C2  
                                    _sd001 037C                                      _sd002 0348  
                            __CFG_WRTB$OFF 000000             ?_USBIncrement1msInternalTimers 002A  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                                 i2memset@p1 002A  
                __size_of_BUTTON_IsPressed 001A                             __CFG_BOREN$OFF 000000  
                                    tablat 000FF5                        __size_of_LED_Enable 0030  
                                    plusw2 000FDB                          __end_of_CDCInitEP 162A  
                                    status 000FD8                               __end_ofPL100 0A72  
                             __end_ofPL110 0BF8                               __end_ofPL102 1306  
                             __end_ofPL112 0CAC                               __end_ofPL104 0D6E  
                             __end_ofPL114 0CB6                               __end_ofPL106 1A64  
                             __end_ofPL116 0560                               __end_ofPL108 121E  
                             __end_ofPL118 1B12                           __end_ofi2_memset 19E4  
                          putUSBUSART@data 00B1               __size_of_USBStdSetCfgHandler 0084  
                           __CFG_MCLRE$OFF 000000                            __initialization 1714  
                    ?_PIC18F26K40_sendByte 00B1                               __end_of_main 18DC  
              __size_of_PIC18F26K40_loadPC 003E                  __size_of_USBCtrlEPService 0070  
                                   ??_main 00CE                              __activetblptr 000002  
                          ?_USBDeviceTasks 002A                                ?_USBSuspend 002A  
                                ??_LED_Off 002A                               _cdc_mem_type 007C  
                            _putrsUSBUSART 1844                    __end_of_USBDeviceAttach 1834  
                         _CDCDataOutHandle 0078            PIC18F26K40_loadDataIntoNVM@data 00B5  
                                   _ANSELH 000F7F                            getsUSBUSART@len 00BB  
                   SYSTEM_Initialize@state 00B2                      __size_of_CDCTxService 00A8  
                                   i2l3030 11E0                                     i2l3040 1978  
                                   i2l3130 13BC                                     i2l3122 139E  
                                   i2l3114 1380                                     i2l3210 1A4A  
                                   i2l3140 13D6                                     i2l3052 17E8  
                                   i2l3220 1456                                     i2l3046 194C  
                                   i2l3134 13CC                                     i2l3126 13AE  
                                   i2l3142 13E0                                     i2l3118 138E  
                                   i2l3070 1920                                     i2l3214 1A56  
                                   i2l3222 1460                                     i2l3056 17F6  
                                   i2l3152 113A                                     i2l3224 146A  
                                   i2l3232 1472                                     _LED_On 1938  
                                   i2l3082 0CDE                                     i2l3402 092A  
                                   i2l3410 095C                                     i2l3252 0E3E  
                                   i2l3308 124C                                     i2l3076 0CC2  
                                   i2l3148 112E                                     i2l3340 15C6  
                                   i2l4124 189C                                     i2l3094 0D16  
                                   i2l3182 1186                                     i2l3166 1156  
                                   i2l3158 1144                                     i2l3502 064C  
                                   i2l3422 12B8                             __CFG_WDTEN$OFF 000000  
                                   i2l3256 0E46                                     i2l3176 1174  
                                   i2l3520 068E                                     i2l3512 066E  
                                   i2l3504 0652                                     i2l3432 12DC  
                                   i2l3360 0EEC                                     i2l3336 15B2  
                                   i2l4144 1368                                     i2l4400 0770  
                                   i2l3266 0E68                                     i2l3274 0E7E  
                                   i2l3450 057C                                     i2l4090 1A1C  
                                   i2l3276 0E84                                     i2l3284 0E9A  
                                   i2l3604 0C58                                     i2l3188 118C  
                                   i2l5204 1486                                     i2l3292 19D4  
                                   i2l4164 0808                                     i2l5206 14BA  
                                   i2l3518 0688                                     i2l3390 08E2  
                                   i2l3382 0F36                                     i2l3630 101E  
                                   i2l3550 0FB2                                     i2l3534 0F88  
                                   i2l3608 0C60                                     i2l3480 05EE  
                                   i2l3288 19C4                                     i2l4088 1A1A  
                                   i2l4408 0788                                     i2l3802 10DA  
                                   i2l3490 0614                                     i2l3474 05DE  
                                   i2l3466 05C0                                     i2l3394 08F6  
                                   i2l3642 1024                                     i2l3538 0F8E  
                                   i2l3730 176C                                     i2l4194 0818  
                                   i2l4434 07CE                                     i2l4370 0732  
                                   i2l3492 062C                                     i2l3652 1040  
                                   i2l4436 07E2                                     i2l4428 07B8  
                                   i2l4356 0718                                     i2l4348 070C  
                                   i2l3582 0C12                                     i2l3558 0FC0  
                                   i2l4390 075E                                     i2l4382 0752  
                                   i2l3808 10E4                                     i2l3592 0C2C  
                                   i2l3656 104C                                     i2l4376 073C  
                                   i2l3586 0C1E                                     i2l3738 178C  
                                   i2l4394 0766                                     i2l3790 10C4  
                            CDCTxService@i 00BA                   i2USBTransferOnePacket@ep 0030  
                        ??i2_USBDeviceInit 0032            __size_ofi2_USBTransferOnePacket 0080  
                        _shortPacketStatus 0027                             __CFG_XINST$OFF 000000  
             ??_PIC18F26K40_readThreeBytes 00BB                            USBDeviceTasks@i 0047  
              USBStdFeatureReqHandler@pUEP 0040                   USBTransferOnePacket@data 00B2  
               USBCtrlTrfInHandler@lastDTS 002B                            ??_USBDeviceInit 00B9  
                             ?_putUSBUSART 00B1                             __CFG_STVREN$ON 000000  
                     __end_of_getsUSBUSART 1446                          ??i2_BUTTON_Enable 002A  
                        _USBEnableEndpoint 17DA            __size_of_USBStdGetStatusHandler 0068  
                                   _memcpy 175A                              ?i2_LED_Enable 002A  
                                   _memset 1990                                     clear_0 173A  
                                   clear_1 1746                PIC18F26K40_readThreeBytes@i 00C8  
              PIC18F26K40_readThreeBytes@j 00C7                         ?_USBEnableEndpoint 0032  
            __size_of_USBTransferOnePacket 0082                            ??_BUTTON_Enable 00B1  
                             _CDCTxService 09A4                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                             ?_putrsUSBUSART 00B1  
                      ??_USBEnableEndpoint 0033                                _CtrlTrfData 000238  
                          __CFG_HFOFST$OFF 000000                   _PIC18F26K40_setTrisToOut 1B1C  
             ?_APP_DeviceCDCBasicDemoTasks 002A        __size_of_PIC18F26K40_readThreeBytes 00C4  
                     _controlTransferState 0026                          _SYSTEM_Initialize 1A64  
                               __accesstop 0060                    __end_of__initialization 174C  
                       ?_SYSTEM_Initialize 002A                              ___rparam_used 000001  
                 __size_of_USBStallHandler 002A                        __size_of_USBSuspend 0016  
                   ??_PIC18F26K40_sendByte 00B2                             __pcstackCOMRAM 002A  
                __end_of_USBEnableEndpoint 1810                              __end_of_sd000 03C6  
                            __end_of_sd001 03B0                              __end_of_sd002 037C  
                             __pidataBANK0 1AE8                        ??_SYSTEM_Initialize 00B2  
                                LED_On@led 002A           __size_of_USBCtrlEPAllowDataStage 0056  
                           ??i2_LED_Enable 002A                               ??_LED_Enable 00B1  
            __size_of_USBConfigureEndpoint 0064                __end_of_USBCtrlTrfInHandler 10F2  
                  ?_APP_LEDUpdateUSBStatus 002A                                 __end_ofPL2 1008  
                               __end_ofPL4 0C7E                                 __end_ofPL6 0C88  
                               __end_ofPL8 0522                     i2_USBTransferOnePacket 0CB6  
                          __CFG_PCLKEN$OFF 000000                                  ?i2_memset 002A  
                               _cdc_rx_len 001C                                 _cdc_tx_len 001B  
             ?_PIC18F26K40_loadDataIntoNVM 00B5                              _buttonMessage 00D0  
                 ??_USBCtrlTrfSetupHandler 0046                    _USBTicksSinceSuspendEnd 007D  
                         ?_USBDeviceAttach 002A                  __end_of_SYSTEM_Initialize 1A80  
                         _BUTTON_IsPressed 1A9C                     _USBStdGetStatusHandler 1294  
                            _buttonPressed 007F                                 __pbssBANK0 0060  
                                  ?_LED_On 002A              ??_APP_DeviceCDCBasicDemoTasks 00C9  
 __end_of_APP_DeviceCDCBasicDemoInitialize 1AD0  __size_of_APP_DeviceCDCBasicDemoInitialize 001A  
       ??_APP_DeviceCDCBasicDemoInitialize 002A          ?_APP_DeviceCDCBasicDemoInitialize 002A  
         _APP_DeviceCDCBasicDemoInitialize 1AB6                         __end_of_LED_Enable 190C  
              __size_of_USBWakeFromSuspend 0020                                _pBDTEntryIn 000F  
         __end_of_USBCtrlEPServiceComplete 0FDA                __size_of_USBCheckCDCRequest 0080  
                     USBCtrlTrfRxService@i 002A                              LED_Enable@led 00B1  
           __end_of_APP_LEDUpdateUSBStatus 13E6                                    ?_memcpy 002A  
             APP_DeviceCDCBasicDemoTasks@a 00CA                                    ?_memset 00B1  
                               _device_dsc 03B0                           _USBCtrlEPService 1306  
                               _ep_data_in 0073                __end_of_USBCtrlTrfRxService 0C74  
                       _USBCheckStdRequest 1008                          _configDescriptor1 0305  
                          ??_putrsUSBUSART 00B2                                    _LED_Off 1964  
              __end_ofi2_SYSTEM_Initialize 1A5C                                 ??i2_memset 0030  
              __end_of_USBCtrlTrfTxService 0EA0                        _USBStdSetCfgHandler 0ECC  
      PIC18F26K40_loadDataIntoNVM@tempData 00BC                            __CFG_USBDIV$OFF 000000  
                      ?_USBCheckStdRequest 002A               __size_of_USBStdGetDscHandler 009A  
            ??_PIC18F26K40_loadDataIntoNVM 00BB                                    _UIEbits 000F60  
                                  _UIRbits 000F62                            __size_of_LED_On 002C  
                            _cdc_trf_state 0080             APP_LEDUpdateUSBStatus@ledCount 0019  
       __end_of_PIC18F26K40_readThreeBytes 0B36                 _PIC18F26K40_readThreeBytes 0A72  
                                  _pCDCDst 006A                                    _pCDCSrc 006D  
                          __CFG_PWRTEN$OFF 000000                      __size_of_getsUSBUSART 0060  
                                  __Hparam 0000            ??_USBIncrement1msInternalTimers 002A  
                     ?_USBStdSetCfgHandler 002A                                  _CDCInitEP 15D8  
                                  __Lparam 0000                 __size_of_USBEnableEndpoint 0036  
                               _readBuffer 0091                       ??_USBCheckStdRequest 0045  
            __size_of_USBCtrlTrfOutHandler 0020                           ??_USBDeviceTasks 0047  
                        ??_USBStallHandler 002A                               __psmallconst 0300  
     __size_of_APP_DeviceCDCBasicDemoTasks 013A                       __size_of_putUSBUSART 0018  
                                  __pcinit 1714                         getsUSBUSART@buffer 00BA  
                          __size_of_memcpy 0042                            __size_of_memset 002A  
                __end_of_configDescriptor1 0348                                    __ramtop 0300  
                                  __ptext0 18AC                                    __ptext1 14BE  
                                  __ptext2 1990                                    __ptext3 1810  
                                  __ptext4 1A64                                    __ptext5 18DC  
                                  __ptext6 1B12                                    __ptext7 03C8  
                                  __ptext8 1844                                    __ptext9 1AD0  
                                  _inPipes 0009                _USBDeferOUTDataStagePackets 007E  
                             ??_USBSuspend 003E                            i2_USBDeviceInit 07F8  
                         i2USBDeviceInit@i 0032                      PIC18F26K40_sendByte@i 00B6  
                    PIC18F26K40_sendByte@j 00B5                         __end_of_USB_CD_Ptr 0305  
               __size_of_SYSTEM_Initialize 001C            __size_of_USBCtrlTrfSetupHandler 0040  
                     end_of_initialization 174C                               _getsUSBUSART 13E6  
                     __end_ofi2_LED_Enable 1938                         __end_of_USB_SD_Ptr 0304  
                                  memcpy@d 0030                                    memcpy@n 002E  
                                  memcpy@s 0032                        _pBDTEntryEP0OutNext 0015  
                                  memset@c 00B3                                    memset@n 00B5  
                                  memset@p 00B7                              __Lmediumconst 0000  
                          _USB1msTickCount 0066            _dummy_encapsulated_cmd_response 00A0  
                          i2_BUTTON_Enable 1B06                   ?_USBStdFeatureReqHandler 002A  
                    ??_USBStdSetCfgHandler 003E                                 ?_CDCInitEP 002A  
                       __end_of_USBSuspend 19FA       __size_of_PIC18F26K40_loadDataIntoNVM 00B6  
                  _USBCtrlEPAllowDataStage 1582                                    postdec1 000FE5  
                                  postdec2 000FDD                 __end_of_PIC18F26K40_loadPC 17DA  
                                  postinc0 000FEE                                    postinc2 000FDE  
                 PIC18F26K40_sendByte@info 00B4    __end_of_PIC18F26K40_enterLowVoltageProg 16C8  
 __size_of_PIC18F26K40_enterLowVoltageProg 004E           ?_PIC18F26K40_enterLowVoltageProg 002A  
        ??_PIC18F26K40_enterLowVoltageProg 00B7            _PIC18F26K40_enterLowVoltageProg 167A  
                 _USBCtrlEPServiceComplete 0F70                 _USBStatusStageEnabledFlag1 001F  
               _USBStatusStageEnabledFlag2 001E                         USBEnableEndpoint@p 0033  
                                _PORTAbits 000F80                                  _PORTCbits 000F82  
               ??_PIC18F26K40_setTrisToOut 00B1                                  _TRISCbits 000F94  
            PIC18F26K40_loadPC@tempAddress 00BB                         _BothEP0OutUOWNsSet 0022  
                USBConfigureEndpoint@EPNum 002F                 ?_USBCtrlEPAllowStatusStage 002A  
      USER_USB_CALLBACK_EVENT_HANDLER@size 003A    APP_DeviceCDCBasicDemoTasks@numBytesRead 00C9  
                                _USTATcopy 0028            ?_PIC18F26K40_exitLowVoltageProg 002A  
         ??_PIC18F26K40_exitLowVoltageProg 00B1               __end_of_USBTransferOnePacket 0BB8  
                           __end_of_LED_On 1964                          putUSBUSART@length 00B2  
                   _USBCtrlTrfSetupHandler 16C8                   __end_of_BUTTON_IsPressed 1AB6  
                  ?i2_USBTransferOnePacket 002A                      __end_of_USBDeviceInit 1524  
    __end_of_USBIncrement1msInternalTimers 1A9C     __size_of_USBIncrement1msInternalTimers 001C  
            _USBIncrement1msInternalTimers 1A80                                 LED_Off@led 002A  
                  __end_ofi2_USBDeviceInit 0840                                  i2memset@c 002C  
                                i2memset@n 002E                                  i2memset@p 0030  
                           __end_of_memcpy 179C                         putrsUSBUSART@pData 00B2  
                           __end_of_memset 19BA                          _USBBusIsSuspended 0024  
                              __end_ofPL10 0546                                __end_ofPL20 110C  
                              __end_ofPL12 1102                                __end_ofPL30 0BC4  
                              __end_ofPL22 089A                                __end_ofPL14 0C98  
                              __end_ofPL40 0990                                __end_ofPL32 0978  
                              __end_ofPL24 06BC                                __end_ofPL16 0CA2  
                              __end_ofPL50 09A4                                __end_ofPL42 08B2  
                              __end_ofPL34 0BD0                                __end_ofPL26 0558  
                              __end_ofPL18 0872                                __end_ofPL60 06E4  
                              __end_ofPL52 0F64                                __end_ofPL44 1A06  
                              __end_ofPL36 18AC                                __end_ofPL28 0A68  
                              __end_ofPL70 0EBC                                __end_ofPL62 06EE  
                              __end_ofPL54 0D4A                                __end_ofPL46 1122  
                              __end_ofPL38 1844                                __end_ofPL80 08BE  
                              __end_ofPL72 0ECC                                __end_ofPL64 06F8  
                              __end_ofPL56 0BE4                                __end_ofPL48 06D2  
                              __end_ofPL90 0D64                                __end_ofPL82 0D52  
                              __end_ofPL74 1098                                __end_ofPL66 128C  
                              __end_ofPL58 0EB2                                __end_ofPL92 07F8  
                              __end_ofPL84 0BEE                                __end_ofPL76 1454  
                              __end_ofPL68 1294                                __end_ofPL94 08D2  
                              __end_ofPL86 08C8                                __end_ofPL78 1214  
                              __end_ofPL96 0F70                                __end_ofPL88 0D5A  
                              __end_ofPL98 1714                        start_initialization 1714  
                  ?_USBStdGetStatusHandler 002A       PIC18F26K40_loadDataIntoNVM@LatchType 00BA  
                 i2SYSTEM_Initialize@state 002B                      __end_of_BUTTON_Enable 1B1C  
            USBCtrlTrfRxService@byteToRead 002B                    __end_ofi2_BUTTON_Enable 1B0C  
                              _cdc_data_rx 000280                                _cdc_data_tx 000240  
                        __size_ofi2_memset 002A               __end_of_USBConfigureEndpoint 1206  
          __end_of_USBStdFeatureReqHandler 06B2                                   ??_LED_On 002A  
        __end_of_USBCtrlEPAllowStatusStage 1282                   __end_of_USBCtrlEPService 1376  
                ??_USBCtrlEPAllowDataStage 002B                                ??_CDCInitEP 0036  
                           USBDeviceInit@i 00B9                     _pBDTEntryEP0OutCurrent 0017  
                  USBTransferOnePacket@dir 00B1                    USBTransferOnePacket@len 00B4  
           __end_ofi2_USBTransferOnePacket 0D36              __size_of_PIC18F26K40_sendByte 005E  
                      _USBStdGetDscHandler 08D2        PIC18F26K40_readThreeBytes@direction 00C2  
                              __pdataBANK0 00D0                                   ??_memcpy 0030  
                                 ??_memset 00B7                     BUTTON_IsPressed@button 00B1  
                   _USBActiveConfiguration 0029             __end_of_USBStdGetStatusHandler 12FC  
                PIC18F26K40_loadPC@address 00B7                                   ?_LED_Off 002A  
                              __pbssCOMRAM 0001                              __pcstackBANK0 00B1  
             __size_of_USBCtrlTrfInHandler 005A                      __size_ofi2_LED_Enable 002C  
                     ?_USBStdGetDscHandler 002A                 __end_of_USBWakeFromSuspend 1A26  
                          _USBStallHandler 1878                               _pBDTEntryOut 0060  
               __end_of_USBCheckCDCRequest 11A2                   __size_of_USBDeviceAttach 0024  
              ?_PIC18F26K40_readThreeBytes 00B7                      i2BUTTON_Enable@button 002A  
                                __pintcode 0008                               i2_LED_Enable 190C  
                         ?i2_USBDeviceInit 002A                       _USBTransferOnePacket 0B36  
                              __smallconst 0300                      __end_of_putrsUSBUSART 1878  
             __end_of_USBCtrlTrfOutHandler 1A46                      ??_USBStdGetDscHandler 002A  
                              _ep_data_out 0070                           ?i2_BUTTON_Enable 002A  
      __end_of_APP_DeviceCDCBasicDemoTasks 0502                _APP_DeviceCDCBasicDemoTasks 03C8  
             __size_of_USBCtrlTrfRxService 007C              USBConfigureEndpoint@direction 002A  
             __size_ofi2_SYSTEM_Initialize 0016               __size_of_USBCtrlTrfTxService 007C  
                                 _LATCbits 000F8B                 ??_USBCtrlEPServiceComplete 002B  
                                 _IPR2bits 000FA2                                   _PIE2bits 000FA0  
    PIC18F26K40_loadDataIntoNVM@IncreasePC 00B9       __end_of_PIC18F26K40_sendByteMsbToLsb 167A  
    __size_of_PIC18F26K40_sendByteMsbToLsb 0050               _PIC18F26K40_sendByteMsbToLsb 162A  
                                 i2u212_40 0910                                   i2u212_47 090E  
                                 i2u213_40 0922                                   i2u213_47 0920  
                                 i2u215_40 094E                                   i2u215_47 094C  
                                 i2u185_40 13A8                                   _PIR2bits 000FA1  
                                 i2u197_40 0E7C                                   i2u197_47 0E78  
                                 i2u199_40 0E98                                   i2u199_47 0E94  
                                 _RCONbits 000FD0                              ??_putUSBUSART 00B3  
                         __CFG_WDTPS$32768 000000                                   _UEP0bits 000F53  
               _USBDeferINDataStagePackets 001D                __size_of_USBCheckStdRequest 0084  
                                 _UCONbits 000F64                       _USBConfigureEndpoint 11A2  
         __size_of_USBStdFeatureReqHandler 0152                      ?_USBTransferOnePacket 00B1  
                          i2LED_Enable@led 002A                          _SYS_InterruptHigh 0008  
                            ?_CDCTxService 002A                               _RemoteWakeup 0025  
                                 i2_memset 19BA        __end_of_PIC18F26K40_loadDataIntoNVM 0E24  
              _PIC18F26K40_loadDataIntoNVM 0D6E                         _PIC18F26K40_loadPC 179C  
                         __size_of_LED_Off 002C                         ?_SYS_InterruptHigh 002A  
                  __end_of_USBStallHandler 18A2                                  copy_data0 1728  
                        putrsUSBUSART@data 00B1                ??_USBCtrlEPAllowStatusStage 002A  
              __end_of_USBStdSetCfgHandler 0F50                        ?_PIC18F26K40_loadPC 00B7  
                      ??_SYS_InterruptHigh 0048                         __end_of_device_dsc 03C2  
                 ??_APP_LEDUpdateUSBStatus 002B                    ?_USBCtrlTrfSetupHandler 002A  
                  USBStdGetStatusHandler@p 002A                                   __Hrparam 0000  
      PIC18F26K40_enterLowVoltageProg@code 00B7                                  memcpy@tmp 0034  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 00B7  
         PIC18F26K40_sendByteMsbToLsb@info 00B3              ?_PIC18F26K40_sendByteMsbToLsb 002A  
                                 _SetupPkt 000230                      ?_USBConfigureEndpoint 002A  
   __end_of_PIC18F26K40_exitLowVoltageProg 1B06    __size_of_PIC18F26K40_exitLowVoltageProg 000C  
           _PIC18F26K40_exitLowVoltageProg 1AFA                          ??_USBDeviceAttach 00B1  
                        ?_BUTTON_IsPressed 002A                       ??_PIC18F26K40_loadPC 00BB  
                __end_of_SYS_InterruptHigh 0062                         ??_BUTTON_IsPressed 00B1  
                      __end_of_putUSBUSART 1AE8                                _line_coding 00A8  
                           ??_CDCTxService 00BA              PIC18F26K40_sendByte@direction 00B1  
                  __size_of_USBDeviceTasks 00F6                                   __ptext10 13E6  
                                 __ptext11 0A72                                   __ptext20 0B36  
                                 __ptext12 179C                                   __ptext21 1A9C  
                                 __ptext13 0D6E                                   __ptext30 175A  
                                 __ptext14 162A                                   __ptext31 16C8  
                                 __ptext23 06F8                                   __ptext15 1AFA  
                                 __ptext40 1454                                   __ptext32 0F70  
                                 __ptext24 07F8                                   __ptext16 167A  
                                 __ptext41 1A46                                   __ptext33 1582  
                                 __ptext25 1A06                                   __ptext17 1524  
                                 __ptext50 1938                                   __ptext42 190C  
                                 __ptext34 1008                                   __ptext26 19E4  
                                 __ptext18 1B1C                                   __ptext51 1964  
                                 __ptext43 1B06                                   __ptext35 0ECC  
                                 __ptext27 1878                                   __ptext19 09A4  
                                 __ptext52 1AB6                                   __ptext44 1122  
                                 __ptext36 19BA                                   __ptext28 1A80  
                                 __ptext53 1A26                                   __ptext45 15D8  
                                 __ptext37 1294                                   __ptext29 1306  
                                 __ptext54 0BF8                                   __ptext46 0CB6  
                                 __ptext38 08D2                                   __ptext55 121E  
                                 __ptext47 17DA                                   __ptext39 0560  
                                 __ptext56 1098                                   __ptext48 11A2  
                                 __ptext57 0E24                                   __ptext49 1376  
        __size_of_PIC18F26K40_setTrisToOut 0008             __end_of_USBCtrlTrfSetupHandler 1708  
                            __size_of_main 0030                          ?_USBCtrlEPService 002A  
                ?_PIC18F26K40_setTrisToOut 002A                         ??_USBCtrlEPService 0046  
                      _USBCtrlTrfInHandler 1098                        BUTTON_Enable@button 00B1  
                                 _outPipes 0001                       _USBCtrlTrfOutHandler 1A26  
                                 int$flags 0052                  _USBCtrlEPAllowStatusStage 121E  
                               _LED_Enable 18DC                     ??_USBTransferOnePacket 00B5  
                         putrsUSBUSART@len 00B3                  _USBDeferStatusStagePacket 0020  
                 CDCTxService@byte_to_send 00BB                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002A                                   memcpy@d1 002A  
                                 memcpy@s1 002C              USBCtrlTrfTxService@byteToSend 002A  
             __end_of_PIC18F26K40_sendByte 1582                                   memset@p1 00B1  
                         ?_USBStallHandler 002A                   USBStdFeatureReqHandler@p 0043  
                                 intlevel2 0000                     __size_of_USBDeviceInit 0066  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 14BE   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 006A  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 003C           ?_USER_USB_CALLBACK_EVENT_HANDLER 0036  
          _USER_USB_CALLBACK_EVENT_HANDLER 1454               i2USBTransferOnePacket@handle 0031  
          __size_of_APP_LEDUpdateUSBStatus 0070                 i2USBTransferOnePacket@data 002B  
                   ??_USBConfigureEndpoint 002B                      ?_USBCtrlTrfOutHandler 002A  
                   __size_of_BUTTON_Enable 000A                                _putUSBUSART 1AD0  
                     __CFG_CPUDIV$NOCLKDIV 000000                        _USBCtrlTrfRxService 0BF8  
                       _USBWakeFromSuspend 1A06                    _USBStdFeatureReqHandler 0560  
                      i2_SYSTEM_Initialize 1A46                         _USBCheckCDCRequest 1122  
                      _USBCtrlTrfTxService 0E24                 __size_of_SYS_InterruptHigh 005A  
           ??_PIC18F26K40_sendByteMsbToLsb 00B1              PIC18F26K40_sendByteMsbToLsb@i 00B4  
                      ?_USBWakeFromSuspend 002A                      ??_USBCtrlTrfInHandler 002B  
                    _USBAlternateInterface 00AF                        ?_USBCheckCDCRequest 002A  
                i2USBTransferOnePacket@dir 002A                  i2USBTransferOnePacket@len 002D  
                      USBEnableEndpoint@ep 0035                            _endpoint_number 0023  
                     ?_USBCtrlTrfRxService 002A                              ?_getsUSBUSART 00BA  
                     ?i2_SYSTEM_Initialize 002A                   ?_USBCtrlEPAllowDataStage 002A  
                     ?_USBCtrlTrfTxService 002A               _USBStatusStageTimeoutCounter 0021  
     PIC18F26K40_readThreeBytes@IncreasePC 00B7                       ??_USBWakeFromSuspend 003E  
               USBTransferOnePacket@handle 00B8                       __end_of_CDCTxService 0A4C  
                     ??_USBCheckCDCRequest 002A                                 _USB_CD_Ptr 0304  
