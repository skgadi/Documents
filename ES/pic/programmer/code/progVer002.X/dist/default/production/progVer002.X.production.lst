

Microchip Technology PIC18 PRO Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 30 09:24:47 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	pa_nodes0,global,class=CODE,delta=1
    75                           	dabs	1,0x200,48,_BDT
    76                           	dabs	1,0x280,15,_cdc_data_rx
    77                           	dabs	1,0x240,15,_cdc_data_tx
    78                           	dabs	1,0x238,8,_CtrlTrfData
    79                           	dabs	1,0x230,8,_SetupPkt
    80  0000                     
    81                           ; Version 1.42
    82                           ; Generated 13/04/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F14K50 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     tblptru	equ	0xFF8
   116                           tblptrh	equ	0xFF7
   117                           tblptrl	equ	0xFF6
   118                           tablat	equ	0xFF5
   119                           prodh	equ	0xFF4
   120                           prodl	equ	0xFF3
   121                           intcon	equ	0xFF2
   122                           wreg	equ	0xFE8
   123                           indf1	equ	0xFE7
   124                           fsr1h	equ	0xFE2
   125                           fsr1l	equ	0xFE1
   126                           indf2	equ	0xFDF
   127                           postinc2	equ	0xFDE
   128                           postdec2	equ	0xFDD
   129                           plusw2	equ	0xFDB
   130                           fsr2h	equ	0xFDA
   131                           fsr2l	equ	0xFD9
   132                           status	equ	0xFD8
   133                           
   134                           	psect	idataBANK0
   135  001B9E                     __pidataBANK0:
   136                           	opt stack 0
   137                           
   138                           ;initializer for _buttonMessage
   139  001B9E  42                 	db	66
   140  001B9F  75                 	db	117
   141  001BA0  74                 	db	116
   142  001BA1  74                 	db	116
   143  001BA2  6F                 	db	111
   144  001BA3  6E                 	db	110
   145  001BA4  20                 	db	32
   146  001BA5  70                 	db	112
   147  001BA6  72                 	db	114
   148  001BA7  65                 	db	101
   149  001BA8  73                 	db	115
   150  001BA9  73                 	db	115
   151  001BAA  65                 	db	101
   152  001BAB  64                 	db	100
   153  001BAC  2E                 	db	46
   154  001BAD  0D                 	db	13
   155  001BAE  0A                 	db	10
   156  001BAF  00                 	db	0
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           prodh	equ	0xFF4
   162                           prodl	equ	0xFF3
   163                           intcon	equ	0xFF2
   164                           wreg	equ	0xFE8
   165                           indf1	equ	0xFE7
   166                           fsr1h	equ	0xFE2
   167                           fsr1l	equ	0xFE1
   168                           indf2	equ	0xFDF
   169                           postinc2	equ	0xFDE
   170                           postdec2	equ	0xFDD
   171                           plusw2	equ	0xFDB
   172                           fsr2h	equ	0xFDA
   173                           fsr2l	equ	0xFD9
   174                           status	equ	0xFD8
   175                           
   176                           	psect	smallconst
   177  000300                     __psmallconst:
   178                           	opt stack 0
   179  000300  00                 	db	0
   180  000301                     _USB_SD_Ptr:
   181                           	opt stack 0
   182  000301  C2                 	db	low _sd000
   183  000302  7C                 	db	low _sd001
   184  000303  48                 	db	low _sd002
   185  000304                     __end_of_USB_SD_Ptr:
   186                           	opt stack 0
   187  000304                     _USB_CD_Ptr:
   188                           	opt stack 0
   189  000304  05                 	db	low _configDescriptor1
   190  000305                     __end_of_USB_CD_Ptr:
   191                           	opt stack 0
   192  000305                     _configDescriptor1:
   193                           	opt stack 0
   194  000305  09                 	db	9
   195  000306  02                 	db	2
   196  000307  43                 	db	67
   197  000308  00                 	db	0
   198  000309  02                 	db	2
   199  00030A  01                 	db	1
   200  00030B  00                 	db	0
   201  00030C  C0                 	db	192
   202  00030D  32                 	db	50
   203  00030E  09                 	db	9
   204  00030F  04                 	db	4
   205  000310  00                 	db	0
   206  000311  00                 	db	0
   207  000312  01                 	db	1
   208  000313  02                 	db	2
   209  000314  02                 	db	2
   210  000315  01                 	db	1
   211  000316  00                 	db	0
   212  000317  05                 	db	5
   213  000318  24                 	db	36
   214  000319  00                 	db	0
   215  00031A  10                 	db	16
   216  00031B  01                 	db	1
   217  00031C  04                 	db	4
   218  00031D  24                 	db	36
   219  00031E  02                 	db	2
   220  00031F  02                 	db	2
   221  000320  05                 	db	5
   222  000321  24                 	db	36
   223  000322  06                 	db	6
   224  000323  00                 	db	0
   225  000324  01                 	db	1
   226  000325  05                 	db	5
   227  000326  24                 	db	36
   228  000327  01                 	db	1
   229  000328  00                 	db	0
   230  000329  01                 	db	1
   231  00032A  07                 	db	7
   232  00032B  05                 	db	5
   233  00032C  81                 	db	129
   234  00032D  03                 	db	3
   235  00032E  08                 	db	8
   236  00032F  00                 	db	0
   237  000330  02                 	db	2
   238  000331  09                 	db	9
   239  000332  04                 	db	4
   240  000333  01                 	db	1
   241  000334  00                 	db	0
   242  000335  02                 	db	2
   243  000336  0A                 	db	10
   244  000337  00                 	db	0
   245  000338  00                 	db	0
   246  000339  00                 	db	0
   247  00033A  07                 	db	7
   248  00033B  05                 	db	5
   249  00033C  02                 	db	2
   250  00033D  02                 	db	2
   251  00033E  40                 	db	64
   252  00033F  00                 	db	0
   253  000340  00                 	db	0
   254  000341  07                 	db	7
   255  000342  05                 	db	5
   256  000343  82                 	db	130
   257  000344  02                 	db	2
   258  000345  40                 	db	64
   259  000346  00                 	db	0
   260  000347  00                 	db	0
   261  000348                     __end_of_configDescriptor1:
   262                           	opt stack 0
   263  000348                     _sd002:
   264                           	opt stack 0
   265  000348  34                 	db	52
   266  000349  03                 	db	3
   267  00034A  0043               	dw	67
   268  00034C  0044               	dw	68
   269  00034E  0043               	dw	67
   270  000350  0020               	dw	32
   271  000352  0052               	dw	82
   272  000354  0053               	dw	83
   273  000356  002D               	dw	45
   274  000358  0032               	dw	50
   275  00035A  0033               	dw	51
   276  00035C  0032               	dw	50
   277  00035E  0020               	dw	32
   278  000360  0045               	dw	69
   279  000362  006D               	dw	109
   280  000364  0075               	dw	117
   281  000366  006C               	dw	108
   282  000368  0061               	dw	97
   283  00036A  0074               	dw	116
   284  00036C  0069               	dw	105
   285  00036E  006F               	dw	111
   286  000370  006E               	dw	110
   287  000372  0020               	dw	32
   288  000374  0044               	dw	68
   289  000376  0065               	dw	101
   290  000378  006D               	dw	109
   291  00037A  006F               	dw	111
   292  00037C                     __end_of_sd002:
   293                           	opt stack 0
   294  00037C                     _sd001:
   295                           	opt stack 0
   296  00037C  34                 	db	52
   297  00037D  03                 	db	3
   298  00037E  004D               	dw	77
   299  000380  0069               	dw	105
   300  000382  0063               	dw	99
   301  000384  0072               	dw	114
   302  000386  006F               	dw	111
   303  000388  0063               	dw	99
   304  00038A  0068               	dw	104
   305  00038C  0069               	dw	105
   306  00038E  0070               	dw	112
   307  000390  0020               	dw	32
   308  000392  0054               	dw	84
   309  000394  0065               	dw	101
   310  000396  0063               	dw	99
   311  000398  0068               	dw	104
   312  00039A  006E               	dw	110
   313  00039C  006F               	dw	111
   314  00039E  006C               	dw	108
   315  0003A0  006F               	dw	111
   316  0003A2  0067               	dw	103
   317  0003A4  0079               	dw	121
   318  0003A6  0020               	dw	32
   319  0003A8  0049               	dw	73
   320  0003AA  006E               	dw	110
   321  0003AC  0063               	dw	99
   322  0003AE  002E               	dw	46
   323  0003B0                     __end_of_sd001:
   324                           	opt stack 0
   325  0003B0                     _device_dsc:
   326                           	opt stack 0
   327  0003B0  12                 	db	18
   328  0003B1  01                 	db	1
   329  0003B2  0200               	dw	512
   330  0003B4  02                 	db	2
   331  0003B5  00                 	db	0
   332  0003B6  00                 	db	0
   333  0003B7  08                 	db	8
   334  0003B8  04D8               	dw	1240
   335  0003BA  000A               	dw	10
   336  0003BC  0100               	dw	256
   337  0003BE  01                 	db	1
   338  0003BF  02                 	db	2
   339  0003C0  00                 	db	0
   340  0003C1  01                 	db	1
   341  0003C2                     __end_of_device_dsc:
   342                           	opt stack 0
   343  0003C2                     _sd000:
   344                           	opt stack 0
   345  0003C2  04                 	db	4
   346  0003C3  03                 	db	3
   347  0003C4  0409               	dw	1033
   348  0003C6                     __end_of_sd000:
   349                           	opt stack 0
   350  0000                     _UEP0bits	set	3923
   351  0000                     _UADDR	set	3932
   352  0000                     _UEIE	set	3931
   353  0000                     _UEIR	set	3935
   354  0000                     _UEP1	set	3924
   355  0000                     _UEP0	set	3923
   356  0000                     _ANSELH	set	3967
   357  0000                     _ANSEL	set	3966
   358  0000                     _INTCONbits	set	4082
   359  0000                     _IPR2bits	set	4002
   360  0000                     _RCONbits	set	4048
   361  0000                     _UCON	set	3940
   362  0000                     _USTAT	set	3939
   363  0000                     _PIR2bits	set	4001
   364  0000                     _UIEbits	set	3936
   365  0000                     _UIRbits	set	3938
   366  0000                     _UIE	set	3936
   367  0000                     _UCFG	set	3937
   368  0000                     _UIR	set	3938
   369  0000                     _PIE2bits	set	4000
   370  0000                     _PORTAbits	set	3968
   371  0000                     _UCONbits	set	3940
   372  0000                     _PORTCbits	set	3970
   373  0000                     _LATCbits	set	3979
   374  0000                     _TRISCbits	set	3988
   375                           
   376                           ; #config settings
   377  0003C6  00                 	db	0	; dummy byte at the end
   378  0000                     tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           prodh	equ	0xFF4
   383                           prodl	equ	0xFF3
   384                           intcon	equ	0xFF2
   385                           wreg	equ	0xFE8
   386                           indf1	equ	0xFE7
   387                           fsr1h	equ	0xFE2
   388                           fsr1l	equ	0xFE1
   389                           indf2	equ	0xFDF
   390                           postinc2	equ	0xFDE
   391                           postdec2	equ	0xFDD
   392                           plusw2	equ	0xFDB
   393                           fsr2h	equ	0xFDA
   394                           fsr2l	equ	0xFD9
   395                           status	equ	0xFD8
   396                           
   397                           	psect	cinit
   398  0017C8                     __pcinit:
   399                           	opt stack 0
   400  0017C8                     start_initialization:
   401                           	opt stack 0
   402  0017C8                     __initialization:
   403                           	opt stack 0
   404                           
   405                           ; Initialize objects allocated to BANK0 (18 bytes)
   406                           ; load TBLPTR registers with __pidataBANK0
   407  0017C8  0E9E               	movlw	low __pidataBANK0
   408  0017CA  6EF6               	movwf	tblptrl,c
   409  0017CC  0E1B               	movlw	high __pidataBANK0
   410  0017CE  6EF7               	movwf	tblptrh,c
   411  0017D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   412  0017D2  6EF8               	movwf	tblptru,c
   413  0017D4  EE00  F0D5         	lfsr	0,__pdataBANK0
   414  0017D8  EE10 F012          	lfsr	1,18
   415  0017DC                     copy_data0:
   416  0017DC  0009               	tblrd		*+
   417  0017DE  CFF5 FFEE          	movff	tablat,postinc0
   418  0017E2  50E5               	movf	postdec1,w,c
   419  0017E4  50E1               	movf	fsr1l,w,c
   420  0017E6  E1FA               	bnz	copy_data0
   421                           
   422                           ; Clear objects allocated to BANK0 (81 bytes)
   423  0017E8  EE00  F060         	lfsr	0,__pbssBANK0
   424  0017EC  0E51               	movlw	81
   425  0017EE                     clear_0:
   426  0017EE  6AEE               	clrf	postinc0,c
   427  0017F0  06E8               	decf	wreg,f,c
   428  0017F2  E1FD               	bnz	clear_0
   429                           
   430                           ; Clear objects allocated to COMRAM (41 bytes)
   431  0017F4  EE00  F001         	lfsr	0,__pbssCOMRAM
   432  0017F8  0E29               	movlw	41
   433  0017FA                     clear_1:
   434  0017FA  6AEE               	clrf	postinc0,c
   435  0017FC  06E8               	decf	wreg,f,c
   436  0017FE  E1FD               	bnz	clear_1
   437  001800                     end_of_initialization:
   438                           	opt stack 0
   439  001800                     __end_of__initialization:
   440                           	opt stack 0
   441  001800  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   442  001802  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   443  001804  0E00               	movlw	low (__Lmediumconst shr (0+16))
   444  001806  6EF8               	movwf	tblptru,c
   445  001808  0100               	movlb	0
   446  00180A  EFB1  F00C         	goto	_main	;jump to C main() function
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           prodh	equ	0xFF4
   452                           prodl	equ	0xFF3
   453                           intcon	equ	0xFF2
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           indf1	equ	0xFE7
   457                           postdec1	equ	0xFE5
   458                           fsr1h	equ	0xFE2
   459                           fsr1l	equ	0xFE1
   460                           indf2	equ	0xFDF
   461                           postinc2	equ	0xFDE
   462                           postdec2	equ	0xFDD
   463                           plusw2	equ	0xFDB
   464                           fsr2h	equ	0xFDA
   465                           fsr2l	equ	0xFD9
   466                           status	equ	0xFD8
   467                           
   468                           	psect	bssCOMRAM
   469  000001                     __pbssCOMRAM:
   470                           	opt stack 0
   471  000001                     _outPipes:
   472                           	opt stack 0
   473  000001                     	ds	8
   474  000009                     _inPipes:
   475                           	opt stack 0
   476  000009                     	ds	6
   477  00000F                     _pBDTEntryIn:
   478                           	opt stack 0
   479  00000F                     	ds	6
   480  000015                     _pBDTEntryEP0OutNext:
   481                           	opt stack 0
   482  000015                     	ds	2
   483  000017                     _pBDTEntryEP0OutCurrent:
   484                           	opt stack 0
   485  000017                     	ds	2
   486  000019                     APP_LEDUpdateUSBStatus@ledCount:
   487                           	opt stack 0
   488  000019                     	ds	2
   489  00001B                     _cdc_tx_len:
   490                           	opt stack 0
   491  00001B                     	ds	1
   492  00001C                     _cdc_rx_len:
   493                           	opt stack 0
   494  00001C                     	ds	1
   495  00001D                     _USBDeferINDataStagePackets:
   496                           	opt stack 0
   497  00001D                     	ds	1
   498  00001E                     _USBStatusStageEnabledFlag2:
   499                           	opt stack 0
   500  00001E                     	ds	1
   501  00001F                     _USBStatusStageEnabledFlag1:
   502                           	opt stack 0
   503  00001F                     	ds	1
   504  000020                     _USBDeferStatusStagePacket:
   505                           	opt stack 0
   506  000020                     	ds	1
   507  000021                     _USBStatusStageTimeoutCounter:
   508                           	opt stack 0
   509  000021                     	ds	1
   510  000022                     _BothEP0OutUOWNsSet:
   511                           	opt stack 0
   512  000022                     	ds	1
   513  000023                     _endpoint_number:
   514                           	opt stack 0
   515  000023                     	ds	1
   516  000024                     _USBBusIsSuspended:
   517                           	opt stack 0
   518  000024                     	ds	1
   519  000025                     _RemoteWakeup:
   520                           	opt stack 0
   521  000025                     	ds	1
   522  000026                     _controlTransferState:
   523                           	opt stack 0
   524  000026                     	ds	1
   525  000027                     _shortPacketStatus:
   526                           	opt stack 0
   527  000027                     	ds	1
   528  000028                     _USTATcopy:
   529                           	opt stack 0
   530  000028                     	ds	1
   531  000029                     _USBActiveConfiguration:
   532                           	opt stack 0
   533  000029                     	ds	1
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           prodh	equ	0xFF4
   539                           prodl	equ	0xFF3
   540                           intcon	equ	0xFF2
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           indf1	equ	0xFE7
   544                           postdec1	equ	0xFE5
   545                           fsr1h	equ	0xFE2
   546                           fsr1l	equ	0xFE1
   547                           indf2	equ	0xFDF
   548                           postinc2	equ	0xFDE
   549                           postdec2	equ	0xFDD
   550                           plusw2	equ	0xFDB
   551                           fsr2h	equ	0xFDA
   552                           fsr2l	equ	0xFD9
   553                           status	equ	0xFD8
   554                           
   555                           	psect	bssBANK0
   556  000060                     __pbssBANK0:
   557                           	opt stack 0
   558  000060                     _pBDTEntryOut:
   559                           	opt stack 0
   560  000060                     	ds	6
   561  000066                     _USB1msTickCount:
   562                           	opt stack 0
   563  000066                     	ds	4
   564  00006A                     _pCDCDst:
   565                           	opt stack 0
   566  00006A                     	ds	3
   567  00006D                     _pCDCSrc:
   568                           	opt stack 0
   569  00006D                     	ds	3
   570  000070                     _ep_data_out:
   571                           	opt stack 0
   572  000070                     	ds	3
   573  000073                     _ep_data_in:
   574                           	opt stack 0
   575  000073                     	ds	3
   576  000076                     _CDCDataInHandle:
   577                           	opt stack 0
   578  000076                     	ds	2
   579  000078                     _CDCDataOutHandle:
   580                           	opt stack 0
   581  000078                     	ds	2
   582  00007A                     _pDst:
   583                           	opt stack 0
   584  00007A                     	ds	2
   585  00007C                     _cdc_mem_type:
   586                           	opt stack 0
   587  00007C                     	ds	1
   588  00007D                     _USBTicksSinceSuspendEnd:
   589                           	opt stack 0
   590  00007D                     	ds	1
   591  00007E                     _USBDeferOUTDataStagePackets:
   592                           	opt stack 0
   593  00007E                     	ds	1
   594  00007F                     _buttonPressed:
   595                           	opt stack 0
   596  00007F                     	ds	1
   597  000080                     _cdc_trf_state:
   598                           	opt stack 0
   599  000080                     	ds	1
   600  000081                     _USBDeviceState:
   601                           	opt stack 0
   602  000081                     	ds	1
   603  000082                     _writeBuffer:
   604                           	opt stack 0
   605  000082                     	ds	15
   606  000091                     _readBuffer:
   607                           	opt stack 0
   608  000091                     	ds	15
   609  0000A0                     _dummy_encapsulated_cmd_response:
   610                           	opt stack 0
   611  0000A0                     	ds	8
   612  0000A8                     _line_coding:
   613                           	opt stack 0
   614  0000A8                     	ds	7
   615  0000AF                     _USBAlternateInterface:
   616                           	opt stack 0
   617  0000AF                     	ds	2
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           prodh	equ	0xFF4
   623                           prodl	equ	0xFF3
   624                           intcon	equ	0xFF2
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           indf1	equ	0xFE7
   628                           postdec1	equ	0xFE5
   629                           fsr1h	equ	0xFE2
   630                           fsr1l	equ	0xFE1
   631                           indf2	equ	0xFDF
   632                           postinc2	equ	0xFDE
   633                           postdec2	equ	0xFDD
   634                           plusw2	equ	0xFDB
   635                           fsr2h	equ	0xFDA
   636                           fsr2l	equ	0xFD9
   637                           status	equ	0xFD8
   638                           
   639                           	psect	dataBANK0
   640  0000D5                     __pdataBANK0:
   641                           	opt stack 0
   642  0000D5                     _buttonMessage:
   643                           	opt stack 0
   644  0000D5                     	ds	18
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           prodh	equ	0xFF4
   650                           prodl	equ	0xFF3
   651                           intcon	equ	0xFF2
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           indf1	equ	0xFE7
   655                           postdec1	equ	0xFE5
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           indf2	equ	0xFDF
   659                           postinc2	equ	0xFDE
   660                           postdec2	equ	0xFDD
   661                           plusw2	equ	0xFDB
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8
   665                           
   666                           	psect	cstackBANK0
   667  0000B1                     __pcstackBANK0:
   668                           	opt stack 0
   669  0000B1                     ??_PIC18F26K40_sendByteMsbToLsb:
   670  0000B1                     ?_USBTransferOnePacket:
   671                           	opt stack 0
   672  0000B1                     PIC18F26K40_sendByte@direction:
   673                           	opt stack 0
   674  0000B1                     BUTTON_IsPressed@button:
   675                           	opt stack 0
   676  0000B1                     BUTTON_Enable@button:
   677                           	opt stack 0
   678  0000B1                     LED_Enable@led:
   679                           	opt stack 0
   680  0000B1                     USBTransferOnePacket@dir:
   681                           	opt stack 0
   682  0000B1                     putUSBUSART@data:
   683                           	opt stack 0
   684  0000B1                     putrsUSBUSART@data:
   685                           	opt stack 0
   686  0000B1                     memset@p1:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x0
   690  0000B1                     	ds	1
   691  0000B2                     ??_PIC18F26K40_sendByte:
   692  0000B2                     SYSTEM_Initialize@state:
   693                           	opt stack 0
   694  0000B2                     putUSBUSART@length:
   695                           	opt stack 0
   696  0000B2                     putrsUSBUSART@pData:
   697                           	opt stack 0
   698  0000B2                     USBTransferOnePacket@data:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x1
   702  0000B2                     	ds	1
   703  0000B3                     PIC18F26K40_sendByteMsbToLsb@info:
   704                           	opt stack 0
   705  0000B3                     putrsUSBUSART@len:
   706                           	opt stack 0
   707  0000B3                     memset@c:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x2
   711  0000B3                     	ds	1
   712  0000B4                     PIC18F26K40_sendByte@info:
   713                           	opt stack 0
   714  0000B4                     PIC18F26K40_sendByteMsbToLsb@i:
   715                           	opt stack 0
   716  0000B4                     USBTransferOnePacket@len:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x3
   720  0000B4                     	ds	1
   721  0000B5                     ??_USBTransferOnePacket:
   722  0000B5                     PIC18F26K40_sendByte@j:
   723                           	opt stack 0
   724  0000B5                     memset@n:
   725                           	opt stack 0
   726  0000B5                     PIC18F26K40_loadDataIntoNVM@data:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x4
   730  0000B5                     	ds	1
   731  0000B6                     PIC18F26K40_sendByte@i:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x5
   735  0000B6                     	ds	1
   736  0000B7                     ?_PIC18F26K40_readThreeBytes:
   737                           	opt stack 0
   738  0000B7                     PIC18F26K40_readThreeBytes@IncreasePC:
   739                           	opt stack 0
   740  0000B7                     USBTransferOnePacket@ep:
   741                           	opt stack 0
   742  0000B7                     memset@p:
   743                           	opt stack 0
   744  0000B7                     PIC18F26K40_enterLowVoltageProg@code:
   745                           	opt stack 0
   746  0000B7                     PIC18F26K40_loadPC@address:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x6
   750  0000B7                     	ds	1
   751  0000B8                     USBTransferOnePacket@handle:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x7
   755  0000B8                     	ds	1
   756  0000B9                     PIC18F26K40_loadDataIntoNVM@IncreasePC:
   757                           	opt stack 0
   758  0000B9                     USBDeviceInit@i:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x8
   762  0000B9                     	ds	1
   763  0000BA                     PIC18F26K40_loadDataIntoNVM@LatchType:
   764                           	opt stack 0
   765  0000BA                     getsUSBUSART@buffer:
   766                           	opt stack 0
   767  0000BA                     CDCTxService@i:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x9
   771  0000BA                     	ds	1
   772  0000BB                     ??_PIC18F26K40_readThreeBytes:
   773  0000BB                     ??_PIC18F26K40_loadDataIntoNVM:
   774  0000BB                     getsUSBUSART@len:
   775                           	opt stack 0
   776  0000BB                     CDCTxService@byte_to_send:
   777                           	opt stack 0
   778  0000BB                     PIC18F26K40_loadPC@tempAddress:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0xA
   782  0000BB                     	ds	1
   783  0000BC                     PIC18F26K40_loadDataIntoNVM@tempData:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0xB
   787  0000BC                     	ds	6
   788  0000C2                     PIC18F26K40_readThreeBytes@direction:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x11
   792  0000C2                     	ds	1
   793  0000C3                     PIC18F26K40_readThreeBytes@data:
   794                           	opt stack 0
   795                           
   796                           ; 4 bytes @ 0x12
   797  0000C3                     	ds	4
   798  0000C7                     PIC18F26K40_readThreeBytes@j:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x16
   802  0000C7                     	ds	1
   803  0000C8                     PIC18F26K40_readThreeBytes@i:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x17
   807  0000C8                     	ds	1
   808  0000C9                     APP_DeviceCDCBasicDemoTasks@numBytesRead:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x18
   812  0000C9                     	ds	1
   813  0000CA                     APP_DeviceCDCBasicDemoTasks@gsk_i:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x19
   817  0000CA                     	ds	1
   818  0000CB                     APP_DeviceCDCBasicDemoTasks@Data:
   819                           	opt stack 0
   820                           
   821                           ; 4 bytes @ 0x1A
   822  0000CB                     	ds	4
   823  0000CF                     APP_DeviceCDCBasicDemoTasks@a:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x1E
   827  0000CF                     	ds	4
   828  0000D3                     ??_main:
   829                           
   830                           ; 1 bytes @ 0x22
   831  0000D3                     	ds	2
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           prodh	equ	0xFF4
   837                           prodl	equ	0xFF3
   838                           intcon	equ	0xFF2
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           indf1	equ	0xFE7
   842                           postdec1	equ	0xFE5
   843                           fsr1h	equ	0xFE2
   844                           fsr1l	equ	0xFE1
   845                           indf2	equ	0xFDF
   846                           postinc2	equ	0xFDE
   847                           postdec2	equ	0xFDD
   848                           plusw2	equ	0xFDB
   849                           fsr2h	equ	0xFDA
   850                           fsr2l	equ	0xFD9
   851                           status	equ	0xFD8
   852                           
   853                           	psect	cstackCOMRAM
   854  00002A                     __pcstackCOMRAM:
   855                           	opt stack 0
   856  00002A                     ??_USBStdGetDscHandler:
   857  00002A                     ?i2_USBTransferOnePacket:
   858                           	opt stack 0
   859  00002A                     LED_On@led:
   860                           	opt stack 0
   861  00002A                     LED_Off@led:
   862                           	opt stack 0
   863  00002A                     USBConfigureEndpoint@direction:
   864                           	opt stack 0
   865  00002A                     USBCtrlTrfTxService@byteToSend:
   866                           	opt stack 0
   867  00002A                     USBCtrlTrfRxService@i:
   868                           	opt stack 0
   869  00002A                     i2BUTTON_Enable@button:
   870                           	opt stack 0
   871  00002A                     i2LED_Enable@led:
   872                           	opt stack 0
   873  00002A                     i2USBTransferOnePacket@dir:
   874                           	opt stack 0
   875  00002A                     USBStdGetStatusHandler@p:
   876                           	opt stack 0
   877  00002A                     memcpy@d1:
   878                           	opt stack 0
   879  00002A                     i2memset@p1:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x0
   883  00002A                     	ds	1
   884  00002B                     ??_USBConfigureEndpoint:
   885  00002B                     USBCtrlTrfRxService@byteToRead:
   886                           	opt stack 0
   887  00002B                     USBCtrlTrfInHandler@lastDTS:
   888                           	opt stack 0
   889  00002B                     i2SYSTEM_Initialize@state:
   890                           	opt stack 0
   891  00002B                     i2USBTransferOnePacket@data:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x1
   895  00002B                     	ds	1
   896  00002C                     memcpy@s1:
   897                           	opt stack 0
   898  00002C                     i2memset@c:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x2
   902  00002C                     	ds	1
   903  00002D                     i2USBTransferOnePacket@len:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x3
   907  00002D                     	ds	1
   908  00002E                     ??i2_USBTransferOnePacket:
   909  00002E                     memcpy@n:
   910                           	opt stack 0
   911  00002E                     i2memset@n:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x4
   915  00002E                     	ds	1
   916  00002F                     USBConfigureEndpoint@EPNum:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x5
   920  00002F                     	ds	1
   921  000030                     i2USBTransferOnePacket@ep:
   922                           	opt stack 0
   923  000030                     USBConfigureEndpoint@handle:
   924                           	opt stack 0
   925  000030                     memcpy@d:
   926                           	opt stack 0
   927  000030                     i2memset@p:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0x6
   931  000030                     	ds	1
   932  000031                     i2USBTransferOnePacket@handle:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x7
   936  000031                     	ds	1
   937  000032                     USBEnableEndpoint@options:
   938                           	opt stack 0
   939  000032                     i2USBDeviceInit@i:
   940                           	opt stack 0
   941  000032                     memcpy@s:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x8
   945  000032                     	ds	1
   946  000033                     USBEnableEndpoint@p:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x9
   950  000033                     	ds	1
   951  000034                     memcpy@tmp:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0xA
   955  000034                     	ds	1
   956  000035                     USBEnableEndpoint@ep:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0xB
   960  000035                     	ds	1
   961  000036                     USER_USB_CALLBACK_EVENT_HANDLER@event:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0xC
   965  000036                     	ds	2
   966  000038                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0xE
   970  000038                     	ds	2
   971  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@size:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x10
   975  00003A                     	ds	2
   976  00003C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
   977                           
   978                           ; 1 bytes @ 0x12
   979  00003C                     	ds	2
   980  00003E                     ??_USBStdFeatureReqHandler:
   981  00003E                     USBStdSetCfgHandler@i:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x14
   985  00003E                     	ds	2
   986  000040                     USBStdFeatureReqHandler@pUEP:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x16
   990  000040                     	ds	2
   991  000042                     USBStdFeatureReqHandler@current_ep_data:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x18
   995  000042                     	ds	1
   996  000043                     USBStdFeatureReqHandler@p:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x19
  1000  000043                     	ds	2
  1001  000045                     ??_USBCheckStdRequest:
  1002                           
  1003                           ; 1 bytes @ 0x1B
  1004  000045                     	ds	1
  1005  000046                     ??_USBCtrlEPService:
  1006  000046                     
  1007                           ; 1 bytes @ 0x1C
  1008  000046                     	ds	1
  1009  000047                     USBDeviceTasks@i:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x1D
  1013  000047                     	ds	1
  1014  000048                     ??_SYS_InterruptHigh:
  1015                           
  1016                           ; 1 bytes @ 0x1E
  1017  000048                     	ds	10
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           prodh	equ	0xFF4
  1023                           prodl	equ	0xFF3
  1024                           intcon	equ	0xFF2
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           indf1	equ	0xFE7
  1028                           postdec1	equ	0xFE5
  1029                           fsr1h	equ	0xFE2
  1030                           fsr1l	equ	0xFE1
  1031                           indf2	equ	0xFDF
  1032                           postinc2	equ	0xFDE
  1033                           postdec2	equ	0xFDD
  1034                           plusw2	equ	0xFDB
  1035                           fsr2h	equ	0xFDA
  1036                           fsr2l	equ	0xFD9
  1037                           status	equ	0xFD8
  1038                           
  1039 ;;
  1040 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1041 ;;
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 12 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       2       0       0       0
  1061 ;;      Totals:         0       2       0       0       0
  1062 ;;Total ram usage:        2 bytes
  1063 ;; Hardware stack levels required when called:   14
  1064 ;; This function calls:
  1065 ;;		_APP_DeviceCDCBasicDemoTasks
  1066 ;;		_SYSTEM_Initialize
  1067 ;;		_USBDeviceAttach
  1068 ;;		_USBDeviceInit
  1069 ;; This function is called by:
  1070 ;;		Startup code after reset
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text0
  1075  001962                     __ptext0:
  1076                           	opt stack 0
  1077  001962                     _main:
  1078                           	opt stack 17
  1079                           
  1080                           ;main.c: 13: ANSEL = ANSELH = 0;
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;incstack = 0
  1084  001962  6A7F               	clrf	3967,c	;volatile
  1085  001964  6A7E               	clrf	3966,c	;volatile
  1086                           
  1087                           ;main.c: 14: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1088  001966  0E00               	movlw	0
  1089  001968  EC8D  F00D         	call	_SYSTEM_Initialize
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;main.c: 15: USBDeviceInit();
  1093  00196C  ECB9  F00A         	call	_USBDeviceInit	;wreg free
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;main.c: 16: USBDeviceAttach();
  1097  001970  EC63  F00C         	call	_USBDeviceAttach	;wreg free
  1098  001974                     l5223:
  1099                           
  1100                           ;main.c: 18: ;
  1101                           ;main.c: 37: APP_DeviceCDCBasicDemoTasks();
  1102  001974  ECE4  F001         	call	_APP_DeviceCDCBasicDemoTasks	;wreg free
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;main.c: 38: _delay((unsigned long)((100)*(12000000/4000.0)));
  1106  001978  0E02               	movlw	2
  1107  00197A  0100               	movlb	0	; () banked
  1108  00197C  6FD4               	movwf	(??_main+1)& (0+255),b
  1109  00197E  0E86               	movlw	134
  1110  001980  6FD3               	movwf	??_main& (0+255),b
  1111  001982  0E99               	movlw	153
  1112  001984                     u4097:
  1113  001984  2EE8               	decfsz	wreg,f,c
  1114  001986  D7FE               	bra	u4097
  1115  001988  2FD3               	decfsz	??_main& (0+255),f,b
  1116  00198A  D7FC               	bra	u4097
  1117  00198C  2FD4               	decfsz	(??_main+1)& (0+255),f,b
  1118  00198E  D7FA               	bra	u4097
  1119  001990  D7F1               	goto	l5223
  1120  001992                     __end_of_main:
  1121                           	opt stack 0
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           prodh	equ	0xFF4
  1127                           prodl	equ	0xFF3
  1128                           intcon	equ	0xFF2
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           indf1	equ	0xFE7
  1132                           postdec1	equ	0xFE5
  1133                           fsr1h	equ	0xFE2
  1134                           fsr1l	equ	0xFE1
  1135                           indf2	equ	0xFDF
  1136                           postinc2	equ	0xFDE
  1137                           postdec2	equ	0xFDD
  1138                           plusw2	equ	0xFDB
  1139                           fsr2h	equ	0xFDA
  1140                           fsr2l	equ	0xFD9
  1141                           status	equ	0xFD8
  1142                           
  1143 ;; *************** function _USBDeviceInit *****************
  1144 ;; Defined at:
  1145 ;;		line 277 in file "picLibs/usb_device.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  i               1    8[BANK0 ] unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 3F/0
  1156 ;;		On exit  : 3F/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1159 ;;      Params:         0       0       0       0       0
  1160 ;;      Locals:         0       1       0       0       0
  1161 ;;      Temps:          0       0       0       0       0
  1162 ;;      Totals:         0       1       0       0       0
  1163 ;;Total ram usage:        1 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:   11
  1166 ;; This function calls:
  1167 ;;		_memset
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text1
  1174  001572                     __ptext1:
  1175                           	opt stack 0
  1176  001572                     _USBDeviceInit:
  1177                           	opt stack 0
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;usb_device.c: 279: uint8_t i;
  1181                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1182                           
  1183                           ;incstack = 0
  1184                           
  1185                           ;usb_device.c: 285: ;
  1186                           ;usb_device.c: 288: {UEIR = 0;};
  1187                           
  1188                           ;usb_device.c: 291: {UIR = 0;};
  1189                           
  1190                           ;usb_device.c: 294: UEP0 = 0;
  1191  001572  ECB3  F004         	call	PL86	;call to abstracted procedure
  1192                           
  1193                           ; BSR set to: 15
  1194                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1195  001576  0E54               	movlw	84
  1196  001578  0100               	movlb	0	; () banked
  1197  00157A  6FB1               	movwf	memset@p1& (0+255),b
  1198  00157C  0E0F               	movlw	15
  1199  00157E  6FB2               	movwf	(memset@p1+1)& (0+255),b
  1200  001580  6BB4               	clrf	(memset@c+1)& (0+255),b
  1201  001582  6BB3               	clrf	memset@c& (0+255),b
  1202  001584  6BB6               	clrf	(memset@n+1)& (0+255),b
  1203  001586  0E02               	movlw	2
  1204  001588  6FB5               	movwf	memset@n& (0+255),b
  1205  00158A  EC23  F00D         	call	_memset	;wreg free
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1209                           
  1210                           ; BSR set to: 0
  1211                           
  1212                           ; BSR set to: 15
  1213  00158E  EC75  F00C         	call	PL40	;call to abstracted procedure
  1214                           
  1215                           ; BSR set to: 15
  1216                           ;usb_device.c: 301: ;
  1217                           ;usb_device.c: 304: ;
  1218                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1219  001592  0100               	movlb	0	; () banked
  1220  001594  6BB9               	clrf	USBDeviceInit@i& (0+255),b
  1221  001596                     l5139:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;usb_device.c: 308: {
  1225                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1226  001596  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1227  001598  ECA7  F004         	call	PL44	;call to abstracted procedure
  1228                           
  1229                           ; BSR set to: 0
  1230  00159C  2BB9               	incf	USBDeviceInit@i& (0+255),f,b
  1231                           
  1232                           ; BSR set to: 0
  1233  00159E  0E0B               	movlw	11
  1234  0015A0  65B9               	cpfsgt	USBDeviceInit@i& (0+255),b
  1235  0015A2  D7F9               	goto	l5139
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;usb_device.c: 310: }
  1239                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1240                           
  1241                           ;usb_device.c: 316: UADDR = 0x00;
  1242                           
  1243                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1244                           
  1245                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1246                           
  1247                           ;usb_device.c: 326: {
  1248                           ;usb_device.c: 327: (UIR &= 0xF7);
  1249                           
  1250                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1251                           
  1252                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1253                           
  1254                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1255                           
  1256                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1257                           
  1258                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1259                           
  1260                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1261                           
  1262                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1263                           
  1264                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1268  0015A4  EC93  F004         	call	PL20	;call to abstracted procedure
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1272  0015A8  6BB9               	clrf	USBDeviceInit@i& (0+255),b
  1273  0015AA                     l5169:
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;usb_device.c: 346: {
  1277                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1278  0015AA  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1279  0015AC  EC3C  F006         	call	PL36	;call to abstracted procedure
  1280  0015B0  6ADE               	clrf	postinc2,c
  1281  0015B2  6ADD               	clrf	postdec2,c
  1282                           
  1283                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1284  0015B4  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1285  0015B6  EC36  F006         	call	PL32	;call to abstracted procedure
  1286  0015BA  6ADE               	clrf	postinc2,c
  1287  0015BC  6ADD               	clrf	postdec2,c
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1291  0015BE  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1292  0015C0  ECBE  F004         	call	PL100	;call to abstracted procedure
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1296  0015C4  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1297  0015C6  ECB9  F004         	call	PL92	;call to abstracted procedure
  1298                           
  1299                           ; BSR set to: 0
  1300  0015CA  2BB9               	incf	USBDeviceInit@i& (0+255),f,b
  1301                           
  1302                           ; BSR set to: 0
  1303  0015CC  0E02               	movlw	2
  1304  0015CE  65B9               	cpfsgt	USBDeviceInit@i& (0+255),b
  1305  0015D0  D7EC               	goto	l5169
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;usb_device.c: 351: }
  1309                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1310  0015D2  0E08               	movlw	8
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1314                           
  1315                           ; BSR set to: 15
  1316                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1317                           
  1318                           ; BSR set to: 2
  1319                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1320                           
  1321                           ; BSR set to: 2
  1322                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1323                           
  1324                           ; BSR set to: 2
  1325                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1326                           
  1327                           ; BSR set to: 2
  1328                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1329                           
  1330                           ; BSR set to: 2
  1331                           ;usb_device.c: 366: USB1msTickCount = 0;
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1338                           
  1339                           ; BSR set to: 0
  1340  0015D4  EF7A  F004         	goto	PL16	;call to abstracted procedure
  1341  0015D8                     __end_of_USBDeviceInit:
  1342                           	opt stack 0
  1343                           tblptru	equ	0xFF8
  1344                           tblptrh	equ	0xFF7
  1345                           tblptrl	equ	0xFF6
  1346                           tablat	equ	0xFF5
  1347                           prodh	equ	0xFF4
  1348                           prodl	equ	0xFF3
  1349                           intcon	equ	0xFF2
  1350                           postinc0	equ	0xFEE
  1351                           wreg	equ	0xFE8
  1352                           indf1	equ	0xFE7
  1353                           postdec1	equ	0xFE5
  1354                           fsr1h	equ	0xFE2
  1355                           fsr1l	equ	0xFE1
  1356                           indf2	equ	0xFDF
  1357                           postinc2	equ	0xFDE
  1358                           postdec2	equ	0xFDD
  1359                           plusw2	equ	0xFDB
  1360                           fsr2h	equ	0xFDA
  1361                           fsr2l	equ	0xFD9
  1362                           status	equ	0xFD8
  1363                           
  1364 ;; *************** function _memset *****************
  1365 ;; Defined at:
  1366 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  p1              2    0[BANK0 ] PTR void 
  1369 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1370 ;;  c               2    2[BANK0 ] int 
  1371 ;;  n               2    4[BANK0 ] unsigned int 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  p               2    6[BANK0 ] PTR unsigned char 
  1374 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  2    0[BANK0 ] PTR void 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 3F/0
  1381 ;;		On exit  : 3F/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1384 ;;      Params:         0       6       0       0       0
  1385 ;;      Locals:         0       2       0       0       0
  1386 ;;      Temps:          0       0       0       0       0
  1387 ;;      Totals:         0       8       0       0       0
  1388 ;;Total ram usage:        8 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:   10
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_USBDeviceInit
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text2
  1399  001A46                     __ptext2:
  1400                           	opt stack 0
  1401  001A46                     _memset:
  1402                           	opt stack 19
  1403                           
  1404                           ; BSR set to: 0
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;incstack = 0
  1408  001A46  C0B1  F0B7         	movff	memset@p1,memset@p
  1409  001A4A  C0B2  F0B8         	movff	memset@p1+1,memset@p+1
  1410  001A4E  D008               	goto	l4977
  1411  001A50                     l4973:
  1412                           
  1413                           ; BSR set to: 0
  1414  001A50  C0B7  FFD9         	movff	memset@p,fsr2l
  1415  001A54  C0B8  FFDA         	movff	memset@p+1,fsr2h
  1416  001A58  C0B3  FFDF         	movff	memset@c,indf2
  1417                           
  1418                           ; BSR set to: 0
  1419  001A5C  4BB7               	infsnz	memset@p& (0+255),f,b
  1420  001A5E  2BB8               	incf	(memset@p+1)& (0+255),f,b
  1421  001A60                     l4977:
  1422                           
  1423                           ; BSR set to: 0
  1424  001A60  07B5               	decf	memset@n& (0+255),f,b
  1425  001A62  A0D8               	btfss	status,0,c
  1426  001A64  07B6               	decf	(memset@n+1)& (0+255),f,b
  1427  001A66  29B5               	incf	memset@n& (0+255),w,b
  1428  001A68  E1F3               	bnz	l4973
  1429  001A6A  29B6               	incf	(memset@n+1)& (0+255),w,b
  1430  001A6C  E1F1               	bnz	l4973
  1431                           
  1432                           ; BSR set to: 0
  1433  001A6E  0012               	return		;funcret
  1434  001A70                     __end_of_memset:
  1435                           	opt stack 0
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           prodh	equ	0xFF4
  1441                           prodl	equ	0xFF3
  1442                           intcon	equ	0xFF2
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           indf1	equ	0xFE7
  1446                           postdec1	equ	0xFE5
  1447                           fsr1h	equ	0xFE2
  1448                           fsr1l	equ	0xFE1
  1449                           indf2	equ	0xFDF
  1450                           postinc2	equ	0xFDE
  1451                           postdec2	equ	0xFDD
  1452                           plusw2	equ	0xFDB
  1453                           fsr2h	equ	0xFDA
  1454                           fsr2l	equ	0xFD9
  1455                           status	equ	0xFD8
  1456                           
  1457 ;; *************** function _USBDeviceAttach *****************
  1458 ;; Defined at:
  1459 ;;		line 1352 in file "picLibs/usb_device.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2
  1468 ;; Tracked objects:
  1469 ;;		On entry : 3F/0
  1470 ;;		On exit  : 3F/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:   10
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text3
  1488  0018C6                     __ptext3:
  1489                           	opt stack 0
  1490  0018C6                     _USBDeviceAttach:
  1491                           	opt stack 20
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;usb_device.c: 1356: {
  1495                           ;usb_device.c: 1357: if(1 == 1)
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;incstack = 0
  1499  0018C6  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1500  0018C8  A4D8               	btfss	status,2,c
  1501  0018CA  0012               	return	
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;usb_device.c: 1358: {
  1505                           ;usb_device.c: 1360: UCON = 0;
  1506  0018CC  6A64               	clrf	3940,c	;volatile
  1507                           
  1508                           ;usb_device.c: 1363: UIE = 0;
  1509  0018CE  6A60               	clrf	3936,c	;volatile
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1513  0018D0  D80C               	call	PL40	;call to abstracted procedure
  1514                           
  1515                           ; BSR set to: 15
  1516                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1517  0018D2  8ED0               	bsf	4048,7,c	;volatile
  1518                           
  1519                           ; BSR set to: 15
  1520  0018D4  84A2               	bsf	4002,2,c	;volatile
  1521                           
  1522                           ; BSR set to: 15
  1523  0018D6  84A0               	bsf	4000,2,c	;volatile
  1524                           
  1525                           ; BSR set to: 15
  1526  0018D8  8EF2               	bsf	intcon,7,c	;volatile
  1527                           
  1528                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1529  0018DA  D001               	goto	l456
  1530  0018DC                     l457:
  1531  0018DC  8664               	bsf	3940,3,c	;volatile
  1532  0018DE                     l456:
  1533  0018DE  A664               	btfss	3940,3,c	;volatile
  1534  0018E0  D7FD               	goto	l457
  1535                           
  1536                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1537  0018E2  0E01               	movlw	1
  1538  0018E4  0100               	movlb	0	; () banked
  1539  0018E6  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  1540                           
  1541                           ; BSR set to: 0
  1542  0018E8  0C01               	retlw	1	;funcret
  1543  0018EA                     __end_of_USBDeviceAttach:
  1544                           	opt stack 0
  1545  0018EA                     PL40:
  1546                           	opt stack 19
  1547  0018EA  0E16               	movlw	22
  1548  0018EC  6E61               	movwf	3937,c	;volatile
  1549  0018EE  0E9F               	movlw	159
  1550  0018F0  010F               	movlb	15	; () banked
  1551  0018F2  6F5B               	movwf	91,b	;volatile
  1552  0018F4  0E7B               	movlw	123
  1553  0018F6  6E60               	movwf	3936,c	;volatile
  1554  0018F8  0C7B               	retlw	123
  1555  0018FA                     __end_ofPL40:
  1556                           	opt stack 0
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           prodh	equ	0xFF4
  1562                           prodl	equ	0xFF3
  1563                           intcon	equ	0xFF2
  1564                           postinc0	equ	0xFEE
  1565                           wreg	equ	0xFE8
  1566                           indf1	equ	0xFE7
  1567                           postdec1	equ	0xFE5
  1568                           fsr1h	equ	0xFE2
  1569                           fsr1l	equ	0xFE1
  1570                           indf2	equ	0xFDF
  1571                           postinc2	equ	0xFDE
  1572                           postdec2	equ	0xFDD
  1573                           plusw2	equ	0xFDB
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8
  1577                           
  1578 ;; *************** function _SYSTEM_Initialize *****************
  1579 ;; Defined at:
  1580 ;;		line 66 in file "picLibs/system.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  state           1    wreg     enum E3329
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  state           1    1[BANK0 ] enum E3329
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 3F/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       1       0       0       0
  1596 ;;      Temps:          0       0       0       0       0
  1597 ;;      Totals:         0       1       0       0       0
  1598 ;;Total ram usage:        1 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:   11
  1601 ;; This function calls:
  1602 ;;		_BUTTON_Enable
  1603 ;;		_LED_Enable
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text4
  1610  001B1A                     __ptext4:
  1611                           	opt stack 0
  1612  001B1A                     _SYSTEM_Initialize:
  1613                           	opt stack 19
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;incstack = 0
  1617                           ;SYSTEM_Initialize@state stored from wreg
  1618  001B1A  0100               	movlb	0	; () banked
  1619  001B1C  6FB2               	movwf	SYSTEM_Initialize@state& (0+255),b
  1620                           
  1621                           ;system.c: 68: switch(state)
  1622  001B1E  D006               	goto	l5121
  1623  001B20                     l5117:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;system.c: 71: LED_Enable(LED_D1);
  1627  001B20  0E01               	movlw	1
  1628  001B22  ECC9  F00C         	call	_LED_Enable
  1629                           
  1630                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  1631  001B26  0E01               	movlw	1
  1632  001B28  EFE4  F00D         	goto	_BUTTON_Enable
  1633  001B2C                     l5121:
  1634  001B2C  0100               	movlb	0	; () banked
  1635  001B2E  51B2               	movf	SYSTEM_Initialize@state& (0+255),w,b
  1636                           
  1637                           ; Switch size 1, requested type "space"
  1638                           ; Number of cases is 3, Range of values is 0 to 2
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte           10     6 (average)
  1642                           ;	Chosen strategy is simple_byte
  1643  001B30  E0F7               	bz	l5117
  1644  001B32  EF89  F00D         	goto	PL112	;call to abstracted procedure
  1645  001B36                     __end_of_SYSTEM_Initialize:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           prodh	equ	0xFF4
  1652                           prodl	equ	0xFF3
  1653                           intcon	equ	0xFF2
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           indf1	equ	0xFE7
  1657                           postdec1	equ	0xFE5
  1658                           fsr1h	equ	0xFE2
  1659                           fsr1l	equ	0xFE1
  1660                           indf2	equ	0xFDF
  1661                           postinc2	equ	0xFDE
  1662                           postdec2	equ	0xFDD
  1663                           plusw2	equ	0xFDB
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _LED_Enable *****************
  1669 ;; Defined at:
  1670 ;;		line 220 in file "picLibs/leds.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  led             1    wreg     enum E2
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  led             1    0[BANK0 ] enum E2
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 3F/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1684 ;;      Params:         0       0       0       0       0
  1685 ;;      Locals:         0       1       0       0       0
  1686 ;;      Temps:          0       0       0       0       0
  1687 ;;      Totals:         0       1       0       0       0
  1688 ;;Total ram usage:        1 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:   10
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_SYSTEM_Initialize
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text5
  1699  001992                     __ptext5:
  1700                           	opt stack 0
  1701  001992                     _LED_Enable:
  1702                           	opt stack 19
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;incstack = 0
  1706                           ;LED_Enable@led stored from wreg
  1707  001992  0100               	movlb	0	; () banked
  1708  001994  6FB1               	movwf	LED_Enable@led& (0+255),b
  1709                           
  1710                           ;leds.c: 222: switch(led)
  1711  001996  D008               	goto	l4969
  1712  001998                     l217:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  1716  001998  9094               	bcf	3988,0,c	;volatile
  1717                           
  1718                           ;leds.c: 226: break;
  1719  00199A  0012               	return	
  1720  00199C                     l219:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  1724  00199C  9294               	bcf	3988,1,c	;volatile
  1725                           
  1726                           ;leds.c: 230: break;
  1727  00199E  0012               	return	
  1728  0019A0                     l220:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  1732  0019A0  9494               	bcf	3988,2,c	;volatile
  1733                           
  1734                           ;leds.c: 234: break;
  1735  0019A2  0012               	return	
  1736  0019A4                     l221:
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  1740  0019A4  9694               	bcf	3988,3,c	;volatile
  1741                           
  1742                           ;leds.c: 238: break;
  1743  0019A6  0012               	return	
  1744  0019A8                     l4969:
  1745  0019A8  0100               	movlb	0	; () banked
  1746  0019AA  51B1               	movf	LED_Enable@led& (0+255),w,b
  1747                           
  1748                           ; Switch size 1, requested type "space"
  1749                           ; Number of cases is 5, Range of values is 0 to 4
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte           16     9 (average)
  1753                           ;	Chosen strategy is simple_byte
  1754  0019AC  B4D8               	btfsc	status,2,c
  1755  0019AE  0012               	return	
  1756  0019B0  0A01               	xorlw	1	; case 1
  1757  0019B2  E0F2               	bz	l217
  1758  0019B4  0A03               	xorlw	3	; case 2
  1759  0019B6  E0F2               	bz	l219
  1760  0019B8  0A01               	xorlw	1	; case 3
  1761  0019BA  E0F2               	bz	l220
  1762  0019BC  0A07               	xorlw	7	; case 4
  1763  0019BE  E0F2               	bz	l221
  1764                           
  1765                           ; BSR set to: 0
  1766  0019C0  0012               	return		;funcret
  1767  0019C2                     __end_of_LED_Enable:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           prodh	equ	0xFF4
  1774                           prodl	equ	0xFF3
  1775                           intcon	equ	0xFF2
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           indf1	equ	0xFE7
  1779                           postdec1	equ	0xFE5
  1780                           fsr1h	equ	0xFE2
  1781                           fsr1l	equ	0xFE1
  1782                           indf2	equ	0xFDF
  1783                           postinc2	equ	0xFDE
  1784                           postdec2	equ	0xFDD
  1785                           plusw2	equ	0xFDB
  1786                           fsr2h	equ	0xFDA
  1787                           fsr2l	equ	0xFD9
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _BUTTON_Enable *****************
  1791 ;; Defined at:
  1792 ;;		line 85 in file "picLibs/buttons.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  button          1    wreg     enum E3304
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  button          1    0[BANK0 ] enum E3304
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 3F/0
  1803 ;;		On exit  : 3F/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1806 ;;      Params:         0       0       0       0       0
  1807 ;;      Locals:         0       1       0       0       0
  1808 ;;      Temps:          0       0       0       0       0
  1809 ;;      Totals:         0       1       0       0       0
  1810 ;;Total ram usage:        1 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:   10
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_SYSTEM_Initialize
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text6
  1821  001BC8                     __ptext6:
  1822                           	opt stack 0
  1823  001BC8                     _BUTTON_Enable:
  1824                           	opt stack 19
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;incstack = 0
  1828                           ;BUTTON_Enable@button stored from wreg
  1829  001BC8  6FB1               	movwf	BUTTON_Enable@button& (0+255),b
  1830                           
  1831                           ;buttons.c: 87: switch(button)
  1832  001BCA  0100               	movlb	0	; () banked
  1833  001BCC  51B1               	movf	BUTTON_Enable@button& (0+255),w,b
  1834                           
  1835                           ; Switch size 1, requested type "space"
  1836                           ; Number of cases is 2, Range of values is 0 to 1
  1837                           ; switch strategies available:
  1838                           ; Name         Instructions Cycles
  1839                           ; simple_byte            7     4 (average)
  1840                           ;	Chosen strategy is simple_byte
  1841  001BCE  EFE1  F00D         	goto	PL122	;call to abstracted procedure
  1842  001BD2                     __end_of_BUTTON_Enable:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           prodh	equ	0xFF4
  1849                           prodl	equ	0xFF3
  1850                           intcon	equ	0xFF2
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           indf1	equ	0xFE7
  1854                           postdec1	equ	0xFE5
  1855                           fsr1h	equ	0xFE2
  1856                           fsr1l	equ	0xFE1
  1857                           indf2	equ	0xFDF
  1858                           postinc2	equ	0xFDE
  1859                           postdec2	equ	0xFDD
  1860                           plusw2	equ	0xFDB
  1861                           fsr2h	equ	0xFDA
  1862                           fsr2l	equ	0xFD9
  1863                           status	equ	0xFD8
  1864                           
  1865 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  1866 ;; Defined at:
  1867 ;;		line 77 in file "picLibs/app_device_cdc_basic.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  gsk_i           1   25[BANK0 ] unsigned char 
  1872 ;;  a               4   30[BANK0 ] struct _DWORD_VAL
  1873 ;;  Data            4   26[BANK0 ] struct _DWORD_VAL
  1874 ;;  numBytesRead    1   24[BANK0 ] unsigned char 
  1875 ;;  i               1    0        unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 3F/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         0      10       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         0      10       0       0       0
  1889 ;;Total ram usage:       10 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:   13
  1892 ;; This function calls:
  1893 ;;		_BUTTON_IsPressed
  1894 ;;		_CDCTxService
  1895 ;;		_PIC18F26K40_enterLowVoltageProg
  1896 ;;		_PIC18F26K40_exitLowVoltageProg
  1897 ;;		_PIC18F26K40_loadDataIntoNVM
  1898 ;;		_PIC18F26K40_loadPC
  1899 ;;		_PIC18F26K40_readThreeBytes
  1900 ;;		_getsUSBUSART
  1901 ;;		_putUSBUSART
  1902 ;;		_putrsUSBUSART
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text7
  1909  0003C8                     __ptext7:
  1910                           	opt stack 0
  1911  0003C8                     _APP_DeviceCDCBasicDemoTasks:
  1912                           	opt stack 17
  1913                           
  1914                           ;app_device_cdc_basic.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;incstack = 0
  1918  0003C8  0E20               	movlw	32
  1919  0003CA  0100               	movlb	0	; () banked
  1920  0003CC  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  1921  0003CE  D001               	goto	l101
  1922  0003D0  0C20               	retlw	32
  1923  0003D2                     l101:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;app_device_cdc_basic.c: 85: }
  1927                           ;app_device_cdc_basic.c: 91: if( UCONbits.SUSPND== 1 )
  1928  0003D2  B264               	btfsc	3940,1,c	;volatile
  1929  0003D4  0012               	return	
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;app_device_cdc_basic.c: 94: }
  1933                           ;app_device_cdc_basic.c: 99: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  1934  0003D6  0E01               	movlw	1
  1935  0003D8  ECA9  F00D         	call	_BUTTON_IsPressed
  1936  0003DC  06E8               	decf	wreg,f,c
  1937  0003DE  E10B               	bnz	l104
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;app_device_cdc_basic.c: 100: {
  1941                           ;app_device_cdc_basic.c: 104: if(buttonPressed == 0)
  1942  0003E0  517F               	movf	_buttonPressed& (0+255),w,b
  1943  0003E2  E10A               	bnz	l4995
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;app_device_cdc_basic.c: 105: {
  1947                           ;app_device_cdc_basic.c: 108: if((cdc_trf_state == 0) == 1)
  1948  0003E4  5180               	movf	_cdc_trf_state& (0+255),w,b
  1949  0003E6  E108               	bnz	l4995
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;app_device_cdc_basic.c: 109: {
  1953                           ;app_device_cdc_basic.c: 110: putrsUSBUSART(buttonMessage);
  1954  0003E8  0ED5               	movlw	low _buttonMessage
  1955  0003EA  6FB1               	movwf	putrsUSBUSART@data& (0+255),b
  1956  0003EC  EC7D  F00C         	call	_putrsUSBUSART	;wreg free
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;app_device_cdc_basic.c: 111: buttonPressed = 1;
  1960  0003F0  0E01               	movlw	1
  1961  0003F2  6F7F               	movwf	_buttonPressed& (0+255),b
  1962  0003F4  D001               	goto	l4995
  1963  0003F6                     l104:
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;app_device_cdc_basic.c: 115: else
  1967                           ;app_device_cdc_basic.c: 116: {
  1968                           ;app_device_cdc_basic.c: 120: buttonPressed = 0;
  1969  0003F6  6B7F               	clrf	_buttonPressed& (0+255),b
  1970  0003F8                     l4995:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;app_device_cdc_basic.c: 121: }
  1974                           ;app_device_cdc_basic.c: 126: if( (cdc_trf_state == 0) == 1) {
  1975  0003F8  5180               	movf	_cdc_trf_state& (0+255),w,b
  1976  0003FA  E002 EF2C  F005    	bnz	_CDCTxService
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;app_device_cdc_basic.c: 127: uint8_t i;
  1980                           ;app_device_cdc_basic.c: 128: uint8_t numBytesRead;
  1981                           ;app_device_cdc_basic.c: 129: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  1982  000400  0E91               	movlw	low _readBuffer
  1983  000402  6FBA               	movwf	getsUSBUSART@buffer& (0+255),b
  1984  000404  0E0F               	movlw	15
  1985  000406  6FBB               	movwf	getsUSBUSART@len& (0+255),b
  1986  000408  EC4D  F00A         	call	_getsUSBUSART	;wreg free
  1987  00040C  6FC9               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),b
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;app_device_cdc_basic.c: 130: if(numBytesRead > 0) {
  1991  00040E  51C9               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  1992  000410  E001 D0AE          	bnz	l5109
  1993  000414  EF2C  F005         	goto	_CDCTxService
  1994  000418                     l5003:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;app_device_cdc_basic.c: 134: PIC18F26K40_enterLowVoltageProg();
  1998  000418  EC97  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;app_device_cdc_basic.c: 135: a.v[3] = 0;
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;app_device_cdc_basic.c: 136: a.v[2] = readBuffer[1];
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;app_device_cdc_basic.c: 137: a.v[1] = readBuffer[2];
  2008  00041C  D8D8               	call	PL26	;call to abstracted procedure
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;app_device_cdc_basic.c: 138: a.v[0] = readBuffer[3];
  2012  00041E  C094  F0CF         	movff	_readBuffer+3,APP_DeviceCDCBasicDemoTasks@a
  2013                           
  2014                           ;app_device_cdc_basic.c: 139: PIC18F26K40_loadPC(a);
  2015  000422  D8C3               	call	PL8	;call to abstracted procedure
  2016  000424  EC28  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2017                           
  2018                           ;app_device_cdc_basic.c: 140: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2019  000428  0E00               	movlw	0
  2020  00042A  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2021  00042C  EC93  F005         	call	_PIC18F26K40_readThreeBytes
  2022  000430  D8E8               	call	PL64	;call to abstracted procedure
  2023                           
  2024                           ;app_device_cdc_basic.c: 141: writeBuffer[0] = a.v[1];
  2025  000432  C0D0  F082         	movff	APP_DeviceCDCBasicDemoTasks@a+1,_writeBuffer
  2026                           
  2027                           ;app_device_cdc_basic.c: 142: writeBuffer[1] = a.v[0];
  2028  000436  C0CF  F083         	movff	APP_DeviceCDCBasicDemoTasks@a,_writeBuffer+1
  2029  00043A                     l5017:
  2030                           
  2031                           ;app_device_cdc_basic.c: 143: PIC18F26K40_exitLowVoltageProg();
  2032  00043A  ECD8  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2033                           
  2034                           ;app_device_cdc_basic.c: 144: break;
  2035  00043E  D0AC               	goto	l5111
  2036  000440                     l5019:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;app_device_cdc_basic.c: 146: PIC18F26K40_enterLowVoltageProg();
  2040  000440  EC97  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;app_device_cdc_basic.c: 147: a.v[3] = 0;
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;app_device_cdc_basic.c: 148: a.v[2] = readBuffer[1];
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;app_device_cdc_basic.c: 149: a.v[1] = readBuffer[2];
  2050  000444  D8C4               	call	PL26	;call to abstracted procedure
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;app_device_cdc_basic.c: 150: a.v[0] = readBuffer[3];
  2054  000446  C094  F0CF         	movff	_readBuffer+3,APP_DeviceCDCBasicDemoTasks@a
  2055                           
  2056                           ;app_device_cdc_basic.c: 151: PIC18F26K40_loadPC(a);
  2057  00044A  D8AF               	call	PL8	;call to abstracted procedure
  2058  00044C  EC28  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;app_device_cdc_basic.c: 152: a.v[3] = 0x0;
  2062  000450  6BD2               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;app_device_cdc_basic.c: 153: a.v[2] = 0x0;
  2066  000452  6BD1               	clrf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;app_device_cdc_basic.c: 154: a.v[1] = readBuffer[4];
  2070  000454  C095  F0D0         	movff	_readBuffer+4,APP_DeviceCDCBasicDemoTasks@a+1
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;app_device_cdc_basic.c: 155: a.v[0] = readBuffer[5];
  2074  000458  C096  F0CF         	movff	_readBuffer+5,APP_DeviceCDCBasicDemoTasks@a
  2075                           
  2076                           ;app_device_cdc_basic.c: 156: PIC18F26K40_loadDataIntoNVM(a, FALSE, EXTERNALLY);
  2077  00045C  D8BE               	call	PL28	;call to abstracted procedure
  2078  00045E  0E01               	movlw	1
  2079  000460  6FBA               	movwf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),b
  2080  000462  EC11  F007         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2081                           
  2082                           ;app_device_cdc_basic.c: 157: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2083  000466  0E00               	movlw	0
  2084  000468  0100               	movlb	0	; () banked
  2085  00046A  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2086  00046C  EC93  F005         	call	_PIC18F26K40_readThreeBytes
  2087  000470  D7DF               	goto	L1
  2088  000472                     l5043:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;app_device_cdc_basic.c: 163: PIC18F26K40_enterLowVoltageProg();
  2092  000472  EC97  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;app_device_cdc_basic.c: 164: a.v[3] = 0;
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;app_device_cdc_basic.c: 165: a.v[2] = readBuffer[1];
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;app_device_cdc_basic.c: 166: a.v[1] = readBuffer[2];
  2102  000476  D8AB               	call	PL26	;call to abstracted procedure
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;app_device_cdc_basic.c: 167: a.v[0] = readBuffer[3];
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;app_device_cdc_basic.c: 168: Data.v[3] = 0x00;
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;app_device_cdc_basic.c: 169: Data.v[2] = 0x0;
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;app_device_cdc_basic.c: 170: Data.v[1] = readBuffer[4];
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;app_device_cdc_basic.c: 171: Data.v[0] = readBuffer[5];
  2118  000478  D8A1               	call	PL22	;call to abstracted procedure
  2119                           
  2120                           ;app_device_cdc_basic.c: 172: PIC18F26K40_loadPC(a);
  2121  00047A  D897               	call	PL8	;call to abstracted procedure
  2122  00047C  EC28  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2123                           
  2124                           ;app_device_cdc_basic.c: 173: PIC18F26K40_loadDataIntoNVM(Data, FALSE, EXTERNALLY);
  2125  000480  C0CB  F0B5         	movff	APP_DeviceCDCBasicDemoTasks@Data,PIC18F26K40_loadDataIntoNVM@data
  2126  000484  C0CC  F0B6         	movff	APP_DeviceCDCBasicDemoTasks@Data+1,PIC18F26K40_loadDataIntoNVM@data+1
  2127  000488  C0CD  F0B7         	movff	APP_DeviceCDCBasicDemoTasks@Data+2,PIC18F26K40_loadDataIntoNVM@data+2
  2128  00048C  C0CE  F0B8         	movff	APP_DeviceCDCBasicDemoTasks@Data+3,PIC18F26K40_loadDataIntoNVM@data+3
  2129  000490  6BB9               	clrf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),b
  2130  000492  0E01               	movlw	1
  2131  000494  6FBA               	movwf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),b
  2132  000496  EC11  F007         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2133                           
  2134                           ;app_device_cdc_basic.c: 174: PIC18F26K40_loadPC(a);
  2135  00049A  D887               	call	PL8	;call to abstracted procedure
  2136  00049C  EC28  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2137                           
  2138                           ;app_device_cdc_basic.c: 175: Data = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2139  0004A0  0E00               	movlw	0
  2140  0004A2  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2141  0004A4  EC93  F005         	call	_PIC18F26K40_readThreeBytes
  2142                           
  2143                           ;app_device_cdc_basic.c: 176: if ((Data.v[0] == readBuffer[5]) && (Data.v[1] == readBuff
      +                          er[4]))
  2144  0004A8  D8A2               	call	PL58	;call to abstracted procedure
  2145  0004AA  51CB               	movf	APP_DeviceCDCBasicDemoTasks@Data& (0+255),w,b
  2146  0004AC  1996               	xorwf	(_readBuffer+5)& (0+255),w,b
  2147  0004AE  E106               	bnz	l115
  2148                           
  2149                           ; BSR set to: 0
  2150  0004B0  5195               	movf	(_readBuffer+4)& (0+255),w,b
  2151  0004B2  19CC               	xorwf	(APP_DeviceCDCBasicDemoTasks@Data+1)& (0+255),w,b
  2152  0004B4  E103               	bnz	l115
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;app_device_cdc_basic.c: 177: writeBuffer[0] = 0x01;
  2156  0004B6  0E01               	movlw	1
  2157  0004B8  6F82               	movwf	_writeBuffer& (0+255),b
  2158  0004BA  D7BF               	goto	l5017
  2159  0004BC                     l115:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;app_device_cdc_basic.c: 178: else
  2163                           ;app_device_cdc_basic.c: 179: writeBuffer[0] = 0x00;
  2164  0004BC  6B82               	clrf	_writeBuffer& (0+255),b
  2165  0004BE  D7BD               	goto	l5017
  2166  0004C0                     l5069:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;app_device_cdc_basic.c: 183: PIC18F26K40_enterLowVoltageProg();
  2170  0004C0  EC97  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2171                           
  2172                           ;app_device_cdc_basic.c: 184: break;
  2173  0004C4  D069               	goto	l5111
  2174  0004C6                     l119:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;app_device_cdc_basic.c: 189: a.v[3] = 0;
  2178                           
  2179                           ;app_device_cdc_basic.c: 190: a.v[2] = readBuffer[1];
  2180                           
  2181                           ;app_device_cdc_basic.c: 191: a.v[1] = readBuffer[2];
  2182  0004C6  D883               	call	PL26	;call to abstracted procedure
  2183                           
  2184                           ;app_device_cdc_basic.c: 192: a.v[0] = readBuffer[3];
  2185                           
  2186                           ;app_device_cdc_basic.c: 193: Data.v[3] = 0x00;
  2187                           
  2188                           ;app_device_cdc_basic.c: 194: Data.v[2] = 0x0;
  2189                           
  2190                           ;app_device_cdc_basic.c: 195: Data.v[1] = readBuffer[4];
  2191                           
  2192                           ;app_device_cdc_basic.c: 196: Data.v[0] = readBuffer[5];
  2193  0004C8  D879               	call	PL22	;call to abstracted procedure
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;app_device_cdc_basic.c: 197: PIC18F26K40_loadPC(a);
  2197  0004CA  D86F               	call	PL8	;call to abstracted procedure
  2198  0004CC  EC28  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2199                           
  2200                           ;app_device_cdc_basic.c: 198: PIC18F26K40_loadDataIntoNVM(a, FALSE, EXTERNALLY);
  2201  0004D0  D884               	call	PL28	;call to abstracted procedure
  2202  0004D2  0E01               	movlw	1
  2203  0004D4  6FBA               	movwf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),b
  2204  0004D6  EC11  F007         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2205                           
  2206                           ;app_device_cdc_basic.c: 199: PIC18F26K40_loadPC(a);
  2207  0004DA  D867               	call	PL8	;call to abstracted procedure
  2208  0004DC  EC28  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2209                           
  2210                           ;app_device_cdc_basic.c: 200: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2211  0004E0  0E00               	movlw	0
  2212  0004E2  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2213  0004E4  EC93  F005         	call	_PIC18F26K40_readThreeBytes
  2214  0004E8  D88C               	call	PL64	;call to abstracted procedure
  2215                           
  2216                           ;app_device_cdc_basic.c: 201: if ((Data.v[0] == readBuffer[5]) && (Data.v[1] == readBuff
      +                          er[4]))
  2217  0004EA  0100               	movlb	0	; () banked
  2218  0004EC  51CB               	movf	APP_DeviceCDCBasicDemoTasks@Data& (0+255),w,b
  2219  0004EE  1996               	xorwf	(_readBuffer+5)& (0+255),w,b
  2220  0004F0  E106               	bnz	l120
  2221                           
  2222                           ; BSR set to: 0
  2223  0004F2  5195               	movf	(_readBuffer+4)& (0+255),w,b
  2224  0004F4  19CC               	xorwf	(APP_DeviceCDCBasicDemoTasks@Data+1)& (0+255),w,b
  2225  0004F6  E103               	bnz	l120
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;app_device_cdc_basic.c: 202: writeBuffer[0] = 0x01;
  2229  0004F8  0E01               	movlw	1
  2230  0004FA  6F82               	movwf	_writeBuffer& (0+255),b
  2231  0004FC  D001               	goto	l121
  2232  0004FE                     l120:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;app_device_cdc_basic.c: 203: else
  2236                           ;app_device_cdc_basic.c: 204: writeBuffer[0] = 0x00;
  2237  0004FE  6B82               	clrf	_writeBuffer& (0+255),b
  2238  000500                     l121:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;app_device_cdc_basic.c: 205: writeBuffer[1] = readBuffer[0];
  2242  000500  C091  F083         	movff	_readBuffer,_writeBuffer+1
  2243                           
  2244                           ;app_device_cdc_basic.c: 206: writeBuffer[2] = readBuffer[1];
  2245  000504  C092  F084         	movff	_readBuffer+1,_writeBuffer+2
  2246                           
  2247                           ;app_device_cdc_basic.c: 207: writeBuffer[3] = readBuffer[2];
  2248  000508  C093  F085         	movff	_readBuffer+2,_writeBuffer+3
  2249                           
  2250                           ;app_device_cdc_basic.c: 208: writeBuffer[4] = readBuffer[3];
  2251  00050C  C094  F086         	movff	_readBuffer+3,_writeBuffer+4
  2252                           
  2253                           ;app_device_cdc_basic.c: 209: writeBuffer[5] = readBuffer[4];
  2254  000510  C095  F087         	movff	_readBuffer+4,_writeBuffer+5
  2255                           
  2256                           ;app_device_cdc_basic.c: 210: writeBuffer[6] = readBuffer[5];
  2257  000514  C096  F088         	movff	_readBuffer+5,_writeBuffer+6
  2258                           
  2259                           ;app_device_cdc_basic.c: 211: break;
  2260  000518  D03F               	goto	l5111
  2261  00051A                     l122:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;app_device_cdc_basic.c: 213: for (UINT8 gsk_i=0; gsk_i<10; gsk_i++){
  2265  00051A  6BCA               	clrf	APP_DeviceCDCBasicDemoTasks@gsk_i& (0+255),b
  2266  00051C                     l123:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;app_device_cdc_basic.c: 214: a.v[3] = 0;
  2270  00051C  6BD2               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2271                           
  2272                           ;app_device_cdc_basic.c: 215: a.v[2] = gsk_i;
  2273  00051E  C0CA  F0D1         	movff	APP_DeviceCDCBasicDemoTasks@gsk_i,APP_DeviceCDCBasicDemoTasks@a+2
  2274                           
  2275                           ;app_device_cdc_basic.c: 216: a.v[1] = 0x00;
  2276  000522  6BD0               	clrf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),b
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;app_device_cdc_basic.c: 217: a.v[0] = 0x31;
  2280  000524  0E31               	movlw	49
  2281  000526  6FCF               	movwf	APP_DeviceCDCBasicDemoTasks@a& (0+255),b
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;app_device_cdc_basic.c: 218: Data.v[3] = 0x00;
  2285  000528  6BCE               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+3)& (0+255),b
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;app_device_cdc_basic.c: 219: Data.v[2] = 0x00;
  2289  00052A  6BCD               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+2)& (0+255),b
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;app_device_cdc_basic.c: 220: Data.v[1] = gsk_i;
  2293  00052C  C0CA  F0CC         	movff	APP_DeviceCDCBasicDemoTasks@gsk_i,APP_DeviceCDCBasicDemoTasks@Data+1
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;app_device_cdc_basic.c: 221: Data.v[0] = 0x00;
  2297  000530  6BCB               	clrf	APP_DeviceCDCBasicDemoTasks@Data& (0+255),b
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;app_device_cdc_basic.c: 222: PIC18F26K40_loadPC(a);
  2301  000532  D83B               	call	PL8	;call to abstracted procedure
  2302  000534  EC28  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;app_device_cdc_basic.c: 223: PIC18F26K40_loadDataIntoNVM(a, FALSE, INTERNALLY);
  2306  000538  D850               	call	PL28	;call to abstracted procedure
  2307  00053A  6BBA               	clrf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),b
  2308  00053C  EC11  F007         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2309                           
  2310                           ;app_device_cdc_basic.c: 224: PIC18F26K40_loadPC(a);
  2311  000540  D834               	call	PL8	;call to abstracted procedure
  2312  000542  EC28  F00C         	call	_PIC18F26K40_loadPC	;wreg free
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;app_device_cdc_basic.c: 225: Data = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2316  000546  0E00               	movlw	0
  2317  000548  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2318  00054A  EC93  F005         	call	_PIC18F26K40_readThreeBytes
  2319                           
  2320                           ;app_device_cdc_basic.c: 226: writeBuffer[gsk_i] = Data.v[1];
  2321  00054E  D84F               	call	PL58	;call to abstracted procedure
  2322  000550  51CA               	movf	APP_DeviceCDCBasicDemoTasks@gsk_i& (0+255),w,b
  2323  000552  0F82               	addlw	low _writeBuffer
  2324  000554  6ED9               	movwf	fsr2l,c
  2325  000556  6ADA               	clrf	fsr2h,c
  2326  000558  C0CC  FFDF         	movff	APP_DeviceCDCBasicDemoTasks@Data+1,indf2
  2327                           
  2328                           ; BSR set to: 0
  2329  00055C  2BCA               	incf	APP_DeviceCDCBasicDemoTasks@gsk_i& (0+255),f,b
  2330                           
  2331                           ; BSR set to: 0
  2332  00055E  0E09               	movlw	9
  2333  000560  65CA               	cpfsgt	APP_DeviceCDCBasicDemoTasks@gsk_i& (0+255),b
  2334  000562  D7DC               	goto	l123
  2335  000564  D019               	goto	l5111
  2336  000566                     l125:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;app_device_cdc_basic.c: 230: writeBuffer[0] = readBuffer[0];
  2340  000566  C091  F082         	movff	_readBuffer,_writeBuffer
  2341                           
  2342                           ;app_device_cdc_basic.c: 231: writeBuffer[1] = readBuffer[1];
  2343  00056A  C092  F083         	movff	_readBuffer+1,_writeBuffer+1
  2344                           
  2345                           ;app_device_cdc_basic.c: 232: }
  2346  00056E  D014               	goto	l5111
  2347  000570                     l5109:
  2348                           
  2349                           ; BSR set to: 0
  2350  000570  5191               	movf	_readBuffer& (0+255),w,b
  2351                           
  2352                           ; Switch size 1, requested type "space"
  2353                           ; Number of cases is 7, Range of values is 48 to 54
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte           22    12 (average)
  2357                           ;	Chosen strategy is simple_byte
  2358  000572  0A30               	xorlw	48	; case 48
  2359  000574  E101 D750          	bz	l5003
  2360  000578  0A01               	xorlw	1	; case 49
  2361  00057A  E101 D761          	bz	l5019
  2362  00057E  0A03               	xorlw	3	; case 50
  2363  000580  E101 D777          	bz	l5043
  2364  000584  0A01               	xorlw	1	; case 51
  2365  000586  E09C               	bz	l5069
  2366  000588  0A07               	xorlw	7	; case 52
  2367  00058A  E101 D756          	bz	l5017
  2368  00058E  0A01               	xorlw	1	; case 53
  2369  000590  E09A               	bz	l119
  2370  000592  0A03               	xorlw	3	; case 54
  2371  000594  E0C2               	bz	l122
  2372  000596  D7E7               	goto	l125
  2373  000598                     l5111:
  2374                           
  2375                           ;app_device_cdc_basic.c: 233: putUSBUSART(writeBuffer,15);
  2376  000598  0E82               	movlw	low _writeBuffer
  2377  00059A  0100               	movlb	0	; () banked
  2378  00059C  6FB1               	movwf	putUSBUSART@data& (0+255),b
  2379  00059E  0E0F               	movlw	15
  2380  0005A0  6FB2               	movwf	putUSBUSART@length& (0+255),b
  2381  0005A2  ECC3  F00D         	call	_putUSBUSART	;wreg free
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;app_device_cdc_basic.c: 234: }
  2385                           ;app_device_cdc_basic.c: 235: }
  2386                           ;app_device_cdc_basic.c: 236: CDCTxService();
  2387  0005A6  EF2C  F005         	goto	_CDCTxService	;wreg free
  2388  0005AA                     __end_of_APP_DeviceCDCBasicDemoTasks:
  2389                           	opt stack 0
  2390  0005AA                     PL8:
  2391                           	opt stack 17
  2392  0005AA  C0CF  F0B7         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadPC@address
  2393  0005AE  C0D0  F0B8         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadPC@address+1
  2394  0005B2  C0D1  F0B9         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadPC@address+2
  2395  0005B6  C0D2  F0BA         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadPC@address+3
  2396  0005BA  0012               	return	
  2397  0005BC                     __end_ofPL8:
  2398                           	opt stack 0
  2399  0005BC                     PL22:
  2400                           	opt stack 17
  2401  0005BC  C094  F0CF         	movff	_readBuffer+3,APP_DeviceCDCBasicDemoTasks@a
  2402  0005C0  6BCE               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+3)& (0+255),b
  2403  0005C2  6BCD               	clrf	(APP_DeviceCDCBasicDemoTasks@Data+2)& (0+255),b
  2404  0005C4  C095  F0CC         	movff	_readBuffer+4,APP_DeviceCDCBasicDemoTasks@Data+1
  2405  0005C8  C096  F0CB         	movff	_readBuffer+5,APP_DeviceCDCBasicDemoTasks@Data
  2406  0005CC  0012               	return	
  2407  0005CE                     __end_ofPL22:
  2408                           	opt stack 0
  2409  0005CE                     PL26:
  2410                           	opt stack 17
  2411  0005CE  6BD2               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2412  0005D0  C092  F0D1         	movff	_readBuffer+1,APP_DeviceCDCBasicDemoTasks@a+2
  2413  0005D4  C093  F0D0         	movff	_readBuffer+2,APP_DeviceCDCBasicDemoTasks@a+1
  2414  0005D8  0012               	return	
  2415  0005DA                     __end_ofPL26:
  2416                           	opt stack 0
  2417  0005DA                     PL28:
  2418                           	opt stack 17
  2419  0005DA  C0CF  F0B5         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadDataIntoNVM@data
  2420  0005DE  C0D0  F0B6         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadDataIntoNVM@data+1
  2421  0005E2  C0D1  F0B7         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadDataIntoNVM@data+2
  2422  0005E6  C0D2  F0B8         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadDataIntoNVM@data+3
  2423  0005EA  6BB9               	clrf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),b
  2424  0005EC  0012               	return	
  2425  0005EE                     __end_ofPL28:
  2426                           	opt stack 0
  2427  0005EE                     PL58:
  2428                           	opt stack 17
  2429  0005EE  C0B7  F0CB         	movff	?_PIC18F26K40_readThreeBytes,APP_DeviceCDCBasicDemoTasks@Data
  2430  0005F2  C0B8  F0CC         	movff	?_PIC18F26K40_readThreeBytes+1,APP_DeviceCDCBasicDemoTasks@Data+1
  2431  0005F6  C0B9  F0CD         	movff	?_PIC18F26K40_readThreeBytes+2,APP_DeviceCDCBasicDemoTasks@Data+2
  2432  0005FA  C0BA  F0CE         	movff	?_PIC18F26K40_readThreeBytes+3,APP_DeviceCDCBasicDemoTasks@Data+3
  2433  0005FE  0100               	movlb	0	; () banked
  2434  000600  0012               	return	
  2435  000602                     __end_ofPL58:
  2436                           	opt stack 0
  2437  000602                     PL64:
  2438                           	opt stack 17
  2439  000602  C0B7  F0CF         	movff	?_PIC18F26K40_readThreeBytes,APP_DeviceCDCBasicDemoTasks@a
  2440  000606  C0B8  F0D0         	movff	?_PIC18F26K40_readThreeBytes+1,APP_DeviceCDCBasicDemoTasks@a+1
  2441  00060A  C0B9  F0D1         	movff	?_PIC18F26K40_readThreeBytes+2,APP_DeviceCDCBasicDemoTasks@a+2
  2442  00060E  C0BA  F0D2         	movff	?_PIC18F26K40_readThreeBytes+3,APP_DeviceCDCBasicDemoTasks@a+3
  2443  000612  0012               	return	
  2444  000614                     __end_ofPL64:
  2445                           	opt stack 0
  2446                           tblptru	equ	0xFF8
  2447                           tblptrh	equ	0xFF7
  2448                           tblptrl	equ	0xFF6
  2449                           tablat	equ	0xFF5
  2450                           prodh	equ	0xFF4
  2451                           prodl	equ	0xFF3
  2452                           intcon	equ	0xFF2
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           indf1	equ	0xFE7
  2456                           postdec1	equ	0xFE5
  2457                           fsr1h	equ	0xFE2
  2458                           fsr1l	equ	0xFE1
  2459                           indf2	equ	0xFDF
  2460                           postinc2	equ	0xFDE
  2461                           postdec2	equ	0xFDD
  2462                           plusw2	equ	0xFDB
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _putrsUSBUSART *****************
  2468 ;; Defined at:
  2469 ;;		line 726 in file "picLibs/usb_device_cdc.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  data            1    0[BANK0 ] PTR const unsigned char 
  2472 ;;		 -> buttonMessage(18), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  len             1    2[BANK0 ] unsigned char 
  2475 ;;  pData           1    1[BANK0 ] PTR const unsigned char 
  2476 ;;		 -> buttonMessage(18), 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2481 ;; Tracked objects:
  2482 ;;		On entry : 3F/0
  2483 ;;		On exit  : 3F/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2486 ;;      Params:         0       1       0       0       0
  2487 ;;      Locals:         0       2       0       0       0
  2488 ;;      Temps:          0       0       0       0       0
  2489 ;;      Totals:         0       3       0       0       0
  2490 ;;Total ram usage:        3 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:   10
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_APP_DeviceCDCBasicDemoTasks
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text8
  2501  0018FA                     __ptext8:
  2502                           	opt stack 0
  2503  0018FA                     _putrsUSBUSART:
  2504                           	opt stack 19
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;usb_device_cdc.c: 728: uint8_t len;
  2508                           ;usb_device_cdc.c: 729: const const char *pData;
  2509                           ;usb_device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;incstack = 0
  2513  0018FA  94A0               	bcf	4000,2,c	;volatile
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  2517  0018FC  5180               	movf	_cdc_trf_state& (0+255),w,b
  2518  0018FE  E002               	bz	l746
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;usb_device_cdc.c: 756: {
  2522                           ;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  2523  001900  84A0               	bsf	4000,2,c	;volatile
  2524                           
  2525                           ;usb_device_cdc.c: 758: return;
  2526  001902  0012               	return	
  2527  001904                     l746:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;usb_device_cdc.c: 759: }
  2531                           ;usb_device_cdc.c: 765: len = 0;
  2532  001904  6BB3               	clrf	putrsUSBUSART@len& (0+255),b
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;usb_device_cdc.c: 766: pData = data;
  2536  001906  C0B1  F0B2         	movff	putrsUSBUSART@data,putrsUSBUSART@pData
  2537  00190A                     l4835:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;usb_device_cdc.c: 768: {
  2541                           ;usb_device_cdc.c: 769: len++;
  2542  00190A  2BB3               	incf	putrsUSBUSART@len& (0+255),f,b
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;usb_device_cdc.c: 770: if(len == 255) break;
  2546  00190C  29B3               	incf	putrsUSBUSART@len& (0+255),w,b
  2547  00190E  E006               	bz	l4843
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;usb_device_cdc.c: 771: }while(*pData++);
  2551  001910  2BB2               	incf	putrsUSBUSART@pData& (0+255),f,b
  2552  001912  05B2               	decf	putrsUSBUSART@pData& (0+255),w,b
  2553  001914  6ED9               	movwf	fsr2l,c
  2554  001916  6ADA               	clrf	fsr2h,c
  2555  001918  50DF               	movf	indf2,w,c
  2556  00191A  E1F7               	bnz	l4835
  2557  00191C                     l4843:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  2561  00191C  C0B1  F06D         	movff	putrsUSBUSART@data,_pCDCSrc
  2562                           
  2563                           ; BSR set to: 0
  2564  001920  C0B3  F01B         	movff	putrsUSBUSART@len,_cdc_tx_len
  2565                           
  2566                           ; BSR set to: 0
  2567  001924  6B7C               	clrf	_cdc_mem_type& (0+255),b
  2568                           
  2569                           ; BSR set to: 0
  2570  001926  0E01               	movlw	1
  2571  001928  6F80               	movwf	_cdc_trf_state& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  2575  00192A  84A0               	bsf	4000,2,c	;volatile
  2576                           
  2577                           ; BSR set to: 0
  2578  00192C  0C01               	retlw	1	;funcret
  2579  00192E                     __end_of_putrsUSBUSART:
  2580                           	opt stack 0
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           prodh	equ	0xFF4
  2586                           prodl	equ	0xFF3
  2587                           intcon	equ	0xFF2
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           indf1	equ	0xFE7
  2591                           postdec1	equ	0xFE5
  2592                           fsr1h	equ	0xFE2
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           postinc2	equ	0xFDE
  2596                           postdec2	equ	0xFDD
  2597                           plusw2	equ	0xFDB
  2598                           fsr2h	equ	0xFDA
  2599                           fsr2l	equ	0xFD9
  2600                           status	equ	0xFD8
  2601                           
  2602 ;; *************** function _putUSBUSART *****************
  2603 ;; Defined at:
  2604 ;;		line 556 in file "picLibs/usb_device_cdc.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  data            1    0[BANK0 ] PTR unsigned char 
  2607 ;;		 -> writeBuffer(15), 
  2608 ;;  length          1    1[BANK0 ] unsigned char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0
  2615 ;; Tracked objects:
  2616 ;;		On entry : 3F/0
  2617 ;;		On exit  : 3F/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2620 ;;      Params:         0       2       0       0       0
  2621 ;;      Locals:         0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0
  2623 ;;      Totals:         0       2       0       0       0
  2624 ;;Total ram usage:        2 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:   10
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_APP_DeviceCDCBasicDemoTasks
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text9
  2635  001B86                     __ptext9:
  2636                           	opt stack 0
  2637  001B86                     _putUSBUSART:
  2638                           	opt stack 19
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;incstack = 0
  2645  001B86  94A0               	bcf	4000,2,c	;volatile
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2649  001B88  5180               	movf	_cdc_trf_state& (0+255),w,b
  2650  001B8A  E107               	bnz	l4889
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;usb_device_cdc.c: 583: {
  2654                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2655  001B8C  C0B1  F06D         	movff	putUSBUSART@data,_pCDCSrc
  2656                           
  2657                           ; BSR set to: 0
  2658  001B90  C0B2  F01B         	movff	putUSBUSART@length,_cdc_tx_len
  2659                           
  2660                           ; BSR set to: 0
  2661  001B94  0E01               	movlw	1
  2662  001B96  6F7C               	movwf	_cdc_mem_type& (0+255),b
  2663                           
  2664                           ; BSR set to: 0
  2665  001B98  6F80               	movwf	_cdc_trf_state& (0+255),b
  2666  001B9A                     l4889:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;usb_device_cdc.c: 585: }
  2670                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2671  001B9A  84A0               	bsf	4000,2,c	;volatile
  2672                           
  2673                           ; BSR set to: 0
  2674  001B9C  0012               	return		;funcret
  2675  001B9E                     __end_of_putUSBUSART:
  2676                           	opt stack 0
  2677                           tblptru	equ	0xFF8
  2678                           tblptrh	equ	0xFF7
  2679                           tblptrl	equ	0xFF6
  2680                           tablat	equ	0xFF5
  2681                           prodh	equ	0xFF4
  2682                           prodl	equ	0xFF3
  2683                           intcon	equ	0xFF2
  2684                           postinc0	equ	0xFEE
  2685                           wreg	equ	0xFE8
  2686                           indf1	equ	0xFE7
  2687                           postdec1	equ	0xFE5
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           indf2	equ	0xFDF
  2691                           postinc2	equ	0xFDE
  2692                           postdec2	equ	0xFDD
  2693                           plusw2	equ	0xFDB
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _getsUSBUSART *****************
  2699 ;; Defined at:
  2700 ;;		line 485 in file "picLibs/usb_device_cdc.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  buffer          1    9[BANK0 ] PTR unsigned char 
  2703 ;;		 -> readBuffer(15), 
  2704 ;;  len             1   10[BANK0 ] unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      unsigned char 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 3F/0
  2713 ;;		On exit  : 3F/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2716 ;;      Params:         0       2       0       0       0
  2717 ;;      Locals:         0       0       0       0       0
  2718 ;;      Temps:          0       1       0       0       0
  2719 ;;      Totals:         0       3       0       0       0
  2720 ;;Total ram usage:        3 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:   11
  2723 ;; This function calls:
  2724 ;;		_USBTransferOnePacket
  2725 ;; This function is called by:
  2726 ;;		_APP_DeviceCDCBasicDemoTasks
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text10
  2731  00149A                     __ptext10:
  2732                           	opt stack 0
  2733  00149A                     _getsUSBUSART:
  2734                           	opt stack 18
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;incstack = 0
  2741  00149A  6A1C               	clrf	_cdc_rx_len,c
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2745  00149C  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2746  00149E  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  2747  0014A0  E006               	bz	l4859
  2748                           
  2749                           ; BSR set to: 0
  2750  0014A2  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2751  0014A6  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2752  0014AA  BEDF               	btfsc	indf2,7,c
  2753  0014AC  D024               	goto	l4873
  2754  0014AE                     l4859:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;usb_device_cdc.c: 490: {
  2758                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2759  0014AE  D825               	call	PL82	;call to abstracted procedure
  2760  0014B0  51BB               	movf	getsUSBUSART@len& (0+255),w,b
  2761  0014B2  5CDE               	subwf	postinc2,w,c
  2762  0014B4  E203               	bc	l4863
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2766  0014B6  D821               	call	PL82	;call to abstracted procedure
  2767  0014B8  50DF               	movf	indf2,w,c
  2768  0014BA  6FBB               	movwf	getsUSBUSART@len& (0+255),b
  2769  0014BC                     l4863:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2773  0014BC  6A1C               	clrf	_cdc_rx_len,c
  2774  0014BE  D009               	goto	l4869
  2775  0014C0                     l4865:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2779  0014C0  0E80               	movlw	128
  2780  0014C2  241C               	addwf	_cdc_rx_len,w,c
  2781  0014C4  ECB0  F006         	call	PL120	;call to abstracted procedure
  2782  0014C8  51BA               	movf	getsUSBUSART@buffer& (0+255),w,b
  2783  0014CA  241C               	addwf	_cdc_rx_len,w,c
  2784  0014CC  ECAB  F006         	call	PL118	;call to abstracted procedure
  2785                           
  2786                           ; BSR set to: 0
  2787  0014D0  2A1C               	incf	_cdc_rx_len,f,c
  2788  0014D2                     l4869:
  2789                           
  2790                           ; BSR set to: 0
  2791  0014D2  51BB               	movf	getsUSBUSART@len& (0+255),w,b
  2792  0014D4  5C1C               	subwf	_cdc_rx_len,w,c
  2793  0014D6  E3F4               	bnc	l4865
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2797  0014D8  0E00               	movlw	0
  2798  0014DA  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  2799  0014DC  0E80               	movlw	128
  2800  0014DE  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  2801  0014E0  0E02               	movlw	2
  2802  0014E2  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  2803  0014E4  0E0F               	movlw	15
  2804  0014E6  6FB4               	movwf	USBTransferOnePacket@len& (0+255),b
  2805  0014E8  0E02               	movlw	2
  2806  0014EA  ECF5  F005         	call	_USBTransferOnePacket
  2807  0014EE  C0B1  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  2808  0014F2  C0B2  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  2809  0014F6                     l4873:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;usb_device_cdc.c: 510: }
  2813                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2814  0014F6  501C               	movf	_cdc_rx_len,w,c
  2815                           
  2816                           ; BSR set to: 0
  2817  0014F8  0012               	return		;funcret
  2818  0014FA                     __end_of_getsUSBUSART:
  2819                           	opt stack 0
  2820  0014FA                     PL82:
  2821                           	opt stack 18
  2822  0014FA  EE20 F001          	lfsr	2,1
  2823  0014FE  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2824  001500  26D9               	addwf	fsr2l,f,c
  2825  001502  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  2826  001504  22DA               	addwfc	fsr2h,f,c
  2827  001506  0012               	return	
  2828  001508                     __end_ofPL82:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           prodh	equ	0xFF4
  2835                           prodl	equ	0xFF3
  2836                           intcon	equ	0xFF2
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           indf1	equ	0xFE7
  2840                           postdec1	equ	0xFE5
  2841                           fsr1h	equ	0xFE2
  2842                           fsr1l	equ	0xFE1
  2843                           indf2	equ	0xFDF
  2844                           postinc2	equ	0xFDE
  2845                           postdec2	equ	0xFDD
  2846                           plusw2	equ	0xFDB
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _PIC18F26K40_readThreeBytes *****************
  2852 ;; Defined at:
  2853 ;;		line 53 in file "libs/progPIC18F26K40.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  direction       1    wreg     enum E4265
  2856 ;;  IncreasePC      1    6[BANK0 ] enum E4064
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  direction       1   17[BANK0 ] enum E4265
  2859 ;;  data            4   18[BANK0 ] struct _DWORD_VAL
  2860 ;;  i               1   23[BANK0 ] unsigned char 
  2861 ;;  j               1   22[BANK0 ] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  4    6[BANK0 ] struct _DWORD_VAL
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 3F/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2871 ;;      Params:         0       4       0       0       0
  2872 ;;      Locals:         0       7       0       0       0
  2873 ;;      Temps:          0       7       0       0       0
  2874 ;;      Totals:         0      18       0       0       0
  2875 ;;Total ram usage:       18 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:   12
  2878 ;; This function calls:
  2879 ;;		_PIC18F26K40_sendByte
  2880 ;; This function is called by:
  2881 ;;		_APP_DeviceCDCBasicDemoTasks
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text11
  2886  000B26                     __ptext11:
  2887                           	opt stack 0
  2888  000B26                     _PIC18F26K40_readThreeBytes:
  2889                           	opt stack 17
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;incstack = 0
  2893                           ;PIC18F26K40_readThreeBytes@direction stored from wreg
  2894  000B26  6FC2               	movwf	PIC18F26K40_readThreeBytes@direction& (0+255),b
  2895                           
  2896                           ;progPIC18F26K40.c: 54: if (IncreasePC)
  2897  000B28  0100               	movlb	0	; () banked
  2898  000B2A  51B7               	movf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),w,b
  2899  000B2C  E005               	bz	l4729
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;progPIC18F26K40.c: 55: PIC18F26K40_sendByte(0xFE, MSBTOLSB);
  2903  000B2E  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2904  000B30  0EFE               	movlw	254
  2905  000B32  ECEC  F00A         	call	_PIC18F26K40_sendByte
  2906  000B36  D004               	goto	l4731
  2907  000B38                     l4729:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;progPIC18F26K40.c: 56: else
  2911                           ;progPIC18F26K40.c: 57: PIC18F26K40_sendByte(0xFC, MSBTOLSB);
  2912  000B38  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2913  000B3A  0EFC               	movlw	252
  2914  000B3C  ECEC  F00A         	call	_PIC18F26K40_sendByte
  2915  000B40                     l4731:
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;progPIC18F26K40.c: 58: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  2919  000B40  D000               	nop2		;2 cycle nop
  2920  000B42  D000               	nop2		;2 cycle nop
  2921  000B44  D000               	nop2		;2 cycle nop
  2922                           
  2923                           ;progPIC18F26K40.c: 59: DWORD_VAL data;
  2924                           ;progPIC18F26K40.c: 60: data.Val = 0x000000;
  2925  000B46  0100               	movlb	0	; () banked
  2926  000B48  6BC3               	clrf	PIC18F26K40_readThreeBytes@data& (0+255),b
  2927  000B4A  6BC4               	clrf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),b
  2928  000B4C  6BC5               	clrf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),b
  2929  000B4E  6BC6               	clrf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),b
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;progPIC18F26K40.c: 61: BYTE i, j;
  2933                           ;progPIC18F26K40.c: 62: TRISCbits.TRISC6 = 1;
  2934  000B50  8C94               	bsf	3988,6,c	;volatile
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;progPIC18F26K40.c: 63: for (i = 0; i < 23; i++) {
  2938  000B52  6BC8               	clrf	PIC18F26K40_readThreeBytes@i& (0+255),b
  2939  000B54                     l4743:
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;progPIC18F26K40.c: 64: if (direction)
  2943  000B54  51C2               	movf	PIC18F26K40_readThreeBytes@direction& (0+255),w,b
  2944  000B56  E003               	bz	l4747
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;progPIC18F26K40.c: 65: j = i;
  2948  000B58  C0C8  F0C7         	movff	PIC18F26K40_readThreeBytes@i,PIC18F26K40_readThreeBytes@j
  2949  000B5C  D003               	goto	l4749
  2950  000B5E                     l4747:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;progPIC18F26K40.c: 66: else
  2954                           ;progPIC18F26K40.c: 67: j = 22-i;
  2955  000B5E  51C8               	movf	PIC18F26K40_readThreeBytes@i& (0+255),w,b
  2956  000B60  0816               	sublw	22
  2957  000B62  6FC7               	movwf	PIC18F26K40_readThreeBytes@j& (0+255),b
  2958  000B64                     l4749:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;progPIC18F26K40.c: 68: LATCbits.LATC5 = 1;
  2962  000B64  8A8B               	bsf	3979,5,c	;volatile
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;progPIC18F26K40.c: 69: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  2966  000B66  D000               	nop2		;2 cycle nop
  2967  000B68  D000               	nop2		;2 cycle nop
  2968  000B6A  D000               	nop2		;2 cycle nop
  2969                           
  2970                           ;progPIC18F26K40.c: 70: if (PORTCbits.RC6 == 1)
  2971  000B6C  AC82               	btfss	3970,6,c	;volatile
  2972  000B6E  D01F               	goto	l4757
  2973                           
  2974                           ;progPIC18F26K40.c: 71: data.Val = data.Val | ((DWORD)(0x1<<j));
  2975  000B70  C0C7  F0BB         	movff	PIC18F26K40_readThreeBytes@j,??_PIC18F26K40_readThreeBytes
  2976  000B74  0E01               	movlw	1
  2977  000B76  0100               	movlb	0	; () banked
  2978  000B78  6FBC               	movwf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),b
  2979  000B7A  6BBD               	clrf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),b
  2980  000B7C  2BBB               	incf	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2981  000B7E  D003               	goto	u3664
  2982  000B80                     u3665:
  2983  000B80  90D8               	bcf	status,0,c
  2984  000B82  37BC               	rlcf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),f,b
  2985  000B84  37BD               	rlcf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),f,b
  2986  000B86                     u3664:
  2987  000B86  2FBB               	decfsz	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2988  000B88  D7FB               	goto	u3665
  2989  000B8A  C0BC  F0BE         	movff	??_PIC18F26K40_readThreeBytes+1,??_PIC18F26K40_readThreeBytes+3
  2990  000B8E  C0BD  F0BF         	movff	??_PIC18F26K40_readThreeBytes+2,??_PIC18F26K40_readThreeBytes+4
  2991  000B92  0E00               	movlw	0
  2992  000B94  0100               	movlb	0	; () banked
  2993  000B96  BFBF               	btfsc	(??_PIC18F26K40_readThreeBytes+4)& (0+255),7,b
  2994  000B98  0EFF               	movlw	255
  2995  000B9A  6FC0               	movwf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),b
  2996  000B9C  6FC1               	movwf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),b
  2997  000B9E  51BE               	movf	(??_PIC18F26K40_readThreeBytes+3)& (0+255),w,b
  2998  000BA0  13C3               	iorwf	PIC18F26K40_readThreeBytes@data& (0+255),f,b
  2999  000BA2  51BF               	movf	(??_PIC18F26K40_readThreeBytes+4)& (0+255),w,b
  3000  000BA4  13C4               	iorwf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),f,b
  3001  000BA6  51C0               	movf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),w,b
  3002  000BA8  13C5               	iorwf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),f,b
  3003  000BAA  51C1               	movf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),w,b
  3004  000BAC  13C6               	iorwf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),f,b
  3005  000BAE                     l4757:
  3006                           
  3007                           ;progPIC18F26K40.c: 72: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3008  000BAE  D000               	nop2		;2 cycle nop
  3009  000BB0  D000               	nop2		;2 cycle nop
  3010  000BB2  D000               	nop2		;2 cycle nop
  3011                           
  3012                           ;progPIC18F26K40.c: 73: LATCbits.LATC5 = 0;
  3013  000BB4  9A8B               	bcf	3979,5,c	;volatile
  3014                           
  3015                           ;progPIC18F26K40.c: 74: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3016  000BB6  D000               	nop2		;2 cycle nop
  3017  000BB8  D000               	nop2		;2 cycle nop
  3018  000BBA  D000               	nop2		;2 cycle nop
  3019  000BBC  0100               	movlb	0	; () banked
  3020  000BBE  2BC8               	incf	PIC18F26K40_readThreeBytes@i& (0+255),f,b
  3021                           
  3022                           ; BSR set to: 0
  3023  000BC0  0E16               	movlw	22
  3024  000BC2  65C8               	cpfsgt	PIC18F26K40_readThreeBytes@i& (0+255),b
  3025  000BC4  D7C7               	goto	l4743
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;progPIC18F26K40.c: 75: }
  3029                           ;progPIC18F26K40.c: 76: LATCbits.LATC5 = 1;
  3030  000BC6  8A8B               	bsf	3979,5,c	;volatile
  3031                           
  3032                           ;progPIC18F26K40.c: 77: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3033  000BC8  D000               	nop2		;2 cycle nop
  3034  000BCA  D000               	nop2		;2 cycle nop
  3035  000BCC  D000               	nop2		;2 cycle nop
  3036                           
  3037                           ;progPIC18F26K40.c: 78: LATCbits.LATC5 = 0;
  3038  000BCE  9A8B               	bcf	3979,5,c	;volatile
  3039                           
  3040                           ;progPIC18F26K40.c: 79: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3041  000BD0  D000               	nop2		;2 cycle nop
  3042  000BD2  D000               	nop2		;2 cycle nop
  3043  000BD4  D000               	nop2		;2 cycle nop
  3044                           
  3045                           ;progPIC18F26K40.c: 81: TRISCbits.TRISC6 = 0;
  3046  000BD6  9C94               	bcf	3988,6,c	;volatile
  3047                           
  3048                           ;progPIC18F26K40.c: 82: return data;
  3049  000BD8  C0C3  F0B7         	movff	PIC18F26K40_readThreeBytes@data,?_PIC18F26K40_readThreeBytes
  3050  000BDC  C0C4  F0B8         	movff	PIC18F26K40_readThreeBytes@data+1,?_PIC18F26K40_readThreeBytes+1
  3051  000BE0  C0C5  F0B9         	movff	PIC18F26K40_readThreeBytes@data+2,?_PIC18F26K40_readThreeBytes+2
  3052  000BE4  C0C6  F0BA         	movff	PIC18F26K40_readThreeBytes@data+3,?_PIC18F26K40_readThreeBytes+3
  3053  000BE8  0C16               	retlw	22	;funcret
  3054  000BEA                     __end_of_PIC18F26K40_readThreeBytes:
  3055                           	opt stack 0
  3056                           tblptru	equ	0xFF8
  3057                           tblptrh	equ	0xFF7
  3058                           tblptrl	equ	0xFF6
  3059                           tablat	equ	0xFF5
  3060                           prodh	equ	0xFF4
  3061                           prodl	equ	0xFF3
  3062                           intcon	equ	0xFF2
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           indf1	equ	0xFE7
  3066                           postdec1	equ	0xFE5
  3067                           fsr1h	equ	0xFE2
  3068                           fsr1l	equ	0xFE1
  3069                           indf2	equ	0xFDF
  3070                           postinc2	equ	0xFDE
  3071                           postdec2	equ	0xFDD
  3072                           plusw2	equ	0xFDB
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function _PIC18F26K40_loadPC *****************
  3078 ;; Defined at:
  3079 ;;		line 86 in file "libs/progPIC18F26K40.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  address         4    6[BANK0 ] struct _DWORD_VAL
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  tempAddress     4   10[BANK0 ] struct _DWORD_VAL
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 3F/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3093 ;;      Params:         0       4       0       0       0
  3094 ;;      Locals:         0       4       0       0       0
  3095 ;;      Temps:          0       0       0       0       0
  3096 ;;      Totals:         0       8       0       0       0
  3097 ;;Total ram usage:        8 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:   12
  3100 ;; This function calls:
  3101 ;;		_PIC18F26K40_sendByte
  3102 ;; This function is called by:
  3103 ;;		_APP_DeviceCDCBasicDemoTasks
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text12
  3108  001850                     __ptext12:
  3109                           	opt stack 0
  3110  001850                     _PIC18F26K40_loadPC:
  3111                           	opt stack 17
  3112                           
  3113                           ;progPIC18F26K40.c: 87: DWORD_VAL tempAddress;
  3114                           ;progPIC18F26K40.c: 88: tempAddress.Val= (address.Val<<1);
  3115                           
  3116                           ;incstack = 0
  3117  001850  90D8               	bcf	status,0,c
  3118  001852  0100               	movlb	0	; () banked
  3119  001854  35B7               	rlcf	PIC18F26K40_loadPC@address& (0+255),w,b
  3120  001856  6FBB               	movwf	PIC18F26K40_loadPC@tempAddress& (0+255),b
  3121  001858  35B8               	rlcf	(PIC18F26K40_loadPC@address+1)& (0+255),w,b
  3122  00185A  6FBC               	movwf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),b
  3123  00185C  35B9               	rlcf	(PIC18F26K40_loadPC@address+2)& (0+255),w,b
  3124  00185E  6FBD               	movwf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),b
  3125  001860  35BA               	rlcf	(PIC18F26K40_loadPC@address+3)& (0+255),w,b
  3126  001862  6FBE               	movwf	(PIC18F26K40_loadPC@tempAddress+3)& (0+255),b
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;progPIC18F26K40.c: 89: tempAddress.bits.b0 = 0;
  3130  001864  91BB               	bcf	PIC18F26K40_loadPC@tempAddress& (0+255),0,b
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;progPIC18F26K40.c: 90: tempAddress.bits.b23 = 0;
  3134  001866  9FBD               	bcf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),7,b
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;progPIC18F26K40.c: 91: PIC18F26K40_sendByte(0x80, MSBTOLSB);
  3138  001868  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3139  00186A  0E80               	movlw	128
  3140  00186C  ECEC  F00A         	call	_PIC18F26K40_sendByte
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;progPIC18F26K40.c: 92: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3144  001870  D000               	nop2		;2 cycle nop
  3145  001872  D000               	nop2		;2 cycle nop
  3146  001874  D000               	nop2		;2 cycle nop
  3147                           
  3148                           ;progPIC18F26K40.c: 93: PIC18F26K40_sendByte(tempAddress.v[2], MSBTOLSB);
  3149  001876  0100               	movlb	0	; () banked
  3150  001878  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3151  00187A  51BD               	movf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),w,b
  3152  00187C  ECEC  F00A         	call	_PIC18F26K40_sendByte
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;progPIC18F26K40.c: 94: PIC18F26K40_sendByte(tempAddress.v[1], MSBTOLSB);
  3156  001880  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3157  001882  51BC               	movf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),w,b
  3158  001884  ECEC  F00A         	call	_PIC18F26K40_sendByte
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;progPIC18F26K40.c: 95: PIC18F26K40_sendByte(tempAddress.v[0], MSBTOLSB);
  3162  001888  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3163  00188A  51BB               	movf	PIC18F26K40_loadPC@tempAddress& (0+255),w,b
  3164  00188C  EFEC  F00A         	goto	_PIC18F26K40_sendByte
  3165  001890                     __end_of_PIC18F26K40_loadPC:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           intcon	equ	0xFF2
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           indf1	equ	0xFE7
  3177                           postdec1	equ	0xFE5
  3178                           fsr1h	equ	0xFE2
  3179                           fsr1l	equ	0xFE1
  3180                           indf2	equ	0xFDF
  3181                           postinc2	equ	0xFDE
  3182                           postdec2	equ	0xFDD
  3183                           plusw2	equ	0xFDB
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _PIC18F26K40_loadDataIntoNVM *****************
  3189 ;; Defined at:
  3190 ;;		line 98 in file "libs/progPIC18F26K40.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  data            4    4[BANK0 ] struct _DWORD_VAL
  3193 ;;  IncreasePC      1    8[BANK0 ] enum E4064
  3194 ;;  LatchType       1    9[BANK0 ] enum E4265
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  tempData        4   11[BANK0 ] struct _DWORD_VAL
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 3F/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3206 ;;      Params:         0       6       0       0       0
  3207 ;;      Locals:         0       4       0       0       0
  3208 ;;      Temps:          0       1       0       0       0
  3209 ;;      Totals:         0      11       0       0       0
  3210 ;;Total ram usage:       11 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:   12
  3213 ;; This function calls:
  3214 ;;		_PIC18F26K40_sendByteMsbToLsb
  3215 ;; This function is called by:
  3216 ;;		_APP_DeviceCDCBasicDemoTasks
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text13
  3221  000E22                     __ptext13:
  3222                           	opt stack 0
  3223  000E22                     _PIC18F26K40_loadDataIntoNVM:
  3224                           	opt stack 17
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;progPIC18F26K40.c: 99: DWORD_VAL tempData;
  3228                           ;progPIC18F26K40.c: 100: tempData.Val = (data.Val <<1 );
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;incstack = 0
  3232  000E22  90D8               	bcf	status,0,c
  3233  000E24  35B5               	rlcf	PIC18F26K40_loadDataIntoNVM@data& (0+255),w,b
  3234  000E26  6FBC               	movwf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),b
  3235  000E28  35B6               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+1)& (0+255),w,b
  3236  000E2A  6FBD               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),b
  3237  000E2C  35B7               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+2)& (0+255),w,b
  3238  000E2E  6FBE               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),b
  3239  000E30  35B8               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+3)& (0+255),w,b
  3240  000E32  6FBF               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+3)& (0+255),b
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;progPIC18F26K40.c: 101: tempData.bits.b0 = 0;
  3244  000E34  91BC               	bcf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),0,b
  3245                           
  3246                           ;progPIC18F26K40.c: 102: if (IncreasePC==TRUE)
  3247  000E36  05B9               	decf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),w,b
  3248  000E38  E104               	bnz	l4789
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;progPIC18F26K40.c: 103: PIC18F26K40_sendByteMsbToLsb(0x02);
  3252  000E3A  0E02               	movlw	2
  3253  000E3C  EC6F  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3254  000E40  D003               	goto	l4791
  3255  000E42                     l4789:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;progPIC18F26K40.c: 104: else
  3259                           ;progPIC18F26K40.c: 105: PIC18F26K40_sendByteMsbToLsb(0x00);
  3260  000E42  0E00               	movlw	0
  3261  000E44  EC6F  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3262  000E48                     l4791:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;progPIC18F26K40.c: 106: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3266  000E48  D000               	nop2		;2 cycle nop
  3267  000E4A  D000               	nop2		;2 cycle nop
  3268  000E4C  D000               	nop2		;2 cycle nop
  3269                           
  3270                           ;progPIC18F26K40.c: 107: PIC18F26K40_sendByteMsbToLsb(tempData.v[2]);
  3271  000E4E  0100               	movlb	0	; () banked
  3272  000E50  51BE               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),w,b
  3273  000E52  EC6F  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3274                           
  3275                           ;progPIC18F26K40.c: 108: PIC18F26K40_sendByteMsbToLsb(tempData.v[1]);
  3276  000E56  51BD               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),w,b
  3277  000E58  EC6F  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3278                           
  3279                           ;progPIC18F26K40.c: 109: PIC18F26K40_sendByteMsbToLsb(tempData.v[0]);
  3280  000E5C  51BC               	movf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),w,b
  3281  000E5E  EC6F  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;progPIC18F26K40.c: 110: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3285  000E62  D000               	nop2		;2 cycle nop
  3286  000E64  D000               	nop2		;2 cycle nop
  3287  000E66  D000               	nop2		;2 cycle nop
  3288                           
  3289                           ;progPIC18F26K40.c: 111: switch (LatchType) {
  3290  000E68  D031               	goto	l4811
  3291  000E6A                     l4795:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;progPIC18F26K40.c: 114: PIC18F26K40_sendByteMsbToLsb(0xE0);
  3295  000E6A  0EE0               	movlw	224
  3296  000E6C  EC6F  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;progPIC18F26K40.c: 115: _delay((unsigned long)((10)*(12000000/4000.0)));
  3300  000E70  0E27               	movlw	39
  3301  000E72  0100               	movlb	0	; () banked
  3302  000E74  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3303  000E76  0EF5               	movlw	245
  3304  000E78                     u4107:
  3305  000E78  2EE8               	decfsz	wreg,f,c
  3306  000E7A  D7FE               	bra	u4107
  3307  000E7C  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3308  000E7E  D7FC               	bra	u4107
  3309                           
  3310                           ;progPIC18F26K40.c: 116: break;
  3311  000E80  0012               	return	
  3312  000E82                     l4799:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;progPIC18F26K40.c: 118: PIC18F26K40_sendByteMsbToLsb(0xC0);
  3316  000E82  0EC0               	movlw	192
  3317  000E84  EC6F  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;progPIC18F26K40.c: 119: (_delay((unsigned long)((2)*(12000000/4000.0))));
  3321  000E88  0E08               	movlw	8
  3322  000E8A  0100               	movlb	0	; () banked
  3323  000E8C  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3324  000E8E  0EC9               	movlw	201
  3325  000E90                     u4117:
  3326  000E90  2EE8               	decfsz	wreg,f,c
  3327  000E92  D7FE               	bra	u4117
  3328  000E94  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3329  000E96  D7FC               	bra	u4117
  3330  000E98  D000               	nop2	
  3331                           
  3332                           ;progPIC18F26K40.c: 120: (_delay((unsigned long)((500)*(12000000/4000000.0))));
  3333  000E9A  0ED6               	movlw	214
  3334  000E9C                     u4127:
  3335  000E9C  D000               	nop2	
  3336  000E9E  D000               	nop2	
  3337  000EA0  2EE8               	decfsz	wreg,f,c
  3338  000EA2  D7FC               	bra	u4127
  3339  000EA4  D000               	nop2	
  3340                           
  3341                           ;progPIC18F26K40.c: 121: PIC18F26K40_sendByteMsbToLsb(0x82);
  3342  000EA6  0E82               	movlw	130
  3343  000EA8  EC6F  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;progPIC18F26K40.c: 122: (_delay((unsigned long)((2)*(12000000/4000.0))));
  3347  000EAC  0E08               	movlw	8
  3348  000EAE  0100               	movlb	0	; () banked
  3349  000EB0  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3350  000EB2  0EC9               	movlw	201
  3351  000EB4                     u4137:
  3352  000EB4  2EE8               	decfsz	wreg,f,c
  3353  000EB6  D7FE               	bra	u4137
  3354  000EB8  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3355  000EBA  D7FC               	bra	u4137
  3356  000EBC  D000               	nop2	
  3357                           
  3358                           ;progPIC18F26K40.c: 123: (_delay((unsigned long)((500)*(12000000/4000000.0))));
  3359  000EBE  0ED6               	movlw	214
  3360  000EC0                     u4147:
  3361  000EC0  D000               	nop2	
  3362  000EC2  D000               	nop2	
  3363  000EC4  2EE8               	decfsz	wreg,f,c
  3364  000EC6  D7FC               	bra	u4147
  3365  000EC8  D000               	nop2	
  3366                           
  3367                           ;progPIC18F26K40.c: 124: break;
  3368  000ECA  0012               	return	
  3369  000ECC                     l4811:
  3370  000ECC  0100               	movlb	0	; () banked
  3371  000ECE  51BA               	movf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),w,b
  3372                           
  3373                           ; Switch size 1, requested type "space"
  3374                           ; Number of cases is 2, Range of values is 0 to 1
  3375                           ; switch strategies available:
  3376                           ; Name         Instructions Cycles
  3377                           ; simple_byte            7     4 (average)
  3378                           ;	Chosen strategy is simple_byte
  3379  000ED0  E0CC               	bz	l4795
  3380  000ED2  0A01               	xorlw	1	; case 1
  3381  000ED4  E0D6               	bz	l4799
  3382  000ED6  0012               	return		;funcret
  3383  000ED8                     __end_of_PIC18F26K40_loadDataIntoNVM:
  3384                           	opt stack 0
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           prodh	equ	0xFF4
  3390                           prodl	equ	0xFF3
  3391                           intcon	equ	0xFF2
  3392                           postinc0	equ	0xFEE
  3393                           wreg	equ	0xFE8
  3394                           indf1	equ	0xFE7
  3395                           postdec1	equ	0xFE5
  3396                           fsr1h	equ	0xFE2
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           plusw2	equ	0xFDB
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;; *************** function _PIC18F26K40_sendByteMsbToLsb *****************
  3407 ;; Defined at:
  3408 ;;		line 128 in file "libs/progPIC18F26K40.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  info            1    wreg     unsigned char 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  info            1    2[BANK0 ] unsigned char 
  3413 ;;  i               1    3[BANK0 ] char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 3F/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3423 ;;      Params:         0       0       0       0       0
  3424 ;;      Locals:         0       2       0       0       0
  3425 ;;      Temps:          0       2       0       0       0
  3426 ;;      Totals:         0       4       0       0       0
  3427 ;;Total ram usage:        4 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:   11
  3430 ;; This function calls:
  3431 ;;		_PIC18F26K40_setTrisToOut
  3432 ;; This function is called by:
  3433 ;;		_PIC18F26K40_loadDataIntoNVM
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text14
  3438  0016DE                     __ptext14:
  3439                           	opt stack 0
  3440  0016DE                     _PIC18F26K40_sendByteMsbToLsb:
  3441                           	opt stack 17
  3442                           
  3443                           ;incstack = 0
  3444                           ;PIC18F26K40_sendByteMsbToLsb@info stored from wreg
  3445  0016DE  0100               	movlb	0	; () banked
  3446  0016E0  6FB3               	movwf	PIC18F26K40_sendByteMsbToLsb@info& (0+255),b
  3447                           
  3448                           ;progPIC18F26K40.c: 129: PIC18F26K40_setTrisToOut ();
  3449  0016E2  ECE9  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3450                           
  3451                           ;progPIC18F26K40.c: 130: for (INT8 i = 7; i >= 0; i--) {
  3452  0016E6  0E07               	movlw	7
  3453  0016E8  0100               	movlb	0	; () banked
  3454  0016EA  6FB4               	movwf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),b
  3455  0016EC                     l55:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;progPIC18F26K40.c: 131: LATCbits.LATC5 = 1;
  3459  0016EC  8A8B               	bsf	3979,5,c	;volatile
  3460                           
  3461                           ;progPIC18F26K40.c: 132: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3462  0016EE  D000               	nop2		;2 cycle nop
  3463  0016F0  D000               	nop2		;2 cycle nop
  3464  0016F2  D000               	nop2		;2 cycle nop
  3465                           
  3466                           ;progPIC18F26K40.c: 133: if ((info >> i) & 0x01)
  3467  0016F4  C0B4  F0B1         	movff	PIC18F26K40_sendByteMsbToLsb@i,??_PIC18F26K40_sendByteMsbToLsb
  3468  0016F8  C0B3  F0B2         	movff	PIC18F26K40_sendByteMsbToLsb@info,??_PIC18F26K40_sendByteMsbToLsb+1
  3469  0016FC  0100               	movlb	0	; () banked
  3470  0016FE  2BB1               	incf	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3471  001700  D002               	goto	u3574
  3472  001702                     u3575:
  3473  001702  90D8               	bcf	status,0,c
  3474  001704  33B2               	rrcf	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),f,b
  3475  001706                     u3574:
  3476  001706  2FB1               	decfsz	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3477  001708  D7FC               	goto	u3575
  3478  00170A  0100               	movlb	0	; () banked
  3479  00170C  A1B2               	btfss	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),0,b
  3480  00170E  D002               	goto	l57
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;progPIC18F26K40.c: 134: LATCbits.LATC6 = 1;
  3484  001710  8C8B               	bsf	3979,6,c	;volatile
  3485  001712  D001               	goto	l58
  3486  001714                     l57:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;progPIC18F26K40.c: 135: else
  3490                           ;progPIC18F26K40.c: 136: LATCbits.LATC6 = 0;
  3491  001714  9C8B               	bcf	3979,6,c	;volatile
  3492  001716                     l58:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;progPIC18F26K40.c: 137: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3496  001716  D000               	nop2		;2 cycle nop
  3497  001718  D000               	nop2		;2 cycle nop
  3498  00171A  D000               	nop2		;2 cycle nop
  3499                           
  3500                           ;progPIC18F26K40.c: 138: LATCbits.LATC5 = 0;
  3501  00171C  9A8B               	bcf	3979,5,c	;volatile
  3502                           
  3503                           ;progPIC18F26K40.c: 139: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3504  00171E  D000               	nop2		;2 cycle nop
  3505  001720  D000               	nop2		;2 cycle nop
  3506  001722  D000               	nop2		;2 cycle nop
  3507  001724  0100               	movlb	0	; () banked
  3508  001726  07B4               	decf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),f,b
  3509                           
  3510                           ; BSR set to: 0
  3511  001728  BFB4               	btfsc	PIC18F26K40_sendByteMsbToLsb@i& (0+255),7,b
  3512                           
  3513                           ; BSR set to: 0
  3514  00172A  0012               	return		;funcret
  3515  00172C  D7DF               	goto	l55
  3516  00172E                     __end_of_PIC18F26K40_sendByteMsbToLsb:
  3517                           	opt stack 0
  3518                           tblptru	equ	0xFF8
  3519                           tblptrh	equ	0xFF7
  3520                           tblptrl	equ	0xFF6
  3521                           tablat	equ	0xFF5
  3522                           prodh	equ	0xFF4
  3523                           prodl	equ	0xFF3
  3524                           intcon	equ	0xFF2
  3525                           postinc0	equ	0xFEE
  3526                           wreg	equ	0xFE8
  3527                           indf1	equ	0xFE7
  3528                           postdec1	equ	0xFE5
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           indf2	equ	0xFDF
  3532                           postinc2	equ	0xFDE
  3533                           postdec2	equ	0xFDD
  3534                           plusw2	equ	0xFDB
  3535                           fsr2h	equ	0xFDA
  3536                           fsr2l	equ	0xFD9
  3537                           status	equ	0xFD8
  3538                           
  3539 ;; *************** function _PIC18F26K40_exitLowVoltageProg *****************
  3540 ;; Defined at:
  3541 ;;		line 27 in file "libs/progPIC18F26K40.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		None
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3555 ;;      Params:         0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0
  3558 ;;      Totals:         0       0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:   10
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_APP_DeviceCDCBasicDemoTasks
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text15
  3570  001BB0                     __ptext15:
  3571                           	opt stack 0
  3572  001BB0                     _PIC18F26K40_exitLowVoltageProg:
  3573                           	opt stack 19
  3574                           
  3575                           ;progPIC18F26K40.c: 28: TRISCbits.TRISC7 = 0;
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;incstack = 0
  3579  001BB0  9E94               	bcf	3988,7,c	;volatile
  3580                           
  3581                           ;progPIC18F26K40.c: 29: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3582  001BB2  D000               	nop2		;2 cycle nop
  3583  001BB4  D000               	nop2		;2 cycle nop
  3584  001BB6  D000               	nop2		;2 cycle nop
  3585                           
  3586                           ;progPIC18F26K40.c: 30: LATCbits.LATC7 = 1;
  3587  001BB8  8E8B               	bsf	3979,7,c	;volatile
  3588  001BBA  0012               	return		;funcret
  3589  001BBC                     __end_of_PIC18F26K40_exitLowVoltageProg:
  3590                           	opt stack 0
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           prodh	equ	0xFF4
  3596                           prodl	equ	0xFF3
  3597                           intcon	equ	0xFF2
  3598                           postinc0	equ	0xFEE
  3599                           wreg	equ	0xFE8
  3600                           indf1	equ	0xFE7
  3601                           postdec1	equ	0xFE5
  3602                           fsr1h	equ	0xFE2
  3603                           fsr1l	equ	0xFE1
  3604                           indf2	equ	0xFDF
  3605                           postinc2	equ	0xFDE
  3606                           postdec2	equ	0xFDD
  3607                           plusw2	equ	0xFDB
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _PIC18F26K40_enterLowVoltageProg *****************
  3613 ;; Defined at:
  3614 ;;		line 10 in file "libs/progPIC18F26K40.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  code            4    6[BANK0 ] struct _DWORD_VAL
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 3F/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3628 ;;      Params:         0       0       0       0       0
  3629 ;;      Locals:         0       4       0       0       0
  3630 ;;      Temps:          0       0       0       0       0
  3631 ;;      Totals:         0       4       0       0       0
  3632 ;;Total ram usage:        4 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:   12
  3635 ;; This function calls:
  3636 ;;		_PIC18F26K40_sendByte
  3637 ;;		_PIC18F26K40_setTrisToOut
  3638 ;; This function is called by:
  3639 ;;		_APP_DeviceCDCBasicDemoTasks
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text16
  3644  00172E                     __ptext16:
  3645                           	opt stack 0
  3646  00172E                     _PIC18F26K40_enterLowVoltageProg:
  3647                           	opt stack 17
  3648                           
  3649                           ;progPIC18F26K40.c: 11: PIC18F26K40_setTrisToOut ();
  3650                           
  3651                           ;incstack = 0
  3652  00172E  ECE9  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3653                           
  3654                           ;progPIC18F26K40.c: 12: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3655  001732  D000               	nop2		;2 cycle nop
  3656  001734  D000               	nop2		;2 cycle nop
  3657  001736  D000               	nop2		;2 cycle nop
  3658                           
  3659                           ;progPIC18F26K40.c: 14: LATCbits.LATC7 = 0;
  3660  001738  9E8B               	bcf	3979,7,c	;volatile
  3661                           
  3662                           ;progPIC18F26K40.c: 15: LATCbits.LATC6 = 0;
  3663  00173A  9C8B               	bcf	3979,6,c	;volatile
  3664                           
  3665                           ;progPIC18F26K40.c: 16: LATCbits.LATC5 = 0;
  3666  00173C  9A8B               	bcf	3979,5,c	;volatile
  3667                           
  3668                           ;progPIC18F26K40.c: 17: (_delay((unsigned long)((500)*(12000000/4000000.0))));
  3669  00173E  0ED6               	movlw	214
  3670  001740                     u4157:
  3671  001740  D000               	nop2	
  3672  001742  D000               	nop2	
  3673  001744  2EE8               	decfsz	wreg,f,c
  3674  001746  D7FC               	bra	u4157
  3675  001748  D000               	nop2	
  3676                           
  3677                           ;progPIC18F26K40.c: 19: DWORD_VAL code;
  3678                           ;progPIC18F26K40.c: 20: code.Val = (0x4d434850);
  3679  00174A  0E50               	movlw	80
  3680  00174C  0100               	movlb	0	; () banked
  3681  00174E  6FB7               	movwf	PIC18F26K40_enterLowVoltageProg@code& (0+255),b
  3682  001750  0E48               	movlw	72
  3683  001752  6FB8               	movwf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),b
  3684  001754  0E43               	movlw	67
  3685  001756  6FB9               	movwf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),b
  3686  001758  0E4D               	movlw	77
  3687  00175A  6FBA               	movwf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),b
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;progPIC18F26K40.c: 21: PIC18F26K40_sendByte(code.v[3], MSBTOLSB);
  3691  00175C  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3692  00175E  51BA               	movf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),w,b
  3693  001760  ECEC  F00A         	call	_PIC18F26K40_sendByte
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;progPIC18F26K40.c: 22: PIC18F26K40_sendByte(code.v[2], MSBTOLSB);
  3697  001764  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3698  001766  51B9               	movf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),w,b
  3699  001768  ECEC  F00A         	call	_PIC18F26K40_sendByte
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;progPIC18F26K40.c: 23: PIC18F26K40_sendByte(code.v[1], MSBTOLSB);
  3703  00176C  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3704  00176E  51B8               	movf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),w,b
  3705  001770  ECEC  F00A         	call	_PIC18F26K40_sendByte
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;progPIC18F26K40.c: 24: PIC18F26K40_sendByte(code.v[0], MSBTOLSB);
  3709  001774  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3710  001776  51B7               	movf	PIC18F26K40_enterLowVoltageProg@code& (0+255),w,b
  3711  001778  EFEC  F00A         	goto	_PIC18F26K40_sendByte
  3712  00177C                     __end_of_PIC18F26K40_enterLowVoltageProg:
  3713                           	opt stack 0
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           prodh	equ	0xFF4
  3719                           prodl	equ	0xFF3
  3720                           intcon	equ	0xFF2
  3721                           postinc0	equ	0xFEE
  3722                           wreg	equ	0xFE8
  3723                           indf1	equ	0xFE7
  3724                           postdec1	equ	0xFE5
  3725                           fsr1h	equ	0xFE2
  3726                           fsr1l	equ	0xFE1
  3727                           indf2	equ	0xFDF
  3728                           postinc2	equ	0xFDE
  3729                           postdec2	equ	0xFDD
  3730                           plusw2	equ	0xFDB
  3731                           fsr2h	equ	0xFDA
  3732                           fsr2l	equ	0xFD9
  3733                           status	equ	0xFD8
  3734                           
  3735 ;; *************** function _PIC18F26K40_sendByte *****************
  3736 ;; Defined at:
  3737 ;;		line 33 in file "libs/progPIC18F26K40.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  info            1    wreg     unsigned char 
  3740 ;;  direction       1    0[BANK0 ] enum E4265
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  info            1    3[BANK0 ] unsigned char 
  3743 ;;  i               1    5[BANK0 ] unsigned char 
  3744 ;;  j               1    4[BANK0 ] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 3F/0
  3751 ;;		On exit  : 3F/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3754 ;;      Params:         0       1       0       0       0
  3755 ;;      Locals:         0       3       0       0       0
  3756 ;;      Temps:          0       2       0       0       0
  3757 ;;      Totals:         0       6       0       0       0
  3758 ;;Total ram usage:        6 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:   11
  3761 ;; This function calls:
  3762 ;;		_PIC18F26K40_setTrisToOut
  3763 ;; This function is called by:
  3764 ;;		_PIC18F26K40_enterLowVoltageProg
  3765 ;;		_PIC18F26K40_readThreeBytes
  3766 ;;		_PIC18F26K40_loadPC
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text17
  3771  0015D8                     __ptext17:
  3772                           	opt stack 0
  3773  0015D8                     _PIC18F26K40_sendByte:
  3774                           	opt stack 17
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;incstack = 0
  3778                           ;PIC18F26K40_sendByte@info stored from wreg
  3779  0015D8  6FB4               	movwf	PIC18F26K40_sendByte@info& (0+255),b
  3780                           
  3781                           ;progPIC18F26K40.c: 34: PIC18F26K40_setTrisToOut ();
  3782  0015DA  ECE9  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3783                           
  3784                           ;progPIC18F26K40.c: 35: BYTE i, j;
  3785                           ;progPIC18F26K40.c: 36: for (i = 0; i < 8; i++) {
  3786  0015DE  0100               	movlb	0	; () banked
  3787  0015E0  6BB6               	clrf	PIC18F26K40_sendByte@i& (0+255),b
  3788  0015E2                     l4639:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;progPIC18F26K40.c: 37: if (direction)
  3792  0015E2  51B1               	movf	PIC18F26K40_sendByte@direction& (0+255),w,b
  3793  0015E4  E003               	bz	l4643
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;progPIC18F26K40.c: 38: j = i;
  3797  0015E6  C0B6  F0B5         	movff	PIC18F26K40_sendByte@i,PIC18F26K40_sendByte@j
  3798  0015EA  D003               	goto	l4645
  3799  0015EC                     l4643:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;progPIC18F26K40.c: 39: else
  3803                           ;progPIC18F26K40.c: 40: j = 7-i;
  3804  0015EC  51B6               	movf	PIC18F26K40_sendByte@i& (0+255),w,b
  3805  0015EE  0807               	sublw	7
  3806  0015F0  6FB5               	movwf	PIC18F26K40_sendByte@j& (0+255),b
  3807  0015F2                     l4645:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;progPIC18F26K40.c: 41: LATCbits.LATC5 = 1;
  3811  0015F2  8A8B               	bsf	3979,5,c	;volatile
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;progPIC18F26K40.c: 42: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3815  0015F4  D000               	nop2		;2 cycle nop
  3816  0015F6  D000               	nop2		;2 cycle nop
  3817  0015F8  D000               	nop2		;2 cycle nop
  3818                           
  3819                           ;progPIC18F26K40.c: 43: if ((info >> j) & 0x01)
  3820  0015FA  C0B5  F0B2         	movff	PIC18F26K40_sendByte@j,??_PIC18F26K40_sendByte
  3821  0015FE  C0B4  F0B3         	movff	PIC18F26K40_sendByte@info,??_PIC18F26K40_sendByte+1
  3822  001602  0100               	movlb	0	; () banked
  3823  001604  2BB2               	incf	??_PIC18F26K40_sendByte& (0+255),f,b
  3824  001606  D002               	goto	u3544
  3825  001608                     u3545:
  3826  001608  90D8               	bcf	status,0,c
  3827  00160A  33B3               	rrcf	(??_PIC18F26K40_sendByte+1)& (0+255),f,b
  3828  00160C                     u3544:
  3829  00160C  2FB2               	decfsz	??_PIC18F26K40_sendByte& (0+255),f,b
  3830  00160E  D7FC               	goto	u3545
  3831  001610  0100               	movlb	0	; () banked
  3832  001612  A1B3               	btfss	(??_PIC18F26K40_sendByte+1)& (0+255),0,b
  3833  001614  D002               	goto	l28
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;progPIC18F26K40.c: 44: LATCbits.LATC6 = 1;
  3837  001616  8C8B               	bsf	3979,6,c	;volatile
  3838  001618  D001               	goto	l29
  3839  00161A                     l28:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;progPIC18F26K40.c: 45: else
  3843                           ;progPIC18F26K40.c: 46: LATCbits.LATC6 = 0;
  3844  00161A  9C8B               	bcf	3979,6,c	;volatile
  3845  00161C                     l29:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;progPIC18F26K40.c: 47: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3849  00161C  D000               	nop2		;2 cycle nop
  3850  00161E  D000               	nop2		;2 cycle nop
  3851  001620  D000               	nop2		;2 cycle nop
  3852                           
  3853                           ;progPIC18F26K40.c: 48: LATCbits.LATC5 = 0;
  3854  001622  9A8B               	bcf	3979,5,c	;volatile
  3855                           
  3856                           ;progPIC18F26K40.c: 49: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3857  001624  D000               	nop2		;2 cycle nop
  3858  001626  D000               	nop2		;2 cycle nop
  3859  001628  D000               	nop2		;2 cycle nop
  3860  00162A  0100               	movlb	0	; () banked
  3861  00162C  2BB6               	incf	PIC18F26K40_sendByte@i& (0+255),f,b
  3862                           
  3863                           ; BSR set to: 0
  3864  00162E  0E07               	movlw	7
  3865  001630  65B6               	cpfsgt	PIC18F26K40_sendByte@i& (0+255),b
  3866  001632  D7D7               	goto	l4639
  3867  001634  0C07               	retlw	7
  3868  001636                     __end_of_PIC18F26K40_sendByte:
  3869                           	opt stack 0
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           intcon	equ	0xFF2
  3877                           postinc0	equ	0xFEE
  3878                           wreg	equ	0xFE8
  3879                           indf1	equ	0xFE7
  3880                           postdec1	equ	0xFE5
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           indf2	equ	0xFDF
  3884                           postinc2	equ	0xFDE
  3885                           postdec2	equ	0xFDD
  3886                           plusw2	equ	0xFDB
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function _PIC18F26K40_setTrisToOut *****************
  3892 ;; Defined at:
  3893 ;;		line 4 in file "libs/progPIC18F26K40.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		None
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3907 ;;      Params:         0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:   10
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_PIC18F26K40_enterLowVoltageProg
  3918 ;;		_PIC18F26K40_sendByte
  3919 ;;		_PIC18F26K40_sendByteMsbToLsb
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text18
  3924  001BD2                     __ptext18:
  3925                           	opt stack 0
  3926  001BD2                     _PIC18F26K40_setTrisToOut:
  3927                           	opt stack 17
  3928                           
  3929                           ;progPIC18F26K40.c: 5: TRISCbits.TRISC7 = 0;
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;incstack = 0
  3933  001BD2  9E94               	bcf	3988,7,c	;volatile
  3934                           
  3935                           ;progPIC18F26K40.c: 6: TRISCbits.TRISC6 = 0;
  3936  001BD4  9C94               	bcf	3988,6,c	;volatile
  3937                           
  3938                           ;progPIC18F26K40.c: 7: TRISCbits.TRISC5 = 0;
  3939  001BD6  9A94               	bcf	3988,5,c	;volatile
  3940  001BD8  0012               	return		;funcret
  3941  001BDA                     __end_of_PIC18F26K40_setTrisToOut:
  3942                           	opt stack 0
  3943                           tblptru	equ	0xFF8
  3944                           tblptrh	equ	0xFF7
  3945                           tblptrl	equ	0xFF6
  3946                           tablat	equ	0xFF5
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           intcon	equ	0xFF2
  3950                           postinc0	equ	0xFEE
  3951                           wreg	equ	0xFE8
  3952                           indf1	equ	0xFE7
  3953                           postdec1	equ	0xFE5
  3954                           fsr1h	equ	0xFE2
  3955                           fsr1l	equ	0xFE1
  3956                           indf2	equ	0xFDF
  3957                           postinc2	equ	0xFDE
  3958                           postdec2	equ	0xFDD
  3959                           plusw2	equ	0xFDB
  3960                           fsr2h	equ	0xFDA
  3961                           fsr2l	equ	0xFD9
  3962                           status	equ	0xFD8
  3963                           
  3964 ;; *************** function _CDCTxService *****************
  3965 ;; Defined at:
  3966 ;;		line 836 in file "picLibs/usb_device_cdc.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  3971 ;;  i               1    9[BANK0 ] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 3F/0
  3978 ;;		On exit  : 3F/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3981 ;;      Params:         0       0       0       0       0
  3982 ;;      Locals:         0       2       0       0       0
  3983 ;;      Temps:          0       0       0       0       0
  3984 ;;      Totals:         0       2       0       0       0
  3985 ;;Total ram usage:        2 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:   11
  3988 ;; This function calls:
  3989 ;;		_USBTransferOnePacket
  3990 ;; This function is called by:
  3991 ;;		_APP_DeviceCDCBasicDemoTasks
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text19
  3996  000A58                     __ptext19:
  3997                           	opt stack 0
  3998  000A58                     _CDCTxService:
  3999                           	opt stack 18
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  4003                           ;usb_device_cdc.c: 839: uint8_t i;
  4004                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  4005                           
  4006                           ;incstack = 0
  4007  000A58  94A0               	bcf	4000,2,c	;volatile
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;usb_device_cdc.c: 843: {};
  4011                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  4012  000A5A  5176               	movf	_CDCDataInHandle& (0+255),w,b
  4013  000A5C  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  4014  000A5E  E008               	bz	l4899
  4015                           
  4016                           ; BSR set to: 0
  4017  000A60  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
  4018  000A64  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  4019  000A68  AEDF               	btfss	indf2,7,c
  4020  000A6A  D002               	goto	l4899
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;usb_device_cdc.c: 846: {
  4024                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  4025  000A6C  84A0               	bsf	4000,2,c	;volatile
  4026                           
  4027                           ;usb_device_cdc.c: 848: return;
  4028  000A6E  0012               	return	
  4029  000A70                     l4899:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;usb_device_cdc.c: 849: }
  4033                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  4034  000A70  0E03               	movlw	3
  4035  000A72  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  4036  000A74  E101               	bnz	l4903
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  4040  000A76  6B80               	clrf	_cdc_trf_state& (0+255),b
  4041  000A78                     l4903:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  4045  000A78  5180               	movf	_cdc_trf_state& (0+255),w,b
  4046  000A7A  E102               	bnz	l4907
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;usb_device_cdc.c: 863: {
  4050                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  4051  000A7C  84A0               	bsf	4000,2,c	;volatile
  4052                           
  4053                           ;usb_device_cdc.c: 865: return;
  4054  000A7E  0012               	return	
  4055  000A80                     l4907:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;usb_device_cdc.c: 866: }
  4059                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  4060  000A80  0E02               	movlw	2
  4061  000A82  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  4062  000A84  E10D               	bnz	l4913
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;usb_device_cdc.c: 872: {
  4066                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  4067  000A86  0E01               	movlw	1
  4068  000A88  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  4069  000A8A  0E00               	movlw	0
  4070  000A8C  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  4071  000A8E  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4072  000A90  6FB4               	movwf	USBTransferOnePacket@len& (0+255),b
  4073  000A92  0E02               	movlw	2
  4074  000A94  ECF5  F005         	call	_USBTransferOnePacket
  4075  000A98  D841               	call	PL106	;call to abstracted procedure
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  4079  000A9A  0E03               	movlw	3
  4080  000A9C  6F80               	movwf	_cdc_trf_state& (0+255),b
  4081                           
  4082                           ;usb_device_cdc.c: 876: }
  4083  000A9E  D02E               	goto	l4957
  4084  000AA0                     l4913:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  4088  000AA0  0580               	decf	_cdc_trf_state& (0+255),w,b
  4089  000AA2  E12C               	bnz	l4957
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;usb_device_cdc.c: 878: {
  4093                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  4094  000AA4  0E0F               	movlw	15
  4095  000AA6  641B               	cpfsgt	_cdc_tx_len,c
  4096  000AA8  D002               	goto	l760
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  4100  000AAA  6FBB               	movwf	CDCTxService@byte_to_send& (0+255),b
  4101  000AAC  D002               	goto	l4919
  4102  000AAE                     l760:
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;usb_device_cdc.c: 884: else
  4106                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  4107  000AAE  C01B  F0BB         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  4108  000AB2                     l4919:
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  4112  000AB2  51BB               	movf	CDCTxService@byte_to_send& (0+255),w,b
  4113  000AB4  5E1B               	subwf	_cdc_tx_len,f,c
  4114                           
  4115                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  4116  000AB6  0E40               	movlw	64
  4117  000AB8  6F6A               	movwf	_pCDCDst& (0+255),b
  4118  000ABA  0E02               	movlw	2
  4119  000ABC  6F6B               	movwf	(_pCDCDst+1)& (0+255),b
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;usb_device_cdc.c: 894: i = byte_to_send;
  4123  000ABE  C0BB  F0BA         	movff	CDCTxService@byte_to_send,CDCTxService@i
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  4127  000AC2  517C               	movf	_cdc_mem_type& (0+255),w,b
  4128  000AC4  E002               	bz	l4935
  4129  000AC6  D005               	goto	l4945
  4130  000AC8                     l4927:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;usb_device_cdc.c: 898: {
  4134                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;usb_device_cdc.c: 902: i--;
  4144  000AC8  D81B               	call	PL30	;call to abstracted procedure
  4145  000ACA                     l4935:
  4146                           
  4147                           ; BSR set to: 0
  4148  000ACA  51BA               	movf	CDCTxService@i& (0+255),w,b
  4149  000ACC  E004               	bz	l4947
  4150  000ACE  D7FC               	goto	l4927
  4151  000AD0                     l4937:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;usb_device_cdc.c: 908: {
  4155                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;usb_device_cdc.c: 912: i--;
  4165  000AD0  D817               	call	PL30	;call to abstracted procedure
  4166  000AD2                     l4945:
  4167                           
  4168                           ; BSR set to: 0
  4169  000AD2  51BA               	movf	CDCTxService@i& (0+255),w,b
  4170  000AD4  E1FD               	bnz	l4937
  4171  000AD6                     l4947:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;usb_device_cdc.c: 913: }
  4175                           ;usb_device_cdc.c: 914: }
  4176                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  4177  000AD6  501B               	movf	_cdc_tx_len,w,c
  4178  000AD8  E106               	bnz	l4955
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;usb_device_cdc.c: 921: {
  4182                           ;usb_device_cdc.c: 922: if(byte_to_send == 15)
  4183  000ADA  0E0F               	movlw	15
  4184  000ADC  19BB               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  4188  000ADE  0E02               	movlw	2
  4189  000AE0  A4D8               	btfss	status,2,c
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;usb_device_cdc.c: 924: else
  4193                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  4194  000AE2  0E03               	movlw	3
  4195  000AE4  6F80               	movwf	_cdc_trf_state& (0+255),b
  4196  000AE6                     l4955:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;usb_device_cdc.c: 926: }
  4200                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4201  000AE6  0E01               	movlw	1
  4202  000AE8  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  4203  000AEA  0E40               	movlw	64
  4204  000AEC  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  4205  000AEE  0E02               	movlw	2
  4206  000AF0  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4207  000AF2  C0BB  F0B4         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  4208  000AF6  ECF5  F005         	call	_USBTransferOnePacket
  4209  000AFA  D810               	call	PL106	;call to abstracted procedure
  4210  000AFC                     l4957:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;usb_device_cdc.c: 929: }
  4214                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  4215  000AFC  84A0               	bsf	4000,2,c	;volatile
  4216                           
  4217                           ; BSR set to: 0
  4218  000AFE  0012               	return		;funcret
  4219  000B00                     __end_of_CDCTxService:
  4220                           	opt stack 0
  4221  000B00                     PL30:
  4222                           	opt stack 18
  4223  000B00  516D               	movf	_pCDCSrc& (0+255),w,b
  4224  000B02  6ED9               	movwf	fsr2l,c
  4225  000B04  6ADA               	clrf	fsr2h,c
  4226  000B06  C06A  FFE1         	movff	_pCDCDst,fsr1l
  4227  000B0A  C06B  FFE2         	movff	_pCDCDst+1,fsr1h
  4228  000B0E  CFDF FFE7          	movff	indf2,indf1
  4229  000B12  4B6A               	infsnz	_pCDCDst& (0+255),f,b
  4230  000B14  2B6B               	incf	(_pCDCDst+1)& (0+255),f,b
  4231  000B16  2B6D               	incf	_pCDCSrc& (0+255),f,b
  4232  000B18  07BA               	decf	CDCTxService@i& (0+255),f,b
  4233  000B1A  0012               	return	
  4234  000B1C                     __end_ofPL30:
  4235                           	opt stack 0
  4236  000B1C                     PL106:
  4237                           	opt stack 18
  4238  000B1C  C0B1  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4239  000B20  C0B2  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4240  000B24  0012               	return	
  4241  000B26                     __end_ofPL106:
  4242                           	opt stack 0
  4243                           tblptru	equ	0xFF8
  4244                           tblptrh	equ	0xFF7
  4245                           tblptrl	equ	0xFF6
  4246                           tablat	equ	0xFF5
  4247                           prodh	equ	0xFF4
  4248                           prodl	equ	0xFF3
  4249                           intcon	equ	0xFF2
  4250                           postinc0	equ	0xFEE
  4251                           wreg	equ	0xFE8
  4252                           indf1	equ	0xFE7
  4253                           postdec1	equ	0xFE5
  4254                           fsr1h	equ	0xFE2
  4255                           fsr1l	equ	0xFE1
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           postdec2	equ	0xFDD
  4259                           plusw2	equ	0xFDB
  4260                           fsr2h	equ	0xFDA
  4261                           fsr2l	equ	0xFD9
  4262                           status	equ	0xFD8
  4263                           
  4264 ;; *************** function _USBTransferOnePacket *****************
  4265 ;; Defined at:
  4266 ;;		line 995 in file "picLibs/usb_device.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  ep              1    wreg     unsigned char 
  4269 ;;  dir             1    0[BANK0 ] unsigned char 
  4270 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4271 ;;		 -> cdc_data_tx(15), cdc_data_rx(15), NULL(0), 
  4272 ;;  len             1    3[BANK0 ] unsigned char 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  ep              1    6[BANK0 ] unsigned char 
  4275 ;;  handle          2    7[BANK0 ] PTR volatile struct __BD
  4276 ;;		 -> RAM(767), NULL(0), BDT(48), 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  2    0[BANK0 ] PTR void 
  4279 ;; Registers used:
  4280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4281 ;; Tracked objects:
  4282 ;;		On entry : 3F/0
  4283 ;;		On exit  : 3F/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4286 ;;      Params:         0       4       0       0       0
  4287 ;;      Locals:         0       3       0       0       0
  4288 ;;      Temps:          0       2       0       0       0
  4289 ;;      Totals:         0       9       0       0       0
  4290 ;;Total ram usage:        9 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:   10
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_getsUSBUSART
  4297 ;;		_CDCTxService
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text20
  4302  000BEA                     __ptext20:
  4303                           	opt stack 0
  4304  000BEA                     _USBTransferOnePacket:
  4305                           	opt stack 18
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;incstack = 0
  4309                           ;USBTransferOnePacket@ep stored from wreg
  4310  000BEA  6FB7               	movwf	USBTransferOnePacket@ep& (0+255),b
  4311                           
  4312                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4313                           ;usb_device.c: 1000: if(dir != 0)
  4314  000BEC  0100               	movlb	0	; () banked
  4315  000BEE  51B1               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4316  000BF0  E004               	bz	l4677
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;usb_device.c: 1001: {
  4320                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4321  000BF2  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4322  000BF4  EC03  F007         	call	PL94	;call to abstracted procedure
  4323  000BF8  D003               	goto	L3
  4324  000BFA                     l4677:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;usb_device.c: 1005: else
  4328                           ;usb_device.c: 1006: {
  4329                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4330  000BFA  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4331  000BFC  ECFF  F006         	call	PL88	;call to abstracted procedure
  4332  000C00                     L3:
  4333  000C00  6ED9               	movwf	fsr2l,c
  4334  000C02  6ADA               	clrf	fsr2h,c
  4335  000C04  CFDE F0B8          	movff	postinc2,USBTransferOnePacket@handle
  4336  000C08  CFDD F0B9          	movff	postdec2,USBTransferOnePacket@handle+1
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;usb_device.c: 1009: }
  4340                           ;usb_device.c: 1013: if(handle == 0)
  4341  000C0C  51B8               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4342  000C0E  11B9               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4343  000C10  E103               	bnz	l4683
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;usb_device.c: 1014: {
  4347                           ;usb_device.c: 1015: return 0;
  4348  000C12  6BB1               	clrf	?_USBTransferOnePacket& (0+255),b
  4349  000C14  6BB2               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  4350  000C16  0012               	return	
  4351  000C18                     l4683:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;usb_device.c: 1016: }
  4355                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4356  000C18  EE20 F002          	lfsr	2,2
  4357  000C1C  D842               	call	PL116	;call to abstracted procedure
  4358  000C1E  C0B2  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4359  000C22  C0B3  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4360                           
  4361                           ;usb_device.c: 1030: handle->CNT = len;
  4362  000C26  EE20 F001          	lfsr	2,1
  4363  000C2A  D83B               	call	PL116	;call to abstracted procedure
  4364  000C2C  C0B4  FFDF         	movff	USBTransferOnePacket@len,indf2
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4368  000C30  D833               	call	PL90	;call to abstracted procedure
  4369  000C32  0E40               	movlw	64
  4370  000C34  16DF               	andwf	indf2,f,c
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4374  000C36  D830               	call	PL90	;call to abstracted procedure
  4375  000C38  0E00               	movlw	0
  4376  000C3A  86DB               	bsf	plusw2,3,c
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4380  000C3C  D82D               	call	PL90	;call to abstracted procedure
  4381  000C3E  8EDB               	bsf	plusw2,7,c
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;usb_device.c: 1036: if(dir != 0)
  4385  000C40  51B1               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4386  000C42  E005               	bz	l4695
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;usb_device.c: 1037: {
  4390                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4391  000C44  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4392  000C46  D818               	call	PL36	;call to abstracted procedure
  4393  000C48  D81D               	call	PL60	;call to abstracted procedure
  4394  000C4A  0F0F               	addlw	low _pBDTEntryIn
  4395  000C4C  D004               	goto	L4
  4396  000C4E                     l4695:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;usb_device.c: 1041: else
  4400                           ;usb_device.c: 1042: {
  4401                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4402  000C4E  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4403  000C50  D80D               	call	PL32	;call to abstracted procedure
  4404  000C52  D818               	call	PL60	;call to abstracted procedure
  4405  000C54  0F60               	addlw	low _pBDTEntryOut
  4406  000C56                     L4:
  4407  000C56  6ED9               	movwf	fsr2l,c
  4408  000C58  6ADA               	clrf	fsr2h,c
  4409  000C5A  C0B5  FFDE         	movff	??_USBTransferOnePacket,postinc2
  4410  000C5E  C0B6  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;usb_device.c: 1045: }
  4414                           ;usb_device.c: 1046: return (void*)handle;
  4415  000C62  C0B8  F0B1         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4416  000C66  C0B9  F0B2         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4417                           
  4418                           ; BSR set to: 0
  4419  000C6A  0012               	return		;funcret
  4420  000C6C                     __end_of_USBTransferOnePacket:
  4421                           	opt stack 0
  4422  000C6C                     PL32:
  4423                           	opt stack 19
  4424  000C6C  0D02               	mullw	2
  4425  000C6E  50F3               	movf	prodl,w,c
  4426  000C70  0F60               	addlw	low _pBDTEntryOut
  4427  000C72  6ED9               	movwf	fsr2l,c
  4428  000C74  6ADA               	clrf	fsr2h,c
  4429  000C76  0012               	return	
  4430  000C78                     __end_ofPL32:
  4431                           	opt stack 0
  4432  000C78                     PL36:
  4433                           	opt stack 19
  4434  000C78  0D02               	mullw	2
  4435  000C7A  50F3               	movf	prodl,w,c
  4436  000C7C  0F0F               	addlw	low _pBDTEntryIn
  4437  000C7E  6ED9               	movwf	fsr2l,c
  4438  000C80  6ADA               	clrf	fsr2h,c
  4439  000C82  0012               	return	
  4440  000C84                     __end_ofPL36:
  4441                           	opt stack 0
  4442  000C84                     PL60:
  4443                           	opt stack 18
  4444  000C84  CFDE F0B5          	movff	postinc2,??_USBTransferOnePacket
  4445  000C88  CFDD F0B6          	movff	postdec2,??_USBTransferOnePacket+1
  4446  000C8C  0E04               	movlw	4
  4447  000C8E  1BB5               	xorwf	??_USBTransferOnePacket& (0+255),f,b
  4448  000C90  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4449  000C92  0D02               	mullw	2
  4450  000C94  50F3               	movf	prodl,w,c
  4451  000C96  0012               	return	
  4452  000C98                     __end_ofPL60:
  4453                           	opt stack 0
  4454  000C98                     PL90:
  4455                           	opt stack 18
  4456  000C98  C0B8  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4457  000C9C  C0B9  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4458  000CA0  0012               	return	
  4459  000CA2                     __end_ofPL90:
  4460                           	opt stack 0
  4461  000CA2                     PL116:
  4462                           	opt stack 18
  4463  000CA2  51B8               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4464  000CA4  26D9               	addwf	fsr2l,f,c
  4465  000CA6  51B9               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4466  000CA8  22DA               	addwfc	fsr2h,f,c
  4467  000CAA  0012               	return	
  4468  000CAC                     __end_ofPL116:
  4469                           	opt stack 0
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           prodh	equ	0xFF4
  4475                           prodl	equ	0xFF3
  4476                           intcon	equ	0xFF2
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           indf1	equ	0xFE7
  4480                           postdec1	equ	0xFE5
  4481                           fsr1h	equ	0xFE2
  4482                           fsr1l	equ	0xFE1
  4483                           indf2	equ	0xFDF
  4484                           postinc2	equ	0xFDE
  4485                           postdec2	equ	0xFDD
  4486                           plusw2	equ	0xFDB
  4487                           fsr2h	equ	0xFDA
  4488                           fsr2l	equ	0xFD9
  4489                           status	equ	0xFD8
  4490                           
  4491 ;; *************** function _BUTTON_IsPressed *****************
  4492 ;; Defined at:
  4493 ;;		line 55 in file "picLibs/buttons.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  button          1    wreg     enum E3304
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  button          1    0[BANK0 ] enum E3304
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      unsigned char 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 3F/0
  4504 ;;		On exit  : 3F/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4507 ;;      Params:         0       0       0       0       0
  4508 ;;      Locals:         0       1       0       0       0
  4509 ;;      Temps:          0       0       0       0       0
  4510 ;;      Totals:         0       1       0       0       0
  4511 ;;Total ram usage:        1 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:   10
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_APP_DeviceCDCBasicDemoTasks
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text21
  4522  001B52                     __ptext21:
  4523                           	opt stack 0
  4524  001B52                     _BUTTON_IsPressed:
  4525                           	opt stack 19
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;incstack = 0
  4529                           ;BUTTON_IsPressed@button stored from wreg
  4530  001B52  6FB1               	movwf	BUTTON_IsPressed@button& (0+255),b
  4531                           
  4532                           ;buttons.c: 57: switch(button)
  4533  001B54  D003               	goto	l4821
  4534  001B56                     l159:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4538  001B56  A680               	btfss	3968,3,c	;volatile
  4539  001B58  0C01               	retlw	1
  4540  001B5A  0C00               	retlw	0
  4541  001B5C                     l4821:
  4542  001B5C  0100               	movlb	0	; () banked
  4543  001B5E  51B1               	movf	BUTTON_IsPressed@button& (0+255),w,b
  4544                           
  4545                           ; Switch size 1, requested type "space"
  4546                           ; Number of cases is 2, Range of values is 0 to 1
  4547                           ; switch strategies available:
  4548                           ; Name         Instructions Cycles
  4549                           ; simple_byte            7     4 (average)
  4550                           ;	Chosen strategy is simple_byte
  4551  001B60  B4D8               	btfsc	status,2,c
  4552  001B62  0C00               	retlw	0
  4553  001B64  0A01               	xorlw	1	; case 1
  4554  001B66  A4D8               	btfss	status,2,c
  4555  001B68  0C00               	retlw	0
  4556  001B6A  D7F5               	goto	l159
  4557  001B6C                     __end_of_BUTTON_IsPressed:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           intcon	equ	0xFF2
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           indf1	equ	0xFE7
  4569                           postdec1	equ	0xFE5
  4570                           fsr1h	equ	0xFE2
  4571                           fsr1l	equ	0xFE1
  4572                           indf2	equ	0xFDF
  4573                           postinc2	equ	0xFDE
  4574                           postdec2	equ	0xFDD
  4575                           plusw2	equ	0xFDB
  4576                           fsr2h	equ	0xFDA
  4577                           fsr2l	equ	0xFD9
  4578                           status	equ	0xFD8
  4579                           
  4580 ;; *************** function _SYS_InterruptHigh *****************
  4581 ;; Defined at:
  4582 ;;		line 86 in file "picLibs/system.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4596 ;;      Params:         0       0       0       0       0
  4597 ;;      Locals:         0       0       0       0       0
  4598 ;;      Temps:         10       0       0       0       0
  4599 ;;      Totals:        10       0       0       0       0
  4600 ;;Total ram usage:       10 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    9
  4603 ;; This function calls:
  4604 ;;		_USBDeviceTasks
  4605 ;; This function is called by:
  4606 ;;		Interrupt level 2
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	intcode
  4611  000008                     __pintcode:
  4612                           	opt stack 0
  4613  000008                     _SYS_InterruptHigh:
  4614                           	opt stack 17
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;incstack = 0
  4618  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4619  00000A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh
  4620  00000E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+1
  4621  000012  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+2
  4622  000016  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+3
  4623  00001A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+4
  4624  00001E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+5
  4625  000022  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+6
  4626  000026  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+7
  4627  00002A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+8
  4628  00002E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+9
  4629                           
  4630                           ;system.c: 89: USBDeviceTasks();
  4631  000032  ECD6  F003         	call	_USBDeviceTasks	;wreg free
  4632  000036  C051  FFF5         	movff	??_SYS_InterruptHigh+9,tablat
  4633  00003A  C050  FFF8         	movff	??_SYS_InterruptHigh+8,tblptru
  4634  00003E  C04F  FFF7         	movff	??_SYS_InterruptHigh+7,tblptrh
  4635  000042  C04E  FFF6         	movff	??_SYS_InterruptHigh+6,tblptrl
  4636  000046  C04D  FFF4         	movff	??_SYS_InterruptHigh+5,prodh
  4637  00004A  C04C  FFF3         	movff	??_SYS_InterruptHigh+4,prodl
  4638  00004E  C04B  FFDA         	movff	??_SYS_InterruptHigh+3,fsr2h
  4639  000052  C04A  FFD9         	movff	??_SYS_InterruptHigh+2,fsr2l
  4640  000056  C049  FFE2         	movff	??_SYS_InterruptHigh+1,fsr1h
  4641  00005A  C048  FFE1         	movff	??_SYS_InterruptHigh,fsr1l
  4642  00005E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4643  000060  0011               	retfie		f
  4644  000062                     __end_of_SYS_InterruptHigh:
  4645                           	opt stack 0
  4646                           tblptru	equ	0xFF8
  4647                           tblptrh	equ	0xFF7
  4648                           tblptrl	equ	0xFF6
  4649                           tablat	equ	0xFF5
  4650                           prodh	equ	0xFF4
  4651                           prodl	equ	0xFF3
  4652                           intcon	equ	0xFF2
  4653                           postinc0	equ	0xFEE
  4654                           wreg	equ	0xFE8
  4655                           indf1	equ	0xFE7
  4656                           postdec1	equ	0xFE5
  4657                           fsr1h	equ	0xFE2
  4658                           fsr1l	equ	0xFE1
  4659                           indf2	equ	0xFDF
  4660                           postinc2	equ	0xFDE
  4661                           postdec2	equ	0xFDD
  4662                           plusw2	equ	0xFDB
  4663                           fsr2h	equ	0xFDA
  4664                           fsr2l	equ	0xFD9
  4665                           status	equ	0xFD8
  4666                           
  4667 ;; *************** function _USBDeviceTasks *****************
  4668 ;; Defined at:
  4669 ;;		line 477 in file "picLibs/usb_device.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  i               1   29[COMRAM] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4683 ;;      Params:         0       0       0       0       0
  4684 ;;      Locals:         1       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0
  4686 ;;      Totals:         1       0       0       0       0
  4687 ;;Total ram usage:        1 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    8
  4690 ;; This function calls:
  4691 ;;		_USBCtrlEPAllowStatusStage
  4692 ;;		_USBCtrlEPService
  4693 ;;		_USBIncrement1msInternalTimers
  4694 ;;		_USBStallHandler
  4695 ;;		_USBSuspend
  4696 ;;		_USBWakeFromSuspend
  4697 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4698 ;;		i2_USBDeviceInit
  4699 ;; This function is called by:
  4700 ;;		_SYS_InterruptHigh
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text23
  4705  0007AC                     __ptext23:
  4706                           	opt stack 0
  4707  0007AC                     _USBDeviceTasks:
  4708                           	opt stack 17
  4709                           
  4710                           ;usb_device.c: 479: uint8_t i;
  4711                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4712                           
  4713                           ;incstack = 0
  4714  0007AC  0100               	movlb	0	; () banked
  4715  0007AE  0581               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4716  0007B0  E107               	bnz	i2l4391
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;usb_device.c: 591: {
  4720                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4721  0007B2  BA64               	btfsc	3940,5,c	;volatile
  4722  0007B4  D005               	goto	i2l4391
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;usb_device.c: 602: {
  4726                           ;usb_device.c: 608: {UIR = 0;};
  4727  0007B6  6A62               	clrf	3938,c	;volatile
  4728                           
  4729                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4730  0007B8  8060               	bsf	3936,0,c	;volatile
  4731                           
  4732                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4733  0007BA  8860               	bsf	3936,4,c	;volatile
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4737  0007BC  0E02               	movlw	2
  4738  0007BE  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4739  0007C0                     i2l4391:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;usb_device.c: 617: }
  4743                           ;usb_device.c: 618: }
  4744                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4745  0007C0  B462               	btfsc	3938,2,c	;volatile
  4746                           
  4747                           ; BSR set to: 0
  4748  0007C2  A460               	btfss	3936,2,c	;volatile
  4749  0007C4  D003               	goto	i2l4399
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;usb_device.c: 635: {
  4753                           ;usb_device.c: 636: (UIR &= 0xFB);
  4754  0007C6  9462               	bcf	3938,2,c	;volatile
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;usb_device.c: 640: USBWakeFromSuspend();
  4758  0007C8  EC5E  F00D         	call	_USBWakeFromSuspend	;wreg free
  4759  0007CC                     i2l4399:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;usb_device.c: 642: }
  4763                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4764  0007CC  A264               	btfss	3940,1,c	;volatile
  4765  0007CE  D002               	goto	i2l407
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;usb_device.c: 648: {
  4769                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  4770  0007D0  94A1               	bcf	4001,2,c	;volatile
  4771                           
  4772                           ;usb_device.c: 650: return;
  4773  0007D2  0012               	return	
  4774  0007D4                     i2l407:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;usb_device.c: 651: }
  4778                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4779  0007D4  B062               	btfsc	3938,0,c	;volatile
  4780                           
  4781                           ; BSR set to: 0
  4782  0007D6  A060               	btfss	3936,0,c	;volatile
  4783  0007D8  D006               	goto	i2l4413
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;usb_device.c: 664: {
  4787                           ;usb_device.c: 665: USBDeviceInit();
  4788  0007DA  EC56  F004         	call	i2_USBDeviceInit	;wreg free
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4792  0007DE  84A0               	bsf	4000,2,c	;volatile
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4796  0007E0  0E04               	movlw	4
  4797  0007E2  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;usb_device.c: 681: (UIR &= 0xFE);
  4801  0007E4  9062               	bcf	3938,0,c	;volatile
  4802  0007E6                     i2l4413:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;usb_device.c: 682: }
  4806                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4807  0007E6  B862               	btfsc	3938,4,c	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810  0007E8  A860               	btfss	3936,4,c	;volatile
  4811  0007EA  D002               	goto	i2l4419
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;usb_device.c: 688: {
  4815                           ;usb_device.c: 694: USBSuspend();
  4816  0007EC  EC4D  F00D         	call	_USBSuspend	;wreg free
  4817  0007F0                     i2l4419:
  4818                           
  4819                           ;usb_device.c: 696: }
  4820                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4821  0007F0  AC62               	btfss	3938,6,c	;volatile
  4822  0007F2  D013               	goto	i2l4437
  4823                           
  4824                           ;usb_device.c: 709: {
  4825                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4826  0007F4  AC60               	btfss	3936,6,c	;volatile
  4827  0007F6  D007               	goto	i2l4425
  4828                           
  4829                           ;usb_device.c: 712: {
  4830                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4831  0007F8  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4832  0007FA  0E73               	movlw	115
  4833  0007FC  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4834  0007FE  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4835  000800  D850               	call	PL98	;call to abstracted procedure
  4836  000802  EC84  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4837  000806                     i2l4425:
  4838                           
  4839                           ;usb_device.c: 714: }
  4840                           ;usb_device.c: 715: (UIR &= 0xBF);
  4841  000806  9C62               	bcf	3938,6,c	;volatile
  4842                           
  4843                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4844  000808  EC9B  F00D         	call	_USBIncrement1msInternalTimers	;wreg free
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4848  00080C  5021               	movf	_USBStatusStageTimeoutCounter,w,c
  4849  00080E  E001               	bz	i2l4433
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;usb_device.c: 736: {
  4853                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4854  000810  0621               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  4855  000812                     i2l4433:
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;usb_device.c: 738: }
  4859                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4860  000812  5021               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4861  000814  E102               	bnz	i2l4437
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;usb_device.c: 745: {
  4865                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4866  000816  EC69  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4867  00081A                     i2l4437:
  4868                           
  4869                           ;usb_device.c: 747: }
  4870                           ;usb_device.c: 749: }
  4871                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4872  00081A  BA62               	btfsc	3938,5,c	;volatile
  4873  00081C  AA60               	btfss	3936,5,c	;volatile
  4874  00081E  D002               	goto	i2l4443
  4875                           
  4876                           ;usb_device.c: 752: {
  4877                           ;usb_device.c: 753: USBStallHandler();
  4878  000820  EC97  F00C         	call	_USBStallHandler	;wreg free
  4879  000824                     i2l4443:
  4880                           
  4881                           ;usb_device.c: 754: }
  4882                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4883  000824  B262               	btfsc	3938,1,c	;volatile
  4884  000826  A260               	btfss	3936,1,c	;volatile
  4885  000828  D009               	goto	i2l4451
  4886                           
  4887                           ;usb_device.c: 757: {
  4888                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4889  00082A  0E7F               	movlw	127
  4890  00082C  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4891  00082E  6836               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4892  000830  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4893  000832  D837               	call	PL98	;call to abstracted procedure
  4894  000834  EC84  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4895                           
  4896                           ;usb_device.c: 759: {UEIR = 0;};
  4897  000838  010F               	movlb	15	; () banked
  4898  00083A  6B5F               	clrf	95,b	;volatile
  4899  00083C                     i2l4451:
  4900                           
  4901                           ;usb_device.c: 767: }
  4902                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4903  00083C  0E04               	movlw	4
  4904  00083E  0100               	movlb	0	; () banked
  4905  000840  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4906  000842  D002               	goto	i2l417
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;usb_device.c: 775: {
  4910                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  4911  000844  94A1               	bcf	4001,2,c	;volatile
  4912                           
  4913                           ;usb_device.c: 777: return;
  4914  000846  0C04               	retlw	4
  4915  000848                     i2l417:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;usb_device.c: 778: }
  4919                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4920  000848  A660               	btfss	3936,3,c	;volatile
  4921  00084A  D029               	goto	i2l418
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;usb_device.c: 784: {
  4925                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4926  00084C  6A47               	clrf	USBDeviceTasks@i,c
  4927  00084E                     i2l419:
  4928                           
  4929                           ;usb_device.c: 786: {
  4930                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4931  00084E  A662               	btfss	3938,3,c	;volatile
  4932  000850  D026               	goto	i2l418
  4933                           
  4934                           ;usb_device.c: 788: {
  4935                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4936  000852  CF63 F028          	movff	3939,_USTATcopy	;volatile
  4937                           
  4938                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4939  000856  3028               	rrcf	_USTATcopy,w,c	;volatile
  4940  000858  32E8               	rrcf	wreg,f,c
  4941  00085A  32E8               	rrcf	wreg,f,c
  4942  00085C  0B0F               	andlw	15
  4943  00085E  6E23               	movwf	_endpoint_number,c	;volatile
  4944                           
  4945                           ;usb_device.c: 793: (UIR &= 0xF7);
  4946  000860  9662               	bcf	3938,3,c	;volatile
  4947                           
  4948                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4949  000862  B428               	btfsc	_USTATcopy,2,c	;volatile
  4950  000864  D003               	goto	i2l4471
  4951                           
  4952                           ;usb_device.c: 799: {
  4953                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4954  000866  5023               	movf	_endpoint_number,w,c
  4955  000868  0F70               	addlw	low _ep_data_out
  4956  00086A  D002               	goto	L5
  4957  00086C                     i2l4471:
  4958                           
  4959                           ;usb_device.c: 802: else
  4960                           ;usb_device.c: 803: {
  4961                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4962  00086C  5023               	movf	_endpoint_number,w,c
  4963  00086E  0F73               	addlw	low _ep_data_in
  4964  000870                     L5:
  4965  000870  6ED9               	movwf	fsr2l,c
  4966  000872  6ADA               	clrf	fsr2h,c
  4967  000874  0100               	movlb	0	; () banked
  4968  000876  70DF               	btg	indf2,0,c
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;usb_device.c: 805: }
  4972                           ;usb_device.c: 810: if(endpoint_number == 0)
  4973  000878  5023               	movf	_endpoint_number,w,c	;volatile
  4974  00087A  E103               	bnz	i2l4477
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;usb_device.c: 811: {
  4978                           ;usb_device.c: 812: USBCtrlEPService();
  4979  00087C  ECDD  F009         	call	_USBCtrlEPService	;wreg free
  4980                           
  4981                           ;usb_device.c: 813: }
  4982  000880  D00A               	goto	i2l4479
  4983  000882                     i2l4477:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;usb_device.c: 814: else
  4987                           ;usb_device.c: 815: {
  4988                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4989  000882  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4990  000884  0E72               	movlw	114
  4991  000886  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4992  000888  0E28               	movlw	low _USTATcopy
  4993  00088A  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4994  00088C  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4995  00088E  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4996  000890  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4997  000892  EC84  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4998  000896                     i2l4479:
  4999  000896  2A47               	incf	USBDeviceTasks@i,f,c
  5000  000898  0E03               	movlw	3
  5001  00089A  6447               	cpfsgt	USBDeviceTasks@i,c
  5002  00089C  D7D8               	goto	i2l419
  5003  00089E                     i2l418:
  5004                           
  5005                           ;usb_device.c: 822: }
  5006                           ;usb_device.c: 823: }
  5007                           ;usb_device.c: 824: }
  5008                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  5009  00089E  94A1               	bcf	4001,2,c	;volatile
  5010  0008A0  0012               	return		;funcret
  5011  0008A2                     __end_of_USBDeviceTasks:
  5012                           	opt stack 0
  5013  0008A2                     PL98:
  5014                           	opt stack 17
  5015  0008A2  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5016  0008A4  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5017  0008A6  0E01               	movlw	1
  5018  0008A8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5019  0008AA  0C01               	retlw	1
  5020  0008AC                     __end_ofPL98:
  5021                           	opt stack 0
  5022                           tblptru	equ	0xFF8
  5023                           tblptrh	equ	0xFF7
  5024                           tblptrl	equ	0xFF6
  5025                           tablat	equ	0xFF5
  5026                           prodh	equ	0xFF4
  5027                           prodl	equ	0xFF3
  5028                           intcon	equ	0xFF2
  5029                           postinc0	equ	0xFEE
  5030                           wreg	equ	0xFE8
  5031                           indf1	equ	0xFE7
  5032                           postdec1	equ	0xFE5
  5033                           fsr1h	equ	0xFE2
  5034                           fsr1l	equ	0xFE1
  5035                           indf2	equ	0xFDF
  5036                           postinc2	equ	0xFDE
  5037                           postdec2	equ	0xFDD
  5038                           plusw2	equ	0xFDB
  5039                           fsr2h	equ	0xFDA
  5040                           fsr2l	equ	0xFD9
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function i2_USBDeviceInit *****************
  5044 ;; Defined at:
  5045 ;;		line 277 in file "picLibs/usb_device.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      void 
  5052 ;; Registers used:
  5053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5054 ;; Tracked objects:
  5055 ;;		On entry : 3F/0
  5056 ;;		On exit  : 3F/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5059 ;;      Params:         0       0       0       0       0
  5060 ;;      Locals:         1       0       0       0       0
  5061 ;;      Temps:          0       0       0       0       0
  5062 ;;      Totals:         1       0       0       0       0
  5063 ;;Total ram usage:        1 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    1
  5066 ;; This function calls:
  5067 ;;		i2_memset
  5068 ;; This function is called by:
  5069 ;;		_USBDeviceTasks
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text24
  5074  0008AC                     __ptext24:
  5075                           	opt stack 0
  5076  0008AC                     i2_USBDeviceInit:
  5077                           	opt stack 0
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;usb_device.c: 279: uint8_t i;
  5081                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5082                           
  5083                           ;incstack = 0
  5084                           
  5085                           ;usb_device.c: 285: ;
  5086                           ;usb_device.c: 288: {UEIR = 0;};
  5087                           
  5088                           ;usb_device.c: 291: {UIR = 0;};
  5089                           
  5090                           ;usb_device.c: 294: UEP0 = 0;
  5091  0008AC  D85C               	call	PL86	;call to abstracted procedure
  5092                           
  5093                           ; BSR set to: 15
  5094                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  5095  0008AE  EC02  F008         	call	PL54	;call to abstracted procedure
  5096  0008B2  EC38  F00D         	call	i2_memset	;wreg free
  5097                           
  5098                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5099                           
  5100                           ; BSR set to: 15
  5101  0008B6  EC75  F00C         	call	PL40	;call to abstracted procedure
  5102                           
  5103                           ; BSR set to: 15
  5104                           ;usb_device.c: 301: ;
  5105                           ;usb_device.c: 304: ;
  5106                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5107  0008BA  6A32               	clrf	i2USBDeviceInit@i,c
  5108  0008BC                     i2l4187:
  5109                           
  5110                           ;usb_device.c: 308: {
  5111                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5112  0008BC  5032               	movf	i2USBDeviceInit@i,w,c
  5113  0008BE  D847               	call	PL44	;call to abstracted procedure
  5114  0008C0  2A32               	incf	i2USBDeviceInit@i,f,c
  5115  0008C2  0E0B               	movlw	11
  5116  0008C4  6432               	cpfsgt	i2USBDeviceInit@i,c
  5117  0008C6  D7FA               	goto	i2l4187
  5118                           
  5119                           ;usb_device.c: 310: }
  5120                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5121                           
  5122                           ;usb_device.c: 316: UADDR = 0x00;
  5123                           
  5124                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5125                           
  5126                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5127                           
  5128                           ;usb_device.c: 326: {
  5129                           ;usb_device.c: 327: (UIR &= 0xF7);
  5130                           
  5131                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5132                           
  5133                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5134                           
  5135                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5136                           
  5137                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5138                           
  5139                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5140                           
  5141                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5142                           
  5143                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5144                           
  5145                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5149  0008C8  D82E               	call	PL20	;call to abstracted procedure
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5153  0008CA  6A32               	clrf	i2USBDeviceInit@i,c
  5154  0008CC                     i2l4217:
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;usb_device.c: 346: {
  5158                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5159  0008CC  5032               	movf	i2USBDeviceInit@i,w,c
  5160  0008CE  EC3C  F006         	call	PL36	;call to abstracted procedure
  5161  0008D2  6ADE               	clrf	postinc2,c
  5162  0008D4  6ADD               	clrf	postdec2,c
  5163                           
  5164                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5165  0008D6  5032               	movf	i2USBDeviceInit@i,w,c
  5166  0008D8  EC36  F006         	call	PL32	;call to abstracted procedure
  5167  0008DC  6ADE               	clrf	postinc2,c
  5168  0008DE  6ADD               	clrf	postdec2,c
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5172  0008E0  5032               	movf	i2USBDeviceInit@i,w,c
  5173  0008E2  D84C               	call	PL100	;call to abstracted procedure
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5177  0008E4  5032               	movf	i2USBDeviceInit@i,w,c
  5178  0008E6  D845               	call	PL92	;call to abstracted procedure
  5179                           
  5180                           ; BSR set to: 0
  5181  0008E8  2A32               	incf	i2USBDeviceInit@i,f,c
  5182                           
  5183                           ; BSR set to: 0
  5184  0008EA  0E02               	movlw	2
  5185  0008EC  6432               	cpfsgt	i2USBDeviceInit@i,c
  5186  0008EE  D7EE               	goto	i2l4217
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;usb_device.c: 351: }
  5190                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5191  0008F0  0E08               	movlw	8
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5195                           
  5196                           ; BSR set to: 15
  5197                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  5198                           
  5199                           ; BSR set to: 2
  5200                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5201                           
  5202                           ; BSR set to: 2
  5203                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5204                           
  5205                           ; BSR set to: 2
  5206                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5207                           
  5208                           ; BSR set to: 2
  5209                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5210                           
  5211                           ; BSR set to: 2
  5212                           ;usb_device.c: 366: USB1msTickCount = 0;
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5219                           
  5220                           ; BSR set to: 0
  5221  0008F2  D000               	goto	PL16	;call to abstracted procedure
  5222  0008F4                     __end_ofi2_USBDeviceInit:
  5223                           	opt stack 0
  5224  0008F4                     PL16:
  5225                           	opt stack 19
  5226  0008F4  6E0F               	movwf	_pBDTEntryIn,c
  5227  0008F6  0E02               	movlw	2
  5228  0008F8  6E10               	movwf	_pBDTEntryIn+1,c
  5229  0008FA  0E16               	movlw	22
  5230  0008FC  010F               	movlb	15	; () banked
  5231  0008FE  6F53               	movwf	83,b	;volatile
  5232  000900  0E02               	movlw	2
  5233  000902  0102               	movlb	2	; () banked
  5234  000904  6F03               	movwf	3,b	;volatile
  5235  000906  0E30               	movlw	48
  5236  000908  6F02               	movwf	2,b	;volatile
  5237  00090A  0E08               	movlw	8
  5238  00090C  6F01               	movwf	1,b	;volatile
  5239  00090E  0E04               	movlw	4
  5240  000910  6F00               	movwf	0,b	;volatile
  5241  000912  8F00               	bsf	0,7,b	;volatile
  5242  000914  6A29               	clrf	_USBActiveConfiguration,c	;volatile
  5243  000916  0100               	movlb	0	; () banked
  5244  000918  6B66               	clrf	_USB1msTickCount& (0+255),b	;volatile
  5245  00091A  6B67               	clrf	(_USB1msTickCount+1)& (0+255),b	;volatile
  5246  00091C  6B68               	clrf	(_USB1msTickCount+2)& (0+255),b	;volatile
  5247  00091E  6B69               	clrf	(_USB1msTickCount+3)& (0+255),b	;volatile
  5248  000920  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5249  000922  6B81               	clrf	_USBDeviceState& (0+255),b	;volatile
  5250  000924  0012               	return		;funcret
  5251  000926                     __end_ofPL16:
  5252                           	opt stack 0
  5253  000926                     PL20:
  5254                           	opt stack 19
  5255  000926  8C64               	bsf	3940,6,c	;volatile
  5256  000928  010F               	movlb	15	; () banked
  5257  00092A  6B5C               	clrf	92,b	;volatile
  5258  00092C  9864               	bcf	3940,4,c	;volatile
  5259  00092E  9C64               	bcf	3940,6,c	;volatile
  5260  000930                     l5145:
  5261  000930  9662               	bcf	3938,3,c	;volatile
  5262  000932  6A0C               	clrf	_inPipes+3,c	;volatile
  5263  000934  6A04               	clrf	_outPipes+3,c	;volatile
  5264  000936  6A05               	clrf	_outPipes+4,c	;volatile
  5265  000938  6A06               	clrf	_outPipes+5,c	;volatile
  5266  00093A  B662               	btfsc	3938,3,c	;volatile
  5267  00093C  D7F9               	goto	l5145
  5268  00093E  0E01               	movlw	1
  5269  000940  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5270  000942  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5271  000944  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5272  000946  0100               	movlb	0	; () banked
  5273  000948  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5274  00094A  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5275  00094C  0012               	return	
  5276  00094E                     __end_ofPL20:
  5277                           	opt stack 0
  5278  00094E                     PL44:
  5279                           	opt stack 19
  5280  00094E  0D04               	mullw	4
  5281  000950  0E00               	movlw	0
  5282  000952  24F3               	addwf	prodl,w,c
  5283  000954  6ED9               	movwf	fsr2l,c
  5284  000956  0E02               	movlw	2
  5285  000958  20F4               	addwfc	prodh,w,c
  5286  00095A  6EDA               	movwf	fsr2h,c
  5287  00095C  6ADE               	clrf	postinc2,c
  5288  00095E  6ADE               	clrf	postinc2,c
  5289  000960  6ADE               	clrf	postinc2,c
  5290  000962  6ADD               	clrf	postdec2,c
  5291  000964  0012               	return	
  5292  000966                     __end_ofPL44:
  5293                           	opt stack 0
  5294  000966                     PL86:
  5295                           	opt stack 19
  5296  000966  94A0               	bcf	4000,2,c	;volatile
  5297  000968  010F               	movlb	15	; () banked
  5298  00096A  6B5F               	clrf	95,b	;volatile
  5299  00096C  6A62               	clrf	3938,c	;volatile
  5300  00096E  6B53               	clrf	83,b	;volatile
  5301  000970  0012               	return	
  5302  000972                     __end_ofPL86:
  5303                           	opt stack 0
  5304  000972                     PL92:
  5305                           	opt stack 19
  5306  000972  0F70               	addlw	low _ep_data_out
  5307  000974  6ED9               	movwf	fsr2l,c
  5308  000976  6ADA               	clrf	fsr2h,c
  5309  000978  6ADF               	clrf	indf2,c
  5310  00097A  0012               	return	
  5311  00097C                     __end_ofPL92:
  5312                           	opt stack 0
  5313  00097C                     PL100:
  5314                           	opt stack 19
  5315  00097C  0F73               	addlw	low _ep_data_in
  5316  00097E  6ED9               	movwf	fsr2l,c
  5317  000980  6ADA               	clrf	fsr2h,c
  5318  000982  6ADF               	clrf	indf2,c
  5319  000984  0012               	return	
  5320  000986                     __end_ofPL100:
  5321                           	opt stack 0
  5322                           tblptru	equ	0xFF8
  5323                           tblptrh	equ	0xFF7
  5324                           tblptrl	equ	0xFF6
  5325                           tablat	equ	0xFF5
  5326                           prodh	equ	0xFF4
  5327                           prodl	equ	0xFF3
  5328                           intcon	equ	0xFF2
  5329                           postinc0	equ	0xFEE
  5330                           wreg	equ	0xFE8
  5331                           indf1	equ	0xFE7
  5332                           postdec1	equ	0xFE5
  5333                           fsr1h	equ	0xFE2
  5334                           fsr1l	equ	0xFE1
  5335                           indf2	equ	0xFDF
  5336                           postinc2	equ	0xFDE
  5337                           postdec2	equ	0xFDD
  5338                           plusw2	equ	0xFDB
  5339                           fsr2h	equ	0xFDA
  5340                           fsr2l	equ	0xFD9
  5341                           status	equ	0xFD8
  5342                           
  5343 ;; *************** function _USBWakeFromSuspend *****************
  5344 ;; Defined at:
  5345 ;;		line 2303 in file "picLibs/usb_device.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 3F/0
  5356 ;;		On exit  : 3F/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5359 ;;      Params:         0       0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0
  5362 ;;      Totals:         0       0       0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    4
  5366 ;; This function calls:
  5367 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5368 ;; This function is called by:
  5369 ;;		_USBDeviceTasks
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text25
  5374  001ABC                     __ptext25:
  5375                           	opt stack 0
  5376  001ABC                     _USBWakeFromSuspend:
  5377                           	opt stack 20
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;incstack = 0
  5384  001ABC  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5388  001ABE  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5389  001AC0  0E74               	movlw	116
  5390  001AC2  EC58  F00D         	call	PL50	;call to abstracted procedure
  5391  001AC6  EC84  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5392                           
  5393                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5394  001ACA  9264               	bcf	3940,1,c	;volatile
  5395                           
  5396                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5397  001ACC  9460               	bcf	3936,2,c	;volatile
  5398                           
  5399                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5400  001ACE  D001               	goto	i2l4113
  5401  001AD0                     i2l4111:
  5402                           
  5403                           ;usb_device.c: 2343: {
  5404                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5405  001AD0  9462               	bcf	3938,2,c	;volatile
  5406  001AD2                     i2l4113:
  5407  001AD2  B462               	btfsc	3938,2,c	;volatile
  5408  001AD4  D7FD               	goto	i2l4111
  5409                           
  5410                           ;usb_device.c: 2345: }
  5411                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5412  001AD6  0100               	movlb	0	; () banked
  5413  001AD8  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5414                           
  5415                           ; BSR set to: 0
  5416  001ADA  0012               	return		;funcret
  5417  001ADC                     __end_of_USBWakeFromSuspend:
  5418                           	opt stack 0
  5419                           tblptru	equ	0xFF8
  5420                           tblptrh	equ	0xFF7
  5421                           tblptrl	equ	0xFF6
  5422                           tablat	equ	0xFF5
  5423                           prodh	equ	0xFF4
  5424                           prodl	equ	0xFF3
  5425                           intcon	equ	0xFF2
  5426                           postinc0	equ	0xFEE
  5427                           wreg	equ	0xFE8
  5428                           indf1	equ	0xFE7
  5429                           postdec1	equ	0xFE5
  5430                           fsr1h	equ	0xFE2
  5431                           fsr1l	equ	0xFE1
  5432                           indf2	equ	0xFDF
  5433                           postinc2	equ	0xFDE
  5434                           postdec2	equ	0xFDD
  5435                           plusw2	equ	0xFDB
  5436                           fsr2h	equ	0xFDA
  5437                           fsr2l	equ	0xFD9
  5438                           status	equ	0xFD8
  5439                           
  5440 ;; *************** function _USBSuspend *****************
  5441 ;; Defined at:
  5442 ;;		line 2245 in file "picLibs/usb_device.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;		None
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1    wreg      void 
  5449 ;; Registers used:
  5450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 3F/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5456 ;;      Params:         0       0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0
  5459 ;;      Totals:         0       0       0       0       0
  5460 ;;Total ram usage:        0 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    4
  5463 ;; This function calls:
  5464 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5465 ;; This function is called by:
  5466 ;;		_USBDeviceTasks
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text26
  5471  001A9A                     __ptext26:
  5472                           	opt stack 0
  5473  001A9A                     _USBSuspend:
  5474                           	opt stack 20
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;incstack = 0
  5481  001A9A  8460               	bsf	3936,2,c	;volatile
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5485  001A9C  9862               	bcf	3938,4,c	;volatile
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5489  001A9E  8264               	bsf	3940,1,c	;volatile
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5493  001AA0  0E01               	movlw	1
  5494  001AA2  6E24               	movwf	_USBBusIsSuspended,c	;volatile
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5498  001AA4  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5502  001AA6  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5503  001AA8  0E75               	movlw	117
  5504  001AAA  D802               	call	PL50	;call to abstracted procedure
  5505  001AAC  EF84  F00A         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5506  001AB0                     __end_of_USBSuspend:
  5507                           	opt stack 0
  5508  001AB0                     PL50:
  5509                           	opt stack 20
  5510  001AB0  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5511  001AB2  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5512  001AB4  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5513  001AB6  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5514  001AB8  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5515  001ABA  0012               	return	
  5516  001ABC                     __end_ofPL50:
  5517                           	opt stack 0
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           intcon	equ	0xFF2
  5525                           postinc0	equ	0xFEE
  5526                           wreg	equ	0xFE8
  5527                           indf1	equ	0xFE7
  5528                           postdec1	equ	0xFE5
  5529                           fsr1h	equ	0xFE2
  5530                           fsr1l	equ	0xFE1
  5531                           indf2	equ	0xFDF
  5532                           postinc2	equ	0xFDE
  5533                           postdec2	equ	0xFDD
  5534                           plusw2	equ	0xFDB
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539 ;; *************** function _USBStallHandler *****************
  5540 ;; Defined at:
  5541 ;;		line 2202 in file "picLibs/usb_device.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 3F/F
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5555 ;;      Params:         0       0       0       0       0
  5556 ;;      Locals:         0       0       0       0       0
  5557 ;;      Temps:          1       0       0       0       0
  5558 ;;      Totals:         1       0       0       0       0
  5559 ;;Total ram usage:        1 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_USBDeviceTasks
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text27
  5569  00192E                     __ptext27:
  5570                           	opt stack 0
  5571  00192E                     _USBStallHandler:
  5572                           	opt stack 24
  5573                           
  5574                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5575                           
  5576                           ;incstack = 0
  5577  00192E  010F               	movlb	15	; () banked
  5578  001930  A153               	btfss	83,0,b	;volatile
  5579  001932  D010               	goto	i2l557
  5580                           
  5581                           ; BSR set to: 15
  5582                           ;usb_device.c: 2215: {
  5583                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5584  001934  D811               	call	PL38	;call to abstracted procedure
  5585  001936  0E80               	movlw	128
  5586  001938  18DE               	xorwf	postinc2,w,c
  5587  00193A  E10B               	bnz	i2l4147
  5588                           
  5589                           ; BSR set to: 15
  5590  00193C  ECDB  F008         	call	PL18	;call to abstracted procedure
  5591  001940  0E84               	movlw	132
  5592  001942  18DE               	xorwf	postinc2,w,c
  5593  001944  E106               	bnz	i2l4147
  5594                           
  5595                           ; BSR set to: 15
  5596                           ;usb_device.c: 2218: {
  5597                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5598  001946  D808               	call	PL38	;call to abstracted procedure
  5599  001948  0E0C               	movlw	12
  5600  00194A  6EDF               	movwf	indf2,c
  5601                           
  5602                           ; BSR set to: 15
  5603                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5604  00194C  D805               	call	PL38	;call to abstracted procedure
  5605  00194E  0E00               	movlw	0
  5606  001950  8EDB               	bsf	plusw2,7,c
  5607  001952                     i2l4147:
  5608                           
  5609                           ; BSR set to: 15
  5610                           ;usb_device.c: 2222: }
  5611                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5612  001952  9153               	bcf	83,0,b	;volatile
  5613  001954                     i2l557:
  5614                           
  5615                           ; BSR set to: 15
  5616                           ;usb_device.c: 2224: }
  5617                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5618  001954  9A62               	bcf	3938,5,c	;volatile
  5619                           
  5620                           ; BSR set to: 15
  5621  001956  0012               	return		;funcret
  5622  001958                     __end_of_USBStallHandler:
  5623                           	opt stack 0
  5624  001958                     PL38:
  5625                           	opt stack 24
  5626  001958  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5627  00195C  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5628  001960  0012               	return	
  5629  001962                     __end_ofPL38:
  5630                           	opt stack 0
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodh	equ	0xFF4
  5636                           prodl	equ	0xFF3
  5637                           intcon	equ	0xFF2
  5638                           postinc0	equ	0xFEE
  5639                           wreg	equ	0xFE8
  5640                           indf1	equ	0xFE7
  5641                           postdec1	equ	0xFE5
  5642                           fsr1h	equ	0xFE2
  5643                           fsr1l	equ	0xFE1
  5644                           indf2	equ	0xFDF
  5645                           postinc2	equ	0xFDE
  5646                           postdec2	equ	0xFDD
  5647                           plusw2	equ	0xFDB
  5648                           fsr2h	equ	0xFDA
  5649                           fsr2l	equ	0xFD9
  5650                           status	equ	0xFD8
  5651                           
  5652 ;; *************** function _USBIncrement1msInternalTimers *****************
  5653 ;; Defined at:
  5654 ;;		line 3025 in file "picLibs/usb_device.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;		None
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 3F/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5668 ;;      Params:         0       0       0       0       0
  5669 ;;      Locals:         0       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0
  5671 ;;      Totals:         0       0       0       0       0
  5672 ;;Total ram usage:        0 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_USBDeviceTasks
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text28
  5682  001B36                     __ptext28:
  5683                           	opt stack 0
  5684  001B36                     _USBIncrement1msInternalTimers:
  5685                           	opt stack 24
  5686                           
  5687                           ;usb_device.c: 3033: USB1msTickCount++;
  5688                           
  5689                           ; BSR set to: 15
  5690                           ;incstack = 0
  5691  001B36  0100               	movlb	0	; () banked
  5692  001B38  2B66               	incf	_USB1msTickCount& (0+255),f,b	;volatile
  5693  001B3A  0E00               	movlw	0
  5694  001B3C  2367               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  5695  001B3E  2368               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  5696  001B40  2369               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5700  001B42  5024               	movf	_USBBusIsSuspended,w,c	;volatile
  5701  001B44  A4D8               	btfss	status,2,c
  5702  001B46  0012               	return	
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;usb_device.c: 3035: {
  5706                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5707  001B48  2B7D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5711  001B4A  517D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  5712  001B4C  B4D8               	btfsc	status,2,c
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;usb_device.c: 3039: {
  5716                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5717  001B4E  697D               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5718                           
  5719                           ; BSR set to: 0
  5720  001B50  0012               	return		;funcret
  5721  001B52                     __end_of_USBIncrement1msInternalTimers:
  5722                           	opt stack 0
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon	equ	0xFF2
  5730                           postinc0	equ	0xFEE
  5731                           wreg	equ	0xFE8
  5732                           indf1	equ	0xFE7
  5733                           postdec1	equ	0xFE5
  5734                           fsr1h	equ	0xFE2
  5735                           fsr1l	equ	0xFE1
  5736                           indf2	equ	0xFDF
  5737                           postinc2	equ	0xFDE
  5738                           postdec2	equ	0xFDD
  5739                           plusw2	equ	0xFDB
  5740                           fsr2h	equ	0xFDA
  5741                           fsr2l	equ	0xFD9
  5742                           status	equ	0xFD8
  5743                           
  5744 ;; *************** function _USBCtrlEPService *****************
  5745 ;; Defined at:
  5746 ;;		line 2372 in file "picLibs/usb_device.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5755 ;; Tracked objects:
  5756 ;;		On entry : 3F/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5760 ;;      Params:         0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0
  5762 ;;      Temps:          1       0       0       0       0
  5763 ;;      Totals:         1       0       0       0       0
  5764 ;;Total ram usage:        1 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    7
  5767 ;; This function calls:
  5768 ;;		_USBCtrlTrfInHandler
  5769 ;;		_USBCtrlTrfOutHandler
  5770 ;;		_USBCtrlTrfSetupHandler
  5771 ;;		_memcpy
  5772 ;; This function is called by:
  5773 ;;		_USBDeviceTasks
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text29
  5778  0013BA                     __ptext29:
  5779                           	opt stack 0
  5780  0013BA                     _USBCtrlEPService:
  5781                           	opt stack 17
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;incstack = 0
  5788  0013BA  0E2D               	movlw	45
  5789  0013BC  6E21               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5793  0013BE  C028  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5794  0013C2  0EFD               	movlw	253
  5795  0013C4  1646               	andwf	??_USBCtrlEPService,f,c
  5796  0013C6  E12A               	bnz	i2l4167
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;usb_device.c: 2383: {
  5800                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5801  0013C8  90D8               	bcf	status,0,c
  5802  0013CA  3028               	rrcf	_USTATcopy,w,c	;volatile
  5803  0013CC  0B3F               	andlw	63
  5804  0013CE  0D04               	mullw	4
  5805  0013D0  0E00               	movlw	0
  5806  0013D2  24F3               	addwf	prodl,w,c
  5807  0013D4  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  5808  0013D6  0E02               	movlw	2
  5809  0013D8  20F4               	addwfc	prodh,w,c
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5813  0013DA  EC0C  F008         	call	PL102	;call to abstracted procedure
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5817  0013DE  0E04               	movlw	4
  5818  0013E0  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
  5819  0013E2  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5823  0013E4  ECAC  F00C         	call	PL38	;call to abstracted procedure
  5824  0013E8  30DF               	rrcf	indf2,w,c
  5825  0013EA  32E8               	rrcf	wreg,f,c
  5826  0013EC  0B0F               	andlw	15
  5827  0013EE  0A0D               	xorlw	13
  5828  0013F0  E002 EF6E  F00D    	bnz	_USBCtrlTrfOutHandler
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;usb_device.c: 2400: {
  5832                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  5833  0013F6  0E30               	movlw	48
  5834  0013F8  6E2A               	movwf	memcpy@d1,c
  5835  0013FA  0E02               	movlw	2
  5836  0013FC  6E2B               	movwf	memcpy@d1+1,c
  5837  0013FE  EE20 F002          	lfsr	2,2
  5838  001402  EC9B  F009         	call	PL72	;call to abstracted procedure
  5839  001406  CFDE F02C          	movff	postinc2,memcpy@s1
  5840  00140A  CFDD F02D          	movff	postdec2,memcpy@s1+1
  5841  00140E  6A2F               	clrf	memcpy@n+1,c
  5842  001410  0E08               	movlw	8
  5843  001412  6E2E               	movwf	memcpy@n,c
  5844  001414  EC07  F00C         	call	_memcpy	;wreg free
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5848  001418  EFBE  F00B         	goto	_USBCtrlTrfSetupHandler	;wreg free
  5849  00141C                     i2l4167:
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5853  00141C  5028               	movf	_USTATcopy,w,c	;volatile
  5854  00141E  0BFD               	andlw	253
  5855  001420  0A04               	xorlw	4
  5856  001422  B4D8               	btfsc	status,2,c
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;usb_device.c: 2417: {
  5860                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5861  001424  ECA6  F008         	call	_USBCtrlTrfInHandler	;wreg free
  5862  001428  0012               	return		;funcret
  5863  00142A                     __end_of_USBCtrlEPService:
  5864                           	opt stack 0
  5865                           tblptru	equ	0xFF8
  5866                           tblptrh	equ	0xFF7
  5867                           tblptrl	equ	0xFF6
  5868                           tablat	equ	0xFF5
  5869                           prodh	equ	0xFF4
  5870                           prodl	equ	0xFF3
  5871                           intcon	equ	0xFF2
  5872                           postinc0	equ	0xFEE
  5873                           wreg	equ	0xFE8
  5874                           indf1	equ	0xFE7
  5875                           postdec1	equ	0xFE5
  5876                           fsr1h	equ	0xFE2
  5877                           fsr1l	equ	0xFE1
  5878                           indf2	equ	0xFDF
  5879                           postinc2	equ	0xFDE
  5880                           postdec2	equ	0xFDD
  5881                           plusw2	equ	0xFDB
  5882                           fsr2h	equ	0xFDA
  5883                           fsr2l	equ	0xFD9
  5884                           status	equ	0xFD8
  5885                           
  5886 ;; *************** function _memcpy *****************
  5887 ;; Defined at:
  5888 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  d1              2    0[COMRAM] PTR void 
  5891 ;;		 -> SetupPkt(8), 
  5892 ;;  s1              2    2[COMRAM] PTR const void 
  5893 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5894 ;;  n               2    4[COMRAM] unsigned int 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5897 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5898 ;;  d               2    6[COMRAM] PTR unsigned char 
  5899 ;;		 -> SetupPkt(8), 
  5900 ;;  tmp             1   10[COMRAM] unsigned char 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  2    0[COMRAM] PTR void 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 3F/0
  5907 ;;		On exit  : 3F/0
  5908 ;;		Unchanged: 3F/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5910 ;;      Params:         6       0       0       0       0
  5911 ;;      Locals:         5       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0
  5913 ;;      Totals:        11       0       0       0       0
  5914 ;;Total ram usage:       11 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_USBCtrlEPService
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text30
  5924  00180E                     __ptext30:
  5925                           	opt stack 0
  5926  00180E                     _memcpy:
  5927                           	opt stack 23
  5928                           
  5929                           ; BSR set to: 0
  5930                           
  5931                           ;incstack = 0
  5932  00180E  C02C  F032         	movff	memcpy@s1,memcpy@s
  5933  001812  C02D  F033         	movff	memcpy@s1+1,memcpy@s+1
  5934  001816  C02A  F030         	movff	memcpy@d1,memcpy@d
  5935  00181A  C02B  F031         	movff	memcpy@d1+1,memcpy@d+1
  5936  00181E  D010               	goto	i2l3761
  5937  001820                     i2l3753:
  5938                           
  5939                           ; BSR set to: 0
  5940  001820  C032  FFD9         	movff	memcpy@s,fsr2l
  5941  001824  C033  FFDA         	movff	memcpy@s+1,fsr2h
  5942  001828  50DF               	movf	indf2,w,c
  5943  00182A  6E34               	movwf	memcpy@tmp,c
  5944                           
  5945                           ; BSR set to: 0
  5946  00182C  4A32               	infsnz	memcpy@s,f,c
  5947  00182E  2A33               	incf	memcpy@s+1,f,c
  5948                           
  5949                           ; BSR set to: 0
  5950  001830  C030  FFD9         	movff	memcpy@d,fsr2l
  5951  001834  C031  FFDA         	movff	memcpy@d+1,fsr2h
  5952  001838  C034  FFDF         	movff	memcpy@tmp,indf2
  5953                           
  5954                           ; BSR set to: 0
  5955  00183C  4A30               	infsnz	memcpy@d,f,c
  5956  00183E  2A31               	incf	memcpy@d+1,f,c
  5957  001840                     i2l3761:
  5958                           
  5959                           ; BSR set to: 0
  5960  001840  062E               	decf	memcpy@n,f,c
  5961  001842  A0D8               	btfss	status,0,c
  5962  001844  062F               	decf	memcpy@n+1,f,c
  5963  001846  282E               	incf	memcpy@n,w,c
  5964  001848  E1EB               	bnz	i2l3753
  5965  00184A  282F               	incf	memcpy@n+1,w,c
  5966  00184C  E1E9               	bnz	i2l3753
  5967                           
  5968                           ; BSR set to: 0
  5969  00184E  0012               	return		;funcret
  5970  001850                     __end_of_memcpy:
  5971                           	opt stack 0
  5972                           tblptru	equ	0xFF8
  5973                           tblptrh	equ	0xFF7
  5974                           tblptrl	equ	0xFF6
  5975                           tablat	equ	0xFF5
  5976                           prodh	equ	0xFF4
  5977                           prodl	equ	0xFF3
  5978                           intcon	equ	0xFF2
  5979                           postinc0	equ	0xFEE
  5980                           wreg	equ	0xFE8
  5981                           indf1	equ	0xFE7
  5982                           postdec1	equ	0xFE5
  5983                           fsr1h	equ	0xFE2
  5984                           fsr1l	equ	0xFE1
  5985                           indf2	equ	0xFDF
  5986                           postinc2	equ	0xFDE
  5987                           postdec2	equ	0xFDD
  5988                           plusw2	equ	0xFDB
  5989                           fsr2h	equ	0xFDA
  5990                           fsr2l	equ	0xFD9
  5991                           status	equ	0xFD8
  5992                           
  5993 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5994 ;; Defined at:
  5995 ;;		line 2465 in file "picLibs/usb_device.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;		None
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 3F/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6009 ;;      Params:         0       0       0       0       0
  6010 ;;      Locals:         0       0       0       0       0
  6011 ;;      Temps:          0       0       0       0       0
  6012 ;;      Totals:         0       0       0       0       0
  6013 ;;Total ram usage:        0 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    6
  6016 ;; This function calls:
  6017 ;;		_USBCheckStdRequest
  6018 ;;		_USBCtrlEPServiceComplete
  6019 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6020 ;; This function is called by:
  6021 ;;		_USBCtrlEPService
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text31
  6026  00177C                     __ptext31:
  6027                           	opt stack 0
  6028  00177C                     _USBCtrlTrfSetupHandler:
  6029                           	opt stack 17
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;usb_device.c: 2470: shortPacketStatus = 0;
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;incstack = 0
  6036  00177C  6A27               	clrf	_shortPacketStatus,c	;volatile
  6037                           
  6038                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  6039  00177E  6A20               	clrf	_USBDeferStatusStagePacket,c	;volatile
  6040                           
  6041                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  6042  001780  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6043                           
  6044                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  6045  001782  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6046                           
  6047                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  6048  001784  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  6049                           
  6050                           ;usb_device.c: 2475: controlTransferState = 0;
  6051  001786  6A26               	clrf	_controlTransferState,c	;volatile
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6055  001788  ECDB  F008         	call	PL18	;call to abstracted procedure
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6059  00178C  D817               	call	PL104	;call to abstracted procedure
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6063  00178E  ECDB  F008         	call	PL18	;call to abstracted procedure
  6064                           
  6065                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6066  001792  D814               	call	PL104	;call to abstracted procedure
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  6070  001794  ECA6  F006         	call	PL14	;call to abstracted procedure
  6071  001798  0E7F               	movlw	127
  6072  00179A  16DF               	andwf	indf2,f,c
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  6076  00179C  6A0C               	clrf	_inPipes+3,c	;volatile
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  6080  00179E  6A0D               	clrf	_inPipes+4,c	;volatile
  6081  0017A0  6A0E               	clrf	_inPipes+5,c	;volatile
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  6085  0017A2  6A04               	clrf	_outPipes+3,c	;volatile
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  6089  0017A4  6A05               	clrf	_outPipes+4,c	;volatile
  6090  0017A6  6A06               	clrf	_outPipes+5,c	;volatile
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;usb_device.c: 2500: USBCheckStdRequest();
  6094  0017A8  EC5E  F008         	call	_USBCheckStdRequest	;wreg free
  6095                           
  6096                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  6097  0017AC  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6098  0017AE  0E03               	movlw	3
  6099  0017B0  EC58  F00D         	call	PL50	;call to abstracted procedure
  6100  0017B4  EC84  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6101                           
  6102                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  6103  0017B8  EF12  F008         	goto	_USBCtrlEPServiceComplete	;wreg free
  6104  0017BC                     __end_of_USBCtrlTrfSetupHandler:
  6105                           	opt stack 0
  6106  0017BC                     PL104:
  6107                           	opt stack 17
  6108  0017BC  0E7F               	movlw	127
  6109  0017BE  16DF               	andwf	indf2,f,c
  6110  0017C0  0E04               	movlw	4
  6111  0017C2  1A0F               	xorwf	_pBDTEntryIn,f,c
  6112  0017C4  5010               	movf	_pBDTEntryIn+1,w,c
  6113  0017C6  0012               	return	
  6114  0017C8                     __end_ofPL104:
  6115                           	opt stack 0
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           intcon	equ	0xFF2
  6123                           postinc0	equ	0xFEE
  6124                           wreg	equ	0xFE8
  6125                           indf1	equ	0xFE7
  6126                           postdec1	equ	0xFE5
  6127                           fsr1h	equ	0xFE2
  6128                           fsr1l	equ	0xFE1
  6129                           indf2	equ	0xFDF
  6130                           postinc2	equ	0xFDE
  6131                           postdec2	equ	0xFDD
  6132                           plusw2	equ	0xFDB
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function _USBCtrlEPServiceComplete *****************
  6138 ;; Defined at:
  6139 ;;		line 1616 in file "picLibs/usb_device.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6153 ;;      Params:         0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0
  6156 ;;      Totals:         0       0       0       0       0
  6157 ;;Total ram usage:        0 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    2
  6160 ;; This function calls:
  6161 ;;		_USBCtrlEPAllowDataStage
  6162 ;;		_USBCtrlEPAllowStatusStage
  6163 ;; This function is called by:
  6164 ;;		_USBCtrlTrfSetupHandler
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text32
  6169  001024                     __ptext32:
  6170                           	opt stack 0
  6171  001024                     _USBCtrlEPServiceComplete:
  6172                           	opt stack 20
  6173                           
  6174                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6175                           
  6176                           ;incstack = 0
  6177  001024  9864               	bcf	3940,4,c	;volatile
  6178                           
  6179                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6180  001026  BE0C               	btfsc	_inPipes+3,7,c	;volatile
  6181  001028  D015               	goto	i2l481
  6182                           
  6183                           ;usb_device.c: 1629: {
  6184                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6185  00102A  AE04               	btfss	_outPipes+3,7,c	;volatile
  6186  00102C  D00A               	goto	i2l3561
  6187                           
  6188                           ;usb_device.c: 1631: {
  6189                           ;usb_device.c: 1632: controlTransferState = 2;
  6190  00102E  0E02               	movlw	2
  6191  001030  6E26               	movwf	_controlTransferState,c	;volatile
  6192                           
  6193                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6194  001032  0100               	movlb	0	; () banked
  6195  001034  517E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  6196  001036  E102               	bnz	i2l3557
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;usb_device.c: 1644: {
  6200                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6201  001038  EC1B  F00B         	call	_USBCtrlEPAllowDataStage	;wreg free
  6202  00103C                     i2l3557:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;usb_device.c: 1646: }
  6206                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6207  00103C  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6211  00103E  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6212                           
  6213                           ;usb_device.c: 1652: }
  6214  001040  0012               	return	
  6215  001042                     i2l3561:
  6216                           
  6217                           ;usb_device.c: 1653: else
  6218                           ;usb_device.c: 1654: {
  6219                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6220                           
  6221                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6222                           
  6223                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6224  001042  D825               	call	PL2	;call to abstracted procedure
  6225  001044  0E0C               	movlw	12
  6226                           
  6227                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6228  001046  EC9E  F006         	call	PL12	;call to abstracted procedure
  6229                           
  6230                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6231  00104A  ECDB  F008         	call	PL18	;call to abstracted procedure
  6232  00104E  0E04               	movlw	4
  6233                           
  6234                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6235  001050  EFD3  F008         	goto	PL10	;call to abstracted procedure
  6236  001054                     i2l481:
  6237                           
  6238                           ;usb_device.c: 1667: else
  6239                           ;usb_device.c: 1668: {
  6240                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6241  001054  0102               	movlb	2	; () banked
  6242  001056  AF30               	btfss	48,7,b	;volatile
  6243  001058  D00D               	goto	i2l3581
  6244                           
  6245                           ; BSR set to: 2
  6246                           ;usb_device.c: 1670: {
  6247                           ;usb_device.c: 1671: controlTransferState = 1;
  6248  00105A  0E01               	movlw	1
  6249  00105C  6E26               	movwf	_controlTransferState,c	;volatile
  6250                           
  6251                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6252  00105E  501D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  6253  001060  E102               	bnz	i2l3573
  6254                           
  6255                           ; BSR set to: 2
  6256                           ;usb_device.c: 1686: {
  6257                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6258  001062  EC1B  F00B         	call	_USBCtrlEPAllowDataStage	;wreg free
  6259  001066                     i2l3573:
  6260                           
  6261                           ;usb_device.c: 1688: }
  6262                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6263  001066  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6264                           
  6265                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6266  001068  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6267                           
  6268                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6269  00106A  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6270  00106C  A4D8               	btfss	status,2,c
  6271  00106E  0012               	return	
  6272                           
  6273                           ;usb_device.c: 1713: {
  6274                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6275  001070  EF69  F009         	goto	_USBCtrlEPAllowStatusStage	;wreg free
  6276  001074                     i2l3581:
  6277                           
  6278                           ; BSR set to: 2
  6279                           ;usb_device.c: 1717: else
  6280                           ;usb_device.c: 1718: {
  6281                           ;usb_device.c: 1729: controlTransferState = 2;
  6282  001074  0E02               	movlw	2
  6283  001076  6E26               	movwf	_controlTransferState,c	;volatile
  6284                           
  6285                           ; BSR set to: 2
  6286                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6287                           
  6288                           ; BSR set to: 2
  6289                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6290                           
  6291                           ; BSR set to: 2
  6292                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6293  001078  D80A               	call	PL2	;call to abstracted procedure
  6294  00107A  0E04               	movlw	4
  6295                           
  6296                           ; BSR set to: 2
  6297                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6298  00107C  EC9E  F006         	call	PL12	;call to abstracted procedure
  6299                           
  6300                           ; BSR set to: 2
  6301                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6302  001080  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6303                           
  6304                           ; BSR set to: 2
  6305                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6306  001082  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6307                           
  6308                           ; BSR set to: 2
  6309                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6310  001084  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6311  001086  E102 EF69  F009    	bz	_USBCtrlEPAllowStatusStage
  6312  00108C  0012               	return	
  6313  00108E                     __end_of_USBCtrlEPServiceComplete:
  6314                           	opt stack 0
  6315  00108E                     PL2:
  6316                           	opt stack 20
  6317  00108E  EE20 F001          	lfsr	2,1
  6318  001092  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6319  001094  26D9               	addwf	fsr2l,f,c
  6320  001096  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6321  001098  22DA               	addwfc	fsr2h,f,c
  6322  00109A  0E08               	movlw	8
  6323  00109C  6EDF               	movwf	indf2,c
  6324  00109E  EE20 F002          	lfsr	2,2
  6325  0010A2  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6326  0010A4  26D9               	addwf	fsr2l,f,c
  6327  0010A6  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6328  0010A8  22DA               	addwfc	fsr2h,f,c
  6329  0010AA  0E30               	movlw	48
  6330  0010AC  6EDE               	movwf	postinc2,c
  6331  0010AE  0E02               	movlw	2
  6332  0010B0  6EDD               	movwf	postdec2,c
  6333  0010B2  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6334  0010B6  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6335  0010BA  0C02               	retlw	2
  6336  0010BC                     __end_ofPL2:
  6337                           	opt stack 0
  6338                           tblptru	equ	0xFF8
  6339                           tblptrh	equ	0xFF7
  6340                           tblptrl	equ	0xFF6
  6341                           tablat	equ	0xFF5
  6342                           prodh	equ	0xFF4
  6343                           prodl	equ	0xFF3
  6344                           intcon	equ	0xFF2
  6345                           postinc0	equ	0xFEE
  6346                           wreg	equ	0xFE8
  6347                           indf1	equ	0xFE7
  6348                           postdec1	equ	0xFE5
  6349                           fsr1h	equ	0xFE2
  6350                           fsr1l	equ	0xFE1
  6351                           indf2	equ	0xFDF
  6352                           postinc2	equ	0xFDE
  6353                           postdec2	equ	0xFDD
  6354                           plusw2	equ	0xFDB
  6355                           fsr2h	equ	0xFDA
  6356                           fsr2l	equ	0xFD9
  6357                           status	equ	0xFD8
  6358                           
  6359 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6360 ;; Defined at:
  6361 ;;		line 1488 in file "picLibs/usb_device.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;		None
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6370 ;; Tracked objects:
  6371 ;;		On entry : 3D/0
  6372 ;;		On exit  : 3F/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6375 ;;      Params:         0       0       0       0       0
  6376 ;;      Locals:         0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0
  6378 ;;      Totals:         0       0       0       0       0
  6379 ;;Total ram usage:        0 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    1
  6382 ;; This function calls:
  6383 ;;		_USBCtrlTrfTxService
  6384 ;; This function is called by:
  6385 ;;		_USBCtrlEPServiceComplete
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text33
  6390  001636                     __ptext33:
  6391                           	opt stack 0
  6392  001636                     _USBCtrlEPAllowDataStage:
  6393                           	opt stack 20
  6394                           
  6395                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6396                           
  6397                           ;incstack = 0
  6398  001636  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6399                           
  6400                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6401  001638  0100               	movlb	0	; () banked
  6402  00163A  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6406  00163C  0E02               	movlw	2
  6407  00163E  1826               	xorwf	_controlTransferState,w,c	;volatile
  6408  001640  E112               	bnz	i2l3359
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;usb_device.c: 1494: {
  6412                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6413  001642  EE20 F001          	lfsr	2,1
  6414  001646  EC94  F006         	call	PL4	;call to abstracted procedure
  6415                           
  6416                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  6417  00164A  EC99  F006         	call	PL6	;call to abstracted procedure
  6418  00164E  EC94  F006         	call	PL4	;call to abstracted procedure
  6419  001652  0E38               	movlw	56
  6420  001654  6EDE               	movwf	postinc2,c
  6421  001656  0E02               	movlw	2
  6422  001658  6EDD               	movwf	postdec2,c
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6426  00165A  ECA6  F006         	call	PL14	;call to abstracted procedure
  6427  00165E  0E48               	movlw	72
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6431  001660  EC9E  F006         	call	PL12	;call to abstracted procedure
  6432                           
  6433                           ;usb_device.c: 1500: }
  6434  001664  0C00               	retlw	0
  6435  001666                     i2l3359:
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;usb_device.c: 1501: else
  6439                           ;usb_device.c: 1502: {
  6440                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6441  001666  500D               	movf	_inPipes+4,w,c	;volatile
  6442  001668  0102               	movlb	2	; () banked
  6443  00166A  5D36               	subwf	54,w,b	;volatile
  6444  00166C  500E               	movf	_inPipes+5,w,c	;volatile
  6445  00166E  5937               	subwfb	55,w,b	;volatile
  6446  001670  E204               	bc	i2l3363
  6447                           
  6448                           ; BSR set to: 2
  6449                           ;usb_device.c: 1506: {
  6450                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6451  001672  C236 F00D          	movff	566,_inPipes+4	;volatile
  6452  001676  C237 F00E          	movff	567,_inPipes+5	;volatile
  6453  00167A                     i2l3363:
  6454                           
  6455                           ; BSR set to: 2
  6456                           ;usb_device.c: 1508: }
  6457                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6458  00167A  EC6C  F007         	call	_USBCtrlTrfTxService	;wreg free
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  6462  00167E  ECE0  F008         	call	PL46	;call to abstracted procedure
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6466  001682  ECDB  F008         	call	PL18	;call to abstracted procedure
  6467  001686  0E48               	movlw	72
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6471                           
  6472                           ; BSR set to: 0
  6473  001688  EFD3  F008         	goto	PL10	;call to abstracted procedure
  6474  00168C                     __end_of_USBCtrlEPAllowDataStage:
  6475                           	opt stack 0
  6476                           tblptru	equ	0xFF8
  6477                           tblptrh	equ	0xFF7
  6478                           tblptrl	equ	0xFF6
  6479                           tablat	equ	0xFF5
  6480                           prodh	equ	0xFF4
  6481                           prodl	equ	0xFF3
  6482                           intcon	equ	0xFF2
  6483                           postinc0	equ	0xFEE
  6484                           wreg	equ	0xFE8
  6485                           indf1	equ	0xFE7
  6486                           postdec1	equ	0xFE5
  6487                           fsr1h	equ	0xFE2
  6488                           fsr1l	equ	0xFE1
  6489                           indf2	equ	0xFDF
  6490                           postinc2	equ	0xFDE
  6491                           postdec2	equ	0xFDD
  6492                           plusw2	equ	0xFDB
  6493                           fsr2h	equ	0xFDA
  6494                           fsr2l	equ	0xFD9
  6495                           status	equ	0xFD8
  6496                           
  6497 ;; *************** function _USBCheckStdRequest *****************
  6498 ;; Defined at:
  6499 ;;		line 2686 in file "picLibs/usb_device.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;		None
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      void 
  6506 ;; Registers used:
  6507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 3F/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6513 ;;      Params:         0       0       0       0       0
  6514 ;;      Locals:         0       0       0       0       0
  6515 ;;      Temps:          1       0       0       0       0
  6516 ;;      Totals:         1       0       0       0       0
  6517 ;;Total ram usage:        1 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:    5
  6520 ;; This function calls:
  6521 ;;		_USBStdFeatureReqHandler
  6522 ;;		_USBStdGetDscHandler
  6523 ;;		_USBStdGetStatusHandler
  6524 ;;		_USBStdSetCfgHandler
  6525 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6526 ;; This function is called by:
  6527 ;;		_USBCtrlTrfSetupHandler
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text34
  6532  0010BC                     __ptext34:
  6533                           	opt stack 0
  6534  0010BC                     _USBCheckStdRequest:
  6535                           	opt stack 17
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;incstack = 0
  6542  0010BC  0102               	movlb	2	; () banked
  6543  0010BE  3930               	swapf	48,w,b	;volatile
  6544  0010C0  32E8               	rrcf	wreg,f,c
  6545  0010C2  0B03               	andlw	3
  6546  0010C4  E01D               	bz	i2l3679
  6547  0010C6  0012               	return	
  6548  0010C8                     i2l606:
  6549                           
  6550                           ; BSR set to: 2
  6551                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6552  0010C8  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6553                           
  6554                           ; BSR set to: 2
  6555                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6556  0010CA  0E08               	movlw	8
  6557  0010CC  0100               	movlb	0	; () banked
  6558  0010CE  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6559                           
  6560                           ;usb_device.c: 2696: break;
  6561  0010D0  0C08               	retlw	8
  6562  0010D2                     i2l3653:
  6563                           
  6564                           ; BSR set to: 2
  6565                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6566  0010D2  0E29               	movlw	low _USBActiveConfiguration
  6567  0010D4  6E09               	movwf	_inPipes,c	;volatile
  6568                           
  6569                           ; BSR set to: 2
  6570                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6571                           
  6572                           ; BSR set to: 2
  6573                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6574                           
  6575                           ; BSR set to: 2
  6576                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6577                           
  6578                           ;usb_device.c: 2708: break;
  6579  0010D6  D034               	goto	PL80	;call to abstracted procedure
  6580  0010D8                     i2l3665:
  6581                           
  6582                           ; BSR set to: 2
  6583                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6584  0010D8  5134               	movf	52,w,b	;volatile
  6585  0010DA  0FAF               	addlw	low _USBAlternateInterface
  6586  0010DC  6E45               	movwf	??_USBCheckStdRequest& (0+255),c
  6587  0010DE  C045  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  6588                           
  6589                           ; BSR set to: 2
  6590                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6591                           
  6592                           ; BSR set to: 2
  6593                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6594                           
  6595                           ; BSR set to: 2
  6596                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6597                           
  6598                           ;usb_device.c: 2721: break;
  6599  0010E2  D02E               	goto	PL80	;call to abstracted procedure
  6600  0010E4                     i2l615:
  6601                           
  6602                           ; BSR set to: 2
  6603                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6604  0010E4  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6605                           
  6606                           ; BSR set to: 2
  6607                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6608  0010E6  5134               	movf	52,w,b	;volatile
  6609  0010E8  0FAF               	addlw	low _USBAlternateInterface
  6610  0010EA  6ED9               	movwf	fsr2l,c
  6611  0010EC  6ADA               	clrf	fsr2h,c
  6612  0010EE  C232 FFDF          	movff	562,indf2	;volatile
  6613                           
  6614                           ;usb_device.c: 2725: break;
  6615  0010F2  0012               	return	
  6616  0010F4                     i2l3675:
  6617                           
  6618                           ; BSR set to: 2
  6619                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6620  0010F4  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6621  0010F6  0E02               	movlw	2
  6622  0010F8  EC58  F00D         	call	PL50	;call to abstracted procedure
  6623  0010FC  EF84  F00A         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6624  001100                     i2l3679:
  6625                           
  6626                           ; BSR set to: 2
  6627  001100  5131               	movf	49,w,b	;volatile
  6628                           
  6629                           ; Switch size 1, requested type "space"
  6630                           ; Number of cases is 11, Range of values is 0 to 12
  6631                           ; switch strategies available:
  6632                           ; Name         Instructions Cycles
  6633                           ; simple_byte           34    18 (average)
  6634                           ;	Chosen strategy is simple_byte
  6635  001102  E102 EFA4  F009    	bz	_USBStdGetStatusHandler
  6636  001108  0A01               	xorlw	1	; case 1
  6637  00110A  E102 EF0A  F003    	bz	_USBStdFeatureReqHandler
  6638  001110  0A02               	xorlw	2	; case 3
  6639  001112  E102 EF0A  F003    	bz	_USBStdFeatureReqHandler
  6640  001118  0A06               	xorlw	6	; case 5
  6641  00111A  E0D6               	bz	i2l606
  6642  00111C  0A03               	xorlw	3	; case 6
  6643  00111E  E102 EFC3  F004    	bz	_USBStdGetDscHandler
  6644  001124  0A01               	xorlw	1	; case 7
  6645  001126  E0E6               	bz	i2l3675
  6646  001128  0A0F               	xorlw	15	; case 8
  6647  00112A  E0D3               	bz	i2l3653
  6648  00112C  0A01               	xorlw	1	; case 9
  6649  00112E  E102 EFC0  F007    	bz	_USBStdSetCfgHandler
  6650  001134  0A03               	xorlw	3	; case 10
  6651  001136  E0D0               	bz	i2l3665
  6652  001138  0A01               	xorlw	1	; case 11
  6653  00113A  E0D4               	bz	i2l615
  6654  00113C  0A07               	xorlw	7	; case 12
  6655  00113E  0012               	return	
  6656  001140                     __end_of_USBCheckStdRequest:
  6657                           	opt stack 0
  6658  001140                     PL80:
  6659                           	opt stack 17
  6660  001140  6A0A               	clrf	_inPipes+1,c	;volatile
  6661  001142  800C               	bsf	_inPipes+3,0,c	;volatile
  6662  001144  0E01               	movlw	1
  6663  001146  6E0D               	movwf	_inPipes+4,c	;volatile
  6664  001148  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6665  00114A  0C01               	retlw	1
  6666  00114C                     __end_ofPL80:
  6667                           	opt stack 0
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           prodh	equ	0xFF4
  6673                           prodl	equ	0xFF3
  6674                           intcon	equ	0xFF2
  6675                           postinc0	equ	0xFEE
  6676                           wreg	equ	0xFE8
  6677                           indf1	equ	0xFE7
  6678                           postdec1	equ	0xFE5
  6679                           fsr1h	equ	0xFE2
  6680                           fsr1l	equ	0xFE1
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           plusw2	equ	0xFDB
  6685                           fsr2h	equ	0xFDA
  6686                           fsr2l	equ	0xFD9
  6687                           status	equ	0xFD8
  6688                           
  6689 ;; *************** function _USBStdSetCfgHandler *****************
  6690 ;; Defined at:
  6691 ;;		line 1968 in file "picLibs/usb_device.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;		None
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  i               1   20[COMRAM] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      void 
  6698 ;; Registers used:
  6699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 3D/2
  6702 ;;		On exit  : 3F/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6705 ;;      Params:         0       0       0       0       0
  6706 ;;      Locals:         1       0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0
  6708 ;;      Totals:         1       0       0       0       0
  6709 ;;Total ram usage:        1 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    4
  6712 ;; This function calls:
  6713 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6714 ;;		i2_memset
  6715 ;; This function is called by:
  6716 ;;		_USBCheckStdRequest
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text35
  6721  000F80                     __ptext35:
  6722                           	opt stack 0
  6723  000F80                     _USBStdSetCfgHandler:
  6724                           	opt stack 17
  6725                           
  6726                           ;usb_device.c: 1970: uint8_t i;
  6727                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6728                           
  6729                           ;incstack = 0
  6730  000F80  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6731                           
  6732                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  6733  000F82  D840               	call	PL54	;call to abstracted procedure
  6734  000F84  EC38  F00D         	call	i2_memset	;wreg free
  6735                           
  6736                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6737  000F88  6A2A               	clrf	i2memset@p1,c
  6738  000F8A  0E02               	movlw	2
  6739  000F8C  6E2B               	movwf	i2memset@p1+1,c
  6740  000F8E  6A2D               	clrf	i2memset@c+1,c
  6741  000F90  6A2C               	clrf	i2memset@c,c
  6742  000F92  6A2F               	clrf	i2memset@n+1,c
  6743  000F94  0E30               	movlw	48
  6744  000F96  6E2E               	movwf	i2memset@n,c
  6745  000F98  EC38  F00D         	call	i2_memset	;wreg free
  6746                           
  6747                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6748  000F9C  8C64               	bsf	3940,6,c	;volatile
  6749                           
  6750                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6751  000F9E  6A3E               	clrf	USBStdSetCfgHandler@i,c
  6752  000FA0                     i2l3383:
  6753                           
  6754                           ;usb_device.c: 1988: {
  6755                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6756  000FA0  503E               	movf	USBStdSetCfgHandler@i,w,c
  6757  000FA2  ECBE  F004         	call	PL100	;call to abstracted procedure
  6758                           
  6759                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6760  000FA6  503E               	movf	USBStdSetCfgHandler@i,w,c
  6761  000FA8  ECB9  F004         	call	PL92	;call to abstracted procedure
  6762  000FAC  2A3E               	incf	USBStdSetCfgHandler@i,f,c
  6763  000FAE  0E02               	movlw	2
  6764  000FB0  643E               	cpfsgt	USBStdSetCfgHandler@i,c
  6765  000FB2  D7F6               	goto	i2l3383
  6766                           
  6767                           ;usb_device.c: 1991: }
  6768                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6769  000FB4  0EAF               	movlw	low _USBAlternateInterface
  6770  000FB6  6E2A               	movwf	i2memset@p1,c
  6771  000FB8  6A2B               	clrf	i2memset@p1+1,c
  6772  000FBA  6A2D               	clrf	i2memset@c+1,c
  6773  000FBC  6A2C               	clrf	i2memset@c,c
  6774  000FBE  6A2F               	clrf	i2memset@n+1,c
  6775  000FC0  0E02               	movlw	2
  6776  000FC2  6E2E               	movwf	i2memset@n,c
  6777  000FC4  EC38  F00D         	call	i2_memset	;wreg free
  6778                           
  6779                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6780  000FC8  9C64               	bcf	3940,6,c	;volatile
  6781                           
  6782                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6783  000FCA  0E08               	movlw	8
  6784  000FCC  6E0F               	movwf	_pBDTEntryIn,c
  6785  000FCE  0E02               	movlw	2
  6786  000FD0  6E10               	movwf	_pBDTEntryIn+1,c
  6787                           
  6788                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6789  000FD2  0E00               	movlw	0
  6790  000FD4  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  6791  000FD6  0E02               	movlw	2
  6792                           
  6793                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6794  000FD8  D81F               	call	PL102	;call to abstracted procedure
  6795                           
  6796                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6797  000FDA  C232 F029          	movff	562,_USBActiveConfiguration	;volatile
  6798                           
  6799                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6800  000FDE  5029               	movf	_USBActiveConfiguration,w,c	;volatile
  6801  000FE0  E104               	bnz	i2l3405
  6802                           
  6803                           ;usb_device.c: 2010: {
  6804                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6805  000FE2  0E10               	movlw	16
  6806  000FE4  0100               	movlb	0	; () banked
  6807  000FE6  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6808                           
  6809                           ;usb_device.c: 2013: }
  6810  000FE8  0C10               	retlw	16
  6811  000FEA                     i2l3405:
  6812                           
  6813                           ;usb_device.c: 2014: else
  6814                           ;usb_device.c: 2015: {
  6815                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6816  000FEA  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6817  000FEC  0E01               	movlw	1
  6818  000FEE  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6819  000FF0  0E29               	movlw	low _USBActiveConfiguration
  6820  000FF2  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6821  000FF4  EC51  F004         	call	PL98	;call to abstracted procedure
  6822  000FF8  EC84  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6823                           
  6824                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6825  000FFC  0E20               	movlw	32
  6826  000FFE  0100               	movlb	0	; () banked
  6827  001000  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6828                           
  6829                           ; BSR set to: 0
  6830  001002  0C20               	retlw	32	;funcret
  6831  001004                     __end_of_USBStdSetCfgHandler:
  6832                           	opt stack 0
  6833  001004                     PL54:
  6834                           	opt stack 23
  6835  001004  0E54               	movlw	84
  6836  001006  6E2A               	movwf	i2memset@p1,c
  6837  001008  0E0F               	movlw	15
  6838  00100A  6E2B               	movwf	i2memset@p1+1,c
  6839  00100C  6A2D               	clrf	i2memset@c+1,c
  6840  00100E  6A2C               	clrf	i2memset@c,c
  6841  001010  6A2F               	clrf	i2memset@n+1,c
  6842  001012  0E02               	movlw	2
  6843  001014  6E2E               	movwf	i2memset@n,c
  6844  001016  0C02               	retlw	2
  6845  001018                     __end_ofPL54:
  6846                           	opt stack 0
  6847  001018                     PL102:
  6848                           	opt stack 17
  6849  001018  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6850  00101A  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6851  00101E  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6852  001022  0012               	return	
  6853  001024                     __end_ofPL102:
  6854                           	opt stack 0
  6855                           tblptru	equ	0xFF8
  6856                           tblptrh	equ	0xFF7
  6857                           tblptrl	equ	0xFF6
  6858                           tablat	equ	0xFF5
  6859                           prodh	equ	0xFF4
  6860                           prodl	equ	0xFF3
  6861                           intcon	equ	0xFF2
  6862                           postinc0	equ	0xFEE
  6863                           wreg	equ	0xFE8
  6864                           indf1	equ	0xFE7
  6865                           postdec1	equ	0xFE5
  6866                           fsr1h	equ	0xFE2
  6867                           fsr1l	equ	0xFE1
  6868                           indf2	equ	0xFDF
  6869                           postinc2	equ	0xFDE
  6870                           postdec2	equ	0xFDD
  6871                           plusw2	equ	0xFDB
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function i2_memset *****************
  6877 ;; Defined at:
  6878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  p1              2    0[COMRAM] PTR void 
  6881 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6882 ;;  c               2    2[COMRAM] int 
  6883 ;;  n               2    4[COMRAM] unsigned int 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  memset          2    6[COMRAM] PTR unsigned char 
  6886 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  2    0[COMRAM] PTR void 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/F
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6896 ;;      Params:         6       0       0       0       0
  6897 ;;      Locals:         2       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0
  6899 ;;      Totals:         8       0       0       0       0
  6900 ;;Total ram usage:        8 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_USBStdSetCfgHandler
  6906 ;;		i2_USBDeviceInit
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text36
  6911  001A70                     __ptext36:
  6912                           	opt stack 0
  6913  001A70                     i2_memset:
  6914                           	opt stack 23
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;incstack = 0
  6918  001A70  C02A  F030         	movff	i2memset@p1,i2memset@p
  6919  001A74  C02B  F031         	movff	i2memset@p1+1,i2memset@p+1
  6920  001A78  D008               	goto	i2l3315
  6921  001A7A                     i2l3311:
  6922  001A7A  C030  FFD9         	movff	i2memset@p,fsr2l
  6923  001A7E  C031  FFDA         	movff	i2memset@p+1,fsr2h
  6924  001A82  C02C  FFDF         	movff	i2memset@c,indf2
  6925  001A86  4A30               	infsnz	i2memset@p,f,c
  6926  001A88  2A31               	incf	i2memset@p+1,f,c
  6927  001A8A                     i2l3315:
  6928  001A8A  062E               	decf	i2memset@n,f,c
  6929  001A8C  A0D8               	btfss	status,0,c
  6930  001A8E  062F               	decf	i2memset@n+1,f,c
  6931  001A90  282E               	incf	i2memset@n,w,c
  6932  001A92  E1F3               	bnz	i2l3311
  6933  001A94  282F               	incf	i2memset@n+1,w,c
  6934  001A96  E1F1               	bnz	i2l3311
  6935  001A98  0012               	return		;funcret
  6936  001A9A                     __end_ofi2_memset:
  6937                           	opt stack 0
  6938                           tblptru	equ	0xFF8
  6939                           tblptrh	equ	0xFF7
  6940                           tblptrl	equ	0xFF6
  6941                           tablat	equ	0xFF5
  6942                           prodh	equ	0xFF4
  6943                           prodl	equ	0xFF3
  6944                           intcon	equ	0xFF2
  6945                           postinc0	equ	0xFEE
  6946                           wreg	equ	0xFE8
  6947                           indf1	equ	0xFE7
  6948                           postdec1	equ	0xFE5
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           indf2	equ	0xFDF
  6952                           postinc2	equ	0xFDE
  6953                           postdec2	equ	0xFDD
  6954                           plusw2	equ	0xFDB
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function _USBStdGetStatusHandler *****************
  6960 ;; Defined at:
  6961 ;;		line 2129 in file "picLibs/usb_device.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  p               2    0[COMRAM] PTR struct __BDT
  6966 ;;		 -> RAM(767), NULL(0), BDT(48), 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      void 
  6969 ;; Registers used:
  6970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6971 ;; Tracked objects:
  6972 ;;		On entry : 3D/2
  6973 ;;		On exit  : 3F/2
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6976 ;;      Params:         0       0       0       0       0
  6977 ;;      Locals:         2       0       0       0       0
  6978 ;;      Temps:          0       0       0       0       0
  6979 ;;      Totals:         2       0       0       0       0
  6980 ;;Total ram usage:        2 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_USBCheckStdRequest
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text37
  6990  001348                     __ptext37:
  6991                           	opt stack 0
  6992  001348                     _USBStdGetStatusHandler:
  6993                           	opt stack 21
  6994                           
  6995                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6996                           
  6997                           ;incstack = 0
  6998  001348  0102               	movlb	2	; () banked
  6999  00134A  6B38               	clrf	56,b	;volatile
  7000                           
  7001                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7002  00134C  6B39               	clrf	57,b	;volatile
  7003                           
  7004                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7005  00134E  D020               	goto	i2l3455
  7006  001350                     i2l544:
  7007                           
  7008                           ; BSR set to: 2
  7009                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7010  001350  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7011                           
  7012                           ; BSR set to: 2
  7013                           ;usb_device.c: 2145: }
  7014                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7015                           
  7016                           ;usb_device.c: 2142: if(0 == 1)
  7017  001352  0425               	decf	_RemoteWakeup,w,c	;volatile
  7018  001354  E124               	bnz	i2l547
  7019                           
  7020                           ; BSR set to: 2
  7021                           ;usb_device.c: 2148: {
  7022                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7023  001356  8338               	bsf	56,1,b	;volatile
  7024  001358  D022               	goto	i2l547
  7025  00135A                     i2l548:
  7026                           
  7027                           ; BSR set to: 2
  7028                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7029  00135A  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7030                           
  7031                           ;usb_device.c: 2154: break;
  7032  00135C  D020               	goto	i2l547
  7033  00135E                     i2l549:
  7034                           
  7035                           ; BSR set to: 2
  7036                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7037  00135E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7038                           
  7039                           ;usb_device.c: 2160: {
  7040                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7041                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7042  001360  BF34               	btfsc	52,7,b	;volatile
  7043  001362  D004               	goto	i2l3445
  7044                           
  7045                           ; BSR set to: 2
  7046                           ;usb_device.c: 2164: {
  7047                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7048  001364  ECD1  F003         	call	PL70	;call to abstracted procedure
  7049  001368  0F60               	addlw	low _pBDTEntryOut
  7050  00136A  D003               	goto	L6
  7051  00136C                     i2l3445:
  7052                           
  7053                           ; BSR set to: 2
  7054                           ;usb_device.c: 2167: else
  7055                           ;usb_device.c: 2168: {
  7056                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7057  00136C  ECD1  F003         	call	PL70	;call to abstracted procedure
  7058  001370  0F0F               	addlw	low _pBDTEntryIn
  7059  001372                     L6:
  7060  001372  6ED9               	movwf	fsr2l,c
  7061  001374  6ADA               	clrf	fsr2h,c
  7062  001376  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  7063  00137A  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  7064                           
  7065                           ; BSR set to: 2
  7066                           ;usb_device.c: 2170: }
  7067                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7068  00137E  D818               	call	PL108	;call to abstracted procedure
  7069  001380  AEDF               	btfss	indf2,7,c
  7070  001382  D00D               	goto	i2l547
  7071                           
  7072                           ; BSR set to: 2
  7073  001384  D815               	call	PL108	;call to abstracted procedure
  7074  001386  A4DF               	btfss	indf2,2,c
  7075  001388  D00A               	goto	i2l547
  7076                           
  7077                           ; BSR set to: 2
  7078                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7079  00138A  0E01               	movlw	1
  7080  00138C  6F38               	movwf	56,b	;volatile
  7081  00138E  D007               	goto	i2l547
  7082  001390                     i2l3455:
  7083                           
  7084                           ; BSR set to: 2
  7085  001390  5130               	movf	48,w,b	;volatile
  7086  001392  0B1F               	andlw	31
  7087                           
  7088                           ; Switch size 1, requested type "space"
  7089                           ; Number of cases is 3, Range of values is 0 to 2
  7090                           ; switch strategies available:
  7091                           ; Name         Instructions Cycles
  7092                           ; simple_byte           10     6 (average)
  7093                           ;	Chosen strategy is simple_byte
  7094  001394  E0DD               	bz	i2l544
  7095  001396  0A01               	xorlw	1	; case 1
  7096  001398  E0E0               	bz	i2l548
  7097  00139A  0A03               	xorlw	3	; case 2
  7098  00139C  E0E0               	bz	i2l549
  7099  00139E                     i2l547:
  7100                           
  7101                           ; BSR set to: 2
  7102                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7103  00139E  AE0C               	btfss	_inPipes+3,7,c	;volatile
  7104  0013A0  0012               	return	
  7105                           
  7106                           ; BSR set to: 2
  7107                           ;usb_device.c: 2179: {
  7108                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7109  0013A2  0E38               	movlw	56
  7110  0013A4  6E09               	movwf	_inPipes,c	;volatile
  7111  0013A6  0E02               	movlw	2
  7112  0013A8  6E0A               	movwf	_inPipes+1,c	;volatile
  7113                           
  7114                           ; BSR set to: 2
  7115                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7116  0013AA  800C               	bsf	_inPipes+3,0,c	;volatile
  7117                           
  7118                           ; BSR set to: 2
  7119                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7120  0013AC  6E0D               	movwf	_inPipes+4,c	;volatile
  7121                           
  7122                           ; BSR set to: 2
  7123  0013AE  0C02               	retlw	2	;funcret
  7124  0013B0                     __end_of_USBStdGetStatusHandler:
  7125                           	opt stack 0
  7126  0013B0                     PL108:
  7127                           	opt stack 21
  7128  0013B0  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  7129  0013B4  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  7130  0013B8  0012               	return	
  7131  0013BA                     __end_ofPL108:
  7132                           	opt stack 0
  7133                           tblptru	equ	0xFF8
  7134                           tblptrh	equ	0xFF7
  7135                           tblptrl	equ	0xFF6
  7136                           tablat	equ	0xFF5
  7137                           prodh	equ	0xFF4
  7138                           prodl	equ	0xFF3
  7139                           intcon	equ	0xFF2
  7140                           postinc0	equ	0xFEE
  7141                           wreg	equ	0xFE8
  7142                           indf1	equ	0xFE7
  7143                           postdec1	equ	0xFE5
  7144                           fsr1h	equ	0xFE2
  7145                           fsr1l	equ	0xFE1
  7146                           indf2	equ	0xFDF
  7147                           postinc2	equ	0xFDE
  7148                           postdec2	equ	0xFDD
  7149                           plusw2	equ	0xFDB
  7150                           fsr2h	equ	0xFDA
  7151                           fsr2l	equ	0xFD9
  7152                           status	equ	0xFD8
  7153                           
  7154 ;; *************** function _USBStdGetDscHandler *****************
  7155 ;; Defined at:
  7156 ;;		line 2043 in file "picLibs/usb_device.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7165 ;; Tracked objects:
  7166 ;;		On entry : 3D/2
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7170 ;;      Params:         0       0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0
  7172 ;;      Temps:          2       0       0       0       0
  7173 ;;      Totals:         2       0       0       0       0
  7174 ;;Total ram usage:        2 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_USBCheckStdRequest
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text38
  7184  000986                     __ptext38:
  7185                           	opt stack 0
  7186  000986                     _USBStdGetDscHandler:
  7187                           	opt stack 21
  7188                           
  7189                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7190                           
  7191                           ; BSR set to: 2
  7192                           ;incstack = 0
  7193  000986  0E80               	movlw	128
  7194  000988  0102               	movlb	2	; () banked
  7195  00098A  1930               	xorwf	48,w,b	;volatile
  7196  00098C  A4D8               	btfss	status,2,c
  7197  00098E  0012               	return	
  7198                           
  7199                           ; BSR set to: 2
  7200                           ;usb_device.c: 2046: {
  7201                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7202  000990  0EC0               	movlw	192
  7203  000992  6E0C               	movwf	_inPipes+3,c	;volatile
  7204                           
  7205                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7206  000994  D03D               	goto	i2l3433
  7207  000996                     i2l3413:
  7208                           
  7209                           ; BSR set to: 2
  7210                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7211  000996  0EB0               	movlw	low _device_dsc
  7212  000998  6E09               	movwf	_inPipes,c	;volatile
  7213  00099A  5009               	movf	_inPipes,w,c	;volatile
  7214  00099C  A4D8               	btfss	status,2,c
  7215  00099E  0E03               	movlw	high __smallconst
  7216  0009A0  6E0A               	movwf	_inPipes+1,c	;volatile
  7217                           
  7218                           ; BSR set to: 2
  7219                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7220  0009A2  6A0E               	clrf	_inPipes+5,c	;volatile
  7221  0009A4  0E12               	movlw	18
  7222  0009A6  6E0D               	movwf	_inPipes+4,c	;volatile
  7223                           
  7224                           ;usb_device.c: 2058: break;
  7225  0009A8  0C12               	retlw	18
  7226  0009AA                     i2l3417:
  7227                           
  7228                           ; BSR set to: 2
  7229                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7230  0009AA  5132               	movf	50,w,b	;volatile
  7231  0009AC  E116               	bnz	i2l534
  7232                           
  7233                           ; BSR set to: 2
  7234                           ;usb_device.c: 2064: {
  7235                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7236  0009AE  5132               	movf	50,w,b	;volatile
  7237  0009B0  0F04               	addlw	low _USB_CD_Ptr
  7238  0009B2  D848               	call	PL52	;call to abstracted procedure
  7239                           
  7240                           ; BSR set to: 2
  7241                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7242  0009B4  0E02               	movlw	2
  7243  0009B6  D83A               	call	PL42	;call to abstracted procedure
  7244  0009B8  64F7               	cpfsgt	tblptrh,c
  7245  0009BA  D003               	bra	i2u213_47
  7246  0009BC  0008               	tblrd		*
  7247  0009BE  50F5               	movf	tablat,w,c
  7248  0009C0  D001               	bra	i2u213_40
  7249  0009C2                     i2u213_47:
  7250  0009C2  D82E               	call	PL34	;call to abstracted procedure
  7251  0009C4                     i2u213_40:
  7252  0009C4  6E0D               	movwf	_inPipes+4,c	;volatile
  7253                           
  7254                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7255  0009C6  0E03               	movlw	3
  7256  0009C8  D831               	call	PL42	;call to abstracted procedure
  7257  0009CA  64F7               	cpfsgt	tblptrh,c
  7258  0009CC  D003               	bra	i2u214_47
  7259  0009CE  0008               	tblrd		*
  7260  0009D0  50F5               	movf	tablat,w,c
  7261  0009D2  D001               	bra	i2u214_40
  7262  0009D4                     i2u214_47:
  7263  0009D4  D825               	call	PL34	;call to abstracted procedure
  7264  0009D6                     i2u214_40:
  7265  0009D6  6E0E               	movwf	_inPipes+5,c	;volatile
  7266                           
  7267                           ;usb_device.c: 2076: }
  7268  0009D8  0012               	return	
  7269  0009DA                     i2l534:
  7270                           
  7271                           ; BSR set to: 2
  7272                           ;usb_device.c: 2077: else
  7273                           ;usb_device.c: 2078: {
  7274                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7275  0009DA  6A0C               	clrf	_inPipes+3,c	;volatile
  7276  0009DC  0012               	return	
  7277  0009DE                     i2l3425:
  7278                           
  7279                           ; BSR set to: 2
  7280                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7281  0009DE  0E03               	movlw	3
  7282  0009E0  6132               	cpfslt	50,b	;volatile
  7283  0009E2  D012               	goto	i2l537
  7284                           
  7285                           ; BSR set to: 2
  7286                           ;usb_device.c: 2087: {
  7287                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7288  0009E4  5132               	movf	50,w,b	;volatile
  7289  0009E6  0F01               	addlw	low _USB_SD_Ptr
  7290  0009E8  D82D               	call	PL52	;call to abstracted procedure
  7291                           
  7292                           ; BSR set to: 2
  7293                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7294  0009EA  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
  7295  0009EE  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7296  0009F2  6AF8               	clrf	tblptru,c
  7297  0009F4  0E02               	movlw	(high __ramtop+-1)
  7298  0009F6  64F7               	cpfsgt	tblptrh,c
  7299  0009F8  D003               	bra	i2u216_47
  7300  0009FA  0008               	tblrd		*
  7301  0009FC  50F5               	movf	tablat,w,c
  7302  0009FE  D001               	bra	i2u216_40
  7303  000A00                     i2u216_47:
  7304  000A00  D80F               	call	PL34	;call to abstracted procedure
  7305  000A02                     i2u216_40:
  7306  000A02  6E0D               	movwf	_inPipes+4,c	;volatile
  7307  000A04  6A0E               	clrf	_inPipes+5,c	;volatile
  7308                           
  7309                           ;usb_device.c: 2092: }
  7310  000A06  0012               	return	
  7311  000A08                     i2l537:
  7312                           
  7313                           ; BSR set to: 2
  7314                           ;usb_device.c: 2102: else
  7315                           ;usb_device.c: 2103: {
  7316                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7317  000A08  6A0C               	clrf	_inPipes+3,c	;volatile
  7318  000A0A  0012               	return	
  7319  000A0C                     i2l539:
  7320                           
  7321                           ; BSR set to: 2
  7322                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7323  000A0C  6A0C               	clrf	_inPipes+3,c	;volatile
  7324                           
  7325                           ;usb_device.c: 2109: break;
  7326  000A0E  0012               	return	
  7327  000A10                     i2l3433:
  7328                           
  7329                           ; BSR set to: 2
  7330  000A10  5133               	movf	51,w,b	;volatile
  7331                           
  7332                           ; Switch size 1, requested type "space"
  7333                           ; Number of cases is 3, Range of values is 1 to 3
  7334                           ; switch strategies available:
  7335                           ; Name         Instructions Cycles
  7336                           ; simple_byte           10     6 (average)
  7337                           ;	Chosen strategy is simple_byte
  7338  000A12  0A01               	xorlw	1	; case 1
  7339  000A14  E0C0               	bz	i2l3413
  7340  000A16  0A03               	xorlw	3	; case 2
  7341  000A18  E0C8               	bz	i2l3417
  7342  000A1A  0A01               	xorlw	1	; case 3
  7343  000A1C  E0E0               	bz	i2l3425
  7344  000A1E  D7F6               	goto	i2l539
  7345  000A20                     __end_of_USBStdGetDscHandler:
  7346                           	opt stack 0
  7347  000A20                     PL34:
  7348                           	opt stack 21
  7349  000A20  CFF6 FFE1          	movff	tblptrl,fsr1l
  7350  000A24  CFF7 FFE2          	movff	tblptrh,fsr1h
  7351  000A28  50E7               	movf	indf1,w,c
  7352  000A2A  0012               	return	
  7353  000A2C                     __end_ofPL34:
  7354                           	opt stack 0
  7355  000A2C                     PL42:
  7356                           	opt stack 21
  7357  000A2C  2409               	addwf	_inPipes,w,c	;volatile
  7358  000A2E  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7359  000A30  0E00               	movlw	0
  7360  000A32  200A               	addwfc	_inPipes+1,w,c	;volatile
  7361  000A34  6E2B               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7362  000A36  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7363  000A3A  C02B  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7364  000A3E  6AF8               	clrf	tblptru,c
  7365  000A40  0E02               	movlw	(high __ramtop+-1)
  7366  000A42  0012               	return	
  7367  000A44                     __end_ofPL42:
  7368                           	opt stack 0
  7369  000A44                     PL52:
  7370                           	opt stack 21
  7371  000A44  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7372  000A46  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7373  000A4A                     	if	1	;There is more than 1 active tblptr byte
  7374  000A4A  0E03               	movlw	high __smallconst
  7375  000A4C  6EF7               	movwf	tblptrh,c
  7376  000A4E                     	endif
  7377  000A4E                     	if	0	;tblptru may be non-zero
  7378  000A4E                     	endif
  7379  000A4E                     	if	0	;tblptru may be non-zero
  7380  000A4E                     	endif
  7381  000A4E  0009               	tblrd		*+
  7382  000A50  CFF5 F009          	movff	tablat,_inPipes	;volatile
  7383  000A54  6E0A               	movwf	_inPipes+1,c	;volatile
  7384  000A56  0012               	return	
  7385  000A58                     __end_ofPL52:
  7386                           	opt stack 0
  7387                           tblptru	equ	0xFF8
  7388                           tblptrh	equ	0xFF7
  7389                           tblptrl	equ	0xFF6
  7390                           tablat	equ	0xFF5
  7391                           prodh	equ	0xFF4
  7392                           prodl	equ	0xFF3
  7393                           intcon	equ	0xFF2
  7394                           postinc0	equ	0xFEE
  7395                           wreg	equ	0xFE8
  7396                           indf1	equ	0xFE7
  7397                           postdec1	equ	0xFE5
  7398                           fsr1h	equ	0xFE2
  7399                           fsr1l	equ	0xFE1
  7400                           indf2	equ	0xFDF
  7401                           postinc2	equ	0xFDE
  7402                           postdec2	equ	0xFDD
  7403                           plusw2	equ	0xFDB
  7404                           fsr2h	equ	0xFDA
  7405                           fsr2l	equ	0xFD9
  7406                           status	equ	0xFD8
  7407                           
  7408 ;; *************** function _USBStdFeatureReqHandler *****************
  7409 ;; Defined at:
  7410 ;;		line 2754 in file "picLibs/usb_device.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;		None
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  p               2   25[COMRAM] PTR struct __BDT
  7415 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7416 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  7417 ;;		 -> UEP0(1), 
  7418 ;;  current_ep_d    1   24[COMRAM] struct .
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7423 ;; Tracked objects:
  7424 ;;		On entry : 3D/2
  7425 ;;		On exit  : 3D/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7428 ;;      Params:         0       0       0       0       0
  7429 ;;      Locals:         5       0       0       0       0
  7430 ;;      Temps:          2       0       0       0       0
  7431 ;;      Totals:         7       0       0       0       0
  7432 ;;Total ram usage:        7 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    4
  7435 ;; This function calls:
  7436 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7437 ;; This function is called by:
  7438 ;;		_USBCheckStdRequest
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text39
  7443  000614                     __ptext39:
  7444                           	opt stack 0
  7445  000614                     _USBStdFeatureReqHandler:
  7446                           	opt stack 17
  7447                           
  7448                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7449                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7450                           ;usb_device.c: 2761: unsigned char* pUEP;
  7451                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7452                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7453                           
  7454                           ;incstack = 0
  7455  000614  0102               	movlb	2	; () banked
  7456  000616  0532               	decf	50,w,b	;volatile
  7457  000618  E10B               	bnz	i2l3473
  7458                           
  7459                           ; BSR set to: 2
  7460  00061A  5130               	movf	48,w,b	;volatile
  7461  00061C  0B1F               	andlw	31
  7462  00061E  E108               	bnz	i2l3473
  7463                           
  7464                           ; BSR set to: 2
  7465                           ;usb_device.c: 2801: {
  7466                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7467  000620  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7468                           
  7469                           ; BSR set to: 2
  7470                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7471  000622  0E03               	movlw	3
  7472  000624  1931               	xorwf	49,w,b	;volatile
  7473  000626  E103               	bnz	i2l622
  7474                           
  7475                           ; BSR set to: 2
  7476                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7477  000628  0E01               	movlw	1
  7478  00062A  6E25               	movwf	_RemoteWakeup,c	;volatile
  7479  00062C  D001               	goto	i2l3473
  7480  00062E                     i2l622:
  7481                           
  7482                           ; BSR set to: 2
  7483                           ;usb_device.c: 2805: else
  7484                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7485  00062E  6A25               	clrf	_RemoteWakeup,c	;volatile
  7486  000630                     i2l3473:
  7487                           
  7488                           ; BSR set to: 2
  7489                           ;usb_device.c: 2807: }
  7490                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7491                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7492                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7493                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7494  000630  5132               	movf	50,w,b	;volatile
  7495  000632  A4D8               	btfss	status,2,c
  7496  000634  0012               	return	
  7497                           
  7498                           ; BSR set to: 2
  7499  000636  5130               	movf	48,w,b	;volatile
  7500  000638  0B1F               	andlw	31
  7501  00063A  0A02               	xorlw	2
  7502  00063C  A4D8               	btfss	status,2,c
  7503  00063E  0012               	return	
  7504                           
  7505                           ; BSR set to: 2
  7506  000640  5134               	movf	52,w,b	;volatile
  7507  000642  0B0F               	andlw	15
  7508  000644  B4D8               	btfsc	status,2,c
  7509  000646  0012               	return	
  7510                           
  7511                           ; BSR set to: 2
  7512  000648  5134               	movf	52,w,b	;volatile
  7513  00064A  0B0F               	andlw	15
  7514  00064C  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7515  00064E  0E03               	movlw	3
  7516  000650  603E               	cpfslt	??_USBStdFeatureReqHandler,c
  7517  000652  0C03               	retlw	3
  7518                           
  7519                           ; BSR set to: 2
  7520  000654  0E20               	movlw	32
  7521  000656  0100               	movlb	0	; () banked
  7522  000658  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7523  00065A  A4D8               	btfss	status,2,c
  7524  00065C  0012               	return	
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;usb_device.c: 2814: {
  7528                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7529  00065E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7530                           
  7531                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7532  000660  0102               	movlb	2	; () banked
  7533  000662  BF34               	btfsc	52,7,b	;volatile
  7534  000664  D007               	goto	i2l3489
  7535                           
  7536                           ; BSR set to: 2
  7537                           ;usb_device.c: 2821: {
  7538                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7539  000666  5134               	movf	52,w,b	;volatile
  7540  000668  0B0F               	andlw	15
  7541  00066A  EC36  F006         	call	PL32	;call to abstracted procedure
  7542                           
  7543                           ; BSR set to: 2
  7544                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7545  00066E  D88B               	call	PL66	;call to abstracted procedure
  7546  000670  0F70               	addlw	low _ep_data_out
  7547  000672  D006               	goto	L7
  7548  000674                     i2l3489:
  7549                           
  7550                           ; BSR set to: 2
  7551                           ;usb_device.c: 2825: else
  7552                           ;usb_device.c: 2826: {
  7553                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7554  000674  5134               	movf	52,w,b	;volatile
  7555  000676  0B0F               	andlw	15
  7556  000678  EC3C  F006         	call	PL36	;call to abstracted procedure
  7557                           
  7558                           ; BSR set to: 2
  7559                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7560  00067C  D884               	call	PL66	;call to abstracted procedure
  7561  00067E  0F73               	addlw	low _ep_data_in
  7562  000680                     L7:
  7563  000680  6ED9               	movwf	fsr2l,c
  7564  000682  6ADA               	clrf	fsr2h,c
  7565  000684  50DF               	movf	indf2,w,c
  7566  000686  6E42               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7567                           
  7568                           ; BSR set to: 2
  7569                           ;usb_device.c: 2829: }
  7570                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7571  000688  B042               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7572  00068A  D003               	goto	i2l3497
  7573                           
  7574                           ; BSR set to: 2
  7575                           ;usb_device.c: 2836: {
  7576                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7577  00068C  0EFB               	movlw	251
  7578  00068E  1643               	andwf	USBStdFeatureReqHandler@p,f,c
  7579  000690  D002               	goto	L8
  7580  000692                     i2l3497:
  7581                           
  7582                           ; BSR set to: 2
  7583                           ;usb_device.c: 2839: else
  7584                           ;usb_device.c: 2840: {
  7585                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7586  000692  0E04               	movlw	4
  7587  000694  1243               	iorwf	USBStdFeatureReqHandler@p,f,c
  7588  000696                     L8:
  7589  000696  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7590                           
  7591                           ; BSR set to: 2
  7592                           ;usb_device.c: 2842: }
  7593                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7594  000698  BF34               	btfsc	52,7,b	;volatile
  7595  00069A  D003               	goto	i2l3503
  7596                           
  7597                           ; BSR set to: 2
  7598                           ;usb_device.c: 2848: {
  7599                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7600  00069C  D882               	call	PL70	;call to abstracted procedure
  7601  00069E  0F60               	addlw	low _pBDTEntryOut
  7602  0006A0  D002               	goto	L9
  7603  0006A2                     i2l3503:
  7604                           
  7605                           ; BSR set to: 2
  7606                           ;usb_device.c: 2851: else
  7607                           ;usb_device.c: 2852: {
  7608                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7609  0006A2  D87F               	call	PL70	;call to abstracted procedure
  7610  0006A4  0F0F               	addlw	low _pBDTEntryIn
  7611  0006A6                     L9:
  7612  0006A6  6ED9               	movwf	fsr2l,c
  7613  0006A8  6ADA               	clrf	fsr2h,c
  7614  0006AA  C043  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7615  0006AE  C044  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7616                           
  7617                           ; BSR set to: 2
  7618                           ;usb_device.c: 2854: }
  7619                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7620  0006B2  0E03               	movlw	3
  7621  0006B4  1931               	xorwf	49,w,b	;volatile
  7622  0006B6  E114               	bnz	i2l3515
  7623                           
  7624                           ; BSR set to: 2
  7625                           ;usb_device.c: 2858: {
  7626                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7627  0006B8  D856               	call	PL24	;call to abstracted procedure
  7628  0006BA  AEDF               	btfss	indf2,7,c
  7629  0006BC  D00B               	goto	i2l632
  7630                           
  7631                           ; BSR set to: 2
  7632                           ;usb_device.c: 2860: {
  7633                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7634  0006BE  BF34               	btfsc	52,7,b	;volatile
  7635  0006C0  D003               	goto	i2l3513
  7636                           
  7637                           ; BSR set to: 2
  7638                           ;usb_device.c: 2864: {
  7639                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7640  0006C2  D86A               	call	PL68	;call to abstracted procedure
  7641  0006C4  0F70               	addlw	low _ep_data_out
  7642  0006C6  D002               	goto	L10
  7643  0006C8                     i2l3513:
  7644                           
  7645                           ; BSR set to: 2
  7646                           ;usb_device.c: 2867: else
  7647                           ;usb_device.c: 2868: {
  7648                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7649  0006C8  D867               	call	PL68	;call to abstracted procedure
  7650  0006CA  0F73               	addlw	low _ep_data_in
  7651  0006CC                     L10:
  7652  0006CC  6ED9               	movwf	fsr2l,c
  7653  0006CE  6ADA               	clrf	fsr2h,c
  7654  0006D0  0100               	movlb	0	; () banked
  7655  0006D2  82DF               	bsf	indf2,1,c
  7656  0006D4                     i2l632:
  7657                           
  7658                           ;usb_device.c: 2870: }
  7659                           ;usb_device.c: 2871: }
  7660                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7661  0006D4  D848               	call	PL24	;call to abstracted procedure
  7662  0006D6  0E00               	movlw	0
  7663  0006D8  84DB               	bsf	plusw2,2,c
  7664                           
  7665                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7666  0006DA  D845               	call	PL24	;call to abstracted procedure
  7667  0006DC  8EDB               	bsf	plusw2,7,c
  7668                           
  7669                           ;usb_device.c: 2876: }
  7670  0006DE  0C00               	retlw	0
  7671  0006E0                     i2l3515:
  7672                           
  7673                           ; BSR set to: 2
  7674                           ;usb_device.c: 2877: else
  7675                           ;usb_device.c: 2878: {
  7676                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7677  0006E0  0E04               	movlw	4
  7678  0006E2  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7679  0006E4  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7680                           
  7681                           ; BSR set to: 2
  7682                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7683  0006E6  D83F               	call	PL24	;call to abstracted procedure
  7684  0006E8  AEDF               	btfss	indf2,7,c
  7685  0006EA  D00A               	goto	i2l3525
  7686                           
  7687                           ; BSR set to: 2
  7688                           ;usb_device.c: 2885: {
  7689                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7690  0006EC  D83C               	call	PL24	;call to abstracted procedure
  7691  0006EE  0E7F               	movlw	127
  7692  0006F0  16DF               	andwf	indf2,f,c
  7693                           
  7694                           ; BSR set to: 2
  7695                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7696  0006F2  D839               	call	PL24	;call to abstracted procedure
  7697  0006F4  0E00               	movlw	0
  7698  0006F6  8CDB               	bsf	plusw2,6,c
  7699                           
  7700                           ; BSR set to: 2
  7701                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7702  0006F8  D83B               	call	PL48	;call to abstracted procedure
  7703  0006FA  EC84  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7704                           
  7705                           ;usb_device.c: 2891: }
  7706  0006FE  D003               	goto	i2l3527
  7707  000700                     i2l3525:
  7708                           
  7709                           ; BSR set to: 2
  7710                           ;usb_device.c: 2892: else
  7711                           ;usb_device.c: 2893: {
  7712                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7713  000700  D832               	call	PL24	;call to abstracted procedure
  7714  000702  0E00               	movlw	0
  7715  000704  8CDB               	bsf	plusw2,6,c
  7716  000706                     i2l3527:
  7717                           
  7718                           ;usb_device.c: 2896: }
  7719                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7720  000706  0E04               	movlw	4
  7721  000708  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7722  00070A  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7723                           
  7724                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7725  00070C  B242               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7726  00070E  D003               	goto	i2l640
  7727  000710  D82A               	call	PL24	;call to abstracted procedure
  7728  000712  AEDF               	btfss	indf2,7,c
  7729  000714  D013               	goto	i2l3541
  7730  000716                     i2l640:
  7731                           
  7732                           ;usb_device.c: 2907: {
  7733                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7734  000716  0102               	movlb	2	; () banked
  7735  000718  BF34               	btfsc	52,7,b	;volatile
  7736  00071A  D003               	goto	i2l3535
  7737                           
  7738                           ; BSR set to: 2
  7739                           ;usb_device.c: 2909: {
  7740                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7741  00071C  D83D               	call	PL68	;call to abstracted procedure
  7742  00071E  0F70               	addlw	low _ep_data_out
  7743  000720  D002               	goto	L11
  7744  000722                     i2l3535:
  7745                           
  7746                           ; BSR set to: 2
  7747                           ;usb_device.c: 2912: else
  7748                           ;usb_device.c: 2913: {
  7749                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7750  000722  D83A               	call	PL68	;call to abstracted procedure
  7751  000724  0F73               	addlw	low _ep_data_in
  7752  000726                     L11:
  7753  000726  6ED9               	movwf	fsr2l,c
  7754  000728  6ADA               	clrf	fsr2h,c
  7755  00072A  0100               	movlb	0	; () banked
  7756  00072C  92DF               	bcf	indf2,1,c
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;usb_device.c: 2915: }
  7760                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7761  00072E  D81B               	call	PL24	;call to abstracted procedure
  7762  000730  0E3B               	movlw	59
  7763  000732  16DF               	andwf	indf2,f,c
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7767  000734  D81D               	call	PL48	;call to abstracted procedure
  7768  000736  EC84  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7769                           
  7770                           ;usb_device.c: 2921: }
  7771  00073A  D003               	goto	i2l3543
  7772  00073C                     i2l3541:
  7773                           
  7774                           ;usb_device.c: 2922: else
  7775                           ;usb_device.c: 2923: {
  7776                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7777  00073C  D814               	call	PL24	;call to abstracted procedure
  7778  00073E  0E3B               	movlw	59
  7779  000740  16DF               	andwf	indf2,f,c
  7780  000742                     i2l3543:
  7781                           
  7782                           ;usb_device.c: 2926: }
  7783                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7784  000742  0102               	movlb	2	; () banked
  7785  000744  5134               	movf	52,w,b	;volatile
  7786  000746  0B0F               	andlw	15
  7787  000748  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7788  00074A  6A3F               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  7789  00074C  0E53               	movlw	83
  7790  00074E  243E               	addwf	??_USBStdFeatureReqHandler,w,c
  7791  000750  6E40               	movwf	USBStdFeatureReqHandler@pUEP,c
  7792  000752  0E0F               	movlw	15
  7793  000754  203F               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  7794  000756  6E41               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7795                           
  7796                           ; BSR set to: 2
  7797                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7798  000758  C040  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7799  00075C  C041  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7800  000760  0EFE               	movlw	254
  7801  000762  16DF               	andwf	indf2,f,c
  7802  000764  0CFE               	retlw	254	;funcret
  7803  000766                     __end_of_USBStdFeatureReqHandler:
  7804                           	opt stack 0
  7805  000766                     PL24:
  7806                           	opt stack 17
  7807  000766  C043  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7808  00076A  C044  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7809  00076E  0012               	return	
  7810  000770                     __end_ofPL24:
  7811                           	opt stack 0
  7812  000770                     PL48:
  7813                           	opt stack 17
  7814  000770  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7815  000772  0E05               	movlw	5
  7816  000774  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7817  000776  C043  F038         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7818  00077A  C044  F039         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7819  00077E  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7820  000780  0E02               	movlw	2
  7821  000782  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7822  000784  0C02               	retlw	2
  7823  000786                     __end_ofPL48:
  7824                           	opt stack 0
  7825  000786                     PL66:
  7826                           	opt stack 17
  7827  000786  CFDE F043          	movff	postinc2,USBStdFeatureReqHandler@p
  7828  00078A  CFDD F044          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7829  00078E  5134               	movf	52,w,b	;volatile
  7830  000790  0B0F               	andlw	15
  7831  000792  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7832  000794  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7833  000796  0012               	return	
  7834  000798                     __end_ofPL66:
  7835                           	opt stack 0
  7836  000798                     PL68:
  7837                           	opt stack 17
  7838  000798  5134               	movf	52,w,b	;volatile
  7839  00079A  0B0F               	andlw	15
  7840  00079C  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7841  00079E  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7842  0007A0  0012               	return	
  7843  0007A2                     __end_ofPL68:
  7844                           	opt stack 0
  7845  0007A2                     PL70:
  7846                           	opt stack 21
  7847  0007A2  5134               	movf	52,w,b	;volatile
  7848  0007A4  0B0F               	andlw	15
  7849  0007A6  0D02               	mullw	2
  7850  0007A8  50F3               	movf	prodl,w,c
  7851  0007AA  0012               	return	
  7852  0007AC                     __end_ofPL70:
  7853                           	opt stack 0
  7854                           tblptru	equ	0xFF8
  7855                           tblptrh	equ	0xFF7
  7856                           tblptrl	equ	0xFF6
  7857                           tablat	equ	0xFF5
  7858                           prodh	equ	0xFF4
  7859                           prodl	equ	0xFF3
  7860                           intcon	equ	0xFF2
  7861                           postinc0	equ	0xFEE
  7862                           wreg	equ	0xFE8
  7863                           indf1	equ	0xFE7
  7864                           postdec1	equ	0xFE5
  7865                           fsr1h	equ	0xFE2
  7866                           fsr1l	equ	0xFE1
  7867                           indf2	equ	0xFDF
  7868                           postinc2	equ	0xFDE
  7869                           postdec2	equ	0xFDD
  7870                           plusw2	equ	0xFDB
  7871                           fsr2h	equ	0xFDA
  7872                           fsr2l	equ	0xFD9
  7873                           status	equ	0xFD8
  7874                           
  7875 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7876 ;; Defined at:
  7877 ;;		line 51 in file "picLibs/usb_events.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  event           2   12[COMRAM] enum E3370
  7880 ;;  pdata           2   14[COMRAM] PTR void 
  7881 ;;		 -> RAM(767), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7882 ;;		 -> BDT(48), 
  7883 ;;  size            2   16[COMRAM] unsigned int 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      unsigned char 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7895 ;;      Params:         6       0       0       0       0
  7896 ;;      Locals:         0       0       0       0       0
  7897 ;;      Temps:          2       0       0       0       0
  7898 ;;      Totals:         8       0       0       0       0
  7899 ;;Total ram usage:        8 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    3
  7902 ;; This function calls:
  7903 ;;		_APP_DeviceCDCBasicDemoInitialize
  7904 ;;		_APP_LEDUpdateUSBStatus
  7905 ;;		_CDCInitEP
  7906 ;;		_USBCheckCDCRequest
  7907 ;;		i2_SYSTEM_Initialize
  7908 ;; This function is called by:
  7909 ;;		_USBDeviceTasks
  7910 ;;		_USBStdSetCfgHandler
  7911 ;;		_USBSuspend
  7912 ;;		_USBWakeFromSuspend
  7913 ;;		_USBCtrlTrfSetupHandler
  7914 ;;		_USBCheckStdRequest
  7915 ;;		_USBStdFeatureReqHandler
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text40
  7920  001508                     __ptext40:
  7921                           	opt stack 0
  7922  001508                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7923                           	opt stack 21
  7924                           
  7925                           ;usb_events.c: 53: switch( (int) event )
  7926                           
  7927                           ;incstack = 0
  7928  001508  D00E               	goto	i2l3255
  7929  00150A                     i2l3243:
  7930                           
  7931                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  7932  00150A  EC15  F00A         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7933                           
  7934                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7935  00150E  0E01               	movlw	1
  7936  001510  EF7E  F00D         	goto	i2_SYSTEM_Initialize
  7937  001514                     i2l3245:
  7938                           
  7939                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  7940  001514  EC15  F00A         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7941                           
  7942                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7943  001518  0E02               	movlw	2
  7944  00151A  EF7E  F00D         	goto	i2_SYSTEM_Initialize
  7945  00151E                     i2l3247:
  7946                           
  7947                           ;usb_events.c: 91: CDCInitEP();
  7948  00151E  EC46  F00B         	call	_CDCInitEP	;wreg free
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;usb_events.c: 92: APP_DeviceCDCBasicDemoInitialize();
  7952  001522  EFB6  F00D         	goto	_APP_DeviceCDCBasicDemoInitialize	;wreg free
  7953  001526                     i2l3255:
  7954  001526  C036  F03C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7955  00152A  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7956                           
  7957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7958                           ; Switch size 1, requested type "space"
  7959                           ; Number of cases is 2, Range of values is 0 to 127
  7960                           ; switch strategies available:
  7961                           ; Name         Instructions Cycles
  7962                           ; simple_byte            7     4 (average)
  7963                           ;	Chosen strategy is simple_byte
  7964  00152E  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7965  001530  E004               	bz	i2l5267
  7966  001532  0A7F               	xorlw	127	; case 127
  7967  001534  A4D8               	btfss	status,2,c
  7968  001536  0012               	return	
  7969  001538  D01A               	goto	i2l5269
  7970  00153A                     i2l5267:
  7971                           
  7972                           ; Switch size 1, requested type "space"
  7973                           ; Number of cases is 8, Range of values is 1 to 117
  7974                           ; switch strategies available:
  7975                           ; Name         Instructions Cycles
  7976                           ; simple_byte           25    13 (average)
  7977                           ;	Chosen strategy is simple_byte
  7978  00153A  503C               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7979  00153C  0A01               	xorlw	1	; case 1
  7980  00153E  E0EF               	bz	i2l3247
  7981  001540  0A03               	xorlw	3	; case 2
  7982  001542  B4D8               	btfsc	status,2,c
  7983  001544  0012               	return	
  7984  001546  0A01               	xorlw	1	; case 3
  7985  001548  E102 EFEB  F008    	bz	_USBCheckCDCRequest
  7986  00154E  0A06               	xorlw	6	; case 5
  7987  001550  B4D8               	btfsc	status,2,c
  7988  001552  0012               	return	
  7989  001554  0A77               	xorlw	119	; case 114
  7990  001556  B4D8               	btfsc	status,2,c
  7991  001558  0012               	return	
  7992  00155A  0A01               	xorlw	1	; case 115
  7993  00155C  E102 EF15  F00A    	bz	_APP_LEDUpdateUSBStatus
  7994  001562  0A07               	xorlw	7	; case 116
  7995  001564  E0D7               	bz	i2l3245
  7996  001566  0A01               	xorlw	1	; case 117
  7997  001568  A4D8               	btfss	status,2,c
  7998  00156A  0012               	return	
  7999  00156C  D7CE               	goto	i2l3243
  8000  00156E                     i2l5269:
  8001                           
  8002                           ; Switch size 1, requested type "space"
  8003                           ; Number of cases is 1, Range of values is 255 to 255
  8004                           ; switch strategies available:
  8005                           ; Name         Instructions Cycles
  8006                           ; simple_byte            4     3 (average)
  8007                           ;	Chosen strategy is simple_byte
  8008  00156E  1C3C               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  8009  001570  0012               	return	
  8010  001572                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  8011                           	opt stack 0
  8012                           tblptru	equ	0xFF8
  8013                           tblptrh	equ	0xFF7
  8014                           tblptrl	equ	0xFF6
  8015                           tablat	equ	0xFF5
  8016                           prodh	equ	0xFF4
  8017                           prodl	equ	0xFF3
  8018                           intcon	equ	0xFF2
  8019                           postinc0	equ	0xFEE
  8020                           wreg	equ	0xFE8
  8021                           indf1	equ	0xFE7
  8022                           postdec1	equ	0xFE5
  8023                           fsr1h	equ	0xFE2
  8024                           fsr1l	equ	0xFE1
  8025                           indf2	equ	0xFDF
  8026                           postinc2	equ	0xFDE
  8027                           postdec2	equ	0xFDD
  8028                           plusw2	equ	0xFDB
  8029                           fsr2h	equ	0xFDA
  8030                           fsr2l	equ	0xFD9
  8031                           status	equ	0xFD8
  8032                           
  8033 ;; *************** function i2_SYSTEM_Initialize *****************
  8034 ;; Defined at:
  8035 ;;		line 66 in file "picLibs/system.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  state           1    wreg     enum E3329
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  state           1    1[COMRAM] enum E3329
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, status,2, status,0, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8049 ;;      Params:         0       0       0       0       0
  8050 ;;      Locals:         1       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0
  8052 ;;      Totals:         1       0       0       0       0
  8053 ;;Total ram usage:        1 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:    1
  8056 ;; This function calls:
  8057 ;;		i2_BUTTON_Enable
  8058 ;;		i2_LED_Enable
  8059 ;; This function is called by:
  8060 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text41
  8065  001AFC                     __ptext41:
  8066                           	opt stack 0
  8067  001AFC                     i2_SYSTEM_Initialize:
  8068                           	opt stack 22
  8069                           
  8070                           ;incstack = 0
  8071                           ;i2SYSTEM_Initialize@state stored from wreg
  8072  001AFC  6E2B               	movwf	i2SYSTEM_Initialize@state,c
  8073                           
  8074                           ;system.c: 68: switch(state)
  8075  001AFE  D006               	goto	i2l3237
  8076  001B00                     i2l3233:
  8077                           
  8078                           ;system.c: 71: LED_Enable(LED_D1);
  8079  001B00  0E01               	movlw	1
  8080  001B02  ECE1  F00C         	call	i2_LED_Enable
  8081                           
  8082                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  8083  001B06  0E01               	movlw	1
  8084  001B08  EFDE  F00D         	goto	i2_BUTTON_Enable
  8085  001B0C                     i2l3237:
  8086  001B0C  502B               	movf	i2SYSTEM_Initialize@state,w,c
  8087                           
  8088                           ; Switch size 1, requested type "space"
  8089                           ; Number of cases is 3, Range of values is 0 to 2
  8090                           ; switch strategies available:
  8091                           ; Name         Instructions Cycles
  8092                           ; simple_byte           10     6 (average)
  8093                           ;	Chosen strategy is simple_byte
  8094  001B0E  E0F8               	bz	i2l3233
  8095  001B10  D000               	goto	PL112	;call to abstracted procedure
  8096  001B12                     __end_ofi2_SYSTEM_Initialize:
  8097                           	opt stack 0
  8098  001B12                     PL112:
  8099                           	opt stack 19
  8100  001B12  0A01               	xorlw	1	; case 1
  8101  001B14  A4D8               	btfss	status,2,c
  8102  001B16  0A03               	xorlw	3	; case 2
  8103  001B18  0012               	return	
  8104  001B1A                     __end_ofPL112:
  8105                           	opt stack 0
  8106                           tblptru	equ	0xFF8
  8107                           tblptrh	equ	0xFF7
  8108                           tblptrl	equ	0xFF6
  8109                           tablat	equ	0xFF5
  8110                           prodh	equ	0xFF4
  8111                           prodl	equ	0xFF3
  8112                           intcon	equ	0xFF2
  8113                           postinc0	equ	0xFEE
  8114                           wreg	equ	0xFE8
  8115                           indf1	equ	0xFE7
  8116                           postdec1	equ	0xFE5
  8117                           fsr1h	equ	0xFE2
  8118                           fsr1l	equ	0xFE1
  8119                           indf2	equ	0xFDF
  8120                           postinc2	equ	0xFDE
  8121                           postdec2	equ	0xFDD
  8122                           plusw2	equ	0xFDB
  8123                           fsr2h	equ	0xFDA
  8124                           fsr2l	equ	0xFD9
  8125                           status	equ	0xFD8
  8126                           
  8127 ;; *************** function i2_LED_Enable *****************
  8128 ;; Defined at:
  8129 ;;		line 220 in file "picLibs/leds.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  led             1    wreg     enum E2
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;  led             1    0[COMRAM] enum E2
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, status,2, status,0
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8143 ;;      Params:         0       0       0       0       0
  8144 ;;      Locals:         1       0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0
  8146 ;;      Totals:         1       0       0       0       0
  8147 ;;Total ram usage:        1 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; This function calls:
  8150 ;;		Nothing
  8151 ;; This function is called by:
  8152 ;;		i2_SYSTEM_Initialize
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           	psect	text42
  8157  0019C2                     __ptext42:
  8158                           	opt stack 0
  8159  0019C2                     i2_LED_Enable:
  8160                           	opt stack 22
  8161                           
  8162                           ;incstack = 0
  8163                           ;i2LED_Enable@led stored from wreg
  8164  0019C2  6E2A               	movwf	i2LED_Enable@led,c
  8165                           
  8166                           ;leds.c: 222: switch(led)
  8167  0019C4  D008               	goto	i2l3093
  8168  0019C6                     i2l217:
  8169                           
  8170                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  8171  0019C6  9094               	bcf	3988,0,c	;volatile
  8172                           
  8173                           ;leds.c: 226: break;
  8174  0019C8  0012               	return	
  8175  0019CA                     i2l219:
  8176                           
  8177                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  8178  0019CA  9294               	bcf	3988,1,c	;volatile
  8179                           
  8180                           ;leds.c: 230: break;
  8181  0019CC  0012               	return	
  8182  0019CE                     i2l220:
  8183                           
  8184                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  8185  0019CE  9494               	bcf	3988,2,c	;volatile
  8186                           
  8187                           ;leds.c: 234: break;
  8188  0019D0  0012               	return	
  8189  0019D2                     i2l221:
  8190                           
  8191                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  8192  0019D2  9694               	bcf	3988,3,c	;volatile
  8193                           
  8194                           ;leds.c: 238: break;
  8195  0019D4  0012               	return	
  8196  0019D6                     i2l3093:
  8197  0019D6  502A               	movf	i2LED_Enable@led,w,c
  8198                           
  8199                           ; Switch size 1, requested type "space"
  8200                           ; Number of cases is 5, Range of values is 0 to 4
  8201                           ; switch strategies available:
  8202                           ; Name         Instructions Cycles
  8203                           ; simple_byte           16     9 (average)
  8204                           ;	Chosen strategy is simple_byte
  8205  0019D8  B4D8               	btfsc	status,2,c
  8206  0019DA  0012               	return	
  8207  0019DC  0A01               	xorlw	1	; case 1
  8208  0019DE  E0F3               	bz	i2l217
  8209  0019E0  0A03               	xorlw	3	; case 2
  8210  0019E2  E0F3               	bz	i2l219
  8211  0019E4  0A01               	xorlw	1	; case 3
  8212  0019E6  E0F3               	bz	i2l220
  8213  0019E8  0A07               	xorlw	7	; case 4
  8214  0019EA  E0F3               	bz	i2l221
  8215  0019EC  0012               	return		;funcret
  8216  0019EE                     __end_ofi2_LED_Enable:
  8217                           	opt stack 0
  8218                           tblptru	equ	0xFF8
  8219                           tblptrh	equ	0xFF7
  8220                           tblptrl	equ	0xFF6
  8221                           tablat	equ	0xFF5
  8222                           prodh	equ	0xFF4
  8223                           prodl	equ	0xFF3
  8224                           intcon	equ	0xFF2
  8225                           postinc0	equ	0xFEE
  8226                           wreg	equ	0xFE8
  8227                           indf1	equ	0xFE7
  8228                           postdec1	equ	0xFE5
  8229                           fsr1h	equ	0xFE2
  8230                           fsr1l	equ	0xFE1
  8231                           indf2	equ	0xFDF
  8232                           postinc2	equ	0xFDE
  8233                           postdec2	equ	0xFDD
  8234                           plusw2	equ	0xFDB
  8235                           fsr2h	equ	0xFDA
  8236                           fsr2l	equ	0xFD9
  8237                           status	equ	0xFD8
  8238                           
  8239 ;; *************** function i2_BUTTON_Enable *****************
  8240 ;; Defined at:
  8241 ;;		line 85 in file "picLibs/buttons.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  button          1    wreg     enum E3304
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;  button          1    0[COMRAM] enum E3304
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      void 
  8248 ;; Registers used:
  8249 ;;		wreg, status,2, status,0
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8255 ;;      Params:         0       0       0       0       0
  8256 ;;      Locals:         1       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0
  8258 ;;      Totals:         1       0       0       0       0
  8259 ;;Total ram usage:        1 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		i2_SYSTEM_Initialize
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text43
  8269  001BBC                     __ptext43:
  8270                           	opt stack 0
  8271  001BBC                     i2_BUTTON_Enable:
  8272                           	opt stack 22
  8273                           
  8274                           ;incstack = 0
  8275                           ;i2BUTTON_Enable@button stored from wreg
  8276  001BBC  6E2A               	movwf	i2BUTTON_Enable@button,c
  8277                           
  8278                           ;buttons.c: 87: switch(button)
  8279  001BBE  502A               	movf	i2BUTTON_Enable@button,w,c
  8280                           
  8281                           ; Switch size 1, requested type "space"
  8282                           ; Number of cases is 2, Range of values is 0 to 1
  8283                           ; switch strategies available:
  8284                           ; Name         Instructions Cycles
  8285                           ; simple_byte            7     4 (average)
  8286                           ;	Chosen strategy is simple_byte
  8287  001BC0  D000               	goto	PL122	;call to abstracted procedure
  8288  001BC2                     __end_ofi2_BUTTON_Enable:
  8289                           	opt stack 0
  8290  001BC2                     PL122:
  8291                           	opt stack 19
  8292  001BC2  A4D8               	btfss	status,2,c
  8293  001BC4  0A01               	xorlw	1	; case 1
  8294  001BC6  0012               	return	
  8295  001BC8                     __end_ofPL122:
  8296                           	opt stack 0
  8297                           tblptru	equ	0xFF8
  8298                           tblptrh	equ	0xFF7
  8299                           tblptrl	equ	0xFF6
  8300                           tablat	equ	0xFF5
  8301                           prodh	equ	0xFF4
  8302                           prodl	equ	0xFF3
  8303                           intcon	equ	0xFF2
  8304                           postinc0	equ	0xFEE
  8305                           wreg	equ	0xFE8
  8306                           indf1	equ	0xFE7
  8307                           postdec1	equ	0xFE5
  8308                           fsr1h	equ	0xFE2
  8309                           fsr1l	equ	0xFE1
  8310                           indf2	equ	0xFDF
  8311                           postinc2	equ	0xFDE
  8312                           postdec2	equ	0xFDD
  8313                           plusw2	equ	0xFDB
  8314                           fsr2h	equ	0xFDA
  8315                           fsr2l	equ	0xFD9
  8316                           status	equ	0xFD8
  8317                           
  8318 ;; *************** function _USBCheckCDCRequest *****************
  8319 ;; Defined at:
  8320 ;;		line 147 in file "picLibs/usb_device_cdc.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 3F/2
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8334 ;;      Params:         0       0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0
  8337 ;;      Totals:         0       0       0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; This function calls:
  8341 ;;		Nothing
  8342 ;; This function is called by:
  8343 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           	psect	text44
  8348  0011D6                     __ptext44:
  8349                           	opt stack 0
  8350  0011D6                     _USBCheckCDCRequest:
  8351                           	opt stack 23
  8352                           
  8353                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8354                           
  8355                           ;incstack = 0
  8356  0011D6  0102               	movlb	2	; () banked
  8357  0011D8  5130               	movf	48,w,b	;volatile
  8358  0011DA  0B1F               	andlw	31
  8359  0011DC  06E8               	decf	wreg,f,c
  8360  0011DE  E001               	bz	i2l3171
  8361  0011E0  0012               	return	
  8362  0011E2                     i2l3171:
  8363                           
  8364                           ; BSR set to: 2
  8365                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8366  0011E2  3930               	swapf	48,w,b	;volatile
  8367  0011E4  32E8               	rrcf	wreg,f,c
  8368  0011E6  0B03               	andlw	3
  8369  0011E8  06E8               	decf	wreg,f,c
  8370  0011EA  E001               	bz	i2l3175
  8371  0011EC  0012               	return	
  8372  0011EE                     i2l3175:
  8373                           
  8374                           ; BSR set to: 2
  8375                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8376                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8377  0011EE  5134               	movf	52,w,b	;volatile
  8378  0011F0  E027               	bz	i2l3211
  8379                           
  8380                           ; BSR set to: 2
  8381  0011F2  0534               	decf	52,w,b	;volatile
  8382  0011F4  E025               	bz	i2l3211
  8383  0011F6  0012               	return	
  8384  0011F8                     i2l3181:
  8385                           
  8386                           ; BSR set to: 2
  8387                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8388  0011F8  0EA0               	movlw	low _dummy_encapsulated_cmd_response
  8389  0011FA  6E09               	movwf	_inPipes,c	;volatile
  8390  0011FC  6A0A               	clrf	_inPipes+1,c	;volatile
  8391                           
  8392                           ; BSR set to: 2
  8393                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8394  0011FE  6A0E               	clrf	_inPipes+5,c	;volatile
  8395  001200  0E08               	movlw	8
  8396  001202  6E0D               	movwf	_inPipes+4,c	;volatile
  8397                           
  8398                           ; BSR set to: 2
  8399                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8400  001204  800C               	bsf	_inPipes+3,0,c	;volatile
  8401                           
  8402                           ; BSR set to: 2
  8403                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8404  001206  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8405                           
  8406                           ;usb_device_cdc.c: 175: break;
  8407  001208  0C08               	retlw	8
  8408  00120A                     i2l3189:
  8409                           
  8410                           ; BSR set to: 2
  8411                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8412  00120A  0EA0               	movlw	low _dummy_encapsulated_cmd_response
  8413  00120C  6E09               	movwf	_inPipes,c	;volatile
  8414  00120E  6A0A               	clrf	_inPipes+1,c	;volatile
  8415                           
  8416                           ; BSR set to: 2
  8417                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8418  001210  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8419                           
  8420                           ;usb_device_cdc.c: 180: break;
  8421  001212  0012               	return	
  8422  001214                     i2l707:
  8423                           
  8424                           ; BSR set to: 2
  8425                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8426  001214  C236 F005          	movff	566,_outPipes+4	;volatile
  8427  001218  C237 F006          	movff	567,_outPipes+5	;volatile
  8428                           
  8429                           ; BSR set to: 2
  8430                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8431  00121C  0EA8               	movlw	low _line_coding
  8432  00121E  6E01               	movwf	_outPipes,c	;volatile
  8433                           
  8434                           ; BSR set to: 2
  8435                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8436  001220  6A07               	clrf	_outPipes+6,c	;volatile
  8437  001222  6A08               	clrf	_outPipes+7,c	;volatile
  8438                           
  8439                           ; BSR set to: 2
  8440                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8441  001224  8E04               	bsf	_outPipes+3,7,c	;volatile
  8442                           
  8443                           ;usb_device_cdc.c: 189: break;
  8444  001226  0012               	return	
  8445  001228                     i2l3199:
  8446                           
  8447                           ; BSR set to: 2
  8448                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8449  001228  0EA8               	movlw	low _line_coding
  8450  00122A  6E09               	movwf	_inPipes,c	;volatile
  8451  00122C  6A0A               	clrf	_inPipes+1,c	;volatile
  8452                           
  8453                           ; BSR set to: 2
  8454  00122E  6A0E               	clrf	_inPipes+5,c	;volatile
  8455  001230  0E07               	movlw	7
  8456  001232  6E0D               	movwf	_inPipes+4,c	;volatile
  8457                           
  8458                           ; BSR set to: 2
  8459  001234  0EC1               	movlw	193
  8460  001236  6E0C               	movwf	_inPipes+3,c	;volatile
  8461                           
  8462                           ;usb_device_cdc.c: 196: break;
  8463  001238  0CC1               	retlw	193
  8464  00123A                     i2l3205:
  8465                           
  8466                           ; BSR set to: 2
  8467                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8468  00123A  5132               	movf	50,w,b	;volatile
  8469                           
  8470                           ; BSR set to: 2
  8471                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8472  00123C  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8473                           
  8474                           ;usb_device_cdc.c: 232: break;
  8475  00123E  0012               	return	
  8476  001240                     i2l3211:
  8477                           
  8478                           ; BSR set to: 2
  8479  001240  5131               	movf	49,w,b	;volatile
  8480                           
  8481                           ; Switch size 1, requested type "space"
  8482                           ; Number of cases is 5, Range of values is 0 to 34
  8483                           ; switch strategies available:
  8484                           ; Name         Instructions Cycles
  8485                           ; simple_byte           16     9 (average)
  8486                           ;	Chosen strategy is simple_byte
  8487  001242  E0DA               	bz	i2l3181
  8488  001244  0A01               	xorlw	1	; case 1
  8489  001246  E0E1               	bz	i2l3189
  8490  001248  0A21               	xorlw	33	; case 32
  8491  00124A  E0E4               	bz	i2l707
  8492  00124C  0A01               	xorlw	1	; case 33
  8493  00124E  E0EC               	bz	i2l3199
  8494  001250  0A03               	xorlw	3	; case 34
  8495  001252  E0F3               	bz	i2l3205
  8496                           
  8497                           ; BSR set to: 2
  8498  001254  0012               	return		;funcret
  8499  001256                     __end_of_USBCheckCDCRequest:
  8500                           	opt stack 0
  8501                           tblptru	equ	0xFF8
  8502                           tblptrh	equ	0xFF7
  8503                           tblptrl	equ	0xFF6
  8504                           tablat	equ	0xFF5
  8505                           prodh	equ	0xFF4
  8506                           prodl	equ	0xFF3
  8507                           intcon	equ	0xFF2
  8508                           postinc0	equ	0xFEE
  8509                           wreg	equ	0xFE8
  8510                           indf1	equ	0xFE7
  8511                           postdec1	equ	0xFE5
  8512                           fsr1h	equ	0xFE2
  8513                           fsr1l	equ	0xFE1
  8514                           indf2	equ	0xFDF
  8515                           postinc2	equ	0xFDE
  8516                           postdec2	equ	0xFDD
  8517                           plusw2	equ	0xFDB
  8518                           fsr2h	equ	0xFDA
  8519                           fsr2l	equ	0xFD9
  8520                           status	equ	0xFD8
  8521                           
  8522 ;; *************** function _CDCInitEP *****************
  8523 ;; Defined at:
  8524 ;;		line 294 in file "picLibs/usb_device_cdc.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;		None
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      void 
  8531 ;; Registers used:
  8532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 3F/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8538 ;;      Params:         0       0       0       0       0
  8539 ;;      Locals:         0       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0
  8541 ;;      Totals:         0       0       0       0       0
  8542 ;;Total ram usage:        0 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    2
  8545 ;; This function calls:
  8546 ;;		_USBEnableEndpoint
  8547 ;;		i2_USBTransferOnePacket
  8548 ;; This function is called by:
  8549 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text45
  8554  00168C                     __ptext45:
  8555                           	opt stack 0
  8556  00168C                     _CDCInitEP:
  8557                           	opt stack 21
  8558                           
  8559                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8560                           
  8561                           ; BSR set to: 2
  8562                           ;incstack = 0
  8563  00168C  0100               	movlb	0	; () banked
  8564  00168E  6BA8               	clrf	_line_coding& (0+255),b
  8565  001690  0E4B               	movlw	75
  8566  001692  6FA9               	movwf	(_line_coding+1)& (0+255),b
  8567  001694  6BAA               	clrf	(_line_coding+2)& (0+255),b
  8568  001696  6BAB               	clrf	(_line_coding+3)& (0+255),b
  8569                           
  8570                           ; BSR set to: 0
  8571                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8572  001698  6BAC               	clrf	(_line_coding+4)& (0+255),b
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8576  00169A  6BAD               	clrf	(_line_coding+5)& (0+255),b
  8577                           
  8578                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8579  00169C  0E08               	movlw	8
  8580  00169E  6FAE               	movwf	(_line_coding+6)& (0+255),b
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8584  0016A0  6A1C               	clrf	_cdc_rx_len,c
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8588  0016A2  0E1A               	movlw	26
  8589  0016A4  6E32               	movwf	USBEnableEndpoint@options,c
  8590  0016A6  0E01               	movlw	1
  8591  0016A8  EC48  F00C         	call	_USBEnableEndpoint
  8592                           
  8593                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8594  0016AC  0E1E               	movlw	30
  8595  0016AE  6E32               	movwf	USBEnableEndpoint@options,c
  8596  0016B0  0E02               	movlw	2
  8597  0016B2  EC48  F00C         	call	_USBEnableEndpoint
  8598                           
  8599                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8600  0016B6  0E00               	movlw	0
  8601  0016B8  6E2A               	movwf	i2USBTransferOnePacket@dir,c
  8602  0016BA  0E80               	movlw	128
  8603  0016BC  6E2B               	movwf	i2USBTransferOnePacket@data,c
  8604  0016BE  0E02               	movlw	2
  8605  0016C0  6E2C               	movwf	i2USBTransferOnePacket@data+1,c
  8606  0016C2  0E0F               	movlw	15
  8607  0016C4  6E2D               	movwf	i2USBTransferOnePacket@len,c
  8608  0016C6  0E02               	movlw	2
  8609  0016C8  ECB5  F006         	call	i2_USBTransferOnePacket
  8610  0016CC  C02A  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  8611  0016D0  C02B  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8612                           
  8613                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8614  0016D4  0100               	movlb	0	; () banked
  8615  0016D6  6B76               	clrf	_CDCDataInHandle& (0+255),b
  8616  0016D8  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8620  0016DA  6B80               	clrf	_cdc_trf_state& (0+255),b
  8621                           
  8622                           ; BSR set to: 0
  8623  0016DC  0012               	return		;funcret
  8624  0016DE                     __end_of_CDCInitEP:
  8625                           	opt stack 0
  8626                           tblptru	equ	0xFF8
  8627                           tblptrh	equ	0xFF7
  8628                           tblptrl	equ	0xFF6
  8629                           tablat	equ	0xFF5
  8630                           prodh	equ	0xFF4
  8631                           prodl	equ	0xFF3
  8632                           intcon	equ	0xFF2
  8633                           postinc0	equ	0xFEE
  8634                           wreg	equ	0xFE8
  8635                           indf1	equ	0xFE7
  8636                           postdec1	equ	0xFE5
  8637                           fsr1h	equ	0xFE2
  8638                           fsr1l	equ	0xFE1
  8639                           indf2	equ	0xFDF
  8640                           postinc2	equ	0xFDE
  8641                           postdec2	equ	0xFDD
  8642                           plusw2	equ	0xFDB
  8643                           fsr2h	equ	0xFDA
  8644                           fsr2l	equ	0xFD9
  8645                           status	equ	0xFD8
  8646                           
  8647 ;; *************** function i2_USBTransferOnePacket *****************
  8648 ;; Defined at:
  8649 ;;		line 995 in file "picLibs/usb_device.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;  ep              1    wreg     unsigned char 
  8652 ;;  dir             1    0[COMRAM] unsigned char 
  8653 ;;  data            2    1[COMRAM] PTR unsigned char 
  8654 ;;		 -> cdc_data_tx(15), cdc_data_rx(15), NULL(0), 
  8655 ;;  len             1    3[COMRAM] unsigned char 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  ep              1    6[COMRAM] unsigned char 
  8658 ;;  USBTransferO    2    7[COMRAM] PTR volatile struct __BD
  8659 ;;		 -> RAM(767), NULL(0), BDT(48), 
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  2    0[COMRAM] PTR void 
  8662 ;; Registers used:
  8663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8669 ;;      Params:         4       0       0       0       0
  8670 ;;      Locals:         3       0       0       0       0
  8671 ;;      Temps:          2       0       0       0       0
  8672 ;;      Totals:         9       0       0       0       0
  8673 ;;Total ram usage:        9 bytes
  8674 ;; Hardware stack levels used:    1
  8675 ;; This function calls:
  8676 ;;		Nothing
  8677 ;; This function is called by:
  8678 ;;		_CDCInitEP
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text46
  8683  000D6A                     __ptext46:
  8684                           	opt stack 0
  8685  000D6A                     i2_USBTransferOnePacket:
  8686                           	opt stack 22
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;incstack = 0
  8690                           ;i2USBTransferOnePacket@ep stored from wreg
  8691  000D6A  6E30               	movwf	i2USBTransferOnePacket@ep,c
  8692                           
  8693                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8694                           ;usb_device.c: 1000: if(dir != 0)
  8695  000D6C  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8696  000D6E  E003               	bz	i2l3099
  8697                           
  8698                           ;usb_device.c: 1001: {
  8699                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8700  000D70  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8701  000D72  D849               	call	PL94	;call to abstracted procedure
  8702  000D74  D002               	goto	L12
  8703  000D76                     i2l3099:
  8704                           
  8705                           ;usb_device.c: 1005: else
  8706                           ;usb_device.c: 1006: {
  8707                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8708  000D76  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8709  000D78  D842               	call	PL88	;call to abstracted procedure
  8710  000D7A                     L12:
  8711  000D7A  6ED9               	movwf	fsr2l,c
  8712  000D7C  6ADA               	clrf	fsr2h,c
  8713  000D7E  CFDE F031          	movff	postinc2,i2USBTransferOnePacket@handle
  8714  000D82  CFDD F032          	movff	postdec2,i2USBTransferOnePacket@handle+1
  8715                           
  8716                           ;usb_device.c: 1009: }
  8717                           ;usb_device.c: 1013: if(handle == 0)
  8718  000D86  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8719  000D88  1032               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  8720  000D8A  E103               	bnz	i2l3105
  8721                           
  8722                           ;usb_device.c: 1014: {
  8723                           ;usb_device.c: 1015: return 0;
  8724  000D8C  6A2A               	clrf	?i2_USBTransferOnePacket,c
  8725  000D8E  6A2B               	clrf	?i2_USBTransferOnePacket+1,c
  8726  000D90  0012               	return	
  8727  000D92                     i2l3105:
  8728                           
  8729                           ;usb_device.c: 1016: }
  8730                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8731  000D92  EE20 F002          	lfsr	2,2
  8732  000D96  D840               	call	PL110	;call to abstracted procedure
  8733  000D98  C02B  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  8734  000D9C  C02C  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  8735                           
  8736                           ;usb_device.c: 1030: handle->CNT = len;
  8737  000DA0  EE20 F001          	lfsr	2,1
  8738  000DA4  D839               	call	PL110	;call to abstracted procedure
  8739  000DA6  C02D  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  8740                           
  8741                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8742  000DAA  D831               	call	PL96	;call to abstracted procedure
  8743  000DAC  0E40               	movlw	64
  8744  000DAE  16DF               	andwf	indf2,f,c
  8745                           
  8746                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8747  000DB0  D82E               	call	PL96	;call to abstracted procedure
  8748  000DB2  0E00               	movlw	0
  8749  000DB4  86DB               	bsf	plusw2,3,c
  8750                           
  8751                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8752  000DB6  D82B               	call	PL96	;call to abstracted procedure
  8753  000DB8  8EDB               	bsf	plusw2,7,c
  8754                           
  8755                           ;usb_device.c: 1036: if(dir != 0)
  8756  000DBA  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8757  000DBC  E006               	bz	i2l3117
  8758                           
  8759                           ;usb_device.c: 1037: {
  8760                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8761  000DBE  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8762  000DC0  EC3C  F006         	call	PL36	;call to abstracted procedure
  8763  000DC4  D812               	call	PL56	;call to abstracted procedure
  8764  000DC6  0F0F               	addlw	low _pBDTEntryIn
  8765  000DC8  D005               	goto	L13
  8766  000DCA                     i2l3117:
  8767                           
  8768                           ;usb_device.c: 1041: else
  8769                           ;usb_device.c: 1042: {
  8770                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8771  000DCA  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8772  000DCC  EC36  F006         	call	PL32	;call to abstracted procedure
  8773  000DD0  D80C               	call	PL56	;call to abstracted procedure
  8774  000DD2  0F60               	addlw	low _pBDTEntryOut
  8775  000DD4                     L13:
  8776  000DD4  6ED9               	movwf	fsr2l,c
  8777  000DD6  6ADA               	clrf	fsr2h,c
  8778  000DD8  C02E  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
  8779  000DDC  C02F  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
  8780                           
  8781                           ;usb_device.c: 1045: }
  8782                           ;usb_device.c: 1046: return (void*)handle;
  8783  000DE0  C031  F02A         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  8784  000DE4  C032  F02B         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  8785  000DE8  0012               	return		;funcret
  8786  000DEA                     __end_ofi2_USBTransferOnePacket:
  8787                           	opt stack 0
  8788  000DEA                     PL56:
  8789                           	opt stack 22
  8790  000DEA  CFDE F02E          	movff	postinc2,??i2_USBTransferOnePacket
  8791  000DEE  CFDD F02F          	movff	postdec2,??i2_USBTransferOnePacket+1
  8792  000DF2  0E04               	movlw	4
  8793  000DF4  1A2E               	xorwf	??i2_USBTransferOnePacket,f,c
  8794  000DF6  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8795  000DF8  0D02               	mullw	2
  8796  000DFA  50F3               	movf	prodl,w,c
  8797  000DFC  0012               	return	
  8798  000DFE                     __end_ofPL56:
  8799                           	opt stack 0
  8800  000DFE                     PL88:
  8801                           	opt stack 18
  8802  000DFE  0D02               	mullw	2
  8803  000E00  50F3               	movf	prodl,w,c
  8804  000E02  0F60               	addlw	low _pBDTEntryOut
  8805  000E04  0012               	return	
  8806  000E06                     __end_ofPL88:
  8807                           	opt stack 0
  8808  000E06                     PL94:
  8809                           	opt stack 18
  8810  000E06  0D02               	mullw	2
  8811  000E08  50F3               	movf	prodl,w,c
  8812  000E0A  0F0F               	addlw	low _pBDTEntryIn
  8813  000E0C  0012               	return	
  8814  000E0E                     __end_ofPL94:
  8815                           	opt stack 0
  8816  000E0E                     PL96:
  8817                           	opt stack 22
  8818  000E0E  C031  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  8819  000E12  C032  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  8820  000E16  0012               	return	
  8821  000E18                     __end_ofPL96:
  8822                           	opt stack 0
  8823  000E18                     PL110:
  8824                           	opt stack 22
  8825  000E18  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8826  000E1A  26D9               	addwf	fsr2l,f,c
  8827  000E1C  5032               	movf	i2USBTransferOnePacket@handle+1,w,c
  8828  000E1E  22DA               	addwfc	fsr2h,f,c
  8829  000E20  0012               	return	
  8830  000E22                     __end_ofPL110:
  8831                           	opt stack 0
  8832                           tblptru	equ	0xFF8
  8833                           tblptrh	equ	0xFF7
  8834                           tblptrl	equ	0xFF6
  8835                           tablat	equ	0xFF5
  8836                           prodh	equ	0xFF4
  8837                           prodl	equ	0xFF3
  8838                           intcon	equ	0xFF2
  8839                           postinc0	equ	0xFEE
  8840                           wreg	equ	0xFE8
  8841                           indf1	equ	0xFE7
  8842                           postdec1	equ	0xFE5
  8843                           fsr1h	equ	0xFE2
  8844                           fsr1l	equ	0xFE1
  8845                           indf2	equ	0xFDF
  8846                           postinc2	equ	0xFDE
  8847                           postdec2	equ	0xFDD
  8848                           plusw2	equ	0xFDB
  8849                           fsr2h	equ	0xFDA
  8850                           fsr2l	equ	0xFD9
  8851                           status	equ	0xFD8
  8852                           
  8853 ;; *************** function _USBEnableEndpoint *****************
  8854 ;; Defined at:
  8855 ;;		line 878 in file "picLibs/usb_device.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  ep              1    wreg     unsigned char 
  8858 ;;  options         1    8[COMRAM] unsigned char 
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;  ep              1   11[COMRAM] unsigned char 
  8861 ;;  p               2    9[COMRAM] PTR unsigned char 
  8862 ;;		 -> UEP0(1), 
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8872 ;;      Params:         1       0       0       0       0
  8873 ;;      Locals:         3       0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0
  8875 ;;      Totals:         4       0       0       0       0
  8876 ;;Total ram usage:        4 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:    1
  8879 ;; This function calls:
  8880 ;;		_USBConfigureEndpoint
  8881 ;; This function is called by:
  8882 ;;		_CDCInitEP
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text47
  8887  001890                     __ptext47:
  8888                           	opt stack 0
  8889  001890                     _USBEnableEndpoint:
  8890                           	opt stack 21
  8891                           
  8892                           ;incstack = 0
  8893                           ;USBEnableEndpoint@ep stored from wreg
  8894  001890  6E35               	movwf	USBEnableEndpoint@ep,c
  8895                           
  8896                           ;usb_device.c: 880: unsigned char* p;
  8897                           ;usb_device.c: 884: if(options & 0x04)
  8898  001892  A432               	btfss	USBEnableEndpoint@options,2,c
  8899  001894  D004               	goto	i2l3075
  8900                           
  8901                           ;usb_device.c: 885: {
  8902                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8903  001896  6A2A               	clrf	USBConfigureEndpoint@direction,c
  8904  001898  5035               	movf	USBEnableEndpoint@ep,w,c
  8905  00189A  EC2B  F009         	call	_USBConfigureEndpoint
  8906  00189E                     i2l3075:
  8907                           
  8908                           ;usb_device.c: 887: }
  8909                           ;usb_device.c: 888: if(options & 0x02)
  8910  00189E  A232               	btfss	USBEnableEndpoint@options,1,c
  8911  0018A0  D005               	goto	i2l3079
  8912                           
  8913                           ;usb_device.c: 889: {
  8914                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8915  0018A2  0E01               	movlw	1
  8916  0018A4  6E2A               	movwf	USBConfigureEndpoint@direction,c
  8917  0018A6  5035               	movf	USBEnableEndpoint@ep,w,c
  8918  0018A8  EC2B  F009         	call	_USBConfigureEndpoint
  8919  0018AC                     i2l3079:
  8920                           
  8921                           ;usb_device.c: 891: }
  8922                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8923  0018AC  0E53               	movlw	83
  8924  0018AE  2435               	addwf	USBEnableEndpoint@ep,w,c
  8925  0018B0  6E33               	movwf	USBEnableEndpoint@p,c
  8926  0018B2  6A34               	clrf	USBEnableEndpoint@p+1,c
  8927  0018B4  0E0F               	movlw	15
  8928  0018B6  2234               	addwfc	USBEnableEndpoint@p+1,f,c
  8929                           
  8930                           ;usb_device.c: 901: *p = options;
  8931  0018B8  C033  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8932  0018BC  C034  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8933  0018C0  C032  FFDF         	movff	USBEnableEndpoint@options,indf2
  8934  0018C4  0C0F               	retlw	15	;funcret
  8935  0018C6                     __end_of_USBEnableEndpoint:
  8936                           	opt stack 0
  8937                           tblptru	equ	0xFF8
  8938                           tblptrh	equ	0xFF7
  8939                           tblptrl	equ	0xFF6
  8940                           tablat	equ	0xFF5
  8941                           prodh	equ	0xFF4
  8942                           prodl	equ	0xFF3
  8943                           intcon	equ	0xFF2
  8944                           postinc0	equ	0xFEE
  8945                           wreg	equ	0xFE8
  8946                           indf1	equ	0xFE7
  8947                           postdec1	equ	0xFE5
  8948                           fsr1h	equ	0xFE2
  8949                           fsr1l	equ	0xFE1
  8950                           indf2	equ	0xFDF
  8951                           postinc2	equ	0xFDE
  8952                           postdec2	equ	0xFDD
  8953                           plusw2	equ	0xFDB
  8954                           fsr2h	equ	0xFDA
  8955                           fsr2l	equ	0xFD9
  8956                           status	equ	0xFD8
  8957                           
  8958 ;; *************** function _USBConfigureEndpoint *****************
  8959 ;; Defined at:
  8960 ;;		line 1543 in file "picLibs/usb_device.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;  EPNum           1    wreg     unsigned char 
  8963 ;;  direction       1    0[COMRAM] unsigned char 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;  EPNum           1    5[COMRAM] unsigned char 
  8966 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  8967 ;;		 -> BDT(48), 
  8968 ;; Return value:  Size  Location     Type
  8969 ;;                  1    wreg      void 
  8970 ;; Registers used:
  8971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8972 ;; Tracked objects:
  8973 ;;		On entry : 0/0
  8974 ;;		On exit  : 0/0
  8975 ;;		Unchanged: 0/0
  8976 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8977 ;;      Params:         1       0       0       0       0
  8978 ;;      Locals:         3       0       0       0       0
  8979 ;;      Temps:          4       0       0       0       0
  8980 ;;      Totals:         8       0       0       0       0
  8981 ;;Total ram usage:        8 bytes
  8982 ;; Hardware stack levels used:    1
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_USBEnableEndpoint
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text48
  8991  001256                     __ptext48:
  8992                           	opt stack 0
  8993  001256                     _USBConfigureEndpoint:
  8994                           	opt stack 21
  8995                           
  8996                           ;incstack = 0
  8997                           ;USBConfigureEndpoint@EPNum stored from wreg
  8998  001256  6E2F               	movwf	USBConfigureEndpoint@EPNum,c
  8999                           
  9000                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  9001                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  9002  001258  6A30               	clrf	USBConfigureEndpoint@handle,c
  9003  00125A  0E02               	movlw	2
  9004  00125C  6E31               	movwf	USBConfigureEndpoint@handle+1,c
  9005                           
  9006                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  9007  00125E  502A               	movf	USBConfigureEndpoint@direction,w,c
  9008  001260  6E2B               	movwf	??_USBConfigureEndpoint& (0+255),c
  9009  001262  6A2C               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  9010  001264  90D8               	bcf	status,0,c
  9011  001266  362B               	rlcf	??_USBConfigureEndpoint,f,c
  9012  001268  362C               	rlcf	??_USBConfigureEndpoint+1,f,c
  9013  00126A  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9014  00126C  6E2D               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  9015  00126E  6A2E               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  9016  001270  D824               	call	PL84	;call to abstracted procedure
  9017  001272  502B               	movf	??_USBConfigureEndpoint,w,c
  9018  001274  262D               	addwf	??_USBConfigureEndpoint+2,f,c
  9019  001276  502C               	movf	??_USBConfigureEndpoint+1,w,c
  9020  001278  222E               	addwfc	??_USBConfigureEndpoint+3,f,c
  9021  00127A  D81F               	call	PL84	;call to abstracted procedure
  9022  00127C  502D               	movf	??_USBConfigureEndpoint+2,w,c
  9023  00127E  2630               	addwf	USBConfigureEndpoint@handle,f,c
  9024  001280  502E               	movf	??_USBConfigureEndpoint+3,w,c
  9025  001282  2231               	addwfc	USBConfigureEndpoint@handle+1,f,c
  9026                           
  9027                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  9028  001284  D821               	call	PL114	;call to abstracted procedure
  9029  001286  9EDF               	bcf	indf2,7,c
  9030                           
  9031                           ;usb_device.c: 1557: if(direction == 0)
  9032  001288  502A               	movf	USBConfigureEndpoint@direction,w,c
  9033  00128A  E104               	bnz	i2l3053
  9034                           
  9035                           ;usb_device.c: 1558: {
  9036                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  9037  00128C  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9038  00128E  ECFF  F006         	call	PL88	;call to abstracted procedure
  9039  001292  D003               	goto	L14
  9040  001294                     i2l3053:
  9041                           
  9042                           ;usb_device.c: 1561: else
  9043                           ;usb_device.c: 1562: {
  9044                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  9045  001294  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9046  001296  EC03  F007         	call	PL94	;call to abstracted procedure
  9047  00129A                     L14:
  9048  00129A  6ED9               	movwf	fsr2l,c
  9049  00129C  6ADA               	clrf	fsr2h,c
  9050  00129E  C030  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  9051  0012A2  C031  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  9052                           
  9053                           ;usb_device.c: 1564: }
  9054                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  9055  0012A6  D810               	call	PL114	;call to abstracted procedure
  9056  0012A8  9CDF               	bcf	indf2,6,c
  9057                           
  9058                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  9059  0012AA  EE20 F004          	lfsr	2,4
  9060  0012AE  5030               	movf	USBConfigureEndpoint@handle,w,c
  9061  0012B0  26D9               	addwf	fsr2l,f,c
  9062  0012B2  5031               	movf	USBConfigureEndpoint@handle+1,w,c
  9063  0012B4  22DA               	addwfc	fsr2h,f,c
  9064  0012B6  8CDF               	bsf	indf2,6,c
  9065  0012B8  0012               	return		;funcret
  9066  0012BA                     __end_of_USBConfigureEndpoint:
  9067                           	opt stack 0
  9068  0012BA                     PL84:
  9069                           	opt stack 21
  9070  0012BA  90D8               	bcf	status,0,c
  9071  0012BC  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  9072  0012BE  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  9073  0012C0  90D8               	bcf	status,0,c
  9074  0012C2  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  9075  0012C4  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  9076  0012C6  0012               	return	
  9077  0012C8                     __end_ofPL84:
  9078                           	opt stack 0
  9079  0012C8                     PL114:
  9080                           	opt stack 21
  9081  0012C8  C030  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  9082  0012CC  C031  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  9083  0012D0  0012               	return	
  9084  0012D2                     __end_ofPL114:
  9085                           	opt stack 0
  9086                           tblptru	equ	0xFF8
  9087                           tblptrh	equ	0xFF7
  9088                           tblptrl	equ	0xFF6
  9089                           tablat	equ	0xFF5
  9090                           prodh	equ	0xFF4
  9091                           prodl	equ	0xFF3
  9092                           intcon	equ	0xFF2
  9093                           postinc0	equ	0xFEE
  9094                           wreg	equ	0xFE8
  9095                           indf1	equ	0xFE7
  9096                           postdec1	equ	0xFE5
  9097                           fsr1h	equ	0xFE2
  9098                           fsr1l	equ	0xFE1
  9099                           indf2	equ	0xFDF
  9100                           postinc2	equ	0xFDE
  9101                           postdec2	equ	0xFDD
  9102                           plusw2	equ	0xFDB
  9103                           fsr2h	equ	0xFDA
  9104                           fsr2l	equ	0xFD9
  9105                           status	equ	0xFD8
  9106                           
  9107 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  9108 ;; Defined at:
  9109 ;;		line 50 in file "picLibs/app_led_usb_status.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9123 ;;      Params:         0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0
  9126 ;;      Totals:         0       0       0       0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    1
  9130 ;; This function calls:
  9131 ;;		_LED_Off
  9132 ;;		_LED_On
  9133 ;; This function is called by:
  9134 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text49
  9139  00142A                     __ptext49:
  9140                           	opt stack 0
  9141  00142A                     _APP_LEDUpdateUSBStatus:
  9142                           	opt stack 22
  9143                           
  9144                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  9145                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  9146                           
  9147                           ;incstack = 0
  9148  00142A  A264               	btfss	3940,1,c	;volatile
  9149  00142C  D02E               	goto	i2l3163
  9150                           
  9151                           ;app_led_usb_status.c: 55: {
  9152                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  9153  00142E  0E01               	movlw	1
  9154  001430  EF0D  F00D         	goto	_LED_Off
  9155  001434                     i2l3137:
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  9159  001434  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9160  001436  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9161  001438  E104               	bnz	i2l3141
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;app_led_usb_status.c: 66: {
  9165                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  9166  00143A  0E01               	movlw	1
  9167  00143C  ECF7  F00C         	call	_LED_On
  9168                           
  9169                           ;app_led_usb_status.c: 68: }
  9170  001440  D029               	goto	i2l3165
  9171  001442                     i2l3141:
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  9175  001442  0E4B               	movlw	75
  9176  001444  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9177  001446  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9178  001448  E104               	bnz	i2l3145
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;app_led_usb_status.c: 70: {
  9182                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  9183  00144A  0E01               	movlw	1
  9184  00144C  EC0D  F00D         	call	_LED_Off
  9185                           
  9186                           ;app_led_usb_status.c: 72: }
  9187  001450  D021               	goto	i2l3165
  9188  001452                     i2l3145:
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  9192  001452  501A               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9193  001454  E103               	bnz	i2u186_40
  9194  001456  0E97               	movlw	151
  9195  001458  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9196  00145A  E31C               	bnc	i2l3165
  9197  00145C                     i2u186_40:
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;app_led_usb_status.c: 74: {
  9201                           ;app_led_usb_status.c: 75: ledCount = 0;
  9202  00145C  6A19               	clrf	APP_LEDUpdateUSBStatus@ledCount,c
  9203  00145E  6A1A               	clrf	APP_LEDUpdateUSBStatus@ledCount+1,c
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;app_led_usb_status.c: 76: }
  9207                           ;app_led_usb_status.c: 77: break;
  9208  001460  D019               	goto	i2l3165
  9209  001462                     i2l3149:
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  9213  001462  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9214  001464  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9215  001466  E104               	bnz	i2l3153
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;app_led_usb_status.c: 83: {
  9219                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  9220  001468  0E01               	movlw	1
  9221  00146A  ECF7  F00C         	call	_LED_On
  9222                           
  9223                           ;app_led_usb_status.c: 85: }
  9224  00146E  D012               	goto	i2l3165
  9225  001470                     i2l3153:
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  9229  001470  0E32               	movlw	50
  9230  001472  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9231  001474  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9232  001476  E104               	bnz	i2l3157
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;app_led_usb_status.c: 87: {
  9236                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  9237  001478  0E01               	movlw	1
  9238  00147A  EC0D  F00D         	call	_LED_Off
  9239                           
  9240                           ;app_led_usb_status.c: 89: }
  9241  00147E  D00A               	goto	i2l3165
  9242  001480                     i2l3157:
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  9246  001480  0EB7               	movlw	183
  9247  001482  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9248  001484  0E03               	movlw	3
  9249  001486  581A               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9250  001488  D7E8               	goto	L15
  9251  00148A                     i2l3163:
  9252  00148A  0100               	movlb	0	; () banked
  9253  00148C  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  9254                           
  9255                           ; Switch size 1, requested type "space"
  9256                           ; Number of cases is 1, Range of values is 32 to 32
  9257                           ; switch strategies available:
  9258                           ; Name         Instructions Cycles
  9259                           ; simple_byte            4     3 (average)
  9260                           ;	Chosen strategy is simple_byte
  9261  00148E  0A20               	xorlw	32	; case 32
  9262  001490  E0D1               	bz	i2l3137
  9263  001492  D7E7               	goto	i2l3149
  9264  001494                     i2l3165:
  9265                           
  9266                           ;app_led_usb_status.c: 98: ledCount++;
  9267  001494  4A19               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
  9268  001496  2A1A               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
  9269  001498  0012               	return		;funcret
  9270  00149A                     __end_of_APP_LEDUpdateUSBStatus:
  9271                           	opt stack 0
  9272                           tblptru	equ	0xFF8
  9273                           tblptrh	equ	0xFF7
  9274                           tblptrl	equ	0xFF6
  9275                           tablat	equ	0xFF5
  9276                           prodh	equ	0xFF4
  9277                           prodl	equ	0xFF3
  9278                           intcon	equ	0xFF2
  9279                           postinc0	equ	0xFEE
  9280                           wreg	equ	0xFE8
  9281                           indf1	equ	0xFE7
  9282                           postdec1	equ	0xFE5
  9283                           fsr1h	equ	0xFE2
  9284                           fsr1l	equ	0xFE1
  9285                           indf2	equ	0xFDF
  9286                           postinc2	equ	0xFDE
  9287                           postdec2	equ	0xFDD
  9288                           plusw2	equ	0xFDB
  9289                           fsr2h	equ	0xFDA
  9290                           fsr2l	equ	0xFD9
  9291                           status	equ	0xFD8
  9292                           
  9293 ;; *************** function _LED_On *****************
  9294 ;; Defined at:
  9295 ;;		line 59 in file "picLibs/leds.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  led             1    wreg     enum E2
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  led             1    0[COMRAM] enum E2
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  1    wreg      void 
  9302 ;; Registers used:
  9303 ;;		wreg, status,2, status,0
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9309 ;;      Params:         0       0       0       0       0
  9310 ;;      Locals:         1       0       0       0       0
  9311 ;;      Temps:          0       0       0       0       0
  9312 ;;      Totals:         1       0       0       0       0
  9313 ;;Total ram usage:        1 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_APP_LEDUpdateUSBStatus
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text50
  9323  0019EE                     __ptext50:
  9324                           	opt stack 0
  9325  0019EE                     _LED_On:
  9326                           	opt stack 22
  9327                           
  9328                           ;incstack = 0
  9329                           ;LED_On@led stored from wreg
  9330  0019EE  6E2A               	movwf	LED_On@led,c
  9331                           
  9332                           ;leds.c: 61: switch(led)
  9333  0019F0  D008               	goto	i2l3069
  9334  0019F2                     i2l177:
  9335                           
  9336                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9337  0019F2  808B               	bsf	3979,0,c	;volatile
  9338                           
  9339                           ;leds.c: 65: break;
  9340  0019F4  0012               	return	
  9341  0019F6                     i2l179:
  9342                           
  9343                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9344  0019F6  828B               	bsf	3979,1,c	;volatile
  9345                           
  9346                           ;leds.c: 69: break;
  9347  0019F8  0012               	return	
  9348  0019FA                     i2l180:
  9349                           
  9350                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9351  0019FA  848B               	bsf	3979,2,c	;volatile
  9352                           
  9353                           ;leds.c: 73: break;
  9354  0019FC  0012               	return	
  9355  0019FE                     i2l181:
  9356                           
  9357                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9358  0019FE  868B               	bsf	3979,3,c	;volatile
  9359                           
  9360                           ;leds.c: 77: break;
  9361  001A00  0012               	return	
  9362  001A02                     i2l3069:
  9363  001A02  502A               	movf	LED_On@led,w,c
  9364                           
  9365                           ; Switch size 1, requested type "space"
  9366                           ; Number of cases is 5, Range of values is 0 to 4
  9367                           ; switch strategies available:
  9368                           ; Name         Instructions Cycles
  9369                           ; simple_byte           16     9 (average)
  9370                           ;	Chosen strategy is simple_byte
  9371  001A04  B4D8               	btfsc	status,2,c
  9372  001A06  0012               	return	
  9373  001A08  0A01               	xorlw	1	; case 1
  9374  001A0A  E0F3               	bz	i2l177
  9375  001A0C  0A03               	xorlw	3	; case 2
  9376  001A0E  E0F3               	bz	i2l179
  9377  001A10  0A01               	xorlw	1	; case 3
  9378  001A12  E0F3               	bz	i2l180
  9379  001A14  0A07               	xorlw	7	; case 4
  9380  001A16  E0F3               	bz	i2l181
  9381  001A18  0012               	return		;funcret
  9382  001A1A                     __end_of_LED_On:
  9383                           	opt stack 0
  9384                           tblptru	equ	0xFF8
  9385                           tblptrh	equ	0xFF7
  9386                           tblptrl	equ	0xFF6
  9387                           tablat	equ	0xFF5
  9388                           prodh	equ	0xFF4
  9389                           prodl	equ	0xFF3
  9390                           intcon	equ	0xFF2
  9391                           postinc0	equ	0xFEE
  9392                           wreg	equ	0xFE8
  9393                           indf1	equ	0xFE7
  9394                           postdec1	equ	0xFE5
  9395                           fsr1h	equ	0xFE2
  9396                           fsr1l	equ	0xFE1
  9397                           indf2	equ	0xFDF
  9398                           postinc2	equ	0xFDE
  9399                           postdec2	equ	0xFDD
  9400                           plusw2	equ	0xFDB
  9401                           fsr2h	equ	0xFDA
  9402                           fsr2l	equ	0xFD9
  9403                           status	equ	0xFD8
  9404                           
  9405 ;; *************** function _LED_Off *****************
  9406 ;; Defined at:
  9407 ;;		line 100 in file "picLibs/leds.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  led             1    wreg     enum E2
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  led             1    0[COMRAM] enum E2
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  1    wreg      void 
  9414 ;; Registers used:
  9415 ;;		wreg, status,2, status,0
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9421 ;;      Params:         0       0       0       0       0
  9422 ;;      Locals:         1       0       0       0       0
  9423 ;;      Temps:          0       0       0       0       0
  9424 ;;      Totals:         1       0       0       0       0
  9425 ;;Total ram usage:        1 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; This function calls:
  9428 ;;		Nothing
  9429 ;; This function is called by:
  9430 ;;		_APP_LEDUpdateUSBStatus
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           
  9434                           	psect	text51
  9435  001A1A                     __ptext51:
  9436                           	opt stack 0
  9437  001A1A                     _LED_Off:
  9438                           	opt stack 22
  9439                           
  9440                           ;incstack = 0
  9441                           ;LED_Off@led stored from wreg
  9442  001A1A  6E2A               	movwf	LED_Off@led,c
  9443                           
  9444                           ;leds.c: 102: switch(led)
  9445  001A1C  D008               	goto	i2l3063
  9446  001A1E                     i2l187:
  9447                           
  9448                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9449  001A1E  908B               	bcf	3979,0,c	;volatile
  9450                           
  9451                           ;leds.c: 106: break;
  9452  001A20  0012               	return	
  9453  001A22                     i2l189:
  9454                           
  9455                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9456  001A22  928B               	bcf	3979,1,c	;volatile
  9457                           
  9458                           ;leds.c: 110: break;
  9459  001A24  0012               	return	
  9460  001A26                     i2l190:
  9461                           
  9462                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9463  001A26  948B               	bcf	3979,2,c	;volatile
  9464                           
  9465                           ;leds.c: 114: break;
  9466  001A28  0012               	return	
  9467  001A2A                     i2l191:
  9468                           
  9469                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9470  001A2A  968B               	bcf	3979,3,c	;volatile
  9471                           
  9472                           ;leds.c: 118: break;
  9473  001A2C  0012               	return	
  9474  001A2E                     i2l3063:
  9475  001A2E  502A               	movf	LED_Off@led,w,c
  9476                           
  9477                           ; Switch size 1, requested type "space"
  9478                           ; Number of cases is 5, Range of values is 0 to 4
  9479                           ; switch strategies available:
  9480                           ; Name         Instructions Cycles
  9481                           ; simple_byte           16     9 (average)
  9482                           ;	Chosen strategy is simple_byte
  9483  001A30  B4D8               	btfsc	status,2,c
  9484  001A32  0012               	return	
  9485  001A34  0A01               	xorlw	1	; case 1
  9486  001A36  E0F3               	bz	i2l187
  9487  001A38  0A03               	xorlw	3	; case 2
  9488  001A3A  E0F3               	bz	i2l189
  9489  001A3C  0A01               	xorlw	1	; case 3
  9490  001A3E  E0F3               	bz	i2l190
  9491  001A40  0A07               	xorlw	7	; case 4
  9492  001A42  E0F3               	bz	i2l191
  9493  001A44  0012               	return		;funcret
  9494  001A46                     __end_of_LED_Off:
  9495                           	opt stack 0
  9496                           tblptru	equ	0xFF8
  9497                           tblptrh	equ	0xFF7
  9498                           tblptrl	equ	0xFF6
  9499                           tablat	equ	0xFF5
  9500                           prodh	equ	0xFF4
  9501                           prodl	equ	0xFF3
  9502                           intcon	equ	0xFF2
  9503                           postinc0	equ	0xFEE
  9504                           wreg	equ	0xFE8
  9505                           indf1	equ	0xFE7
  9506                           postdec1	equ	0xFE5
  9507                           fsr1h	equ	0xFE2
  9508                           fsr1l	equ	0xFE1
  9509                           indf2	equ	0xFDF
  9510                           postinc2	equ	0xFDE
  9511                           postdec2	equ	0xFDD
  9512                           plusw2	equ	0xFDB
  9513                           fsr2h	equ	0xFDA
  9514                           fsr2l	equ	0xFD9
  9515                           status	equ	0xFD8
  9516                           
  9517 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  9518 ;; Defined at:
  9519 ;;		line 53 in file "picLibs/app_device_cdc_basic.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;		None
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;		None
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  1    wreg      void 
  9526 ;; Registers used:
  9527 ;;		wreg, status,2
  9528 ;; Tracked objects:
  9529 ;;		On entry : 3F/0
  9530 ;;		On exit  : 3F/0
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9533 ;;      Params:         0       0       0       0       0
  9534 ;;      Locals:         0       0       0       0       0
  9535 ;;      Temps:          0       0       0       0       0
  9536 ;;      Totals:         0       0       0       0       0
  9537 ;;Total ram usage:        0 bytes
  9538 ;; Hardware stack levels used:    1
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           	psect	text52
  9547  001B6C                     __ptext52:
  9548                           	opt stack 0
  9549  001B6C                     _APP_DeviceCDCBasicDemoInitialize:
  9550                           	opt stack 23
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;app_device_cdc_basic.c: 55: line_coding.bCharFormat = 0;
  9554                           
  9555                           ;incstack = 0
  9556  001B6C  6BAC               	clrf	(_line_coding+4)& (0+255),b
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;app_device_cdc_basic.c: 56: line_coding.bDataBits = 8;
  9560  001B6E  0E08               	movlw	8
  9561  001B70  6FAE               	movwf	(_line_coding+6)& (0+255),b
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;app_device_cdc_basic.c: 57: line_coding.bParityType = 0;
  9565  001B72  6BAD               	clrf	(_line_coding+5)& (0+255),b
  9566                           
  9567                           ;app_device_cdc_basic.c: 58: line_coding.dwDTERate = 9600;
  9568  001B74  0E80               	movlw	128
  9569  001B76  6FA8               	movwf	_line_coding& (0+255),b
  9570  001B78  0E25               	movlw	37
  9571  001B7A  6FA9               	movwf	(_line_coding+1)& (0+255),b
  9572  001B7C  0E00               	movlw	0
  9573  001B7E  6BAA               	clrf	(_line_coding+2)& (0+255),b
  9574  001B80  6BAB               	clrf	(_line_coding+3)& (0+255),b
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;app_device_cdc_basic.c: 60: buttonPressed = 0;
  9578  001B82  6B7F               	clrf	_buttonPressed& (0+255),b
  9579                           
  9580                           ; BSR set to: 0
  9581  001B84  0012               	return		;funcret
  9582  001B86                     __end_of_APP_DeviceCDCBasicDemoInitialize:
  9583                           	opt stack 0
  9584                           tblptru	equ	0xFF8
  9585                           tblptrh	equ	0xFF7
  9586                           tblptrl	equ	0xFF6
  9587                           tablat	equ	0xFF5
  9588                           prodh	equ	0xFF4
  9589                           prodl	equ	0xFF3
  9590                           intcon	equ	0xFF2
  9591                           postinc0	equ	0xFEE
  9592                           wreg	equ	0xFE8
  9593                           indf1	equ	0xFE7
  9594                           postdec1	equ	0xFE5
  9595                           fsr1h	equ	0xFE2
  9596                           fsr1l	equ	0xFE1
  9597                           indf2	equ	0xFDF
  9598                           postinc2	equ	0xFDE
  9599                           postdec2	equ	0xFDD
  9600                           plusw2	equ	0xFDB
  9601                           fsr2h	equ	0xFDA
  9602                           fsr2l	equ	0xFD9
  9603                           status	equ	0xFD8
  9604                           
  9605 ;; *************** function _USBCtrlTrfOutHandler *****************
  9606 ;; Defined at:
  9607 ;;		line 2538 in file "picLibs/usb_device.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;		None
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;		None
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 3F/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9621 ;;      Params:         0       0       0       0       0
  9622 ;;      Locals:         0       0       0       0       0
  9623 ;;      Temps:          0       0       0       0       0
  9624 ;;      Totals:         0       0       0       0       0
  9625 ;;Total ram usage:        0 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    2
  9628 ;; This function calls:
  9629 ;;		_USBCtrlTrfRxService
  9630 ;; This function is called by:
  9631 ;;		_USBCtrlEPService
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text53
  9636  001ADC                     __ptext53:
  9637                           	opt stack 0
  9638  001ADC                     _USBCtrlTrfOutHandler:
  9639                           	opt stack 21
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;incstack = 0
  9646  001ADC  0E02               	movlw	2
  9647  001ADE  1826               	xorwf	_controlTransferState,w,c	;volatile
  9648  001AE0  E102               	bnz	i2l582
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;usb_device.c: 2541: {
  9652                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9653  001AE2  EF56  F006         	goto	_USBCtrlTrfRxService	;wreg free
  9654  001AE6                     i2l582:
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;usb_device.c: 2544: else
  9658                           ;usb_device.c: 2545: {
  9659                           ;usb_device.c: 2548: controlTransferState = 0;
  9660  001AE6  6A26               	clrf	_controlTransferState,c	;volatile
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9664  001AE8  5022               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9665  001AEA  E106               	bnz	i2l584
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;usb_device.c: 2556: {
  9669                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9670                           
  9671                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9675  001AEC  EC47  F008         	call	PL2	;call to abstracted procedure
  9676  001AF0  0E0C               	movlw	12
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9680  001AF2  EC9E  F006         	call	PL12	;call to abstracted procedure
  9681                           
  9682                           ;usb_device.c: 2561: }
  9683  001AF6  0C00               	retlw	0
  9684  001AF8                     i2l584:
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;usb_device.c: 2562: else
  9688                           ;usb_device.c: 2563: {
  9689                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9690  001AF8  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9691  001AFA  0012               	return		;funcret
  9692  001AFC                     __end_of_USBCtrlTrfOutHandler:
  9693                           	opt stack 0
  9694                           tblptru	equ	0xFF8
  9695                           tblptrh	equ	0xFF7
  9696                           tblptrl	equ	0xFF6
  9697                           tablat	equ	0xFF5
  9698                           prodh	equ	0xFF4
  9699                           prodl	equ	0xFF3
  9700                           intcon	equ	0xFF2
  9701                           postinc0	equ	0xFEE
  9702                           wreg	equ	0xFE8
  9703                           indf1	equ	0xFE7
  9704                           postdec1	equ	0xFE5
  9705                           fsr1h	equ	0xFE2
  9706                           fsr1l	equ	0xFE1
  9707                           indf2	equ	0xFDF
  9708                           postinc2	equ	0xFDE
  9709                           postdec2	equ	0xFDD
  9710                           plusw2	equ	0xFDB
  9711                           fsr2h	equ	0xFDA
  9712                           fsr2l	equ	0xFD9
  9713                           status	equ	0xFD8
  9714                           
  9715 ;; *************** function _USBCtrlTrfRxService *****************
  9716 ;; Defined at:
  9717 ;;		line 1852 in file "picLibs/usb_device.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;		None
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;  byteToRead      1    1[COMRAM] unsigned char 
  9722 ;;  i               1    0[COMRAM] unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 3F/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9732 ;;      Params:         0       0       0       0       0
  9733 ;;      Locals:         2       0       0       0       0
  9734 ;;      Temps:          0       0       0       0       0
  9735 ;;      Totals:         2       0       0       0       0
  9736 ;;Total ram usage:        2 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    1
  9739 ;; This function calls:
  9740 ;;		_USBCtrlEPAllowStatusStage
  9741 ;; This function is called by:
  9742 ;;		_USBCtrlTrfOutHandler
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text54
  9747  000CAC                     __ptext54:
  9748                           	opt stack 0
  9749  000CAC                     _USBCtrlTrfRxService:
  9750                           	opt stack 21
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;usb_device.c: 1854: uint8_t byteToRead;
  9754                           ;usb_device.c: 1855: uint8_t i;
  9755                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9756                           
  9757                           ;incstack = 0
  9758  000CAC  EE20 F001          	lfsr	2,1
  9759  000CB0  EC9B  F009         	call	PL72	;call to abstracted procedure
  9760  000CB4  50DF               	movf	indf2,w,c
  9761  000CB6  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9765  000CB8  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9766  000CBA  5C05               	subwf	_outPipes+4,w,c	;volatile
  9767  000CBC  0E00               	movlw	0
  9768  000CBE  5806               	subwfb	_outPipes+5,w,c	;volatile
  9769  000CC0  E202               	bc	i2l3605
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;usb_device.c: 1866: {
  9773                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9774  000CC2  C005  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9775  000CC6                     i2l3605:
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;usb_device.c: 1868: }
  9779                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9780  000CC6  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9781  000CC8  5E05               	subwf	_outPipes+4,f,c	;volatile
  9782  000CCA  0E00               	movlw	0
  9783  000CCC  5A06               	subwfb	_outPipes+5,f,c	;volatile
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9787  000CCE  6A2A               	clrf	USBCtrlTrfRxService@i,c
  9788  000CD0  D007               	goto	i2l3615
  9789  000CD2                     i2l3609:
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;usb_device.c: 1875: {
  9793                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9794  000CD2  0E38               	movlw	56
  9795  000CD4  242A               	addwf	USBCtrlTrfRxService@i,w,c
  9796  000CD6  D844               	call	PL120	;call to abstracted procedure
  9797  000CD8  5001               	movf	_outPipes,w,c	;volatile
  9798  000CDA  D83D               	call	PL118	;call to abstracted procedure
  9799                           
  9800                           ; BSR set to: 0
  9801  000CDC  2A01               	incf	_outPipes,f,c	;volatile
  9802                           
  9803                           ; BSR set to: 0
  9804  000CDE  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  9805  000CE0                     i2l3615:
  9806                           
  9807                           ; BSR set to: 0
  9808  000CE0  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9809  000CE2  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  9810  000CE4  E3F6               	bnc	i2l3609
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;usb_device.c: 1877: }
  9814                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9815  000CE6  5005               	movf	_outPipes+4,w,c	;volatile
  9816  000CE8  1006               	iorwf	_outPipes+5,w,c	;volatile
  9817  000CEA  E014               	bz	i2l3631
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;usb_device.c: 1882: {
  9821                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9822  000CEC  EE20 F001          	lfsr	2,1
  9823  000CF0  D81B               	call	PL4	;call to abstracted procedure
  9824                           
  9825                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9826  000CF2  D81F               	call	PL6	;call to abstracted procedure
  9827  000CF4  D819               	call	PL4	;call to abstracted procedure
  9828  000CF6  0E38               	movlw	56
  9829  000CF8  ECA0  F009         	call	PL74	;call to abstracted procedure
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9833  000CFC  ECAC  F00C         	call	PL38	;call to abstracted procedure
  9834  000D00  BCDF               	btfsc	indf2,6,c
  9835  000D02  D004               	goto	i2l3627
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;usb_device.c: 1886: {
  9839                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9840  000D04  D823               	call	PL14	;call to abstracted procedure
  9841  000D06  0E48               	movlw	72
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9845  000D08  D819               	call	PL12	;call to abstracted procedure
  9846                           
  9847                           ;usb_device.c: 1889: }
  9848  000D0A  0C00               	retlw	0
  9849  000D0C                     i2l3627:
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;usb_device.c: 1890: else
  9853                           ;usb_device.c: 1891: {
  9854                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9855  000D0C  D81F               	call	PL14	;call to abstracted procedure
  9856  000D0E  0E08               	movlw	8
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9860  000D10  D815               	call	PL12	;call to abstracted procedure
  9861  000D12  0C00               	retlw	0
  9862  000D14                     i2l3631:
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;usb_device.c: 1896: else
  9866                           ;usb_device.c: 1897: {
  9867                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9868                           
  9869                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9873  000D14  EC47  F008         	call	PL2	;call to abstracted procedure
  9874  000D18  0E04               	movlw	4
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9878  000D1A  D810               	call	PL12	;call to abstracted procedure
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;usb_device.c: 1926: }
  9882                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;usb_device.c: 1915: {
  9886                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9887  000D1C  9E04               	bcf	_outPipes+3,7,c	;volatile
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9891  000D1E  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9892  000D20  B4D8               	btfsc	status,2,c
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;usb_device.c: 1942: {
  9896                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9897  000D22  EC69  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9898  000D26  0012               	return		;funcret
  9899  000D28                     __end_of_USBCtrlTrfRxService:
  9900                           	opt stack 0
  9901  000D28                     PL4:
  9902                           	opt stack 20
  9903  000D28  5015               	movf	_pBDTEntryEP0OutNext,w,c
  9904  000D2A  26D9               	addwf	fsr2l,f,c
  9905  000D2C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  9906  000D2E  22DA               	addwfc	fsr2h,f,c
  9907  000D30  0012               	return	
  9908  000D32                     __end_ofPL4:
  9909                           	opt stack 0
  9910  000D32                     PL6:
  9911                           	opt stack 20
  9912  000D32  0E08               	movlw	8
  9913  000D34  6EDF               	movwf	indf2,c
  9914  000D36  EE20 F002          	lfsr	2,2
  9915  000D3A  0C08               	retlw	8
  9916  000D3C                     __end_ofPL6:
  9917                           	opt stack 0
  9918  000D3C                     PL12:
  9919                           	opt stack 20
  9920  000D3C  6EDF               	movwf	indf2,c
  9921  000D3E  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9922  000D42  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9923  000D46  0E00               	movlw	0
  9924  000D48  8EDB               	bsf	plusw2,7,c
  9925  000D4A  0C00               	retlw	0
  9926  000D4C                     __end_ofPL12:
  9927                           	opt stack 0
  9928  000D4C                     PL14:
  9929                           	opt stack 17
  9930  000D4C  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9931  000D50  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9932  000D54  0012               	return	
  9933  000D56                     __end_ofPL14:
  9934                           	opt stack 0
  9935  000D56                     PL118:
  9936                           	opt stack 18
  9937  000D56  6EE1               	movwf	fsr1l,c
  9938  000D58  6AE2               	clrf	fsr1h,c
  9939  000D5A  CFDF FFE7          	movff	indf2,indf1
  9940  000D5E  0012               	return	
  9941  000D60                     __end_ofPL118:
  9942                           	opt stack 0
  9943  000D60                     PL120:
  9944                           	opt stack 18
  9945  000D60  6ED9               	movwf	fsr2l,c
  9946  000D62  6ADA               	clrf	fsr2h,c
  9947  000D64  0E02               	movlw	2
  9948  000D66  22DA               	addwfc	fsr2h,f,c
  9949  000D68  0C02               	retlw	2
  9950  000D6A                     __end_ofPL120:
  9951                           	opt stack 0
  9952                           tblptru	equ	0xFF8
  9953                           tblptrh	equ	0xFF7
  9954                           tblptrl	equ	0xFF6
  9955                           tablat	equ	0xFF5
  9956                           prodh	equ	0xFF4
  9957                           prodl	equ	0xFF3
  9958                           intcon	equ	0xFF2
  9959                           postinc0	equ	0xFEE
  9960                           wreg	equ	0xFE8
  9961                           indf1	equ	0xFE7
  9962                           postdec1	equ	0xFE5
  9963                           fsr1h	equ	0xFE2
  9964                           fsr1l	equ	0xFE1
  9965                           indf2	equ	0xFDF
  9966                           postinc2	equ	0xFDE
  9967                           postdec2	equ	0xFDD
  9968                           plusw2	equ	0xFDB
  9969                           fsr2h	equ	0xFDA
  9970                           fsr2l	equ	0xFD9
  9971                           status	equ	0xFD8
  9972                           
  9973 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9974 ;; Defined at:
  9975 ;;		line 1416 in file "picLibs/usb_device.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;		None
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;		None
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  1    wreg      void 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9989 ;;      Params:         0       0       0       0       0
  9990 ;;      Locals:         0       0       0       0       0
  9991 ;;      Temps:          0       0       0       0       0
  9992 ;;      Totals:         0       0       0       0       0
  9993 ;;Total ram usage:        0 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_USBDeviceTasks
  9999 ;;		_USBCtrlEPServiceComplete
 10000 ;;		_USBCtrlTrfRxService
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           	psect	text55
 10005  0012D2                     __ptext55:
 10006                           	opt stack 0
 10007  0012D2                     _USBCtrlEPAllowStatusStage:
 10008                           	opt stack 21
 10009                           
 10010                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 10011                           
 10012                           ;incstack = 0
 10013  0012D2  501F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 10014  0012D4  A4D8               	btfss	status,2,c
 10015  0012D6  0012               	return	
 10016                           
 10017                           ;usb_device.c: 1424: {
 10018                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 10019  0012D8  0E01               	movlw	1
 10020  0012DA  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 10021                           
 10022                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 10023  0012DC  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 10024  0012DE  A4D8               	btfss	status,2,c
 10025  0012E0  0012               	return	
 10026                           
 10027                           ;usb_device.c: 1427: {
 10028                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 10029  0012E2  0E01               	movlw	1
 10030  0012E4  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 10031                           
 10032                           ;usb_device.c: 1432: if(controlTransferState == 2)
 10033  0012E6  0E02               	movlw	2
 10034  0012E8  1826               	xorwf	_controlTransferState,w,c	;volatile
 10035  0012EA  E10A               	bnz	i2l3331
 10036                           
 10037                           ;usb_device.c: 1433: {
 10038                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 10039  0012EC  EE20 F001          	lfsr	2,1
 10040  0012F0  ECB3  F007         	call	PL76	;call to abstracted procedure
 10041  0012F4  6ADF               	clrf	indf2,c
 10042                           
 10043                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10044  0012F6  ECDB  F008         	call	PL18	;call to abstracted procedure
 10045  0012FA  0E48               	movlw	72
 10046                           
 10047                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10048                           
 10049                           ;usb_device.c: 1437: }
 10050  0012FC  EFD3  F008         	goto	PL10	;call to abstracted procedure
 10051  001300                     i2l3331:
 10052                           
 10053                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 10054  001300  0426               	decf	_controlTransferState,w,c	;volatile
 10055  001302  A4D8               	btfss	status,2,c
 10056  001304  0012               	return	
 10057                           
 10058                           ;usb_device.c: 1439: {
 10059                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 10060  001306  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
 10061                           
 10062                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 10063  001308  EE20 F001          	lfsr	2,1
 10064  00130C  D814               	call	PL72	;call to abstracted procedure
 10065                           
 10066                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 10067  00130E  EC99  F006         	call	PL6	;call to abstracted procedure
 10068  001312  D811               	call	PL72	;call to abstracted procedure
 10069  001314  0E30               	movlw	48
 10070  001316  D814               	call	PL74	;call to abstracted procedure
 10071                           
 10072                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10073  001318  ECAC  F00C         	call	PL38	;call to abstracted procedure
 10074  00131C  0E04               	movlw	4
 10075  00131E  6EDF               	movwf	indf2,c
 10076                           
 10077                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10078  001320  ECAC  F00C         	call	PL38	;call to abstracted procedure
 10079  001324  0E00               	movlw	0
 10080  001326  8EDB               	bsf	plusw2,7,c
 10081                           
 10082                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 10083  001328  0E01               	movlw	1
 10084  00132A  6E22               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 10085                           
 10086                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 10087                           
 10088                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10089                           
 10090                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10091  00132C  EC47  F008         	call	PL2	;call to abstracted procedure
 10092  001330  0E80               	movlw	128
 10093  001332  6EDF               	movwf	indf2,c
 10094  001334  0C80               	retlw	128
 10095  001336                     __end_of_USBCtrlEPAllowStatusStage:
 10096                           	opt stack 0
 10097  001336                     PL72:
 10098                           	opt stack 17
 10099  001336  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 10100  001338  26D9               	addwf	fsr2l,f,c
 10101  00133A  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10102  00133C  22DA               	addwfc	fsr2h,f,c
 10103  00133E  0012               	return	
 10104  001340                     __end_ofPL72:
 10105                           	opt stack 0
 10106  001340                     PL74:
 10107                           	opt stack 21
 10108  001340  6EDE               	movwf	postinc2,c
 10109  001342  0E02               	movlw	2
 10110  001344  6EDD               	movwf	postdec2,c
 10111  001346  0C02               	retlw	2
 10112  001348                     __end_ofPL74:
 10113                           	opt stack 0
 10114                           tblptru	equ	0xFF8
 10115                           tblptrh	equ	0xFF7
 10116                           tblptrl	equ	0xFF6
 10117                           tablat	equ	0xFF5
 10118                           prodh	equ	0xFF4
 10119                           prodl	equ	0xFF3
 10120                           intcon	equ	0xFF2
 10121                           postinc0	equ	0xFEE
 10122                           wreg	equ	0xFE8
 10123                           indf1	equ	0xFE7
 10124                           postdec1	equ	0xFE5
 10125                           fsr1h	equ	0xFE2
 10126                           fsr1l	equ	0xFE1
 10127                           indf2	equ	0xFDF
 10128                           postinc2	equ	0xFDE
 10129                           postdec2	equ	0xFDD
 10130                           plusw2	equ	0xFDB
 10131                           fsr2h	equ	0xFDA
 10132                           fsr2l	equ	0xFD9
 10133                           status	equ	0xFD8
 10134                           
 10135 ;; *************** function _USBCtrlTrfInHandler *****************
 10136 ;; Defined at:
 10137 ;;		line 2592 in file "picLibs/usb_device.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;		None
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  lastDTS         1    1[COMRAM] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      void 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 3F/0
 10148 ;;		On exit  : 3F/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
 10151 ;;      Params:         0       0       0       0       0
 10152 ;;      Locals:         1       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0
 10154 ;;      Totals:         1       0       0       0       0
 10155 ;;Total ram usage:        1 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    1
 10158 ;; This function calls:
 10159 ;;		_USBCtrlTrfTxService
 10160 ;; This function is called by:
 10161 ;;		_USBCtrlEPService
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           	psect	text56
 10166  00114C                     __ptext56:
 10167                           	opt stack 0
 10168  00114C                     _USBCtrlTrfInHandler:
 10169                           	opt stack 0
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;usb_device.c: 2594: uint8_t lastDTS;
 10173                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 10174                           
 10175                           ;incstack = 0
 10176  00114C  D834               	call	PL18	;call to abstracted procedure
 10177  00114E  0E00               	movlw	0
 10178  001150  BCDF               	btfsc	indf2,6,c
 10179  001152  0E01               	movlw	1
 10180  001154  6E2B               	movwf	USBCtrlTrfInHandler@lastDTS,c
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10184  001156  0E04               	movlw	4
 10185  001158  1A0F               	xorwf	_pBDTEntryIn,f,c
 10186  00115A  5010               	movf	_pBDTEntryIn+1,w,c
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 10190  00115C  0E08               	movlw	8
 10191  00115E  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 10192  001160  E10B               	bnz	i2l3813
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;usb_device.c: 2605: {
 10196                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 10197  001162  0102               	movlb	2	; () banked
 10198  001164  5132               	movf	50,w,b	;volatile
 10199  001166  0B7F               	andlw	127
 10200  001168  010F               	movlb	15	; () banked
 10201  00116A  6F5C               	movwf	92,b	;volatile
 10202                           
 10203                           ; BSR set to: 15
 10204                           ;usb_device.c: 2607: if(UADDR != 0u)
 10205  00116C  515C               	movf	92,w,b
 10206                           
 10207                           ; BSR set to: 15
 10208                           ;usb_device.c: 2608: {
 10209                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 10210  00116E  0E10               	movlw	16
 10211  001170  B4D8               	btfsc	status,2,c
 10212                           
 10213                           ; BSR set to: 15
 10214                           ;usb_device.c: 2611: else
 10215                           ;usb_device.c: 2612: {
 10216                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 10217  001172  0E04               	movlw	4
 10218                           
 10219                           ;usb_device.c: 2610: }
 10220  001174  0100               	movlb	0	; () banked
 10221  001176  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
 10222  001178                     i2l3813:
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;usb_device.c: 2614: }
 10226                           ;usb_device.c: 2615: }
 10227                           ;usb_device.c: 2618: if(controlTransferState == 1)
 10228  001178  0426               	decf	_controlTransferState,w,c	;volatile
 10229  00117A  E111               	bnz	i2l592
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;usb_device.c: 2619: {
 10233                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 10234  00117C  D821               	call	PL46	;call to abstracted procedure
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10238  00117E  EC6C  F007         	call	_USBCtrlTrfTxService	;wreg free
 10239                           
 10240                           ; BSR set to: 0
 10241                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10242  001182  0E02               	movlw	2
 10243  001184  1827               	xorwf	_shortPacketStatus,w,c	;volatile
 10244  001186  E103               	bnz	i2l3825
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;usb_device.c: 2628: {
 10248                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10249  001188  D816               	call	PL18	;call to abstracted procedure
 10250  00118A  0E04               	movlw	4
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10254                           
 10255                           ;usb_device.c: 2633: }
 10256  00118C  D00C               	goto	PL10	;call to abstracted procedure
 10257  00118E                     i2l3825:
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;usb_device.c: 2634: else
 10261                           ;usb_device.c: 2635: {
 10262                           ;usb_device.c: 2636: if(lastDTS == 0)
 10263  00118E  502B               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10264  001190  E103               	bnz	i2l3831
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;usb_device.c: 2637: {
 10268                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10269  001192  D811               	call	PL18	;call to abstracted procedure
 10270  001194  0E48               	movlw	72
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10274                           
 10275                           ;usb_device.c: 2640: }
 10276  001196  D007               	goto	PL10	;call to abstracted procedure
 10277  001198                     i2l3831:
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;usb_device.c: 2641: else
 10281                           ;usb_device.c: 2642: {
 10282                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10283  001198  D80E               	call	PL18	;call to abstracted procedure
 10284  00119A  0E08               	movlw	8
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10288  00119C  D004               	goto	PL10	;call to abstracted procedure
 10289  00119E                     i2l592:
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;usb_device.c: 2648: else
 10293                           ;usb_device.c: 2649: {
 10294                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10295  00119E  BE04               	btfsc	_outPipes+3,7,c	;volatile
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;usb_device.c: 2658: }
 10299                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;usb_device.c: 2656: {
 10303                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10304  0011A0  9E04               	bcf	_outPipes+3,7,c	;volatile
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;usb_device.c: 2660: }
 10308                           ;usb_device.c: 2662: controlTransferState = 0;
 10309  0011A2  6A26               	clrf	_controlTransferState,c	;volatile
 10310                           
 10311                           ; BSR set to: 0
 10312  0011A4  0012               	return		;funcret
 10313  0011A6                     __end_of_USBCtrlTrfInHandler:
 10314                           	opt stack 0
 10315  0011A6                     PL10:
 10316                           	opt stack 20
 10317  0011A6  6EDF               	movwf	indf2,c
 10318  0011A8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10319  0011AC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10320  0011B0  0E00               	movlw	0
 10321  0011B2  8EDB               	bsf	plusw2,7,c
 10322  0011B4  0C00               	retlw	0
 10323  0011B6                     __end_ofPL10:
 10324                           	opt stack 0
 10325  0011B6                     PL18:
 10326                           	opt stack 24
 10327  0011B6  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10328  0011BA  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10329  0011BE  0012               	return	
 10330  0011C0                     __end_ofPL18:
 10331                           	opt stack 0
 10332  0011C0                     PL46:
 10333                           	opt stack 20
 10334  0011C0  EE20 F002          	lfsr	2,2
 10335  0011C4  500F               	movf	_pBDTEntryIn,w,c
 10336  0011C6  26D9               	addwf	fsr2l,f,c
 10337  0011C8  5010               	movf	_pBDTEntryIn+1,w,c
 10338  0011CA  22DA               	addwfc	fsr2h,f,c
 10339  0011CC  0E38               	movlw	56
 10340  0011CE  6EDE               	movwf	postinc2,c
 10341  0011D0  0E02               	movlw	2
 10342  0011D2  6EDD               	movwf	postdec2,c
 10343  0011D4  0C02               	retlw	2
 10344  0011D6                     __end_ofPL46:
 10345                           	opt stack 0
 10346                           tblptru	equ	0xFF8
 10347                           tblptrh	equ	0xFF7
 10348                           tblptrl	equ	0xFF6
 10349                           tablat	equ	0xFF5
 10350                           prodh	equ	0xFF4
 10351                           prodl	equ	0xFF3
 10352                           intcon	equ	0xFF2
 10353                           postinc0	equ	0xFEE
 10354                           wreg	equ	0xFE8
 10355                           indf1	equ	0xFE7
 10356                           postdec1	equ	0xFE5
 10357                           fsr1h	equ	0xFE2
 10358                           fsr1l	equ	0xFE1
 10359                           indf2	equ	0xFDF
 10360                           postinc2	equ	0xFDE
 10361                           postdec2	equ	0xFDD
 10362                           plusw2	equ	0xFDB
 10363                           fsr2h	equ	0xFDA
 10364                           fsr2l	equ	0xFD9
 10365                           status	equ	0xFD8
 10366                           
 10367 ;; *************** function _USBCtrlTrfTxService *****************
 10368 ;; Defined at:
 10369 ;;		line 1771 in file "picLibs/usb_device.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  1    wreg      void 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10378 ;; Tracked objects:
 10379 ;;		On entry : 3D/2
 10380 ;;		On exit  : 3F/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
 10383 ;;      Params:         0       0       0       0       0
 10384 ;;      Locals:         1       0       0       0       0
 10385 ;;      Temps:          0       0       0       0       0
 10386 ;;      Totals:         1       0       0       0       0
 10387 ;;Total ram usage:        1 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; This function calls:
 10390 ;;		Nothing
 10391 ;; This function is called by:
 10392 ;;		_USBCtrlEPAllowDataStage
 10393 ;;		_USBCtrlTrfInHandler
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           	psect	text57
 10398  000ED8                     __ptext57:
 10399                           	opt stack 0
 10400  000ED8                     _USBCtrlTrfTxService:
 10401                           	opt stack 20
 10402                           
 10403                           ;usb_device.c: 1773: uint8_t byteToSend;
 10404                           ;usb_device.c: 1777: byteToSend = 8;
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;incstack = 0
 10408  000ED8  0E08               	movlw	8
 10409  000EDA  6E2A               	movwf	USBCtrlTrfTxService@byteToSend,c
 10410                           
 10411                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10412  000EDC  500E               	movf	_inPipes+5,w,c	;volatile
 10413  000EDE  E10D               	bnz	i2l3279
 10414  000EE0  0E08               	movlw	8
 10415  000EE2  5C0D               	subwf	_inPipes+4,w,c	;volatile
 10416  000EE4  E20A               	bc	i2l3279
 10417                           
 10418                           ;usb_device.c: 1779: {
 10419                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10420  000EE6  C00D  F02A         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10421                           
 10422                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10423  000EEA  5027               	movf	_shortPacketStatus,w,c	;volatile
 10424  000EEC  E102               	bnz	i2l3275
 10425                           
 10426                           ;usb_device.c: 1788: {
 10427                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10428  000EEE  0E01               	movlw	1
 10429  000EF0  D003               	goto	L17
 10430  000EF2                     i2l3275:
 10431                           
 10432                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10433  000EF2  0427               	decf	_shortPacketStatus,w,c	;volatile
 10434  000EF4  E102               	bnz	i2l3279
 10435                           
 10436                           ;usb_device.c: 1792: {
 10437                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10438  000EF6  0E02               	movlw	2
 10439  000EF8                     L17:
 10440  000EF8  6E27               	movwf	_shortPacketStatus,c	;volatile
 10441  000EFA                     i2l3279:
 10442                           
 10443                           ;usb_device.c: 1794: }
 10444                           ;usb_device.c: 1795: }
 10445                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10446  000EFA  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10447  000EFC  5E0D               	subwf	_inPipes+4,f,c	;volatile
 10448  000EFE  0E00               	movlw	0
 10449  000F00  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 10450                           
 10451                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10452  000F02  EE20 F001          	lfsr	2,1
 10453  000F06  D82F               	call	PL76	;call to abstracted procedure
 10454  000F08  C02A  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10455                           
 10456                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10457  000F0C  0E38               	movlw	56
 10458  000F0E  0100               	movlb	0	; () banked
 10459  000F10  6F7A               	movwf	_pDst& (0+255),b
 10460  000F12  0E02               	movlw	2
 10461  000F14  6F7B               	movwf	(_pDst+1)& (0+255),b
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10465  000F16  B00C               	btfsc	_inPipes+3,0,c	;volatile
 10466  000F18  D01A               	goto	i2l3307
 10467  000F1A  D00B               	goto	i2l3297
 10468  000F1C                     i2l3289:
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;usb_device.c: 1812: {
 10472                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10473  000F1C  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10474  000F20  D819               	call	PL62	;call to abstracted procedure
 10475  000F22  64F7               	cpfsgt	tblptrh,c
 10476  000F24  D003               	bra	i2u198_47
 10477  000F26  0008               	tblrd		*
 10478  000F28  50F5               	movf	tablat,w,c
 10479  000F2A  D002               	bra	i2u198_40
 10480  000F2C                     i2u198_47:
 10481  000F2C  EC10  F005         	call	PL34	;call to abstracted procedure
 10482  000F30                     i2u198_40:
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;usb_device.c: 1814: byteToSend--;
 10486  000F30  D81F               	call	PL78	;call to abstracted procedure
 10487  000F32                     i2l3297:
 10488                           
 10489                           ; BSR set to: 0
 10490  000F32  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10491  000F34  E1F3               	bnz	i2l3289
 10492  000F36  0012               	return	
 10493  000F38                     i2l3299:
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;usb_device.c: 1820: {
 10497                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10498  000F38  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10499  000F3C  D80B               	call	PL62	;call to abstracted procedure
 10500  000F3E  64F7               	cpfsgt	tblptrh,c
 10501  000F40  D003               	bra	i2u200_47
 10502  000F42  0008               	tblrd		*
 10503  000F44  50F5               	movf	tablat,w,c
 10504  000F46  D002               	bra	i2u200_40
 10505  000F48                     i2u200_47:
 10506  000F48  EC10  F005         	call	PL34	;call to abstracted procedure
 10507  000F4C                     i2u200_40:
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;usb_device.c: 1822: byteToSend--;
 10511  000F4C  D811               	call	PL78	;call to abstracted procedure
 10512  000F4E                     i2l3307:
 10513                           
 10514                           ; BSR set to: 0
 10515  000F4E  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10516  000F50  E1F3               	bnz	i2l3299
 10517                           
 10518                           ; BSR set to: 0
 10519  000F52  0012               	return		;funcret
 10520  000F54                     __end_of_USBCtrlTrfTxService:
 10521                           	opt stack 0
 10522  000F54                     PL62:
 10523                           	opt stack 20
 10524  000F54  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10525  000F58  6AF8               	clrf	tblptru,c
 10526  000F5A  C07A  FFD9         	movff	_pDst,fsr2l
 10527  000F5E  C07B  FFDA         	movff	_pDst+1,fsr2h
 10528  000F62  0E02               	movlw	(high __ramtop+-1)
 10529  000F64  0012               	return	
 10530  000F66                     __end_ofPL62:
 10531                           	opt stack 0
 10532  000F66                     PL76:
 10533                           	opt stack 21
 10534  000F66  500F               	movf	_pBDTEntryIn,w,c
 10535  000F68  26D9               	addwf	fsr2l,f,c
 10536  000F6A  5010               	movf	_pBDTEntryIn+1,w,c
 10537  000F6C  22DA               	addwfc	fsr2h,f,c
 10538  000F6E  0012               	return	
 10539  000F70                     __end_ofPL76:
 10540                           	opt stack 0
 10541  000F70                     PL78:
 10542                           	opt stack 20
 10543  000F70  6EDF               	movwf	indf2,c
 10544  000F72  4A09               	infsnz	_inPipes,f,c	;volatile
 10545  000F74  2A0A               	incf	_inPipes+1,f,c	;volatile
 10546  000F76  0100               	movlb	0	; () banked
 10547  000F78  4B7A               	infsnz	_pDst& (0+255),f,b
 10548  000F7A  2B7B               	incf	(_pDst+1)& (0+255),f,b
 10549  000F7C  062A               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10550  000F7E  0012               	return	
 10551  000F80                     __end_ofPL78:
 10552                           	opt stack 0
 10553                           tblptru	equ	0xFF8
 10554                           tblptrh	equ	0xFF7
 10555                           tblptrl	equ	0xFF6
 10556                           tablat	equ	0xFF5
 10557                           prodh	equ	0xFF4
 10558                           prodl	equ	0xFF3
 10559                           intcon	equ	0xFF2
 10560                           postinc0	equ	0xFEE
 10561                           wreg	equ	0xFE8
 10562                           indf1	equ	0xFE7
 10563                           postdec1	equ	0xFE5
 10564                           fsr1h	equ	0xFE2
 10565                           fsr1l	equ	0xFE1
 10566                           indf2	equ	0xFDF
 10567                           postinc2	equ	0xFDE
 10568                           postdec2	equ	0xFDD
 10569                           plusw2	equ	0xFDB
 10570                           fsr2h	equ	0xFDA
 10571                           fsr2l	equ	0xFD9
 10572                           status	equ	0xFD8
 10573                           tblptru	equ	0xFF8
 10574                           tblptrh	equ	0xFF7
 10575                           tblptrl	equ	0xFF6
 10576                           tablat	equ	0xFF5
 10577                           prodh	equ	0xFF4
 10578                           prodl	equ	0xFF3
 10579                           intcon	equ	0xFF2
 10580                           postinc0	equ	0xFEE
 10581                           wreg	equ	0xFE8
 10582                           indf1	equ	0xFE7
 10583                           postdec1	equ	0xFE5
 10584                           fsr1h	equ	0xFE2
 10585                           fsr1l	equ	0xFE1
 10586                           indf2	equ	0xFDF
 10587                           postinc2	equ	0xFDE
 10588                           postdec2	equ	0xFDD
 10589                           plusw2	equ	0xFDB
 10590                           fsr2h	equ	0xFDA
 10591                           fsr2l	equ	0xFD9
 10592                           status	equ	0xFD8
 10593                           
 10594                           	psect	rparam
 10595  0000                     tblptru	equ	0xFF8
 10596                           tblptrh	equ	0xFF7
 10597                           tblptrl	equ	0xFF6
 10598                           tablat	equ	0xFF5
 10599                           prodh	equ	0xFF4
 10600                           prodl	equ	0xFF3
 10601                           intcon	equ	0xFF2
 10602                           postinc0	equ	0xFEE
 10603                           wreg	equ	0xFE8
 10604                           indf1	equ	0xFE7
 10605                           postdec1	equ	0xFE5
 10606                           fsr1h	equ	0xFE2
 10607                           fsr1l	equ	0xFE1
 10608                           indf2	equ	0xFDF
 10609                           postinc2	equ	0xFDE
 10610                           postdec2	equ	0xFDD
 10611                           plusw2	equ	0xFDB
 10612                           fsr2h	equ	0xFDA
 10613                           fsr2l	equ	0xFD9
 10614                           status	equ	0xFD8
 10615                           
 10616                           	psect	temp
 10617  000052                     btemp:
 10618                           	opt stack 0
 10619  000052                     	ds	1
 10620  0000                     int$flags	set	btemp
 10621                           tblptru	equ	0xFF8
 10622                           tblptrh	equ	0xFF7
 10623                           tblptrl	equ	0xFF6
 10624                           tablat	equ	0xFF5
 10625                           prodh	equ	0xFF4
 10626                           prodl	equ	0xFF3
 10627                           intcon	equ	0xFF2
 10628                           postinc0	equ	0xFEE
 10629                           wreg	equ	0xFE8
 10630                           indf1	equ	0xFE7
 10631                           postdec1	equ	0xFE5
 10632                           fsr1h	equ	0xFE2
 10633                           fsr1l	equ	0xFE1
 10634                           indf2	equ	0xFDF
 10635                           postinc2	equ	0xFDE
 10636                           postdec2	equ	0xFDD
 10637                           plusw2	equ	0xFDB
 10638                           fsr2h	equ	0xFDA
 10639                           fsr2l	equ	0xFD9
 10640                           status	equ	0xFD8
 10641                           tblptru	equ	0xFF8
 10642                           tblptrh	equ	0xFF7
 10643                           tblptrl	equ	0xFF6
 10644                           tablat	equ	0xFF5
 10645                           prodh	equ	0xFF4
 10646                           prodl	equ	0xFF3
 10647                           intcon	equ	0xFF2
 10648                           postinc0	equ	0xFEE
 10649                           wreg	equ	0xFE8
 10650                           indf1	equ	0xFE7
 10651                           postdec1	equ	0xFE5
 10652                           fsr1h	equ	0xFE2
 10653                           fsr1l	equ	0xFE1
 10654                           indf2	equ	0xFDF
 10655                           postinc2	equ	0xFDE
 10656                           postdec2	equ	0xFDD
 10657                           plusw2	equ	0xFDB
 10658                           fsr2h	equ	0xFDA
 10659                           fsr2l	equ	0xFD9
 10660                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    197
    Data        18
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      81
    BANK0           160     36     135
    BANK1           256      0       0
    BANK2l           49      0       0
    BANK2h          113      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[767]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[767]), SetupPkt(BIGRAMhl[8]), 

    putrsUSBUSART@data	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK0[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK0[18]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 15
		 -> writeBuffer(BANK0[15]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 15
		 -> readBuffer(BANK0[15]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3955_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3955_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3955_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3955_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 15
		 -> cdc_data_tx(BIGRAMhl[15]), cdc_data_rx(BIGRAMhl[15]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2273$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2263$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2263$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2239$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2239$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2239$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2239$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_APP_DeviceCDCBasicDemoTasks
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_PIC18F26K40_readThreeBytes
    _getsUSBUSART->_USBTransferOnePacket
    _PIC18F26K40_readThreeBytes->_PIC18F26K40_sendByte
    _PIC18F26K40_loadPC->_PIC18F26K40_sendByte
    _PIC18F26K40_loadDataIntoNVM->_PIC18F26K40_sendByteMsbToLsb
    _PIC18F26K40_enterLowVoltageProg->_PIC18F26K40_sendByte
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2l

    None.

Critical Paths under _SYS_InterruptHigh in BANK2l

    None.

Critical Paths under _main in BANK2h

    None.

Critical Paths under _SYS_InterruptHigh in BANK2h

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15566
                                             34 BANK0      2     2      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK0      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                         11    11      0   14139
                                             24 BANK0     10    10      0
                   _BUTTON_IsPressed
                       _CDCTxService
    _PIC18F26K40_enterLowVoltageProg
     _PIC18F26K40_exitLowVoltageProg
        _PIC18F26K40_loadDataIntoNVM
                 _PIC18F26K40_loadPC
         _PIC18F26K40_readThreeBytes
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        3     2      1     268
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          2     0      2     270
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         3     1      2    2232
                                              9 BANK0      3     1      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_readThreeBytes                          18    14      4    2055
                                              6 BANK0     18    14      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadPC                                   8     4      4    2271
                                              6 BANK0      8     4      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadDataIntoNVM                         11     5      6    1576
                                              4 BANK0     11     5      6
       _PIC18F26K40_sendByteMsbToLsb
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByteMsbToLsb                         4     4      0     130
                                              0 BANK0      4     4      0
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_exitLowVoltageProg                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_enterLowVoltageProg                      4     4      0    1405
                                              6 BANK0      4     4      0
               _PIC18F26K40_sendByte
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByte                                 6     5      1    1269
                                              0 BANK0      6     5      1
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (4) _PIC18F26K40_setTrisToOut                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2129
                                              9 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1928
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SYS_InterruptHigh                                   10    10      0   30325
                                             30 COMRAM    10    10      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       1     1      0   30325
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     1     1      0   17702
                                             28 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               0     0      0   17063
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   12982
                                             27 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 1     1      0    4487
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    4460
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3989
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                          _CDCInitEP
                 _USBCheckCDCRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (8) i2_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (9) i2_LED_Enable                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_BUTTON_Enable                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i2_USBTransferOnePacket                               9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (8) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (9) _LED_On                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _LED_Off                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _PIC18F26K40_enterLowVoltageProg
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
       _PIC18F26K40_setTrisToOut
     _PIC18F26K40_exitLowVoltageProg
     _PIC18F26K40_loadDataIntoNVM
       _PIC18F26K40_sendByteMsbToLsb
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_loadPC
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_readThreeBytes
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            1FF      0       0      14        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     24      87       4       84.4%
BIGRAMhh            71      0       0      12        0.0%
BITBANK2h           71      0       0       9        0.0%
BANK2h              71      0       0      10        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      51       1       86.2%
BIGRAMhl            31      0       0      13        0.0%
BITBANK2l           31      0       0      11        0.0%
BANK2l              31      0       0       7        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8       8        0.0%
DATA                 0      0      D8      15        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 30 09:24:47 2017

                               _USB_SD_Ptr 0301                                         PL2 108E  
                                       PL4 0D28                                         PL6 0D32  
                                       PL8 05AA                                         l28 161A  
                                       l29 161C                                         l55 16EC  
                                       l57 1714                                         l58 1716  
                              ?_LED_Enable 002A                              _USBDeviceInit 1572  
                       __size_of_CDCInitEP 0052                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                                        PL10 11A6  
                                      PL20 0926                                        PL12 0D3C  
                                      PL30 0B00                                        PL22 05BC  
                                      PL14 0D4C                                        PL40 18EA  
                                      PL32 0C6C                                        PL24 0766  
                                      PL16 08F4                                        PL50 1AB0  
                                      PL42 0A2C                                        PL34 0A20  
                                      PL26 05CE                                        PL18 11B6  
                                      PL60 0C84                                        PL52 0A44  
                                      PL44 094E                                        PL36 0C78  
                                      PL28 05DA                                        PL70 07A2  
                                      PL62 0F54                                        PL54 1004  
                                      PL46 11C0                                        PL38 1958  
                              __CFG_LVP$ON 000000                                        PL80 1140  
                                      PL72 1336                                        PL64 0602  
                                      PL56 0DEA                                        PL48 0770  
                                      PL90 0C98                                        PL82 14FA  
                                      PL74 1340                                        PL66 0786  
                                      PL58 05EE                                        PL92 0972  
                                      PL84 12BA                                        PL76 0F66  
                                      PL68 0798                                        PL94 0E06  
                                      PL86 0966                                        PL78 0F70  
                                      PL96 0E0E                                        PL88 0DFE  
                                      PL98 08A2       USER_USB_CALLBACK_EVENT_HANDLER@event 0036  
     USER_USB_CALLBACK_EVENT_HANDLER@pdata 0038                                        l101 03D2  
                                      l120 04FE                                        l104 03F6  
                                      l121 0500                                        l122 051A  
                                      l123 051C                                        l115 04BC  
                                      l220 19A0                                        l125 0566  
                                      l221 19A4                                        l119 04C6  
                                      l217 1998                                        l219 199C  
              __end_of_USBStdGetDscHandler 0A20                                        l159 1B56  
                                      l456 18DE                                        l457 18DC  
                                      l760 0AAE                                        l746 1904  
                                      _BDT 000200                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                                        _UIE 000F60  
                                      _UIR 000F62                     _APP_LEDUpdateUSBStatus 142A  
                               _USBSuspend 1A9A                               __CFG_BORV$30 000000  
                     USBStdSetCfgHandler@i 003E                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 07AC  
                           _USBDeviceState 0081                               __CFG_FOSC$XT 000000  
                            _BUTTON_Enable 1BC8                      ??_USBCtrlTrfRxService 002A  
                 __size_ofi2_USBDeviceInit 0048                             ??_getsUSBUSART 00BC  
                                     PL100 097C                                       PL110 0E18  
                                     PL102 1018                                       PL120 0D60  
                                     PL112 1B12                                       PL104 17BC  
                                     PL122 1BC2                                       PL114 12C8  
                                     PL106 0B1C                                       PL116 0CA2  
                                     PL108 13B0                                       PL118 0D56  
                 USBEnableEndpoint@options 0032                            __end_of_LED_Off 1A46  
                                     l5003 0418                 USBConfigureEndpoint@handle 0030  
                                     l5111 0598                                       l5017 043A  
                                     l5121 1B2C                                       l5043 0472  
                                     l5019 0440                                       l5109 0570  
                                     l5117 1B20                                       l5223 1974  
                                     l5145 0930                                       l5139 1596  
                                     l5069 04C0                                       l5169 15AA  
                                     l4643 15EC                                       l4811 0ECC  
                                     l4731 0B40                                       l4821 1B5C  
                                     l4645 15F2                                       l4903 0A78  
                                     l4639 15E2                                       l4743 0B54  
                                     l4913 0AA0                                       l4729 0B38  
                                     l4683 0C18                                       l4907 0A80  
                                     l4747 0B5E                                       l4843 191C  
                                     l4835 190A                                       l4677 0BFA  
                                     l4757 0BAE                                       l4749 0B64  
                                     l4695 0C4E                                       l4927 0AC8  
                                     l4935 0ACA                                       l4919 0AB2  
                                     l4791 0E48                                       l4863 14BC  
                                     l4937 0AD0                                       l4945 0AD2  
                                     l4865 14C0                                       l4873 14F6  
                                     l4955 0AE6                                       l4947 0AD6  
                                     l4795 0E6A                                       l4859 14AE  
                                     l4957 0AFC                                       l4789 0E42  
                                     l4869 14D2                                       l4973 1A50  
                                     l4799 0E82                                       l4889 1B9A  
                                     l4969 19A8                                       l4977 1A60  
                                     l4899 0A70                                       l4995 03F8  
                    ??i2_SYSTEM_Initialize 002B                                       u4107 0E78  
                                     u4117 0E90                                       u4127 0E9C  
                                     u4137 0EB4                                       u4147 0EC0  
                                     u4157 1740                                       u3544 160C  
                                     u3545 1608                                       u4097 1984  
                                     u3574 1706                                       u3575 1702  
                                     u3664 0B86                                       u3665 0B80  
                    ??_USBCtrlTrfTxService 002A                                       _UCFG 000F61  
                                     _UEP0 000F53                                       _UEP1 000F54  
                                     _UEIE 000F5B                                       _UCON 000F64  
                                     _UEIR 000F5F                            _CDCDataInHandle 0076  
   USBStdFeatureReqHandler@current_ep_data 0042                                       _pDst 007A  
                                     _main 1962                   ??i2_USBTransferOnePacket 002E  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                          _USBDeviceAttach 18C6                                       btemp 0052  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0062                   __size_ofi2_BUTTON_Enable 0006  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 1140  
                   ??_USBCtrlTrfOutHandler 002C                               ___param_bank 000000  
                ??_USBStdFeatureReqHandler 003E                     __size_of_putrsUSBUSART 0034  
                     _PIC18F26K40_sendByte 15D8                   ??_USBStdGetStatusHandler 002A  
                           ?_USBDeviceInit 002A                              __CFG_PLLEN$ON 000000  
           PIC18F26K40_readThreeBytes@data 00C3                                _writeBuffer 0082  
                                    ?_main 002A          __size_of_USBCtrlEPServiceComplete 006A  
                                    _ANSEL 000F7E                     __end_of_USBDeviceTasks 08A2  
                ?_USBCtrlEPServiceComplete 002A                                      i2l220 19CE  
                                    i2l221 19D2                                      i2l217 19C6  
                                    i2l219 19CA                                      i2l180 19FA  
                                    i2l181 19FE                                      i2l190 1A26  
                                    i2l191 1A2A                                      i2l407 07D4  
                                    i2l177 19F2                                      i2l417 0848  
                                    i2l418 089E                                      i2l187 1A1E  
                                    i2l179 19F6                                      i2l419 084E  
                                    i2l189 1A22                                      i2l622 062E  
                                    i2l534 09DA                                      i2l606 10C8  
                                    i2l615 10E4                                      i2l640 0716  
                                    i2l632 06D4                                      i2l544 1350  
                                    i2l537 0A08                                      i2l481 1054  
                                    i2l707 1214                                      i2l539 0A0C  
                                    i2l547 139E                                      i2l548 135A  
                                    i2l549 135E                                      i2l557 1954  
                                    i2l582 1AE6                                      i2l592 119E  
                                    i2l584 1AF8                                      _UADDR 000F5C  
                           __CFG_BBSIZ$OFF 000000                                      _USTAT 000F63  
         __end_of_PIC18F26K40_setTrisToOut 1BDA                              __CFG_WRT0$OFF 000000  
       __size_of_USBCtrlEPAllowStatusStage 0064                              __CFG_WRT1$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           ?_BUTTON_Enable 002A                             __CFG_EBTR1$OFF 000000  
          __end_of_USBCtrlEPAllowDataStage 168C                                      _sd000 03C2  
                                    _sd001 037C                                      _sd002 0348  
                            __CFG_WRTB$OFF 000000             ?_USBIncrement1msInternalTimers 002A  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                                 i2memset@p1 002A  
                __size_of_BUTTON_IsPressed 001A                             __CFG_BOREN$OFF 000000  
                                    tablat 000FF5                        __size_of_LED_Enable 0030  
                                    plusw2 000FDB                          __end_of_CDCInitEP 16DE  
                                    status 000FD8                               __end_ofPL100 0986  
                             __end_ofPL110 0E22                               __end_ofPL102 1024  
                             __end_ofPL120 0D6A                               __end_ofPL112 1B1A  
                             __end_ofPL104 17C8                               __end_ofPL122 1BC8  
                             __end_ofPL114 12D2                               __end_ofPL106 0B26  
                             __end_ofPL116 0CAC                               __end_ofPL108 13BA  
                             __end_ofPL118 0D60                           __end_ofi2_memset 1A9A  
                          putUSBUSART@data 00B1               __size_of_USBStdSetCfgHandler 0084  
                           __CFG_MCLRE$OFF 000000                            __initialization 17C8  
                    ?_PIC18F26K40_sendByte 00B1                               __end_of_main 1992  
              __size_of_PIC18F26K40_loadPC 0040                  __size_of_USBCtrlEPService 0070  
                                   ??_main 00D3                              __activetblptr 000002  
                          ?_USBDeviceTasks 002A                                ?_USBSuspend 002A  
                                ??_LED_Off 002A                               _cdc_mem_type 007C  
                            _putrsUSBUSART 18FA                    __end_of_USBDeviceAttach 18EA  
                         _CDCDataOutHandle 0078            PIC18F26K40_loadDataIntoNVM@data 00B5  
                                   _ANSELH 000F7F                            getsUSBUSART@len 00BB  
                   SYSTEM_Initialize@state 00B2                      __size_of_CDCTxService 00A8  
                                   i2l3105 0D92                                     i2l3211 1240  
                                   i2l3141 1442                                     i2l3053 1294  
                                   i2l3117 0DCA                                     i2l3205 123A  
                                   i2l3063 1A2E                                     i2l3311 1A7A  
                                   i2l4111 1AD0                                     _LED_On 19EE  
                                   i2l3153 1470                                     i2l3145 1452  
                                   i2l3137 1434                                     i2l3233 1B00  
                                   i2l4113 1AD2                                     i2l3307 0F4E  
                                   i2l3331 1300                                     i2l3163 148A  
                                   i2l3075 189E                                     i2l3171 11E2  
                                   i2l3243 150A                                     i2l3315 1A8A  
                                   i2l3069 1A02                                     i2l3157 1480  
                                   i2l3149 1462                                     i2l3165 1494  
                                   i2l3181 11F8                                     i2l3093 19D6  
                                   i2l3237 1B0C                                     i2l3245 1514  
                                   i2l3413 0996                                     i2l3405 0FEA  
                           __CFG_WDTEN$OFF 000000                                     i2l3079 18AC  
                                   i2l3175 11EE                                     i2l3247 151E  
                                   i2l3255 1526                                     i2l3503 06A2  
                                   i2l3513 06C8                                     i2l3425 09DE  
                                   i2l3417 09AA                                     i2l3433 0A10  
                                   i2l4217 08CC                                     i2l3275 0EF2  
                                   i2l3099 0D76                                     i2l3515 06E0  
                                   i2l3363 167A                                     i2l4147 1952  
                                   i2l3605 0CC6                                     i2l3189 120A  
                                   i2l3541 073C                                     i2l3525 0700  
                                   i2l3445 136C                                     i2l4413 07E6  
                                   i2l3279 0EFA                                     i2l3631 0D14  
                                   i2l3615 0CE0                                     i2l3199 1228  
                                   i2l3543 0742                                     i2l3535 0722  
                                   i2l3527 0706                                     i2l3455 1390  
                                   i2l3383 0FA0                                     i2l3359 1666  
                                   i2l4167 141C                                     i2l3289 0F1C  
                                   i2l3297 0F32                                     i2l3609 0CD2  
                                   i2l3473 0630                                     i2l3561 1042  
                                   i2l4433 0812                                     i2l4425 0806  
                                   i2l3299 0F38                                     i2l3627 0D0C  
                                   i2l4187 08BC                                     i2l4451 083C  
                                   i2l4443 0824                                     i2l4419 07F0  
                                   i2l3813 1178                                     i2l3653 10D2  
                                   i2l3573 1066                                     i2l3581 1074  
                                   i2l3557 103C                                     i2l4437 081A  
                                   i2l3831 1198                                     i2l4471 086C  
                                   i2l4391 07C0                                     i2l3825 118E  
                                   i2l3497 0692                                     i2l3489 0674  
                                   i2l3665 10D8                                     i2l3753 1820  
                                   i2l3761 1840                                     i2l5267 153A  
                                   i2l3675 10F4                                     i2l5269 156E  
                                   i2l4477 0882                                     i2l3679 1100  
                                   i2l4479 0896                                     i2l4399 07CC  
                            CDCTxService@i 00BA                   i2USBTransferOnePacket@ep 0030  
                        ??i2_USBDeviceInit 0032            __size_ofi2_USBTransferOnePacket 0080  
                        _shortPacketStatus 0027                             __CFG_XINST$OFF 000000  
             ??_PIC18F26K40_readThreeBytes 00BB                            USBDeviceTasks@i 0047  
              USBStdFeatureReqHandler@pUEP 0040                   USBTransferOnePacket@data 00B2  
               USBCtrlTrfInHandler@lastDTS 002B                            ??_USBDeviceInit 00B9  
                             ?_putUSBUSART 00B1                             __CFG_STVREN$ON 000000  
                     __end_of_getsUSBUSART 14FA                          ??i2_BUTTON_Enable 002A  
                        _USBEnableEndpoint 1890            __size_of_USBStdGetStatusHandler 0068  
                                   _memcpy 180E                              ?i2_LED_Enable 002A  
                                   _memset 1A46                                     clear_0 17EE  
                                   clear_1 17FA                PIC18F26K40_readThreeBytes@i 00C8  
              PIC18F26K40_readThreeBytes@j 00C7                         ?_USBEnableEndpoint 0032  
            __size_of_USBTransferOnePacket 0082                            ??_BUTTON_Enable 00B1  
                             _CDCTxService 0A58                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                             ?_putrsUSBUSART 00B1  
                      ??_USBEnableEndpoint 0033                                _CtrlTrfData 000238  
                          __CFG_HFOFST$OFF 000000                   _PIC18F26K40_setTrisToOut 1BD2  
             ?_APP_DeviceCDCBasicDemoTasks 002A        __size_of_PIC18F26K40_readThreeBytes 00C4  
                     _controlTransferState 0026                          _SYSTEM_Initialize 1B1A  
                               __accesstop 0060                    __end_of__initialization 1800  
                       ?_SYSTEM_Initialize 002A                              ___rparam_used 000001  
                 __size_of_USBStallHandler 002A                        __size_of_USBSuspend 0016  
                   ??_PIC18F26K40_sendByte 00B2                             __pcstackCOMRAM 002A  
                __end_of_USBEnableEndpoint 18C6                              __end_of_sd000 03C6  
                            __end_of_sd001 03B0                              __end_of_sd002 037C  
                             __pidataBANK0 1B9E                        ??_SYSTEM_Initialize 00B2  
                                LED_On@led 002A           __size_of_USBCtrlEPAllowDataStage 0056  
                           ??i2_LED_Enable 002A                               ??_LED_Enable 00B1  
            __size_of_USBConfigureEndpoint 0064                __end_of_USBCtrlTrfInHandler 11A6  
                  ?_APP_LEDUpdateUSBStatus 002A                                 __end_ofPL2 10BC  
                               __end_ofPL4 0D32                                 __end_ofPL6 0D3C  
                               __end_ofPL8 05BC                     i2_USBTransferOnePacket 0D6A  
                          __CFG_PCLKEN$OFF 000000                                  ?i2_memset 002A  
                               _cdc_rx_len 001C                                 _cdc_tx_len 001B  
             ?_PIC18F26K40_loadDataIntoNVM 00B5                              _buttonMessage 00D5  
                 ??_USBCtrlTrfSetupHandler 0046                    _USBTicksSinceSuspendEnd 007D  
                         ?_USBDeviceAttach 002A                  __end_of_SYSTEM_Initialize 1B36  
                         _BUTTON_IsPressed 1B52                     _USBStdGetStatusHandler 1348  
                            _buttonPressed 007F                                 __pbssBANK0 0060  
                                  ?_LED_On 002A              ??_APP_DeviceCDCBasicDemoTasks 00C9  
 __end_of_APP_DeviceCDCBasicDemoInitialize 1B86  __size_of_APP_DeviceCDCBasicDemoInitialize 001A  
       ??_APP_DeviceCDCBasicDemoInitialize 002A          ?_APP_DeviceCDCBasicDemoInitialize 002A  
         _APP_DeviceCDCBasicDemoInitialize 1B6C                         __end_of_LED_Enable 19C2  
         APP_DeviceCDCBasicDemoTasks@gsk_i 00CA                __size_of_USBWakeFromSuspend 0020  
                              _pBDTEntryIn 000F           __end_of_USBCtrlEPServiceComplete 108E  
              __size_of_USBCheckCDCRequest 0080                       USBCtrlTrfRxService@i 002A  
                            LED_Enable@led 00B1             __end_of_APP_LEDUpdateUSBStatus 149A  
                                  ?_memcpy 002A               APP_DeviceCDCBasicDemoTasks@a 00CF  
                                  ?_memset 00B1                                 _device_dsc 03B0  
                         _USBCtrlEPService 13BA                                 _ep_data_in 0073  
              __end_of_USBCtrlTrfRxService 0D28                         _USBCheckStdRequest 10BC  
                        _configDescriptor1 0305                            ??_putrsUSBUSART 00B2  
          APP_DeviceCDCBasicDemoTasks@Data 00CB                                    _LED_Off 1A1A  
              __end_ofi2_SYSTEM_Initialize 1B12                                 ??i2_memset 0030  
              __end_of_USBCtrlTrfTxService 0F54                        _USBStdSetCfgHandler 0F80  
      PIC18F26K40_loadDataIntoNVM@tempData 00BC                            __CFG_USBDIV$OFF 000000  
                      ?_USBCheckStdRequest 002A               __size_of_USBStdGetDscHandler 009A  
            ??_PIC18F26K40_loadDataIntoNVM 00BB                                    _UIEbits 000F60  
                                  _UIRbits 000F62                            __size_of_LED_On 002C  
                            _cdc_trf_state 0080             APP_LEDUpdateUSBStatus@ledCount 0019  
       __end_of_PIC18F26K40_readThreeBytes 0BEA                 _PIC18F26K40_readThreeBytes 0B26  
                                  _pCDCDst 006A                                    _pCDCSrc 006D  
                          __CFG_PWRTEN$OFF 000000                      __size_of_getsUSBUSART 0060  
                                  __Hparam 0000            ??_USBIncrement1msInternalTimers 002A  
                     ?_USBStdSetCfgHandler 002A                                  _CDCInitEP 168C  
                                  __Lparam 0000                 __size_of_USBEnableEndpoint 0036  
                               _readBuffer 0091                       ??_USBCheckStdRequest 0045  
            __size_of_USBCtrlTrfOutHandler 0020                           ??_USBDeviceTasks 0047  
                        ??_USBStallHandler 002A                               __psmallconst 0300  
     __size_of_APP_DeviceCDCBasicDemoTasks 01E2                       __size_of_putUSBUSART 0018  
                                  __pcinit 17C8                         getsUSBUSART@buffer 00BA  
                          __size_of_memcpy 0042                            __size_of_memset 002A  
                __end_of_configDescriptor1 0348                                    __ramtop 0300  
                                  __ptext0 1962                                    __ptext1 1572  
                                  __ptext2 1A46                                    __ptext3 18C6  
                                  __ptext4 1B1A                                    __ptext5 1992  
                                  __ptext6 1BC8                                    __ptext7 03C8  
                                  __ptext8 18FA                                    __ptext9 1B86  
                                  _inPipes 0009                _USBDeferOUTDataStagePackets 007E  
                             ??_USBSuspend 003E                            i2_USBDeviceInit 08AC  
                         i2USBDeviceInit@i 0032                      PIC18F26K40_sendByte@i 00B6  
                    PIC18F26K40_sendByte@j 00B5                         __end_of_USB_CD_Ptr 0305  
               __size_of_SYSTEM_Initialize 001C            __size_of_USBCtrlTrfSetupHandler 0040  
                     end_of_initialization 1800                               _getsUSBUSART 149A  
                     __end_ofi2_LED_Enable 19EE                         __end_of_USB_SD_Ptr 0304  
                                  memcpy@d 0030                                    memcpy@n 002E  
                                  memcpy@s 0032                        _pBDTEntryEP0OutNext 0015  
                                  memset@c 00B3                                    memset@n 00B5  
                                  memset@p 00B7                              __Lmediumconst 0000  
                          _USB1msTickCount 0066            _dummy_encapsulated_cmd_response 00A0  
                          i2_BUTTON_Enable 1BBC                   ?_USBStdFeatureReqHandler 002A  
                    ??_USBStdSetCfgHandler 003E                                 ?_CDCInitEP 002A  
                       __end_of_USBSuspend 1AB0       __size_of_PIC18F26K40_loadDataIntoNVM 00B6  
                  _USBCtrlEPAllowDataStage 1636                                    postdec1 000FE5  
                                  postdec2 000FDD                 __end_of_PIC18F26K40_loadPC 1890  
                                  postinc0 000FEE                                    postinc2 000FDE  
                 PIC18F26K40_sendByte@info 00B4    __end_of_PIC18F26K40_enterLowVoltageProg 177C  
 __size_of_PIC18F26K40_enterLowVoltageProg 004E           ?_PIC18F26K40_enterLowVoltageProg 002A  
        ??_PIC18F26K40_enterLowVoltageProg 00B7            _PIC18F26K40_enterLowVoltageProg 172E  
                 _USBCtrlEPServiceComplete 1024                 _USBStatusStageEnabledFlag1 001F  
               _USBStatusStageEnabledFlag2 001E                         USBEnableEndpoint@p 0033  
                                _PORTAbits 000F80                                  _PORTCbits 000F82  
               ??_PIC18F26K40_setTrisToOut 00B1                                  _TRISCbits 000F94  
            PIC18F26K40_loadPC@tempAddress 00BB                         _BothEP0OutUOWNsSet 0022  
                USBConfigureEndpoint@EPNum 002F                 ?_USBCtrlEPAllowStatusStage 002A  
      USER_USB_CALLBACK_EVENT_HANDLER@size 003A    APP_DeviceCDCBasicDemoTasks@numBytesRead 00C9  
                                _USTATcopy 0028            ?_PIC18F26K40_exitLowVoltageProg 002A  
         ??_PIC18F26K40_exitLowVoltageProg 00B1               __end_of_USBTransferOnePacket 0C6C  
                           __end_of_LED_On 1A1A                          putUSBUSART@length 00B2  
                   _USBCtrlTrfSetupHandler 177C                   __end_of_BUTTON_IsPressed 1B6C  
                  ?i2_USBTransferOnePacket 002A                      __end_of_USBDeviceInit 15D8  
    __end_of_USBIncrement1msInternalTimers 1B52     __size_of_USBIncrement1msInternalTimers 001C  
            _USBIncrement1msInternalTimers 1B36                                 LED_Off@led 002A  
                  __end_ofi2_USBDeviceInit 08F4                                  i2memset@c 002C  
                                i2memset@n 002E                                  i2memset@p 0030  
                           __end_of_memcpy 1850                         putrsUSBUSART@pData 00B2  
                           __end_of_memset 1A70                          _USBBusIsSuspended 0024  
                              __end_ofPL10 11B6                                __end_ofPL20 094E  
                              __end_ofPL12 0D4C                                __end_ofPL30 0B1C  
                              __end_ofPL22 05CE                                __end_ofPL14 0D56  
                              __end_ofPL40 18FA                                __end_ofPL32 0C78  
                              __end_ofPL24 0770                                __end_ofPL16 0926  
                              __end_ofPL50 1ABC                                __end_ofPL42 0A44  
                              __end_ofPL34 0A2C                                __end_ofPL26 05DA  
                              __end_ofPL18 11C0                                __end_ofPL60 0C98  
                              __end_ofPL52 0A58                                __end_ofPL44 0966  
                              __end_ofPL36 0C84                                __end_ofPL28 05EE  
                              __end_ofPL70 07AC                                __end_ofPL62 0F66  
                              __end_ofPL54 1018                                __end_ofPL46 11D6  
                              __end_ofPL38 1962                                __end_ofPL80 114C  
                              __end_ofPL72 1340                                __end_ofPL64 0614  
                              __end_ofPL56 0DFE                                __end_ofPL48 0786  
                              __end_ofPL90 0CA2                                __end_ofPL82 1508  
                              __end_ofPL74 1348                                __end_ofPL66 0798  
                              __end_ofPL58 0602                                __end_ofPL92 097C  
                              __end_ofPL84 12C8                                __end_ofPL76 0F70  
                              __end_ofPL68 07A2                                __end_ofPL94 0E0E  
                              __end_ofPL86 0972                                __end_ofPL78 0F80  
                              __end_ofPL96 0E18                                __end_ofPL88 0E06  
                              __end_ofPL98 08AC                        start_initialization 17C8  
                  ?_USBStdGetStatusHandler 002A       PIC18F26K40_loadDataIntoNVM@LatchType 00BA  
                 i2SYSTEM_Initialize@state 002B                      __end_of_BUTTON_Enable 1BD2  
            USBCtrlTrfRxService@byteToRead 002B                    __end_ofi2_BUTTON_Enable 1BC2  
                              _cdc_data_rx 000280                                _cdc_data_tx 000240  
                        __size_ofi2_memset 002A               __end_of_USBConfigureEndpoint 12BA  
          __end_of_USBStdFeatureReqHandler 0766                                   ??_LED_On 002A  
        __end_of_USBCtrlEPAllowStatusStage 1336                   __end_of_USBCtrlEPService 142A  
                ??_USBCtrlEPAllowDataStage 002B                                ??_CDCInitEP 0036  
                           USBDeviceInit@i 00B9                     _pBDTEntryEP0OutCurrent 0017  
                  USBTransferOnePacket@dir 00B1                    USBTransferOnePacket@len 00B4  
           __end_ofi2_USBTransferOnePacket 0DEA              __size_of_PIC18F26K40_sendByte 005E  
                      _USBStdGetDscHandler 0986        PIC18F26K40_readThreeBytes@direction 00C2  
                              __pdataBANK0 00D5                                   ??_memcpy 0030  
                                 ??_memset 00B7                     BUTTON_IsPressed@button 00B1  
                   _USBActiveConfiguration 0029             __end_of_USBStdGetStatusHandler 13B0  
                PIC18F26K40_loadPC@address 00B7                                   ?_LED_Off 002A  
                              __pbssCOMRAM 0001                              __pcstackBANK0 00B1  
             __size_of_USBCtrlTrfInHandler 005A                      __size_ofi2_LED_Enable 002C  
                     ?_USBStdGetDscHandler 002A                 __end_of_USBWakeFromSuspend 1ADC  
                          _USBStallHandler 192E                               _pBDTEntryOut 0060  
               __end_of_USBCheckCDCRequest 1256                   __size_of_USBDeviceAttach 0024  
              ?_PIC18F26K40_readThreeBytes 00B7                      i2BUTTON_Enable@button 002A  
                                __pintcode 0008                               i2_LED_Enable 19C2  
                         ?i2_USBDeviceInit 002A                       _USBTransferOnePacket 0BEA  
                              __smallconst 0300                      __end_of_putrsUSBUSART 192E  
             __end_of_USBCtrlTrfOutHandler 1AFC                      ??_USBStdGetDscHandler 002A  
                              _ep_data_out 0070                           ?i2_BUTTON_Enable 002A  
      __end_of_APP_DeviceCDCBasicDemoTasks 05AA                _APP_DeviceCDCBasicDemoTasks 03C8  
             __size_of_USBCtrlTrfRxService 007C              USBConfigureEndpoint@direction 002A  
             __size_ofi2_SYSTEM_Initialize 0016               __size_of_USBCtrlTrfTxService 007C  
                                 _LATCbits 000F8B                 ??_USBCtrlEPServiceComplete 002B  
                                 _IPR2bits 000FA2                                   _PIE2bits 000FA0  
    PIC18F26K40_loadDataIntoNVM@IncreasePC 00B9                                   i2u200_40 0F4C  
                                 i2u200_47 0F48       __end_of_PIC18F26K40_sendByteMsbToLsb 172E  
    __size_of_PIC18F26K40_sendByteMsbToLsb 0050               _PIC18F26K40_sendByteMsbToLsb 16DE  
                                 i2u213_40 09C4                                   i2u213_47 09C2  
                                 i2u214_40 09D6                                   i2u214_47 09D4  
                                 i2u216_40 0A02                                   i2u216_47 0A00  
                                 i2u186_40 145C                                   _PIR2bits 000FA1  
                                 i2u198_40 0F30                                   i2u198_47 0F2C  
                                 _RCONbits 000FD0                              ??_putUSBUSART 00B3  
                         __CFG_WDTPS$32768 000000                                   _UEP0bits 000F53  
               _USBDeferINDataStagePackets 001D                __size_of_USBCheckStdRequest 0084  
                                 _UCONbits 000F64                       _USBConfigureEndpoint 1256  
         __size_of_USBStdFeatureReqHandler 0152                      ?_USBTransferOnePacket 00B1  
                          i2LED_Enable@led 002A                          _SYS_InterruptHigh 0008  
                            ?_CDCTxService 002A                               _RemoteWakeup 0025  
                                 i2_memset 1A70        __end_of_PIC18F26K40_loadDataIntoNVM 0ED8  
              _PIC18F26K40_loadDataIntoNVM 0E22                         _PIC18F26K40_loadPC 1850  
                         __size_of_LED_Off 002C                         ?_SYS_InterruptHigh 002A  
                  __end_of_USBStallHandler 1958                                  copy_data0 17DC  
                        putrsUSBUSART@data 00B1                ??_USBCtrlEPAllowStatusStage 002A  
              __end_of_USBStdSetCfgHandler 1004                        ?_PIC18F26K40_loadPC 00B7  
                      ??_SYS_InterruptHigh 0048                         __end_of_device_dsc 03C2  
                 ??_APP_LEDUpdateUSBStatus 002B                    ?_USBCtrlTrfSetupHandler 002A  
                  USBStdGetStatusHandler@p 002A                                   __Hrparam 0000  
      PIC18F26K40_enterLowVoltageProg@code 00B7                                  memcpy@tmp 0034  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 00B7  
         PIC18F26K40_sendByteMsbToLsb@info 00B3              ?_PIC18F26K40_sendByteMsbToLsb 002A  
                                 _SetupPkt 000230                      ?_USBConfigureEndpoint 002A  
   __end_of_PIC18F26K40_exitLowVoltageProg 1BBC    __size_of_PIC18F26K40_exitLowVoltageProg 000C  
           _PIC18F26K40_exitLowVoltageProg 1BB0                          ??_USBDeviceAttach 00B1  
                        ?_BUTTON_IsPressed 002A                       ??_PIC18F26K40_loadPC 00BB  
                __end_of_SYS_InterruptHigh 0062                         ??_BUTTON_IsPressed 00B1  
                      __end_of_putUSBUSART 1B9E                                _line_coding 00A8  
                           ??_CDCTxService 00BA              PIC18F26K40_sendByte@direction 00B1  
                  __size_of_USBDeviceTasks 00F6                                   __ptext10 149A  
                                 __ptext11 0B26                                   __ptext20 0BEA  
                                 __ptext12 1850                                   __ptext21 1B52  
                                 __ptext13 0E22                                   __ptext30 180E  
                                 __ptext14 16DE                                   __ptext31 177C  
                                 __ptext23 07AC                                   __ptext15 1BB0  
                                 __ptext40 1508                                   __ptext32 1024  
                                 __ptext24 08AC                                   __ptext16 172E  
                                 __ptext41 1AFC                                   __ptext33 1636  
                                 __ptext25 1ABC                                   __ptext17 15D8  
                                 __ptext50 19EE                                   __ptext42 19C2  
                                 __ptext34 10BC                                   __ptext26 1A9A  
                                 __ptext18 1BD2                                   __ptext51 1A1A  
                                 __ptext43 1BBC                                   __ptext35 0F80  
                                 __ptext27 192E                                   __ptext19 0A58  
                                 __ptext52 1B6C                                   __ptext44 11D6  
                                 __ptext36 1A70                                   __ptext28 1B36  
                                 __ptext53 1ADC                                   __ptext45 168C  
                                 __ptext37 1348                                   __ptext29 13BA  
                                 __ptext54 0CAC                                   __ptext46 0D6A  
                                 __ptext38 0986                                   __ptext55 12D2  
                                 __ptext47 1890                                   __ptext39 0614  
                                 __ptext56 114C                                   __ptext48 1256  
                                 __ptext57 0ED8                                   __ptext49 142A  
        __size_of_PIC18F26K40_setTrisToOut 0008             __end_of_USBCtrlTrfSetupHandler 17BC  
                            __size_of_main 0030                          ?_USBCtrlEPService 002A  
                ?_PIC18F26K40_setTrisToOut 002A                         ??_USBCtrlEPService 0046  
                      _USBCtrlTrfInHandler 114C                        BUTTON_Enable@button 00B1  
                                 _outPipes 0001                       _USBCtrlTrfOutHandler 1ADC  
                                 int$flags 0052                  _USBCtrlEPAllowStatusStage 12D2  
                               _LED_Enable 1992                     ??_USBTransferOnePacket 00B5  
                         putrsUSBUSART@len 00B3                  _USBDeferStatusStagePacket 0020  
                 CDCTxService@byte_to_send 00BB                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002A                                   memcpy@d1 002A  
                                 memcpy@s1 002C              USBCtrlTrfTxService@byteToSend 002A  
             __end_of_PIC18F26K40_sendByte 1636                                   memset@p1 00B1  
                         ?_USBStallHandler 002A                   USBStdFeatureReqHandler@p 0043  
                                 intlevel2 0000                     __size_of_USBDeviceInit 0066  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1572   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 006A  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 003C           ?_USER_USB_CALLBACK_EVENT_HANDLER 0036  
          _USER_USB_CALLBACK_EVENT_HANDLER 1508               i2USBTransferOnePacket@handle 0031  
          __size_of_APP_LEDUpdateUSBStatus 0070                 i2USBTransferOnePacket@data 002B  
                   ??_USBConfigureEndpoint 002B                      ?_USBCtrlTrfOutHandler 002A  
                   __size_of_BUTTON_Enable 000A                                _putUSBUSART 1B86  
                     __CFG_CPUDIV$NOCLKDIV 000000                        _USBCtrlTrfRxService 0CAC  
                       _USBWakeFromSuspend 1ABC                    _USBStdFeatureReqHandler 0614  
                      i2_SYSTEM_Initialize 1AFC                         _USBCheckCDCRequest 11D6  
                      _USBCtrlTrfTxService 0ED8                 __size_of_SYS_InterruptHigh 005A  
           ??_PIC18F26K40_sendByteMsbToLsb 00B1              PIC18F26K40_sendByteMsbToLsb@i 00B4  
                      ?_USBWakeFromSuspend 002A                      ??_USBCtrlTrfInHandler 002B  
                    _USBAlternateInterface 00AF                        ?_USBCheckCDCRequest 002A  
                i2USBTransferOnePacket@dir 002A                  i2USBTransferOnePacket@len 002D  
                      USBEnableEndpoint@ep 0035                            _endpoint_number 0023  
                     ?_USBCtrlTrfRxService 002A                              ?_getsUSBUSART 00BA  
                     ?i2_SYSTEM_Initialize 002A                   ?_USBCtrlEPAllowDataStage 002A  
                     ?_USBCtrlTrfTxService 002A               _USBStatusStageTimeoutCounter 0021  
     PIC18F26K40_readThreeBytes@IncreasePC 00B7                       ??_USBWakeFromSuspend 003E  
               USBTransferOnePacket@handle 00B8                       __end_of_CDCTxService 0B00  
                     ??_USBCheckCDCRequest 002A                                 _USB_CD_Ptr 0304  
