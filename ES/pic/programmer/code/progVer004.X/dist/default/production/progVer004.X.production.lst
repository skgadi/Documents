

Microchip Technology PIC18 PRO Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 30 11:39:11 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	pa_nodes0,global,class=CODE,delta=1
    76                           	dabs	1,0x200,48,_BDT
    77                           	dabs	1,0x280,64,_cdc_data_rx
    78                           	dabs	1,0x240,64,_cdc_data_tx
    79                           	dabs	1,0x238,8,_CtrlTrfData
    80                           	dabs	1,0x230,8,_SetupPkt
    81  0000                     
    82                           ; Version 1.42
    83                           ; Generated 13/04/2017 GMT
    84                           ; 
    85                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F14K50 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           prodh	equ	0xFF4
   121                           prodl	equ	0xFF3
   122                           intcon	equ	0xFF2
   123                           wreg	equ	0xFE8
   124                           indf1	equ	0xFE7
   125                           fsr1h	equ	0xFE2
   126                           fsr1l	equ	0xFE1
   127                           indf2	equ	0xFDF
   128                           postinc2	equ	0xFDE
   129                           postdec2	equ	0xFDD
   130                           plusw2	equ	0xFDB
   131                           fsr2h	equ	0xFDA
   132                           fsr2l	equ	0xFD9
   133                           status	equ	0xFD8
   134                           
   135                           	psect	idataBANK0
   136  001AC4                     __pidataBANK0:
   137                           	opt stack 0
   138                           
   139                           ;initializer for _GLOBAL_COUNTER
   140  001AC4  30                 	db	48
   141                           
   142                           ;initializer for _buttonMessage
   143  001AC5  42                 	db	66
   144  001AC6  75                 	db	117
   145  001AC7  74                 	db	116
   146  001AC8  74                 	db	116
   147  001AC9  6F                 	db	111
   148  001ACA  6E                 	db	110
   149  001ACB  20                 	db	32
   150  001ACC  70                 	db	112
   151  001ACD  72                 	db	114
   152  001ACE  65                 	db	101
   153  001ACF  73                 	db	115
   154  001AD0  73                 	db	115
   155  001AD1  65                 	db	101
   156  001AD2  64                 	db	100
   157  001AD3  2E                 	db	46
   158  001AD4  0D                 	db	13
   159  001AD5  0A                 	db	10
   160  001AD6  00                 	db	0
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           tblptrl	equ	0xFF6
   164                           tablat	equ	0xFF5
   165                           prodh	equ	0xFF4
   166                           prodl	equ	0xFF3
   167                           intcon	equ	0xFF2
   168                           wreg	equ	0xFE8
   169                           indf1	equ	0xFE7
   170                           fsr1h	equ	0xFE2
   171                           fsr1l	equ	0xFE1
   172                           indf2	equ	0xFDF
   173                           postinc2	equ	0xFDE
   174                           postdec2	equ	0xFDD
   175                           plusw2	equ	0xFDB
   176                           fsr2h	equ	0xFDA
   177                           fsr2l	equ	0xFD9
   178                           status	equ	0xFD8
   179                           
   180                           	psect	smallconst
   181  000300                     __psmallconst:
   182                           	opt stack 0
   183  000300  00                 	db	0
   184  000301                     _USB_SD_Ptr:
   185                           	opt stack 0
   186  000301  C2                 	db	low _sd000
   187  000302  7C                 	db	low _sd001
   188  000303  48                 	db	low _sd002
   189  000304                     __end_of_USB_SD_Ptr:
   190                           	opt stack 0
   191  000304                     _USB_CD_Ptr:
   192                           	opt stack 0
   193  000304  05                 	db	low _configDescriptor1
   194  000305                     __end_of_USB_CD_Ptr:
   195                           	opt stack 0
   196  000305                     _configDescriptor1:
   197                           	opt stack 0
   198  000305  09                 	db	9
   199  000306  02                 	db	2
   200  000307  43                 	db	67
   201  000308  00                 	db	0
   202  000309  02                 	db	2
   203  00030A  01                 	db	1
   204  00030B  00                 	db	0
   205  00030C  C0                 	db	192
   206  00030D  32                 	db	50
   207  00030E  09                 	db	9
   208  00030F  04                 	db	4
   209  000310  00                 	db	0
   210  000311  00                 	db	0
   211  000312  01                 	db	1
   212  000313  02                 	db	2
   213  000314  02                 	db	2
   214  000315  01                 	db	1
   215  000316  00                 	db	0
   216  000317  05                 	db	5
   217  000318  24                 	db	36
   218  000319  00                 	db	0
   219  00031A  10                 	db	16
   220  00031B  01                 	db	1
   221  00031C  04                 	db	4
   222  00031D  24                 	db	36
   223  00031E  02                 	db	2
   224  00031F  02                 	db	2
   225  000320  05                 	db	5
   226  000321  24                 	db	36
   227  000322  06                 	db	6
   228  000323  00                 	db	0
   229  000324  01                 	db	1
   230  000325  05                 	db	5
   231  000326  24                 	db	36
   232  000327  01                 	db	1
   233  000328  00                 	db	0
   234  000329  01                 	db	1
   235  00032A  07                 	db	7
   236  00032B  05                 	db	5
   237  00032C  81                 	db	129
   238  00032D  03                 	db	3
   239  00032E  08                 	db	8
   240  00032F  00                 	db	0
   241  000330  02                 	db	2
   242  000331  09                 	db	9
   243  000332  04                 	db	4
   244  000333  01                 	db	1
   245  000334  00                 	db	0
   246  000335  02                 	db	2
   247  000336  0A                 	db	10
   248  000337  00                 	db	0
   249  000338  00                 	db	0
   250  000339  00                 	db	0
   251  00033A  07                 	db	7
   252  00033B  05                 	db	5
   253  00033C  02                 	db	2
   254  00033D  02                 	db	2
   255  00033E  40                 	db	64
   256  00033F  00                 	db	0
   257  000340  00                 	db	0
   258  000341  07                 	db	7
   259  000342  05                 	db	5
   260  000343  82                 	db	130
   261  000344  02                 	db	2
   262  000345  40                 	db	64
   263  000346  00                 	db	0
   264  000347  00                 	db	0
   265  000348                     __end_of_configDescriptor1:
   266                           	opt stack 0
   267  000348                     _sd002:
   268                           	opt stack 0
   269  000348  34                 	db	52
   270  000349  03                 	db	3
   271  00034A  0043               	dw	67
   272  00034C  0044               	dw	68
   273  00034E  0043               	dw	67
   274  000350  0020               	dw	32
   275  000352  0052               	dw	82
   276  000354  0053               	dw	83
   277  000356  002D               	dw	45
   278  000358  0032               	dw	50
   279  00035A  0033               	dw	51
   280  00035C  0032               	dw	50
   281  00035E  0020               	dw	32
   282  000360  0045               	dw	69
   283  000362  006D               	dw	109
   284  000364  0075               	dw	117
   285  000366  006C               	dw	108
   286  000368  0061               	dw	97
   287  00036A  0074               	dw	116
   288  00036C  0069               	dw	105
   289  00036E  006F               	dw	111
   290  000370  006E               	dw	110
   291  000372  0020               	dw	32
   292  000374  0044               	dw	68
   293  000376  0065               	dw	101
   294  000378  006D               	dw	109
   295  00037A  006F               	dw	111
   296  00037C                     __end_of_sd002:
   297                           	opt stack 0
   298  00037C                     _sd001:
   299                           	opt stack 0
   300  00037C  34                 	db	52
   301  00037D  03                 	db	3
   302  00037E  004D               	dw	77
   303  000380  0069               	dw	105
   304  000382  0063               	dw	99
   305  000384  0072               	dw	114
   306  000386  006F               	dw	111
   307  000388  0063               	dw	99
   308  00038A  0068               	dw	104
   309  00038C  0069               	dw	105
   310  00038E  0070               	dw	112
   311  000390  0020               	dw	32
   312  000392  0054               	dw	84
   313  000394  0065               	dw	101
   314  000396  0063               	dw	99
   315  000398  0068               	dw	104
   316  00039A  006E               	dw	110
   317  00039C  006F               	dw	111
   318  00039E  006C               	dw	108
   319  0003A0  006F               	dw	111
   320  0003A2  0067               	dw	103
   321  0003A4  0079               	dw	121
   322  0003A6  0020               	dw	32
   323  0003A8  0049               	dw	73
   324  0003AA  006E               	dw	110
   325  0003AC  0063               	dw	99
   326  0003AE  002E               	dw	46
   327  0003B0                     __end_of_sd001:
   328                           	opt stack 0
   329  0003B0                     _device_dsc:
   330                           	opt stack 0
   331  0003B0  12                 	db	18
   332  0003B1  01                 	db	1
   333  0003B2  0200               	dw	512
   334  0003B4  02                 	db	2
   335  0003B5  00                 	db	0
   336  0003B6  00                 	db	0
   337  0003B7  08                 	db	8
   338  0003B8  04D8               	dw	1240
   339  0003BA  000A               	dw	10
   340  0003BC  0100               	dw	256
   341  0003BE  01                 	db	1
   342  0003BF  02                 	db	2
   343  0003C0  00                 	db	0
   344  0003C1  01                 	db	1
   345  0003C2                     __end_of_device_dsc:
   346                           	opt stack 0
   347  0003C2                     _sd000:
   348                           	opt stack 0
   349  0003C2  04                 	db	4
   350  0003C3  03                 	db	3
   351  0003C4  0409               	dw	1033
   352  0003C6                     __end_of_sd000:
   353                           	opt stack 0
   354  0000                     _UEP0bits	set	3923
   355  0000                     _UADDR	set	3932
   356  0000                     _UEIE	set	3931
   357  0000                     _UEIR	set	3935
   358  0000                     _UEP1	set	3924
   359  0000                     _UEP0	set	3923
   360  0000                     _ANSELH	set	3967
   361  0000                     _ANSEL	set	3966
   362  0000                     _INTCONbits	set	4082
   363  0000                     _IPR2bits	set	4002
   364  0000                     _RCONbits	set	4048
   365  0000                     _UCON	set	3940
   366  0000                     _USTAT	set	3939
   367  0000                     _PIR2bits	set	4001
   368  0000                     _UIEbits	set	3936
   369  0000                     _UIRbits	set	3938
   370  0000                     _UIE	set	3936
   371  0000                     _UCFG	set	3937
   372  0000                     _UIR	set	3938
   373  0000                     _PIE2bits	set	4000
   374  0000                     _PORTAbits	set	3968
   375  0000                     _UCONbits	set	3940
   376  0000                     _PORTCbits	set	3970
   377  0000                     _LATCbits	set	3979
   378  0000                     _TRISCbits	set	3988
   379  0003C6                     STR_2:
   380                           
   381                           ; BSR set to: 0
   382  0003C6  47                 	db	71	;'G'
   383  0003C7  4C                 	db	76	;'L'
   384  0003C8  4F                 	db	79	;'O'
   385  0003C9  42                 	db	66	;'B'
   386  0003CA  41                 	db	65	;'A'
   387  0003CB  4C                 	db	76	;'L'
   388  0003CC  5F                 	db	95	;'_'
   389  0003CD  43                 	db	67	;'C'
   390  0003CE  4F                 	db	79	;'O'
   391  0003CF  55                 	db	85	;'U'
   392  0003D0  4E                 	db	78	;'N'
   393  0003D1  54                 	db	84	;'T'
   394  0003D2  45                 	db	69	;'E'
   395  0003D3  52                 	db	82	;'R'
   396  0003D4  20                 	db	32
   397  0003D5  69                 	db	105	;'i'
   398  0003D6  73                 	db	115	;'s'
   399  0003D7  20                 	db	32
   400  0003D8  70                 	db	112	;'p'
   401  0003D9  6C                 	db	108	;'l'
   402  0003DA  61                 	db	97	;'a'
   403  0003DB  63                 	db	99	;'c'
   404  0003DC  65                 	db	101	;'e'
   405  0003DD  64                 	db	100	;'d'
   406  0003DE  20                 	db	32
   407  0003DF  61                 	db	97	;'a'
   408  0003E0  74                 	db	116	;'t'
   409  0003E1  20                 	db	32
   410  0003E2  30                 	db	48	;'0'
   411  0003E3  78                 	db	120	;'x'
   412  0003E4  30                 	db	48	;'0'
   413  0003E5  30                 	db	48	;'0'
   414  0003E6  33                 	db	51	;'3'
   415  0003E7  31                 	db	49	;'1'
   416  0003E8  30                 	db	48	;'0'
   417  0003E9  30                 	db	48	;'0'
   418  0003EA  30                 	db	48	;'0'
   419  0003EB  32                 	db	50	;'2'
   420  0003EC  0A                 	db	10
   421  0003ED  0D                 	db	13
   422  0003EE  00                 	db	0
   423  0000                     
   424                           ; #config settings
   425  0003EF  00                 	db	0	; dummy byte at the end
   426  0000                     tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           prodh	equ	0xFF4
   431                           prodl	equ	0xFF3
   432                           intcon	equ	0xFF2
   433                           wreg	equ	0xFE8
   434                           indf1	equ	0xFE7
   435                           fsr1h	equ	0xFE2
   436                           fsr1l	equ	0xFE1
   437                           indf2	equ	0xFDF
   438                           postinc2	equ	0xFDE
   439                           postdec2	equ	0xFDD
   440                           plusw2	equ	0xFDB
   441                           fsr2h	equ	0xFDA
   442                           fsr2l	equ	0xFD9
   443                           status	equ	0xFD8
   444                           
   445                           	psect	cinit
   446  0015E8                     __pcinit:
   447                           	opt stack 0
   448  0015E8                     start_initialization:
   449                           	opt stack 0
   450  0015E8                     __initialization:
   451                           	opt stack 0
   452                           
   453                           ; Initialize objects allocated to BANK0 (19 bytes)
   454                           ; load TBLPTR registers with __pidataBANK0
   455  0015E8  0EC4               	movlw	low __pidataBANK0
   456  0015EA  6EF6               	movwf	tblptrl,c
   457  0015EC  0E1A               	movlw	high __pidataBANK0
   458  0015EE  6EF7               	movwf	tblptrh,c
   459  0015F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   460  0015F2  6EF8               	movwf	tblptru,c
   461  0015F4  EE00  F0B7         	lfsr	0,__pdataBANK0
   462  0015F8  EE10 F013          	lfsr	1,19
   463  0015FC                     copy_data0:
   464  0015FC  0009               	tblrd		*+
   465  0015FE  CFF5 FFEE          	movff	tablat,postinc0
   466  001602  50E5               	movf	postdec1,w,c
   467  001604  50E1               	movf	fsr1l,w,c
   468  001606  E1FA               	bnz	copy_data0
   469                           
   470                           ; Clear objects allocated to BANK1 (128 bytes)
   471  001608  EE01  F000         	lfsr	0,__pbssBANK1
   472  00160C  0E80               	movlw	128
   473  00160E                     clear_0:
   474  00160E  6AEE               	clrf	postinc0,c
   475  001610  06E8               	decf	wreg,f,c
   476  001612  E1FD               	bnz	clear_0
   477                           
   478                           ; Clear objects allocated to BANK0 (51 bytes)
   479  001614  EE00  F060         	lfsr	0,__pbssBANK0
   480  001618  0E33               	movlw	51
   481  00161A                     clear_1:
   482  00161A  6AEE               	clrf	postinc0,c
   483  00161C  06E8               	decf	wreg,f,c
   484  00161E  E1FD               	bnz	clear_1
   485                           
   486                           ; Clear objects allocated to COMRAM (41 bytes)
   487  001620  EE00  F001         	lfsr	0,__pbssCOMRAM
   488  001624  0E29               	movlw	41
   489  001626                     clear_2:
   490  001626  6AEE               	clrf	postinc0,c
   491  001628  06E8               	decf	wreg,f,c
   492  00162A  E1FD               	bnz	clear_2
   493  00162C                     end_of_initialization:
   494                           	opt stack 0
   495  00162C                     __end_of__initialization:
   496                           	opt stack 0
   497  00162C  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   498  00162E  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   499  001630  0E00               	movlw	low (__Lmediumconst shr (0+16))
   500  001632  6EF8               	movwf	tblptru,c
   501  001634  0100               	movlb	0
   502  001636  EF42  F00C         	goto	_main	;jump to C main() function
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           prodh	equ	0xFF4
   508                           prodl	equ	0xFF3
   509                           intcon	equ	0xFF2
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           indf1	equ	0xFE7
   513                           postdec1	equ	0xFE5
   514                           fsr1h	equ	0xFE2
   515                           fsr1l	equ	0xFE1
   516                           indf2	equ	0xFDF
   517                           postinc2	equ	0xFDE
   518                           postdec2	equ	0xFDD
   519                           plusw2	equ	0xFDB
   520                           fsr2h	equ	0xFDA
   521                           fsr2l	equ	0xFD9
   522                           status	equ	0xFD8
   523                           
   524                           	psect	bssCOMRAM
   525  000001                     __pbssCOMRAM:
   526                           	opt stack 0
   527  000001                     _outPipes:
   528                           	opt stack 0
   529  000001                     	ds	8
   530  000009                     _inPipes:
   531                           	opt stack 0
   532  000009                     	ds	6
   533  00000F                     _pBDTEntryIn:
   534                           	opt stack 0
   535  00000F                     	ds	6
   536  000015                     _pBDTEntryEP0OutNext:
   537                           	opt stack 0
   538  000015                     	ds	2
   539  000017                     _pBDTEntryEP0OutCurrent:
   540                           	opt stack 0
   541  000017                     	ds	2
   542  000019                     APP_LEDUpdateUSBStatus@ledCount:
   543                           	opt stack 0
   544  000019                     	ds	2
   545  00001B                     _cdc_tx_len:
   546                           	opt stack 0
   547  00001B                     	ds	1
   548  00001C                     _cdc_rx_len:
   549                           	opt stack 0
   550  00001C                     	ds	1
   551  00001D                     _USBDeferINDataStagePackets:
   552                           	opt stack 0
   553  00001D                     	ds	1
   554  00001E                     _USBStatusStageEnabledFlag2:
   555                           	opt stack 0
   556  00001E                     	ds	1
   557  00001F                     _USBStatusStageEnabledFlag1:
   558                           	opt stack 0
   559  00001F                     	ds	1
   560  000020                     _USBDeferStatusStagePacket:
   561                           	opt stack 0
   562  000020                     	ds	1
   563  000021                     _USBStatusStageTimeoutCounter:
   564                           	opt stack 0
   565  000021                     	ds	1
   566  000022                     _BothEP0OutUOWNsSet:
   567                           	opt stack 0
   568  000022                     	ds	1
   569  000023                     _endpoint_number:
   570                           	opt stack 0
   571  000023                     	ds	1
   572  000024                     _USBBusIsSuspended:
   573                           	opt stack 0
   574  000024                     	ds	1
   575  000025                     _RemoteWakeup:
   576                           	opt stack 0
   577  000025                     	ds	1
   578  000026                     _controlTransferState:
   579                           	opt stack 0
   580  000026                     	ds	1
   581  000027                     _shortPacketStatus:
   582                           	opt stack 0
   583  000027                     	ds	1
   584  000028                     _USTATcopy:
   585                           	opt stack 0
   586  000028                     	ds	1
   587  000029                     _USBActiveConfiguration:
   588                           	opt stack 0
   589  000029                     	ds	1
   590                           tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           prodh	equ	0xFF4
   595                           prodl	equ	0xFF3
   596                           intcon	equ	0xFF2
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           indf1	equ	0xFE7
   600                           postdec1	equ	0xFE5
   601                           fsr1h	equ	0xFE2
   602                           fsr1l	equ	0xFE1
   603                           indf2	equ	0xFDF
   604                           postinc2	equ	0xFDE
   605                           postdec2	equ	0xFDD
   606                           plusw2	equ	0xFDB
   607                           fsr2h	equ	0xFDA
   608                           fsr2l	equ	0xFD9
   609                           status	equ	0xFD8
   610                           
   611                           	psect	bssBANK0
   612  000060                     __pbssBANK0:
   613                           	opt stack 0
   614  000060                     _pBDTEntryOut:
   615                           	opt stack 0
   616  000060                     	ds	6
   617  000066                     _USB1msTickCount:
   618                           	opt stack 0
   619  000066                     	ds	4
   620  00006A                     _pCDCDst:
   621                           	opt stack 0
   622  00006A                     	ds	3
   623  00006D                     _pCDCSrc:
   624                           	opt stack 0
   625  00006D                     	ds	3
   626  000070                     _ep_data_out:
   627                           	opt stack 0
   628  000070                     	ds	3
   629  000073                     _ep_data_in:
   630                           	opt stack 0
   631  000073                     	ds	3
   632  000076                     _CDCDataInHandle:
   633                           	opt stack 0
   634  000076                     	ds	2
   635  000078                     _CDCDataOutHandle:
   636                           	opt stack 0
   637  000078                     	ds	2
   638  00007A                     _pDst:
   639                           	opt stack 0
   640  00007A                     	ds	2
   641  00007C                     _cdc_mem_type:
   642                           	opt stack 0
   643  00007C                     	ds	1
   644  00007D                     _USBTicksSinceSuspendEnd:
   645                           	opt stack 0
   646  00007D                     	ds	1
   647  00007E                     _USBDeferOUTDataStagePackets:
   648                           	opt stack 0
   649  00007E                     	ds	1
   650  00007F                     _buttonPressed:
   651                           	opt stack 0
   652  00007F                     	ds	1
   653  000080                     _cdc_trf_state:
   654                           	opt stack 0
   655  000080                     	ds	1
   656  000081                     _USBDeviceState:
   657                           	opt stack 0
   658  000081                     	ds	1
   659  000082                     _dummy_encapsulated_cmd_response:
   660                           	opt stack 0
   661  000082                     	ds	8
   662  00008A                     _line_coding:
   663                           	opt stack 0
   664  00008A                     	ds	7
   665  000091                     _USBAlternateInterface:
   666                           	opt stack 0
   667  000091                     	ds	2
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           prodh	equ	0xFF4
   673                           prodl	equ	0xFF3
   674                           intcon	equ	0xFF2
   675                           postinc0	equ	0xFEE
   676                           wreg	equ	0xFE8
   677                           indf1	equ	0xFE7
   678                           postdec1	equ	0xFE5
   679                           fsr1h	equ	0xFE2
   680                           fsr1l	equ	0xFE1
   681                           indf2	equ	0xFDF
   682                           postinc2	equ	0xFDE
   683                           postdec2	equ	0xFDD
   684                           plusw2	equ	0xFDB
   685                           fsr2h	equ	0xFDA
   686                           fsr2l	equ	0xFD9
   687                           status	equ	0xFD8
   688                           
   689                           	psect	dataBANK0
   690  0000B7                     __pdataBANK0:
   691                           	opt stack 0
   692  0000B7                     _GLOBAL_COUNTER:
   693                           	opt stack 0
   694  0000B7                     	ds	1
   695  0000B8                     _buttonMessage:
   696                           	opt stack 0
   697  0000B8                     	ds	18
   698                           tblptru	equ	0xFF8
   699                           tblptrh	equ	0xFF7
   700                           tblptrl	equ	0xFF6
   701                           tablat	equ	0xFF5
   702                           prodh	equ	0xFF4
   703                           prodl	equ	0xFF3
   704                           intcon	equ	0xFF2
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           indf1	equ	0xFE7
   708                           postdec1	equ	0xFE5
   709                           fsr1h	equ	0xFE2
   710                           fsr1l	equ	0xFE1
   711                           indf2	equ	0xFDF
   712                           postinc2	equ	0xFDE
   713                           postdec2	equ	0xFDD
   714                           plusw2	equ	0xFDB
   715                           fsr2h	equ	0xFDA
   716                           fsr2l	equ	0xFD9
   717                           status	equ	0xFD8
   718                           
   719                           	psect	bssBANK1
   720  000100                     __pbssBANK1:
   721                           	opt stack 0
   722  000100                     _writeBuffer:
   723                           	opt stack 0
   724  000100                     	ds	64
   725  000140                     _readBuffer:
   726                           	opt stack 0
   727  000140                     	ds	64
   728                           tblptru	equ	0xFF8
   729                           tblptrh	equ	0xFF7
   730                           tblptrl	equ	0xFF6
   731                           tablat	equ	0xFF5
   732                           prodh	equ	0xFF4
   733                           prodl	equ	0xFF3
   734                           intcon	equ	0xFF2
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           indf1	equ	0xFE7
   738                           postdec1	equ	0xFE5
   739                           fsr1h	equ	0xFE2
   740                           fsr1l	equ	0xFE1
   741                           indf2	equ	0xFDF
   742                           postinc2	equ	0xFDE
   743                           postdec2	equ	0xFDD
   744                           plusw2	equ	0xFDB
   745                           fsr2h	equ	0xFDA
   746                           fsr2l	equ	0xFD9
   747                           status	equ	0xFD8
   748                           
   749                           	psect	cstackBANK0
   750  000093                     __pcstackBANK0:
   751                           	opt stack 0
   752  000093                     ??_PIC18F26K40_sendByteMsbToLsb:
   753  000093                     ?_USBTransferOnePacket:
   754                           	opt stack 0
   755  000093                     PIC18F26K40_sendByte@direction:
   756                           	opt stack 0
   757  000093                     BUTTON_IsPressed@button:
   758                           	opt stack 0
   759  000093                     BUTTON_Enable@button:
   760                           	opt stack 0
   761  000093                     LED_Enable@led:
   762                           	opt stack 0
   763  000093                     USBTransferOnePacket@dir:
   764                           	opt stack 0
   765  000093                     putUSBUSART@data:
   766                           	opt stack 0
   767  000093                     putrsUSBUSART@data:
   768                           	opt stack 0
   769  000093                     memset@p1:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x0
   773  000093                     	ds	1
   774  000094                     ??_PIC18F26K40_sendByte:
   775  000094                     SYSTEM_Initialize@state:
   776                           	opt stack 0
   777  000094                     USBTransferOnePacket@data:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x1
   781  000094                     	ds	1
   782  000095                     ??_putrsUSBUSART:
   783  000095                     PIC18F26K40_sendByteMsbToLsb@info:
   784                           	opt stack 0
   785  000095                     putUSBUSART@length:
   786                           	opt stack 0
   787  000095                     memset@c:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x2
   791  000095                     	ds	1
   792  000096                     PIC18F26K40_sendByte@info:
   793                           	opt stack 0
   794  000096                     PIC18F26K40_sendByteMsbToLsb@i:
   795                           	opt stack 0
   796  000096                     USBTransferOnePacket@len:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x3
   800  000096                     	ds	1
   801  000097                     ??_USBTransferOnePacket:
   802  000097                     PIC18F26K40_sendByte@j:
   803                           	opt stack 0
   804  000097                     putrsUSBUSART@pData:
   805                           	opt stack 0
   806  000097                     memset@n:
   807                           	opt stack 0
   808  000097                     PIC18F26K40_loadDataIntoNVM@data:
   809                           	opt stack 0
   810                           
   811                           ; 4 bytes @ 0x4
   812  000097                     	ds	1
   813  000098                     PIC18F26K40_sendByte@i:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x5
   817  000098                     	ds	1
   818  000099                     ?_PIC18F26K40_readThreeBytes:
   819                           	opt stack 0
   820  000099                     PIC18F26K40_readThreeBytes@IncreasePC:
   821                           	opt stack 0
   822  000099                     USBTransferOnePacket@ep:
   823                           	opt stack 0
   824  000099                     putrsUSBUSART@len:
   825                           	opt stack 0
   826  000099                     memset@p:
   827                           	opt stack 0
   828  000099                     PIC18F26K40_enterLowVoltageProg@code:
   829                           	opt stack 0
   830  000099                     PIC18F26K40_loadPC@address:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x6
   834  000099                     	ds	1
   835  00009A                     USBTransferOnePacket@handle:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x7
   839  00009A                     	ds	1
   840  00009B                     PIC18F26K40_loadDataIntoNVM@IncreasePC:
   841                           	opt stack 0
   842  00009B                     USBDeviceInit@i:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x8
   846  00009B                     	ds	1
   847  00009C                     ??_PIC18F26K40_loadDataIntoNVM:
   848  00009C                     CDCTxService@i:
   849                           	opt stack 0
   850  00009C                     getsUSBUSART@buffer:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x9
   854  00009C                     	ds	1
   855  00009D                     ??_PIC18F26K40_readThreeBytes:
   856  00009D                     CDCTxService@byte_to_send:
   857                           	opt stack 0
   858  00009D                     PIC18F26K40_loadPC@tempAddress:
   859                           	opt stack 0
   860  00009D                     PIC18F26K40_loadDataIntoNVM@tempData:
   861                           	opt stack 0
   862                           
   863                           ; 4 bytes @ 0xA
   864  00009D                     	ds	1
   865  00009E                     getsUSBUSART@len:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0xB
   869  00009E                     	ds	1
   870  00009F                     
   871                           ; 1 bytes @ 0xC
   872  00009F                     	ds	5
   873  0000A4                     PIC18F26K40_readThreeBytes@direction:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x11
   877  0000A4                     	ds	1
   878  0000A5                     PIC18F26K40_readThreeBytes@data:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0x12
   882  0000A5                     	ds	4
   883  0000A9                     PIC18F26K40_readThreeBytes@j:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x16
   887  0000A9                     	ds	1
   888  0000AA                     PIC18F26K40_readThreeBytes@i:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x17
   892  0000AA                     	ds	1
   893  0000AB                     APP_DeviceCDCBasicDemoTasks@a:
   894                           	opt stack 0
   895                           
   896                           ; 4 bytes @ 0x18
   897  0000AB                     	ds	4
   898  0000AF                     APP_DeviceCDCBasicDemoTasks@a_2114:
   899                           	opt stack 0
   900                           
   901                           ; 4 bytes @ 0x1C
   902  0000AF                     	ds	4
   903  0000B3                     APP_DeviceCDCBasicDemoTasks@numBytesRead:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x20
   907  0000B3                     	ds	1
   908  0000B4                     APP_DeviceCDCBasicDemoTasks@i:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x21
   912  0000B4                     	ds	1
   913  0000B5                     ??_main:
   914                           
   915                           ; 1 bytes @ 0x22
   916  0000B5                     	ds	2
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           prodh	equ	0xFF4
   922                           prodl	equ	0xFF3
   923                           intcon	equ	0xFF2
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           indf1	equ	0xFE7
   927                           postdec1	equ	0xFE5
   928                           fsr1h	equ	0xFE2
   929                           fsr1l	equ	0xFE1
   930                           indf2	equ	0xFDF
   931                           postinc2	equ	0xFDE
   932                           postdec2	equ	0xFDD
   933                           plusw2	equ	0xFDB
   934                           fsr2h	equ	0xFDA
   935                           fsr2l	equ	0xFD9
   936                           status	equ	0xFD8
   937                           
   938                           	psect	cstackCOMRAM
   939  00002A                     __pcstackCOMRAM:
   940                           	opt stack 0
   941  00002A                     ??_USBStdGetDscHandler:
   942  00002A                     ?i2_USBTransferOnePacket:
   943                           	opt stack 0
   944  00002A                     LED_On@led:
   945                           	opt stack 0
   946  00002A                     LED_Off@led:
   947                           	opt stack 0
   948  00002A                     USBConfigureEndpoint@direction:
   949                           	opt stack 0
   950  00002A                     USBCtrlTrfTxService@byteToSend:
   951                           	opt stack 0
   952  00002A                     USBCtrlTrfRxService@i:
   953                           	opt stack 0
   954  00002A                     i2BUTTON_Enable@button:
   955                           	opt stack 0
   956  00002A                     i2LED_Enable@led:
   957                           	opt stack 0
   958  00002A                     i2USBTransferOnePacket@dir:
   959                           	opt stack 0
   960  00002A                     USBStdGetStatusHandler@p:
   961                           	opt stack 0
   962  00002A                     memcpy@d1:
   963                           	opt stack 0
   964  00002A                     i2memset@p1:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x0
   968  00002A                     	ds	1
   969  00002B                     ??_USBConfigureEndpoint:
   970  00002B                     USBCtrlTrfRxService@byteToRead:
   971                           	opt stack 0
   972  00002B                     USBCtrlTrfInHandler@lastDTS:
   973                           	opt stack 0
   974  00002B                     i2SYSTEM_Initialize@state:
   975                           	opt stack 0
   976  00002B                     i2USBTransferOnePacket@data:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x1
   980  00002B                     	ds	1
   981  00002C                     memcpy@s1:
   982                           	opt stack 0
   983  00002C                     i2memset@c:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x2
   987  00002C                     	ds	1
   988  00002D                     i2USBTransferOnePacket@len:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x3
   992  00002D                     	ds	1
   993  00002E                     ??i2_USBTransferOnePacket:
   994  00002E                     memcpy@n:
   995                           	opt stack 0
   996  00002E                     i2memset@n:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x4
  1000  00002E                     	ds	1
  1001  00002F                     USBConfigureEndpoint@EPNum:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x5
  1005  00002F                     	ds	1
  1006  000030                     i2USBTransferOnePacket@ep:
  1007                           	opt stack 0
  1008  000030                     USBConfigureEndpoint@handle:
  1009                           	opt stack 0
  1010  000030                     memcpy@d:
  1011                           	opt stack 0
  1012  000030                     i2memset@p:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x6
  1016  000030                     	ds	1
  1017  000031                     i2USBTransferOnePacket@handle:
  1018                           	opt stack 0
  1019                           
  1020                           ; 2 bytes @ 0x7
  1021  000031                     	ds	1
  1022  000032                     USBEnableEndpoint@options:
  1023                           	opt stack 0
  1024  000032                     i2USBDeviceInit@i:
  1025                           	opt stack 0
  1026  000032                     memcpy@s:
  1027                           	opt stack 0
  1028                           
  1029                           ; 2 bytes @ 0x8
  1030  000032                     	ds	1
  1031  000033                     USBEnableEndpoint@p:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x9
  1035  000033                     	ds	1
  1036  000034                     memcpy@tmp:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0xA
  1040  000034                     	ds	1
  1041  000035                     USBEnableEndpoint@ep:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0xB
  1045  000035                     	ds	1
  1046  000036                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0xC
  1050  000036                     	ds	2
  1051  000038                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0xE
  1055  000038                     	ds	2
  1056  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x10
  1060  00003A                     	ds	2
  1061  00003C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1062                           
  1063                           ; 1 bytes @ 0x12
  1064  00003C                     	ds	2
  1065  00003E                     ??_USBStdFeatureReqHandler:
  1066  00003E                     USBStdSetCfgHandler@i:
  1067                           	opt stack 0
  1068                           
  1069                           ; 1 bytes @ 0x14
  1070  00003E                     	ds	2
  1071  000040                     USBStdFeatureReqHandler@pUEP:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x16
  1075  000040                     	ds	2
  1076  000042                     USBStdFeatureReqHandler@current_ep_data:
  1077                           	opt stack 0
  1078                           
  1079                           ; 1 bytes @ 0x18
  1080  000042                     	ds	1
  1081  000043                     USBStdFeatureReqHandler@p:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x19
  1085  000043                     	ds	2
  1086  000045                     ??_USBCheckStdRequest:
  1087                           
  1088                           ; 1 bytes @ 0x1B
  1089  000045                     	ds	1
  1090  000046                     ??_USBCtrlEPService:
  1091  000046                     
  1092                           ; 1 bytes @ 0x1C
  1093  000046                     	ds	1
  1094  000047                     USBDeviceTasks@i:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0x1D
  1098  000047                     	ds	1
  1099  000048                     ??_SYS_InterruptHigh:
  1100                           
  1101                           ; 1 bytes @ 0x1E
  1102  000048                     	ds	10
  1103                           tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           prodh	equ	0xFF4
  1108                           prodl	equ	0xFF3
  1109                           intcon	equ	0xFF2
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           indf1	equ	0xFE7
  1113                           postdec1	equ	0xFE5
  1114                           fsr1h	equ	0xFE2
  1115                           fsr1l	equ	0xFE1
  1116                           indf2	equ	0xFDF
  1117                           postinc2	equ	0xFDE
  1118                           postdec2	equ	0xFDD
  1119                           plusw2	equ	0xFDB
  1120                           fsr2h	equ	0xFDA
  1121                           fsr2l	equ	0xFD9
  1122                           status	equ	0xFD8
  1123                           
  1124 ;;
  1125 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1126 ;;
  1127 ;; *************** function _main *****************
  1128 ;; Defined at:
  1129 ;;		line 12 in file "main.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1143 ;;      Params:         0       0       0       0
  1144 ;;      Locals:         0       0       0       0
  1145 ;;      Temps:          0       2       0       0
  1146 ;;      Totals:         0       2       0       0
  1147 ;;Total ram usage:        2 bytes
  1148 ;; Hardware stack levels required when called:   14
  1149 ;; This function calls:
  1150 ;;		_APP_DeviceCDCBasicDemoTasks
  1151 ;;		_SYSTEM_Initialize
  1152 ;;		_USBDeviceAttach
  1153 ;;		_USBDeviceInit
  1154 ;; This function is called by:
  1155 ;;		Startup code after reset
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text0
  1160  001884                     __ptext0:
  1161                           	opt stack 0
  1162  001884                     _main:
  1163                           	opt stack 17
  1164                           
  1165                           ;main.c: 13: ANSEL = ANSELH = 0;
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;incstack = 0
  1169  001884  6A7F               	clrf	3967,c	;volatile
  1170  001886  6A7E               	clrf	3966,c	;volatile
  1171                           
  1172                           ;main.c: 14: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1173  001888  0E00               	movlw	0
  1174  00188A  EC1E  F00D         	call	_SYSTEM_Initialize
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;main.c: 15: USBDeviceInit();
  1178  00188E  EC0C  F00A         	call	_USBDeviceInit	;wreg free
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;main.c: 16: USBDeviceAttach();
  1182  001892  EC0E  F00C         	call	_USBDeviceAttach	;wreg free
  1183  001896                     l5042:
  1184                           
  1185                           ;main.c: 18: ;
  1186                           ;main.c: 37: APP_DeviceCDCBasicDemoTasks();
  1187  001896  ECC4  F002         	call	_APP_DeviceCDCBasicDemoTasks	;wreg free
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 38: _delay((unsigned long)((100)*(12000000/4000.0)));
  1191  00189A  0E02               	movlw	2
  1192  00189C  0100               	movlb	0	; () banked
  1193  00189E  6FB6               	movwf	(??_main+1)& (0+255),b
  1194  0018A0  0E86               	movlw	134
  1195  0018A2  6FB5               	movwf	??_main& (0+255),b
  1196  0018A4  0E99               	movlw	153
  1197  0018A6                     u4097:
  1198  0018A6  2EE8               	decfsz	wreg,f,c
  1199  0018A8  D7FE               	bra	u4097
  1200  0018AA  2FB5               	decfsz	??_main& (0+255),f,b
  1201  0018AC  D7FC               	bra	u4097
  1202  0018AE  2FB6               	decfsz	(??_main+1)& (0+255),f,b
  1203  0018B0  D7FA               	bra	u4097
  1204  0018B2  D7F1               	goto	l5042
  1205  0018B4                     __end_of_main:
  1206                           	opt stack 0
  1207                           tblptru	equ	0xFF8
  1208                           tblptrh	equ	0xFF7
  1209                           tblptrl	equ	0xFF6
  1210                           tablat	equ	0xFF5
  1211                           prodh	equ	0xFF4
  1212                           prodl	equ	0xFF3
  1213                           intcon	equ	0xFF2
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           indf1	equ	0xFE7
  1217                           postdec1	equ	0xFE5
  1218                           fsr1h	equ	0xFE2
  1219                           fsr1l	equ	0xFE1
  1220                           indf2	equ	0xFDF
  1221                           postinc2	equ	0xFDE
  1222                           postdec2	equ	0xFDD
  1223                           plusw2	equ	0xFDB
  1224                           fsr2h	equ	0xFDA
  1225                           fsr2l	equ	0xFD9
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _USBDeviceInit *****************
  1229 ;; Defined at:
  1230 ;;		line 277 in file "picLibs/usb_device.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  i               1    8[BANK0 ] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 3F/0
  1241 ;;		On exit  : 3F/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1244 ;;      Params:         0       0       0       0
  1245 ;;      Locals:         0       1       0       0
  1246 ;;      Temps:          0       0       0       0
  1247 ;;      Totals:         0       1       0       0
  1248 ;;Total ram usage:        1 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:   11
  1251 ;; This function calls:
  1252 ;;		_memset
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text1
  1259  001418                     __ptext1:
  1260                           	opt stack 0
  1261  001418                     _USBDeviceInit:
  1262                           	opt stack 0
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;usb_device.c: 279: uint8_t i;
  1266                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1267                           
  1268                           ;incstack = 0
  1269                           
  1270                           ;usb_device.c: 285: ;
  1271                           ;usb_device.c: 288: {UEIR = 0;};
  1272                           
  1273                           ;usb_device.c: 291: {UIR = 0;};
  1274                           
  1275                           ;usb_device.c: 294: UEP0 = 0;
  1276  001418  ECCA  F004         	call	PL76	;call to abstracted procedure
  1277                           
  1278                           ; BSR set to: 15
  1279                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1280  00141C  0E54               	movlw	84
  1281  00141E  0100               	movlb	0	; () banked
  1282  001420  6F93               	movwf	memset@p1& (0+255),b
  1283  001422  0E0F               	movlw	15
  1284  001424  6F94               	movwf	(memset@p1+1)& (0+255),b
  1285  001426  6B96               	clrf	(memset@c+1)& (0+255),b
  1286  001428  6B95               	clrf	memset@c& (0+255),b
  1287  00142A  6B98               	clrf	(memset@n+1)& (0+255),b
  1288  00142C  0E02               	movlw	2
  1289  00142E  6F97               	movwf	memset@n& (0+255),b
  1290  001430  ECB4  F00C         	call	_memset	;wreg free
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1294                           
  1295                           ; BSR set to: 0
  1296                           
  1297                           ; BSR set to: 15
  1298  001434  EC20  F00C         	call	PL30	;call to abstracted procedure
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;usb_device.c: 301: ;
  1302                           ;usb_device.c: 304: ;
  1303                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1304  001438  0100               	movlb	0	; () banked
  1305  00143A  6B9B               	clrf	USBDeviceInit@i& (0+255),b
  1306  00143C                     l4958:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;usb_device.c: 308: {
  1310                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1311  00143C  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1312  00143E  ECBE  F004         	call	PL34	;call to abstracted procedure
  1313                           
  1314                           ; BSR set to: 0
  1315  001442  2B9B               	incf	USBDeviceInit@i& (0+255),f,b
  1316                           
  1317                           ; BSR set to: 0
  1318  001444  0E0B               	movlw	11
  1319  001446  659B               	cpfsgt	USBDeviceInit@i& (0+255),b
  1320  001448  D7F9               	goto	l4958
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;usb_device.c: 310: }
  1324                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1325                           
  1326                           ;usb_device.c: 316: UADDR = 0x00;
  1327                           
  1328                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1329                           
  1330                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1331                           
  1332                           ;usb_device.c: 326: {
  1333                           ;usb_device.c: 327: (UIR &= 0xF7);
  1334                           
  1335                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1336                           
  1337                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1338                           
  1339                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1340                           
  1341                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1342                           
  1343                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1344                           
  1345                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1346                           
  1347                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1348                           
  1349                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1353  00144A  ECAA  F004         	call	PL20	;call to abstracted procedure
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1357  00144E  6B9B               	clrf	USBDeviceInit@i& (0+255),b
  1358  001450                     l4988:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;usb_device.c: 346: {
  1362                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1363  001450  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1364  001452  EC8A  F005         	call	PL26	;call to abstracted procedure
  1365  001456  6ADE               	clrf	postinc2,c
  1366  001458  6ADD               	clrf	postdec2,c
  1367                           
  1368                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1369  00145A  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1370  00145C  EC84  F005         	call	PL24	;call to abstracted procedure
  1371  001460  6ADE               	clrf	postinc2,c
  1372  001462  6ADD               	clrf	postdec2,c
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1376  001464  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1377  001466  ECD5  F004         	call	PL88	;call to abstracted procedure
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1381  00146A  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1382  00146C  ECD0  F004         	call	PL80	;call to abstracted procedure
  1383                           
  1384                           ; BSR set to: 0
  1385  001470  2B9B               	incf	USBDeviceInit@i& (0+255),f,b
  1386                           
  1387                           ; BSR set to: 0
  1388  001472  0E02               	movlw	2
  1389  001474  659B               	cpfsgt	USBDeviceInit@i& (0+255),b
  1390  001476  D7EC               	goto	l4988
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;usb_device.c: 351: }
  1394                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1395  001478  0E08               	movlw	8
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1399                           
  1400                           ; BSR set to: 15
  1401                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1402                           
  1403                           ; BSR set to: 2
  1404                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1405                           
  1406                           ; BSR set to: 2
  1407                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1408                           
  1409                           ; BSR set to: 2
  1410                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1411                           
  1412                           ; BSR set to: 2
  1413                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1414                           
  1415                           ; BSR set to: 2
  1416                           ;usb_device.c: 366: USB1msTickCount = 0;
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1423                           
  1424                           ; BSR set to: 0
  1425  00147A  EF91  F004         	goto	PL14	;call to abstracted procedure
  1426  00147E                     __end_of_USBDeviceInit:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           prodh	equ	0xFF4
  1433                           prodl	equ	0xFF3
  1434                           intcon	equ	0xFF2
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           indf1	equ	0xFE7
  1438                           postdec1	equ	0xFE5
  1439                           fsr1h	equ	0xFE2
  1440                           fsr1l	equ	0xFE1
  1441                           indf2	equ	0xFDF
  1442                           postinc2	equ	0xFDE
  1443                           postdec2	equ	0xFDD
  1444                           plusw2	equ	0xFDB
  1445                           fsr2h	equ	0xFDA
  1446                           fsr2l	equ	0xFD9
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _memset *****************
  1450 ;; Defined at:
  1451 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  p1              2    0[BANK0 ] PTR void 
  1454 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1455 ;;  c               2    2[BANK0 ] int 
  1456 ;;  n               2    4[BANK0 ] unsigned int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  p               2    6[BANK0 ] PTR unsigned char 
  1459 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  2    0[BANK0 ] PTR void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 3F/0
  1466 ;;		On exit  : 3F/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1469 ;;      Params:         0       6       0       0
  1470 ;;      Locals:         0       2       0       0
  1471 ;;      Temps:          0       0       0       0
  1472 ;;      Totals:         0       8       0       0
  1473 ;;Total ram usage:        8 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:   10
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_USBDeviceInit
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text2
  1484  001968                     __ptext2:
  1485                           	opt stack 0
  1486  001968                     _memset:
  1487                           	opt stack 19
  1488                           
  1489                           ; BSR set to: 0
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;incstack = 0
  1493  001968  C093  F099         	movff	memset@p1,memset@p
  1494  00196C  C094  F09A         	movff	memset@p1+1,memset@p+1
  1495  001970  D008               	goto	l4864
  1496  001972                     l4860:
  1497                           
  1498                           ; BSR set to: 0
  1499  001972  C099  FFD9         	movff	memset@p,fsr2l
  1500  001976  C09A  FFDA         	movff	memset@p+1,fsr2h
  1501  00197A  C095  FFDF         	movff	memset@c,indf2
  1502                           
  1503                           ; BSR set to: 0
  1504  00197E  4B99               	infsnz	memset@p& (0+255),f,b
  1505  001980  2B9A               	incf	(memset@p+1)& (0+255),f,b
  1506  001982                     l4864:
  1507                           
  1508                           ; BSR set to: 0
  1509  001982  0797               	decf	memset@n& (0+255),f,b
  1510  001984  A0D8               	btfss	status,0,c
  1511  001986  0798               	decf	(memset@n+1)& (0+255),f,b
  1512  001988  2997               	incf	memset@n& (0+255),w,b
  1513  00198A  E1F3               	bnz	l4860
  1514  00198C  2998               	incf	(memset@n+1)& (0+255),w,b
  1515  00198E  E1F1               	bnz	l4860
  1516                           
  1517                           ; BSR set to: 0
  1518  001990  0012               	return		;funcret
  1519  001992                     __end_of_memset:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           prodh	equ	0xFF4
  1526                           prodl	equ	0xFF3
  1527                           intcon	equ	0xFF2
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           indf1	equ	0xFE7
  1531                           postdec1	equ	0xFE5
  1532                           fsr1h	equ	0xFE2
  1533                           fsr1l	equ	0xFE1
  1534                           indf2	equ	0xFDF
  1535                           postinc2	equ	0xFDE
  1536                           postdec2	equ	0xFDD
  1537                           plusw2	equ	0xFDB
  1538                           fsr2h	equ	0xFDA
  1539                           fsr2l	equ	0xFD9
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function _USBDeviceAttach *****************
  1543 ;; Defined at:
  1544 ;;		line 1352 in file "picLibs/usb_device.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2
  1553 ;; Tracked objects:
  1554 ;;		On entry : 3F/0
  1555 ;;		On exit  : 3F/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1558 ;;      Params:         0       0       0       0
  1559 ;;      Locals:         0       0       0       0
  1560 ;;      Temps:          0       0       0       0
  1561 ;;      Totals:         0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:   10
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text3
  1573  00181C                     __ptext3:
  1574                           	opt stack 0
  1575  00181C                     _USBDeviceAttach:
  1576                           	opt stack 20
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;usb_device.c: 1356: {
  1580                           ;usb_device.c: 1357: if(1 == 1)
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;incstack = 0
  1584  00181C  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1585  00181E  A4D8               	btfss	status,2,c
  1586  001820  0012               	return	
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;usb_device.c: 1358: {
  1590                           ;usb_device.c: 1360: UCON = 0;
  1591  001822  6A64               	clrf	3940,c	;volatile
  1592                           
  1593                           ;usb_device.c: 1363: UIE = 0;
  1594  001824  6A60               	clrf	3936,c	;volatile
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1598  001826  D80C               	call	PL30	;call to abstracted procedure
  1599                           
  1600                           ; BSR set to: 15
  1601                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1602  001828  8ED0               	bsf	4048,7,c	;volatile
  1603                           
  1604                           ; BSR set to: 15
  1605  00182A  84A2               	bsf	4002,2,c	;volatile
  1606                           
  1607                           ; BSR set to: 15
  1608  00182C  84A0               	bsf	4000,2,c	;volatile
  1609                           
  1610                           ; BSR set to: 15
  1611  00182E  8EF2               	bsf	intcon,7,c	;volatile
  1612                           
  1613                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1614  001830  D001               	goto	l525
  1615  001832                     l526:
  1616  001832  8664               	bsf	3940,3,c	;volatile
  1617  001834                     l525:
  1618  001834  A664               	btfss	3940,3,c	;volatile
  1619  001836  D7FD               	goto	l526
  1620                           
  1621                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1622  001838  0E01               	movlw	1
  1623  00183A  0100               	movlb	0	; () banked
  1624  00183C  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  1625                           
  1626                           ; BSR set to: 0
  1627  00183E  0C01               	retlw	1	;funcret
  1628  001840                     __end_of_USBDeviceAttach:
  1629                           	opt stack 0
  1630  001840                     PL30:
  1631                           	opt stack 19
  1632  001840  0E16               	movlw	22
  1633  001842  6E61               	movwf	3937,c	;volatile
  1634  001844  0E9F               	movlw	159
  1635  001846  010F               	movlb	15	; () banked
  1636  001848  6F5B               	movwf	91,b	;volatile
  1637  00184A  0E7B               	movlw	123
  1638  00184C  6E60               	movwf	3936,c	;volatile
  1639  00184E  0C7B               	retlw	123
  1640  001850                     __end_ofPL30:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           prodh	equ	0xFF4
  1647                           prodl	equ	0xFF3
  1648                           intcon	equ	0xFF2
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           indf1	equ	0xFE7
  1652                           postdec1	equ	0xFE5
  1653                           fsr1h	equ	0xFE2
  1654                           fsr1l	equ	0xFE1
  1655                           indf2	equ	0xFDF
  1656                           postinc2	equ	0xFDE
  1657                           postdec2	equ	0xFDD
  1658                           plusw2	equ	0xFDB
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _SYSTEM_Initialize *****************
  1664 ;; Defined at:
  1665 ;;		line 66 in file "picLibs/system.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  state           1    wreg     enum E3329
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  state           1    1[BANK0 ] enum E3329
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 3F/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1679 ;;      Params:         0       0       0       0
  1680 ;;      Locals:         0       1       0       0
  1681 ;;      Temps:          0       0       0       0
  1682 ;;      Totals:         0       1       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:   11
  1686 ;; This function calls:
  1687 ;;		_BUTTON_Enable
  1688 ;;		_LED_Enable
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text4
  1695  001A3C                     __ptext4:
  1696                           	opt stack 0
  1697  001A3C                     _SYSTEM_Initialize:
  1698                           	opt stack 19
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;incstack = 0
  1702                           ;SYSTEM_Initialize@state stored from wreg
  1703  001A3C  0100               	movlb	0	; () banked
  1704  001A3E  6F94               	movwf	SYSTEM_Initialize@state& (0+255),b
  1705                           
  1706                           ;system.c: 68: switch(state)
  1707  001A40  D006               	goto	l4940
  1708  001A42                     l4936:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;system.c: 71: LED_Enable(LED_D1);
  1712  001A42  0E01               	movlw	1
  1713  001A44  EC5A  F00C         	call	_LED_Enable
  1714                           
  1715                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  1716  001A48  0E01               	movlw	1
  1717  001A4A  EF72  F00D         	goto	_BUTTON_Enable
  1718  001A4E                     l4940:
  1719  001A4E  0100               	movlb	0	; () banked
  1720  001A50  5194               	movf	SYSTEM_Initialize@state& (0+255),w,b
  1721                           
  1722                           ; Switch size 1, requested type "space"
  1723                           ; Number of cases is 3, Range of values is 0 to 2
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte           10     6 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  001A52  E0F7               	bz	l4936
  1729  001A54  EF1A  F00D         	goto	PL104	;call to abstracted procedure
  1730  001A58                     __end_of_SYSTEM_Initialize:
  1731                           	opt stack 0
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           prodh	equ	0xFF4
  1737                           prodl	equ	0xFF3
  1738                           intcon	equ	0xFF2
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           indf1	equ	0xFE7
  1742                           postdec1	equ	0xFE5
  1743                           fsr1h	equ	0xFE2
  1744                           fsr1l	equ	0xFE1
  1745                           indf2	equ	0xFDF
  1746                           postinc2	equ	0xFDE
  1747                           postdec2	equ	0xFDD
  1748                           plusw2	equ	0xFDB
  1749                           fsr2h	equ	0xFDA
  1750                           fsr2l	equ	0xFD9
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _LED_Enable *****************
  1754 ;; Defined at:
  1755 ;;		line 220 in file "picLibs/leds.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  led             1    wreg     enum E2
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  led             1    0[BANK0 ] enum E2
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 3F/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1769 ;;      Params:         0       0       0       0
  1770 ;;      Locals:         0       1       0       0
  1771 ;;      Temps:          0       0       0       0
  1772 ;;      Totals:         0       1       0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:   10
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_SYSTEM_Initialize
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text5
  1784  0018B4                     __ptext5:
  1785                           	opt stack 0
  1786  0018B4                     _LED_Enable:
  1787                           	opt stack 19
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;incstack = 0
  1791                           ;LED_Enable@led stored from wreg
  1792  0018B4  0100               	movlb	0	; () banked
  1793  0018B6  6F93               	movwf	LED_Enable@led& (0+255),b
  1794                           
  1795                           ;leds.c: 222: switch(led)
  1796  0018B8  D008               	goto	l4856
  1797  0018BA                     l286:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  1801  0018BA  9094               	bcf	3988,0,c	;volatile
  1802                           
  1803                           ;leds.c: 226: break;
  1804  0018BC  0012               	return	
  1805  0018BE                     l288:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  1809  0018BE  9294               	bcf	3988,1,c	;volatile
  1810                           
  1811                           ;leds.c: 230: break;
  1812  0018C0  0012               	return	
  1813  0018C2                     l289:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  1817  0018C2  9494               	bcf	3988,2,c	;volatile
  1818                           
  1819                           ;leds.c: 234: break;
  1820  0018C4  0012               	return	
  1821  0018C6                     l290:
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  1825  0018C6  9694               	bcf	3988,3,c	;volatile
  1826                           
  1827                           ;leds.c: 238: break;
  1828  0018C8  0012               	return	
  1829  0018CA                     l4856:
  1830  0018CA  0100               	movlb	0	; () banked
  1831  0018CC  5193               	movf	LED_Enable@led& (0+255),w,b
  1832                           
  1833                           ; Switch size 1, requested type "space"
  1834                           ; Number of cases is 5, Range of values is 0 to 4
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte           16     9 (average)
  1838                           ;	Chosen strategy is simple_byte
  1839  0018CE  B4D8               	btfsc	status,2,c
  1840  0018D0  0012               	return	
  1841  0018D2  0A01               	xorlw	1	; case 1
  1842  0018D4  E0F2               	bz	l286
  1843  0018D6  0A03               	xorlw	3	; case 2
  1844  0018D8  E0F2               	bz	l288
  1845  0018DA  0A01               	xorlw	1	; case 3
  1846  0018DC  E0F2               	bz	l289
  1847  0018DE  0A07               	xorlw	7	; case 4
  1848  0018E0  E0F2               	bz	l290
  1849                           
  1850                           ; BSR set to: 0
  1851  0018E2  0012               	return		;funcret
  1852  0018E4                     __end_of_LED_Enable:
  1853                           	opt stack 0
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           prodh	equ	0xFF4
  1859                           prodl	equ	0xFF3
  1860                           intcon	equ	0xFF2
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           indf1	equ	0xFE7
  1864                           postdec1	equ	0xFE5
  1865                           fsr1h	equ	0xFE2
  1866                           fsr1l	equ	0xFE1
  1867                           indf2	equ	0xFDF
  1868                           postinc2	equ	0xFDE
  1869                           postdec2	equ	0xFDD
  1870                           plusw2	equ	0xFDB
  1871                           fsr2h	equ	0xFDA
  1872                           fsr2l	equ	0xFD9
  1873                           status	equ	0xFD8
  1874                           
  1875 ;; *************** function _BUTTON_Enable *****************
  1876 ;; Defined at:
  1877 ;;		line 85 in file "picLibs/buttons.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  button          1    wreg     enum E3304
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  button          1    0[BANK0 ] enum E3304
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 3F/0
  1888 ;;		On exit  : 3F/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1891 ;;      Params:         0       0       0       0
  1892 ;;      Locals:         0       1       0       0
  1893 ;;      Temps:          0       0       0       0
  1894 ;;      Totals:         0       1       0       0
  1895 ;;Total ram usage:        1 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:   10
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_SYSTEM_Initialize
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text6
  1906  001AE4                     __ptext6:
  1907                           	opt stack 0
  1908  001AE4                     _BUTTON_Enable:
  1909                           	opt stack 19
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;incstack = 0
  1913                           ;BUTTON_Enable@button stored from wreg
  1914  001AE4  6F93               	movwf	BUTTON_Enable@button& (0+255),b
  1915                           
  1916                           ;buttons.c: 87: switch(button)
  1917  001AE6  0100               	movlb	0	; () banked
  1918  001AE8  5193               	movf	BUTTON_Enable@button& (0+255),w,b
  1919                           
  1920                           ; Switch size 1, requested type "space"
  1921                           ; Number of cases is 2, Range of values is 0 to 1
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte            7     4 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926  001AEA  EF6F  F00D         	goto	PL114	;call to abstracted procedure
  1927  001AEE                     __end_of_BUTTON_Enable:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           prodh	equ	0xFF4
  1934                           prodl	equ	0xFF3
  1935                           intcon	equ	0xFF2
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           indf1	equ	0xFE7
  1939                           postdec1	equ	0xFE5
  1940                           fsr1h	equ	0xFE2
  1941                           fsr1l	equ	0xFE1
  1942                           indf2	equ	0xFDF
  1943                           postinc2	equ	0xFDE
  1944                           postdec2	equ	0xFDD
  1945                           plusw2	equ	0xFDB
  1946                           fsr2h	equ	0xFDA
  1947                           fsr2l	equ	0xFD9
  1948                           status	equ	0xFD8
  1949                           
  1950 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  1951 ;; Defined at:
  1952 ;;		line 77 in file "picLibs/app_device_cdc_basic.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  a               4   28[BANK0 ] struct _DWORD_VAL
  1957 ;;  a               4   24[BANK0 ] struct _DWORD_VAL
  1958 ;;  i               1   33[BANK0 ] unsigned char 
  1959 ;;  numBytesRead    1   32[BANK0 ] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 3F/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1969 ;;      Params:         0       0       0       0
  1970 ;;      Locals:         0      10       0       0
  1971 ;;      Temps:          0       0       0       0
  1972 ;;      Totals:         0      10       0       0
  1973 ;;Total ram usage:       10 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:   13
  1976 ;; This function calls:
  1977 ;;		_BUTTON_IsPressed
  1978 ;;		_CDCTxService
  1979 ;;		_PIC18F26K40_enterLowVoltageProg
  1980 ;;		_PIC18F26K40_exitLowVoltageProg
  1981 ;;		_PIC18F26K40_loadDataIntoNVM
  1982 ;;		_PIC18F26K40_loadPC
  1983 ;;		_PIC18F26K40_readThreeBytes
  1984 ;;		_getsUSBUSART
  1985 ;;		_putUSBUSART
  1986 ;;		_putrsUSBUSART
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text7
  1993  000588                     __ptext7:
  1994                           	opt stack 0
  1995  000588                     _APP_DeviceCDCBasicDemoTasks:
  1996                           	opt stack 17
  1997                           
  1998                           ;app_device_cdc_basic.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;incstack = 0
  2002  000588  0E20               	movlw	32
  2003  00058A  0100               	movlb	0	; () banked
  2004  00058C  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  2005  00058E  D001               	goto	l176
  2006  000590  0C20               	retlw	32
  2007  000592                     l176:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;app_device_cdc_basic.c: 85: }
  2011                           ;app_device_cdc_basic.c: 91: if( UCONbits.SUSPND== 1 )
  2012  000592  B264               	btfsc	3940,1,c	;volatile
  2013  000594  0012               	return	
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;app_device_cdc_basic.c: 94: }
  2017                           ;app_device_cdc_basic.c: 99: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  2018  000596  0E01               	movlw	1
  2019  000598  EC48  F00D         	call	_BUTTON_IsPressed
  2020  00059C  06E8               	decf	wreg,f,c
  2021  00059E  E10C               	bnz	l179
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;app_device_cdc_basic.c: 100: {
  2025                           ;app_device_cdc_basic.c: 104: if(buttonPressed == 0)
  2026  0005A0  517F               	movf	_buttonPressed& (0+255),w,b
  2027  0005A2  E10B               	bnz	l4882
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;app_device_cdc_basic.c: 105: {
  2031                           ;app_device_cdc_basic.c: 108: if((cdc_trf_state == 0) == 1)
  2032  0005A4  5180               	movf	_cdc_trf_state& (0+255),w,b
  2033  0005A6  E109               	bnz	l4882
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;app_device_cdc_basic.c: 109: {
  2037                           ;app_device_cdc_basic.c: 110: putrsUSBUSART(buttonMessage);
  2038  0005A8  0EB8               	movlw	low _buttonMessage
  2039  0005AA  6F93               	movwf	putrsUSBUSART@data& (0+255),b
  2040  0005AC  6B94               	clrf	(putrsUSBUSART@data+1)& (0+255),b
  2041  0005AE  EC3F  F00A         	call	_putrsUSBUSART	;wreg free
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;app_device_cdc_basic.c: 111: buttonPressed = 1;
  2045  0005B2  0E01               	movlw	1
  2046  0005B4  6F7F               	movwf	_buttonPressed& (0+255),b
  2047  0005B6  D001               	goto	l4882
  2048  0005B8                     l179:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;app_device_cdc_basic.c: 115: else
  2052                           ;app_device_cdc_basic.c: 116: {
  2053                           ;app_device_cdc_basic.c: 120: buttonPressed = 0;
  2054  0005B8  6B7F               	clrf	_buttonPressed& (0+255),b
  2055  0005BA                     l4882:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;app_device_cdc_basic.c: 121: }
  2059                           ;app_device_cdc_basic.c: 126: if( (cdc_trf_state == 0) == 1)
  2060  0005BA  5180               	movf	_cdc_trf_state& (0+255),w,b
  2061  0005BC  E002 EFF1  F003    	bnz	_CDCTxService
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;app_device_cdc_basic.c: 127: {
  2065                           ;app_device_cdc_basic.c: 128: uint8_t i;
  2066                           ;app_device_cdc_basic.c: 129: uint8_t numBytesRead;
  2067                           ;app_device_cdc_basic.c: 131: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  2068  0005C2  0E40               	movlw	low _readBuffer
  2069  0005C4  6F9C               	movwf	getsUSBUSART@buffer& (0+255),b
  2070  0005C6  0E01               	movlw	high _readBuffer
  2071  0005C8  6F9D               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
  2072  0005CA  0E40               	movlw	64
  2073  0005CC  6F9E               	movwf	getsUSBUSART@len& (0+255),b
  2074  0005CE  ECB8  F008         	call	_getsUSBUSART	;wreg free
  2075  0005D2  6FB3               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),b
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;app_device_cdc_basic.c: 134: for(i=0; i<numBytesRead; i++)
  2079  0005D4  6BB4               	clrf	APP_DeviceCDCBasicDemoTasks@i& (0+255),b
  2080  0005D6  D070               	goto	l4926
  2081  0005D8                     l4888:
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;app_device_cdc_basic.c: 142: case 0x0D:
  2085                           ;app_device_cdc_basic.c: 143: putrsUSBUSART("\n\r");
  2086  0005D8  0EEC               	movlw	low (STR_2+38)
  2087  0005DA  D87D               	call	PL98	;call to abstracted procedure
  2088  0005DC  EC3F  F00A         	call	_putrsUSBUSART	;wreg free
  2089                           
  2090                           ;app_device_cdc_basic.c: 145: break;
  2091  0005E0  D06A               	goto	l4924
  2092  0005E2                     l4890:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;app_device_cdc_basic.c: 152: DWORD_VAL a;
  2096                           ;app_device_cdc_basic.c: 153: a.Val = 0x310002;
  2097  0005E2  0E02               	movlw	2
  2098  0005E4  6FAB               	movwf	APP_DeviceCDCBasicDemoTasks@a& (0+255),b
  2099  0005E6  6BAC               	clrf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),b
  2100  0005E8  0E31               	movlw	49
  2101  0005EA  6FAD               	movwf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2102  0005EC  0E00               	movlw	0
  2103  0005EE  6BAE               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;app_device_cdc_basic.c: 154: PIC18F26K40_enterLowVoltageProg();
  2107  0005F0  EC91  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;app_device_cdc_basic.c: 155: PIC18F26K40_loadPC(a);
  2111  0005F4  C0AB  F099         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadPC@address
  2112  0005F8  C0AC  F09A         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadPC@address+1
  2113  0005FC  C0AD  F09B         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadPC@address+2
  2114  000600  C0AE  F09C         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadPC@address+3
  2115  000604  ECD5  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2116                           
  2117                           ;app_device_cdc_basic.c: 156: a.Val = GLOBAL_COUNTER;
  2118  000608  51B7               	movf	_GLOBAL_COUNTER& (0+255),w,b
  2119  00060A  6FAB               	movwf	APP_DeviceCDCBasicDemoTasks@a& (0+255),b
  2120  00060C  6BAC               	clrf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),b
  2121  00060E  6BAD               	clrf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2122  000610  6BAE               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;app_device_cdc_basic.c: 157: putrsUSBUSART("GLOBAL_COUNTER is placed at 0x00310002\n\r"
      +                          );
  2126  000612  0EC6               	movlw	low STR_2
  2127  000614  D860               	call	PL98	;call to abstracted procedure
  2128  000616  EC3F  F00A         	call	_putrsUSBUSART	;wreg free
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;app_device_cdc_basic.c: 158: PIC18F26K40_loadDataIntoNVM(a, FALSE);
  2132  00061A  C0AB  F097         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadDataIntoNVM@data
  2133  00061E  C0AC  F098         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadDataIntoNVM@data+1
  2134  000622  C0AD  F099         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadDataIntoNVM@data+2
  2135  000626  C0AE  F09A         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadDataIntoNVM@data+3
  2136  00062A  6B9B               	clrf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),b
  2137  00062C  EC6E  F00A         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2138                           
  2139                           ;app_device_cdc_basic.c: 159: PIC18F26K40_exitLowVoltageProg();
  2140  000630  EC77  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2141                           
  2142                           ;app_device_cdc_basic.c: 160: GLOBAL_COUNTER++;
  2143  000634  0100               	movlb	0	; () banked
  2144  000636  2BB7               	incf	_GLOBAL_COUNTER& (0+255),f,b
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;app_device_cdc_basic.c: 161: if (GLOBAL_COUNTER>0x39)
  2148  000638  0E39               	movlw	57
  2149  00063A  65B7               	cpfsgt	_GLOBAL_COUNTER& (0+255),b
  2150  00063C  D03C               	goto	l4924
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;app_device_cdc_basic.c: 162: GLOBAL_COUNTER = 0x30;
  2154  00063E  0E30               	movlw	48
  2155  000640  6FB7               	movwf	_GLOBAL_COUNTER& (0+255),b
  2156  000642  D039               	goto	l4924
  2157  000644                     l4908:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;app_device_cdc_basic.c: 170: DWORD_VAL a;
  2161                           ;app_device_cdc_basic.c: 171: a.Val = 0x310002;
  2162  000644  0E02               	movlw	2
  2163  000646  6FAF               	movwf	APP_DeviceCDCBasicDemoTasks@a_2114& (0+255),b
  2164  000648  6BB0               	clrf	(APP_DeviceCDCBasicDemoTasks@a_2114+1)& (0+255),b
  2165  00064A  0E31               	movlw	49
  2166  00064C  6FB1               	movwf	(APP_DeviceCDCBasicDemoTasks@a_2114+2)& (0+255),b
  2167  00064E  0E00               	movlw	0
  2168  000650  6BB2               	clrf	(APP_DeviceCDCBasicDemoTasks@a_2114+3)& (0+255),b
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;app_device_cdc_basic.c: 172: PIC18F26K40_enterLowVoltageProg();
  2172  000652  EC91  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;app_device_cdc_basic.c: 173: PIC18F26K40_loadPC(a);
  2176  000656  C0AF  F099         	movff	APP_DeviceCDCBasicDemoTasks@a_2114,PIC18F26K40_loadPC@address
  2177  00065A  C0B0  F09A         	movff	APP_DeviceCDCBasicDemoTasks@a_2114+1,PIC18F26K40_loadPC@address+1
  2178  00065E  C0B1  F09B         	movff	APP_DeviceCDCBasicDemoTasks@a_2114+2,PIC18F26K40_loadPC@address+2
  2179  000662  C0B2  F09C         	movff	APP_DeviceCDCBasicDemoTasks@a_2114+3,PIC18F26K40_loadPC@address+3
  2180  000666  ECD5  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;app_device_cdc_basic.c: 174: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2184  00066A  0E00               	movlw	0
  2185  00066C  6F99               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2186  00066E  EC01  F006         	call	_PIC18F26K40_readThreeBytes
  2187  000672  C099  F0AF         	movff	?_PIC18F26K40_readThreeBytes,APP_DeviceCDCBasicDemoTasks@a_2114
  2188  000676  C09A  F0B0         	movff	?_PIC18F26K40_readThreeBytes+1,APP_DeviceCDCBasicDemoTasks@a_2114+1
  2189  00067A  C09B  F0B1         	movff	?_PIC18F26K40_readThreeBytes+2,APP_DeviceCDCBasicDemoTasks@a_2114+2
  2190  00067E  C09C  F0B2         	movff	?_PIC18F26K40_readThreeBytes+3,APP_DeviceCDCBasicDemoTasks@a_2114+3
  2191                           
  2192                           ;app_device_cdc_basic.c: 175: PIC18F26K40_exitLowVoltageProg();
  2193  000682  EC77  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2194                           
  2195                           ;app_device_cdc_basic.c: 176: writeBuffer[i] = a.v[0];
  2196  000686  0E00               	movlw	low _writeBuffer
  2197  000688  0100               	movlb	0	; () banked
  2198  00068A  25B4               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2199  00068C  6ED9               	movwf	fsr2l,c
  2200  00068E  6ADA               	clrf	fsr2h,c
  2201  000690  0E01               	movlw	high _writeBuffer
  2202  000692  22DA               	addwfc	fsr2h,f,c
  2203  000694  C0AF  FFDF         	movff	APP_DeviceCDCBasicDemoTasks@a_2114,indf2
  2204                           
  2205                           ;app_device_cdc_basic.c: 180: break;
  2206  000698  D00E               	goto	l4924
  2207  00069A                     l4922:
  2208                           
  2209                           ; BSR set to: 0
  2210  00069A  0E40               	movlw	low _readBuffer
  2211  00069C  25B4               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2212  00069E  6ED9               	movwf	fsr2l,c
  2213  0006A0  6ADA               	clrf	fsr2h,c
  2214  0006A2  0E01               	movlw	high _readBuffer
  2215  0006A4  22DA               	addwfc	fsr2h,f,c
  2216  0006A6  50DF               	movf	indf2,w,c
  2217                           
  2218                           ; Switch size 1, requested type "space"
  2219                           ; Number of cases is 3, Range of values is 10 to 65
  2220                           ; switch strategies available:
  2221                           ; Name         Instructions Cycles
  2222                           ; simple_byte           10     6 (average)
  2223                           ;	Chosen strategy is simple_byte
  2224  0006A8  0A0A               	xorlw	10	; case 10
  2225  0006AA  E096               	bz	l4888
  2226  0006AC  0A07               	xorlw	7	; case 13
  2227  0006AE  E094               	bz	l4888
  2228  0006B0  0A4C               	xorlw	76	; case 65
  2229  0006B2  E097               	bz	l4890
  2230  0006B4  D7C7               	goto	l4908
  2231  0006B6                     l4924:
  2232                           
  2233                           ; BSR set to: 0
  2234  0006B6  2BB4               	incf	APP_DeviceCDCBasicDemoTasks@i& (0+255),f,b
  2235  0006B8                     l4926:
  2236                           
  2237                           ; BSR set to: 0
  2238  0006B8  51B3               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2239  0006BA  5DB4               	subwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2240  0006BC  E3EE               	bnc	l4922
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;app_device_cdc_basic.c: 191: }
  2244                           ;app_device_cdc_basic.c: 193: if(numBytesRead > 0)
  2245  0006BE  51B3               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2246  0006C0  E008               	bz	l4932
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;app_device_cdc_basic.c: 194: {
  2250                           ;app_device_cdc_basic.c: 198: putUSBUSART(writeBuffer,numBytesRead);
  2251  0006C2  0E00               	movlw	low _writeBuffer
  2252  0006C4  6F93               	movwf	putUSBUSART@data& (0+255),b
  2253  0006C6  0E01               	movlw	high _writeBuffer
  2254  0006C8  6F94               	movwf	(putUSBUSART@data+1)& (0+255),b
  2255  0006CA  C0B3  F095         	movff	APP_DeviceCDCBasicDemoTasks@numBytesRead,putUSBUSART@length
  2256  0006CE  EC2C  F00D         	call	_putUSBUSART	;wreg free
  2257  0006D2                     l4932:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;app_device_cdc_basic.c: 199: }
  2261                           ;app_device_cdc_basic.c: 200: }
  2262                           ;app_device_cdc_basic.c: 202: CDCTxService();
  2263  0006D2  EFF1  F003         	goto	_CDCTxService	;wreg free
  2264  0006D6                     __end_of_APP_DeviceCDCBasicDemoTasks:
  2265                           	opt stack 0
  2266  0006D6                     PL98:
  2267                           	opt stack 17
  2268  0006D6  6F93               	movwf	putrsUSBUSART@data& (0+255),b
  2269  0006D8  5193               	movf	putrsUSBUSART@data& (0+255),w,b
  2270  0006DA  A4D8               	btfss	status,2,c
  2271  0006DC  0E03               	movlw	high __smallconst
  2272  0006DE  6F94               	movwf	(putrsUSBUSART@data+1)& (0+255),b
  2273  0006E0  0012               	return	
  2274  0006E2                     __end_ofPL98:
  2275                           	opt stack 0
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodh	equ	0xFF4
  2281                           prodl	equ	0xFF3
  2282                           intcon	equ	0xFF2
  2283                           postinc0	equ	0xFEE
  2284                           wreg	equ	0xFE8
  2285                           indf1	equ	0xFE7
  2286                           postdec1	equ	0xFE5
  2287                           fsr1h	equ	0xFE2
  2288                           fsr1l	equ	0xFE1
  2289                           indf2	equ	0xFDF
  2290                           postinc2	equ	0xFDE
  2291                           postdec2	equ	0xFDD
  2292                           plusw2	equ	0xFDB
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8
  2296                           
  2297 ;; *************** function _putrsUSBUSART *****************
  2298 ;; Defined at:
  2299 ;;		line 726 in file "picLibs/usb_device_cdc.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  data            2    0[BANK0 ] PTR const unsigned char 
  2302 ;;		 -> STR_2(41), STR_1(3), buttonMessage(18), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  pData           2    4[BANK0 ] PTR const unsigned char 
  2305 ;;		 -> STR_2(41), STR_1(3), buttonMessage(18), 
  2306 ;;  len             1    6[BANK0 ] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  2311 ;; Tracked objects:
  2312 ;;		On entry : 3F/0
  2313 ;;		On exit  : 3F/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2316 ;;      Params:         0       2       0       0
  2317 ;;      Locals:         0       3       0       0
  2318 ;;      Temps:          0       2       0       0
  2319 ;;      Totals:         0       7       0       0
  2320 ;;Total ram usage:        7 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:   10
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_APP_DeviceCDCBasicDemoTasks
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text8
  2331  00147E                     __ptext8:
  2332                           	opt stack 0
  2333  00147E                     _putrsUSBUSART:
  2334                           	opt stack 19
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;usb_device_cdc.c: 728: uint8_t len;
  2338                           ;usb_device_cdc.c: 729: const const char *pData;
  2339                           ;usb_device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;incstack = 0
  2343  00147E  94A0               	bcf	4000,2,c	;volatile
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  2347  001480  5180               	movf	_cdc_trf_state& (0+255),w,b
  2348  001482  E002               	bz	l815
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;usb_device_cdc.c: 756: {
  2352                           ;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  2353  001484  84A0               	bsf	4000,2,c	;volatile
  2354                           
  2355                           ;usb_device_cdc.c: 758: return;
  2356  001486  0012               	return	
  2357  001488                     l815:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;usb_device_cdc.c: 759: }
  2361                           ;usb_device_cdc.c: 765: len = 0;
  2362  001488  6B99               	clrf	putrsUSBUSART@len& (0+255),b
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;usb_device_cdc.c: 766: pData = data;
  2366  00148A  C093  F097         	movff	putrsUSBUSART@data,putrsUSBUSART@pData
  2367  00148E  C094  F098         	movff	putrsUSBUSART@data+1,putrsUSBUSART@pData+1
  2368  001492                     l4722:
  2369                           
  2370                           ;usb_device_cdc.c: 768: {
  2371                           ;usb_device_cdc.c: 769: len++;
  2372  001492  0100               	movlb	0	; () banked
  2373  001494  2B99               	incf	putrsUSBUSART@len& (0+255),f,b
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;usb_device_cdc.c: 770: if(len == 255) break;
  2377  001496  2999               	incf	putrsUSBUSART@len& (0+255),w,b
  2378  001498  E015               	bz	l4730
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;usb_device_cdc.c: 771: }while(*pData++);
  2382  00149A  5197               	movf	putrsUSBUSART@pData& (0+255),w,b
  2383  00149C  6F95               	movwf	??_putrsUSBUSART& (0+255),b
  2384  00149E  5198               	movf	(putrsUSBUSART@pData+1)& (0+255),w,b
  2385  0014A0  6F96               	movwf	(??_putrsUSBUSART+1)& (0+255),b
  2386  0014A2  4B97               	infsnz	putrsUSBUSART@pData& (0+255),f,b
  2387  0014A4  2B98               	incf	(putrsUSBUSART@pData+1)& (0+255),f,b
  2388  0014A6  C095  FFF6         	movff	??_putrsUSBUSART,tblptrl
  2389  0014AA  C096  FFF7         	movff	??_putrsUSBUSART+1,tblptrh
  2390  0014AE  6AF8               	clrf	tblptru,c
  2391  0014B0  0E02               	movlw	(high __ramtop+-1)
  2392  0014B2  64F7               	cpfsgt	tblptrh,c
  2393  0014B4  D003               	bra	u3737
  2394  0014B6  0008               	tblrd		*
  2395  0014B8  50F5               	movf	tablat,w,c
  2396  0014BA  D002               	bra	u3730
  2397  0014BC                     u3737:
  2398  0014BC  EC27  F005         	call	PL18	;call to abstracted procedure
  2399  0014C0                     u3730:
  2400  0014C0  0900               	iorlw	0
  2401  0014C2  E1E7               	bnz	l4722
  2402  0014C4                     l4730:
  2403                           
  2404                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  2405  0014C4  C093  F06D         	movff	putrsUSBUSART@data,_pCDCSrc
  2406  0014C8  C094  F06E         	movff	putrsUSBUSART@data+1,_pCDCSrc+1
  2407  0014CC  C099  F01B         	movff	putrsUSBUSART@len,_cdc_tx_len
  2408  0014D0  0100               	movlb	0	; () banked
  2409  0014D2  6B7C               	clrf	_cdc_mem_type& (0+255),b
  2410                           
  2411                           ; BSR set to: 0
  2412  0014D4  0E01               	movlw	1
  2413  0014D6  6F80               	movwf	_cdc_trf_state& (0+255),b
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  2417  0014D8  84A0               	bsf	4000,2,c	;volatile
  2418                           
  2419                           ; BSR set to: 0
  2420  0014DA  0C01               	retlw	1	;funcret
  2421  0014DC                     __end_of_putrsUSBUSART:
  2422                           	opt stack 0
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           intcon	equ	0xFF2
  2430                           postinc0	equ	0xFEE
  2431                           wreg	equ	0xFE8
  2432                           indf1	equ	0xFE7
  2433                           postdec1	equ	0xFE5
  2434                           fsr1h	equ	0xFE2
  2435                           fsr1l	equ	0xFE1
  2436                           indf2	equ	0xFDF
  2437                           postinc2	equ	0xFDE
  2438                           postdec2	equ	0xFDD
  2439                           plusw2	equ	0xFDB
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _putUSBUSART *****************
  2445 ;; Defined at:
  2446 ;;		line 556 in file "picLibs/usb_device_cdc.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  data            2    0[BANK0 ] PTR unsigned char 
  2449 ;;		 -> writeBuffer(64), 
  2450 ;;  length          1    2[BANK0 ] unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 3F/0
  2459 ;;		On exit  : 3F/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2462 ;;      Params:         0       3       0       0
  2463 ;;      Locals:         0       0       0       0
  2464 ;;      Temps:          0       0       0       0
  2465 ;;      Totals:         0       3       0       0
  2466 ;;Total ram usage:        3 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:   10
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_APP_DeviceCDCBasicDemoTasks
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text9
  2477  001A58                     __ptext9:
  2478                           	opt stack 0
  2479  001A58                     _putUSBUSART:
  2480                           	opt stack 19
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;incstack = 0
  2487  001A58  94A0               	bcf	4000,2,c	;volatile
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2491  001A5A  5180               	movf	_cdc_trf_state& (0+255),w,b
  2492  001A5C  E109               	bnz	l4776
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;usb_device_cdc.c: 583: {
  2496                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2497  001A5E  C093  F06D         	movff	putUSBUSART@data,_pCDCSrc
  2498  001A62  C094  F06E         	movff	putUSBUSART@data+1,_pCDCSrc+1
  2499                           
  2500                           ; BSR set to: 0
  2501  001A66  C095  F01B         	movff	putUSBUSART@length,_cdc_tx_len
  2502                           
  2503                           ; BSR set to: 0
  2504  001A6A  0E01               	movlw	1
  2505  001A6C  6F7C               	movwf	_cdc_mem_type& (0+255),b
  2506                           
  2507                           ; BSR set to: 0
  2508  001A6E  6F80               	movwf	_cdc_trf_state& (0+255),b
  2509  001A70                     l4776:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;usb_device_cdc.c: 585: }
  2513                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2514  001A70  84A0               	bsf	4000,2,c	;volatile
  2515                           
  2516                           ; BSR set to: 0
  2517  001A72  0012               	return		;funcret
  2518  001A74                     __end_of_putUSBUSART:
  2519                           	opt stack 0
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           prodh	equ	0xFF4
  2525                           prodl	equ	0xFF3
  2526                           intcon	equ	0xFF2
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           indf1	equ	0xFE7
  2530                           postdec1	equ	0xFE5
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           indf2	equ	0xFDF
  2534                           postinc2	equ	0xFDE
  2535                           postdec2	equ	0xFDD
  2536                           plusw2	equ	0xFDB
  2537                           fsr2h	equ	0xFDA
  2538                           fsr2l	equ	0xFD9
  2539                           status	equ	0xFD8
  2540                           
  2541 ;; *************** function _getsUSBUSART *****************
  2542 ;; Defined at:
  2543 ;;		line 485 in file "picLibs/usb_device_cdc.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  buffer          2    9[BANK0 ] PTR unsigned char 
  2546 ;;		 -> readBuffer(64), 
  2547 ;;  len             1   11[BANK0 ] unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      unsigned char 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 3F/0
  2556 ;;		On exit  : 3F/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2559 ;;      Params:         0       3       0       0
  2560 ;;      Locals:         0       0       0       0
  2561 ;;      Temps:          0       1       0       0
  2562 ;;      Totals:         0       4       0       0
  2563 ;;Total ram usage:        4 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:   11
  2566 ;; This function calls:
  2567 ;;		_USBTransferOnePacket
  2568 ;; This function is called by:
  2569 ;;		_APP_DeviceCDCBasicDemoTasks
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text10
  2574  001170                     __ptext10:
  2575                           	opt stack 0
  2576  001170                     _getsUSBUSART:
  2577                           	opt stack 18
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;incstack = 0
  2584  001170  6A1C               	clrf	_cdc_rx_len,c
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2588  001172  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2589  001174  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  2590  001176  E006               	bz	l4746
  2591                           
  2592                           ; BSR set to: 0
  2593  001178  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2594  00117C  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2595  001180  BEDF               	btfsc	indf2,7,c
  2596  001182  D028               	goto	l4760
  2597  001184                     l4746:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;usb_device_cdc.c: 490: {
  2601                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2602  001184  D829               	call	PL72	;call to abstracted procedure
  2603  001186  519E               	movf	getsUSBUSART@len& (0+255),w,b
  2604  001188  5CDE               	subwf	postinc2,w,c
  2605  00118A  E203               	bc	l4750
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2609  00118C  D825               	call	PL72	;call to abstracted procedure
  2610  00118E  50DF               	movf	indf2,w,c
  2611  001190  6F9E               	movwf	getsUSBUSART@len& (0+255),b
  2612  001192                     l4750:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2616  001192  6A1C               	clrf	_cdc_rx_len,c
  2617  001194  D00D               	goto	l4756
  2618  001196                     l4752:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2622  001196  0E80               	movlw	128
  2623  001198  241C               	addwf	_cdc_rx_len,w,c
  2624  00119A  ECFC  F005         	call	PL110	;call to abstracted procedure
  2625  00119E  501C               	movf	_cdc_rx_len,w,c
  2626  0011A0  259C               	addwf	getsUSBUSART@buffer& (0+255),w,b
  2627  0011A2  6EE1               	movwf	fsr1l,c
  2628  0011A4  0E00               	movlw	0
  2629  0011A6  219D               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  2630  0011A8  6EE2               	movwf	fsr1h,c
  2631  0011AA  CFDF FFE7          	movff	indf2,indf1
  2632                           
  2633                           ; BSR set to: 0
  2634  0011AE  2A1C               	incf	_cdc_rx_len,f,c
  2635  0011B0                     l4756:
  2636                           
  2637                           ; BSR set to: 0
  2638  0011B0  519E               	movf	getsUSBUSART@len& (0+255),w,b
  2639  0011B2  5C1C               	subwf	_cdc_rx_len,w,c
  2640  0011B4  E3F0               	bnc	l4752
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2644  0011B6  0E00               	movlw	0
  2645  0011B8  6F93               	movwf	USBTransferOnePacket@dir& (0+255),b
  2646  0011BA  0E80               	movlw	128
  2647  0011BC  6F94               	movwf	USBTransferOnePacket@data& (0+255),b
  2648  0011BE  0E02               	movlw	2
  2649  0011C0  6F95               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  2650  0011C2  0E40               	movlw	64
  2651  0011C4  6F96               	movwf	USBTransferOnePacket@len& (0+255),b
  2652  0011C6  0E02               	movlw	2
  2653  0011C8  EC43  F005         	call	_USBTransferOnePacket
  2654  0011CC  C093  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  2655  0011D0  C094  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  2656  0011D4                     l4760:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;usb_device_cdc.c: 510: }
  2660                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2661  0011D4  501C               	movf	_cdc_rx_len,w,c
  2662                           
  2663                           ; BSR set to: 0
  2664  0011D6  0012               	return		;funcret
  2665  0011D8                     __end_of_getsUSBUSART:
  2666                           	opt stack 0
  2667  0011D8                     PL72:
  2668                           	opt stack 18
  2669  0011D8  EE20 F001          	lfsr	2,1
  2670  0011DC  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2671  0011DE  26D9               	addwf	fsr2l,f,c
  2672  0011E0  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  2673  0011E2  22DA               	addwfc	fsr2h,f,c
  2674  0011E4  0012               	return	
  2675  0011E6                     __end_ofPL72:
  2676                           	opt stack 0
  2677                           tblptru	equ	0xFF8
  2678                           tblptrh	equ	0xFF7
  2679                           tblptrl	equ	0xFF6
  2680                           tablat	equ	0xFF5
  2681                           prodh	equ	0xFF4
  2682                           prodl	equ	0xFF3
  2683                           intcon	equ	0xFF2
  2684                           postinc0	equ	0xFEE
  2685                           wreg	equ	0xFE8
  2686                           indf1	equ	0xFE7
  2687                           postdec1	equ	0xFE5
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           indf2	equ	0xFDF
  2691                           postinc2	equ	0xFDE
  2692                           postdec2	equ	0xFDD
  2693                           plusw2	equ	0xFDB
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _PIC18F26K40_readThreeBytes *****************
  2699 ;; Defined at:
  2700 ;;		line 53 in file "libs/progPIC18F26K40.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  direction       1    wreg     enum E4265
  2703 ;;  IncreasePC      1    6[BANK0 ] enum E4064
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  direction       1   17[BANK0 ] enum E4265
  2706 ;;  data            4   18[BANK0 ] struct _DWORD_VAL
  2707 ;;  i               1   23[BANK0 ] unsigned char 
  2708 ;;  j               1   22[BANK0 ] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  4    6[BANK0 ] struct _DWORD_VAL
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 3F/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2718 ;;      Params:         0       4       0       0
  2719 ;;      Locals:         0       7       0       0
  2720 ;;      Temps:          0       7       0       0
  2721 ;;      Totals:         0      18       0       0
  2722 ;;Total ram usage:       18 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:   12
  2725 ;; This function calls:
  2726 ;;		_PIC18F26K40_sendByte
  2727 ;; This function is called by:
  2728 ;;		_APP_DeviceCDCBasicDemoTasks
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text11
  2733  000C02                     __ptext11:
  2734                           	opt stack 0
  2735  000C02                     _PIC18F26K40_readThreeBytes:
  2736                           	opt stack 17
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;incstack = 0
  2740                           ;PIC18F26K40_readThreeBytes@direction stored from wreg
  2741  000C02  6FA4               	movwf	PIC18F26K40_readThreeBytes@direction& (0+255),b
  2742                           
  2743                           ;progPIC18F26K40.c: 54: if (IncreasePC)
  2744  000C04  0100               	movlb	0	; () banked
  2745  000C06  5199               	movf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),w,b
  2746  000C08  E005               	bz	l4632
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;progPIC18F26K40.c: 55: PIC18F26K40_sendByte(0xFE, MSBTOLSB);
  2750  000C0A  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2751  000C0C  0EFE               	movlw	254
  2752  000C0E  ECC8  F00A         	call	_PIC18F26K40_sendByte
  2753  000C12  D004               	goto	l4634
  2754  000C14                     l4632:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;progPIC18F26K40.c: 56: else
  2758                           ;progPIC18F26K40.c: 57: PIC18F26K40_sendByte(0xFC, MSBTOLSB);
  2759  000C14  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2760  000C16  0EFC               	movlw	252
  2761  000C18  ECC8  F00A         	call	_PIC18F26K40_sendByte
  2762  000C1C                     l4634:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;progPIC18F26K40.c: 58: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2766  000C1C  D000               	nop2		;2 cycle nop
  2767  000C1E  F000               	nop	
  2768                           
  2769                           ;progPIC18F26K40.c: 59: DWORD_VAL data;
  2770                           ;progPIC18F26K40.c: 60: data.Val = 0x000000;
  2771  000C20  0100               	movlb	0	; () banked
  2772  000C22  6BA5               	clrf	PIC18F26K40_readThreeBytes@data& (0+255),b
  2773  000C24  6BA6               	clrf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),b
  2774  000C26  6BA7               	clrf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),b
  2775  000C28  6BA8               	clrf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),b
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;progPIC18F26K40.c: 61: BYTE i, j;
  2779                           ;progPIC18F26K40.c: 62: TRISCbits.TRISC6 = 1;
  2780  000C2A  8C94               	bsf	3988,6,c	;volatile
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;progPIC18F26K40.c: 63: for (i = 0; i < 23; i++) {
  2784  000C2C  6BAA               	clrf	PIC18F26K40_readThreeBytes@i& (0+255),b
  2785  000C2E                     l4646:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;progPIC18F26K40.c: 64: if (direction)
  2789  000C2E  51A4               	movf	PIC18F26K40_readThreeBytes@direction& (0+255),w,b
  2790  000C30  E003               	bz	l4650
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;progPIC18F26K40.c: 65: j = i;
  2794  000C32  C0AA  F0A9         	movff	PIC18F26K40_readThreeBytes@i,PIC18F26K40_readThreeBytes@j
  2795  000C36  D003               	goto	l4652
  2796  000C38                     l4650:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;progPIC18F26K40.c: 66: else
  2800                           ;progPIC18F26K40.c: 67: j = 22-i;
  2801  000C38  51AA               	movf	PIC18F26K40_readThreeBytes@i& (0+255),w,b
  2802  000C3A  0816               	sublw	22
  2803  000C3C  6FA9               	movwf	PIC18F26K40_readThreeBytes@j& (0+255),b
  2804  000C3E                     l4652:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;progPIC18F26K40.c: 68: LATCbits.LATC5 = 1;
  2808  000C3E  8A8B               	bsf	3979,5,c	;volatile
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;progPIC18F26K40.c: 69: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2812  000C40  D000               	nop2		;2 cycle nop
  2813  000C42  F000               	nop	
  2814                           
  2815                           ;progPIC18F26K40.c: 70: if (PORTCbits.RC6 == 1)
  2816  000C44  AC82               	btfss	3970,6,c	;volatile
  2817  000C46  D01F               	goto	l4660
  2818                           
  2819                           ;progPIC18F26K40.c: 71: data.Val = data.Val | ((DWORD)(0x1<<j));
  2820  000C48  C0A9  F09D         	movff	PIC18F26K40_readThreeBytes@j,??_PIC18F26K40_readThreeBytes
  2821  000C4C  0E01               	movlw	1
  2822  000C4E  0100               	movlb	0	; () banked
  2823  000C50  6F9E               	movwf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),b
  2824  000C52  6B9F               	clrf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),b
  2825  000C54  2B9D               	incf	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2826  000C56  D003               	goto	u3664
  2827  000C58                     u3665:
  2828  000C58  90D8               	bcf	status,0,c
  2829  000C5A  379E               	rlcf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),f,b
  2830  000C5C  379F               	rlcf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),f,b
  2831  000C5E                     u3664:
  2832  000C5E  2F9D               	decfsz	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2833  000C60  D7FB               	goto	u3665
  2834  000C62  C09E  F0A0         	movff	??_PIC18F26K40_readThreeBytes+1,??_PIC18F26K40_readThreeBytes+3
  2835  000C66  C09F  F0A1         	movff	??_PIC18F26K40_readThreeBytes+2,??_PIC18F26K40_readThreeBytes+4
  2836  000C6A  0E00               	movlw	0
  2837  000C6C  0100               	movlb	0	; () banked
  2838  000C6E  BFA1               	btfsc	(??_PIC18F26K40_readThreeBytes+4)& (0+255),7,b
  2839  000C70  0EFF               	movlw	255
  2840  000C72  6FA2               	movwf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),b
  2841  000C74  6FA3               	movwf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),b
  2842  000C76  51A0               	movf	(??_PIC18F26K40_readThreeBytes+3)& (0+255),w,b
  2843  000C78  13A5               	iorwf	PIC18F26K40_readThreeBytes@data& (0+255),f,b
  2844  000C7A  51A1               	movf	(??_PIC18F26K40_readThreeBytes+4)& (0+255),w,b
  2845  000C7C  13A6               	iorwf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),f,b
  2846  000C7E  51A2               	movf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),w,b
  2847  000C80  13A7               	iorwf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),f,b
  2848  000C82  51A3               	movf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),w,b
  2849  000C84  13A8               	iorwf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),f,b
  2850  000C86                     l4660:
  2851                           
  2852                           ;progPIC18F26K40.c: 72: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2853  000C86  D000               	nop2		;2 cycle nop
  2854  000C88  F000               	nop	
  2855                           
  2856                           ;progPIC18F26K40.c: 73: LATCbits.LATC5 = 0;
  2857  000C8A  9A8B               	bcf	3979,5,c	;volatile
  2858                           
  2859                           ;progPIC18F26K40.c: 74: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2860  000C8C  D000               	nop2		;2 cycle nop
  2861  000C8E  F000               	nop	
  2862  000C90  0100               	movlb	0	; () banked
  2863  000C92  2BAA               	incf	PIC18F26K40_readThreeBytes@i& (0+255),f,b
  2864                           
  2865                           ; BSR set to: 0
  2866  000C94  0E16               	movlw	22
  2867  000C96  65AA               	cpfsgt	PIC18F26K40_readThreeBytes@i& (0+255),b
  2868  000C98  D7CA               	goto	l4646
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;progPIC18F26K40.c: 75: }
  2872                           ;progPIC18F26K40.c: 76: LATCbits.LATC5 = 1;
  2873  000C9A  8A8B               	bsf	3979,5,c	;volatile
  2874                           
  2875                           ;progPIC18F26K40.c: 77: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2876  000C9C  D000               	nop2		;2 cycle nop
  2877  000C9E  F000               	nop	
  2878                           
  2879                           ;progPIC18F26K40.c: 78: LATCbits.LATC5 = 0;
  2880  000CA0  9A8B               	bcf	3979,5,c	;volatile
  2881                           
  2882                           ;progPIC18F26K40.c: 79: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2883  000CA2  D000               	nop2		;2 cycle nop
  2884  000CA4  F000               	nop	
  2885                           
  2886                           ;progPIC18F26K40.c: 81: TRISCbits.TRISC6 = 0;
  2887  000CA6  9C94               	bcf	3988,6,c	;volatile
  2888                           
  2889                           ;progPIC18F26K40.c: 82: return data;
  2890  000CA8  C0A5  F099         	movff	PIC18F26K40_readThreeBytes@data,?_PIC18F26K40_readThreeBytes
  2891  000CAC  C0A6  F09A         	movff	PIC18F26K40_readThreeBytes@data+1,?_PIC18F26K40_readThreeBytes+1
  2892  000CB0  C0A7  F09B         	movff	PIC18F26K40_readThreeBytes@data+2,?_PIC18F26K40_readThreeBytes+2
  2893  000CB4  C0A8  F09C         	movff	PIC18F26K40_readThreeBytes@data+3,?_PIC18F26K40_readThreeBytes+3
  2894  000CB8  0C16               	retlw	22	;funcret
  2895  000CBA                     __end_of_PIC18F26K40_readThreeBytes:
  2896                           	opt stack 0
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           postinc0	equ	0xFEE
  2905                           wreg	equ	0xFE8
  2906                           indf1	equ	0xFE7
  2907                           postdec1	equ	0xFE5
  2908                           fsr1h	equ	0xFE2
  2909                           fsr1l	equ	0xFE1
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           plusw2	equ	0xFDB
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _PIC18F26K40_loadPC *****************
  2919 ;; Defined at:
  2920 ;;		line 86 in file "libs/progPIC18F26K40.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  address         4    6[BANK0 ] struct _DWORD_VAL
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  tempAddress     4   10[BANK0 ] struct _DWORD_VAL
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 3F/0
  2931 ;;		On exit  : 3F/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2934 ;;      Params:         0       4       0       0
  2935 ;;      Locals:         0       4       0       0
  2936 ;;      Temps:          0       0       0       0
  2937 ;;      Totals:         0       8       0       0
  2938 ;;Total ram usage:        8 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:   12
  2941 ;; This function calls:
  2942 ;;		_PIC18F26K40_sendByte
  2943 ;; This function is called by:
  2944 ;;		_APP_DeviceCDCBasicDemoTasks
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text12
  2949  0017AA                     __ptext12:
  2950                           	opt stack 0
  2951  0017AA                     _PIC18F26K40_loadPC:
  2952                           	opt stack 17
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;progPIC18F26K40.c: 87: DWORD_VAL tempAddress;
  2956                           ;progPIC18F26K40.c: 88: tempAddress.Val= (address.Val<<1);
  2957                           
  2958                           ;incstack = 0
  2959  0017AA  90D8               	bcf	status,0,c
  2960  0017AC  3599               	rlcf	PIC18F26K40_loadPC@address& (0+255),w,b
  2961  0017AE  6F9D               	movwf	PIC18F26K40_loadPC@tempAddress& (0+255),b
  2962  0017B0  359A               	rlcf	(PIC18F26K40_loadPC@address+1)& (0+255),w,b
  2963  0017B2  6F9E               	movwf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),b
  2964  0017B4  359B               	rlcf	(PIC18F26K40_loadPC@address+2)& (0+255),w,b
  2965  0017B6  6F9F               	movwf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),b
  2966  0017B8  359C               	rlcf	(PIC18F26K40_loadPC@address+3)& (0+255),w,b
  2967  0017BA  6FA0               	movwf	(PIC18F26K40_loadPC@tempAddress+3)& (0+255),b
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;progPIC18F26K40.c: 89: tempAddress.bits.b0 = 0;
  2971  0017BC  919D               	bcf	PIC18F26K40_loadPC@tempAddress& (0+255),0,b
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;progPIC18F26K40.c: 90: tempAddress.bits.b23 = 0;
  2975  0017BE  9F9F               	bcf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),7,b
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;progPIC18F26K40.c: 91: PIC18F26K40_sendByte(0x80, MSBTOLSB);
  2979  0017C0  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2980  0017C2  0E80               	movlw	128
  2981  0017C4  ECC8  F00A         	call	_PIC18F26K40_sendByte
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;progPIC18F26K40.c: 92: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2985  0017C8  D000               	nop2		;2 cycle nop
  2986  0017CA  F000               	nop	
  2987                           
  2988                           ;progPIC18F26K40.c: 93: PIC18F26K40_sendByte(tempAddress.v[2], MSBTOLSB);
  2989  0017CC  0100               	movlb	0	; () banked
  2990  0017CE  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2991  0017D0  519F               	movf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),w,b
  2992  0017D2  ECC8  F00A         	call	_PIC18F26K40_sendByte
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;progPIC18F26K40.c: 94: PIC18F26K40_sendByte(tempAddress.v[1], MSBTOLSB);
  2996  0017D6  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2997  0017D8  519E               	movf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),w,b
  2998  0017DA  ECC8  F00A         	call	_PIC18F26K40_sendByte
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;progPIC18F26K40.c: 95: PIC18F26K40_sendByte(tempAddress.v[0], MSBTOLSB);
  3002  0017DE  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3003  0017E0  519D               	movf	PIC18F26K40_loadPC@tempAddress& (0+255),w,b
  3004  0017E2  EFC8  F00A         	goto	_PIC18F26K40_sendByte
  3005  0017E6                     __end_of_PIC18F26K40_loadPC:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           intcon	equ	0xFF2
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           indf1	equ	0xFE7
  3017                           postdec1	equ	0xFE5
  3018                           fsr1h	equ	0xFE2
  3019                           fsr1l	equ	0xFE1
  3020                           indf2	equ	0xFDF
  3021                           postinc2	equ	0xFDE
  3022                           postdec2	equ	0xFDD
  3023                           plusw2	equ	0xFDB
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _PIC18F26K40_loadDataIntoNVM *****************
  3029 ;; Defined at:
  3030 ;;		line 98 in file "libs/progPIC18F26K40.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  data            4    4[BANK0 ] struct _DWORD_VAL
  3033 ;;  IncreasePC      1    8[BANK0 ] enum E4064
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  tempData        4   10[BANK0 ] struct _DWORD_VAL
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 3F/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3045 ;;      Params:         0       5       0       0
  3046 ;;      Locals:         0       4       0       0
  3047 ;;      Temps:          0       1       0       0
  3048 ;;      Totals:         0      10       0       0
  3049 ;;Total ram usage:       10 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:   12
  3052 ;; This function calls:
  3053 ;;		_PIC18F26K40_sendByteMsbToLsb
  3054 ;; This function is called by:
  3055 ;;		_APP_DeviceCDCBasicDemoTasks
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text13
  3060  0014DC                     __ptext13:
  3061                           	opt stack 0
  3062  0014DC                     _PIC18F26K40_loadDataIntoNVM:
  3063                           	opt stack 17
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;progPIC18F26K40.c: 99: DWORD_VAL tempData;
  3067                           ;progPIC18F26K40.c: 100: tempData.Val = (data.Val <<1 );
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;incstack = 0
  3071  0014DC  90D8               	bcf	status,0,c
  3072  0014DE  3597               	rlcf	PIC18F26K40_loadDataIntoNVM@data& (0+255),w,b
  3073  0014E0  6F9D               	movwf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),b
  3074  0014E2  3598               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+1)& (0+255),w,b
  3075  0014E4  6F9E               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),b
  3076  0014E6  3599               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+2)& (0+255),w,b
  3077  0014E8  6F9F               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),b
  3078  0014EA  359A               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+3)& (0+255),w,b
  3079  0014EC  6FA0               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+3)& (0+255),b
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;progPIC18F26K40.c: 101: tempData.bits.b0 = 0;
  3083  0014EE  919D               	bcf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),0,b
  3084                           
  3085                           ;progPIC18F26K40.c: 102: if (IncreasePC==TRUE)
  3086  0014F0  059B               	decf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),w,b
  3087  0014F2  E104               	bnz	l4692
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;progPIC18F26K40.c: 103: PIC18F26K40_sendByteMsbToLsb(0x02);
  3091  0014F4  0E02               	movlw	2
  3092  0014F6  EC6C  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3093  0014FA  D003               	goto	l4694
  3094  0014FC                     l4692:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;progPIC18F26K40.c: 104: else
  3098                           ;progPIC18F26K40.c: 105: PIC18F26K40_sendByteMsbToLsb(0x00);
  3099  0014FC  0E00               	movlw	0
  3100  0014FE  EC6C  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3101  001502                     l4694:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;progPIC18F26K40.c: 106: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3105  001502  D000               	nop2		;2 cycle nop
  3106  001504  F000               	nop	
  3107                           
  3108                           ;progPIC18F26K40.c: 107: PIC18F26K40_sendByteMsbToLsb(tempData.v[2]);
  3109  001506  0100               	movlb	0	; () banked
  3110  001508  519F               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),w,b
  3111  00150A  EC6C  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3112                           
  3113                           ;progPIC18F26K40.c: 108: PIC18F26K40_sendByteMsbToLsb(tempData.v[1]);
  3114  00150E  519E               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),w,b
  3115  001510  EC6C  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3116                           
  3117                           ;progPIC18F26K40.c: 109: PIC18F26K40_sendByteMsbToLsb(tempData.v[0]);
  3118  001514  519D               	movf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),w,b
  3119  001516  EC6C  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;progPIC18F26K40.c: 110: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3123  00151A  D000               	nop2		;2 cycle nop
  3124  00151C  F000               	nop	
  3125                           
  3126                           ;progPIC18F26K40.c: 112: PIC18F26K40_sendByteMsbToLsb(0xE0);
  3127  00151E  0EE0               	movlw	224
  3128  001520  EC6C  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;progPIC18F26K40.c: 113: _delay((unsigned long)((10)*(12000000/4000.0)));
  3132  001524  0E27               	movlw	39
  3133  001526  0100               	movlb	0	; () banked
  3134  001528  6F9C               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3135  00152A  0EF5               	movlw	245
  3136  00152C                     u4107:
  3137  00152C  2EE8               	decfsz	wreg,f,c
  3138  00152E  D7FE               	bra	u4107
  3139  001530  2F9C               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3140  001532  D7FC               	bra	u4107
  3141  001534  0012               	return		;funcret
  3142  001536                     __end_of_PIC18F26K40_loadDataIntoNVM:
  3143                           	opt stack 0
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           prodh	equ	0xFF4
  3149                           prodl	equ	0xFF3
  3150                           intcon	equ	0xFF2
  3151                           postinc0	equ	0xFEE
  3152                           wreg	equ	0xFE8
  3153                           indf1	equ	0xFE7
  3154                           postdec1	equ	0xFE5
  3155                           fsr1h	equ	0xFE2
  3156                           fsr1l	equ	0xFE1
  3157                           indf2	equ	0xFDF
  3158                           postinc2	equ	0xFDE
  3159                           postdec2	equ	0xFDD
  3160                           plusw2	equ	0xFDB
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           
  3165 ;; *************** function _PIC18F26K40_sendByteMsbToLsb *****************
  3166 ;; Defined at:
  3167 ;;		line 125 in file "libs/progPIC18F26K40.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  info            1    wreg     unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  info            1    2[BANK0 ] unsigned char 
  3172 ;;  i               1    3[BANK0 ] char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 3F/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3182 ;;      Params:         0       0       0       0
  3183 ;;      Locals:         0       2       0       0
  3184 ;;      Temps:          0       2       0       0
  3185 ;;      Totals:         0       4       0       0
  3186 ;;Total ram usage:        4 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:   11
  3189 ;; This function calls:
  3190 ;;		_PIC18F26K40_setTrisToOut
  3191 ;; This function is called by:
  3192 ;;		_PIC18F26K40_loadDataIntoNVM
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text14
  3197  0016D8                     __ptext14:
  3198                           	opt stack 0
  3199  0016D8                     _PIC18F26K40_sendByteMsbToLsb:
  3200                           	opt stack 17
  3201                           
  3202                           ;incstack = 0
  3203                           ;PIC18F26K40_sendByteMsbToLsb@info stored from wreg
  3204  0016D8  0100               	movlb	0	; () banked
  3205  0016DA  6F95               	movwf	PIC18F26K40_sendByteMsbToLsb@info& (0+255),b
  3206                           
  3207                           ;progPIC18F26K40.c: 126: PIC18F26K40_setTrisToOut ();
  3208  0016DC  EC7C  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3209                           
  3210                           ;progPIC18F26K40.c: 127: for (INT8 i = 7; i >= 0; i--) {
  3211  0016E0  0E07               	movlw	7
  3212  0016E2  0100               	movlb	0	; () banked
  3213  0016E4  6F96               	movwf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),b
  3214  0016E6                     l128:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;progPIC18F26K40.c: 128: LATCbits.LATC5 = 1;
  3218  0016E6  8A8B               	bsf	3979,5,c	;volatile
  3219                           
  3220                           ;progPIC18F26K40.c: 129: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3221  0016E8  D000               	nop2		;2 cycle nop
  3222  0016EA  F000               	nop	
  3223                           
  3224                           ;progPIC18F26K40.c: 130: if ((info >> i) & 0x01)
  3225  0016EC  C096  F093         	movff	PIC18F26K40_sendByteMsbToLsb@i,??_PIC18F26K40_sendByteMsbToLsb
  3226  0016F0  C095  F094         	movff	PIC18F26K40_sendByteMsbToLsb@info,??_PIC18F26K40_sendByteMsbToLsb+1
  3227  0016F4  0100               	movlb	0	; () banked
  3228  0016F6  2B93               	incf	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3229  0016F8  D002               	goto	u3574
  3230  0016FA                     u3575:
  3231  0016FA  90D8               	bcf	status,0,c
  3232  0016FC  3394               	rrcf	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),f,b
  3233  0016FE                     u3574:
  3234  0016FE  2F93               	decfsz	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3235  001700  D7FC               	goto	u3575
  3236  001702  0100               	movlb	0	; () banked
  3237  001704  A194               	btfss	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),0,b
  3238  001706  D002               	goto	l130
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;progPIC18F26K40.c: 131: LATCbits.LATC6 = 1;
  3242  001708  8C8B               	bsf	3979,6,c	;volatile
  3243  00170A  D001               	goto	l131
  3244  00170C                     l130:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;progPIC18F26K40.c: 132: else
  3248                           ;progPIC18F26K40.c: 133: LATCbits.LATC6 = 0;
  3249  00170C  9C8B               	bcf	3979,6,c	;volatile
  3250  00170E                     l131:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;progPIC18F26K40.c: 134: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3254  00170E  D000               	nop2		;2 cycle nop
  3255  001710  F000               	nop	
  3256                           
  3257                           ;progPIC18F26K40.c: 135: LATCbits.LATC5 = 0;
  3258  001712  9A8B               	bcf	3979,5,c	;volatile
  3259                           
  3260                           ;progPIC18F26K40.c: 136: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3261  001714  D000               	nop2		;2 cycle nop
  3262  001716  F000               	nop	
  3263  001718  0100               	movlb	0	; () banked
  3264  00171A  0796               	decf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),f,b
  3265                           
  3266                           ; BSR set to: 0
  3267  00171C  BF96               	btfsc	PIC18F26K40_sendByteMsbToLsb@i& (0+255),7,b
  3268                           
  3269                           ; BSR set to: 0
  3270  00171E  0012               	return		;funcret
  3271  001720  D7E2               	goto	l128
  3272  001722                     __end_of_PIC18F26K40_sendByteMsbToLsb:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           intcon	equ	0xFF2
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           indf1	equ	0xFE7
  3284                           postdec1	equ	0xFE5
  3285                           fsr1h	equ	0xFE2
  3286                           fsr1l	equ	0xFE1
  3287                           indf2	equ	0xFDF
  3288                           postinc2	equ	0xFDE
  3289                           postdec2	equ	0xFDD
  3290                           plusw2	equ	0xFDB
  3291                           fsr2h	equ	0xFDA
  3292                           fsr2l	equ	0xFD9
  3293                           status	equ	0xFD8
  3294                           
  3295 ;; *************** function _PIC18F26K40_exitLowVoltageProg *****************
  3296 ;; Defined at:
  3297 ;;		line 27 in file "libs/progPIC18F26K40.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		None
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3311 ;;      Params:         0       0       0       0
  3312 ;;      Locals:         0       0       0       0
  3313 ;;      Temps:          0       0       0       0
  3314 ;;      Totals:         0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:   10
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_APP_DeviceCDCBasicDemoTasks
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text15
  3326  001AEE                     __ptext15:
  3327                           	opt stack 0
  3328  001AEE                     _PIC18F26K40_exitLowVoltageProg:
  3329                           	opt stack 19
  3330                           
  3331                           ;progPIC18F26K40.c: 28: TRISCbits.TRISC7 = 0;
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;incstack = 0
  3335  001AEE  9E94               	bcf	3988,7,c	;volatile
  3336                           
  3337                           ;progPIC18F26K40.c: 29: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3338  001AF0  D000               	nop2		;2 cycle nop
  3339  001AF2  F000               	nop	
  3340                           
  3341                           ;progPIC18F26K40.c: 30: LATCbits.LATC7 = 1;
  3342  001AF4  8E8B               	bsf	3979,7,c	;volatile
  3343  001AF6  0012               	return		;funcret
  3344  001AF8                     __end_of_PIC18F26K40_exitLowVoltageProg:
  3345                           	opt stack 0
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodh	equ	0xFF4
  3351                           prodl	equ	0xFF3
  3352                           intcon	equ	0xFF2
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           indf1	equ	0xFE7
  3356                           postdec1	equ	0xFE5
  3357                           fsr1h	equ	0xFE2
  3358                           fsr1l	equ	0xFE1
  3359                           indf2	equ	0xFDF
  3360                           postinc2	equ	0xFDE
  3361                           postdec2	equ	0xFDD
  3362                           plusw2	equ	0xFDB
  3363                           fsr2h	equ	0xFDA
  3364                           fsr2l	equ	0xFD9
  3365                           status	equ	0xFD8
  3366                           
  3367 ;; *************** function _PIC18F26K40_enterLowVoltageProg *****************
  3368 ;; Defined at:
  3369 ;;		line 10 in file "libs/progPIC18F26K40.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  code            4    6[BANK0 ] struct _DWORD_VAL
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 3F/0
  3380 ;;		On exit  : 3F/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3383 ;;      Params:         0       0       0       0
  3384 ;;      Locals:         0       4       0       0
  3385 ;;      Temps:          0       0       0       0
  3386 ;;      Totals:         0       4       0       0
  3387 ;;Total ram usage:        4 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:   12
  3390 ;; This function calls:
  3391 ;;		_PIC18F26K40_sendByte
  3392 ;;		_PIC18F26K40_setTrisToOut
  3393 ;; This function is called by:
  3394 ;;		_APP_DeviceCDCBasicDemoTasks
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text16
  3399  001722                     __ptext16:
  3400                           	opt stack 0
  3401  001722                     _PIC18F26K40_enterLowVoltageProg:
  3402                           	opt stack 17
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;progPIC18F26K40.c: 11: PIC18F26K40_setTrisToOut ();
  3406                           
  3407                           ;incstack = 0
  3408  001722  EC7C  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3409                           
  3410                           ;progPIC18F26K40.c: 12: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3411  001726  D000               	nop2		;2 cycle nop
  3412  001728  F000               	nop	
  3413                           
  3414                           ;progPIC18F26K40.c: 14: LATCbits.LATC7 = 0;
  3415  00172A  9E8B               	bcf	3979,7,c	;volatile
  3416                           
  3417                           ;progPIC18F26K40.c: 15: LATCbits.LATC6 = 0;
  3418  00172C  9C8B               	bcf	3979,6,c	;volatile
  3419                           
  3420                           ;progPIC18F26K40.c: 16: LATCbits.LATC5 = 0;
  3421  00172E  9A8B               	bcf	3979,5,c	;volatile
  3422                           
  3423                           ;progPIC18F26K40.c: 17: (_delay((unsigned long)((250)*(12000000/4000000.0))));
  3424  001730  0EFA               	movlw	250
  3425  001732                     u4117:
  3426  001732  2EE8               	decfsz	wreg,f,c
  3427  001734  D7FE               	bra	u4117
  3428                           
  3429                           ;progPIC18F26K40.c: 19: DWORD_VAL code;
  3430                           ;progPIC18F26K40.c: 20: code.Val = (0x4d434850);
  3431  001736  0E50               	movlw	80
  3432  001738  0100               	movlb	0	; () banked
  3433  00173A  6F99               	movwf	PIC18F26K40_enterLowVoltageProg@code& (0+255),b
  3434  00173C  0E48               	movlw	72
  3435  00173E  6F9A               	movwf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),b
  3436  001740  0E43               	movlw	67
  3437  001742  6F9B               	movwf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),b
  3438  001744  0E4D               	movlw	77
  3439  001746  6F9C               	movwf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),b
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;progPIC18F26K40.c: 21: PIC18F26K40_sendByte(code.v[3], MSBTOLSB);
  3443  001748  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3444  00174A  519C               	movf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),w,b
  3445  00174C  ECC8  F00A         	call	_PIC18F26K40_sendByte
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;progPIC18F26K40.c: 22: PIC18F26K40_sendByte(code.v[2], MSBTOLSB);
  3449  001750  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3450  001752  519B               	movf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),w,b
  3451  001754  ECC8  F00A         	call	_PIC18F26K40_sendByte
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;progPIC18F26K40.c: 23: PIC18F26K40_sendByte(code.v[1], MSBTOLSB);
  3455  001758  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3456  00175A  519A               	movf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),w,b
  3457  00175C  ECC8  F00A         	call	_PIC18F26K40_sendByte
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;progPIC18F26K40.c: 24: PIC18F26K40_sendByte(code.v[0], MSBTOLSB);
  3461  001760  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3462  001762  5199               	movf	PIC18F26K40_enterLowVoltageProg@code& (0+255),w,b
  3463  001764  EFC8  F00A         	goto	_PIC18F26K40_sendByte
  3464  001768                     __end_of_PIC18F26K40_enterLowVoltageProg:
  3465                           	opt stack 0
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           prodh	equ	0xFF4
  3471                           prodl	equ	0xFF3
  3472                           intcon	equ	0xFF2
  3473                           postinc0	equ	0xFEE
  3474                           wreg	equ	0xFE8
  3475                           indf1	equ	0xFE7
  3476                           postdec1	equ	0xFE5
  3477                           fsr1h	equ	0xFE2
  3478                           fsr1l	equ	0xFE1
  3479                           indf2	equ	0xFDF
  3480                           postinc2	equ	0xFDE
  3481                           postdec2	equ	0xFDD
  3482                           plusw2	equ	0xFDB
  3483                           fsr2h	equ	0xFDA
  3484                           fsr2l	equ	0xFD9
  3485                           status	equ	0xFD8
  3486                           
  3487 ;; *************** function _PIC18F26K40_sendByte *****************
  3488 ;; Defined at:
  3489 ;;		line 33 in file "libs/progPIC18F26K40.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  info            1    wreg     unsigned char 
  3492 ;;  direction       1    0[BANK0 ] enum E4265
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  info            1    3[BANK0 ] unsigned char 
  3495 ;;  i               1    5[BANK0 ] unsigned char 
  3496 ;;  j               1    4[BANK0 ] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 3F/0
  3503 ;;		On exit  : 3F/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3506 ;;      Params:         0       1       0       0
  3507 ;;      Locals:         0       3       0       0
  3508 ;;      Temps:          0       2       0       0
  3509 ;;      Totals:         0       6       0       0
  3510 ;;Total ram usage:        6 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:   11
  3513 ;; This function calls:
  3514 ;;		_PIC18F26K40_setTrisToOut
  3515 ;; This function is called by:
  3516 ;;		_PIC18F26K40_enterLowVoltageProg
  3517 ;;		_PIC18F26K40_readThreeBytes
  3518 ;;		_PIC18F26K40_loadPC
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text17
  3523  001590                     __ptext17:
  3524                           	opt stack 0
  3525  001590                     _PIC18F26K40_sendByte:
  3526                           	opt stack 17
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;incstack = 0
  3530                           ;PIC18F26K40_sendByte@info stored from wreg
  3531  001590  6F96               	movwf	PIC18F26K40_sendByte@info& (0+255),b
  3532                           
  3533                           ;progPIC18F26K40.c: 34: PIC18F26K40_setTrisToOut ();
  3534  001592  EC7C  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3535                           
  3536                           ;progPIC18F26K40.c: 35: BYTE i, j;
  3537                           ;progPIC18F26K40.c: 36: for (i = 0; i < 8; i++) {
  3538  001596  0100               	movlb	0	; () banked
  3539  001598  6B98               	clrf	PIC18F26K40_sendByte@i& (0+255),b
  3540  00159A                     l4542:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;progPIC18F26K40.c: 37: if (direction)
  3544  00159A  5193               	movf	PIC18F26K40_sendByte@direction& (0+255),w,b
  3545  00159C  E003               	bz	l4546
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;progPIC18F26K40.c: 38: j = i;
  3549  00159E  C098  F097         	movff	PIC18F26K40_sendByte@i,PIC18F26K40_sendByte@j
  3550  0015A2  D003               	goto	l4548
  3551  0015A4                     l4546:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;progPIC18F26K40.c: 39: else
  3555                           ;progPIC18F26K40.c: 40: j = 7-i;
  3556  0015A4  5198               	movf	PIC18F26K40_sendByte@i& (0+255),w,b
  3557  0015A6  0807               	sublw	7
  3558  0015A8  6F97               	movwf	PIC18F26K40_sendByte@j& (0+255),b
  3559  0015AA                     l4548:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;progPIC18F26K40.c: 41: LATCbits.LATC5 = 1;
  3563  0015AA  8A8B               	bsf	3979,5,c	;volatile
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;progPIC18F26K40.c: 42: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3567  0015AC  D000               	nop2		;2 cycle nop
  3568  0015AE  F000               	nop	
  3569                           
  3570                           ;progPIC18F26K40.c: 43: if ((info >> j) & 0x01)
  3571  0015B0  C097  F094         	movff	PIC18F26K40_sendByte@j,??_PIC18F26K40_sendByte
  3572  0015B4  C096  F095         	movff	PIC18F26K40_sendByte@info,??_PIC18F26K40_sendByte+1
  3573  0015B8  0100               	movlb	0	; () banked
  3574  0015BA  2B94               	incf	??_PIC18F26K40_sendByte& (0+255),f,b
  3575  0015BC  D002               	goto	u3544
  3576  0015BE                     u3545:
  3577  0015BE  90D8               	bcf	status,0,c
  3578  0015C0  3395               	rrcf	(??_PIC18F26K40_sendByte+1)& (0+255),f,b
  3579  0015C2                     u3544:
  3580  0015C2  2F94               	decfsz	??_PIC18F26K40_sendByte& (0+255),f,b
  3581  0015C4  D7FC               	goto	u3545
  3582  0015C6  0100               	movlb	0	; () banked
  3583  0015C8  A195               	btfss	(??_PIC18F26K40_sendByte+1)& (0+255),0,b
  3584  0015CA  D002               	goto	l105
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;progPIC18F26K40.c: 44: LATCbits.LATC6 = 1;
  3588  0015CC  8C8B               	bsf	3979,6,c	;volatile
  3589  0015CE  D001               	goto	l106
  3590  0015D0                     l105:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;progPIC18F26K40.c: 45: else
  3594                           ;progPIC18F26K40.c: 46: LATCbits.LATC6 = 0;
  3595  0015D0  9C8B               	bcf	3979,6,c	;volatile
  3596  0015D2                     l106:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;progPIC18F26K40.c: 47: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3600  0015D2  D000               	nop2		;2 cycle nop
  3601  0015D4  F000               	nop	
  3602                           
  3603                           ;progPIC18F26K40.c: 48: LATCbits.LATC5 = 0;
  3604  0015D6  9A8B               	bcf	3979,5,c	;volatile
  3605                           
  3606                           ;progPIC18F26K40.c: 49: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3607  0015D8  D000               	nop2		;2 cycle nop
  3608  0015DA  F000               	nop	
  3609  0015DC  0100               	movlb	0	; () banked
  3610  0015DE  2B98               	incf	PIC18F26K40_sendByte@i& (0+255),f,b
  3611                           
  3612                           ; BSR set to: 0
  3613  0015E0  0E07               	movlw	7
  3614  0015E2  6598               	cpfsgt	PIC18F26K40_sendByte@i& (0+255),b
  3615  0015E4  D7DA               	goto	l4542
  3616  0015E6  0C07               	retlw	7
  3617  0015E8                     __end_of_PIC18F26K40_sendByte:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           intcon	equ	0xFF2
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           indf1	equ	0xFE7
  3629                           postdec1	equ	0xFE5
  3630                           fsr1h	equ	0xFE2
  3631                           fsr1l	equ	0xFE1
  3632                           indf2	equ	0xFDF
  3633                           postinc2	equ	0xFDE
  3634                           postdec2	equ	0xFDD
  3635                           plusw2	equ	0xFDB
  3636                           fsr2h	equ	0xFDA
  3637                           fsr2l	equ	0xFD9
  3638                           status	equ	0xFD8
  3639                           
  3640 ;; *************** function _PIC18F26K40_setTrisToOut *****************
  3641 ;; Defined at:
  3642 ;;		line 4 in file "libs/progPIC18F26K40.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		None
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3656 ;;      Params:         0       0       0       0
  3657 ;;      Locals:         0       0       0       0
  3658 ;;      Temps:          0       0       0       0
  3659 ;;      Totals:         0       0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:   10
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_PIC18F26K40_enterLowVoltageProg
  3667 ;;		_PIC18F26K40_sendByte
  3668 ;;		_PIC18F26K40_sendByteMsbToLsb
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text18
  3673  001AF8                     __ptext18:
  3674                           	opt stack 0
  3675  001AF8                     _PIC18F26K40_setTrisToOut:
  3676                           	opt stack 17
  3677                           
  3678                           ;progPIC18F26K40.c: 5: TRISCbits.TRISC7 = 0;
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;incstack = 0
  3682  001AF8  9E94               	bcf	3988,7,c	;volatile
  3683                           
  3684                           ;progPIC18F26K40.c: 6: TRISCbits.TRISC6 = 0;
  3685  001AFA  9C94               	bcf	3988,6,c	;volatile
  3686                           
  3687                           ;progPIC18F26K40.c: 7: TRISCbits.TRISC5 = 0;
  3688  001AFC  9A94               	bcf	3988,5,c	;volatile
  3689  001AFE  0012               	return		;funcret
  3690  001B00                     __end_of_PIC18F26K40_setTrisToOut:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           intcon	equ	0xFF2
  3699                           postinc0	equ	0xFEE
  3700                           wreg	equ	0xFE8
  3701                           indf1	equ	0xFE7
  3702                           postdec1	equ	0xFE5
  3703                           fsr1h	equ	0xFE2
  3704                           fsr1l	equ	0xFE1
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           plusw2	equ	0xFDB
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           
  3713 ;; *************** function _CDCTxService *****************
  3714 ;; Defined at:
  3715 ;;		line 836 in file "picLibs/usb_device_cdc.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  3720 ;;  i               1    9[BANK0 ] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 3F/0
  3727 ;;		On exit  : 3F/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3730 ;;      Params:         0       0       0       0
  3731 ;;      Locals:         0       2       0       0
  3732 ;;      Temps:          0       0       0       0
  3733 ;;      Totals:         0       2       0       0
  3734 ;;Total ram usage:        2 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:   11
  3737 ;; This function calls:
  3738 ;;		_USBTransferOnePacket
  3739 ;; This function is called by:
  3740 ;;		_APP_DeviceCDCBasicDemoTasks
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text19
  3745  0007E2                     __ptext19:
  3746                           	opt stack 0
  3747  0007E2                     _CDCTxService:
  3748                           	opt stack 18
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3752                           ;usb_device_cdc.c: 839: uint8_t i;
  3753                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3754                           
  3755                           ;incstack = 0
  3756  0007E2  94A0               	bcf	4000,2,c	;volatile
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;usb_device_cdc.c: 843: {};
  3760                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3761  0007E4  5176               	movf	_CDCDataInHandle& (0+255),w,b
  3762  0007E6  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3763  0007E8  E008               	bz	l4786
  3764                           
  3765                           ; BSR set to: 0
  3766  0007EA  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
  3767  0007EE  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3768  0007F2  AEDF               	btfss	indf2,7,c
  3769  0007F4  D002               	goto	l4786
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;usb_device_cdc.c: 846: {
  3773                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3774  0007F6  84A0               	bsf	4000,2,c	;volatile
  3775                           
  3776                           ;usb_device_cdc.c: 848: return;
  3777  0007F8  0012               	return	
  3778  0007FA                     l4786:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;usb_device_cdc.c: 849: }
  3782                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3783  0007FA  0E03               	movlw	3
  3784  0007FC  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3785  0007FE  E101               	bnz	l4790
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3789  000800  6B80               	clrf	_cdc_trf_state& (0+255),b
  3790  000802                     l4790:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3794  000802  5180               	movf	_cdc_trf_state& (0+255),w,b
  3795  000804  E102               	bnz	l4794
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;usb_device_cdc.c: 863: {
  3799                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3800  000806  84A0               	bsf	4000,2,c	;volatile
  3801                           
  3802                           ;usb_device_cdc.c: 865: return;
  3803  000808  0012               	return	
  3804  00080A                     l4794:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;usb_device_cdc.c: 866: }
  3808                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3809  00080A  0E02               	movlw	2
  3810  00080C  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3811  00080E  E10D               	bnz	l4800
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;usb_device_cdc.c: 872: {
  3815                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3816  000810  0E01               	movlw	1
  3817  000812  6F93               	movwf	USBTransferOnePacket@dir& (0+255),b
  3818  000814  0E00               	movlw	0
  3819  000816  6F94               	movwf	USBTransferOnePacket@data& (0+255),b
  3820  000818  6F95               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3821  00081A  6F96               	movwf	USBTransferOnePacket@len& (0+255),b
  3822  00081C  0E02               	movlw	2
  3823  00081E  EC43  F005         	call	_USBTransferOnePacket
  3824  000822  D856               	call	PL112	;call to abstracted procedure
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3828  000824  0E03               	movlw	3
  3829  000826  6F80               	movwf	_cdc_trf_state& (0+255),b
  3830                           
  3831                           ;usb_device_cdc.c: 876: }
  3832  000828  D03E               	goto	l4844
  3833  00082A                     l4800:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3837  00082A  0580               	decf	_cdc_trf_state& (0+255),w,b
  3838  00082C  E13C               	bnz	l4844
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;usb_device_cdc.c: 878: {
  3842                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3843  00082E  0E40               	movlw	64
  3844  000830  641B               	cpfsgt	_cdc_tx_len,c
  3845  000832  D002               	goto	l829
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3849  000834  6F9D               	movwf	CDCTxService@byte_to_send& (0+255),b
  3850  000836  D002               	goto	l4806
  3851  000838                     l829:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;usb_device_cdc.c: 884: else
  3855                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3856  000838  C01B  F09D         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3857  00083C                     l4806:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3861  00083C  519D               	movf	CDCTxService@byte_to_send& (0+255),w,b
  3862  00083E  5E1B               	subwf	_cdc_tx_len,f,c
  3863                           
  3864                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3865  000840  0E40               	movlw	64
  3866  000842  6F6A               	movwf	_pCDCDst& (0+255),b
  3867  000844  0E02               	movlw	2
  3868  000846  6F6B               	movwf	(_pCDCDst+1)& (0+255),b
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3872  000848  C09D  F09C         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3876  00084C  517C               	movf	_cdc_mem_type& (0+255),w,b
  3877  00084E  E00A               	bz	l4822
  3878  000850  D015               	goto	l4832
  3879  000852                     l4814:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;usb_device_cdc.c: 898: {
  3883                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3884  000852  D82B               	call	PL42	;call to abstracted procedure
  3885  000854  64F7               	cpfsgt	tblptrh,c
  3886  000856  D003               	bra	u3887
  3887  000858  0008               	tblrd		*
  3888  00085A  50F5               	movf	tablat,w,c
  3889  00085C  D002               	bra	u3880
  3890  00085E                     u3887:
  3891  00085E  EC27  F005         	call	PL18	;call to abstracted procedure
  3892  000862                     u3880:
  3893                           
  3894                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;usb_device_cdc.c: 902: i--;
  3901  000862  D82E               	call	PL70	;call to abstracted procedure
  3902  000864                     l4822:
  3903                           
  3904                           ; BSR set to: 0
  3905  000864  519C               	movf	CDCTxService@i& (0+255),w,b
  3906  000866  E00C               	bz	l4834
  3907  000868  D7F4               	goto	l4814
  3908  00086A                     l4824:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;usb_device_cdc.c: 908: {
  3912                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  3913  00086A  D81F               	call	PL42	;call to abstracted procedure
  3914  00086C  64F7               	cpfsgt	tblptrh,c
  3915  00086E  D003               	bra	u3907
  3916  000870  0008               	tblrd		*
  3917  000872  50F5               	movf	tablat,w,c
  3918  000874  D002               	bra	u3900
  3919  000876                     u3907:
  3920  000876  EC27  F005         	call	PL18	;call to abstracted procedure
  3921  00087A                     u3900:
  3922                           
  3923                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;usb_device_cdc.c: 912: i--;
  3930  00087A  D822               	call	PL70	;call to abstracted procedure
  3931  00087C                     l4832:
  3932                           
  3933                           ; BSR set to: 0
  3934  00087C  519C               	movf	CDCTxService@i& (0+255),w,b
  3935  00087E  E1F5               	bnz	l4824
  3936  000880                     l4834:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;usb_device_cdc.c: 913: }
  3940                           ;usb_device_cdc.c: 914: }
  3941                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  3942  000880  501B               	movf	_cdc_tx_len,w,c
  3943  000882  E106               	bnz	l4842
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;usb_device_cdc.c: 921: {
  3947                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  3948  000884  0E40               	movlw	64
  3949  000886  199D               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  3953  000888  0E02               	movlw	2
  3954  00088A  A4D8               	btfss	status,2,c
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;usb_device_cdc.c: 924: else
  3958                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  3959  00088C  0E03               	movlw	3
  3960  00088E  6F80               	movwf	_cdc_trf_state& (0+255),b
  3961  000890                     l4842:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;usb_device_cdc.c: 926: }
  3965                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3966  000890  0E01               	movlw	1
  3967  000892  6F93               	movwf	USBTransferOnePacket@dir& (0+255),b
  3968  000894  0E40               	movlw	64
  3969  000896  6F94               	movwf	USBTransferOnePacket@data& (0+255),b
  3970  000898  0E02               	movlw	2
  3971  00089A  6F95               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3972  00089C  C09D  F096         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3973  0008A0  EC43  F005         	call	_USBTransferOnePacket
  3974  0008A4  D815               	call	PL112	;call to abstracted procedure
  3975  0008A6                     l4844:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;usb_device_cdc.c: 929: }
  3979                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  3980  0008A6  84A0               	bsf	4000,2,c	;volatile
  3981                           
  3982                           ; BSR set to: 0
  3983  0008A8  0012               	return		;funcret
  3984  0008AA                     __end_of_CDCTxService:
  3985                           	opt stack 0
  3986  0008AA                     PL42:
  3987                           	opt stack 18
  3988  0008AA  C06D  FFF6         	movff	_pCDCSrc,tblptrl
  3989  0008AE  C06E  FFF7         	movff	_pCDCSrc+1,tblptrh
  3990  0008B2  6AF8               	clrf	tblptru,c
  3991  0008B4  C06A  FFD9         	movff	_pCDCDst,fsr2l
  3992  0008B8  C06B  FFDA         	movff	_pCDCDst+1,fsr2h
  3993  0008BC  0E02               	movlw	(high __ramtop+-1)
  3994  0008BE  0012               	return	
  3995  0008C0                     __end_ofPL42:
  3996                           	opt stack 0
  3997  0008C0                     PL70:
  3998                           	opt stack 18
  3999  0008C0  6EDF               	movwf	indf2,c
  4000  0008C2  0100               	movlb	0	; () banked
  4001  0008C4  4B6A               	infsnz	_pCDCDst& (0+255),f,b
  4002  0008C6  2B6B               	incf	(_pCDCDst+1)& (0+255),f,b
  4003  0008C8  4B6D               	infsnz	_pCDCSrc& (0+255),f,b
  4004  0008CA  2B6E               	incf	(_pCDCSrc+1)& (0+255),f,b
  4005  0008CC  079C               	decf	CDCTxService@i& (0+255),f,b
  4006  0008CE  0012               	return	
  4007  0008D0                     __end_ofPL70:
  4008                           	opt stack 0
  4009  0008D0                     PL112:
  4010                           	opt stack 18
  4011  0008D0  C093  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4012  0008D4  C094  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4013  0008D8  0012               	return	
  4014  0008DA                     __end_ofPL112:
  4015                           	opt stack 0
  4016                           tblptru	equ	0xFF8
  4017                           tblptrh	equ	0xFF7
  4018                           tblptrl	equ	0xFF6
  4019                           tablat	equ	0xFF5
  4020                           prodh	equ	0xFF4
  4021                           prodl	equ	0xFF3
  4022                           intcon	equ	0xFF2
  4023                           postinc0	equ	0xFEE
  4024                           wreg	equ	0xFE8
  4025                           indf1	equ	0xFE7
  4026                           postdec1	equ	0xFE5
  4027                           fsr1h	equ	0xFE2
  4028                           fsr1l	equ	0xFE1
  4029                           indf2	equ	0xFDF
  4030                           postinc2	equ	0xFDE
  4031                           postdec2	equ	0xFDD
  4032                           plusw2	equ	0xFDB
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function _USBTransferOnePacket *****************
  4038 ;; Defined at:
  4039 ;;		line 995 in file "picLibs/usb_device.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  ep              1    wreg     unsigned char 
  4042 ;;  dir             1    0[BANK0 ] unsigned char 
  4043 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4044 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4045 ;;  len             1    3[BANK0 ] unsigned char 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  ep              1    6[BANK0 ] unsigned char 
  4048 ;;  handle          2    7[BANK0 ] PTR volatile struct __BD
  4049 ;;		 -> RAM(767), NULL(0), BDT(48), 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2    0[BANK0 ] PTR void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4054 ;; Tracked objects:
  4055 ;;		On entry : 3F/0
  4056 ;;		On exit  : 3F/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4059 ;;      Params:         0       4       0       0
  4060 ;;      Locals:         0       3       0       0
  4061 ;;      Temps:          0       2       0       0
  4062 ;;      Totals:         0       9       0       0
  4063 ;;Total ram usage:        9 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:   10
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_getsUSBUSART
  4070 ;;		_CDCTxService
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text20
  4075  000A86                     __ptext20:
  4076                           	opt stack 0
  4077  000A86                     _USBTransferOnePacket:
  4078                           	opt stack 18
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;incstack = 0
  4082                           ;USBTransferOnePacket@ep stored from wreg
  4083  000A86  6F99               	movwf	USBTransferOnePacket@ep& (0+255),b
  4084                           
  4085                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4086                           ;usb_device.c: 1000: if(dir != 0)
  4087  000A88  0100               	movlb	0	; () banked
  4088  000A8A  5193               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4089  000A8C  E004               	bz	l4580
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;usb_device.c: 1001: {
  4093                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4094  000A8E  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4095  000A90  ECA7  F006         	call	PL82	;call to abstracted procedure
  4096  000A94  D003               	goto	L2
  4097  000A96                     l4580:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;usb_device.c: 1005: else
  4101                           ;usb_device.c: 1006: {
  4102                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4103  000A96  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4104  000A98  ECB0  F006         	call	PL90	;call to abstracted procedure
  4105  000A9C                     L2:
  4106  000A9C  6ED9               	movwf	fsr2l,c
  4107  000A9E  6ADA               	clrf	fsr2h,c
  4108  000AA0  CFDE F09A          	movff	postinc2,USBTransferOnePacket@handle
  4109  000AA4  CFDD F09B          	movff	postdec2,USBTransferOnePacket@handle+1
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;usb_device.c: 1009: }
  4113                           ;usb_device.c: 1013: if(handle == 0)
  4114  000AA8  519A               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4115  000AAA  119B               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4116  000AAC  E103               	bnz	l4586
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;usb_device.c: 1014: {
  4120                           ;usb_device.c: 1015: return 0;
  4121  000AAE  6B93               	clrf	?_USBTransferOnePacket& (0+255),b
  4122  000AB0  6B94               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  4123  000AB2  0012               	return	
  4124  000AB4                     l4586:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;usb_device.c: 1016: }
  4128                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4129  000AB4  EE20 F002          	lfsr	2,2
  4130  000AB8  D842               	call	PL108	;call to abstracted procedure
  4131  000ABA  C094  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4132  000ABE  C095  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4133                           
  4134                           ;usb_device.c: 1030: handle->CNT = len;
  4135  000AC2  EE20 F001          	lfsr	2,1
  4136  000AC6  D83B               	call	PL108	;call to abstracted procedure
  4137  000AC8  C096  FFDF         	movff	USBTransferOnePacket@len,indf2
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4141  000ACC  D833               	call	PL92	;call to abstracted procedure
  4142  000ACE  0E40               	movlw	64
  4143  000AD0  16DF               	andwf	indf2,f,c
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4147  000AD2  D830               	call	PL92	;call to abstracted procedure
  4148  000AD4  0E00               	movlw	0
  4149  000AD6  86DB               	bsf	plusw2,3,c
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4153  000AD8  D82D               	call	PL92	;call to abstracted procedure
  4154  000ADA  8EDB               	bsf	plusw2,7,c
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;usb_device.c: 1036: if(dir != 0)
  4158  000ADC  5193               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4159  000ADE  E005               	bz	l4598
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;usb_device.c: 1037: {
  4163                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4164  000AE0  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4165  000AE2  D818               	call	PL26	;call to abstracted procedure
  4166  000AE4  D81D               	call	PL46	;call to abstracted procedure
  4167  000AE6  0F0F               	addlw	low _pBDTEntryIn
  4168  000AE8  D004               	goto	L3
  4169  000AEA                     l4598:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;usb_device.c: 1041: else
  4173                           ;usb_device.c: 1042: {
  4174                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4175  000AEA  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4176  000AEC  D80D               	call	PL24	;call to abstracted procedure
  4177  000AEE  D818               	call	PL46	;call to abstracted procedure
  4178  000AF0  0F60               	addlw	low _pBDTEntryOut
  4179  000AF2                     L3:
  4180  000AF2  6ED9               	movwf	fsr2l,c
  4181  000AF4  6ADA               	clrf	fsr2h,c
  4182  000AF6  C097  FFDE         	movff	??_USBTransferOnePacket,postinc2
  4183  000AFA  C098  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;usb_device.c: 1045: }
  4187                           ;usb_device.c: 1046: return (void*)handle;
  4188  000AFE  C09A  F093         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4189  000B02  C09B  F094         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4190                           
  4191                           ; BSR set to: 0
  4192  000B06  0012               	return		;funcret
  4193  000B08                     __end_of_USBTransferOnePacket:
  4194                           	opt stack 0
  4195  000B08                     PL24:
  4196                           	opt stack 19
  4197  000B08  0D02               	mullw	2
  4198  000B0A  50F3               	movf	prodl,w,c
  4199  000B0C  0F60               	addlw	low _pBDTEntryOut
  4200  000B0E  6ED9               	movwf	fsr2l,c
  4201  000B10  6ADA               	clrf	fsr2h,c
  4202  000B12  0012               	return	
  4203  000B14                     __end_ofPL24:
  4204                           	opt stack 0
  4205  000B14                     PL26:
  4206                           	opt stack 19
  4207  000B14  0D02               	mullw	2
  4208  000B16  50F3               	movf	prodl,w,c
  4209  000B18  0F0F               	addlw	low _pBDTEntryIn
  4210  000B1A  6ED9               	movwf	fsr2l,c
  4211  000B1C  6ADA               	clrf	fsr2h,c
  4212  000B1E  0012               	return	
  4213  000B20                     __end_ofPL26:
  4214                           	opt stack 0
  4215  000B20                     PL46:
  4216                           	opt stack 18
  4217  000B20  CFDE F097          	movff	postinc2,??_USBTransferOnePacket
  4218  000B24  CFDD F098          	movff	postdec2,??_USBTransferOnePacket+1
  4219  000B28  0E04               	movlw	4
  4220  000B2A  1B97               	xorwf	??_USBTransferOnePacket& (0+255),f,b
  4221  000B2C  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4222  000B2E  0D02               	mullw	2
  4223  000B30  50F3               	movf	prodl,w,c
  4224  000B32  0012               	return	
  4225  000B34                     __end_ofPL46:
  4226                           	opt stack 0
  4227  000B34                     PL92:
  4228                           	opt stack 18
  4229  000B34  C09A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4230  000B38  C09B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4231  000B3C  0012               	return	
  4232  000B3E                     __end_ofPL92:
  4233                           	opt stack 0
  4234  000B3E                     PL108:
  4235                           	opt stack 18
  4236  000B3E  519A               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4237  000B40  26D9               	addwf	fsr2l,f,c
  4238  000B42  519B               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4239  000B44  22DA               	addwfc	fsr2h,f,c
  4240  000B46  0012               	return	
  4241  000B48                     __end_ofPL108:
  4242                           	opt stack 0
  4243                           tblptru	equ	0xFF8
  4244                           tblptrh	equ	0xFF7
  4245                           tblptrl	equ	0xFF6
  4246                           tablat	equ	0xFF5
  4247                           prodh	equ	0xFF4
  4248                           prodl	equ	0xFF3
  4249                           intcon	equ	0xFF2
  4250                           postinc0	equ	0xFEE
  4251                           wreg	equ	0xFE8
  4252                           indf1	equ	0xFE7
  4253                           postdec1	equ	0xFE5
  4254                           fsr1h	equ	0xFE2
  4255                           fsr1l	equ	0xFE1
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           postdec2	equ	0xFDD
  4259                           plusw2	equ	0xFDB
  4260                           fsr2h	equ	0xFDA
  4261                           fsr2l	equ	0xFD9
  4262                           status	equ	0xFD8
  4263                           
  4264 ;; *************** function _BUTTON_IsPressed *****************
  4265 ;; Defined at:
  4266 ;;		line 55 in file "picLibs/buttons.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  button          1    wreg     enum E3304
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  button          1    0[BANK0 ] enum E3304
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      unsigned char 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0
  4275 ;; Tracked objects:
  4276 ;;		On entry : 3F/0
  4277 ;;		On exit  : 3F/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4280 ;;      Params:         0       0       0       0
  4281 ;;      Locals:         0       1       0       0
  4282 ;;      Temps:          0       0       0       0
  4283 ;;      Totals:         0       1       0       0
  4284 ;;Total ram usage:        1 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:   10
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_APP_DeviceCDCBasicDemoTasks
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text21
  4295  001A90                     __ptext21:
  4296                           	opt stack 0
  4297  001A90                     _BUTTON_IsPressed:
  4298                           	opt stack 19
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;incstack = 0
  4302                           ;BUTTON_IsPressed@button stored from wreg
  4303  001A90  6F93               	movwf	BUTTON_IsPressed@button& (0+255),b
  4304                           
  4305                           ;buttons.c: 57: switch(button)
  4306  001A92  D003               	goto	l4708
  4307  001A94                     l228:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4311  001A94  A680               	btfss	3968,3,c	;volatile
  4312  001A96  0C01               	retlw	1
  4313  001A98  0C00               	retlw	0
  4314  001A9A                     l4708:
  4315  001A9A  0100               	movlb	0	; () banked
  4316  001A9C  5193               	movf	BUTTON_IsPressed@button& (0+255),w,b
  4317                           
  4318                           ; Switch size 1, requested type "space"
  4319                           ; Number of cases is 2, Range of values is 0 to 1
  4320                           ; switch strategies available:
  4321                           ; Name         Instructions Cycles
  4322                           ; simple_byte            7     4 (average)
  4323                           ;	Chosen strategy is simple_byte
  4324  001A9E  B4D8               	btfsc	status,2,c
  4325  001AA0  0C00               	retlw	0
  4326  001AA2  0A01               	xorlw	1	; case 1
  4327  001AA4  A4D8               	btfss	status,2,c
  4328  001AA6  0C00               	retlw	0
  4329  001AA8  D7F5               	goto	l228
  4330  001AAA                     __end_of_BUTTON_IsPressed:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           intcon	equ	0xFF2
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           indf1	equ	0xFE7
  4342                           postdec1	equ	0xFE5
  4343                           fsr1h	equ	0xFE2
  4344                           fsr1l	equ	0xFE1
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           postdec2	equ	0xFDD
  4348                           plusw2	equ	0xFDB
  4349                           fsr2h	equ	0xFDA
  4350                           fsr2l	equ	0xFD9
  4351                           status	equ	0xFD8
  4352                           
  4353 ;; *************** function _SYS_InterruptHigh *****************
  4354 ;; Defined at:
  4355 ;;		line 86 in file "picLibs/system.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4369 ;;      Params:         0       0       0       0
  4370 ;;      Locals:         0       0       0       0
  4371 ;;      Temps:         10       0       0       0
  4372 ;;      Totals:        10       0       0       0
  4373 ;;Total ram usage:       10 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    9
  4376 ;; This function calls:
  4377 ;;		_USBDeviceTasks
  4378 ;; This function is called by:
  4379 ;;		Interrupt level 2
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	intcode
  4384  000008                     __pintcode:
  4385                           	opt stack 0
  4386  000008                     _SYS_InterruptHigh:
  4387                           	opt stack 17
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;incstack = 0
  4391  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4392  00000A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh
  4393  00000E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+1
  4394  000012  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+2
  4395  000016  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+3
  4396  00001A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+4
  4397  00001E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+5
  4398  000022  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+6
  4399  000026  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+7
  4400  00002A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+8
  4401  00002E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+9
  4402                           
  4403                           ;system.c: 89: USBDeviceTasks();
  4404  000032  EC71  F003         	call	_USBDeviceTasks	;wreg free
  4405  000036  C051  FFF5         	movff	??_SYS_InterruptHigh+9,tablat
  4406  00003A  C050  FFF8         	movff	??_SYS_InterruptHigh+8,tblptru
  4407  00003E  C04F  FFF7         	movff	??_SYS_InterruptHigh+7,tblptrh
  4408  000042  C04E  FFF6         	movff	??_SYS_InterruptHigh+6,tblptrl
  4409  000046  C04D  FFF4         	movff	??_SYS_InterruptHigh+5,prodh
  4410  00004A  C04C  FFF3         	movff	??_SYS_InterruptHigh+4,prodl
  4411  00004E  C04B  FFDA         	movff	??_SYS_InterruptHigh+3,fsr2h
  4412  000052  C04A  FFD9         	movff	??_SYS_InterruptHigh+2,fsr2l
  4413  000056  C049  FFE2         	movff	??_SYS_InterruptHigh+1,fsr1h
  4414  00005A  C048  FFE1         	movff	??_SYS_InterruptHigh,fsr1l
  4415  00005E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4416  000060  0011               	retfie		f
  4417  000062                     __end_of_SYS_InterruptHigh:
  4418                           	opt stack 0
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           intcon	equ	0xFF2
  4426                           postinc0	equ	0xFEE
  4427                           wreg	equ	0xFE8
  4428                           indf1	equ	0xFE7
  4429                           postdec1	equ	0xFE5
  4430                           fsr1h	equ	0xFE2
  4431                           fsr1l	equ	0xFE1
  4432                           indf2	equ	0xFDF
  4433                           postinc2	equ	0xFDE
  4434                           postdec2	equ	0xFDD
  4435                           plusw2	equ	0xFDB
  4436                           fsr2h	equ	0xFDA
  4437                           fsr2l	equ	0xFD9
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function _USBDeviceTasks *****************
  4441 ;; Defined at:
  4442 ;;		line 477 in file "picLibs/usb_device.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  i               1   29[COMRAM] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4456 ;;      Params:         0       0       0       0
  4457 ;;      Locals:         1       0       0       0
  4458 ;;      Temps:          0       0       0       0
  4459 ;;      Totals:         1       0       0       0
  4460 ;;Total ram usage:        1 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    8
  4463 ;; This function calls:
  4464 ;;		_USBCtrlEPAllowStatusStage
  4465 ;;		_USBCtrlEPService
  4466 ;;		_USBIncrement1msInternalTimers
  4467 ;;		_USBStallHandler
  4468 ;;		_USBSuspend
  4469 ;;		_USBWakeFromSuspend
  4470 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4471 ;;		i2_USBDeviceInit
  4472 ;; This function is called by:
  4473 ;;		_SYS_InterruptHigh
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text23
  4478  0006E2                     __ptext23:
  4479                           	opt stack 0
  4480  0006E2                     _USBDeviceTasks:
  4481                           	opt stack 17
  4482                           
  4483                           ;usb_device.c: 479: uint8_t i;
  4484                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4485                           
  4486                           ;incstack = 0
  4487  0006E2  0100               	movlb	0	; () banked
  4488  0006E4  0581               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4489  0006E6  E107               	bnz	i2l4294
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;usb_device.c: 591: {
  4493                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4494  0006E8  BA64               	btfsc	3940,5,c	;volatile
  4495  0006EA  D005               	goto	i2l4294
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;usb_device.c: 602: {
  4499                           ;usb_device.c: 608: {UIR = 0;};
  4500  0006EC  6A62               	clrf	3938,c	;volatile
  4501                           
  4502                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4503  0006EE  8060               	bsf	3936,0,c	;volatile
  4504                           
  4505                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4506  0006F0  8860               	bsf	3936,4,c	;volatile
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4510  0006F2  0E02               	movlw	2
  4511  0006F4  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4512  0006F6                     i2l4294:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;usb_device.c: 617: }
  4516                           ;usb_device.c: 618: }
  4517                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4518  0006F6  B462               	btfsc	3938,2,c	;volatile
  4519                           
  4520                           ; BSR set to: 0
  4521  0006F8  A460               	btfss	3936,2,c	;volatile
  4522  0006FA  D003               	goto	i2l4302
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;usb_device.c: 635: {
  4526                           ;usb_device.c: 636: (UIR &= 0xFB);
  4527  0006FC  9462               	bcf	3938,2,c	;volatile
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;usb_device.c: 640: USBWakeFromSuspend();
  4531  0006FE  ECEF  F00C         	call	_USBWakeFromSuspend	;wreg free
  4532  000702                     i2l4302:
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;usb_device.c: 642: }
  4536                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4537  000702  A264               	btfss	3940,1,c	;volatile
  4538  000704  D002               	goto	i2l476
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;usb_device.c: 648: {
  4542                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  4543  000706  94A1               	bcf	4001,2,c	;volatile
  4544                           
  4545                           ;usb_device.c: 650: return;
  4546  000708  0012               	return	
  4547  00070A                     i2l476:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;usb_device.c: 651: }
  4551                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4552  00070A  B062               	btfsc	3938,0,c	;volatile
  4553                           
  4554                           ; BSR set to: 0
  4555  00070C  A060               	btfss	3936,0,c	;volatile
  4556  00070E  D006               	goto	i2l4316
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;usb_device.c: 664: {
  4560                           ;usb_device.c: 665: USBDeviceInit();
  4561  000710  EC6D  F004         	call	i2_USBDeviceInit	;wreg free
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4565  000714  84A0               	bsf	4000,2,c	;volatile
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4569  000716  0E04               	movlw	4
  4570  000718  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;usb_device.c: 681: (UIR &= 0xFE);
  4574  00071A  9062               	bcf	3938,0,c	;volatile
  4575  00071C                     i2l4316:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;usb_device.c: 682: }
  4579                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4580  00071C  B862               	btfsc	3938,4,c	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583  00071E  A860               	btfss	3936,4,c	;volatile
  4584  000720  D002               	goto	i2l4322
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;usb_device.c: 688: {
  4588                           ;usb_device.c: 694: USBSuspend();
  4589  000722  ECDE  F00C         	call	_USBSuspend	;wreg free
  4590  000726                     i2l4322:
  4591                           
  4592                           ;usb_device.c: 696: }
  4593                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4594  000726  AC62               	btfss	3938,6,c	;volatile
  4595  000728  D013               	goto	i2l4340
  4596                           
  4597                           ;usb_device.c: 709: {
  4598                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4599  00072A  AC60               	btfss	3936,6,c	;volatile
  4600  00072C  D007               	goto	i2l4328
  4601                           
  4602                           ;usb_device.c: 712: {
  4603                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4604  00072E  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4605  000730  0E73               	movlw	115
  4606  000732  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4607  000734  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4608  000736  D850               	call	PL86	;call to abstracted procedure
  4609  000738  ECD7  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4610  00073C                     i2l4328:
  4611                           
  4612                           ;usb_device.c: 714: }
  4613                           ;usb_device.c: 715: (UIR &= 0xBF);
  4614  00073C  9C62               	bcf	3938,6,c	;volatile
  4615                           
  4616                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4617  00073E  EC3A  F00D         	call	_USBIncrement1msInternalTimers	;wreg free
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4621  000742  5021               	movf	_USBStatusStageTimeoutCounter,w,c
  4622  000744  E001               	bz	i2l4336
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;usb_device.c: 736: {
  4626                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4627  000746  0621               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  4628  000748                     i2l4336:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;usb_device.c: 738: }
  4632                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4633  000748  5021               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4634  00074A  E102               	bnz	i2l4340
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;usb_device.c: 745: {
  4638                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4639  00074C  ECF3  F008         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4640  000750                     i2l4340:
  4641                           
  4642                           ;usb_device.c: 747: }
  4643                           ;usb_device.c: 749: }
  4644                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4645  000750  BA62               	btfsc	3938,5,c	;volatile
  4646  000752  AA60               	btfss	3936,5,c	;volatile
  4647  000754  D002               	goto	i2l4346
  4648                           
  4649                           ;usb_device.c: 752: {
  4650                           ;usb_device.c: 753: USBStallHandler();
  4651  000756  EC28  F00C         	call	_USBStallHandler	;wreg free
  4652  00075A                     i2l4346:
  4653                           
  4654                           ;usb_device.c: 754: }
  4655                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4656  00075A  B262               	btfsc	3938,1,c	;volatile
  4657  00075C  A260               	btfss	3936,1,c	;volatile
  4658  00075E  D009               	goto	i2l4354
  4659                           
  4660                           ;usb_device.c: 757: {
  4661                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4662  000760  0E7F               	movlw	127
  4663  000762  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4664  000764  6836               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4665  000766  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4666  000768  D837               	call	PL86	;call to abstracted procedure
  4667  00076A  ECD7  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4668                           
  4669                           ;usb_device.c: 759: {UEIR = 0;};
  4670  00076E  010F               	movlb	15	; () banked
  4671  000770  6B5F               	clrf	95,b	;volatile
  4672  000772                     i2l4354:
  4673                           
  4674                           ;usb_device.c: 767: }
  4675                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4676  000772  0E04               	movlw	4
  4677  000774  0100               	movlb	0	; () banked
  4678  000776  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4679  000778  D002               	goto	i2l486
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;usb_device.c: 775: {
  4683                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  4684  00077A  94A1               	bcf	4001,2,c	;volatile
  4685                           
  4686                           ;usb_device.c: 777: return;
  4687  00077C  0C04               	retlw	4
  4688  00077E                     i2l486:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;usb_device.c: 778: }
  4692                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4693  00077E  A660               	btfss	3936,3,c	;volatile
  4694  000780  D029               	goto	i2l487
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;usb_device.c: 784: {
  4698                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4699  000782  6A47               	clrf	USBDeviceTasks@i,c
  4700  000784                     i2l488:
  4701                           
  4702                           ;usb_device.c: 786: {
  4703                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4704  000784  A662               	btfss	3938,3,c	;volatile
  4705  000786  D026               	goto	i2l487
  4706                           
  4707                           ;usb_device.c: 788: {
  4708                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4709  000788  CF63 F028          	movff	3939,_USTATcopy	;volatile
  4710                           
  4711                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4712  00078C  3028               	rrcf	_USTATcopy,w,c	;volatile
  4713  00078E  32E8               	rrcf	wreg,f,c
  4714  000790  32E8               	rrcf	wreg,f,c
  4715  000792  0B0F               	andlw	15
  4716  000794  6E23               	movwf	_endpoint_number,c	;volatile
  4717                           
  4718                           ;usb_device.c: 793: (UIR &= 0xF7);
  4719  000796  9662               	bcf	3938,3,c	;volatile
  4720                           
  4721                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4722  000798  B428               	btfsc	_USTATcopy,2,c	;volatile
  4723  00079A  D003               	goto	i2l4374
  4724                           
  4725                           ;usb_device.c: 799: {
  4726                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4727  00079C  5023               	movf	_endpoint_number,w,c
  4728  00079E  0F70               	addlw	low _ep_data_out
  4729  0007A0  D002               	goto	L4
  4730  0007A2                     i2l4374:
  4731                           
  4732                           ;usb_device.c: 802: else
  4733                           ;usb_device.c: 803: {
  4734                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4735  0007A2  5023               	movf	_endpoint_number,w,c
  4736  0007A4  0F73               	addlw	low _ep_data_in
  4737  0007A6                     L4:
  4738  0007A6  6ED9               	movwf	fsr2l,c
  4739  0007A8  6ADA               	clrf	fsr2h,c
  4740  0007AA  0100               	movlb	0	; () banked
  4741  0007AC  70DF               	btg	indf2,0,c
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;usb_device.c: 805: }
  4745                           ;usb_device.c: 810: if(endpoint_number == 0)
  4746  0007AE  5023               	movf	_endpoint_number,w,c	;volatile
  4747  0007B0  E103               	bnz	i2l4380
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;usb_device.c: 811: {
  4751                           ;usb_device.c: 812: USBCtrlEPService();
  4752  0007B2  EC67  F009         	call	_USBCtrlEPService	;wreg free
  4753                           
  4754                           ;usb_device.c: 813: }
  4755  0007B6  D00A               	goto	i2l4382
  4756  0007B8                     i2l4380:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;usb_device.c: 814: else
  4760                           ;usb_device.c: 815: {
  4761                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4762  0007B8  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4763  0007BA  0E72               	movlw	114
  4764  0007BC  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4765  0007BE  0E28               	movlw	low _USTATcopy
  4766  0007C0  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4767  0007C2  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4768  0007C4  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4769  0007C6  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4770  0007C8  ECD7  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4771  0007CC                     i2l4382:
  4772  0007CC  2A47               	incf	USBDeviceTasks@i,f,c
  4773  0007CE  0E03               	movlw	3
  4774  0007D0  6447               	cpfsgt	USBDeviceTasks@i,c
  4775  0007D2  D7D8               	goto	i2l488
  4776  0007D4                     i2l487:
  4777                           
  4778                           ;usb_device.c: 822: }
  4779                           ;usb_device.c: 823: }
  4780                           ;usb_device.c: 824: }
  4781                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  4782  0007D4  94A1               	bcf	4001,2,c	;volatile
  4783  0007D6  0012               	return		;funcret
  4784  0007D8                     __end_of_USBDeviceTasks:
  4785                           	opt stack 0
  4786  0007D8                     PL86:
  4787                           	opt stack 17
  4788  0007D8  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4789  0007DA  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4790  0007DC  0E01               	movlw	1
  4791  0007DE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4792  0007E0  0C01               	retlw	1
  4793  0007E2                     __end_ofPL86:
  4794                           	opt stack 0
  4795                           tblptru	equ	0xFF8
  4796                           tblptrh	equ	0xFF7
  4797                           tblptrl	equ	0xFF6
  4798                           tablat	equ	0xFF5
  4799                           prodh	equ	0xFF4
  4800                           prodl	equ	0xFF3
  4801                           intcon	equ	0xFF2
  4802                           postinc0	equ	0xFEE
  4803                           wreg	equ	0xFE8
  4804                           indf1	equ	0xFE7
  4805                           postdec1	equ	0xFE5
  4806                           fsr1h	equ	0xFE2
  4807                           fsr1l	equ	0xFE1
  4808                           indf2	equ	0xFDF
  4809                           postinc2	equ	0xFDE
  4810                           postdec2	equ	0xFDD
  4811                           plusw2	equ	0xFDB
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function i2_USBDeviceInit *****************
  4817 ;; Defined at:
  4818 ;;		line 277 in file "picLibs/usb_device.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 3F/0
  4829 ;;		On exit  : 3F/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4832 ;;      Params:         0       0       0       0
  4833 ;;      Locals:         1       0       0       0
  4834 ;;      Temps:          0       0       0       0
  4835 ;;      Totals:         1       0       0       0
  4836 ;;Total ram usage:        1 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    1
  4839 ;; This function calls:
  4840 ;;		i2_memset
  4841 ;; This function is called by:
  4842 ;;		_USBDeviceTasks
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text24
  4847  0008DA                     __ptext24:
  4848                           	opt stack 0
  4849  0008DA                     i2_USBDeviceInit:
  4850                           	opt stack 0
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;usb_device.c: 279: uint8_t i;
  4854                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4855                           
  4856                           ;incstack = 0
  4857                           
  4858                           ;usb_device.c: 285: ;
  4859                           ;usb_device.c: 288: {UEIR = 0;};
  4860                           
  4861                           ;usb_device.c: 291: {UIR = 0;};
  4862                           
  4863                           ;usb_device.c: 294: UEP0 = 0;
  4864  0008DA  D85C               	call	PL76	;call to abstracted procedure
  4865                           
  4866                           ; BSR set to: 15
  4867                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  4868  0008DC  EC4F  F007         	call	PL50	;call to abstracted procedure
  4869  0008E0  ECC9  F00C         	call	i2_memset	;wreg free
  4870                           
  4871                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4872                           
  4873                           ; BSR set to: 15
  4874  0008E4  EC20  F00C         	call	PL30	;call to abstracted procedure
  4875                           
  4876                           ; BSR set to: 15
  4877                           ;usb_device.c: 301: ;
  4878                           ;usb_device.c: 304: ;
  4879                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4880  0008E8  6A32               	clrf	i2USBDeviceInit@i,c
  4881  0008EA                     i2l4158:
  4882                           
  4883                           ;usb_device.c: 308: {
  4884                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4885  0008EA  5032               	movf	i2USBDeviceInit@i,w,c
  4886  0008EC  D847               	call	PL34	;call to abstracted procedure
  4887  0008EE  2A32               	incf	i2USBDeviceInit@i,f,c
  4888  0008F0  0E0B               	movlw	11
  4889  0008F2  6432               	cpfsgt	i2USBDeviceInit@i,c
  4890  0008F4  D7FA               	goto	i2l4158
  4891                           
  4892                           ;usb_device.c: 310: }
  4893                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4894                           
  4895                           ;usb_device.c: 316: UADDR = 0x00;
  4896                           
  4897                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4898                           
  4899                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4900                           
  4901                           ;usb_device.c: 326: {
  4902                           ;usb_device.c: 327: (UIR &= 0xF7);
  4903                           
  4904                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4905                           
  4906                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4907                           
  4908                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4909                           
  4910                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4911                           
  4912                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4913                           
  4914                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4915                           
  4916                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4917                           
  4918                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4922  0008F6  D82E               	call	PL20	;call to abstracted procedure
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4926  0008F8  6A32               	clrf	i2USBDeviceInit@i,c
  4927  0008FA                     i2l4188:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;usb_device.c: 346: {
  4931                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4932  0008FA  5032               	movf	i2USBDeviceInit@i,w,c
  4933  0008FC  EC8A  F005         	call	PL26	;call to abstracted procedure
  4934  000900  6ADE               	clrf	postinc2,c
  4935  000902  6ADD               	clrf	postdec2,c
  4936                           
  4937                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4938  000904  5032               	movf	i2USBDeviceInit@i,w,c
  4939  000906  EC84  F005         	call	PL24	;call to abstracted procedure
  4940  00090A  6ADE               	clrf	postinc2,c
  4941  00090C  6ADD               	clrf	postdec2,c
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4945  00090E  5032               	movf	i2USBDeviceInit@i,w,c
  4946  000910  D84C               	call	PL88	;call to abstracted procedure
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4950  000912  5032               	movf	i2USBDeviceInit@i,w,c
  4951  000914  D845               	call	PL80	;call to abstracted procedure
  4952                           
  4953                           ; BSR set to: 0
  4954  000916  2A32               	incf	i2USBDeviceInit@i,f,c
  4955                           
  4956                           ; BSR set to: 0
  4957  000918  0E02               	movlw	2
  4958  00091A  6432               	cpfsgt	i2USBDeviceInit@i,c
  4959  00091C  D7EE               	goto	i2l4188
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;usb_device.c: 351: }
  4963                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4964  00091E  0E08               	movlw	8
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4968                           
  4969                           ; BSR set to: 15
  4970                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  4971                           
  4972                           ; BSR set to: 2
  4973                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4974                           
  4975                           ; BSR set to: 2
  4976                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4977                           
  4978                           ; BSR set to: 2
  4979                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4980                           
  4981                           ; BSR set to: 2
  4982                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4983                           
  4984                           ; BSR set to: 2
  4985                           ;usb_device.c: 366: USB1msTickCount = 0;
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4992                           
  4993                           ; BSR set to: 0
  4994  000920  D000               	goto	PL14	;call to abstracted procedure
  4995  000922                     __end_ofi2_USBDeviceInit:
  4996                           	opt stack 0
  4997  000922                     PL14:
  4998                           	opt stack 19
  4999  000922  6E0F               	movwf	_pBDTEntryIn,c
  5000  000924  0E02               	movlw	2
  5001  000926  6E10               	movwf	_pBDTEntryIn+1,c
  5002  000928  0E16               	movlw	22
  5003  00092A  010F               	movlb	15	; () banked
  5004  00092C  6F53               	movwf	83,b	;volatile
  5005  00092E  0E02               	movlw	2
  5006  000930  0102               	movlb	2	; () banked
  5007  000932  6F03               	movwf	3,b	;volatile
  5008  000934  0E30               	movlw	48
  5009  000936  6F02               	movwf	2,b	;volatile
  5010  000938  0E08               	movlw	8
  5011  00093A  6F01               	movwf	1,b	;volatile
  5012  00093C  0E04               	movlw	4
  5013  00093E  6F00               	movwf	0,b	;volatile
  5014  000940  8F00               	bsf	0,7,b	;volatile
  5015  000942  6A29               	clrf	_USBActiveConfiguration,c	;volatile
  5016  000944  0100               	movlb	0	; () banked
  5017  000946  6B66               	clrf	_USB1msTickCount& (0+255),b	;volatile
  5018  000948  6B67               	clrf	(_USB1msTickCount+1)& (0+255),b	;volatile
  5019  00094A  6B68               	clrf	(_USB1msTickCount+2)& (0+255),b	;volatile
  5020  00094C  6B69               	clrf	(_USB1msTickCount+3)& (0+255),b	;volatile
  5021  00094E  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5022  000950  6B81               	clrf	_USBDeviceState& (0+255),b	;volatile
  5023  000952  0012               	return		;funcret
  5024  000954                     __end_ofPL14:
  5025                           	opt stack 0
  5026  000954                     PL20:
  5027                           	opt stack 19
  5028  000954  8C64               	bsf	3940,6,c	;volatile
  5029  000956  010F               	movlb	15	; () banked
  5030  000958  6B5C               	clrf	92,b	;volatile
  5031  00095A  9864               	bcf	3940,4,c	;volatile
  5032  00095C  9C64               	bcf	3940,6,c	;volatile
  5033  00095E                     l4964:
  5034  00095E  9662               	bcf	3938,3,c	;volatile
  5035  000960  6A0C               	clrf	_inPipes+3,c	;volatile
  5036  000962  6A04               	clrf	_outPipes+3,c	;volatile
  5037  000964  6A05               	clrf	_outPipes+4,c	;volatile
  5038  000966  6A06               	clrf	_outPipes+5,c	;volatile
  5039  000968  B662               	btfsc	3938,3,c	;volatile
  5040  00096A  D7F9               	goto	l4964
  5041  00096C  0E01               	movlw	1
  5042  00096E  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5043  000970  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5044  000972  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5045  000974  0100               	movlb	0	; () banked
  5046  000976  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5047  000978  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5048  00097A  0012               	return	
  5049  00097C                     __end_ofPL20:
  5050                           	opt stack 0
  5051  00097C                     PL34:
  5052                           	opt stack 19
  5053  00097C  0D04               	mullw	4
  5054  00097E  0E00               	movlw	0
  5055  000980  24F3               	addwf	prodl,w,c
  5056  000982  6ED9               	movwf	fsr2l,c
  5057  000984  0E02               	movlw	2
  5058  000986  20F4               	addwfc	prodh,w,c
  5059  000988  6EDA               	movwf	fsr2h,c
  5060  00098A  6ADE               	clrf	postinc2,c
  5061  00098C  6ADE               	clrf	postinc2,c
  5062  00098E  6ADE               	clrf	postinc2,c
  5063  000990  6ADD               	clrf	postdec2,c
  5064  000992  0012               	return	
  5065  000994                     __end_ofPL34:
  5066                           	opt stack 0
  5067  000994                     PL76:
  5068                           	opt stack 19
  5069  000994  94A0               	bcf	4000,2,c	;volatile
  5070  000996  010F               	movlb	15	; () banked
  5071  000998  6B5F               	clrf	95,b	;volatile
  5072  00099A  6A62               	clrf	3938,c	;volatile
  5073  00099C  6B53               	clrf	83,b	;volatile
  5074  00099E  0012               	return	
  5075  0009A0                     __end_ofPL76:
  5076                           	opt stack 0
  5077  0009A0                     PL80:
  5078                           	opt stack 19
  5079  0009A0  0F70               	addlw	low _ep_data_out
  5080  0009A2  6ED9               	movwf	fsr2l,c
  5081  0009A4  6ADA               	clrf	fsr2h,c
  5082  0009A6  6ADF               	clrf	indf2,c
  5083  0009A8  0012               	return	
  5084  0009AA                     __end_ofPL80:
  5085                           	opt stack 0
  5086  0009AA                     PL88:
  5087                           	opt stack 19
  5088  0009AA  0F73               	addlw	low _ep_data_in
  5089  0009AC  6ED9               	movwf	fsr2l,c
  5090  0009AE  6ADA               	clrf	fsr2h,c
  5091  0009B0  6ADF               	clrf	indf2,c
  5092  0009B2  0012               	return	
  5093  0009B4                     __end_ofPL88:
  5094                           	opt stack 0
  5095                           tblptru	equ	0xFF8
  5096                           tblptrh	equ	0xFF7
  5097                           tblptrl	equ	0xFF6
  5098                           tablat	equ	0xFF5
  5099                           prodh	equ	0xFF4
  5100                           prodl	equ	0xFF3
  5101                           intcon	equ	0xFF2
  5102                           postinc0	equ	0xFEE
  5103                           wreg	equ	0xFE8
  5104                           indf1	equ	0xFE7
  5105                           postdec1	equ	0xFE5
  5106                           fsr1h	equ	0xFE2
  5107                           fsr1l	equ	0xFE1
  5108                           indf2	equ	0xFDF
  5109                           postinc2	equ	0xFDE
  5110                           postdec2	equ	0xFDD
  5111                           plusw2	equ	0xFDB
  5112                           fsr2h	equ	0xFDA
  5113                           fsr2l	equ	0xFD9
  5114                           status	equ	0xFD8
  5115                           
  5116 ;; *************** function _USBWakeFromSuspend *****************
  5117 ;; Defined at:
  5118 ;;		line 2303 in file "picLibs/usb_device.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 3F/0
  5129 ;;		On exit  : 3F/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5132 ;;      Params:         0       0       0       0
  5133 ;;      Locals:         0       0       0       0
  5134 ;;      Temps:          0       0       0       0
  5135 ;;      Totals:         0       0       0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    4
  5139 ;; This function calls:
  5140 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5141 ;; This function is called by:
  5142 ;;		_USBDeviceTasks
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text25
  5147  0019DE                     __ptext25:
  5148                           	opt stack 0
  5149  0019DE                     _USBWakeFromSuspend:
  5150                           	opt stack 20
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;incstack = 0
  5157  0019DE  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5161  0019E0  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5162  0019E2  0E74               	movlw	116
  5163  0019E4  ECE9  F00C         	call	PL40	;call to abstracted procedure
  5164  0019E8  ECD7  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5165                           
  5166                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5167  0019EC  9264               	bcf	3940,1,c	;volatile
  5168                           
  5169                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5170  0019EE  9460               	bcf	3936,2,c	;volatile
  5171                           
  5172                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5173  0019F0  D001               	goto	i2l4084
  5174  0019F2                     i2l4082:
  5175                           
  5176                           ;usb_device.c: 2343: {
  5177                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5178  0019F2  9462               	bcf	3938,2,c	;volatile
  5179  0019F4                     i2l4084:
  5180  0019F4  B462               	btfsc	3938,2,c	;volatile
  5181  0019F6  D7FD               	goto	i2l4082
  5182                           
  5183                           ;usb_device.c: 2345: }
  5184                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5185  0019F8  0100               	movlb	0	; () banked
  5186  0019FA  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5187                           
  5188                           ; BSR set to: 0
  5189  0019FC  0012               	return		;funcret
  5190  0019FE                     __end_of_USBWakeFromSuspend:
  5191                           	opt stack 0
  5192                           tblptru	equ	0xFF8
  5193                           tblptrh	equ	0xFF7
  5194                           tblptrl	equ	0xFF6
  5195                           tablat	equ	0xFF5
  5196                           prodh	equ	0xFF4
  5197                           prodl	equ	0xFF3
  5198                           intcon	equ	0xFF2
  5199                           postinc0	equ	0xFEE
  5200                           wreg	equ	0xFE8
  5201                           indf1	equ	0xFE7
  5202                           postdec1	equ	0xFE5
  5203                           fsr1h	equ	0xFE2
  5204                           fsr1l	equ	0xFE1
  5205                           indf2	equ	0xFDF
  5206                           postinc2	equ	0xFDE
  5207                           postdec2	equ	0xFDD
  5208                           plusw2	equ	0xFDB
  5209                           fsr2h	equ	0xFDA
  5210                           fsr2l	equ	0xFD9
  5211                           status	equ	0xFD8
  5212                           
  5213 ;; *************** function _USBSuspend *****************
  5214 ;; Defined at:
  5215 ;;		line 2245 in file "picLibs/usb_device.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 3F/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5229 ;;      Params:         0       0       0       0
  5230 ;;      Locals:         0       0       0       0
  5231 ;;      Temps:          0       0       0       0
  5232 ;;      Totals:         0       0       0       0
  5233 ;;Total ram usage:        0 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    4
  5236 ;; This function calls:
  5237 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5238 ;; This function is called by:
  5239 ;;		_USBDeviceTasks
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text26
  5244  0019BC                     __ptext26:
  5245                           	opt stack 0
  5246  0019BC                     _USBSuspend:
  5247                           	opt stack 20
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;incstack = 0
  5254  0019BC  8460               	bsf	3936,2,c	;volatile
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5258  0019BE  9862               	bcf	3938,4,c	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5262  0019C0  8264               	bsf	3940,1,c	;volatile
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5266  0019C2  0E01               	movlw	1
  5267  0019C4  6E24               	movwf	_USBBusIsSuspended,c	;volatile
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5271  0019C6  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5275  0019C8  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5276  0019CA  0E75               	movlw	117
  5277  0019CC  D802               	call	PL40	;call to abstracted procedure
  5278  0019CE  EFD7  F009         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5279  0019D2                     __end_of_USBSuspend:
  5280                           	opt stack 0
  5281  0019D2                     PL40:
  5282                           	opt stack 20
  5283  0019D2  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5284  0019D4  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5285  0019D6  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5286  0019D8  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5287  0019DA  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5288  0019DC  0012               	return	
  5289  0019DE                     __end_ofPL40:
  5290                           	opt stack 0
  5291                           tblptru	equ	0xFF8
  5292                           tblptrh	equ	0xFF7
  5293                           tblptrl	equ	0xFF6
  5294                           tablat	equ	0xFF5
  5295                           prodh	equ	0xFF4
  5296                           prodl	equ	0xFF3
  5297                           intcon	equ	0xFF2
  5298                           postinc0	equ	0xFEE
  5299                           wreg	equ	0xFE8
  5300                           indf1	equ	0xFE7
  5301                           postdec1	equ	0xFE5
  5302                           fsr1h	equ	0xFE2
  5303                           fsr1l	equ	0xFE1
  5304                           indf2	equ	0xFDF
  5305                           postinc2	equ	0xFDE
  5306                           postdec2	equ	0xFDD
  5307                           plusw2	equ	0xFDB
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _USBStallHandler *****************
  5313 ;; Defined at:
  5314 ;;		line 2202 in file "picLibs/usb_device.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 3F/F
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5328 ;;      Params:         0       0       0       0
  5329 ;;      Locals:         0       0       0       0
  5330 ;;      Temps:          1       0       0       0
  5331 ;;      Totals:         1       0       0       0
  5332 ;;Total ram usage:        1 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_USBDeviceTasks
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text27
  5342  001850                     __ptext27:
  5343                           	opt stack 0
  5344  001850                     _USBStallHandler:
  5345                           	opt stack 24
  5346                           
  5347                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5348                           
  5349                           ;incstack = 0
  5350  001850  010F               	movlb	15	; () banked
  5351  001852  A153               	btfss	83,0,b	;volatile
  5352  001854  D010               	goto	i2l626
  5353                           
  5354                           ; BSR set to: 15
  5355                           ;usb_device.c: 2215: {
  5356                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5357  001856  D811               	call	PL28	;call to abstracted procedure
  5358  001858  0E80               	movlw	128
  5359  00185A  18DE               	xorwf	postinc2,w,c
  5360  00185C  E10B               	bnz	i2l4118
  5361                           
  5362                           ; BSR set to: 15
  5363  00185E  EC29  F008         	call	PL16	;call to abstracted procedure
  5364  001862  0E84               	movlw	132
  5365  001864  18DE               	xorwf	postinc2,w,c
  5366  001866  E106               	bnz	i2l4118
  5367                           
  5368                           ; BSR set to: 15
  5369                           ;usb_device.c: 2218: {
  5370                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5371  001868  D808               	call	PL28	;call to abstracted procedure
  5372  00186A  0E0C               	movlw	12
  5373  00186C  6EDF               	movwf	indf2,c
  5374                           
  5375                           ; BSR set to: 15
  5376                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5377  00186E  D805               	call	PL28	;call to abstracted procedure
  5378  001870  0E00               	movlw	0
  5379  001872  8EDB               	bsf	plusw2,7,c
  5380  001874                     i2l4118:
  5381                           
  5382                           ; BSR set to: 15
  5383                           ;usb_device.c: 2222: }
  5384                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5385  001874  9153               	bcf	83,0,b	;volatile
  5386  001876                     i2l626:
  5387                           
  5388                           ; BSR set to: 15
  5389                           ;usb_device.c: 2224: }
  5390                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5391  001876  9A62               	bcf	3938,5,c	;volatile
  5392                           
  5393                           ; BSR set to: 15
  5394  001878  0012               	return		;funcret
  5395  00187A                     __end_of_USBStallHandler:
  5396                           	opt stack 0
  5397  00187A                     PL28:
  5398                           	opt stack 24
  5399  00187A  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5400  00187E  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5401  001882  0012               	return	
  5402  001884                     __end_ofPL28:
  5403                           	opt stack 0
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           postinc0	equ	0xFEE
  5412                           wreg	equ	0xFE8
  5413                           indf1	equ	0xFE7
  5414                           postdec1	equ	0xFE5
  5415                           fsr1h	equ	0xFE2
  5416                           fsr1l	equ	0xFE1
  5417                           indf2	equ	0xFDF
  5418                           postinc2	equ	0xFDE
  5419                           postdec2	equ	0xFDD
  5420                           plusw2	equ	0xFDB
  5421                           fsr2h	equ	0xFDA
  5422                           fsr2l	equ	0xFD9
  5423                           status	equ	0xFD8
  5424                           
  5425 ;; *************** function _USBIncrement1msInternalTimers *****************
  5426 ;; Defined at:
  5427 ;;		line 3025 in file "picLibs/usb_device.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 3F/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5441 ;;      Params:         0       0       0       0
  5442 ;;      Locals:         0       0       0       0
  5443 ;;      Temps:          0       0       0       0
  5444 ;;      Totals:         0       0       0       0
  5445 ;;Total ram usage:        0 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_USBDeviceTasks
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text28
  5455  001A74                     __ptext28:
  5456                           	opt stack 0
  5457  001A74                     _USBIncrement1msInternalTimers:
  5458                           	opt stack 24
  5459                           
  5460                           ;usb_device.c: 3033: USB1msTickCount++;
  5461                           
  5462                           ; BSR set to: 15
  5463                           ;incstack = 0
  5464  001A74  0100               	movlb	0	; () banked
  5465  001A76  2B66               	incf	_USB1msTickCount& (0+255),f,b	;volatile
  5466  001A78  0E00               	movlw	0
  5467  001A7A  2367               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  5468  001A7C  2368               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  5469  001A7E  2369               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5473  001A80  5024               	movf	_USBBusIsSuspended,w,c	;volatile
  5474  001A82  A4D8               	btfss	status,2,c
  5475  001A84  0012               	return	
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;usb_device.c: 3035: {
  5479                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5480  001A86  2B7D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5484  001A88  517D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  5485  001A8A  B4D8               	btfsc	status,2,c
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;usb_device.c: 3039: {
  5489                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5490  001A8C  697D               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5491                           
  5492                           ; BSR set to: 0
  5493  001A8E  0012               	return		;funcret
  5494  001A90                     __end_of_USBIncrement1msInternalTimers:
  5495                           	opt stack 0
  5496                           tblptru	equ	0xFF8
  5497                           tblptrh	equ	0xFF7
  5498                           tblptrl	equ	0xFF6
  5499                           tablat	equ	0xFF5
  5500                           prodh	equ	0xFF4
  5501                           prodl	equ	0xFF3
  5502                           intcon	equ	0xFF2
  5503                           postinc0	equ	0xFEE
  5504                           wreg	equ	0xFE8
  5505                           indf1	equ	0xFE7
  5506                           postdec1	equ	0xFE5
  5507                           fsr1h	equ	0xFE2
  5508                           fsr1l	equ	0xFE1
  5509                           indf2	equ	0xFDF
  5510                           postinc2	equ	0xFDE
  5511                           postdec2	equ	0xFDD
  5512                           plusw2	equ	0xFDB
  5513                           fsr2h	equ	0xFDA
  5514                           fsr2l	equ	0xFD9
  5515                           status	equ	0xFD8
  5516                           
  5517 ;; *************** function _USBCtrlEPService *****************
  5518 ;; Defined at:
  5519 ;;		line 2372 in file "picLibs/usb_device.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 3F/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5533 ;;      Params:         0       0       0       0
  5534 ;;      Locals:         0       0       0       0
  5535 ;;      Temps:          1       0       0       0
  5536 ;;      Totals:         1       0       0       0
  5537 ;;Total ram usage:        1 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    7
  5540 ;; This function calls:
  5541 ;;		_USBCtrlTrfInHandler
  5542 ;;		_USBCtrlTrfOutHandler
  5543 ;;		_USBCtrlTrfSetupHandler
  5544 ;;		_memcpy
  5545 ;; This function is called by:
  5546 ;;		_USBDeviceTasks
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text29
  5551  0012CE                     __ptext29:
  5552                           	opt stack 0
  5553  0012CE                     _USBCtrlEPService:
  5554                           	opt stack 17
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;incstack = 0
  5561  0012CE  0E2D               	movlw	45
  5562  0012D0  6E21               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5566  0012D2  C028  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5567  0012D6  0EFD               	movlw	253
  5568  0012D8  1646               	andwf	??_USBCtrlEPService,f,c
  5569  0012DA  E12A               	bnz	i2l4138
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;usb_device.c: 2383: {
  5573                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5574  0012DC  90D8               	bcf	status,0,c
  5575  0012DE  3028               	rrcf	_USTATcopy,w,c	;volatile
  5576  0012E0  0B3F               	andlw	63
  5577  0012E2  0D04               	mullw	4
  5578  0012E4  0E00               	movlw	0
  5579  0012E6  24F3               	addwf	prodl,w,c
  5580  0012E8  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  5581  0012EA  0E02               	movlw	2
  5582  0012EC  20F4               	addwfc	prodh,w,c
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5586  0012EE  EC59  F007         	call	PL94	;call to abstracted procedure
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5590  0012F2  0E04               	movlw	4
  5591  0012F4  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
  5592  0012F6  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5596  0012F8  EC3D  F00C         	call	PL28	;call to abstracted procedure
  5597  0012FC  30DF               	rrcf	indf2,w,c
  5598  0012FE  32E8               	rrcf	wreg,f,c
  5599  001300  0B0F               	andlw	15
  5600  001302  0A0D               	xorlw	13
  5601  001304  E002 EFFF  F00C    	bnz	_USBCtrlTrfOutHandler
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;usb_device.c: 2400: {
  5605                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  5606  00130A  0E30               	movlw	48
  5607  00130C  6E2A               	movwf	memcpy@d1,c
  5608  00130E  0E02               	movlw	2
  5609  001310  6E2B               	movwf	memcpy@d1+1,c
  5610  001312  EE20 F002          	lfsr	2,2
  5611  001316  EC25  F009         	call	PL62	;call to abstracted procedure
  5612  00131A  CFDE F02C          	movff	postinc2,memcpy@s1
  5613  00131E  CFDD F02D          	movff	postdec2,memcpy@s1+1
  5614  001322  6A2F               	clrf	memcpy@n+1,c
  5615  001324  0E08               	movlw	8
  5616  001326  6E2E               	movwf	memcpy@n,c
  5617  001328  ECB4  F00B         	call	_memcpy	;wreg free
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5621  00132C  EF46  F00B         	goto	_USBCtrlTrfSetupHandler	;wreg free
  5622  001330                     i2l4138:
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5626  001330  5028               	movf	_USTATcopy,w,c	;volatile
  5627  001332  0BFD               	andlw	253
  5628  001334  0A04               	xorlw	4
  5629  001336  B4D8               	btfsc	status,2,c
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;usb_device.c: 2417: {
  5633                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5634  001338  ECF3  F007         	call	_USBCtrlTrfInHandler	;wreg free
  5635  00133C  0012               	return		;funcret
  5636  00133E                     __end_of_USBCtrlEPService:
  5637                           	opt stack 0
  5638                           tblptru	equ	0xFF8
  5639                           tblptrh	equ	0xFF7
  5640                           tblptrl	equ	0xFF6
  5641                           tablat	equ	0xFF5
  5642                           prodh	equ	0xFF4
  5643                           prodl	equ	0xFF3
  5644                           intcon	equ	0xFF2
  5645                           postinc0	equ	0xFEE
  5646                           wreg	equ	0xFE8
  5647                           indf1	equ	0xFE7
  5648                           postdec1	equ	0xFE5
  5649                           fsr1h	equ	0xFE2
  5650                           fsr1l	equ	0xFE1
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           postdec2	equ	0xFDD
  5654                           plusw2	equ	0xFDB
  5655                           fsr2h	equ	0xFDA
  5656                           fsr2l	equ	0xFD9
  5657                           status	equ	0xFD8
  5658                           
  5659 ;; *************** function _memcpy *****************
  5660 ;; Defined at:
  5661 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  d1              2    0[COMRAM] PTR void 
  5664 ;;		 -> SetupPkt(8), 
  5665 ;;  s1              2    2[COMRAM] PTR const void 
  5666 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5667 ;;  n               2    4[COMRAM] unsigned int 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5670 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5671 ;;  d               2    6[COMRAM] PTR unsigned char 
  5672 ;;		 -> SetupPkt(8), 
  5673 ;;  tmp             1   10[COMRAM] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  2    0[COMRAM] PTR void 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 3F/0
  5680 ;;		On exit  : 3F/0
  5681 ;;		Unchanged: 3F/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5683 ;;      Params:         6       0       0       0
  5684 ;;      Locals:         5       0       0       0
  5685 ;;      Temps:          0       0       0       0
  5686 ;;      Totals:        11       0       0       0
  5687 ;;Total ram usage:       11 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_USBCtrlEPService
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text30
  5697  001768                     __ptext30:
  5698                           	opt stack 0
  5699  001768                     _memcpy:
  5700                           	opt stack 23
  5701                           
  5702                           ; BSR set to: 0
  5703                           
  5704                           ;incstack = 0
  5705  001768  C02C  F032         	movff	memcpy@s1,memcpy@s
  5706  00176C  C02D  F033         	movff	memcpy@s1+1,memcpy@s+1
  5707  001770  C02A  F030         	movff	memcpy@d1,memcpy@d
  5708  001774  C02B  F031         	movff	memcpy@d1+1,memcpy@d+1
  5709  001778  D010               	goto	i2l3748
  5710  00177A                     i2l3740:
  5711                           
  5712                           ; BSR set to: 0
  5713  00177A  C032  FFD9         	movff	memcpy@s,fsr2l
  5714  00177E  C033  FFDA         	movff	memcpy@s+1,fsr2h
  5715  001782  50DF               	movf	indf2,w,c
  5716  001784  6E34               	movwf	memcpy@tmp,c
  5717                           
  5718                           ; BSR set to: 0
  5719  001786  4A32               	infsnz	memcpy@s,f,c
  5720  001788  2A33               	incf	memcpy@s+1,f,c
  5721                           
  5722                           ; BSR set to: 0
  5723  00178A  C030  FFD9         	movff	memcpy@d,fsr2l
  5724  00178E  C031  FFDA         	movff	memcpy@d+1,fsr2h
  5725  001792  C034  FFDF         	movff	memcpy@tmp,indf2
  5726                           
  5727                           ; BSR set to: 0
  5728  001796  4A30               	infsnz	memcpy@d,f,c
  5729  001798  2A31               	incf	memcpy@d+1,f,c
  5730  00179A                     i2l3748:
  5731                           
  5732                           ; BSR set to: 0
  5733  00179A  062E               	decf	memcpy@n,f,c
  5734  00179C  A0D8               	btfss	status,0,c
  5735  00179E  062F               	decf	memcpy@n+1,f,c
  5736  0017A0  282E               	incf	memcpy@n,w,c
  5737  0017A2  E1EB               	bnz	i2l3740
  5738  0017A4  282F               	incf	memcpy@n+1,w,c
  5739  0017A6  E1E9               	bnz	i2l3740
  5740                           
  5741                           ; BSR set to: 0
  5742  0017A8  0012               	return		;funcret
  5743  0017AA                     __end_of_memcpy:
  5744                           	opt stack 0
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           intcon	equ	0xFF2
  5752                           postinc0	equ	0xFEE
  5753                           wreg	equ	0xFE8
  5754                           indf1	equ	0xFE7
  5755                           postdec1	equ	0xFE5
  5756                           fsr1h	equ	0xFE2
  5757                           fsr1l	equ	0xFE1
  5758                           indf2	equ	0xFDF
  5759                           postinc2	equ	0xFDE
  5760                           postdec2	equ	0xFDD
  5761                           plusw2	equ	0xFDB
  5762                           fsr2h	equ	0xFDA
  5763                           fsr2l	equ	0xFD9
  5764                           status	equ	0xFD8
  5765                           
  5766 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5767 ;; Defined at:
  5768 ;;		line 2465 in file "picLibs/usb_device.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;		None
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 3F/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5782 ;;      Params:         0       0       0       0
  5783 ;;      Locals:         0       0       0       0
  5784 ;;      Temps:          0       0       0       0
  5785 ;;      Totals:         0       0       0       0
  5786 ;;Total ram usage:        0 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    6
  5789 ;; This function calls:
  5790 ;;		_USBCheckStdRequest
  5791 ;;		_USBCtrlEPServiceComplete
  5792 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5793 ;; This function is called by:
  5794 ;;		_USBCtrlEPService
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text31
  5799  00168C                     __ptext31:
  5800                           	opt stack 0
  5801  00168C                     _USBCtrlTrfSetupHandler:
  5802                           	opt stack 17
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;incstack = 0
  5809  00168C  6A27               	clrf	_shortPacketStatus,c	;volatile
  5810                           
  5811                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5812  00168E  6A20               	clrf	_USBDeferStatusStagePacket,c	;volatile
  5813                           
  5814                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5815  001690  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5816                           
  5817                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5818  001692  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5819                           
  5820                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5821  001694  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  5822                           
  5823                           ;usb_device.c: 2475: controlTransferState = 0;
  5824  001696  6A26               	clrf	_controlTransferState,c	;volatile
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5828  001698  EC29  F008         	call	PL16	;call to abstracted procedure
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5832  00169C  D817               	call	PL96	;call to abstracted procedure
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5836  00169E  EC29  F008         	call	PL16	;call to abstracted procedure
  5837                           
  5838                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5839  0016A2  D814               	call	PL96	;call to abstracted procedure
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5843  0016A4  ECF7  F005         	call	PL12	;call to abstracted procedure
  5844  0016A8  0E7F               	movlw	127
  5845  0016AA  16DF               	andwf	indf2,f,c
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5849  0016AC  6A0C               	clrf	_inPipes+3,c	;volatile
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5853  0016AE  6A0D               	clrf	_inPipes+4,c	;volatile
  5854  0016B0  6A0E               	clrf	_inPipes+5,c	;volatile
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5858  0016B2  6A04               	clrf	_outPipes+3,c	;volatile
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5862  0016B4  6A05               	clrf	_outPipes+4,c	;volatile
  5863  0016B6  6A06               	clrf	_outPipes+5,c	;volatile
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;usb_device.c: 2500: USBCheckStdRequest();
  5867  0016B8  ECAB  F007         	call	_USBCheckStdRequest	;wreg free
  5868                           
  5869                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5870  0016BC  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5871  0016BE  0E03               	movlw	3
  5872  0016C0  ECE9  F00C         	call	PL40	;call to abstracted procedure
  5873  0016C4  ECD7  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5874                           
  5875                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5876  0016C8  EF5F  F007         	goto	_USBCtrlEPServiceComplete	;wreg free
  5877  0016CC                     __end_of_USBCtrlTrfSetupHandler:
  5878                           	opt stack 0
  5879  0016CC                     PL96:
  5880                           	opt stack 17
  5881  0016CC  0E7F               	movlw	127
  5882  0016CE  16DF               	andwf	indf2,f,c
  5883  0016D0  0E04               	movlw	4
  5884  0016D2  1A0F               	xorwf	_pBDTEntryIn,f,c
  5885  0016D4  5010               	movf	_pBDTEntryIn+1,w,c
  5886  0016D6  0012               	return	
  5887  0016D8                     __end_ofPL96:
  5888                           	opt stack 0
  5889                           tblptru	equ	0xFF8
  5890                           tblptrh	equ	0xFF7
  5891                           tblptrl	equ	0xFF6
  5892                           tablat	equ	0xFF5
  5893                           prodh	equ	0xFF4
  5894                           prodl	equ	0xFF3
  5895                           intcon	equ	0xFF2
  5896                           postinc0	equ	0xFEE
  5897                           wreg	equ	0xFE8
  5898                           indf1	equ	0xFE7
  5899                           postdec1	equ	0xFE5
  5900                           fsr1h	equ	0xFE2
  5901                           fsr1l	equ	0xFE1
  5902                           indf2	equ	0xFDF
  5903                           postinc2	equ	0xFDE
  5904                           postdec2	equ	0xFDD
  5905                           plusw2	equ	0xFDB
  5906                           fsr2h	equ	0xFDA
  5907                           fsr2l	equ	0xFD9
  5908                           status	equ	0xFD8
  5909                           
  5910 ;; *************** function _USBCtrlEPServiceComplete *****************
  5911 ;; Defined at:
  5912 ;;		line 1616 in file "picLibs/usb_device.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5926 ;;      Params:         0       0       0       0
  5927 ;;      Locals:         0       0       0       0
  5928 ;;      Temps:          0       0       0       0
  5929 ;;      Totals:         0       0       0       0
  5930 ;;Total ram usage:        0 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    2
  5933 ;; This function calls:
  5934 ;;		_USBCtrlEPAllowDataStage
  5935 ;;		_USBCtrlEPAllowStatusStage
  5936 ;; This function is called by:
  5937 ;;		_USBCtrlTrfSetupHandler
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text32
  5942  000EBE                     __ptext32:
  5943                           	opt stack 0
  5944  000EBE                     _USBCtrlEPServiceComplete:
  5945                           	opt stack 20
  5946                           
  5947                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5948                           
  5949                           ;incstack = 0
  5950  000EBE  9864               	bcf	3940,4,c	;volatile
  5951                           
  5952                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5953  000EC0  BE0C               	btfsc	_inPipes+3,7,c	;volatile
  5954  000EC2  D015               	goto	i2l550
  5955                           
  5956                           ;usb_device.c: 1629: {
  5957                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5958  000EC4  AE04               	btfss	_outPipes+3,7,c	;volatile
  5959  000EC6  D00A               	goto	i2l3548
  5960                           
  5961                           ;usb_device.c: 1631: {
  5962                           ;usb_device.c: 1632: controlTransferState = 2;
  5963  000EC8  0E02               	movlw	2
  5964  000ECA  6E26               	movwf	_controlTransferState,c	;volatile
  5965                           
  5966                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5967  000ECC  0100               	movlb	0	; () banked
  5968  000ECE  517E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  5969  000ED0  E102               	bnz	i2l3544
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;usb_device.c: 1644: {
  5973                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5974  000ED2  EC9B  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  5975  000ED6                     i2l3544:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;usb_device.c: 1646: }
  5979                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5980  000ED6  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5984  000ED8  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  5985                           
  5986                           ;usb_device.c: 1652: }
  5987  000EDA  0012               	return	
  5988  000EDC                     i2l3548:
  5989                           
  5990                           ;usb_device.c: 1653: else
  5991                           ;usb_device.c: 1654: {
  5992                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5993                           
  5994                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5995                           
  5996                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5997  000EDC  D825               	call	PL2	;call to abstracted procedure
  5998  000EDE  0E0C               	movlw	12
  5999                           
  6000                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6001  000EE0  ECEF  F005         	call	PL10	;call to abstracted procedure
  6002                           
  6003                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6004  000EE4  EC29  F008         	call	PL16	;call to abstracted procedure
  6005  000EE8  0E04               	movlw	4
  6006                           
  6007                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6008  000EEA  EF21  F008         	goto	PL8	;call to abstracted procedure
  6009  000EEE                     i2l550:
  6010                           
  6011                           ;usb_device.c: 1667: else
  6012                           ;usb_device.c: 1668: {
  6013                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6014  000EEE  0102               	movlb	2	; () banked
  6015  000EF0  AF30               	btfss	48,7,b	;volatile
  6016  000EF2  D00D               	goto	i2l3568
  6017                           
  6018                           ; BSR set to: 2
  6019                           ;usb_device.c: 1670: {
  6020                           ;usb_device.c: 1671: controlTransferState = 1;
  6021  000EF4  0E01               	movlw	1
  6022  000EF6  6E26               	movwf	_controlTransferState,c	;volatile
  6023                           
  6024                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6025  000EF8  501D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  6026  000EFA  E102               	bnz	i2l3560
  6027                           
  6028                           ; BSR set to: 2
  6029                           ;usb_device.c: 1686: {
  6030                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6031  000EFC  EC9B  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  6032  000F00                     i2l3560:
  6033                           
  6034                           ;usb_device.c: 1688: }
  6035                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6036  000F00  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6037                           
  6038                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6039  000F02  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6040                           
  6041                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6042  000F04  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6043  000F06  A4D8               	btfss	status,2,c
  6044  000F08  0012               	return	
  6045                           
  6046                           ;usb_device.c: 1713: {
  6047                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6048  000F0A  EFF3  F008         	goto	_USBCtrlEPAllowStatusStage	;wreg free
  6049  000F0E                     i2l3568:
  6050                           
  6051                           ; BSR set to: 2
  6052                           ;usb_device.c: 1717: else
  6053                           ;usb_device.c: 1718: {
  6054                           ;usb_device.c: 1729: controlTransferState = 2;
  6055  000F0E  0E02               	movlw	2
  6056  000F10  6E26               	movwf	_controlTransferState,c	;volatile
  6057                           
  6058                           ; BSR set to: 2
  6059                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6060                           
  6061                           ; BSR set to: 2
  6062                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6063                           
  6064                           ; BSR set to: 2
  6065                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6066  000F12  D80A               	call	PL2	;call to abstracted procedure
  6067  000F14  0E04               	movlw	4
  6068                           
  6069                           ; BSR set to: 2
  6070                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6071  000F16  ECEF  F005         	call	PL10	;call to abstracted procedure
  6072                           
  6073                           ; BSR set to: 2
  6074                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6075  000F1A  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6076                           
  6077                           ; BSR set to: 2
  6078                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6079  000F1C  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6080                           
  6081                           ; BSR set to: 2
  6082                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6083  000F1E  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6084  000F20  E102 EFF3  F008    	bz	_USBCtrlEPAllowStatusStage
  6085  000F26  0012               	return	
  6086  000F28                     __end_of_USBCtrlEPServiceComplete:
  6087                           	opt stack 0
  6088  000F28                     PL2:
  6089                           	opt stack 20
  6090  000F28  EE20 F001          	lfsr	2,1
  6091  000F2C  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6092  000F2E  26D9               	addwf	fsr2l,f,c
  6093  000F30  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6094  000F32  22DA               	addwfc	fsr2h,f,c
  6095  000F34  0E08               	movlw	8
  6096  000F36  6EDF               	movwf	indf2,c
  6097  000F38  EE20 F002          	lfsr	2,2
  6098  000F3C  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6099  000F3E  26D9               	addwf	fsr2l,f,c
  6100  000F40  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6101  000F42  22DA               	addwfc	fsr2h,f,c
  6102  000F44  0E30               	movlw	48
  6103  000F46  6EDE               	movwf	postinc2,c
  6104  000F48  0E02               	movlw	2
  6105  000F4A  6EDD               	movwf	postdec2,c
  6106  000F4C  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6107  000F50  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6108  000F54  0C02               	retlw	2
  6109  000F56                     __end_ofPL2:
  6110                           	opt stack 0
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           prodh	equ	0xFF4
  6116                           prodl	equ	0xFF3
  6117                           intcon	equ	0xFF2
  6118                           postinc0	equ	0xFEE
  6119                           wreg	equ	0xFE8
  6120                           indf1	equ	0xFE7
  6121                           postdec1	equ	0xFE5
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           postdec2	equ	0xFDD
  6127                           plusw2	equ	0xFDB
  6128                           fsr2h	equ	0xFDA
  6129                           fsr2l	equ	0xFD9
  6130                           status	equ	0xFD8
  6131                           
  6132 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6133 ;; Defined at:
  6134 ;;		line 1488 in file "picLibs/usb_device.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 3D/0
  6145 ;;		On exit  : 3F/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6148 ;;      Params:         0       0       0       0
  6149 ;;      Locals:         0       0       0       0
  6150 ;;      Temps:          0       0       0       0
  6151 ;;      Totals:         0       0       0       0
  6152 ;;Total ram usage:        0 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    1
  6155 ;; This function calls:
  6156 ;;		_USBCtrlTrfTxService
  6157 ;; This function is called by:
  6158 ;;		_USBCtrlEPServiceComplete
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text33
  6163  001536                     __ptext33:
  6164                           	opt stack 0
  6165  001536                     _USBCtrlEPAllowDataStage:
  6166                           	opt stack 20
  6167                           
  6168                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6169                           
  6170                           ;incstack = 0
  6171  001536  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6172                           
  6173                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6174  001538  0100               	movlb	0	; () banked
  6175  00153A  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6179  00153C  0E02               	movlw	2
  6180  00153E  1826               	xorwf	_controlTransferState,w,c	;volatile
  6181  001540  E112               	bnz	i2l3346
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;usb_device.c: 1494: {
  6185                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6186  001542  EE20 F001          	lfsr	2,1
  6187  001546  ECE5  F005         	call	PL4	;call to abstracted procedure
  6188                           
  6189                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  6190  00154A  ECEA  F005         	call	PL6	;call to abstracted procedure
  6191  00154E  ECE5  F005         	call	PL4	;call to abstracted procedure
  6192  001552  0E38               	movlw	56
  6193  001554  6EDE               	movwf	postinc2,c
  6194  001556  0E02               	movlw	2
  6195  001558  6EDD               	movwf	postdec2,c
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6199  00155A  ECF7  F005         	call	PL12	;call to abstracted procedure
  6200  00155E  0E48               	movlw	72
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6204  001560  ECEF  F005         	call	PL10	;call to abstracted procedure
  6205                           
  6206                           ;usb_device.c: 1500: }
  6207  001564  0C00               	retlw	0
  6208  001566                     i2l3346:
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;usb_device.c: 1501: else
  6212                           ;usb_device.c: 1502: {
  6213                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6214  001566  500D               	movf	_inPipes+4,w,c	;volatile
  6215  001568  0102               	movlb	2	; () banked
  6216  00156A  5D36               	subwf	54,w,b	;volatile
  6217  00156C  500E               	movf	_inPipes+5,w,c	;volatile
  6218  00156E  5937               	subwfb	55,w,b	;volatile
  6219  001570  E204               	bc	i2l3350
  6220                           
  6221                           ; BSR set to: 2
  6222                           ;usb_device.c: 1506: {
  6223                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6224  001572  C236 F00D          	movff	566,_inPipes+4	;volatile
  6225  001576  C237 F00E          	movff	567,_inPipes+5	;volatile
  6226  00157A                     i2l3350:
  6227                           
  6228                           ; BSR set to: 2
  6229                           ;usb_device.c: 1508: }
  6230                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6231  00157A  ECB9  F006         	call	_USBCtrlTrfTxService	;wreg free
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  6235  00157E  EC34  F008         	call	PL44	;call to abstracted procedure
  6236  001582  EC2E  F008         	call	PL38	;call to abstracted procedure
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6240  001586  EC29  F008         	call	PL16	;call to abstracted procedure
  6241  00158A  0E48               	movlw	72
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6245                           
  6246                           ; BSR set to: 0
  6247  00158C  EF21  F008         	goto	PL8	;call to abstracted procedure
  6248  001590                     __end_of_USBCtrlEPAllowDataStage:
  6249                           	opt stack 0
  6250                           tblptru	equ	0xFF8
  6251                           tblptrh	equ	0xFF7
  6252                           tblptrl	equ	0xFF6
  6253                           tablat	equ	0xFF5
  6254                           prodh	equ	0xFF4
  6255                           prodl	equ	0xFF3
  6256                           intcon	equ	0xFF2
  6257                           postinc0	equ	0xFEE
  6258                           wreg	equ	0xFE8
  6259                           indf1	equ	0xFE7
  6260                           postdec1	equ	0xFE5
  6261                           fsr1h	equ	0xFE2
  6262                           fsr1l	equ	0xFE1
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           postdec2	equ	0xFDD
  6266                           plusw2	equ	0xFDB
  6267                           fsr2h	equ	0xFDA
  6268                           fsr2l	equ	0xFD9
  6269                           status	equ	0xFD8
  6270                           
  6271 ;; *************** function _USBCheckStdRequest *****************
  6272 ;; Defined at:
  6273 ;;		line 2686 in file "picLibs/usb_device.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;		None
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      void 
  6280 ;; Registers used:
  6281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 3F/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6287 ;;      Params:         0       0       0       0
  6288 ;;      Locals:         0       0       0       0
  6289 ;;      Temps:          1       0       0       0
  6290 ;;      Totals:         1       0       0       0
  6291 ;;Total ram usage:        1 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    5
  6294 ;; This function calls:
  6295 ;;		_USBStdFeatureReqHandler
  6296 ;;		_USBStdGetDscHandler
  6297 ;;		_USBStdGetStatusHandler
  6298 ;;		_USBStdSetCfgHandler
  6299 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6300 ;; This function is called by:
  6301 ;;		_USBCtrlTrfSetupHandler
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text34
  6306  000F56                     __ptext34:
  6307                           	opt stack 0
  6308  000F56                     _USBCheckStdRequest:
  6309                           	opt stack 17
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;incstack = 0
  6316  000F56  0102               	movlb	2	; () banked
  6317  000F58  3930               	swapf	48,w,b	;volatile
  6318  000F5A  32E8               	rrcf	wreg,f,c
  6319  000F5C  0B03               	andlw	3
  6320  000F5E  E01D               	bz	i2l3666
  6321  000F60  0012               	return	
  6322  000F62                     i2l675:
  6323                           
  6324                           ; BSR set to: 2
  6325                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6326  000F62  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6327                           
  6328                           ; BSR set to: 2
  6329                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6330  000F64  0E08               	movlw	8
  6331  000F66  0100               	movlb	0	; () banked
  6332  000F68  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6333                           
  6334                           ;usb_device.c: 2696: break;
  6335  000F6A  0C08               	retlw	8
  6336  000F6C                     i2l3640:
  6337                           
  6338                           ; BSR set to: 2
  6339                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6340  000F6C  0E29               	movlw	low _USBActiveConfiguration
  6341  000F6E  6E09               	movwf	_inPipes,c	;volatile
  6342                           
  6343                           ; BSR set to: 2
  6344                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6345                           
  6346                           ; BSR set to: 2
  6347                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6348                           
  6349                           ; BSR set to: 2
  6350                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6351                           
  6352                           ;usb_device.c: 2708: break;
  6353  000F70  D034               	goto	PL78	;call to abstracted procedure
  6354  000F72                     i2l3652:
  6355                           
  6356                           ; BSR set to: 2
  6357                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6358  000F72  5134               	movf	52,w,b	;volatile
  6359  000F74  0F91               	addlw	low _USBAlternateInterface
  6360  000F76  6E45               	movwf	??_USBCheckStdRequest& (0+255),c
  6361  000F78  C045  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  6362                           
  6363                           ; BSR set to: 2
  6364                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6365                           
  6366                           ; BSR set to: 2
  6367                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6368                           
  6369                           ; BSR set to: 2
  6370                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6371                           
  6372                           ;usb_device.c: 2721: break;
  6373  000F7C  D02E               	goto	PL78	;call to abstracted procedure
  6374  000F7E                     i2l684:
  6375                           
  6376                           ; BSR set to: 2
  6377                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6378  000F7E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6379                           
  6380                           ; BSR set to: 2
  6381                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6382  000F80  5134               	movf	52,w,b	;volatile
  6383  000F82  0F91               	addlw	low _USBAlternateInterface
  6384  000F84  6ED9               	movwf	fsr2l,c
  6385  000F86  6ADA               	clrf	fsr2h,c
  6386  000F88  C232 FFDF          	movff	562,indf2	;volatile
  6387                           
  6388                           ;usb_device.c: 2725: break;
  6389  000F8C  0012               	return	
  6390  000F8E                     i2l3662:
  6391                           
  6392                           ; BSR set to: 2
  6393                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6394  000F8E  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6395  000F90  0E02               	movlw	2
  6396  000F92  ECE9  F00C         	call	PL40	;call to abstracted procedure
  6397  000F96  EFD7  F009         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6398  000F9A                     i2l3666:
  6399                           
  6400                           ; BSR set to: 2
  6401  000F9A  5131               	movf	49,w,b	;volatile
  6402                           
  6403                           ; Switch size 1, requested type "space"
  6404                           ; Number of cases is 11, Range of values is 0 to 12
  6405                           ; switch strategies available:
  6406                           ; Name         Instructions Cycles
  6407                           ; simple_byte           34    18 (average)
  6408                           ;	Chosen strategy is simple_byte
  6409  000F9C  E102 EF2E  F009    	bz	_USBStdGetStatusHandler
  6410  000FA2  0A01               	xorlw	1	; case 1
  6411  000FA4  E102 EFF8  F001    	bz	_USBStdFeatureReqHandler
  6412  000FAA  0A02               	xorlw	2	; case 3
  6413  000FAC  E102 EFF8  F001    	bz	_USBStdFeatureReqHandler
  6414  000FB2  0A06               	xorlw	6	; case 5
  6415  000FB4  E0D6               	bz	i2l675
  6416  000FB6  0A03               	xorlw	3	; case 6
  6417  000FB8  E102 EFDA  F004    	bz	_USBStdGetDscHandler
  6418  000FBE  0A01               	xorlw	1	; case 7
  6419  000FC0  E0E6               	bz	i2l3662
  6420  000FC2  0A0F               	xorlw	15	; case 8
  6421  000FC4  E0D3               	bz	i2l3640
  6422  000FC6  0A01               	xorlw	1	; case 9
  6423  000FC8  E102 EF0D  F007    	bz	_USBStdSetCfgHandler
  6424  000FCE  0A03               	xorlw	3	; case 10
  6425  000FD0  E0D0               	bz	i2l3652
  6426  000FD2  0A01               	xorlw	1	; case 11
  6427  000FD4  E0D4               	bz	i2l684
  6428  000FD6  0A07               	xorlw	7	; case 12
  6429  000FD8  0012               	return	
  6430  000FDA                     __end_of_USBCheckStdRequest:
  6431                           	opt stack 0
  6432  000FDA                     PL78:
  6433                           	opt stack 17
  6434  000FDA  6A0A               	clrf	_inPipes+1,c	;volatile
  6435  000FDC  800C               	bsf	_inPipes+3,0,c	;volatile
  6436  000FDE  0E01               	movlw	1
  6437  000FE0  6E0D               	movwf	_inPipes+4,c	;volatile
  6438  000FE2  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6439  000FE4  0C01               	retlw	1
  6440  000FE6                     __end_ofPL78:
  6441                           	opt stack 0
  6442                           tblptru	equ	0xFF8
  6443                           tblptrh	equ	0xFF7
  6444                           tblptrl	equ	0xFF6
  6445                           tablat	equ	0xFF5
  6446                           prodh	equ	0xFF4
  6447                           prodl	equ	0xFF3
  6448                           intcon	equ	0xFF2
  6449                           postinc0	equ	0xFEE
  6450                           wreg	equ	0xFE8
  6451                           indf1	equ	0xFE7
  6452                           postdec1	equ	0xFE5
  6453                           fsr1h	equ	0xFE2
  6454                           fsr1l	equ	0xFE1
  6455                           indf2	equ	0xFDF
  6456                           postinc2	equ	0xFDE
  6457                           postdec2	equ	0xFDD
  6458                           plusw2	equ	0xFDB
  6459                           fsr2h	equ	0xFDA
  6460                           fsr2l	equ	0xFD9
  6461                           status	equ	0xFD8
  6462                           
  6463 ;; *************** function _USBStdSetCfgHandler *****************
  6464 ;; Defined at:
  6465 ;;		line 1968 in file "picLibs/usb_device.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  i               1   20[COMRAM] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 3D/2
  6476 ;;		On exit  : 3F/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6479 ;;      Params:         0       0       0       0
  6480 ;;      Locals:         1       0       0       0
  6481 ;;      Temps:          0       0       0       0
  6482 ;;      Totals:         1       0       0       0
  6483 ;;Total ram usage:        1 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    4
  6486 ;; This function calls:
  6487 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6488 ;;		i2_memset
  6489 ;; This function is called by:
  6490 ;;		_USBCheckStdRequest
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text35
  6495  000E1A                     __ptext35:
  6496                           	opt stack 0
  6497  000E1A                     _USBStdSetCfgHandler:
  6498                           	opt stack 17
  6499                           
  6500                           ;usb_device.c: 1970: uint8_t i;
  6501                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6502                           
  6503                           ;incstack = 0
  6504  000E1A  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6505                           
  6506                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  6507  000E1C  D840               	call	PL50	;call to abstracted procedure
  6508  000E1E  ECC9  F00C         	call	i2_memset	;wreg free
  6509                           
  6510                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6511  000E22  6A2A               	clrf	i2memset@p1,c
  6512  000E24  0E02               	movlw	2
  6513  000E26  6E2B               	movwf	i2memset@p1+1,c
  6514  000E28  6A2D               	clrf	i2memset@c+1,c
  6515  000E2A  6A2C               	clrf	i2memset@c,c
  6516  000E2C  6A2F               	clrf	i2memset@n+1,c
  6517  000E2E  0E30               	movlw	48
  6518  000E30  6E2E               	movwf	i2memset@n,c
  6519  000E32  ECC9  F00C         	call	i2_memset	;wreg free
  6520                           
  6521                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6522  000E36  8C64               	bsf	3940,6,c	;volatile
  6523                           
  6524                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6525  000E38  6A3E               	clrf	USBStdSetCfgHandler@i,c
  6526  000E3A                     i2l3370:
  6527                           
  6528                           ;usb_device.c: 1988: {
  6529                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6530  000E3A  503E               	movf	USBStdSetCfgHandler@i,w,c
  6531  000E3C  ECD5  F004         	call	PL88	;call to abstracted procedure
  6532                           
  6533                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6534  000E40  503E               	movf	USBStdSetCfgHandler@i,w,c
  6535  000E42  ECD0  F004         	call	PL80	;call to abstracted procedure
  6536  000E46  2A3E               	incf	USBStdSetCfgHandler@i,f,c
  6537  000E48  0E02               	movlw	2
  6538  000E4A  643E               	cpfsgt	USBStdSetCfgHandler@i,c
  6539  000E4C  D7F6               	goto	i2l3370
  6540                           
  6541                           ;usb_device.c: 1991: }
  6542                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6543  000E4E  0E91               	movlw	low _USBAlternateInterface
  6544  000E50  6E2A               	movwf	i2memset@p1,c
  6545  000E52  6A2B               	clrf	i2memset@p1+1,c
  6546  000E54  6A2D               	clrf	i2memset@c+1,c
  6547  000E56  6A2C               	clrf	i2memset@c,c
  6548  000E58  6A2F               	clrf	i2memset@n+1,c
  6549  000E5A  0E02               	movlw	2
  6550  000E5C  6E2E               	movwf	i2memset@n,c
  6551  000E5E  ECC9  F00C         	call	i2_memset	;wreg free
  6552                           
  6553                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6554  000E62  9C64               	bcf	3940,6,c	;volatile
  6555                           
  6556                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6557  000E64  0E08               	movlw	8
  6558  000E66  6E0F               	movwf	_pBDTEntryIn,c
  6559  000E68  0E02               	movlw	2
  6560  000E6A  6E10               	movwf	_pBDTEntryIn+1,c
  6561                           
  6562                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6563  000E6C  0E00               	movlw	0
  6564  000E6E  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  6565  000E70  0E02               	movlw	2
  6566                           
  6567                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6568  000E72  D81F               	call	PL94	;call to abstracted procedure
  6569                           
  6570                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6571  000E74  C232 F029          	movff	562,_USBActiveConfiguration	;volatile
  6572                           
  6573                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6574  000E78  5029               	movf	_USBActiveConfiguration,w,c	;volatile
  6575  000E7A  E104               	bnz	i2l3392
  6576                           
  6577                           ;usb_device.c: 2010: {
  6578                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6579  000E7C  0E10               	movlw	16
  6580  000E7E  0100               	movlb	0	; () banked
  6581  000E80  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6582                           
  6583                           ;usb_device.c: 2013: }
  6584  000E82  0C10               	retlw	16
  6585  000E84                     i2l3392:
  6586                           
  6587                           ;usb_device.c: 2014: else
  6588                           ;usb_device.c: 2015: {
  6589                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6590  000E84  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6591  000E86  0E01               	movlw	1
  6592  000E88  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6593  000E8A  0E29               	movlw	low _USBActiveConfiguration
  6594  000E8C  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6595  000E8E  ECEC  F003         	call	PL86	;call to abstracted procedure
  6596  000E92  ECD7  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6597                           
  6598                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6599  000E96  0E20               	movlw	32
  6600  000E98  0100               	movlb	0	; () banked
  6601  000E9A  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6602                           
  6603                           ; BSR set to: 0
  6604  000E9C  0C20               	retlw	32	;funcret
  6605  000E9E                     __end_of_USBStdSetCfgHandler:
  6606                           	opt stack 0
  6607  000E9E                     PL50:
  6608                           	opt stack 23
  6609  000E9E  0E54               	movlw	84
  6610  000EA0  6E2A               	movwf	i2memset@p1,c
  6611  000EA2  0E0F               	movlw	15
  6612  000EA4  6E2B               	movwf	i2memset@p1+1,c
  6613  000EA6  6A2D               	clrf	i2memset@c+1,c
  6614  000EA8  6A2C               	clrf	i2memset@c,c
  6615  000EAA  6A2F               	clrf	i2memset@n+1,c
  6616  000EAC  0E02               	movlw	2
  6617  000EAE  6E2E               	movwf	i2memset@n,c
  6618  000EB0  0C02               	retlw	2
  6619  000EB2                     __end_ofPL50:
  6620                           	opt stack 0
  6621  000EB2                     PL94:
  6622                           	opt stack 17
  6623  000EB2  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6624  000EB4  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6625  000EB8  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6626  000EBC  0012               	return	
  6627  000EBE                     __end_ofPL94:
  6628                           	opt stack 0
  6629                           tblptru	equ	0xFF8
  6630                           tblptrh	equ	0xFF7
  6631                           tblptrl	equ	0xFF6
  6632                           tablat	equ	0xFF5
  6633                           prodh	equ	0xFF4
  6634                           prodl	equ	0xFF3
  6635                           intcon	equ	0xFF2
  6636                           postinc0	equ	0xFEE
  6637                           wreg	equ	0xFE8
  6638                           indf1	equ	0xFE7
  6639                           postdec1	equ	0xFE5
  6640                           fsr1h	equ	0xFE2
  6641                           fsr1l	equ	0xFE1
  6642                           indf2	equ	0xFDF
  6643                           postinc2	equ	0xFDE
  6644                           postdec2	equ	0xFDD
  6645                           plusw2	equ	0xFDB
  6646                           fsr2h	equ	0xFDA
  6647                           fsr2l	equ	0xFD9
  6648                           status	equ	0xFD8
  6649                           
  6650 ;; *************** function i2_memset *****************
  6651 ;; Defined at:
  6652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  p1              2    0[COMRAM] PTR void 
  6655 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6656 ;;  c               2    2[COMRAM] int 
  6657 ;;  n               2    4[COMRAM] unsigned int 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  memset          2    6[COMRAM] PTR unsigned char 
  6660 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  2    0[COMRAM] PTR void 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/F
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6670 ;;      Params:         6       0       0       0
  6671 ;;      Locals:         2       0       0       0
  6672 ;;      Temps:          0       0       0       0
  6673 ;;      Totals:         8       0       0       0
  6674 ;;Total ram usage:        8 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_USBStdSetCfgHandler
  6680 ;;		i2_USBDeviceInit
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text36
  6685  001992                     __ptext36:
  6686                           	opt stack 0
  6687  001992                     i2_memset:
  6688                           	opt stack 23
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;incstack = 0
  6692  001992  C02A  F030         	movff	i2memset@p1,i2memset@p
  6693  001996  C02B  F031         	movff	i2memset@p1+1,i2memset@p+1
  6694  00199A  D008               	goto	i2l3302
  6695  00199C                     i2l3298:
  6696  00199C  C030  FFD9         	movff	i2memset@p,fsr2l
  6697  0019A0  C031  FFDA         	movff	i2memset@p+1,fsr2h
  6698  0019A4  C02C  FFDF         	movff	i2memset@c,indf2
  6699  0019A8  4A30               	infsnz	i2memset@p,f,c
  6700  0019AA  2A31               	incf	i2memset@p+1,f,c
  6701  0019AC                     i2l3302:
  6702  0019AC  062E               	decf	i2memset@n,f,c
  6703  0019AE  A0D8               	btfss	status,0,c
  6704  0019B0  062F               	decf	i2memset@n+1,f,c
  6705  0019B2  282E               	incf	i2memset@n,w,c
  6706  0019B4  E1F3               	bnz	i2l3298
  6707  0019B6  282F               	incf	i2memset@n+1,w,c
  6708  0019B8  E1F1               	bnz	i2l3298
  6709  0019BA  0012               	return		;funcret
  6710  0019BC                     __end_ofi2_memset:
  6711                           	opt stack 0
  6712                           tblptru	equ	0xFF8
  6713                           tblptrh	equ	0xFF7
  6714                           tblptrl	equ	0xFF6
  6715                           tablat	equ	0xFF5
  6716                           prodh	equ	0xFF4
  6717                           prodl	equ	0xFF3
  6718                           intcon	equ	0xFF2
  6719                           postinc0	equ	0xFEE
  6720                           wreg	equ	0xFE8
  6721                           indf1	equ	0xFE7
  6722                           postdec1	equ	0xFE5
  6723                           fsr1h	equ	0xFE2
  6724                           fsr1l	equ	0xFE1
  6725                           indf2	equ	0xFDF
  6726                           postinc2	equ	0xFDE
  6727                           postdec2	equ	0xFDD
  6728                           plusw2	equ	0xFDB
  6729                           fsr2h	equ	0xFDA
  6730                           fsr2l	equ	0xFD9
  6731                           status	equ	0xFD8
  6732                           
  6733 ;; *************** function _USBStdGetStatusHandler *****************
  6734 ;; Defined at:
  6735 ;;		line 2129 in file "picLibs/usb_device.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;		None
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  p               2    0[COMRAM] PTR struct __BDT
  6740 ;;		 -> RAM(767), NULL(0), BDT(48), 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6745 ;; Tracked objects:
  6746 ;;		On entry : 3D/2
  6747 ;;		On exit  : 3F/2
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6750 ;;      Params:         0       0       0       0
  6751 ;;      Locals:         2       0       0       0
  6752 ;;      Temps:          0       0       0       0
  6753 ;;      Totals:         2       0       0       0
  6754 ;;Total ram usage:        2 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; This function calls:
  6757 ;;		Nothing
  6758 ;; This function is called by:
  6759 ;;		_USBCheckStdRequest
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text37
  6764  00125C                     __ptext37:
  6765                           	opt stack 0
  6766  00125C                     _USBStdGetStatusHandler:
  6767                           	opt stack 21
  6768                           
  6769                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6770                           
  6771                           ;incstack = 0
  6772  00125C  0102               	movlb	2	; () banked
  6773  00125E  6B38               	clrf	56,b	;volatile
  6774                           
  6775                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6776  001260  6B39               	clrf	57,b	;volatile
  6777                           
  6778                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6779  001262  D020               	goto	i2l3442
  6780  001264                     i2l613:
  6781                           
  6782                           ; BSR set to: 2
  6783                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6784  001264  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6785                           
  6786                           ; BSR set to: 2
  6787                           ;usb_device.c: 2145: }
  6788                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6789                           
  6790                           ;usb_device.c: 2142: if(0 == 1)
  6791  001266  0425               	decf	_RemoteWakeup,w,c	;volatile
  6792  001268  E124               	bnz	i2l616
  6793                           
  6794                           ; BSR set to: 2
  6795                           ;usb_device.c: 2148: {
  6796                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6797  00126A  8338               	bsf	56,1,b	;volatile
  6798  00126C  D022               	goto	i2l616
  6799  00126E                     i2l617:
  6800                           
  6801                           ; BSR set to: 2
  6802                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6803  00126E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6804                           
  6805                           ;usb_device.c: 2154: break;
  6806  001270  D020               	goto	i2l616
  6807  001272                     i2l618:
  6808                           
  6809                           ; BSR set to: 2
  6810                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6811  001272  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6812                           
  6813                           ;usb_device.c: 2160: {
  6814                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6815                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6816  001274  BF34               	btfsc	52,7,b	;volatile
  6817  001276  D004               	goto	i2l3432
  6818                           
  6819                           ; BSR set to: 2
  6820                           ;usb_device.c: 2164: {
  6821                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6822  001278  ECBA  F002         	call	PL58	;call to abstracted procedure
  6823  00127C  0F60               	addlw	low _pBDTEntryOut
  6824  00127E  D003               	goto	L5
  6825  001280                     i2l3432:
  6826                           
  6827                           ; BSR set to: 2
  6828                           ;usb_device.c: 2167: else
  6829                           ;usb_device.c: 2168: {
  6830                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6831  001280  ECBA  F002         	call	PL58	;call to abstracted procedure
  6832  001284  0F0F               	addlw	low _pBDTEntryIn
  6833  001286                     L5:
  6834  001286  6ED9               	movwf	fsr2l,c
  6835  001288  6ADA               	clrf	fsr2h,c
  6836  00128A  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  6837  00128E  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  6838                           
  6839                           ; BSR set to: 2
  6840                           ;usb_device.c: 2170: }
  6841                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6842  001292  D818               	call	PL100	;call to abstracted procedure
  6843  001294  AEDF               	btfss	indf2,7,c
  6844  001296  D00D               	goto	i2l616
  6845                           
  6846                           ; BSR set to: 2
  6847  001298  D815               	call	PL100	;call to abstracted procedure
  6848  00129A  A4DF               	btfss	indf2,2,c
  6849  00129C  D00A               	goto	i2l616
  6850                           
  6851                           ; BSR set to: 2
  6852                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6853  00129E  0E01               	movlw	1
  6854  0012A0  6F38               	movwf	56,b	;volatile
  6855  0012A2  D007               	goto	i2l616
  6856  0012A4                     i2l3442:
  6857                           
  6858                           ; BSR set to: 2
  6859  0012A4  5130               	movf	48,w,b	;volatile
  6860  0012A6  0B1F               	andlw	31
  6861                           
  6862                           ; Switch size 1, requested type "space"
  6863                           ; Number of cases is 3, Range of values is 0 to 2
  6864                           ; switch strategies available:
  6865                           ; Name         Instructions Cycles
  6866                           ; simple_byte           10     6 (average)
  6867                           ;	Chosen strategy is simple_byte
  6868  0012A8  E0DD               	bz	i2l613
  6869  0012AA  0A01               	xorlw	1	; case 1
  6870  0012AC  E0E0               	bz	i2l617
  6871  0012AE  0A03               	xorlw	3	; case 2
  6872  0012B0  E0E0               	bz	i2l618
  6873  0012B2                     i2l616:
  6874                           
  6875                           ; BSR set to: 2
  6876                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6877  0012B2  AE0C               	btfss	_inPipes+3,7,c	;volatile
  6878  0012B4  0012               	return	
  6879                           
  6880                           ; BSR set to: 2
  6881                           ;usb_device.c: 2179: {
  6882                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6883  0012B6  0E38               	movlw	56
  6884  0012B8  6E09               	movwf	_inPipes,c	;volatile
  6885  0012BA  0E02               	movlw	2
  6886  0012BC  6E0A               	movwf	_inPipes+1,c	;volatile
  6887                           
  6888                           ; BSR set to: 2
  6889                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6890  0012BE  800C               	bsf	_inPipes+3,0,c	;volatile
  6891                           
  6892                           ; BSR set to: 2
  6893                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6894  0012C0  6E0D               	movwf	_inPipes+4,c	;volatile
  6895                           
  6896                           ; BSR set to: 2
  6897  0012C2  0C02               	retlw	2	;funcret
  6898  0012C4                     __end_of_USBStdGetStatusHandler:
  6899                           	opt stack 0
  6900  0012C4                     PL100:
  6901                           	opt stack 21
  6902  0012C4  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6903  0012C8  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6904  0012CC  0012               	return	
  6905  0012CE                     __end_ofPL100:
  6906                           	opt stack 0
  6907                           tblptru	equ	0xFF8
  6908                           tblptrh	equ	0xFF7
  6909                           tblptrl	equ	0xFF6
  6910                           tablat	equ	0xFF5
  6911                           prodh	equ	0xFF4
  6912                           prodl	equ	0xFF3
  6913                           intcon	equ	0xFF2
  6914                           postinc0	equ	0xFEE
  6915                           wreg	equ	0xFE8
  6916                           indf1	equ	0xFE7
  6917                           postdec1	equ	0xFE5
  6918                           fsr1h	equ	0xFE2
  6919                           fsr1l	equ	0xFE1
  6920                           indf2	equ	0xFDF
  6921                           postinc2	equ	0xFDE
  6922                           postdec2	equ	0xFDD
  6923                           plusw2	equ	0xFDB
  6924                           fsr2h	equ	0xFDA
  6925                           fsr2l	equ	0xFD9
  6926                           status	equ	0xFD8
  6927                           
  6928 ;; *************** function _USBStdGetDscHandler *****************
  6929 ;; Defined at:
  6930 ;;		line 2043 in file "picLibs/usb_device.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;		None
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1    wreg      void 
  6937 ;; Registers used:
  6938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6939 ;; Tracked objects:
  6940 ;;		On entry : 3D/2
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6944 ;;      Params:         0       0       0       0
  6945 ;;      Locals:         0       0       0       0
  6946 ;;      Temps:          2       0       0       0
  6947 ;;      Totals:         2       0       0       0
  6948 ;;Total ram usage:        2 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_USBCheckStdRequest
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text38
  6958  0009B4                     __ptext38:
  6959                           	opt stack 0
  6960  0009B4                     _USBStdGetDscHandler:
  6961                           	opt stack 21
  6962                           
  6963                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6964                           
  6965                           ; BSR set to: 2
  6966                           ;incstack = 0
  6967  0009B4  0E80               	movlw	128
  6968  0009B6  0102               	movlb	2	; () banked
  6969  0009B8  1930               	xorwf	48,w,b	;volatile
  6970  0009BA  A4D8               	btfss	status,2,c
  6971  0009BC  0012               	return	
  6972                           
  6973                           ; BSR set to: 2
  6974                           ;usb_device.c: 2046: {
  6975                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6976  0009BE  0EC0               	movlw	192
  6977  0009C0  6E0C               	movwf	_inPipes+3,c	;volatile
  6978                           
  6979                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6980  0009C2  D03D               	goto	i2l3420
  6981  0009C4                     i2l3400:
  6982                           
  6983                           ; BSR set to: 2
  6984                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6985  0009C4  0EB0               	movlw	low _device_dsc
  6986  0009C6  6E09               	movwf	_inPipes,c	;volatile
  6987  0009C8  5009               	movf	_inPipes,w,c	;volatile
  6988  0009CA  A4D8               	btfss	status,2,c
  6989  0009CC  0E03               	movlw	high __smallconst
  6990  0009CE  6E0A               	movwf	_inPipes+1,c	;volatile
  6991                           
  6992                           ; BSR set to: 2
  6993                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6994  0009D0  6A0E               	clrf	_inPipes+5,c	;volatile
  6995  0009D2  0E12               	movlw	18
  6996  0009D4  6E0D               	movwf	_inPipes+4,c	;volatile
  6997                           
  6998                           ;usb_device.c: 2058: break;
  6999  0009D6  0C12               	retlw	18
  7000  0009D8                     i2l3404:
  7001                           
  7002                           ; BSR set to: 2
  7003                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7004  0009D8  5132               	movf	50,w,b	;volatile
  7005  0009DA  E116               	bnz	i2l603
  7006                           
  7007                           ; BSR set to: 2
  7008                           ;usb_device.c: 2064: {
  7009                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7010  0009DC  5132               	movf	50,w,b	;volatile
  7011  0009DE  0F04               	addlw	low _USB_CD_Ptr
  7012  0009E0  D848               	call	PL48	;call to abstracted procedure
  7013                           
  7014                           ; BSR set to: 2
  7015                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7016  0009E2  0E02               	movlw	2
  7017  0009E4  D83A               	call	PL32	;call to abstracted procedure
  7018  0009E6  64F7               	cpfsgt	tblptrh,c
  7019  0009E8  D003               	bra	i2u213_47
  7020  0009EA  0008               	tblrd		*
  7021  0009EC  50F5               	movf	tablat,w,c
  7022  0009EE  D001               	bra	i2u213_40
  7023  0009F0                     i2u213_47:
  7024  0009F0  D82E               	call	PL18	;call to abstracted procedure
  7025  0009F2                     i2u213_40:
  7026  0009F2  6E0D               	movwf	_inPipes+4,c	;volatile
  7027                           
  7028                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7029  0009F4  0E03               	movlw	3
  7030  0009F6  D831               	call	PL32	;call to abstracted procedure
  7031  0009F8  64F7               	cpfsgt	tblptrh,c
  7032  0009FA  D003               	bra	i2u214_47
  7033  0009FC  0008               	tblrd		*
  7034  0009FE  50F5               	movf	tablat,w,c
  7035  000A00  D001               	bra	i2u214_40
  7036  000A02                     i2u214_47:
  7037  000A02  D825               	call	PL18	;call to abstracted procedure
  7038  000A04                     i2u214_40:
  7039  000A04  6E0E               	movwf	_inPipes+5,c	;volatile
  7040                           
  7041                           ;usb_device.c: 2076: }
  7042  000A06  0012               	return	
  7043  000A08                     i2l603:
  7044                           
  7045                           ; BSR set to: 2
  7046                           ;usb_device.c: 2077: else
  7047                           ;usb_device.c: 2078: {
  7048                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7049  000A08  6A0C               	clrf	_inPipes+3,c	;volatile
  7050  000A0A  0012               	return	
  7051  000A0C                     i2l3412:
  7052                           
  7053                           ; BSR set to: 2
  7054                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7055  000A0C  0E03               	movlw	3
  7056  000A0E  6132               	cpfslt	50,b	;volatile
  7057  000A10  D012               	goto	i2l606
  7058                           
  7059                           ; BSR set to: 2
  7060                           ;usb_device.c: 2087: {
  7061                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7062  000A12  5132               	movf	50,w,b	;volatile
  7063  000A14  0F01               	addlw	low _USB_SD_Ptr
  7064  000A16  D82D               	call	PL48	;call to abstracted procedure
  7065                           
  7066                           ; BSR set to: 2
  7067                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7068  000A18  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
  7069  000A1C  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7070  000A20  6AF8               	clrf	tblptru,c
  7071  000A22  0E02               	movlw	(high __ramtop+-1)
  7072  000A24  64F7               	cpfsgt	tblptrh,c
  7073  000A26  D003               	bra	i2u216_47
  7074  000A28  0008               	tblrd		*
  7075  000A2A  50F5               	movf	tablat,w,c
  7076  000A2C  D001               	bra	i2u216_40
  7077  000A2E                     i2u216_47:
  7078  000A2E  D80F               	call	PL18	;call to abstracted procedure
  7079  000A30                     i2u216_40:
  7080  000A30  6E0D               	movwf	_inPipes+4,c	;volatile
  7081  000A32  6A0E               	clrf	_inPipes+5,c	;volatile
  7082                           
  7083                           ;usb_device.c: 2092: }
  7084  000A34  0012               	return	
  7085  000A36                     i2l606:
  7086                           
  7087                           ; BSR set to: 2
  7088                           ;usb_device.c: 2102: else
  7089                           ;usb_device.c: 2103: {
  7090                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7091  000A36  6A0C               	clrf	_inPipes+3,c	;volatile
  7092  000A38  0012               	return	
  7093  000A3A                     i2l608:
  7094                           
  7095                           ; BSR set to: 2
  7096                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7097  000A3A  6A0C               	clrf	_inPipes+3,c	;volatile
  7098                           
  7099                           ;usb_device.c: 2109: break;
  7100  000A3C  0012               	return	
  7101  000A3E                     i2l3420:
  7102                           
  7103                           ; BSR set to: 2
  7104  000A3E  5133               	movf	51,w,b	;volatile
  7105                           
  7106                           ; Switch size 1, requested type "space"
  7107                           ; Number of cases is 3, Range of values is 1 to 3
  7108                           ; switch strategies available:
  7109                           ; Name         Instructions Cycles
  7110                           ; simple_byte           10     6 (average)
  7111                           ;	Chosen strategy is simple_byte
  7112  000A40  0A01               	xorlw	1	; case 1
  7113  000A42  E0C0               	bz	i2l3400
  7114  000A44  0A03               	xorlw	3	; case 2
  7115  000A46  E0C8               	bz	i2l3404
  7116  000A48  0A01               	xorlw	1	; case 3
  7117  000A4A  E0E0               	bz	i2l3412
  7118  000A4C  D7F6               	goto	i2l608
  7119  000A4E                     __end_of_USBStdGetDscHandler:
  7120                           	opt stack 0
  7121  000A4E                     PL18:
  7122                           	opt stack 19
  7123  000A4E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7124  000A52  CFF7 FFE2          	movff	tblptrh,fsr1h
  7125  000A56  50E7               	movf	indf1,w,c
  7126  000A58  0012               	return	
  7127  000A5A                     __end_ofPL18:
  7128                           	opt stack 0
  7129  000A5A                     PL32:
  7130                           	opt stack 21
  7131  000A5A  2409               	addwf	_inPipes,w,c	;volatile
  7132  000A5C  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7133  000A5E  0E00               	movlw	0
  7134  000A60  200A               	addwfc	_inPipes+1,w,c	;volatile
  7135  000A62  6E2B               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7136  000A64  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7137  000A68  C02B  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7138  000A6C  6AF8               	clrf	tblptru,c
  7139  000A6E  0E02               	movlw	(high __ramtop+-1)
  7140  000A70  0012               	return	
  7141  000A72                     __end_ofPL32:
  7142                           	opt stack 0
  7143  000A72                     PL48:
  7144                           	opt stack 21
  7145  000A72  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7146  000A74  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7147  000A78                     	if	1	;There is more than 1 active tblptr byte
  7148  000A78  0E03               	movlw	high __smallconst
  7149  000A7A  6EF7               	movwf	tblptrh,c
  7150  000A7C                     	endif
  7151  000A7C                     	if	0	;tblptru may be non-zero
  7152  000A7C                     	endif
  7153  000A7C                     	if	0	;tblptru may be non-zero
  7154  000A7C                     	endif
  7155  000A7C  0009               	tblrd		*+
  7156  000A7E  CFF5 F009          	movff	tablat,_inPipes	;volatile
  7157  000A82  6E0A               	movwf	_inPipes+1,c	;volatile
  7158  000A84  0012               	return	
  7159  000A86                     __end_ofPL48:
  7160                           	opt stack 0
  7161                           tblptru	equ	0xFF8
  7162                           tblptrh	equ	0xFF7
  7163                           tblptrl	equ	0xFF6
  7164                           tablat	equ	0xFF5
  7165                           prodh	equ	0xFF4
  7166                           prodl	equ	0xFF3
  7167                           intcon	equ	0xFF2
  7168                           postinc0	equ	0xFEE
  7169                           wreg	equ	0xFE8
  7170                           indf1	equ	0xFE7
  7171                           postdec1	equ	0xFE5
  7172                           fsr1h	equ	0xFE2
  7173                           fsr1l	equ	0xFE1
  7174                           indf2	equ	0xFDF
  7175                           postinc2	equ	0xFDE
  7176                           postdec2	equ	0xFDD
  7177                           plusw2	equ	0xFDB
  7178                           fsr2h	equ	0xFDA
  7179                           fsr2l	equ	0xFD9
  7180                           status	equ	0xFD8
  7181                           
  7182 ;; *************** function _USBStdFeatureReqHandler *****************
  7183 ;; Defined at:
  7184 ;;		line 2754 in file "picLibs/usb_device.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  p               2   25[COMRAM] PTR struct __BDT
  7189 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7190 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  7191 ;;		 -> UEP0(1), 
  7192 ;;  current_ep_d    1   24[COMRAM] struct .
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      void 
  7195 ;; Registers used:
  7196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7197 ;; Tracked objects:
  7198 ;;		On entry : 3D/2
  7199 ;;		On exit  : 3D/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7202 ;;      Params:         0       0       0       0
  7203 ;;      Locals:         5       0       0       0
  7204 ;;      Temps:          2       0       0       0
  7205 ;;      Totals:         7       0       0       0
  7206 ;;Total ram usage:        7 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:    4
  7209 ;; This function calls:
  7210 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7211 ;; This function is called by:
  7212 ;;		_USBCheckStdRequest
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text39
  7217  0003F0                     __ptext39:
  7218                           	opt stack 0
  7219  0003F0                     _USBStdFeatureReqHandler:
  7220                           	opt stack 17
  7221                           
  7222                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7223                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7224                           ;usb_device.c: 2761: unsigned char* pUEP;
  7225                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7226                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7227                           
  7228                           ;incstack = 0
  7229  0003F0  0102               	movlb	2	; () banked
  7230  0003F2  0532               	decf	50,w,b	;volatile
  7231  0003F4  E10B               	bnz	i2l3460
  7232                           
  7233                           ; BSR set to: 2
  7234  0003F6  5130               	movf	48,w,b	;volatile
  7235  0003F8  0B1F               	andlw	31
  7236  0003FA  E108               	bnz	i2l3460
  7237                           
  7238                           ; BSR set to: 2
  7239                           ;usb_device.c: 2801: {
  7240                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7241  0003FC  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7242                           
  7243                           ; BSR set to: 2
  7244                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7245  0003FE  0E03               	movlw	3
  7246  000400  1931               	xorwf	49,w,b	;volatile
  7247  000402  E103               	bnz	i2l691
  7248                           
  7249                           ; BSR set to: 2
  7250                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7251  000404  0E01               	movlw	1
  7252  000406  6E25               	movwf	_RemoteWakeup,c	;volatile
  7253  000408  D001               	goto	i2l3460
  7254  00040A                     i2l691:
  7255                           
  7256                           ; BSR set to: 2
  7257                           ;usb_device.c: 2805: else
  7258                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7259  00040A  6A25               	clrf	_RemoteWakeup,c	;volatile
  7260  00040C                     i2l3460:
  7261                           
  7262                           ; BSR set to: 2
  7263                           ;usb_device.c: 2807: }
  7264                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7265                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7266                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7267                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7268  00040C  5132               	movf	50,w,b	;volatile
  7269  00040E  A4D8               	btfss	status,2,c
  7270  000410  0012               	return	
  7271                           
  7272                           ; BSR set to: 2
  7273  000412  5130               	movf	48,w,b	;volatile
  7274  000414  0B1F               	andlw	31
  7275  000416  0A02               	xorlw	2
  7276  000418  A4D8               	btfss	status,2,c
  7277  00041A  0012               	return	
  7278                           
  7279                           ; BSR set to: 2
  7280  00041C  5134               	movf	52,w,b	;volatile
  7281  00041E  0B0F               	andlw	15
  7282  000420  B4D8               	btfsc	status,2,c
  7283  000422  0012               	return	
  7284                           
  7285                           ; BSR set to: 2
  7286  000424  5134               	movf	52,w,b	;volatile
  7287  000426  0B0F               	andlw	15
  7288  000428  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7289  00042A  0E03               	movlw	3
  7290  00042C  603E               	cpfslt	??_USBStdFeatureReqHandler,c
  7291  00042E  0C03               	retlw	3
  7292                           
  7293                           ; BSR set to: 2
  7294  000430  0E20               	movlw	32
  7295  000432  0100               	movlb	0	; () banked
  7296  000434  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7297  000436  A4D8               	btfss	status,2,c
  7298  000438  0012               	return	
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;usb_device.c: 2814: {
  7302                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7303  00043A  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7304                           
  7305                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7306  00043C  0102               	movlb	2	; () banked
  7307  00043E  BF34               	btfsc	52,7,b	;volatile
  7308  000440  D007               	goto	i2l3476
  7309                           
  7310                           ; BSR set to: 2
  7311                           ;usb_device.c: 2821: {
  7312                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7313  000442  5134               	movf	52,w,b	;volatile
  7314  000444  0B0F               	andlw	15
  7315  000446  EC84  F005         	call	PL24	;call to abstracted procedure
  7316                           
  7317                           ; BSR set to: 2
  7318                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7319  00044A  D88B               	call	PL56	;call to abstracted procedure
  7320  00044C  0F70               	addlw	low _ep_data_out
  7321  00044E  D006               	goto	L6
  7322  000450                     i2l3476:
  7323                           
  7324                           ; BSR set to: 2
  7325                           ;usb_device.c: 2825: else
  7326                           ;usb_device.c: 2826: {
  7327                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7328  000450  5134               	movf	52,w,b	;volatile
  7329  000452  0B0F               	andlw	15
  7330  000454  EC8A  F005         	call	PL26	;call to abstracted procedure
  7331                           
  7332                           ; BSR set to: 2
  7333                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7334  000458  D884               	call	PL56	;call to abstracted procedure
  7335  00045A  0F73               	addlw	low _ep_data_in
  7336  00045C                     L6:
  7337  00045C  6ED9               	movwf	fsr2l,c
  7338  00045E  6ADA               	clrf	fsr2h,c
  7339  000460  50DF               	movf	indf2,w,c
  7340  000462  6E42               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7341                           
  7342                           ; BSR set to: 2
  7343                           ;usb_device.c: 2829: }
  7344                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7345  000464  B042               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7346  000466  D003               	goto	i2l3484
  7347                           
  7348                           ; BSR set to: 2
  7349                           ;usb_device.c: 2836: {
  7350                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7351  000468  0EFB               	movlw	251
  7352  00046A  1643               	andwf	USBStdFeatureReqHandler@p,f,c
  7353  00046C  D002               	goto	L7
  7354  00046E                     i2l3484:
  7355                           
  7356                           ; BSR set to: 2
  7357                           ;usb_device.c: 2839: else
  7358                           ;usb_device.c: 2840: {
  7359                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7360  00046E  0E04               	movlw	4
  7361  000470  1243               	iorwf	USBStdFeatureReqHandler@p,f,c
  7362  000472                     L7:
  7363  000472  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7364                           
  7365                           ; BSR set to: 2
  7366                           ;usb_device.c: 2842: }
  7367                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7368  000474  BF34               	btfsc	52,7,b	;volatile
  7369  000476  D003               	goto	i2l3490
  7370                           
  7371                           ; BSR set to: 2
  7372                           ;usb_device.c: 2848: {
  7373                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7374  000478  D87D               	call	PL58	;call to abstracted procedure
  7375  00047A  0F60               	addlw	low _pBDTEntryOut
  7376  00047C  D002               	goto	L8
  7377  00047E                     i2l3490:
  7378                           
  7379                           ; BSR set to: 2
  7380                           ;usb_device.c: 2851: else
  7381                           ;usb_device.c: 2852: {
  7382                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7383  00047E  D87A               	call	PL58	;call to abstracted procedure
  7384  000480  0F0F               	addlw	low _pBDTEntryIn
  7385  000482                     L8:
  7386  000482  6ED9               	movwf	fsr2l,c
  7387  000484  6ADA               	clrf	fsr2h,c
  7388  000486  C043  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7389  00048A  C044  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7390                           
  7391                           ; BSR set to: 2
  7392                           ;usb_device.c: 2854: }
  7393                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7394  00048E  0E03               	movlw	3
  7395  000490  1931               	xorwf	49,w,b	;volatile
  7396  000492  E114               	bnz	i2l3502
  7397                           
  7398                           ; BSR set to: 2
  7399                           ;usb_device.c: 2858: {
  7400                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7401  000494  D856               	call	PL22	;call to abstracted procedure
  7402  000496  AEDF               	btfss	indf2,7,c
  7403  000498  D00B               	goto	i2l701
  7404                           
  7405                           ; BSR set to: 2
  7406                           ;usb_device.c: 2860: {
  7407                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7408  00049A  BF34               	btfsc	52,7,b	;volatile
  7409  00049C  D003               	goto	i2l3500
  7410                           
  7411                           ; BSR set to: 2
  7412                           ;usb_device.c: 2864: {
  7413                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7414  00049E  D86F               	call	PL60	;call to abstracted procedure
  7415  0004A0  0F70               	addlw	low _ep_data_out
  7416  0004A2  D002               	goto	L9
  7417  0004A4                     i2l3500:
  7418                           
  7419                           ; BSR set to: 2
  7420                           ;usb_device.c: 2867: else
  7421                           ;usb_device.c: 2868: {
  7422                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7423  0004A4  D86C               	call	PL60	;call to abstracted procedure
  7424  0004A6  0F73               	addlw	low _ep_data_in
  7425  0004A8                     L9:
  7426  0004A8  6ED9               	movwf	fsr2l,c
  7427  0004AA  6ADA               	clrf	fsr2h,c
  7428  0004AC  0100               	movlb	0	; () banked
  7429  0004AE  82DF               	bsf	indf2,1,c
  7430  0004B0                     i2l701:
  7431                           
  7432                           ;usb_device.c: 2870: }
  7433                           ;usb_device.c: 2871: }
  7434                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7435  0004B0  D848               	call	PL22	;call to abstracted procedure
  7436  0004B2  0E00               	movlw	0
  7437  0004B4  84DB               	bsf	plusw2,2,c
  7438                           
  7439                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7440  0004B6  D845               	call	PL22	;call to abstracted procedure
  7441  0004B8  8EDB               	bsf	plusw2,7,c
  7442                           
  7443                           ;usb_device.c: 2876: }
  7444  0004BA  0C00               	retlw	0
  7445  0004BC                     i2l3502:
  7446                           
  7447                           ; BSR set to: 2
  7448                           ;usb_device.c: 2877: else
  7449                           ;usb_device.c: 2878: {
  7450                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7451  0004BC  0E04               	movlw	4
  7452  0004BE  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7453  0004C0  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7454                           
  7455                           ; BSR set to: 2
  7456                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7457  0004C2  D83F               	call	PL22	;call to abstracted procedure
  7458  0004C4  AEDF               	btfss	indf2,7,c
  7459  0004C6  D00A               	goto	i2l3512
  7460                           
  7461                           ; BSR set to: 2
  7462                           ;usb_device.c: 2885: {
  7463                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7464  0004C8  D83C               	call	PL22	;call to abstracted procedure
  7465  0004CA  0E7F               	movlw	127
  7466  0004CC  16DF               	andwf	indf2,f,c
  7467                           
  7468                           ; BSR set to: 2
  7469                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7470  0004CE  D839               	call	PL22	;call to abstracted procedure
  7471  0004D0  0E00               	movlw	0
  7472  0004D2  8CDB               	bsf	plusw2,6,c
  7473                           
  7474                           ; BSR set to: 2
  7475                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7476  0004D4  D83B               	call	PL36	;call to abstracted procedure
  7477  0004D6  ECD7  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7478                           
  7479                           ;usb_device.c: 2891: }
  7480  0004DA  D003               	goto	i2l3514
  7481  0004DC                     i2l3512:
  7482                           
  7483                           ; BSR set to: 2
  7484                           ;usb_device.c: 2892: else
  7485                           ;usb_device.c: 2893: {
  7486                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7487  0004DC  D832               	call	PL22	;call to abstracted procedure
  7488  0004DE  0E00               	movlw	0
  7489  0004E0  8CDB               	bsf	plusw2,6,c
  7490  0004E2                     i2l3514:
  7491                           
  7492                           ;usb_device.c: 2896: }
  7493                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7494  0004E2  0E04               	movlw	4
  7495  0004E4  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7496  0004E6  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7497                           
  7498                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7499  0004E8  B242               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7500  0004EA  D003               	goto	i2l709
  7501  0004EC  D82A               	call	PL22	;call to abstracted procedure
  7502  0004EE  AEDF               	btfss	indf2,7,c
  7503  0004F0  D013               	goto	i2l3528
  7504  0004F2                     i2l709:
  7505                           
  7506                           ;usb_device.c: 2907: {
  7507                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7508  0004F2  0102               	movlb	2	; () banked
  7509  0004F4  BF34               	btfsc	52,7,b	;volatile
  7510  0004F6  D003               	goto	i2l3522
  7511                           
  7512                           ; BSR set to: 2
  7513                           ;usb_device.c: 2909: {
  7514                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7515  0004F8  D842               	call	PL60	;call to abstracted procedure
  7516  0004FA  0F70               	addlw	low _ep_data_out
  7517  0004FC  D002               	goto	L10
  7518  0004FE                     i2l3522:
  7519                           
  7520                           ; BSR set to: 2
  7521                           ;usb_device.c: 2912: else
  7522                           ;usb_device.c: 2913: {
  7523                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7524  0004FE  D83F               	call	PL60	;call to abstracted procedure
  7525  000500  0F73               	addlw	low _ep_data_in
  7526  000502                     L10:
  7527  000502  6ED9               	movwf	fsr2l,c
  7528  000504  6ADA               	clrf	fsr2h,c
  7529  000506  0100               	movlb	0	; () banked
  7530  000508  92DF               	bcf	indf2,1,c
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;usb_device.c: 2915: }
  7534                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7535  00050A  D81B               	call	PL22	;call to abstracted procedure
  7536  00050C  0E3B               	movlw	59
  7537  00050E  16DF               	andwf	indf2,f,c
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7541  000510  D81D               	call	PL36	;call to abstracted procedure
  7542  000512  ECD7  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7543                           
  7544                           ;usb_device.c: 2921: }
  7545  000516  D003               	goto	i2l3530
  7546  000518                     i2l3528:
  7547                           
  7548                           ;usb_device.c: 2922: else
  7549                           ;usb_device.c: 2923: {
  7550                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7551  000518  D814               	call	PL22	;call to abstracted procedure
  7552  00051A  0E3B               	movlw	59
  7553  00051C  16DF               	andwf	indf2,f,c
  7554  00051E                     i2l3530:
  7555                           
  7556                           ;usb_device.c: 2926: }
  7557                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7558  00051E  0102               	movlb	2	; () banked
  7559  000520  5134               	movf	52,w,b	;volatile
  7560  000522  0B0F               	andlw	15
  7561  000524  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7562  000526  6A3F               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  7563  000528  0E53               	movlw	83
  7564  00052A  243E               	addwf	??_USBStdFeatureReqHandler,w,c
  7565  00052C  6E40               	movwf	USBStdFeatureReqHandler@pUEP,c
  7566  00052E  0E0F               	movlw	15
  7567  000530  203F               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  7568  000532  6E41               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7569                           
  7570                           ; BSR set to: 2
  7571                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7572  000534  C040  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7573  000538  C041  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7574  00053C  0EFE               	movlw	254
  7575  00053E  16DF               	andwf	indf2,f,c
  7576  000540  0CFE               	retlw	254	;funcret
  7577  000542                     __end_of_USBStdFeatureReqHandler:
  7578                           	opt stack 0
  7579  000542                     PL22:
  7580                           	opt stack 17
  7581  000542  C043  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7582  000546  C044  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7583  00054A  0012               	return	
  7584  00054C                     __end_ofPL22:
  7585                           	opt stack 0
  7586  00054C                     PL36:
  7587                           	opt stack 17
  7588  00054C  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7589  00054E  0E05               	movlw	5
  7590  000550  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7591  000552  C043  F038         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7592  000556  C044  F039         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7593  00055A  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7594  00055C  0E02               	movlw	2
  7595  00055E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7596  000560  0C02               	retlw	2
  7597  000562                     __end_ofPL36:
  7598                           	opt stack 0
  7599  000562                     PL56:
  7600                           	opt stack 17
  7601  000562  CFDE F043          	movff	postinc2,USBStdFeatureReqHandler@p
  7602  000566  CFDD F044          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7603  00056A  5134               	movf	52,w,b	;volatile
  7604  00056C  0B0F               	andlw	15
  7605  00056E  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7606  000570  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7607  000572  0012               	return	
  7608  000574                     __end_ofPL56:
  7609                           	opt stack 0
  7610  000574                     PL58:
  7611                           	opt stack 21
  7612  000574  5134               	movf	52,w,b	;volatile
  7613  000576  0B0F               	andlw	15
  7614  000578  0D02               	mullw	2
  7615  00057A  50F3               	movf	prodl,w,c
  7616  00057C  0012               	return	
  7617  00057E                     __end_ofPL58:
  7618                           	opt stack 0
  7619  00057E                     PL60:
  7620                           	opt stack 17
  7621  00057E  5134               	movf	52,w,b	;volatile
  7622  000580  0B0F               	andlw	15
  7623  000582  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7624  000584  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7625  000586  0012               	return	
  7626  000588                     __end_ofPL60:
  7627                           	opt stack 0
  7628                           tblptru	equ	0xFF8
  7629                           tblptrh	equ	0xFF7
  7630                           tblptrl	equ	0xFF6
  7631                           tablat	equ	0xFF5
  7632                           prodh	equ	0xFF4
  7633                           prodl	equ	0xFF3
  7634                           intcon	equ	0xFF2
  7635                           postinc0	equ	0xFEE
  7636                           wreg	equ	0xFE8
  7637                           indf1	equ	0xFE7
  7638                           postdec1	equ	0xFE5
  7639                           fsr1h	equ	0xFE2
  7640                           fsr1l	equ	0xFE1
  7641                           indf2	equ	0xFDF
  7642                           postinc2	equ	0xFDE
  7643                           postdec2	equ	0xFDD
  7644                           plusw2	equ	0xFDB
  7645                           fsr2h	equ	0xFDA
  7646                           fsr2l	equ	0xFD9
  7647                           status	equ	0xFD8
  7648                           
  7649 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7650 ;; Defined at:
  7651 ;;		line 51 in file "picLibs/usb_events.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  event           2   12[COMRAM] enum E3370
  7654 ;;  pdata           2   14[COMRAM] PTR void 
  7655 ;;		 -> RAM(767), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7656 ;;		 -> BDT(48), 
  7657 ;;  size            2   16[COMRAM] unsigned int 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1    wreg      unsigned char 
  7662 ;; Registers used:
  7663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7669 ;;      Params:         6       0       0       0
  7670 ;;      Locals:         0       0       0       0
  7671 ;;      Temps:          2       0       0       0
  7672 ;;      Totals:         8       0       0       0
  7673 ;;Total ram usage:        8 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    3
  7676 ;; This function calls:
  7677 ;;		_APP_DeviceCDCBasicDemoInitialize
  7678 ;;		_APP_LEDUpdateUSBStatus
  7679 ;;		_CDCInitEP
  7680 ;;		_USBCheckCDCRequest
  7681 ;;		i2_SYSTEM_Initialize
  7682 ;; This function is called by:
  7683 ;;		_USBDeviceTasks
  7684 ;;		_USBStdSetCfgHandler
  7685 ;;		_USBSuspend
  7686 ;;		_USBWakeFromSuspend
  7687 ;;		_USBCtrlTrfSetupHandler
  7688 ;;		_USBCheckStdRequest
  7689 ;;		_USBStdFeatureReqHandler
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           	psect	text40
  7694  0013AE                     __ptext40:
  7695                           	opt stack 0
  7696  0013AE                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7697                           	opt stack 21
  7698                           
  7699                           ;usb_events.c: 53: switch( (int) event )
  7700                           
  7701                           ;incstack = 0
  7702  0013AE  D00E               	goto	i2l3242
  7703  0013B0                     i2l3230:
  7704                           
  7705                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  7706  0013B0  EC9F  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7707                           
  7708                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7709  0013B4  0E01               	movlw	1
  7710  0013B6  EF0F  F00D         	goto	i2_SYSTEM_Initialize
  7711  0013BA                     i2l3232:
  7712                           
  7713                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  7714  0013BA  EC9F  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7715                           
  7716                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7717  0013BE  0E02               	movlw	2
  7718  0013C0  EF0F  F00D         	goto	i2_SYSTEM_Initialize
  7719  0013C4                     i2l3234:
  7720                           
  7721                           ;usb_events.c: 91: CDCInitEP();
  7722  0013C4  EC1D  F00B         	call	_CDCInitEP	;wreg free
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;usb_events.c: 92: APP_DeviceCDCBasicDemoInitialize();
  7726  0013C8  EF55  F00D         	goto	_APP_DeviceCDCBasicDemoInitialize	;wreg free
  7727  0013CC                     i2l3242:
  7728  0013CC  C036  F03C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7729  0013D0  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7730                           
  7731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7732                           ; Switch size 1, requested type "space"
  7733                           ; Number of cases is 2, Range of values is 0 to 127
  7734                           ; switch strategies available:
  7735                           ; Name         Instructions Cycles
  7736                           ; simple_byte            7     4 (average)
  7737                           ;	Chosen strategy is simple_byte
  7738  0013D4  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7739  0013D6  E004               	bz	i2l5086
  7740  0013D8  0A7F               	xorlw	127	; case 127
  7741  0013DA  A4D8               	btfss	status,2,c
  7742  0013DC  0012               	return	
  7743  0013DE  D01A               	goto	i2l5088
  7744  0013E0                     i2l5086:
  7745                           
  7746                           ; Switch size 1, requested type "space"
  7747                           ; Number of cases is 8, Range of values is 1 to 117
  7748                           ; switch strategies available:
  7749                           ; Name         Instructions Cycles
  7750                           ; simple_byte           25    13 (average)
  7751                           ;	Chosen strategy is simple_byte
  7752  0013E0  503C               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7753  0013E2  0A01               	xorlw	1	; case 1
  7754  0013E4  E0EF               	bz	i2l3234
  7755  0013E6  0A03               	xorlw	3	; case 2
  7756  0013E8  B4D8               	btfsc	status,2,c
  7757  0013EA  0012               	return	
  7758  0013EC  0A01               	xorlw	1	; case 3
  7759  0013EE  E102 EF3A  F008    	bz	_USBCheckCDCRequest
  7760  0013F4  0A06               	xorlw	6	; case 5
  7761  0013F6  B4D8               	btfsc	status,2,c
  7762  0013F8  0012               	return	
  7763  0013FA  0A77               	xorlw	119	; case 114
  7764  0013FC  B4D8               	btfsc	status,2,c
  7765  0013FE  0012               	return	
  7766  001400  0A01               	xorlw	1	; case 115
  7767  001402  E102 EF9F  F009    	bz	_APP_LEDUpdateUSBStatus
  7768  001408  0A07               	xorlw	7	; case 116
  7769  00140A  E0D7               	bz	i2l3232
  7770  00140C  0A01               	xorlw	1	; case 117
  7771  00140E  A4D8               	btfss	status,2,c
  7772  001410  0012               	return	
  7773  001412  D7CE               	goto	i2l3230
  7774  001414                     i2l5088:
  7775                           
  7776                           ; Switch size 1, requested type "space"
  7777                           ; Number of cases is 1, Range of values is 255 to 255
  7778                           ; switch strategies available:
  7779                           ; Name         Instructions Cycles
  7780                           ; simple_byte            4     3 (average)
  7781                           ;	Chosen strategy is simple_byte
  7782  001414  1C3C               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7783  001416  0012               	return	
  7784  001418                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7785                           	opt stack 0
  7786                           tblptru	equ	0xFF8
  7787                           tblptrh	equ	0xFF7
  7788                           tblptrl	equ	0xFF6
  7789                           tablat	equ	0xFF5
  7790                           prodh	equ	0xFF4
  7791                           prodl	equ	0xFF3
  7792                           intcon	equ	0xFF2
  7793                           postinc0	equ	0xFEE
  7794                           wreg	equ	0xFE8
  7795                           indf1	equ	0xFE7
  7796                           postdec1	equ	0xFE5
  7797                           fsr1h	equ	0xFE2
  7798                           fsr1l	equ	0xFE1
  7799                           indf2	equ	0xFDF
  7800                           postinc2	equ	0xFDE
  7801                           postdec2	equ	0xFDD
  7802                           plusw2	equ	0xFDB
  7803                           fsr2h	equ	0xFDA
  7804                           fsr2l	equ	0xFD9
  7805                           status	equ	0xFD8
  7806                           
  7807 ;; *************** function i2_SYSTEM_Initialize *****************
  7808 ;; Defined at:
  7809 ;;		line 66 in file "picLibs/system.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  state           1    wreg     enum E3329
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  state           1    1[COMRAM] enum E3329
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      void 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7823 ;;      Params:         0       0       0       0
  7824 ;;      Locals:         1       0       0       0
  7825 ;;      Temps:          0       0       0       0
  7826 ;;      Totals:         1       0       0       0
  7827 ;;Total ram usage:        1 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    1
  7830 ;; This function calls:
  7831 ;;		i2_BUTTON_Enable
  7832 ;;		i2_LED_Enable
  7833 ;; This function is called by:
  7834 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text41
  7839  001A1E                     __ptext41:
  7840                           	opt stack 0
  7841  001A1E                     i2_SYSTEM_Initialize:
  7842                           	opt stack 22
  7843                           
  7844                           ;incstack = 0
  7845                           ;i2SYSTEM_Initialize@state stored from wreg
  7846  001A1E  6E2B               	movwf	i2SYSTEM_Initialize@state,c
  7847                           
  7848                           ;system.c: 68: switch(state)
  7849  001A20  D006               	goto	i2l3224
  7850  001A22                     i2l3220:
  7851                           
  7852                           ;system.c: 71: LED_Enable(LED_D1);
  7853  001A22  0E01               	movlw	1
  7854  001A24  EC72  F00C         	call	i2_LED_Enable
  7855                           
  7856                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  7857  001A28  0E01               	movlw	1
  7858  001A2A  EF6C  F00D         	goto	i2_BUTTON_Enable
  7859  001A2E                     i2l3224:
  7860  001A2E  502B               	movf	i2SYSTEM_Initialize@state,w,c
  7861                           
  7862                           ; Switch size 1, requested type "space"
  7863                           ; Number of cases is 3, Range of values is 0 to 2
  7864                           ; switch strategies available:
  7865                           ; Name         Instructions Cycles
  7866                           ; simple_byte           10     6 (average)
  7867                           ;	Chosen strategy is simple_byte
  7868  001A30  E0F8               	bz	i2l3220
  7869  001A32  D000               	goto	PL104	;call to abstracted procedure
  7870  001A34                     __end_ofi2_SYSTEM_Initialize:
  7871                           	opt stack 0
  7872  001A34                     PL104:
  7873                           	opt stack 19
  7874  001A34  0A01               	xorlw	1	; case 1
  7875  001A36  A4D8               	btfss	status,2,c
  7876  001A38  0A03               	xorlw	3	; case 2
  7877  001A3A  0012               	return	
  7878  001A3C                     __end_ofPL104:
  7879                           	opt stack 0
  7880                           tblptru	equ	0xFF8
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           prodh	equ	0xFF4
  7885                           prodl	equ	0xFF3
  7886                           intcon	equ	0xFF2
  7887                           postinc0	equ	0xFEE
  7888                           wreg	equ	0xFE8
  7889                           indf1	equ	0xFE7
  7890                           postdec1	equ	0xFE5
  7891                           fsr1h	equ	0xFE2
  7892                           fsr1l	equ	0xFE1
  7893                           indf2	equ	0xFDF
  7894                           postinc2	equ	0xFDE
  7895                           postdec2	equ	0xFDD
  7896                           plusw2	equ	0xFDB
  7897                           fsr2h	equ	0xFDA
  7898                           fsr2l	equ	0xFD9
  7899                           status	equ	0xFD8
  7900                           
  7901 ;; *************** function i2_LED_Enable *****************
  7902 ;; Defined at:
  7903 ;;		line 220 in file "picLibs/leds.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  led             1    wreg     enum E2
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  led             1    0[COMRAM] enum E2
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1    wreg      void 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7917 ;;      Params:         0       0       0       0
  7918 ;;      Locals:         1       0       0       0
  7919 ;;      Temps:          0       0       0       0
  7920 ;;      Totals:         1       0       0       0
  7921 ;;Total ram usage:        1 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		i2_SYSTEM_Initialize
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text42
  7931  0018E4                     __ptext42:
  7932                           	opt stack 0
  7933  0018E4                     i2_LED_Enable:
  7934                           	opt stack 22
  7935                           
  7936                           ;incstack = 0
  7937                           ;i2LED_Enable@led stored from wreg
  7938  0018E4  6E2A               	movwf	i2LED_Enable@led,c
  7939                           
  7940                           ;leds.c: 222: switch(led)
  7941  0018E6  D008               	goto	i2l3080
  7942  0018E8                     i2l286:
  7943                           
  7944                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  7945  0018E8  9094               	bcf	3988,0,c	;volatile
  7946                           
  7947                           ;leds.c: 226: break;
  7948  0018EA  0012               	return	
  7949  0018EC                     i2l288:
  7950                           
  7951                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  7952  0018EC  9294               	bcf	3988,1,c	;volatile
  7953                           
  7954                           ;leds.c: 230: break;
  7955  0018EE  0012               	return	
  7956  0018F0                     i2l289:
  7957                           
  7958                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  7959  0018F0  9494               	bcf	3988,2,c	;volatile
  7960                           
  7961                           ;leds.c: 234: break;
  7962  0018F2  0012               	return	
  7963  0018F4                     i2l290:
  7964                           
  7965                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  7966  0018F4  9694               	bcf	3988,3,c	;volatile
  7967                           
  7968                           ;leds.c: 238: break;
  7969  0018F6  0012               	return	
  7970  0018F8                     i2l3080:
  7971  0018F8  502A               	movf	i2LED_Enable@led,w,c
  7972                           
  7973                           ; Switch size 1, requested type "space"
  7974                           ; Number of cases is 5, Range of values is 0 to 4
  7975                           ; switch strategies available:
  7976                           ; Name         Instructions Cycles
  7977                           ; simple_byte           16     9 (average)
  7978                           ;	Chosen strategy is simple_byte
  7979  0018FA  B4D8               	btfsc	status,2,c
  7980  0018FC  0012               	return	
  7981  0018FE  0A01               	xorlw	1	; case 1
  7982  001900  E0F3               	bz	i2l286
  7983  001902  0A03               	xorlw	3	; case 2
  7984  001904  E0F3               	bz	i2l288
  7985  001906  0A01               	xorlw	1	; case 3
  7986  001908  E0F3               	bz	i2l289
  7987  00190A  0A07               	xorlw	7	; case 4
  7988  00190C  E0F3               	bz	i2l290
  7989  00190E  0012               	return		;funcret
  7990  001910                     __end_ofi2_LED_Enable:
  7991                           	opt stack 0
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           postinc0	equ	0xFEE
  8000                           wreg	equ	0xFE8
  8001                           indf1	equ	0xFE7
  8002                           postdec1	equ	0xFE5
  8003                           fsr1h	equ	0xFE2
  8004                           fsr1l	equ	0xFE1
  8005                           indf2	equ	0xFDF
  8006                           postinc2	equ	0xFDE
  8007                           postdec2	equ	0xFDD
  8008                           plusw2	equ	0xFDB
  8009                           fsr2h	equ	0xFDA
  8010                           fsr2l	equ	0xFD9
  8011                           status	equ	0xFD8
  8012                           
  8013 ;; *************** function i2_BUTTON_Enable *****************
  8014 ;; Defined at:
  8015 ;;		line 85 in file "picLibs/buttons.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  button          1    wreg     enum E3304
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  button          1    0[COMRAM] enum E3304
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  1    wreg      void 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8029 ;;      Params:         0       0       0       0
  8030 ;;      Locals:         1       0       0       0
  8031 ;;      Temps:          0       0       0       0
  8032 ;;      Totals:         1       0       0       0
  8033 ;;Total ram usage:        1 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		i2_SYSTEM_Initialize
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text43
  8043  001AD8                     __ptext43:
  8044                           	opt stack 0
  8045  001AD8                     i2_BUTTON_Enable:
  8046                           	opt stack 22
  8047                           
  8048                           ;incstack = 0
  8049                           ;i2BUTTON_Enable@button stored from wreg
  8050  001AD8  6E2A               	movwf	i2BUTTON_Enable@button,c
  8051                           
  8052                           ;buttons.c: 87: switch(button)
  8053  001ADA  502A               	movf	i2BUTTON_Enable@button,w,c
  8054                           
  8055                           ; Switch size 1, requested type "space"
  8056                           ; Number of cases is 2, Range of values is 0 to 1
  8057                           ; switch strategies available:
  8058                           ; Name         Instructions Cycles
  8059                           ; simple_byte            7     4 (average)
  8060                           ;	Chosen strategy is simple_byte
  8061  001ADC  D000               	goto	PL114	;call to abstracted procedure
  8062  001ADE                     __end_ofi2_BUTTON_Enable:
  8063                           	opt stack 0
  8064  001ADE                     PL114:
  8065                           	opt stack 19
  8066  001ADE  A4D8               	btfss	status,2,c
  8067  001AE0  0A01               	xorlw	1	; case 1
  8068  001AE2  0012               	return	
  8069  001AE4                     __end_ofPL114:
  8070                           	opt stack 0
  8071                           tblptru	equ	0xFF8
  8072                           tblptrh	equ	0xFF7
  8073                           tblptrl	equ	0xFF6
  8074                           tablat	equ	0xFF5
  8075                           prodh	equ	0xFF4
  8076                           prodl	equ	0xFF3
  8077                           intcon	equ	0xFF2
  8078                           postinc0	equ	0xFEE
  8079                           wreg	equ	0xFE8
  8080                           indf1	equ	0xFE7
  8081                           postdec1	equ	0xFE5
  8082                           fsr1h	equ	0xFE2
  8083                           fsr1l	equ	0xFE1
  8084                           indf2	equ	0xFDF
  8085                           postinc2	equ	0xFDE
  8086                           postdec2	equ	0xFDD
  8087                           plusw2	equ	0xFDB
  8088                           fsr2h	equ	0xFDA
  8089                           fsr2l	equ	0xFD9
  8090                           status	equ	0xFD8
  8091                           
  8092 ;; *************** function _USBCheckCDCRequest *****************
  8093 ;; Defined at:
  8094 ;;		line 147 in file "picLibs/usb_device_cdc.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;		None
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, status,0
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 3F/2
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8108 ;;      Params:         0       0       0       0
  8109 ;;      Locals:         0       0       0       0
  8110 ;;      Temps:          0       0       0       0
  8111 ;;      Totals:         0       0       0       0
  8112 ;;Total ram usage:        0 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text44
  8122  001074                     __ptext44:
  8123                           	opt stack 0
  8124  001074                     _USBCheckCDCRequest:
  8125                           	opt stack 23
  8126                           
  8127                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8128                           
  8129                           ;incstack = 0
  8130  001074  0102               	movlb	2	; () banked
  8131  001076  5130               	movf	48,w,b	;volatile
  8132  001078  0B1F               	andlw	31
  8133  00107A  06E8               	decf	wreg,f,c
  8134  00107C  E001               	bz	i2l3158
  8135  00107E  0012               	return	
  8136  001080                     i2l3158:
  8137                           
  8138                           ; BSR set to: 2
  8139                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8140  001080  3930               	swapf	48,w,b	;volatile
  8141  001082  32E8               	rrcf	wreg,f,c
  8142  001084  0B03               	andlw	3
  8143  001086  06E8               	decf	wreg,f,c
  8144  001088  E001               	bz	i2l3162
  8145  00108A  0012               	return	
  8146  00108C                     i2l3162:
  8147                           
  8148                           ; BSR set to: 2
  8149                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8150                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8151  00108C  5134               	movf	52,w,b	;volatile
  8152  00108E  E027               	bz	i2l3198
  8153                           
  8154                           ; BSR set to: 2
  8155  001090  0534               	decf	52,w,b	;volatile
  8156  001092  E025               	bz	i2l3198
  8157  001094  0012               	return	
  8158  001096                     i2l3168:
  8159                           
  8160                           ; BSR set to: 2
  8161                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8162  001096  0E82               	movlw	low _dummy_encapsulated_cmd_response
  8163  001098  6E09               	movwf	_inPipes,c	;volatile
  8164  00109A  6A0A               	clrf	_inPipes+1,c	;volatile
  8165                           
  8166                           ; BSR set to: 2
  8167                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8168  00109C  6A0E               	clrf	_inPipes+5,c	;volatile
  8169  00109E  0E08               	movlw	8
  8170  0010A0  6E0D               	movwf	_inPipes+4,c	;volatile
  8171                           
  8172                           ; BSR set to: 2
  8173                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8174  0010A2  800C               	bsf	_inPipes+3,0,c	;volatile
  8175                           
  8176                           ; BSR set to: 2
  8177                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8178  0010A4  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8179                           
  8180                           ;usb_device_cdc.c: 175: break;
  8181  0010A6  0C08               	retlw	8
  8182  0010A8                     i2l3176:
  8183                           
  8184                           ; BSR set to: 2
  8185                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8186  0010A8  0E82               	movlw	low _dummy_encapsulated_cmd_response
  8187  0010AA  6E09               	movwf	_inPipes,c	;volatile
  8188  0010AC  6A0A               	clrf	_inPipes+1,c	;volatile
  8189                           
  8190                           ; BSR set to: 2
  8191                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8192  0010AE  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8193                           
  8194                           ;usb_device_cdc.c: 180: break;
  8195  0010B0  0012               	return	
  8196  0010B2                     i2l776:
  8197                           
  8198                           ; BSR set to: 2
  8199                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8200  0010B2  C236 F005          	movff	566,_outPipes+4	;volatile
  8201  0010B6  C237 F006          	movff	567,_outPipes+5	;volatile
  8202                           
  8203                           ; BSR set to: 2
  8204                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8205  0010BA  0E8A               	movlw	low _line_coding
  8206  0010BC  6E01               	movwf	_outPipes,c	;volatile
  8207                           
  8208                           ; BSR set to: 2
  8209                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8210  0010BE  6A07               	clrf	_outPipes+6,c	;volatile
  8211  0010C0  6A08               	clrf	_outPipes+7,c	;volatile
  8212                           
  8213                           ; BSR set to: 2
  8214                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8215  0010C2  8E04               	bsf	_outPipes+3,7,c	;volatile
  8216                           
  8217                           ;usb_device_cdc.c: 189: break;
  8218  0010C4  0012               	return	
  8219  0010C6                     i2l3186:
  8220                           
  8221                           ; BSR set to: 2
  8222                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8223  0010C6  0E8A               	movlw	low _line_coding
  8224  0010C8  6E09               	movwf	_inPipes,c	;volatile
  8225  0010CA  6A0A               	clrf	_inPipes+1,c	;volatile
  8226                           
  8227                           ; BSR set to: 2
  8228  0010CC  6A0E               	clrf	_inPipes+5,c	;volatile
  8229  0010CE  0E07               	movlw	7
  8230  0010D0  6E0D               	movwf	_inPipes+4,c	;volatile
  8231                           
  8232                           ; BSR set to: 2
  8233  0010D2  0EC1               	movlw	193
  8234  0010D4  6E0C               	movwf	_inPipes+3,c	;volatile
  8235                           
  8236                           ;usb_device_cdc.c: 196: break;
  8237  0010D6  0CC1               	retlw	193
  8238  0010D8                     i2l3192:
  8239                           
  8240                           ; BSR set to: 2
  8241                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8242  0010D8  5132               	movf	50,w,b	;volatile
  8243                           
  8244                           ; BSR set to: 2
  8245                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8246  0010DA  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8247                           
  8248                           ;usb_device_cdc.c: 232: break;
  8249  0010DC  0012               	return	
  8250  0010DE                     i2l3198:
  8251                           
  8252                           ; BSR set to: 2
  8253  0010DE  5131               	movf	49,w,b	;volatile
  8254                           
  8255                           ; Switch size 1, requested type "space"
  8256                           ; Number of cases is 5, Range of values is 0 to 34
  8257                           ; switch strategies available:
  8258                           ; Name         Instructions Cycles
  8259                           ; simple_byte           16     9 (average)
  8260                           ;	Chosen strategy is simple_byte
  8261  0010E0  E0DA               	bz	i2l3168
  8262  0010E2  0A01               	xorlw	1	; case 1
  8263  0010E4  E0E1               	bz	i2l3176
  8264  0010E6  0A21               	xorlw	33	; case 32
  8265  0010E8  E0E4               	bz	i2l776
  8266  0010EA  0A01               	xorlw	1	; case 33
  8267  0010EC  E0EC               	bz	i2l3186
  8268  0010EE  0A03               	xorlw	3	; case 34
  8269  0010F0  E0F3               	bz	i2l3192
  8270                           
  8271                           ; BSR set to: 2
  8272  0010F2  0012               	return		;funcret
  8273  0010F4                     __end_of_USBCheckCDCRequest:
  8274                           	opt stack 0
  8275                           tblptru	equ	0xFF8
  8276                           tblptrh	equ	0xFF7
  8277                           tblptrl	equ	0xFF6
  8278                           tablat	equ	0xFF5
  8279                           prodh	equ	0xFF4
  8280                           prodl	equ	0xFF3
  8281                           intcon	equ	0xFF2
  8282                           postinc0	equ	0xFEE
  8283                           wreg	equ	0xFE8
  8284                           indf1	equ	0xFE7
  8285                           postdec1	equ	0xFE5
  8286                           fsr1h	equ	0xFE2
  8287                           fsr1l	equ	0xFE1
  8288                           indf2	equ	0xFDF
  8289                           postinc2	equ	0xFDE
  8290                           postdec2	equ	0xFDD
  8291                           plusw2	equ	0xFDB
  8292                           fsr2h	equ	0xFDA
  8293                           fsr2l	equ	0xFD9
  8294                           status	equ	0xFD8
  8295                           
  8296 ;; *************** function _CDCInitEP *****************
  8297 ;; Defined at:
  8298 ;;		line 294 in file "picLibs/usb_device_cdc.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 3F/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8312 ;;      Params:         0       0       0       0
  8313 ;;      Locals:         0       0       0       0
  8314 ;;      Temps:          0       0       0       0
  8315 ;;      Totals:         0       0       0       0
  8316 ;;Total ram usage:        0 bytes
  8317 ;; Hardware stack levels used:    1
  8318 ;; Hardware stack levels required when called:    2
  8319 ;; This function calls:
  8320 ;;		_USBEnableEndpoint
  8321 ;;		i2_USBTransferOnePacket
  8322 ;; This function is called by:
  8323 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text45
  8328  00163A                     __ptext45:
  8329                           	opt stack 0
  8330  00163A                     _CDCInitEP:
  8331                           	opt stack 21
  8332                           
  8333                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8334                           
  8335                           ; BSR set to: 2
  8336                           ;incstack = 0
  8337  00163A  0100               	movlb	0	; () banked
  8338  00163C  6B8A               	clrf	_line_coding& (0+255),b
  8339  00163E  0E4B               	movlw	75
  8340  001640  6F8B               	movwf	(_line_coding+1)& (0+255),b
  8341  001642  6B8C               	clrf	(_line_coding+2)& (0+255),b
  8342  001644  6B8D               	clrf	(_line_coding+3)& (0+255),b
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8346  001646  6B8E               	clrf	(_line_coding+4)& (0+255),b
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8350  001648  6B8F               	clrf	(_line_coding+5)& (0+255),b
  8351                           
  8352                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8353  00164A  0E08               	movlw	8
  8354  00164C  6F90               	movwf	(_line_coding+6)& (0+255),b
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8358  00164E  6A1C               	clrf	_cdc_rx_len,c
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8362  001650  0E1A               	movlw	26
  8363  001652  6E32               	movwf	USBEnableEndpoint@options,c
  8364  001654  0E01               	movlw	1
  8365  001656  ECF3  F00B         	call	_USBEnableEndpoint
  8366                           
  8367                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8368  00165A  0E1E               	movlw	30
  8369  00165C  6E32               	movwf	USBEnableEndpoint@options,c
  8370  00165E  0E02               	movlw	2
  8371  001660  ECF3  F00B         	call	_USBEnableEndpoint
  8372                           
  8373                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8374  001664  0E00               	movlw	0
  8375  001666  6E2A               	movwf	i2USBTransferOnePacket@dir,c
  8376  001668  0E80               	movlw	128
  8377  00166A  6E2B               	movwf	i2USBTransferOnePacket@data,c
  8378  00166C  0E02               	movlw	2
  8379  00166E  6E2C               	movwf	i2USBTransferOnePacket@data+1,c
  8380  001670  0E40               	movlw	64
  8381  001672  6E2D               	movwf	i2USBTransferOnePacket@len,c
  8382  001674  0E02               	movlw	2
  8383  001676  EC5D  F006         	call	i2_USBTransferOnePacket
  8384  00167A  C02A  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  8385  00167E  C02B  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8386                           
  8387                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8388  001682  0100               	movlb	0	; () banked
  8389  001684  6B76               	clrf	_CDCDataInHandle& (0+255),b
  8390  001686  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8394  001688  6B80               	clrf	_cdc_trf_state& (0+255),b
  8395                           
  8396                           ; BSR set to: 0
  8397  00168A  0012               	return		;funcret
  8398  00168C                     __end_of_CDCInitEP:
  8399                           	opt stack 0
  8400                           tblptru	equ	0xFF8
  8401                           tblptrh	equ	0xFF7
  8402                           tblptrl	equ	0xFF6
  8403                           tablat	equ	0xFF5
  8404                           prodh	equ	0xFF4
  8405                           prodl	equ	0xFF3
  8406                           intcon	equ	0xFF2
  8407                           postinc0	equ	0xFEE
  8408                           wreg	equ	0xFE8
  8409                           indf1	equ	0xFE7
  8410                           postdec1	equ	0xFE5
  8411                           fsr1h	equ	0xFE2
  8412                           fsr1l	equ	0xFE1
  8413                           indf2	equ	0xFDF
  8414                           postinc2	equ	0xFDE
  8415                           postdec2	equ	0xFDD
  8416                           plusw2	equ	0xFDB
  8417                           fsr2h	equ	0xFDA
  8418                           fsr2l	equ	0xFD9
  8419                           status	equ	0xFD8
  8420                           
  8421 ;; *************** function i2_USBTransferOnePacket *****************
  8422 ;; Defined at:
  8423 ;;		line 995 in file "picLibs/usb_device.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;  ep              1    wreg     unsigned char 
  8426 ;;  dir             1    0[COMRAM] unsigned char 
  8427 ;;  data            2    1[COMRAM] PTR unsigned char 
  8428 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8429 ;;  len             1    3[COMRAM] unsigned char 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  ep              1    6[COMRAM] unsigned char 
  8432 ;;  USBTransferO    2    7[COMRAM] PTR volatile struct __BD
  8433 ;;		 -> RAM(767), NULL(0), BDT(48), 
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  2    0[COMRAM] PTR void 
  8436 ;; Registers used:
  8437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8443 ;;      Params:         4       0       0       0
  8444 ;;      Locals:         3       0       0       0
  8445 ;;      Temps:          2       0       0       0
  8446 ;;      Totals:         9       0       0       0
  8447 ;;Total ram usage:        9 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		_CDCInitEP
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text46
  8457  000CBA                     __ptext46:
  8458                           	opt stack 0
  8459  000CBA                     i2_USBTransferOnePacket:
  8460                           	opt stack 22
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;incstack = 0
  8464                           ;i2USBTransferOnePacket@ep stored from wreg
  8465  000CBA  6E30               	movwf	i2USBTransferOnePacket@ep,c
  8466                           
  8467                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8468                           ;usb_device.c: 1000: if(dir != 0)
  8469  000CBC  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8470  000CBE  E003               	bz	i2l3086
  8471                           
  8472                           ;usb_device.c: 1001: {
  8473                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8474  000CC0  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8475  000CC2  D845               	call	PL82	;call to abstracted procedure
  8476  000CC4  D002               	goto	L11
  8477  000CC6                     i2l3086:
  8478                           
  8479                           ;usb_device.c: 1005: else
  8480                           ;usb_device.c: 1006: {
  8481                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8482  000CC6  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8483  000CC8  D84B               	call	PL90	;call to abstracted procedure
  8484  000CCA                     L11:
  8485  000CCA  6ED9               	movwf	fsr2l,c
  8486  000CCC  6ADA               	clrf	fsr2h,c
  8487  000CCE  CFDE F031          	movff	postinc2,i2USBTransferOnePacket@handle
  8488  000CD2  CFDD F032          	movff	postdec2,i2USBTransferOnePacket@handle+1
  8489                           
  8490                           ;usb_device.c: 1009: }
  8491                           ;usb_device.c: 1013: if(handle == 0)
  8492  000CD6  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8493  000CD8  1032               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  8494  000CDA  E103               	bnz	i2l3092
  8495                           
  8496                           ;usb_device.c: 1014: {
  8497                           ;usb_device.c: 1015: return 0;
  8498  000CDC  6A2A               	clrf	?i2_USBTransferOnePacket,c
  8499  000CDE  6A2B               	clrf	?i2_USBTransferOnePacket+1,c
  8500  000CE0  0012               	return	
  8501  000CE2                     i2l3092:
  8502                           
  8503                           ;usb_device.c: 1016: }
  8504                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8505  000CE2  EE20 F002          	lfsr	2,2
  8506  000CE6  D840               	call	PL102	;call to abstracted procedure
  8507  000CE8  C02B  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  8508  000CEC  C02C  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  8509                           
  8510                           ;usb_device.c: 1030: handle->CNT = len;
  8511  000CF0  EE20 F001          	lfsr	2,1
  8512  000CF4  D839               	call	PL102	;call to abstracted procedure
  8513  000CF6  C02D  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  8514                           
  8515                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8516  000CFA  D82D               	call	PL84	;call to abstracted procedure
  8517  000CFC  0E40               	movlw	64
  8518  000CFE  16DF               	andwf	indf2,f,c
  8519                           
  8520                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8521  000D00  D82A               	call	PL84	;call to abstracted procedure
  8522  000D02  0E00               	movlw	0
  8523  000D04  86DB               	bsf	plusw2,3,c
  8524                           
  8525                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8526  000D06  D827               	call	PL84	;call to abstracted procedure
  8527  000D08  8EDB               	bsf	plusw2,7,c
  8528                           
  8529                           ;usb_device.c: 1036: if(dir != 0)
  8530  000D0A  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8531  000D0C  E006               	bz	i2l3104
  8532                           
  8533                           ;usb_device.c: 1037: {
  8534                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8535  000D0E  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8536  000D10  EC8A  F005         	call	PL26	;call to abstracted procedure
  8537  000D14  D812               	call	PL52	;call to abstracted procedure
  8538  000D16  0F0F               	addlw	low _pBDTEntryIn
  8539  000D18  D005               	goto	L12
  8540  000D1A                     i2l3104:
  8541                           
  8542                           ;usb_device.c: 1041: else
  8543                           ;usb_device.c: 1042: {
  8544                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8545  000D1A  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8546  000D1C  EC84  F005         	call	PL24	;call to abstracted procedure
  8547  000D20  D80C               	call	PL52	;call to abstracted procedure
  8548  000D22  0F60               	addlw	low _pBDTEntryOut
  8549  000D24                     L12:
  8550  000D24  6ED9               	movwf	fsr2l,c
  8551  000D26  6ADA               	clrf	fsr2h,c
  8552  000D28  C02E  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
  8553  000D2C  C02F  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
  8554                           
  8555                           ;usb_device.c: 1045: }
  8556                           ;usb_device.c: 1046: return (void*)handle;
  8557  000D30  C031  F02A         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  8558  000D34  C032  F02B         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  8559  000D38  0012               	return		;funcret
  8560  000D3A                     __end_ofi2_USBTransferOnePacket:
  8561                           	opt stack 0
  8562  000D3A                     PL52:
  8563                           	opt stack 22
  8564  000D3A  CFDE F02E          	movff	postinc2,??i2_USBTransferOnePacket
  8565  000D3E  CFDD F02F          	movff	postdec2,??i2_USBTransferOnePacket+1
  8566  000D42  0E04               	movlw	4
  8567  000D44  1A2E               	xorwf	??i2_USBTransferOnePacket,f,c
  8568  000D46  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8569  000D48  0D02               	mullw	2
  8570  000D4A  50F3               	movf	prodl,w,c
  8571  000D4C  0012               	return	
  8572  000D4E                     __end_ofPL52:
  8573                           	opt stack 0
  8574  000D4E                     PL82:
  8575                           	opt stack 18
  8576  000D4E  0D02               	mullw	2
  8577  000D50  50F3               	movf	prodl,w,c
  8578  000D52  0F0F               	addlw	low _pBDTEntryIn
  8579  000D54  0012               	return	
  8580  000D56                     __end_ofPL82:
  8581                           	opt stack 0
  8582  000D56                     PL84:
  8583                           	opt stack 22
  8584  000D56  C031  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  8585  000D5A  C032  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  8586  000D5E  0012               	return	
  8587  000D60                     __end_ofPL84:
  8588                           	opt stack 0
  8589  000D60                     PL90:
  8590                           	opt stack 18
  8591  000D60  0D02               	mullw	2
  8592  000D62  50F3               	movf	prodl,w,c
  8593  000D64  0F60               	addlw	low _pBDTEntryOut
  8594  000D66  0012               	return	
  8595  000D68                     __end_ofPL90:
  8596                           	opt stack 0
  8597  000D68                     PL102:
  8598                           	opt stack 22
  8599  000D68  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8600  000D6A  26D9               	addwf	fsr2l,f,c
  8601  000D6C  5032               	movf	i2USBTransferOnePacket@handle+1,w,c
  8602  000D6E  22DA               	addwfc	fsr2h,f,c
  8603  000D70  0012               	return	
  8604  000D72                     __end_ofPL102:
  8605                           	opt stack 0
  8606                           tblptru	equ	0xFF8
  8607                           tblptrh	equ	0xFF7
  8608                           tblptrl	equ	0xFF6
  8609                           tablat	equ	0xFF5
  8610                           prodh	equ	0xFF4
  8611                           prodl	equ	0xFF3
  8612                           intcon	equ	0xFF2
  8613                           postinc0	equ	0xFEE
  8614                           wreg	equ	0xFE8
  8615                           indf1	equ	0xFE7
  8616                           postdec1	equ	0xFE5
  8617                           fsr1h	equ	0xFE2
  8618                           fsr1l	equ	0xFE1
  8619                           indf2	equ	0xFDF
  8620                           postinc2	equ	0xFDE
  8621                           postdec2	equ	0xFDD
  8622                           plusw2	equ	0xFDB
  8623                           fsr2h	equ	0xFDA
  8624                           fsr2l	equ	0xFD9
  8625                           status	equ	0xFD8
  8626                           
  8627 ;; *************** function _USBEnableEndpoint *****************
  8628 ;; Defined at:
  8629 ;;		line 878 in file "picLibs/usb_device.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  ep              1    wreg     unsigned char 
  8632 ;;  options         1    8[COMRAM] unsigned char 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  ep              1   11[COMRAM] unsigned char 
  8635 ;;  p               2    9[COMRAM] PTR unsigned char 
  8636 ;;		 -> UEP0(1), 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      void 
  8639 ;; Registers used:
  8640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8646 ;;      Params:         1       0       0       0
  8647 ;;      Locals:         3       0       0       0
  8648 ;;      Temps:          0       0       0       0
  8649 ;;      Totals:         4       0       0       0
  8650 ;;Total ram usage:        4 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:    1
  8653 ;; This function calls:
  8654 ;;		_USBConfigureEndpoint
  8655 ;; This function is called by:
  8656 ;;		_CDCInitEP
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text47
  8661  0017E6                     __ptext47:
  8662                           	opt stack 0
  8663  0017E6                     _USBEnableEndpoint:
  8664                           	opt stack 21
  8665                           
  8666                           ;incstack = 0
  8667                           ;USBEnableEndpoint@ep stored from wreg
  8668  0017E6  6E35               	movwf	USBEnableEndpoint@ep,c
  8669                           
  8670                           ;usb_device.c: 880: unsigned char* p;
  8671                           ;usb_device.c: 884: if(options & 0x04)
  8672  0017E8  A432               	btfss	USBEnableEndpoint@options,2,c
  8673  0017EA  D004               	goto	i2l3062
  8674                           
  8675                           ;usb_device.c: 885: {
  8676                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8677  0017EC  6A2A               	clrf	USBConfigureEndpoint@direction,c
  8678  0017EE  5035               	movf	USBEnableEndpoint@ep,w,c
  8679  0017F0  EC7A  F008         	call	_USBConfigureEndpoint
  8680  0017F4                     i2l3062:
  8681                           
  8682                           ;usb_device.c: 887: }
  8683                           ;usb_device.c: 888: if(options & 0x02)
  8684  0017F4  A232               	btfss	USBEnableEndpoint@options,1,c
  8685  0017F6  D005               	goto	i2l3066
  8686                           
  8687                           ;usb_device.c: 889: {
  8688                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8689  0017F8  0E01               	movlw	1
  8690  0017FA  6E2A               	movwf	USBConfigureEndpoint@direction,c
  8691  0017FC  5035               	movf	USBEnableEndpoint@ep,w,c
  8692  0017FE  EC7A  F008         	call	_USBConfigureEndpoint
  8693  001802                     i2l3066:
  8694                           
  8695                           ;usb_device.c: 891: }
  8696                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8697  001802  0E53               	movlw	83
  8698  001804  2435               	addwf	USBEnableEndpoint@ep,w,c
  8699  001806  6E33               	movwf	USBEnableEndpoint@p,c
  8700  001808  6A34               	clrf	USBEnableEndpoint@p+1,c
  8701  00180A  0E0F               	movlw	15
  8702  00180C  2234               	addwfc	USBEnableEndpoint@p+1,f,c
  8703                           
  8704                           ;usb_device.c: 901: *p = options;
  8705  00180E  C033  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8706  001812  C034  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8707  001816  C032  FFDF         	movff	USBEnableEndpoint@options,indf2
  8708  00181A  0C0F               	retlw	15	;funcret
  8709  00181C                     __end_of_USBEnableEndpoint:
  8710                           	opt stack 0
  8711                           tblptru	equ	0xFF8
  8712                           tblptrh	equ	0xFF7
  8713                           tblptrl	equ	0xFF6
  8714                           tablat	equ	0xFF5
  8715                           prodh	equ	0xFF4
  8716                           prodl	equ	0xFF3
  8717                           intcon	equ	0xFF2
  8718                           postinc0	equ	0xFEE
  8719                           wreg	equ	0xFE8
  8720                           indf1	equ	0xFE7
  8721                           postdec1	equ	0xFE5
  8722                           fsr1h	equ	0xFE2
  8723                           fsr1l	equ	0xFE1
  8724                           indf2	equ	0xFDF
  8725                           postinc2	equ	0xFDE
  8726                           postdec2	equ	0xFDD
  8727                           plusw2	equ	0xFDB
  8728                           fsr2h	equ	0xFDA
  8729                           fsr2l	equ	0xFD9
  8730                           status	equ	0xFD8
  8731                           
  8732 ;; *************** function _USBConfigureEndpoint *****************
  8733 ;; Defined at:
  8734 ;;		line 1543 in file "picLibs/usb_device.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  EPNum           1    wreg     unsigned char 
  8737 ;;  direction       1    0[COMRAM] unsigned char 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  EPNum           1    5[COMRAM] unsigned char 
  8740 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  8741 ;;		 -> BDT(48), 
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1    wreg      void 
  8744 ;; Registers used:
  8745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8751 ;;      Params:         1       0       0       0
  8752 ;;      Locals:         3       0       0       0
  8753 ;;      Temps:          4       0       0       0
  8754 ;;      Totals:         8       0       0       0
  8755 ;;Total ram usage:        8 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_USBEnableEndpoint
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text48
  8765  0010F4                     __ptext48:
  8766                           	opt stack 0
  8767  0010F4                     _USBConfigureEndpoint:
  8768                           	opt stack 21
  8769                           
  8770                           ;incstack = 0
  8771                           ;USBConfigureEndpoint@EPNum stored from wreg
  8772  0010F4  6E2F               	movwf	USBConfigureEndpoint@EPNum,c
  8773                           
  8774                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8775                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8776  0010F6  6A30               	clrf	USBConfigureEndpoint@handle,c
  8777  0010F8  0E02               	movlw	2
  8778  0010FA  6E31               	movwf	USBConfigureEndpoint@handle+1,c
  8779                           
  8780                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8781  0010FC  502A               	movf	USBConfigureEndpoint@direction,w,c
  8782  0010FE  6E2B               	movwf	??_USBConfigureEndpoint& (0+255),c
  8783  001100  6A2C               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8784  001102  90D8               	bcf	status,0,c
  8785  001104  362B               	rlcf	??_USBConfigureEndpoint,f,c
  8786  001106  362C               	rlcf	??_USBConfigureEndpoint+1,f,c
  8787  001108  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8788  00110A  6E2D               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8789  00110C  6A2E               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8790  00110E  D824               	call	PL74	;call to abstracted procedure
  8791  001110  502B               	movf	??_USBConfigureEndpoint,w,c
  8792  001112  262D               	addwf	??_USBConfigureEndpoint+2,f,c
  8793  001114  502C               	movf	??_USBConfigureEndpoint+1,w,c
  8794  001116  222E               	addwfc	??_USBConfigureEndpoint+3,f,c
  8795  001118  D81F               	call	PL74	;call to abstracted procedure
  8796  00111A  502D               	movf	??_USBConfigureEndpoint+2,w,c
  8797  00111C  2630               	addwf	USBConfigureEndpoint@handle,f,c
  8798  00111E  502E               	movf	??_USBConfigureEndpoint+3,w,c
  8799  001120  2231               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8800                           
  8801                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8802  001122  D821               	call	PL106	;call to abstracted procedure
  8803  001124  9EDF               	bcf	indf2,7,c
  8804                           
  8805                           ;usb_device.c: 1557: if(direction == 0)
  8806  001126  502A               	movf	USBConfigureEndpoint@direction,w,c
  8807  001128  E104               	bnz	i2l3040
  8808                           
  8809                           ;usb_device.c: 1558: {
  8810                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8811  00112A  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8812  00112C  ECB0  F006         	call	PL90	;call to abstracted procedure
  8813  001130  D003               	goto	L13
  8814  001132                     i2l3040:
  8815                           
  8816                           ;usb_device.c: 1561: else
  8817                           ;usb_device.c: 1562: {
  8818                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8819  001132  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8820  001134  ECA7  F006         	call	PL82	;call to abstracted procedure
  8821  001138                     L13:
  8822  001138  6ED9               	movwf	fsr2l,c
  8823  00113A  6ADA               	clrf	fsr2h,c
  8824  00113C  C030  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8825  001140  C031  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8826                           
  8827                           ;usb_device.c: 1564: }
  8828                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8829  001144  D810               	call	PL106	;call to abstracted procedure
  8830  001146  9CDF               	bcf	indf2,6,c
  8831                           
  8832                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8833  001148  EE20 F004          	lfsr	2,4
  8834  00114C  5030               	movf	USBConfigureEndpoint@handle,w,c
  8835  00114E  26D9               	addwf	fsr2l,f,c
  8836  001150  5031               	movf	USBConfigureEndpoint@handle+1,w,c
  8837  001152  22DA               	addwfc	fsr2h,f,c
  8838  001154  8CDF               	bsf	indf2,6,c
  8839  001156  0012               	return		;funcret
  8840  001158                     __end_of_USBConfigureEndpoint:
  8841                           	opt stack 0
  8842  001158                     PL74:
  8843                           	opt stack 21
  8844  001158  90D8               	bcf	status,0,c
  8845  00115A  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8846  00115C  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8847  00115E  90D8               	bcf	status,0,c
  8848  001160  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8849  001162  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8850  001164  0012               	return	
  8851  001166                     __end_ofPL74:
  8852                           	opt stack 0
  8853  001166                     PL106:
  8854                           	opt stack 21
  8855  001166  C030  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8856  00116A  C031  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8857  00116E  0012               	return	
  8858  001170                     __end_ofPL106:
  8859                           	opt stack 0
  8860                           tblptru	equ	0xFF8
  8861                           tblptrh	equ	0xFF7
  8862                           tblptrl	equ	0xFF6
  8863                           tablat	equ	0xFF5
  8864                           prodh	equ	0xFF4
  8865                           prodl	equ	0xFF3
  8866                           intcon	equ	0xFF2
  8867                           postinc0	equ	0xFEE
  8868                           wreg	equ	0xFE8
  8869                           indf1	equ	0xFE7
  8870                           postdec1	equ	0xFE5
  8871                           fsr1h	equ	0xFE2
  8872                           fsr1l	equ	0xFE1
  8873                           indf2	equ	0xFDF
  8874                           postinc2	equ	0xFDE
  8875                           postdec2	equ	0xFDD
  8876                           plusw2	equ	0xFDB
  8877                           fsr2h	equ	0xFDA
  8878                           fsr2l	equ	0xFD9
  8879                           status	equ	0xFD8
  8880                           
  8881 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8882 ;; Defined at:
  8883 ;;		line 50 in file "picLibs/app_led_usb_status.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;		None
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, status,2, status,0, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8897 ;;      Params:         0       0       0       0
  8898 ;;      Locals:         0       0       0       0
  8899 ;;      Temps:          0       0       0       0
  8900 ;;      Totals:         0       0       0       0
  8901 ;;Total ram usage:        0 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:    1
  8904 ;; This function calls:
  8905 ;;		_LED_Off
  8906 ;;		_LED_On
  8907 ;; This function is called by:
  8908 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text49
  8913  00133E                     __ptext49:
  8914                           	opt stack 0
  8915  00133E                     _APP_LEDUpdateUSBStatus:
  8916                           	opt stack 22
  8917                           
  8918                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  8919                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  8920                           
  8921                           ;incstack = 0
  8922  00133E  A264               	btfss	3940,1,c	;volatile
  8923  001340  D02E               	goto	i2l3150
  8924                           
  8925                           ;app_led_usb_status.c: 55: {
  8926                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  8927  001342  0E01               	movlw	1
  8928  001344  EF9E  F00C         	goto	_LED_Off
  8929  001348                     i2l3124:
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  8933  001348  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8934  00134A  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8935  00134C  E104               	bnz	i2l3128
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;app_led_usb_status.c: 66: {
  8939                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  8940  00134E  0E01               	movlw	1
  8941  001350  EC88  F00C         	call	_LED_On
  8942                           
  8943                           ;app_led_usb_status.c: 68: }
  8944  001354  D029               	goto	i2l3152
  8945  001356                     i2l3128:
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  8949  001356  0E4B               	movlw	75
  8950  001358  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8951  00135A  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8952  00135C  E104               	bnz	i2l3132
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;app_led_usb_status.c: 70: {
  8956                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  8957  00135E  0E01               	movlw	1
  8958  001360  EC9E  F00C         	call	_LED_Off
  8959                           
  8960                           ;app_led_usb_status.c: 72: }
  8961  001364  D021               	goto	i2l3152
  8962  001366                     i2l3132:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  8966  001366  501A               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8967  001368  E103               	bnz	i2u186_40
  8968  00136A  0E97               	movlw	151
  8969  00136C  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8970  00136E  E31C               	bnc	i2l3152
  8971  001370                     i2u186_40:
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;app_led_usb_status.c: 74: {
  8975                           ;app_led_usb_status.c: 75: ledCount = 0;
  8976  001370  6A19               	clrf	APP_LEDUpdateUSBStatus@ledCount,c
  8977  001372  6A1A               	clrf	APP_LEDUpdateUSBStatus@ledCount+1,c
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;app_led_usb_status.c: 76: }
  8981                           ;app_led_usb_status.c: 77: break;
  8982  001374  D019               	goto	i2l3152
  8983  001376                     i2l3136:
  8984                           
  8985                           ; BSR set to: 0
  8986                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  8987  001376  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8988  001378  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8989  00137A  E104               	bnz	i2l3140
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;app_led_usb_status.c: 83: {
  8993                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  8994  00137C  0E01               	movlw	1
  8995  00137E  EC88  F00C         	call	_LED_On
  8996                           
  8997                           ;app_led_usb_status.c: 85: }
  8998  001382  D012               	goto	i2l3152
  8999  001384                     i2l3140:
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  9003  001384  0E32               	movlw	50
  9004  001386  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9005  001388  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9006  00138A  E104               	bnz	i2l3144
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;app_led_usb_status.c: 87: {
  9010                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  9011  00138C  0E01               	movlw	1
  9012  00138E  EC9E  F00C         	call	_LED_Off
  9013                           
  9014                           ;app_led_usb_status.c: 89: }
  9015  001392  D00A               	goto	i2l3152
  9016  001394                     i2l3144:
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  9020  001394  0EB7               	movlw	183
  9021  001396  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9022  001398  0E03               	movlw	3
  9023  00139A  581A               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9024  00139C  D7E8               	goto	L14
  9025  00139E                     i2l3150:
  9026  00139E  0100               	movlb	0	; () banked
  9027  0013A0  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  9028                           
  9029                           ; Switch size 1, requested type "space"
  9030                           ; Number of cases is 1, Range of values is 32 to 32
  9031                           ; switch strategies available:
  9032                           ; Name         Instructions Cycles
  9033                           ; simple_byte            4     3 (average)
  9034                           ;	Chosen strategy is simple_byte
  9035  0013A2  0A20               	xorlw	32	; case 32
  9036  0013A4  E0D1               	bz	i2l3124
  9037  0013A6  D7E7               	goto	i2l3136
  9038  0013A8                     i2l3152:
  9039                           
  9040                           ;app_led_usb_status.c: 98: ledCount++;
  9041  0013A8  4A19               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
  9042  0013AA  2A1A               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
  9043  0013AC  0012               	return		;funcret
  9044  0013AE                     __end_of_APP_LEDUpdateUSBStatus:
  9045                           	opt stack 0
  9046                           tblptru	equ	0xFF8
  9047                           tblptrh	equ	0xFF7
  9048                           tblptrl	equ	0xFF6
  9049                           tablat	equ	0xFF5
  9050                           prodh	equ	0xFF4
  9051                           prodl	equ	0xFF3
  9052                           intcon	equ	0xFF2
  9053                           postinc0	equ	0xFEE
  9054                           wreg	equ	0xFE8
  9055                           indf1	equ	0xFE7
  9056                           postdec1	equ	0xFE5
  9057                           fsr1h	equ	0xFE2
  9058                           fsr1l	equ	0xFE1
  9059                           indf2	equ	0xFDF
  9060                           postinc2	equ	0xFDE
  9061                           postdec2	equ	0xFDD
  9062                           plusw2	equ	0xFDB
  9063                           fsr2h	equ	0xFDA
  9064                           fsr2l	equ	0xFD9
  9065                           status	equ	0xFD8
  9066                           
  9067 ;; *************** function _LED_On *****************
  9068 ;; Defined at:
  9069 ;;		line 59 in file "picLibs/leds.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  led             1    wreg     enum E2
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  led             1    0[COMRAM] enum E2
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9083 ;;      Params:         0       0       0       0
  9084 ;;      Locals:         1       0       0       0
  9085 ;;      Temps:          0       0       0       0
  9086 ;;      Totals:         1       0       0       0
  9087 ;;Total ram usage:        1 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_APP_LEDUpdateUSBStatus
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text50
  9097  001910                     __ptext50:
  9098                           	opt stack 0
  9099  001910                     _LED_On:
  9100                           	opt stack 22
  9101                           
  9102                           ;incstack = 0
  9103                           ;LED_On@led stored from wreg
  9104  001910  6E2A               	movwf	LED_On@led,c
  9105                           
  9106                           ;leds.c: 61: switch(led)
  9107  001912  D008               	goto	i2l3056
  9108  001914                     i2l246:
  9109                           
  9110                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9111  001914  808B               	bsf	3979,0,c	;volatile
  9112                           
  9113                           ;leds.c: 65: break;
  9114  001916  0012               	return	
  9115  001918                     i2l248:
  9116                           
  9117                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9118  001918  828B               	bsf	3979,1,c	;volatile
  9119                           
  9120                           ;leds.c: 69: break;
  9121  00191A  0012               	return	
  9122  00191C                     i2l249:
  9123                           
  9124                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9125  00191C  848B               	bsf	3979,2,c	;volatile
  9126                           
  9127                           ;leds.c: 73: break;
  9128  00191E  0012               	return	
  9129  001920                     i2l250:
  9130                           
  9131                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9132  001920  868B               	bsf	3979,3,c	;volatile
  9133                           
  9134                           ;leds.c: 77: break;
  9135  001922  0012               	return	
  9136  001924                     i2l3056:
  9137  001924  502A               	movf	LED_On@led,w,c
  9138                           
  9139                           ; Switch size 1, requested type "space"
  9140                           ; Number of cases is 5, Range of values is 0 to 4
  9141                           ; switch strategies available:
  9142                           ; Name         Instructions Cycles
  9143                           ; simple_byte           16     9 (average)
  9144                           ;	Chosen strategy is simple_byte
  9145  001926  B4D8               	btfsc	status,2,c
  9146  001928  0012               	return	
  9147  00192A  0A01               	xorlw	1	; case 1
  9148  00192C  E0F3               	bz	i2l246
  9149  00192E  0A03               	xorlw	3	; case 2
  9150  001930  E0F3               	bz	i2l248
  9151  001932  0A01               	xorlw	1	; case 3
  9152  001934  E0F3               	bz	i2l249
  9153  001936  0A07               	xorlw	7	; case 4
  9154  001938  E0F3               	bz	i2l250
  9155  00193A  0012               	return		;funcret
  9156  00193C                     __end_of_LED_On:
  9157                           	opt stack 0
  9158                           tblptru	equ	0xFF8
  9159                           tblptrh	equ	0xFF7
  9160                           tblptrl	equ	0xFF6
  9161                           tablat	equ	0xFF5
  9162                           prodh	equ	0xFF4
  9163                           prodl	equ	0xFF3
  9164                           intcon	equ	0xFF2
  9165                           postinc0	equ	0xFEE
  9166                           wreg	equ	0xFE8
  9167                           indf1	equ	0xFE7
  9168                           postdec1	equ	0xFE5
  9169                           fsr1h	equ	0xFE2
  9170                           fsr1l	equ	0xFE1
  9171                           indf2	equ	0xFDF
  9172                           postinc2	equ	0xFDE
  9173                           postdec2	equ	0xFDD
  9174                           plusw2	equ	0xFDB
  9175                           fsr2h	equ	0xFDA
  9176                           fsr2l	equ	0xFD9
  9177                           status	equ	0xFD8
  9178                           
  9179 ;; *************** function _LED_Off *****************
  9180 ;; Defined at:
  9181 ;;		line 100 in file "picLibs/leds.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  led             1    wreg     enum E2
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  led             1    0[COMRAM] enum E2
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  1    wreg      void 
  9188 ;; Registers used:
  9189 ;;		wreg, status,2, status,0
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9195 ;;      Params:         0       0       0       0
  9196 ;;      Locals:         1       0       0       0
  9197 ;;      Temps:          0       0       0       0
  9198 ;;      Totals:         1       0       0       0
  9199 ;;Total ram usage:        1 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; This function calls:
  9202 ;;		Nothing
  9203 ;; This function is called by:
  9204 ;;		_APP_LEDUpdateUSBStatus
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text51
  9209  00193C                     __ptext51:
  9210                           	opt stack 0
  9211  00193C                     _LED_Off:
  9212                           	opt stack 22
  9213                           
  9214                           ;incstack = 0
  9215                           ;LED_Off@led stored from wreg
  9216  00193C  6E2A               	movwf	LED_Off@led,c
  9217                           
  9218                           ;leds.c: 102: switch(led)
  9219  00193E  D008               	goto	i2l3050
  9220  001940                     i2l256:
  9221                           
  9222                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9223  001940  908B               	bcf	3979,0,c	;volatile
  9224                           
  9225                           ;leds.c: 106: break;
  9226  001942  0012               	return	
  9227  001944                     i2l258:
  9228                           
  9229                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9230  001944  928B               	bcf	3979,1,c	;volatile
  9231                           
  9232                           ;leds.c: 110: break;
  9233  001946  0012               	return	
  9234  001948                     i2l259:
  9235                           
  9236                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9237  001948  948B               	bcf	3979,2,c	;volatile
  9238                           
  9239                           ;leds.c: 114: break;
  9240  00194A  0012               	return	
  9241  00194C                     i2l260:
  9242                           
  9243                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9244  00194C  968B               	bcf	3979,3,c	;volatile
  9245                           
  9246                           ;leds.c: 118: break;
  9247  00194E  0012               	return	
  9248  001950                     i2l3050:
  9249  001950  502A               	movf	LED_Off@led,w,c
  9250                           
  9251                           ; Switch size 1, requested type "space"
  9252                           ; Number of cases is 5, Range of values is 0 to 4
  9253                           ; switch strategies available:
  9254                           ; Name         Instructions Cycles
  9255                           ; simple_byte           16     9 (average)
  9256                           ;	Chosen strategy is simple_byte
  9257  001952  B4D8               	btfsc	status,2,c
  9258  001954  0012               	return	
  9259  001956  0A01               	xorlw	1	; case 1
  9260  001958  E0F3               	bz	i2l256
  9261  00195A  0A03               	xorlw	3	; case 2
  9262  00195C  E0F3               	bz	i2l258
  9263  00195E  0A01               	xorlw	1	; case 3
  9264  001960  E0F3               	bz	i2l259
  9265  001962  0A07               	xorlw	7	; case 4
  9266  001964  E0F3               	bz	i2l260
  9267  001966  0012               	return		;funcret
  9268  001968                     __end_of_LED_Off:
  9269                           	opt stack 0
  9270                           tblptru	equ	0xFF8
  9271                           tblptrh	equ	0xFF7
  9272                           tblptrl	equ	0xFF6
  9273                           tablat	equ	0xFF5
  9274                           prodh	equ	0xFF4
  9275                           prodl	equ	0xFF3
  9276                           intcon	equ	0xFF2
  9277                           postinc0	equ	0xFEE
  9278                           wreg	equ	0xFE8
  9279                           indf1	equ	0xFE7
  9280                           postdec1	equ	0xFE5
  9281                           fsr1h	equ	0xFE2
  9282                           fsr1l	equ	0xFE1
  9283                           indf2	equ	0xFDF
  9284                           postinc2	equ	0xFDE
  9285                           postdec2	equ	0xFDD
  9286                           plusw2	equ	0xFDB
  9287                           fsr2h	equ	0xFDA
  9288                           fsr2l	equ	0xFD9
  9289                           status	equ	0xFD8
  9290                           
  9291 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  9292 ;; Defined at:
  9293 ;;		line 53 in file "picLibs/app_device_cdc_basic.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2
  9302 ;; Tracked objects:
  9303 ;;		On entry : 3F/0
  9304 ;;		On exit  : 3F/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9307 ;;      Params:         0       0       0       0
  9308 ;;      Locals:         0       0       0       0
  9309 ;;      Temps:          0       0       0       0
  9310 ;;      Totals:         0       0       0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text52
  9321  001AAA                     __ptext52:
  9322                           	opt stack 0
  9323  001AAA                     _APP_DeviceCDCBasicDemoInitialize:
  9324                           	opt stack 23
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;app_device_cdc_basic.c: 55: line_coding.bCharFormat = 0;
  9328                           
  9329                           ;incstack = 0
  9330  001AAA  6B8E               	clrf	(_line_coding+4)& (0+255),b
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;app_device_cdc_basic.c: 56: line_coding.bDataBits = 8;
  9334  001AAC  0E08               	movlw	8
  9335  001AAE  6F90               	movwf	(_line_coding+6)& (0+255),b
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;app_device_cdc_basic.c: 57: line_coding.bParityType = 0;
  9339  001AB0  6B8F               	clrf	(_line_coding+5)& (0+255),b
  9340                           
  9341                           ;app_device_cdc_basic.c: 58: line_coding.dwDTERate = 9600;
  9342  001AB2  0E80               	movlw	128
  9343  001AB4  6F8A               	movwf	_line_coding& (0+255),b
  9344  001AB6  0E25               	movlw	37
  9345  001AB8  6F8B               	movwf	(_line_coding+1)& (0+255),b
  9346  001ABA  0E00               	movlw	0
  9347  001ABC  6B8C               	clrf	(_line_coding+2)& (0+255),b
  9348  001ABE  6B8D               	clrf	(_line_coding+3)& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;app_device_cdc_basic.c: 60: buttonPressed = 0;
  9352  001AC0  6B7F               	clrf	_buttonPressed& (0+255),b
  9353                           
  9354                           ; BSR set to: 0
  9355  001AC2  0012               	return		;funcret
  9356  001AC4                     __end_of_APP_DeviceCDCBasicDemoInitialize:
  9357                           	opt stack 0
  9358                           tblptru	equ	0xFF8
  9359                           tblptrh	equ	0xFF7
  9360                           tblptrl	equ	0xFF6
  9361                           tablat	equ	0xFF5
  9362                           prodh	equ	0xFF4
  9363                           prodl	equ	0xFF3
  9364                           intcon	equ	0xFF2
  9365                           postinc0	equ	0xFEE
  9366                           wreg	equ	0xFE8
  9367                           indf1	equ	0xFE7
  9368                           postdec1	equ	0xFE5
  9369                           fsr1h	equ	0xFE2
  9370                           fsr1l	equ	0xFE1
  9371                           indf2	equ	0xFDF
  9372                           postinc2	equ	0xFDE
  9373                           postdec2	equ	0xFDD
  9374                           plusw2	equ	0xFDB
  9375                           fsr2h	equ	0xFDA
  9376                           fsr2l	equ	0xFD9
  9377                           status	equ	0xFD8
  9378                           
  9379 ;; *************** function _USBCtrlTrfOutHandler *****************
  9380 ;; Defined at:
  9381 ;;		line 2538 in file "picLibs/usb_device.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 3F/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9395 ;;      Params:         0       0       0       0
  9396 ;;      Locals:         0       0       0       0
  9397 ;;      Temps:          0       0       0       0
  9398 ;;      Totals:         0       0       0       0
  9399 ;;Total ram usage:        0 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    2
  9402 ;; This function calls:
  9403 ;;		_USBCtrlTrfRxService
  9404 ;; This function is called by:
  9405 ;;		_USBCtrlEPService
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text53
  9410  0019FE                     __ptext53:
  9411                           	opt stack 0
  9412  0019FE                     _USBCtrlTrfOutHandler:
  9413                           	opt stack 21
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;incstack = 0
  9420  0019FE  0E02               	movlw	2
  9421  001A00  1826               	xorwf	_controlTransferState,w,c	;volatile
  9422  001A02  E102               	bnz	i2l651
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;usb_device.c: 2541: {
  9426                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9427  001A04  EFA4  F005         	goto	_USBCtrlTrfRxService	;wreg free
  9428  001A08                     i2l651:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;usb_device.c: 2544: else
  9432                           ;usb_device.c: 2545: {
  9433                           ;usb_device.c: 2548: controlTransferState = 0;
  9434  001A08  6A26               	clrf	_controlTransferState,c	;volatile
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9438  001A0A  5022               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9439  001A0C  E106               	bnz	i2l653
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;usb_device.c: 2556: {
  9443                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9444                           
  9445                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9449  001A0E  EC94  F007         	call	PL2	;call to abstracted procedure
  9450  001A12  0E0C               	movlw	12
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9454  001A14  ECEF  F005         	call	PL10	;call to abstracted procedure
  9455                           
  9456                           ;usb_device.c: 2561: }
  9457  001A18  0C00               	retlw	0
  9458  001A1A                     i2l653:
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;usb_device.c: 2562: else
  9462                           ;usb_device.c: 2563: {
  9463                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9464  001A1A  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9465  001A1C  0012               	return		;funcret
  9466  001A1E                     __end_of_USBCtrlTrfOutHandler:
  9467                           	opt stack 0
  9468                           tblptru	equ	0xFF8
  9469                           tblptrh	equ	0xFF7
  9470                           tblptrl	equ	0xFF6
  9471                           tablat	equ	0xFF5
  9472                           prodh	equ	0xFF4
  9473                           prodl	equ	0xFF3
  9474                           intcon	equ	0xFF2
  9475                           postinc0	equ	0xFEE
  9476                           wreg	equ	0xFE8
  9477                           indf1	equ	0xFE7
  9478                           postdec1	equ	0xFE5
  9479                           fsr1h	equ	0xFE2
  9480                           fsr1l	equ	0xFE1
  9481                           indf2	equ	0xFDF
  9482                           postinc2	equ	0xFDE
  9483                           postdec2	equ	0xFDD
  9484                           plusw2	equ	0xFDB
  9485                           fsr2h	equ	0xFDA
  9486                           fsr2l	equ	0xFD9
  9487                           status	equ	0xFD8
  9488                           
  9489 ;; *************** function _USBCtrlTrfRxService *****************
  9490 ;; Defined at:
  9491 ;;		line 1852 in file "picLibs/usb_device.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;		None
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  byteToRead      1    1[COMRAM] unsigned char 
  9496 ;;  i               1    0[COMRAM] unsigned char 
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 3F/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9506 ;;      Params:         0       0       0       0
  9507 ;;      Locals:         2       0       0       0
  9508 ;;      Temps:          0       0       0       0
  9509 ;;      Totals:         2       0       0       0
  9510 ;;Total ram usage:        2 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:    1
  9513 ;; This function calls:
  9514 ;;		_USBCtrlEPAllowStatusStage
  9515 ;; This function is called by:
  9516 ;;		_USBCtrlTrfOutHandler
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text54
  9521  000B48                     __ptext54:
  9522                           	opt stack 0
  9523  000B48                     _USBCtrlTrfRxService:
  9524                           	opt stack 21
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;usb_device.c: 1854: uint8_t byteToRead;
  9528                           ;usb_device.c: 1855: uint8_t i;
  9529                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9530                           
  9531                           ;incstack = 0
  9532  000B48  EE20 F001          	lfsr	2,1
  9533  000B4C  EC25  F009         	call	PL62	;call to abstracted procedure
  9534  000B50  50DF               	movf	indf2,w,c
  9535  000B52  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9539  000B54  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9540  000B56  5C05               	subwf	_outPipes+4,w,c	;volatile
  9541  000B58  0E00               	movlw	0
  9542  000B5A  5806               	subwfb	_outPipes+5,w,c	;volatile
  9543  000B5C  E202               	bc	i2l3592
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;usb_device.c: 1866: {
  9547                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9548  000B5E  C005  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9549  000B62                     i2l3592:
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;usb_device.c: 1868: }
  9553                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9554  000B62  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9555  000B64  5E05               	subwf	_outPipes+4,f,c	;volatile
  9556  000B66  0E00               	movlw	0
  9557  000B68  5A06               	subwfb	_outPipes+5,f,c	;volatile
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9561  000B6A  6A2A               	clrf	USBCtrlTrfRxService@i,c
  9562  000B6C  D00A               	goto	i2l3602
  9563  000B6E                     i2l3596:
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;usb_device.c: 1875: {
  9567                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9568  000B6E  0E38               	movlw	56
  9569  000B70  242A               	addwf	USBCtrlTrfRxService@i,w,c
  9570  000B72  D842               	call	PL110	;call to abstracted procedure
  9571  000B74  5001               	movf	_outPipes,w,c	;volatile
  9572  000B76  6EE1               	movwf	fsr1l,c
  9573  000B78  6AE2               	clrf	fsr1h,c
  9574  000B7A  CFDF FFE7          	movff	indf2,indf1
  9575                           
  9576                           ; BSR set to: 0
  9577  000B7E  2A01               	incf	_outPipes,f,c	;volatile
  9578                           
  9579                           ; BSR set to: 0
  9580  000B80  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  9581  000B82                     i2l3602:
  9582                           
  9583                           ; BSR set to: 0
  9584  000B82  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9585  000B84  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  9586  000B86  E3F3               	bnc	i2l3596
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;usb_device.c: 1877: }
  9590                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9591  000B88  5005               	movf	_outPipes+4,w,c	;volatile
  9592  000B8A  1006               	iorwf	_outPipes+5,w,c	;volatile
  9593  000B8C  E014               	bz	i2l3618
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;usb_device.c: 1882: {
  9597                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9598  000B8E  EE20 F001          	lfsr	2,1
  9599  000B92  D81B               	call	PL4	;call to abstracted procedure
  9600                           
  9601                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9602  000B94  D81F               	call	PL6	;call to abstracted procedure
  9603  000B96  D819               	call	PL4	;call to abstracted procedure
  9604  000B98  0E38               	movlw	56
  9605  000B9A  EC2A  F009         	call	PL64	;call to abstracted procedure
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9609  000B9E  EC3D  F00C         	call	PL28	;call to abstracted procedure
  9610  000BA2  BCDF               	btfsc	indf2,6,c
  9611  000BA4  D004               	goto	i2l3614
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;usb_device.c: 1886: {
  9615                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9616  000BA6  D823               	call	PL12	;call to abstracted procedure
  9617  000BA8  0E48               	movlw	72
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9621  000BAA  D819               	call	PL10	;call to abstracted procedure
  9622                           
  9623                           ;usb_device.c: 1889: }
  9624  000BAC  0C00               	retlw	0
  9625  000BAE                     i2l3614:
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;usb_device.c: 1890: else
  9629                           ;usb_device.c: 1891: {
  9630                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9631  000BAE  D81F               	call	PL12	;call to abstracted procedure
  9632  000BB0  0E08               	movlw	8
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9636  000BB2  D815               	call	PL10	;call to abstracted procedure
  9637  000BB4  0C00               	retlw	0
  9638  000BB6                     i2l3618:
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;usb_device.c: 1896: else
  9642                           ;usb_device.c: 1897: {
  9643                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9644                           
  9645                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9649  000BB6  EC94  F007         	call	PL2	;call to abstracted procedure
  9650  000BBA  0E04               	movlw	4
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9654  000BBC  D810               	call	PL10	;call to abstracted procedure
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;usb_device.c: 1926: }
  9658                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9659                           
  9660                           ; BSR set to: 0
  9661                           ;usb_device.c: 1915: {
  9662                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9663  000BBE  9E04               	bcf	_outPipes+3,7,c	;volatile
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9667  000BC0  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9668  000BC2  B4D8               	btfsc	status,2,c
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;usb_device.c: 1942: {
  9672                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9673  000BC4  ECF3  F008         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9674  000BC8  0012               	return		;funcret
  9675  000BCA                     __end_of_USBCtrlTrfRxService:
  9676                           	opt stack 0
  9677  000BCA                     PL4:
  9678                           	opt stack 20
  9679  000BCA  5015               	movf	_pBDTEntryEP0OutNext,w,c
  9680  000BCC  26D9               	addwf	fsr2l,f,c
  9681  000BCE  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  9682  000BD0  22DA               	addwfc	fsr2h,f,c
  9683  000BD2  0012               	return	
  9684  000BD4                     __end_ofPL4:
  9685                           	opt stack 0
  9686  000BD4                     PL6:
  9687                           	opt stack 20
  9688  000BD4  0E08               	movlw	8
  9689  000BD6  6EDF               	movwf	indf2,c
  9690  000BD8  EE20 F002          	lfsr	2,2
  9691  000BDC  0C08               	retlw	8
  9692  000BDE                     __end_ofPL6:
  9693                           	opt stack 0
  9694  000BDE                     PL10:
  9695                           	opt stack 20
  9696  000BDE  6EDF               	movwf	indf2,c
  9697  000BE0  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9698  000BE4  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9699  000BE8  0E00               	movlw	0
  9700  000BEA  8EDB               	bsf	plusw2,7,c
  9701  000BEC  0C00               	retlw	0
  9702  000BEE                     __end_ofPL10:
  9703                           	opt stack 0
  9704  000BEE                     PL12:
  9705                           	opt stack 17
  9706  000BEE  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9707  000BF2  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9708  000BF6  0012               	return	
  9709  000BF8                     __end_ofPL12:
  9710                           	opt stack 0
  9711  000BF8                     PL110:
  9712                           	opt stack 18
  9713  000BF8  6ED9               	movwf	fsr2l,c
  9714  000BFA  6ADA               	clrf	fsr2h,c
  9715  000BFC  0E02               	movlw	2
  9716  000BFE  22DA               	addwfc	fsr2h,f,c
  9717  000C00  0C02               	retlw	2
  9718  000C02                     __end_ofPL110:
  9719                           	opt stack 0
  9720                           tblptru	equ	0xFF8
  9721                           tblptrh	equ	0xFF7
  9722                           tblptrl	equ	0xFF6
  9723                           tablat	equ	0xFF5
  9724                           prodh	equ	0xFF4
  9725                           prodl	equ	0xFF3
  9726                           intcon	equ	0xFF2
  9727                           postinc0	equ	0xFEE
  9728                           wreg	equ	0xFE8
  9729                           indf1	equ	0xFE7
  9730                           postdec1	equ	0xFE5
  9731                           fsr1h	equ	0xFE2
  9732                           fsr1l	equ	0xFE1
  9733                           indf2	equ	0xFDF
  9734                           postinc2	equ	0xFDE
  9735                           postdec2	equ	0xFDD
  9736                           plusw2	equ	0xFDB
  9737                           fsr2h	equ	0xFDA
  9738                           fsr2l	equ	0xFD9
  9739                           status	equ	0xFD8
  9740                           
  9741 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9742 ;; Defined at:
  9743 ;;		line 1416 in file "picLibs/usb_device.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;		None
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;		None
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9757 ;;      Params:         0       0       0       0
  9758 ;;      Locals:         0       0       0       0
  9759 ;;      Temps:          0       0       0       0
  9760 ;;      Totals:         0       0       0       0
  9761 ;;Total ram usage:        0 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_USBDeviceTasks
  9767 ;;		_USBCtrlEPServiceComplete
  9768 ;;		_USBCtrlTrfRxService
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text55
  9773  0011E6                     __ptext55:
  9774                           	opt stack 0
  9775  0011E6                     _USBCtrlEPAllowStatusStage:
  9776                           	opt stack 21
  9777                           
  9778                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9779                           
  9780                           ;incstack = 0
  9781  0011E6  501F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  9782  0011E8  A4D8               	btfss	status,2,c
  9783  0011EA  0012               	return	
  9784                           
  9785                           ;usb_device.c: 1424: {
  9786                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9787  0011EC  0E01               	movlw	1
  9788  0011EE  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9789                           
  9790                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9791  0011F0  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  9792  0011F2  A4D8               	btfss	status,2,c
  9793  0011F4  0012               	return	
  9794                           
  9795                           ;usb_device.c: 1427: {
  9796                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9797  0011F6  0E01               	movlw	1
  9798  0011F8  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9799                           
  9800                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9801  0011FA  0E02               	movlw	2
  9802  0011FC  1826               	xorwf	_controlTransferState,w,c	;volatile
  9803  0011FE  E10A               	bnz	i2l3318
  9804                           
  9805                           ;usb_device.c: 1433: {
  9806                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9807  001200  EE20 F001          	lfsr	2,1
  9808  001204  EC00  F007         	call	PL66	;call to abstracted procedure
  9809  001208  6ADF               	clrf	indf2,c
  9810                           
  9811                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9812  00120A  EC29  F008         	call	PL16	;call to abstracted procedure
  9813  00120E  0E48               	movlw	72
  9814                           
  9815                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9816                           
  9817                           ;usb_device.c: 1437: }
  9818  001210  EF21  F008         	goto	PL8	;call to abstracted procedure
  9819  001214                     i2l3318:
  9820                           
  9821                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9822  001214  0426               	decf	_controlTransferState,w,c	;volatile
  9823  001216  A4D8               	btfss	status,2,c
  9824  001218  0012               	return	
  9825                           
  9826                           ;usb_device.c: 1439: {
  9827                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9828  00121A  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9829                           
  9830                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9831  00121C  EE20 F001          	lfsr	2,1
  9832  001220  D814               	call	PL62	;call to abstracted procedure
  9833                           
  9834                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  9835  001222  ECEA  F005         	call	PL6	;call to abstracted procedure
  9836  001226  D811               	call	PL62	;call to abstracted procedure
  9837  001228  0E30               	movlw	48
  9838  00122A  D814               	call	PL64	;call to abstracted procedure
  9839                           
  9840                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9841  00122C  EC3D  F00C         	call	PL28	;call to abstracted procedure
  9842  001230  0E04               	movlw	4
  9843  001232  6EDF               	movwf	indf2,c
  9844                           
  9845                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9846  001234  EC3D  F00C         	call	PL28	;call to abstracted procedure
  9847  001238  0E00               	movlw	0
  9848  00123A  8EDB               	bsf	plusw2,7,c
  9849                           
  9850                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9851  00123C  0E01               	movlw	1
  9852  00123E  6E22               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9853                           
  9854                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9855                           
  9856                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9857                           
  9858                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9859  001240  EC94  F007         	call	PL2	;call to abstracted procedure
  9860  001244  0E80               	movlw	128
  9861  001246  6EDF               	movwf	indf2,c
  9862  001248  0C80               	retlw	128
  9863  00124A                     __end_of_USBCtrlEPAllowStatusStage:
  9864                           	opt stack 0
  9865  00124A                     PL62:
  9866                           	opt stack 17
  9867  00124A  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
  9868  00124C  26D9               	addwf	fsr2l,f,c
  9869  00124E  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9870  001250  22DA               	addwfc	fsr2h,f,c
  9871  001252  0012               	return	
  9872  001254                     __end_ofPL62:
  9873                           	opt stack 0
  9874  001254                     PL64:
  9875                           	opt stack 21
  9876  001254  6EDE               	movwf	postinc2,c
  9877  001256  0E02               	movlw	2
  9878  001258  6EDD               	movwf	postdec2,c
  9879  00125A  0C02               	retlw	2
  9880  00125C                     __end_ofPL64:
  9881                           	opt stack 0
  9882                           tblptru	equ	0xFF8
  9883                           tblptrh	equ	0xFF7
  9884                           tblptrl	equ	0xFF6
  9885                           tablat	equ	0xFF5
  9886                           prodh	equ	0xFF4
  9887                           prodl	equ	0xFF3
  9888                           intcon	equ	0xFF2
  9889                           postinc0	equ	0xFEE
  9890                           wreg	equ	0xFE8
  9891                           indf1	equ	0xFE7
  9892                           postdec1	equ	0xFE5
  9893                           fsr1h	equ	0xFE2
  9894                           fsr1l	equ	0xFE1
  9895                           indf2	equ	0xFDF
  9896                           postinc2	equ	0xFDE
  9897                           postdec2	equ	0xFDD
  9898                           plusw2	equ	0xFDB
  9899                           fsr2h	equ	0xFDA
  9900                           fsr2l	equ	0xFD9
  9901                           status	equ	0xFD8
  9902                           
  9903 ;; *************** function _USBCtrlTrfInHandler *****************
  9904 ;; Defined at:
  9905 ;;		line 2592 in file "picLibs/usb_device.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;		None
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  lastDTS         1    1[COMRAM] unsigned char 
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 3F/0
  9916 ;;		On exit  : 3F/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9919 ;;      Params:         0       0       0       0
  9920 ;;      Locals:         1       0       0       0
  9921 ;;      Temps:          0       0       0       0
  9922 ;;      Totals:         1       0       0       0
  9923 ;;Total ram usage:        1 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; Hardware stack levels required when called:    1
  9926 ;; This function calls:
  9927 ;;		_USBCtrlTrfTxService
  9928 ;; This function is called by:
  9929 ;;		_USBCtrlEPService
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text56
  9934  000FE6                     __ptext56:
  9935                           	opt stack 0
  9936  000FE6                     _USBCtrlTrfInHandler:
  9937                           	opt stack 0
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;usb_device.c: 2594: uint8_t lastDTS;
  9941                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9942                           
  9943                           ;incstack = 0
  9944  000FE6  D835               	call	PL16	;call to abstracted procedure
  9945  000FE8  0E00               	movlw	0
  9946  000FEA  BCDF               	btfsc	indf2,6,c
  9947  000FEC  0E01               	movlw	1
  9948  000FEE  6E2B               	movwf	USBCtrlTrfInHandler@lastDTS,c
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9952  000FF0  0E04               	movlw	4
  9953  000FF2  1A0F               	xorwf	_pBDTEntryIn,f,c
  9954  000FF4  5010               	movf	_pBDTEntryIn+1,w,c
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9958  000FF6  0E08               	movlw	8
  9959  000FF8  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  9960  000FFA  E10B               	bnz	i2l3800
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;usb_device.c: 2605: {
  9964                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9965  000FFC  0102               	movlb	2	; () banked
  9966  000FFE  5132               	movf	50,w,b	;volatile
  9967  001000  0B7F               	andlw	127
  9968  001002  010F               	movlb	15	; () banked
  9969  001004  6F5C               	movwf	92,b	;volatile
  9970                           
  9971                           ; BSR set to: 15
  9972                           ;usb_device.c: 2607: if(UADDR != 0u)
  9973  001006  515C               	movf	92,w,b
  9974                           
  9975                           ; BSR set to: 15
  9976                           ;usb_device.c: 2608: {
  9977                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9978  001008  0E10               	movlw	16
  9979  00100A  B4D8               	btfsc	status,2,c
  9980                           
  9981                           ; BSR set to: 15
  9982                           ;usb_device.c: 2611: else
  9983                           ;usb_device.c: 2612: {
  9984                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9985  00100C  0E04               	movlw	4
  9986                           
  9987                           ;usb_device.c: 2610: }
  9988  00100E  0100               	movlb	0	; () banked
  9989  001010  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  9990  001012                     i2l3800:
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;usb_device.c: 2614: }
  9994                           ;usb_device.c: 2615: }
  9995                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9996  001012  0426               	decf	_controlTransferState,w,c	;volatile
  9997  001014  E112               	bnz	i2l661
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;usb_device.c: 2619: {
 10001                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 10002  001016  D828               	call	PL44	;call to abstracted procedure
 10003  001018  D821               	call	PL38	;call to abstracted procedure
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10007  00101A  ECB9  F006         	call	_USBCtrlTrfTxService	;wreg free
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10011  00101E  0E02               	movlw	2
 10012  001020  1827               	xorwf	_shortPacketStatus,w,c	;volatile
 10013  001022  E103               	bnz	i2l3812
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;usb_device.c: 2628: {
 10017                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10018  001024  D816               	call	PL16	;call to abstracted procedure
 10019  001026  0E04               	movlw	4
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10023                           
 10024                           ;usb_device.c: 2633: }
 10025  001028  D00C               	goto	PL8	;call to abstracted procedure
 10026  00102A                     i2l3812:
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;usb_device.c: 2634: else
 10030                           ;usb_device.c: 2635: {
 10031                           ;usb_device.c: 2636: if(lastDTS == 0)
 10032  00102A  502B               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10033  00102C  E103               	bnz	i2l3818
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;usb_device.c: 2637: {
 10037                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10038  00102E  D811               	call	PL16	;call to abstracted procedure
 10039  001030  0E48               	movlw	72
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10043                           
 10044                           ;usb_device.c: 2640: }
 10045  001032  D007               	goto	PL8	;call to abstracted procedure
 10046  001034                     i2l3818:
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;usb_device.c: 2641: else
 10050                           ;usb_device.c: 2642: {
 10051                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10052  001034  D80E               	call	PL16	;call to abstracted procedure
 10053  001036  0E08               	movlw	8
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10057  001038  D004               	goto	PL8	;call to abstracted procedure
 10058  00103A                     i2l661:
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;usb_device.c: 2648: else
 10062                           ;usb_device.c: 2649: {
 10063                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10064  00103A  BE04               	btfsc	_outPipes+3,7,c	;volatile
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;usb_device.c: 2658: }
 10068                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;usb_device.c: 2656: {
 10072                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10073  00103C  9E04               	bcf	_outPipes+3,7,c	;volatile
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;usb_device.c: 2660: }
 10077                           ;usb_device.c: 2662: controlTransferState = 0;
 10078  00103E  6A26               	clrf	_controlTransferState,c	;volatile
 10079                           
 10080                           ; BSR set to: 0
 10081  001040  0012               	return		;funcret
 10082  001042                     __end_of_USBCtrlTrfInHandler:
 10083                           	opt stack 0
 10084  001042                     PL8:
 10085                           	opt stack 20
 10086  001042  6EDF               	movwf	indf2,c
 10087  001044  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10088  001048  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10089  00104C  0E00               	movlw	0
 10090  00104E  8EDB               	bsf	plusw2,7,c
 10091  001050  0C00               	retlw	0
 10092  001052                     __end_ofPL8:
 10093                           	opt stack 0
 10094  001052                     PL16:
 10095                           	opt stack 24
 10096  001052  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10097  001056  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10098  00105A  0012               	return	
 10099  00105C                     __end_ofPL16:
 10100                           	opt stack 0
 10101  00105C                     PL38:
 10102                           	opt stack 20
 10103  00105C  22DA               	addwfc	fsr2h,f,c
 10104  00105E  0E38               	movlw	56
 10105  001060  6EDE               	movwf	postinc2,c
 10106  001062  0E02               	movlw	2
 10107  001064  6EDD               	movwf	postdec2,c
 10108  001066  0C02               	retlw	2
 10109  001068                     __end_ofPL38:
 10110                           	opt stack 0
 10111  001068                     PL44:
 10112                           	opt stack 20
 10113  001068  EE20 F002          	lfsr	2,2
 10114  00106C  500F               	movf	_pBDTEntryIn,w,c
 10115  00106E  26D9               	addwf	fsr2l,f,c
 10116  001070  5010               	movf	_pBDTEntryIn+1,w,c
 10117  001072  0012               	return	
 10118  001074                     __end_ofPL44:
 10119                           	opt stack 0
 10120                           tblptru	equ	0xFF8
 10121                           tblptrh	equ	0xFF7
 10122                           tblptrl	equ	0xFF6
 10123                           tablat	equ	0xFF5
 10124                           prodh	equ	0xFF4
 10125                           prodl	equ	0xFF3
 10126                           intcon	equ	0xFF2
 10127                           postinc0	equ	0xFEE
 10128                           wreg	equ	0xFE8
 10129                           indf1	equ	0xFE7
 10130                           postdec1	equ	0xFE5
 10131                           fsr1h	equ	0xFE2
 10132                           fsr1l	equ	0xFE1
 10133                           indf2	equ	0xFDF
 10134                           postinc2	equ	0xFDE
 10135                           postdec2	equ	0xFDD
 10136                           plusw2	equ	0xFDB
 10137                           fsr2h	equ	0xFDA
 10138                           fsr2l	equ	0xFD9
 10139                           status	equ	0xFD8
 10140                           
 10141 ;; *************** function _USBCtrlTrfTxService *****************
 10142 ;; Defined at:
 10143 ;;		line 1771 in file "picLibs/usb_device.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;		None
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  1    wreg      void 
 10150 ;; Registers used:
 10151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10152 ;; Tracked objects:
 10153 ;;		On entry : 3D/2
 10154 ;;		On exit  : 3F/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10157 ;;      Params:         0       0       0       0
 10158 ;;      Locals:         1       0       0       0
 10159 ;;      Temps:          0       0       0       0
 10160 ;;      Totals:         1       0       0       0
 10161 ;;Total ram usage:        1 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_USBCtrlEPAllowDataStage
 10167 ;;		_USBCtrlTrfInHandler
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text57
 10172  000D72                     __ptext57:
 10173                           	opt stack 0
 10174  000D72                     _USBCtrlTrfTxService:
 10175                           	opt stack 20
 10176                           
 10177                           ;usb_device.c: 1773: uint8_t byteToSend;
 10178                           ;usb_device.c: 1777: byteToSend = 8;
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;incstack = 0
 10182  000D72  0E08               	movlw	8
 10183  000D74  6E2A               	movwf	USBCtrlTrfTxService@byteToSend,c
 10184                           
 10185                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10186  000D76  500E               	movf	_inPipes+5,w,c	;volatile
 10187  000D78  E10D               	bnz	i2l3266
 10188  000D7A  0E08               	movlw	8
 10189  000D7C  5C0D               	subwf	_inPipes+4,w,c	;volatile
 10190  000D7E  E20A               	bc	i2l3266
 10191                           
 10192                           ;usb_device.c: 1779: {
 10193                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10194  000D80  C00D  F02A         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10195                           
 10196                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10197  000D84  5027               	movf	_shortPacketStatus,w,c	;volatile
 10198  000D86  E102               	bnz	i2l3262
 10199                           
 10200                           ;usb_device.c: 1788: {
 10201                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10202  000D88  0E01               	movlw	1
 10203  000D8A  D003               	goto	L16
 10204  000D8C                     i2l3262:
 10205                           
 10206                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10207  000D8C  0427               	decf	_shortPacketStatus,w,c	;volatile
 10208  000D8E  E102               	bnz	i2l3266
 10209                           
 10210                           ;usb_device.c: 1792: {
 10211                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10212  000D90  0E02               	movlw	2
 10213  000D92                     L16:
 10214  000D92  6E27               	movwf	_shortPacketStatus,c	;volatile
 10215  000D94                     i2l3266:
 10216                           
 10217                           ;usb_device.c: 1794: }
 10218                           ;usb_device.c: 1795: }
 10219                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10220  000D94  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10221  000D96  5E0D               	subwf	_inPipes+4,f,c	;volatile
 10222  000D98  0E00               	movlw	0
 10223  000D9A  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 10224                           
 10225                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10226  000D9C  EE20 F001          	lfsr	2,1
 10227  000DA0  D82F               	call	PL66	;call to abstracted procedure
 10228  000DA2  C02A  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10229                           
 10230                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10231  000DA6  0E38               	movlw	56
 10232  000DA8  0100               	movlb	0	; () banked
 10233  000DAA  6F7A               	movwf	_pDst& (0+255),b
 10234  000DAC  0E02               	movlw	2
 10235  000DAE  6F7B               	movwf	(_pDst+1)& (0+255),b
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10239  000DB0  B00C               	btfsc	_inPipes+3,0,c	;volatile
 10240  000DB2  D01A               	goto	i2l3294
 10241  000DB4  D00B               	goto	i2l3284
 10242  000DB6                     i2l3276:
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;usb_device.c: 1812: {
 10246                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10247  000DB6  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10248  000DBA  D819               	call	PL54	;call to abstracted procedure
 10249  000DBC  64F7               	cpfsgt	tblptrh,c
 10250  000DBE  D003               	bra	i2u198_47
 10251  000DC0  0008               	tblrd		*
 10252  000DC2  50F5               	movf	tablat,w,c
 10253  000DC4  D002               	bra	i2u198_40
 10254  000DC6                     i2u198_47:
 10255  000DC6  EC27  F005         	call	PL18	;call to abstracted procedure
 10256  000DCA                     i2u198_40:
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;usb_device.c: 1814: byteToSend--;
 10260  000DCA  D81F               	call	PL68	;call to abstracted procedure
 10261  000DCC                     i2l3284:
 10262                           
 10263                           ; BSR set to: 0
 10264  000DCC  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10265  000DCE  E1F3               	bnz	i2l3276
 10266  000DD0  0012               	return	
 10267  000DD2                     i2l3286:
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;usb_device.c: 1820: {
 10271                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10272  000DD2  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10273  000DD6  D80B               	call	PL54	;call to abstracted procedure
 10274  000DD8  64F7               	cpfsgt	tblptrh,c
 10275  000DDA  D003               	bra	i2u200_47
 10276  000DDC  0008               	tblrd		*
 10277  000DDE  50F5               	movf	tablat,w,c
 10278  000DE0  D002               	bra	i2u200_40
 10279  000DE2                     i2u200_47:
 10280  000DE2  EC27  F005         	call	PL18	;call to abstracted procedure
 10281  000DE6                     i2u200_40:
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;usb_device.c: 1822: byteToSend--;
 10285  000DE6  D811               	call	PL68	;call to abstracted procedure
 10286  000DE8                     i2l3294:
 10287                           
 10288                           ; BSR set to: 0
 10289  000DE8  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10290  000DEA  E1F3               	bnz	i2l3286
 10291                           
 10292                           ; BSR set to: 0
 10293  000DEC  0012               	return		;funcret
 10294  000DEE                     __end_of_USBCtrlTrfTxService:
 10295                           	opt stack 0
 10296  000DEE                     PL54:
 10297                           	opt stack 20
 10298  000DEE  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10299  000DF2  6AF8               	clrf	tblptru,c
 10300  000DF4  C07A  FFD9         	movff	_pDst,fsr2l
 10301  000DF8  C07B  FFDA         	movff	_pDst+1,fsr2h
 10302  000DFC  0E02               	movlw	(high __ramtop+-1)
 10303  000DFE  0012               	return	
 10304  000E00                     __end_ofPL54:
 10305                           	opt stack 0
 10306  000E00                     PL66:
 10307                           	opt stack 21
 10308  000E00  500F               	movf	_pBDTEntryIn,w,c
 10309  000E02  26D9               	addwf	fsr2l,f,c
 10310  000E04  5010               	movf	_pBDTEntryIn+1,w,c
 10311  000E06  22DA               	addwfc	fsr2h,f,c
 10312  000E08  0012               	return	
 10313  000E0A                     __end_ofPL66:
 10314                           	opt stack 0
 10315  000E0A                     PL68:
 10316                           	opt stack 20
 10317  000E0A  6EDF               	movwf	indf2,c
 10318  000E0C  4A09               	infsnz	_inPipes,f,c	;volatile
 10319  000E0E  2A0A               	incf	_inPipes+1,f,c	;volatile
 10320  000E10  0100               	movlb	0	; () banked
 10321  000E12  4B7A               	infsnz	_pDst& (0+255),f,b
 10322  000E14  2B7B               	incf	(_pDst+1)& (0+255),f,b
 10323  000E16  062A               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10324  000E18  0012               	return	
 10325  000E1A                     __end_ofPL68:
 10326                           	opt stack 0
 10327                           tblptru	equ	0xFF8
 10328                           tblptrh	equ	0xFF7
 10329                           tblptrl	equ	0xFF6
 10330                           tablat	equ	0xFF5
 10331                           prodh	equ	0xFF4
 10332                           prodl	equ	0xFF3
 10333                           intcon	equ	0xFF2
 10334                           postinc0	equ	0xFEE
 10335                           wreg	equ	0xFE8
 10336                           indf1	equ	0xFE7
 10337                           postdec1	equ	0xFE5
 10338                           fsr1h	equ	0xFE2
 10339                           fsr1l	equ	0xFE1
 10340                           indf2	equ	0xFDF
 10341                           postinc2	equ	0xFDE
 10342                           postdec2	equ	0xFDD
 10343                           plusw2	equ	0xFDB
 10344                           fsr2h	equ	0xFDA
 10345                           fsr2l	equ	0xFD9
 10346                           status	equ	0xFD8
 10347                           tblptru	equ	0xFF8
 10348                           tblptrh	equ	0xFF7
 10349                           tblptrl	equ	0xFF6
 10350                           tablat	equ	0xFF5
 10351                           prodh	equ	0xFF4
 10352                           prodl	equ	0xFF3
 10353                           intcon	equ	0xFF2
 10354                           postinc0	equ	0xFEE
 10355                           wreg	equ	0xFE8
 10356                           indf1	equ	0xFE7
 10357                           postdec1	equ	0xFE5
 10358                           fsr1h	equ	0xFE2
 10359                           fsr1l	equ	0xFE1
 10360                           indf2	equ	0xFDF
 10361                           postinc2	equ	0xFDE
 10362                           postdec2	equ	0xFDD
 10363                           plusw2	equ	0xFDB
 10364                           fsr2h	equ	0xFDA
 10365                           fsr2l	equ	0xFD9
 10366                           status	equ	0xFD8
 10367                           
 10368                           	psect	rparam
 10369  0000                     tblptru	equ	0xFF8
 10370                           tblptrh	equ	0xFF7
 10371                           tblptrl	equ	0xFF6
 10372                           tablat	equ	0xFF5
 10373                           prodh	equ	0xFF4
 10374                           prodl	equ	0xFF3
 10375                           intcon	equ	0xFF2
 10376                           postinc0	equ	0xFEE
 10377                           wreg	equ	0xFE8
 10378                           indf1	equ	0xFE7
 10379                           postdec1	equ	0xFE5
 10380                           fsr1h	equ	0xFE2
 10381                           fsr1l	equ	0xFE1
 10382                           indf2	equ	0xFDF
 10383                           postinc2	equ	0xFDE
 10384                           postdec2	equ	0xFDD
 10385                           plusw2	equ	0xFDB
 10386                           fsr2h	equ	0xFDA
 10387                           fsr2l	equ	0xFD9
 10388                           status	equ	0xFD8
 10389                           
 10390                           	psect	temp
 10391  000052                     btemp:
 10392                           	opt stack 0
 10393  000052                     	ds	1
 10394  0000                     int$flags	set	btemp
 10395                           tblptru	equ	0xFF8
 10396                           tblptrh	equ	0xFF7
 10397                           tblptrl	equ	0xFF6
 10398                           tablat	equ	0xFF5
 10399                           prodh	equ	0xFF4
 10400                           prodl	equ	0xFF3
 10401                           intcon	equ	0xFF2
 10402                           postinc0	equ	0xFEE
 10403                           wreg	equ	0xFE8
 10404                           indf1	equ	0xFE7
 10405                           postdec1	equ	0xFE5
 10406                           fsr1h	equ	0xFE2
 10407                           fsr1l	equ	0xFE1
 10408                           indf2	equ	0xFDF
 10409                           postinc2	equ	0xFDE
 10410                           postdec2	equ	0xFDD
 10411                           plusw2	equ	0xFDB
 10412                           fsr2h	equ	0xFDA
 10413                           fsr2l	equ	0xFD9
 10414                           status	equ	0xFD8
 10415                           tblptru	equ	0xFF8
 10416                           tblptrh	equ	0xFF7
 10417                           tblptrl	equ	0xFF6
 10418                           tablat	equ	0xFF5
 10419                           prodh	equ	0xFF4
 10420                           prodl	equ	0xFF3
 10421                           intcon	equ	0xFF2
 10422                           postinc0	equ	0xFEE
 10423                           wreg	equ	0xFE8
 10424                           indf1	equ	0xFE7
 10425                           postdec1	equ	0xFE5
 10426                           fsr1h	equ	0xFE2
 10427                           fsr1l	equ	0xFE1
 10428                           indf2	equ	0xFDF
 10429                           postinc2	equ	0xFDE
 10430                           postdec2	equ	0xFDD
 10431                           plusw2	equ	0xFDB
 10432                           fsr2h	equ	0xFDA
 10433                           fsr2l	equ	0xFD9
 10434                           status	equ	0xFD8


Data Sizes:
    Strings     41
    Constant    197
    Data        19
    BSS         220
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      81
    BANK0           160     36     106
    BANK1           256      0     128
    BANK2            64      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    putrsUSBUSART@data	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_2(CODE[41]), STR_1(CODE[3]), buttonMessage(BANK0[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_2(CODE[41]), STR_1(CODE[3]), buttonMessage(BANK0[18]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4450_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4450_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4450_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4450_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMh[64]), cdc_data_rx(BIGRAMh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2768$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2758$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2758$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2734$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2734$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2734$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2734$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_APP_DeviceCDCBasicDemoTasks
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_PIC18F26K40_readThreeBytes
    _getsUSBUSART->_USBTransferOnePacket
    _PIC18F26K40_readThreeBytes->_PIC18F26K40_sendByte
    _PIC18F26K40_loadPC->_PIC18F26K40_sendByte
    _PIC18F26K40_loadDataIntoNVM->_PIC18F26K40_sendByteMsbToLsb
    _PIC18F26K40_enterLowVoltageProg->_PIC18F26K40_sendByte
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12092
                                             34 BANK0      2     2      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK0      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                         10    10      0   10665
                                             24 BANK0     10    10      0
                   _BUTTON_IsPressed
                       _CDCTxService
    _PIC18F26K40_enterLowVoltageProg
     _PIC18F26K40_exitLowVoltageProg
        _PIC18F26K40_loadDataIntoNVM
                 _PIC18F26K40_loadPC
         _PIC18F26K40_readThreeBytes
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        7     5      2     476
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     1      3    2232
                                              9 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_readThreeBytes                          18    14      4    1639
                                              6 BANK0     18    14      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadPC                                   8     4      4    1647
                                              6 BANK0      8     4      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadDataIntoNVM                         10     5      5     505
                                              4 BANK0     10     5      5
       _PIC18F26K40_sendByteMsbToLsb
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByteMsbToLsb                         4     4      0     130
                                              0 BANK0      4     4      0
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_exitLowVoltageProg                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_enterLowVoltageProg                      4     4      0    1405
                                              6 BANK0      4     4      0
               _PIC18F26K40_sendByte
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByte                                 6     5      1    1269
                                              0 BANK0      6     5      1
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (4) _PIC18F26K40_setTrisToOut                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2129
                                              9 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1928
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SYS_InterruptHigh                                   10    10      0   30325
                                             30 COMRAM    10    10      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       1     1      0   30325
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     1     1      0   17702
                                             28 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               0     0      0   17063
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   12982
                                             27 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 1     1      0    4487
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    4460
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3989
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                          _CDCInitEP
                 _USBCheckCDCRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (8) i2_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (9) i2_LED_Enable                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_BUTTON_Enable                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i2_USBTransferOnePacket                               9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (8) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (9) _LED_On                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _LED_Off                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _PIC18F26K40_enterLowVoltageProg
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
       _PIC18F26K40_setTrisToOut
     _PIC18F26K40_exitLowVoltageProg
     _PIC18F26K40_loadDataIntoNVM
       _PIC18F26K40_sendByteMsbToLsb
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_loadPC
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_readThreeBytes
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            1FF      0       0      12        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      6A       5       66.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      51       1       86.2%
BIGRAMh             40      0       0      11        0.0%
BITBANK2            40      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13B       7        0.0%
DATA                 0      0     13B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 30 11:39:11 2017

                               _USB_SD_Ptr 0301                                         PL2 0F28  
                                       PL4 0BCA                                         PL6 0BD4  
                                       PL8 1042                                ?_LED_Enable 002A  
                            _USBDeviceInit 1418                         __size_of_CDCInitEP 0052  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                                      PL10 0BDE                                        PL20 0954  
                                      PL12 0BEE                                        PL30 1840  
                                      PL22 0542                                        PL14 0922  
                                      PL40 19D2                                        PL32 0A5A  
                                      PL24 0B08                                        PL16 1052  
                                      PL50 0E9E                                        PL42 08AA  
                                      PL34 097C                                        PL26 0B14  
                                      PL18 0A4E                                        PL60 057E  
                                      PL52 0D3A                                        PL44 1068  
                                      PL36 054C                                        PL28 187A  
                                      PL70 08C0                                        PL62 124A  
                                      PL54 0DEE                                        PL46 0B20  
                                      PL38 105C                                __CFG_LVP$ON 000000  
                                      PL80 09A0                                        PL72 11D8  
                                      PL64 1254                                        PL56 0562  
                                      PL48 0A72                                        PL90 0D60  
                                      PL82 0D4E                                        PL74 1158  
                                      PL66 0E00                                        PL58 0574  
                                      PL92 0B34                                        PL84 0D56  
                                      PL76 0994                                        PL68 0E0A  
                                      PL94 0EB2                                        PL86 07D8  
                                      PL78 0FDA                                        PL96 16CC  
                                      PL88 09AA                                        PL98 06D6  
     USER_USB_CALLBACK_EVENT_HANDLER@event 0036       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0038  
                                      l105 15D0                                        l106 15D2  
                                      l130 170C                                        l131 170E  
                                      l128 16E6                                        l228 1A94  
              __end_of_USBStdGetDscHandler 0A4E                                        l176 0592  
                                      l290 18C6                                        l179 05B8  
                                      l525 1834                                        l286 18BA  
                                      l526 1832                                        l288 18BE  
                                      l289 18C2                                        l815 1488  
                                      _BDT 000200                                        l829 0838  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                                      _UIE 000F60                                        _UIR 000F62  
                   _APP_LEDUpdateUSBStatus 133E                                 _USBSuspend 19BC  
                             __CFG_BORV$30 000000                       USBStdSetCfgHandler@i 003E  
                                      prod 000FF3                                        wreg 000FE8  
                           _USBDeviceTasks 06E2                             _USBDeviceState 0081  
                             __CFG_FOSC$XT 000000                              _BUTTON_Enable 1AE4  
                    ??_USBCtrlTrfRxService 002A                   __size_ofi2_USBDeviceInit 0048  
                           ??_getsUSBUSART 009F                                       PL100 12C4  
                                     PL110 0BF8                                       PL102 0D68  
                                     PL112 08D0                                       PL104 1A34  
                                     PL114 1ADE                                       PL106 1166  
                                     PL108 0B3E                   USBEnableEndpoint@options 0032  
                          __end_of_LED_Off 1968                 USBConfigureEndpoint@handle 0030  
                                     l5042 1896                                       l4542 159A  
                                     l4800 082A                                       l4632 0C14  
                                     l4546 15A4                                       l4650 0C38  
                                     l4634 0C1C                                       l4730 14C4  
                                     l4722 1492                                       l4708 1A9A  
                                     l4580 0A96                                       l4548 15AA  
                                     l4660 0C86                                       l4652 0C3E  
                                     l4814 0852                                       l4822 0864  
                                     l4806 083C                                       l4646 0C2E  
                                     l4750 1192                                       l4824 086A  
                                     l4832 087C                                       l4752 1196  
                                     l4760 11D4                                       l4586 0AB4  
                                     l4842 0890                                       l4834 0880  
                                     l4746 1184                                       l4922 069A  
                                     l4844 08A6                                       l4692 14FC  
                                     l4756 11B0                                       l4908 0644  
                                     l4924 06B6                                       l4932 06D2  
                                     l4940 1A4E                                       l4860 1972  
                                     l4598 0AEA                                       l4790 0802  
                                     l4694 1502                                       l4926 06B8  
                                     l4776 1A70                                       l4856 18CA  
                                     l4936 1A42                                       l4864 1982  
                                     l4794 080A                                       l4786 07FA  
                                     l4890 05E2                                       l4882 05BA  
                                     l4964 095E                                       l4958 143C  
                                     l4888 05D8                                       l4988 1450  
                    ??i2_SYSTEM_Initialize 002B                                       STR_1 03EC  
                                     STR_2 03C6                                       u4107 152C  
                                     u4117 1732                                       u3544 15C2  
                                     u3545 15BE                                       u4097 18A6  
                                     u3730 14C0                                       u3900 087A  
                                     u3574 16FE                                       u3575 16FA  
                                     u3664 0C5E                                       u3665 0C58  
                                     u3737 14BC                                       u3907 0876  
                                     u3880 0862                                       u3887 085E  
                    ??_USBCtrlTrfTxService 002A                                       _UCFG 000F61  
                                     _UEP0 000F53                                       _UEP1 000F54  
                                     _UEIE 000F5B                                       _UCON 000F64  
                                     _UEIR 000F5F                            _CDCDataInHandle 0076  
   USBStdFeatureReqHandler@current_ep_data 0042                                       _pDst 007A  
                                     _main 1884                   ??i2_USBTransferOnePacket 002E  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                          _USBDeviceAttach 181C                                       btemp 0052  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0062                   __size_ofi2_BUTTON_Enable 0006  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 0FDA  
                   ??_USBCtrlTrfOutHandler 002C                               ___param_bank 000000  
                ??_USBStdFeatureReqHandler 003E                     __size_of_putrsUSBUSART 005E  
                     _PIC18F26K40_sendByte 1590                   ??_USBStdGetStatusHandler 002A  
                           ?_USBDeviceInit 002A                              __CFG_PLLEN$ON 000000  
           PIC18F26K40_readThreeBytes@data 00A5                                _writeBuffer 0100  
                                    ?_main 002A          __size_of_USBCtrlEPServiceComplete 006A  
                                    _ANSEL 000F7E                     __end_of_USBDeviceTasks 07D8  
                ?_USBCtrlEPServiceComplete 002A                                      i2l250 1920  
                                    i2l260 194C                                      i2l246 1914  
                                    i2l256 1940                                      i2l248 1918  
                                    i2l249 191C                                      i2l258 1944  
                                    i2l290 18F4                                      i2l259 1948  
                                    i2l603 0A08                                      i2l701 04B0  
                                    i2l613 1264                                      i2l286 18E8  
                                    i2l606 0A36                                      i2l550 0EEE  
                                    i2l288 18EC                                      i2l608 0A3A  
                                    i2l616 12B2                                      i2l289 18F0  
                                    i2l617 126E                                      i2l618 1272  
                                    i2l626 1876                                      i2l651 1A08  
                                    i2l476 070A                                      i2l661 103A  
                                    i2l653 1A1A                                      i2l709 04F2  
                                    i2l486 077E                                      i2l487 07D4  
                                    i2l488 0784                                      i2l691 040A  
                                    i2l675 0F62                                      i2l684 0F7E  
                                    i2l776 10B2                                      _UADDR 000F5C  
                           __CFG_BBSIZ$OFF 000000                                      _USTAT 000F63  
         __end_of_PIC18F26K40_setTrisToOut 1B00                              __CFG_WRT0$OFF 000000  
       __size_of_USBCtrlEPAllowStatusStage 0064                              __CFG_WRT1$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           ?_BUTTON_Enable 002A                             __CFG_EBTR1$OFF 000000  
          __end_of_USBCtrlEPAllowDataStage 1590                                      _sd000 03C2  
                                    _sd001 037C                                      _sd002 0348  
                            __CFG_WRTB$OFF 000000             ?_USBIncrement1msInternalTimers 002A  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                                 i2memset@p1 002A  
                __size_of_BUTTON_IsPressed 001A                             __CFG_BOREN$OFF 000000  
                                    tablat 000FF5                        __size_of_LED_Enable 0030  
                                    plusw2 000FDB                          __end_of_CDCInitEP 168C  
                                    status 000FD8                               __end_ofPL100 12CE  
                             __end_ofPL110 0C02                               __end_ofPL102 0D72  
                             __end_ofPL112 08DA                               __end_ofPL104 1A3C  
                             __end_ofPL114 1AE4                               __end_ofPL106 1170  
                             __end_ofPL108 0B48                           __end_ofi2_memset 19BC  
                          putUSBUSART@data 0093               __size_of_USBStdSetCfgHandler 0084  
                           __CFG_MCLRE$OFF 000000                            __initialization 15E8  
                    ?_PIC18F26K40_sendByte 0093                               __end_of_main 18B4  
              __size_of_PIC18F26K40_loadPC 003C                  __size_of_USBCtrlEPService 0070  
                                   ??_main 00B5                              __activetblptr 000002  
                          ?_USBDeviceTasks 002A                                ?_USBSuspend 002A  
                                ??_LED_Off 002A                               _cdc_mem_type 007C  
                            _putrsUSBUSART 147E                    __end_of_USBDeviceAttach 1840  
                         _CDCDataOutHandle 0078            PIC18F26K40_loadDataIntoNVM@data 0097  
                                   _ANSELH 000F7F                            getsUSBUSART@len 009E  
                   SYSTEM_Initialize@state 0094                      __size_of_CDCTxService 00C8  
                                   i2l3040 1132                                     i2l3104 0D1A  
                                   i2l3050 1950                                     i2l3140 1384  
                                   i2l3132 1366                                     i2l3124 1348  
                                   i2l3220 1A22                                     i2l3150 139E  
                                   i2l3062 17F4                                     i2l3230 13B0  
                                   i2l3302 19AC                                     i2l3056 1924  
                                   i2l3144 1394                                     i2l3136 1376  
                                   i2l3152 13A8                                     i2l3128 1356  
                                   i2l3080 18F8                                     i2l3224 1A2E  
                                   i2l3232 13BA                                     i2l3400 09C4  
                                   _LED_On 1910                                     i2l3066 1802  
                                   i2l3162 108C                                     i2l3234 13C4  
                                   i2l3242 13CC                                     i2l3092 0CE2  
                                   i2l3500 04A4                                     i2l3412 0A0C  
                                   i2l3404 09D8                                     i2l3420 0A3E  
                                   i2l3262 0D8C                                     i2l3318 1214  
                                   i2l3086 0CC6                                     i2l3158 1080  
                                   i2l3502 04BC                                     i2l3350 157A  
                                   i2l4118 1874                                     i2l4302 0702  
                           __CFG_WDTEN$OFF 000000                                     i2l3192 10D8  
                                   i2l3176 10A8                                     i2l3168 1096  
                                   i2l3512 04DC                                     i2l3432 1280  
                                   i2l3266 0D94                                     i2l3602 0B82  
                                   i2l3186 10C6                                     i2l3530 051E  
                                   i2l3522 04FE                                     i2l3514 04E2  
                                   i2l3442 12A4                                     i2l3370 0E3A  
                                   i2l3346 1566                                     i2l4138 1330  
                                   i2l4082 19F2                                     i2l4322 0726  
                                   i2l3276 0DB6                                     i2l3284 0DCC  
                                   i2l3460 040C                                     i2l4084 19F4  
                                   i2l4340 0750                                     i2l4316 071C  
                                   i2l3286 0DD2                                     i2l3294 0DE8  
                                   i2l3614 0BAE                                     i2l3198 10DE  
                                   i2l4158 08EA                                     i2l3800 1012  
                                   i2l3528 0518                                     i2l3392 0E84  
                                   i2l3640 0F6C                                     i2l3560 0F00  
                                   i2l3544 0ED6                                     i2l4336 0748  
                                   i2l4328 073C                                     i2l3618 0BB6  
                                   i2l3490 047E                                     i2l3298 199C  
                                   i2l4354 0772                                     i2l4346 075A  
                                   i2l3812 102A                                     i2l3484 046E  
                                   i2l3476 0450                                     i2l3652 0F72  
                                   i2l3548 0EDC                                     i2l3740 177A  
                                   i2l4188 08FA                                     i2l4380 07B8  
                                   i2l5086 13E0                                     i2l3662 0F8E  
                                   i2l4382 07CC                                     i2l4374 07A2  
                                   i2l4294 06F6                                     i2l3592 0B62  
                                   i2l5088 1414                                     i2l3568 0F0E  
                                   i2l3818 1034                                     i2l3666 0F9A  
                                   i2l3596 0B6E                                     i2l3748 179A  
                            CDCTxService@i 009C                   i2USBTransferOnePacket@ep 0030  
                        ??i2_USBDeviceInit 0032            __size_ofi2_USBTransferOnePacket 0080  
                        _shortPacketStatus 0027                             __CFG_XINST$OFF 000000  
             ??_PIC18F26K40_readThreeBytes 009D                            USBDeviceTasks@i 0047  
              USBStdFeatureReqHandler@pUEP 0040                   USBTransferOnePacket@data 0094  
               USBCtrlTrfInHandler@lastDTS 002B                            ??_USBDeviceInit 009B  
                             ?_putUSBUSART 0093                             __CFG_STVREN$ON 000000  
                     __end_of_getsUSBUSART 11D8                          ??i2_BUTTON_Enable 002A  
                        _USBEnableEndpoint 17E6            __size_of_USBStdGetStatusHandler 0068  
        APP_DeviceCDCBasicDemoTasks@a_2114 00AF                                     _memcpy 1768  
                            ?i2_LED_Enable 002A                                     _memset 1968  
                                   clear_0 160E                                     clear_1 161A  
                                   clear_2 1626                PIC18F26K40_readThreeBytes@i 00AA  
              PIC18F26K40_readThreeBytes@j 00A9                         ?_USBEnableEndpoint 0032  
            __size_of_USBTransferOnePacket 0082                            ??_BUTTON_Enable 0093  
                             _CDCTxService 07E2                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                             ?_putrsUSBUSART 0093  
                      ??_USBEnableEndpoint 0033                                _CtrlTrfData 000238  
                          __CFG_HFOFST$OFF 000000                   _PIC18F26K40_setTrisToOut 1AF8  
             ?_APP_DeviceCDCBasicDemoTasks 002A        __size_of_PIC18F26K40_readThreeBytes 00B8  
                     _controlTransferState 0026                          _SYSTEM_Initialize 1A3C  
                               __accesstop 0060                    __end_of__initialization 162C  
                       ?_SYSTEM_Initialize 002A                              ___rparam_used 000001  
                 __size_of_USBStallHandler 002A                        __size_of_USBSuspend 0016  
                   ??_PIC18F26K40_sendByte 0094                             __pcstackCOMRAM 002A  
                __end_of_USBEnableEndpoint 181C                              __end_of_sd000 03C6  
                            __end_of_sd001 03B0                              __end_of_sd002 037C  
                             __pidataBANK0 1AC4                        ??_SYSTEM_Initialize 0094  
                                LED_On@led 002A           __size_of_USBCtrlEPAllowDataStage 005A  
                           ??i2_LED_Enable 002A                               ??_LED_Enable 0093  
            __size_of_USBConfigureEndpoint 0064                __end_of_USBCtrlTrfInHandler 1042  
                  ?_APP_LEDUpdateUSBStatus 002A                                 __end_ofPL2 0F56  
                               __end_ofPL4 0BD4                                 __end_ofPL6 0BDE  
                               __end_ofPL8 1052                     i2_USBTransferOnePacket 0CBA  
                          __CFG_PCLKEN$OFF 000000                                  ?i2_memset 002A  
                               _cdc_rx_len 001C                                 _cdc_tx_len 001B  
             ?_PIC18F26K40_loadDataIntoNVM 0097                              _buttonMessage 00B8  
                 ??_USBCtrlTrfSetupHandler 0046                    _USBTicksSinceSuspendEnd 007D  
                         ?_USBDeviceAttach 002A                  __end_of_SYSTEM_Initialize 1A58  
                         _BUTTON_IsPressed 1A90                     _USBStdGetStatusHandler 125C  
                            _buttonPressed 007F                                 __pbssBANK0 0060  
                               __pbssBANK1 0100                                    ?_LED_On 002A  
            ??_APP_DeviceCDCBasicDemoTasks 00AB   __end_of_APP_DeviceCDCBasicDemoInitialize 1AC4  
__size_of_APP_DeviceCDCBasicDemoInitialize 001A         ??_APP_DeviceCDCBasicDemoInitialize 002A  
        ?_APP_DeviceCDCBasicDemoInitialize 002A           _APP_DeviceCDCBasicDemoInitialize 1AAA  
                       __end_of_LED_Enable 18E4                __size_of_USBWakeFromSuspend 0020  
                              _pBDTEntryIn 000F           __end_of_USBCtrlEPServiceComplete 0F28  
              __size_of_USBCheckCDCRequest 0080                       USBCtrlTrfRxService@i 002A  
                            LED_Enable@led 0093             __end_of_APP_LEDUpdateUSBStatus 13AE  
                                  ?_memcpy 002A               APP_DeviceCDCBasicDemoTasks@a 00AB  
             APP_DeviceCDCBasicDemoTasks@i 00B4                                    ?_memset 0093  
                               _device_dsc 03B0                           _USBCtrlEPService 12CE  
                               _ep_data_in 0073                __end_of_USBCtrlTrfRxService 0BCA  
                       _USBCheckStdRequest 0F56                          _configDescriptor1 0305  
                          ??_putrsUSBUSART 0095                                    _LED_Off 193C  
              __end_ofi2_SYSTEM_Initialize 1A34                                 ??i2_memset 0030  
              __end_of_USBCtrlTrfTxService 0DEE                        _USBStdSetCfgHandler 0E1A  
      PIC18F26K40_loadDataIntoNVM@tempData 009D                            __CFG_USBDIV$OFF 000000  
                      ?_USBCheckStdRequest 002A               __size_of_USBStdGetDscHandler 009A  
            ??_PIC18F26K40_loadDataIntoNVM 009C                                    _UIEbits 000F60  
                                  _UIRbits 000F62                            __size_of_LED_On 002C  
                            _cdc_trf_state 0080             APP_LEDUpdateUSBStatus@ledCount 0019  
       __end_of_PIC18F26K40_readThreeBytes 0CBA                 _PIC18F26K40_readThreeBytes 0C02  
                                  _pCDCDst 006A                                    _pCDCSrc 006D  
                          __CFG_PWRTEN$OFF 000000                      __size_of_getsUSBUSART 0068  
                                  __Hparam 0000            ??_USBIncrement1msInternalTimers 002A  
                     ?_USBStdSetCfgHandler 002A                                  _CDCInitEP 163A  
                                  __Lparam 0000                 __size_of_USBEnableEndpoint 0036  
                               _readBuffer 0140                       ??_USBCheckStdRequest 0045  
            __size_of_USBCtrlTrfOutHandler 0020                           ??_USBDeviceTasks 0047  
                        ??_USBStallHandler 002A                               __psmallconst 0300  
     __size_of_APP_DeviceCDCBasicDemoTasks 014E                       __size_of_putUSBUSART 001C  
                                  __pcinit 15E8                         getsUSBUSART@buffer 009C  
                          __size_of_memcpy 0042                            __size_of_memset 002A  
                __end_of_configDescriptor1 0348                                    __ramtop 0300  
                                  __ptext0 1884                                    __ptext1 1418  
                                  __ptext2 1968                                    __ptext3 181C  
                                  __ptext4 1A3C                                    __ptext5 18B4  
                                  __ptext6 1AE4                                    __ptext7 0588  
                                  __ptext8 147E                                    __ptext9 1A58  
                                  _inPipes 0009                _USBDeferOUTDataStagePackets 007E  
                             ??_USBSuspend 003E                            i2_USBDeviceInit 08DA  
                         i2USBDeviceInit@i 0032                      PIC18F26K40_sendByte@i 0098  
                    PIC18F26K40_sendByte@j 0097                         __end_of_USB_CD_Ptr 0305  
               __size_of_SYSTEM_Initialize 001C            __size_of_USBCtrlTrfSetupHandler 0040  
                     end_of_initialization 162C                               _getsUSBUSART 1170  
                     __end_ofi2_LED_Enable 1910                         __end_of_USB_SD_Ptr 0304  
                                  memcpy@d 0030                                    memcpy@n 002E  
                                  memcpy@s 0032                        _pBDTEntryEP0OutNext 0015  
                                  memset@c 0095                                    memset@n 0097  
                                  memset@p 0099                              __Lmediumconst 0000  
                          _USB1msTickCount 0066            _dummy_encapsulated_cmd_response 0082  
                          i2_BUTTON_Enable 1AD8                   ?_USBStdFeatureReqHandler 002A  
                    ??_USBStdSetCfgHandler 003E                                 ?_CDCInitEP 002A  
                       __end_of_USBSuspend 19D2       __size_of_PIC18F26K40_loadDataIntoNVM 005A  
                  _USBCtrlEPAllowDataStage 1536                                    postdec1 000FE5  
                                  postdec2 000FDD                 __end_of_PIC18F26K40_loadPC 17E6  
                                  postinc0 000FEE                                    postinc2 000FDE  
                 PIC18F26K40_sendByte@info 0096    __end_of_PIC18F26K40_enterLowVoltageProg 1768  
 __size_of_PIC18F26K40_enterLowVoltageProg 0046           ?_PIC18F26K40_enterLowVoltageProg 002A  
        ??_PIC18F26K40_enterLowVoltageProg 0099            _PIC18F26K40_enterLowVoltageProg 1722  
                 _USBCtrlEPServiceComplete 0EBE                 _USBStatusStageEnabledFlag1 001F  
               _USBStatusStageEnabledFlag2 001E                         USBEnableEndpoint@p 0033  
                                _PORTAbits 000F80                                  _PORTCbits 000F82  
               ??_PIC18F26K40_setTrisToOut 0093                                  _TRISCbits 000F94  
            PIC18F26K40_loadPC@tempAddress 009D                         _BothEP0OutUOWNsSet 0022  
                USBConfigureEndpoint@EPNum 002F                 ?_USBCtrlEPAllowStatusStage 002A  
                           _GLOBAL_COUNTER 00B7        USER_USB_CALLBACK_EVENT_HANDLER@size 003A  
  APP_DeviceCDCBasicDemoTasks@numBytesRead 00B3                                  _USTATcopy 0028  
          ?_PIC18F26K40_exitLowVoltageProg 002A           ??_PIC18F26K40_exitLowVoltageProg 0093  
             __end_of_USBTransferOnePacket 0B08                             __end_of_LED_On 193C  
                        putUSBUSART@length 0095                     _USBCtrlTrfSetupHandler 168C  
                 __end_of_BUTTON_IsPressed 1AAA                    ?i2_USBTransferOnePacket 002A  
                    __end_of_USBDeviceInit 147E      __end_of_USBIncrement1msInternalTimers 1A90  
   __size_of_USBIncrement1msInternalTimers 001C              _USBIncrement1msInternalTimers 1A74  
                               LED_Off@led 002A                    __end_ofi2_USBDeviceInit 0922  
                                i2memset@c 002C                                  i2memset@n 002E  
                                i2memset@p 0030                             __end_of_memcpy 17AA  
                       putrsUSBUSART@pData 0097                             __end_of_memset 1992  
                        _USBBusIsSuspended 0024                                __end_ofPL10 0BEE  
                              __end_ofPL20 097C                                __end_ofPL12 0BF8  
                              __end_ofPL30 1850                                __end_ofPL22 054C  
                              __end_ofPL14 0954                                __end_ofPL40 19DE  
                              __end_ofPL32 0A72                                __end_ofPL24 0B14  
                              __end_ofPL16 105C                                __end_ofPL50 0EB2  
                              __end_ofPL42 08C0                                __end_ofPL34 0994  
                              __end_ofPL26 0B20                                __end_ofPL18 0A5A  
                              __end_ofPL60 0588                                __end_ofPL52 0D4E  
                              __end_ofPL44 1074                                __end_ofPL36 0562  
                              __end_ofPL28 1884                                __end_ofPL70 08D0  
                              __end_ofPL62 1254                                __end_ofPL54 0E00  
                              __end_ofPL46 0B34                                __end_ofPL38 1068  
                              __end_ofPL80 09AA                                __end_ofPL72 11E6  
                              __end_ofPL64 125C                                __end_ofPL56 0574  
                              __end_ofPL48 0A86                                __end_ofPL90 0D68  
                              __end_ofPL82 0D56                                __end_ofPL74 1166  
                              __end_ofPL66 0E0A                                __end_ofPL58 057E  
                              __end_ofPL92 0B3E                                __end_ofPL84 0D60  
                              __end_ofPL76 09A0                                __end_ofPL68 0E1A  
                              __end_ofPL94 0EBE                                __end_ofPL86 07E2  
                              __end_ofPL78 0FE6                                __end_ofPL96 16D8  
                              __end_ofPL88 09B4                                __end_ofPL98 06E2  
                      start_initialization 15E8                    ?_USBStdGetStatusHandler 002A  
                 i2SYSTEM_Initialize@state 002B                      __end_of_BUTTON_Enable 1AEE  
            USBCtrlTrfRxService@byteToRead 002B                    __end_ofi2_BUTTON_Enable 1ADE  
                              _cdc_data_rx 000280                                _cdc_data_tx 000240  
                        __size_ofi2_memset 002A               __end_of_USBConfigureEndpoint 1158  
          __end_of_USBStdFeatureReqHandler 0542                                   ??_LED_On 002A  
        __end_of_USBCtrlEPAllowStatusStage 124A                   __end_of_USBCtrlEPService 133E  
                ??_USBCtrlEPAllowDataStage 002B                                ??_CDCInitEP 0036  
                           USBDeviceInit@i 009B                     _pBDTEntryEP0OutCurrent 0017  
                  USBTransferOnePacket@dir 0093                    USBTransferOnePacket@len 0096  
           __end_ofi2_USBTransferOnePacket 0D3A              __size_of_PIC18F26K40_sendByte 0058  
                      _USBStdGetDscHandler 09B4        PIC18F26K40_readThreeBytes@direction 00A4  
                              __pdataBANK0 00B7                                   ??_memcpy 0030  
                                 ??_memset 0099                     BUTTON_IsPressed@button 0093  
                   _USBActiveConfiguration 0029             __end_of_USBStdGetStatusHandler 12C4  
                PIC18F26K40_loadPC@address 0099                                   ?_LED_Off 002A  
                              __pbssCOMRAM 0001                              __pcstackBANK0 0093  
             __size_of_USBCtrlTrfInHandler 005C                      __size_ofi2_LED_Enable 002C  
                     ?_USBStdGetDscHandler 002A                 __end_of_USBWakeFromSuspend 19FE  
                          _USBStallHandler 1850                               _pBDTEntryOut 0060  
               __end_of_USBCheckCDCRequest 10F4                   __size_of_USBDeviceAttach 0024  
              ?_PIC18F26K40_readThreeBytes 0099                      i2BUTTON_Enable@button 002A  
                                __pintcode 0008                               i2_LED_Enable 18E4  
                         ?i2_USBDeviceInit 002A                       _USBTransferOnePacket 0A86  
                              __smallconst 0300                      __end_of_putrsUSBUSART 14DC  
             __end_of_USBCtrlTrfOutHandler 1A1E                      ??_USBStdGetDscHandler 002A  
                              _ep_data_out 0070                           ?i2_BUTTON_Enable 002A  
      __end_of_APP_DeviceCDCBasicDemoTasks 06D6                _APP_DeviceCDCBasicDemoTasks 0588  
             __size_of_USBCtrlTrfRxService 0082              USBConfigureEndpoint@direction 002A  
             __size_ofi2_SYSTEM_Initialize 0016               __size_of_USBCtrlTrfTxService 007C  
                                 _LATCbits 000F8B                 ??_USBCtrlEPServiceComplete 002B  
                                 _IPR2bits 000FA2                                   _PIE2bits 000FA0  
    PIC18F26K40_loadDataIntoNVM@IncreasePC 009B                                   i2u200_40 0DE6  
                                 i2u200_47 0DE2       __end_of_PIC18F26K40_sendByteMsbToLsb 1722  
    __size_of_PIC18F26K40_sendByteMsbToLsb 004A               _PIC18F26K40_sendByteMsbToLsb 16D8  
                                 i2u213_40 09F2                                   i2u213_47 09F0  
                                 i2u214_40 0A04                                   i2u214_47 0A02  
                                 i2u216_40 0A30                                   i2u216_47 0A2E  
                                 i2u186_40 1370                                   _PIR2bits 000FA1  
                                 i2u198_40 0DCA                                   i2u198_47 0DC6  
                                 _RCONbits 000FD0                              ??_putUSBUSART 0096  
                         __CFG_WDTPS$32768 000000                                   _UEP0bits 000F53  
               _USBDeferINDataStagePackets 001D                __size_of_USBCheckStdRequest 0084  
                                 _UCONbits 000F64                       _USBConfigureEndpoint 10F4  
         __size_of_USBStdFeatureReqHandler 0152                      ?_USBTransferOnePacket 0093  
                          i2LED_Enable@led 002A                          _SYS_InterruptHigh 0008  
                            ?_CDCTxService 002A                               _RemoteWakeup 0025  
                                 i2_memset 1992        __end_of_PIC18F26K40_loadDataIntoNVM 1536  
              _PIC18F26K40_loadDataIntoNVM 14DC                         _PIC18F26K40_loadPC 17AA  
                         __size_of_LED_Off 002C                         ?_SYS_InterruptHigh 002A  
                  __end_of_USBStallHandler 187A                                  copy_data0 15FC  
                        putrsUSBUSART@data 0093                ??_USBCtrlEPAllowStatusStage 002A  
              __end_of_USBStdSetCfgHandler 0E9E                        ?_PIC18F26K40_loadPC 0099  
                      ??_SYS_InterruptHigh 0048                         __end_of_device_dsc 03C2  
                 ??_APP_LEDUpdateUSBStatus 002B                    ?_USBCtrlTrfSetupHandler 002A  
                  USBStdGetStatusHandler@p 002A                                   __Hrparam 0000  
      PIC18F26K40_enterLowVoltageProg@code 0099                                  memcpy@tmp 0034  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 0099  
         PIC18F26K40_sendByteMsbToLsb@info 0095              ?_PIC18F26K40_sendByteMsbToLsb 002A  
                                 _SetupPkt 000230                      ?_USBConfigureEndpoint 002A  
   __end_of_PIC18F26K40_exitLowVoltageProg 1AF8    __size_of_PIC18F26K40_exitLowVoltageProg 000A  
           _PIC18F26K40_exitLowVoltageProg 1AEE                          ??_USBDeviceAttach 0093  
                        ?_BUTTON_IsPressed 002A                       ??_PIC18F26K40_loadPC 009D  
                __end_of_SYS_InterruptHigh 0062                         ??_BUTTON_IsPressed 0093  
                      __end_of_putUSBUSART 1A74                                _line_coding 008A  
                           ??_CDCTxService 009C              PIC18F26K40_sendByte@direction 0093  
                  __size_of_USBDeviceTasks 00F6                                   __ptext10 1170  
                                 __ptext11 0C02                                   __ptext20 0A86  
                                 __ptext12 17AA                                   __ptext21 1A90  
                                 __ptext13 14DC                                   __ptext30 1768  
                                 __ptext14 16D8                                   __ptext31 168C  
                                 __ptext23 06E2                                   __ptext15 1AEE  
                                 __ptext40 13AE                                   __ptext32 0EBE  
                                 __ptext24 08DA                                   __ptext16 1722  
                                 __ptext41 1A1E                                   __ptext33 1536  
                                 __ptext25 19DE                                   __ptext17 1590  
                                 __ptext50 1910                                   __ptext42 18E4  
                                 __ptext34 0F56                                   __ptext26 19BC  
                                 __ptext18 1AF8                                   __ptext51 193C  
                                 __ptext43 1AD8                                   __ptext35 0E1A  
                                 __ptext27 1850                                   __ptext19 07E2  
                                 __ptext52 1AAA                                   __ptext44 1074  
                                 __ptext36 1992                                   __ptext28 1A74  
                                 __ptext53 19FE                                   __ptext45 163A  
                                 __ptext37 125C                                   __ptext29 12CE  
                                 __ptext54 0B48                                   __ptext46 0CBA  
                                 __ptext38 09B4                                   __ptext55 11E6  
                                 __ptext47 17E6                                   __ptext39 03F0  
                                 __ptext56 0FE6                                   __ptext48 10F4  
                                 __ptext57 0D72                                   __ptext49 133E  
        __size_of_PIC18F26K40_setTrisToOut 0008             __end_of_USBCtrlTrfSetupHandler 16CC  
                            __size_of_main 0030                          ?_USBCtrlEPService 002A  
                ?_PIC18F26K40_setTrisToOut 002A                         ??_USBCtrlEPService 0046  
                      _USBCtrlTrfInHandler 0FE6                        BUTTON_Enable@button 0093  
                                 _outPipes 0001                       _USBCtrlTrfOutHandler 19FE  
                                 int$flags 0052                  _USBCtrlEPAllowStatusStage 11E6  
                               _LED_Enable 18B4                     ??_USBTransferOnePacket 0097  
                         putrsUSBUSART@len 0099                  _USBDeferStatusStagePacket 0020  
                 CDCTxService@byte_to_send 009D                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002A                                   memcpy@d1 002A  
                                 memcpy@s1 002C              USBCtrlTrfTxService@byteToSend 002A  
             __end_of_PIC18F26K40_sendByte 15E8                                   memset@p1 0093  
                         ?_USBStallHandler 002A                   USBStdFeatureReqHandler@p 0043  
                                 intlevel2 0000                     __size_of_USBDeviceInit 0066  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1418   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 006A  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 003C           ?_USER_USB_CALLBACK_EVENT_HANDLER 0036  
          _USER_USB_CALLBACK_EVENT_HANDLER 13AE               i2USBTransferOnePacket@handle 0031  
          __size_of_APP_LEDUpdateUSBStatus 0070                 i2USBTransferOnePacket@data 002B  
                   ??_USBConfigureEndpoint 002B                      ?_USBCtrlTrfOutHandler 002A  
                   __size_of_BUTTON_Enable 000A                                _putUSBUSART 1A58  
                     __CFG_CPUDIV$NOCLKDIV 000000                        _USBCtrlTrfRxService 0B48  
                       _USBWakeFromSuspend 19DE                    _USBStdFeatureReqHandler 03F0  
                      i2_SYSTEM_Initialize 1A1E                         _USBCheckCDCRequest 1074  
                      _USBCtrlTrfTxService 0D72                 __size_of_SYS_InterruptHigh 005A  
           ??_PIC18F26K40_sendByteMsbToLsb 0093              PIC18F26K40_sendByteMsbToLsb@i 0096  
                      ?_USBWakeFromSuspend 002A                      ??_USBCtrlTrfInHandler 002B  
                    _USBAlternateInterface 0091                        ?_USBCheckCDCRequest 002A  
                i2USBTransferOnePacket@dir 002A                  i2USBTransferOnePacket@len 002D  
                      USBEnableEndpoint@ep 0035                            _endpoint_number 0023  
                     ?_USBCtrlTrfRxService 002A                              ?_getsUSBUSART 009C  
                     ?i2_SYSTEM_Initialize 002A                   ?_USBCtrlEPAllowDataStage 002A  
                     ?_USBCtrlTrfTxService 002A               _USBStatusStageTimeoutCounter 0021  
     PIC18F26K40_readThreeBytes@IncreasePC 0099                       ??_USBWakeFromSuspend 003E  
               USBTransferOnePacket@handle 009A                       __end_of_CDCTxService 08AA  
                     ??_USBCheckCDCRequest 002A                                 _USB_CD_Ptr 0304  
