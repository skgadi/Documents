

Microchip Technology PIC18 PRO Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 30 09:48:41 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	pa_nodes0,global,class=CODE,delta=1
    76                           	dabs	1,0x200,48,_BDT
    77                           	dabs	1,0x280,64,_cdc_data_rx
    78                           	dabs	1,0x240,64,_cdc_data_tx
    79                           	dabs	1,0x238,8,_CtrlTrfData
    80                           	dabs	1,0x230,8,_SetupPkt
    81  0000                     
    82                           ; Version 1.42
    83                           ; Generated 13/04/2017 GMT
    84                           ; 
    85                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F14K50 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           prodh	equ	0xFF4
   121                           prodl	equ	0xFF3
   122                           intcon	equ	0xFF2
   123                           wreg	equ	0xFE8
   124                           indf1	equ	0xFE7
   125                           fsr1h	equ	0xFE2
   126                           fsr1l	equ	0xFE1
   127                           indf2	equ	0xFDF
   128                           postinc2	equ	0xFDE
   129                           postdec2	equ	0xFDD
   130                           plusw2	equ	0xFDB
   131                           fsr2h	equ	0xFDA
   132                           fsr2l	equ	0xFD9
   133                           status	equ	0xFD8
   134                           
   135                           	psect	idataBANK0
   136  001AC0                     __pidataBANK0:
   137                           	opt stack 0
   138                           
   139                           ;initializer for _GLOBAL_COUNTER
   140  001AC0  30                 	db	48
   141                           
   142                           ;initializer for _buttonMessage
   143  001AC1  42                 	db	66
   144  001AC2  75                 	db	117
   145  001AC3  74                 	db	116
   146  001AC4  74                 	db	116
   147  001AC5  6F                 	db	111
   148  001AC6  6E                 	db	110
   149  001AC7  20                 	db	32
   150  001AC8  70                 	db	112
   151  001AC9  72                 	db	114
   152  001ACA  65                 	db	101
   153  001ACB  73                 	db	115
   154  001ACC  73                 	db	115
   155  001ACD  65                 	db	101
   156  001ACE  64                 	db	100
   157  001ACF  2E                 	db	46
   158  001AD0  0D                 	db	13
   159  001AD1  0A                 	db	10
   160  001AD2  00                 	db	0
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           tblptrl	equ	0xFF6
   164                           tablat	equ	0xFF5
   165                           prodh	equ	0xFF4
   166                           prodl	equ	0xFF3
   167                           intcon	equ	0xFF2
   168                           wreg	equ	0xFE8
   169                           indf1	equ	0xFE7
   170                           fsr1h	equ	0xFE2
   171                           fsr1l	equ	0xFE1
   172                           indf2	equ	0xFDF
   173                           postinc2	equ	0xFDE
   174                           postdec2	equ	0xFDD
   175                           plusw2	equ	0xFDB
   176                           fsr2h	equ	0xFDA
   177                           fsr2l	equ	0xFD9
   178                           status	equ	0xFD8
   179                           
   180                           	psect	smallconst
   181  000300                     __psmallconst:
   182                           	opt stack 0
   183  000300  00                 	db	0
   184  000301                     _USB_SD_Ptr:
   185                           	opt stack 0
   186  000301  C2                 	db	low _sd000
   187  000302  7C                 	db	low _sd001
   188  000303  48                 	db	low _sd002
   189  000304                     __end_of_USB_SD_Ptr:
   190                           	opt stack 0
   191  000304                     _USB_CD_Ptr:
   192                           	opt stack 0
   193  000304  05                 	db	low _configDescriptor1
   194  000305                     __end_of_USB_CD_Ptr:
   195                           	opt stack 0
   196  000305                     _configDescriptor1:
   197                           	opt stack 0
   198  000305  09                 	db	9
   199  000306  02                 	db	2
   200  000307  43                 	db	67
   201  000308  00                 	db	0
   202  000309  02                 	db	2
   203  00030A  01                 	db	1
   204  00030B  00                 	db	0
   205  00030C  C0                 	db	192
   206  00030D  32                 	db	50
   207  00030E  09                 	db	9
   208  00030F  04                 	db	4
   209  000310  00                 	db	0
   210  000311  00                 	db	0
   211  000312  01                 	db	1
   212  000313  02                 	db	2
   213  000314  02                 	db	2
   214  000315  01                 	db	1
   215  000316  00                 	db	0
   216  000317  05                 	db	5
   217  000318  24                 	db	36
   218  000319  00                 	db	0
   219  00031A  10                 	db	16
   220  00031B  01                 	db	1
   221  00031C  04                 	db	4
   222  00031D  24                 	db	36
   223  00031E  02                 	db	2
   224  00031F  02                 	db	2
   225  000320  05                 	db	5
   226  000321  24                 	db	36
   227  000322  06                 	db	6
   228  000323  00                 	db	0
   229  000324  01                 	db	1
   230  000325  05                 	db	5
   231  000326  24                 	db	36
   232  000327  01                 	db	1
   233  000328  00                 	db	0
   234  000329  01                 	db	1
   235  00032A  07                 	db	7
   236  00032B  05                 	db	5
   237  00032C  81                 	db	129
   238  00032D  03                 	db	3
   239  00032E  08                 	db	8
   240  00032F  00                 	db	0
   241  000330  02                 	db	2
   242  000331  09                 	db	9
   243  000332  04                 	db	4
   244  000333  01                 	db	1
   245  000334  00                 	db	0
   246  000335  02                 	db	2
   247  000336  0A                 	db	10
   248  000337  00                 	db	0
   249  000338  00                 	db	0
   250  000339  00                 	db	0
   251  00033A  07                 	db	7
   252  00033B  05                 	db	5
   253  00033C  02                 	db	2
   254  00033D  02                 	db	2
   255  00033E  40                 	db	64
   256  00033F  00                 	db	0
   257  000340  00                 	db	0
   258  000341  07                 	db	7
   259  000342  05                 	db	5
   260  000343  82                 	db	130
   261  000344  02                 	db	2
   262  000345  40                 	db	64
   263  000346  00                 	db	0
   264  000347  00                 	db	0
   265  000348                     __end_of_configDescriptor1:
   266                           	opt stack 0
   267  000348                     _sd002:
   268                           	opt stack 0
   269  000348  34                 	db	52
   270  000349  03                 	db	3
   271  00034A  0043               	dw	67
   272  00034C  0044               	dw	68
   273  00034E  0043               	dw	67
   274  000350  0020               	dw	32
   275  000352  0052               	dw	82
   276  000354  0053               	dw	83
   277  000356  002D               	dw	45
   278  000358  0032               	dw	50
   279  00035A  0033               	dw	51
   280  00035C  0032               	dw	50
   281  00035E  0020               	dw	32
   282  000360  0045               	dw	69
   283  000362  006D               	dw	109
   284  000364  0075               	dw	117
   285  000366  006C               	dw	108
   286  000368  0061               	dw	97
   287  00036A  0074               	dw	116
   288  00036C  0069               	dw	105
   289  00036E  006F               	dw	111
   290  000370  006E               	dw	110
   291  000372  0020               	dw	32
   292  000374  0044               	dw	68
   293  000376  0065               	dw	101
   294  000378  006D               	dw	109
   295  00037A  006F               	dw	111
   296  00037C                     __end_of_sd002:
   297                           	opt stack 0
   298  00037C                     _sd001:
   299                           	opt stack 0
   300  00037C  34                 	db	52
   301  00037D  03                 	db	3
   302  00037E  004D               	dw	77
   303  000380  0069               	dw	105
   304  000382  0063               	dw	99
   305  000384  0072               	dw	114
   306  000386  006F               	dw	111
   307  000388  0063               	dw	99
   308  00038A  0068               	dw	104
   309  00038C  0069               	dw	105
   310  00038E  0070               	dw	112
   311  000390  0020               	dw	32
   312  000392  0054               	dw	84
   313  000394  0065               	dw	101
   314  000396  0063               	dw	99
   315  000398  0068               	dw	104
   316  00039A  006E               	dw	110
   317  00039C  006F               	dw	111
   318  00039E  006C               	dw	108
   319  0003A0  006F               	dw	111
   320  0003A2  0067               	dw	103
   321  0003A4  0079               	dw	121
   322  0003A6  0020               	dw	32
   323  0003A8  0049               	dw	73
   324  0003AA  006E               	dw	110
   325  0003AC  0063               	dw	99
   326  0003AE  002E               	dw	46
   327  0003B0                     __end_of_sd001:
   328                           	opt stack 0
   329  0003B0                     _device_dsc:
   330                           	opt stack 0
   331  0003B0  12                 	db	18
   332  0003B1  01                 	db	1
   333  0003B2  0200               	dw	512
   334  0003B4  02                 	db	2
   335  0003B5  00                 	db	0
   336  0003B6  00                 	db	0
   337  0003B7  08                 	db	8
   338  0003B8  04D8               	dw	1240
   339  0003BA  000A               	dw	10
   340  0003BC  0100               	dw	256
   341  0003BE  01                 	db	1
   342  0003BF  02                 	db	2
   343  0003C0  00                 	db	0
   344  0003C1  01                 	db	1
   345  0003C2                     __end_of_device_dsc:
   346                           	opt stack 0
   347  0003C2                     _sd000:
   348                           	opt stack 0
   349  0003C2  04                 	db	4
   350  0003C3  03                 	db	3
   351  0003C4  0409               	dw	1033
   352  0003C6                     __end_of_sd000:
   353                           	opt stack 0
   354  0000                     _UEP0bits	set	3923
   355  0000                     _UADDR	set	3932
   356  0000                     _UEIE	set	3931
   357  0000                     _UEIR	set	3935
   358  0000                     _UEP1	set	3924
   359  0000                     _UEP0	set	3923
   360  0000                     _ANSELH	set	3967
   361  0000                     _ANSEL	set	3966
   362  0000                     _INTCONbits	set	4082
   363  0000                     _IPR2bits	set	4002
   364  0000                     _RCONbits	set	4048
   365  0000                     _UCON	set	3940
   366  0000                     _USTAT	set	3939
   367  0000                     _PIR2bits	set	4001
   368  0000                     _UIEbits	set	3936
   369  0000                     _UIRbits	set	3938
   370  0000                     _UIE	set	3936
   371  0000                     _UCFG	set	3937
   372  0000                     _UIR	set	3938
   373  0000                     _PIE2bits	set	4000
   374  0000                     _PORTAbits	set	3968
   375  0000                     _UCONbits	set	3940
   376  0000                     _PORTCbits	set	3970
   377  0000                     _LATCbits	set	3979
   378  0000                     _TRISCbits	set	3988
   379  0003C6                     STR_2:
   380                           
   381                           ; BSR set to: 0
   382  0003C6  47                 	db	71	;'G'
   383  0003C7  4C                 	db	76	;'L'
   384  0003C8  4F                 	db	79	;'O'
   385  0003C9  42                 	db	66	;'B'
   386  0003CA  41                 	db	65	;'A'
   387  0003CB  4C                 	db	76	;'L'
   388  0003CC  5F                 	db	95	;'_'
   389  0003CD  43                 	db	67	;'C'
   390  0003CE  4F                 	db	79	;'O'
   391  0003CF  55                 	db	85	;'U'
   392  0003D0  4E                 	db	78	;'N'
   393  0003D1  54                 	db	84	;'T'
   394  0003D2  45                 	db	69	;'E'
   395  0003D3  52                 	db	82	;'R'
   396  0003D4  20                 	db	32
   397  0003D5  69                 	db	105	;'i'
   398  0003D6  73                 	db	115	;'s'
   399  0003D7  20                 	db	32
   400  0003D8  70                 	db	112	;'p'
   401  0003D9  6C                 	db	108	;'l'
   402  0003DA  61                 	db	97	;'a'
   403  0003DB  63                 	db	99	;'c'
   404  0003DC  65                 	db	101	;'e'
   405  0003DD  64                 	db	100	;'d'
   406  0003DE  20                 	db	32
   407  0003DF  61                 	db	97	;'a'
   408  0003E0  74                 	db	116	;'t'
   409  0003E1  20                 	db	32
   410  0003E2  30                 	db	48	;'0'
   411  0003E3  78                 	db	120	;'x'
   412  0003E4  30                 	db	48	;'0'
   413  0003E5  30                 	db	48	;'0'
   414  0003E6  33                 	db	51	;'3'
   415  0003E7  31                 	db	49	;'1'
   416  0003E8  30                 	db	48	;'0'
   417  0003E9  30                 	db	48	;'0'
   418  0003EA  30                 	db	48	;'0'
   419  0003EB  30                 	db	48	;'0'
   420  0003EC  0A                 	db	10
   421  0003ED  0D                 	db	13
   422  0003EE  00                 	db	0
   423  0000                     
   424                           ; #config settings
   425  0003EF  00                 	db	0	; dummy byte at the end
   426  0000                     tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           prodh	equ	0xFF4
   431                           prodl	equ	0xFF3
   432                           intcon	equ	0xFF2
   433                           wreg	equ	0xFE8
   434                           indf1	equ	0xFE7
   435                           fsr1h	equ	0xFE2
   436                           fsr1l	equ	0xFE1
   437                           indf2	equ	0xFDF
   438                           postinc2	equ	0xFDE
   439                           postdec2	equ	0xFDD
   440                           plusw2	equ	0xFDB
   441                           fsr2h	equ	0xFDA
   442                           fsr2l	equ	0xFD9
   443                           status	equ	0xFD8
   444                           
   445                           	psect	cinit
   446  0015E4                     __pcinit:
   447                           	opt stack 0
   448  0015E4                     start_initialization:
   449                           	opt stack 0
   450  0015E4                     __initialization:
   451                           	opt stack 0
   452                           
   453                           ; Initialize objects allocated to BANK0 (19 bytes)
   454                           ; load TBLPTR registers with __pidataBANK0
   455  0015E4  0EC0               	movlw	low __pidataBANK0
   456  0015E6  6EF6               	movwf	tblptrl,c
   457  0015E8  0E1A               	movlw	high __pidataBANK0
   458  0015EA  6EF7               	movwf	tblptrh,c
   459  0015EC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   460  0015EE  6EF8               	movwf	tblptru,c
   461  0015F0  EE00  F0B7         	lfsr	0,__pdataBANK0
   462  0015F4  EE10 F013          	lfsr	1,19
   463  0015F8                     copy_data0:
   464  0015F8  0009               	tblrd		*+
   465  0015FA  CFF5 FFEE          	movff	tablat,postinc0
   466  0015FE  50E5               	movf	postdec1,w,c
   467  001600  50E1               	movf	fsr1l,w,c
   468  001602  E1FA               	bnz	copy_data0
   469                           
   470                           ; Clear objects allocated to BANK1 (128 bytes)
   471  001604  EE01  F000         	lfsr	0,__pbssBANK1
   472  001608  0E80               	movlw	128
   473  00160A                     clear_0:
   474  00160A  6AEE               	clrf	postinc0,c
   475  00160C  06E8               	decf	wreg,f,c
   476  00160E  E1FD               	bnz	clear_0
   477                           
   478                           ; Clear objects allocated to BANK0 (51 bytes)
   479  001610  EE00  F060         	lfsr	0,__pbssBANK0
   480  001614  0E33               	movlw	51
   481  001616                     clear_1:
   482  001616  6AEE               	clrf	postinc0,c
   483  001618  06E8               	decf	wreg,f,c
   484  00161A  E1FD               	bnz	clear_1
   485                           
   486                           ; Clear objects allocated to COMRAM (41 bytes)
   487  00161C  EE00  F001         	lfsr	0,__pbssCOMRAM
   488  001620  0E29               	movlw	41
   489  001622                     clear_2:
   490  001622  6AEE               	clrf	postinc0,c
   491  001624  06E8               	decf	wreg,f,c
   492  001626  E1FD               	bnz	clear_2
   493  001628                     end_of_initialization:
   494                           	opt stack 0
   495  001628                     __end_of__initialization:
   496                           	opt stack 0
   497  001628  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   498  00162A  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   499  00162C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   500  00162E  6EF8               	movwf	tblptru,c
   501  001630  0100               	movlb	0
   502  001632  EF40  F00C         	goto	_main	;jump to C main() function
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           prodh	equ	0xFF4
   508                           prodl	equ	0xFF3
   509                           intcon	equ	0xFF2
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           indf1	equ	0xFE7
   513                           postdec1	equ	0xFE5
   514                           fsr1h	equ	0xFE2
   515                           fsr1l	equ	0xFE1
   516                           indf2	equ	0xFDF
   517                           postinc2	equ	0xFDE
   518                           postdec2	equ	0xFDD
   519                           plusw2	equ	0xFDB
   520                           fsr2h	equ	0xFDA
   521                           fsr2l	equ	0xFD9
   522                           status	equ	0xFD8
   523                           
   524                           	psect	bssCOMRAM
   525  000001                     __pbssCOMRAM:
   526                           	opt stack 0
   527  000001                     _outPipes:
   528                           	opt stack 0
   529  000001                     	ds	8
   530  000009                     _inPipes:
   531                           	opt stack 0
   532  000009                     	ds	6
   533  00000F                     _pBDTEntryIn:
   534                           	opt stack 0
   535  00000F                     	ds	6
   536  000015                     _pBDTEntryEP0OutNext:
   537                           	opt stack 0
   538  000015                     	ds	2
   539  000017                     _pBDTEntryEP0OutCurrent:
   540                           	opt stack 0
   541  000017                     	ds	2
   542  000019                     APP_LEDUpdateUSBStatus@ledCount:
   543                           	opt stack 0
   544  000019                     	ds	2
   545  00001B                     _cdc_tx_len:
   546                           	opt stack 0
   547  00001B                     	ds	1
   548  00001C                     _cdc_rx_len:
   549                           	opt stack 0
   550  00001C                     	ds	1
   551  00001D                     _USBDeferINDataStagePackets:
   552                           	opt stack 0
   553  00001D                     	ds	1
   554  00001E                     _USBStatusStageEnabledFlag2:
   555                           	opt stack 0
   556  00001E                     	ds	1
   557  00001F                     _USBStatusStageEnabledFlag1:
   558                           	opt stack 0
   559  00001F                     	ds	1
   560  000020                     _USBDeferStatusStagePacket:
   561                           	opt stack 0
   562  000020                     	ds	1
   563  000021                     _USBStatusStageTimeoutCounter:
   564                           	opt stack 0
   565  000021                     	ds	1
   566  000022                     _BothEP0OutUOWNsSet:
   567                           	opt stack 0
   568  000022                     	ds	1
   569  000023                     _endpoint_number:
   570                           	opt stack 0
   571  000023                     	ds	1
   572  000024                     _USBBusIsSuspended:
   573                           	opt stack 0
   574  000024                     	ds	1
   575  000025                     _RemoteWakeup:
   576                           	opt stack 0
   577  000025                     	ds	1
   578  000026                     _controlTransferState:
   579                           	opt stack 0
   580  000026                     	ds	1
   581  000027                     _shortPacketStatus:
   582                           	opt stack 0
   583  000027                     	ds	1
   584  000028                     _USTATcopy:
   585                           	opt stack 0
   586  000028                     	ds	1
   587  000029                     _USBActiveConfiguration:
   588                           	opt stack 0
   589  000029                     	ds	1
   590                           tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           prodh	equ	0xFF4
   595                           prodl	equ	0xFF3
   596                           intcon	equ	0xFF2
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           indf1	equ	0xFE7
   600                           postdec1	equ	0xFE5
   601                           fsr1h	equ	0xFE2
   602                           fsr1l	equ	0xFE1
   603                           indf2	equ	0xFDF
   604                           postinc2	equ	0xFDE
   605                           postdec2	equ	0xFDD
   606                           plusw2	equ	0xFDB
   607                           fsr2h	equ	0xFDA
   608                           fsr2l	equ	0xFD9
   609                           status	equ	0xFD8
   610                           
   611                           	psect	bssBANK0
   612  000060                     __pbssBANK0:
   613                           	opt stack 0
   614  000060                     _pBDTEntryOut:
   615                           	opt stack 0
   616  000060                     	ds	6
   617  000066                     _USB1msTickCount:
   618                           	opt stack 0
   619  000066                     	ds	4
   620  00006A                     _pCDCDst:
   621                           	opt stack 0
   622  00006A                     	ds	3
   623  00006D                     _pCDCSrc:
   624                           	opt stack 0
   625  00006D                     	ds	3
   626  000070                     _ep_data_out:
   627                           	opt stack 0
   628  000070                     	ds	3
   629  000073                     _ep_data_in:
   630                           	opt stack 0
   631  000073                     	ds	3
   632  000076                     _CDCDataInHandle:
   633                           	opt stack 0
   634  000076                     	ds	2
   635  000078                     _CDCDataOutHandle:
   636                           	opt stack 0
   637  000078                     	ds	2
   638  00007A                     _pDst:
   639                           	opt stack 0
   640  00007A                     	ds	2
   641  00007C                     _cdc_mem_type:
   642                           	opt stack 0
   643  00007C                     	ds	1
   644  00007D                     _USBTicksSinceSuspendEnd:
   645                           	opt stack 0
   646  00007D                     	ds	1
   647  00007E                     _USBDeferOUTDataStagePackets:
   648                           	opt stack 0
   649  00007E                     	ds	1
   650  00007F                     _buttonPressed:
   651                           	opt stack 0
   652  00007F                     	ds	1
   653  000080                     _cdc_trf_state:
   654                           	opt stack 0
   655  000080                     	ds	1
   656  000081                     _USBDeviceState:
   657                           	opt stack 0
   658  000081                     	ds	1
   659  000082                     _dummy_encapsulated_cmd_response:
   660                           	opt stack 0
   661  000082                     	ds	8
   662  00008A                     _line_coding:
   663                           	opt stack 0
   664  00008A                     	ds	7
   665  000091                     _USBAlternateInterface:
   666                           	opt stack 0
   667  000091                     	ds	2
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           prodh	equ	0xFF4
   673                           prodl	equ	0xFF3
   674                           intcon	equ	0xFF2
   675                           postinc0	equ	0xFEE
   676                           wreg	equ	0xFE8
   677                           indf1	equ	0xFE7
   678                           postdec1	equ	0xFE5
   679                           fsr1h	equ	0xFE2
   680                           fsr1l	equ	0xFE1
   681                           indf2	equ	0xFDF
   682                           postinc2	equ	0xFDE
   683                           postdec2	equ	0xFDD
   684                           plusw2	equ	0xFDB
   685                           fsr2h	equ	0xFDA
   686                           fsr2l	equ	0xFD9
   687                           status	equ	0xFD8
   688                           
   689                           	psect	dataBANK0
   690  0000B7                     __pdataBANK0:
   691                           	opt stack 0
   692  0000B7                     _GLOBAL_COUNTER:
   693                           	opt stack 0
   694  0000B7                     	ds	1
   695  0000B8                     _buttonMessage:
   696                           	opt stack 0
   697  0000B8                     	ds	18
   698                           tblptru	equ	0xFF8
   699                           tblptrh	equ	0xFF7
   700                           tblptrl	equ	0xFF6
   701                           tablat	equ	0xFF5
   702                           prodh	equ	0xFF4
   703                           prodl	equ	0xFF3
   704                           intcon	equ	0xFF2
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           indf1	equ	0xFE7
   708                           postdec1	equ	0xFE5
   709                           fsr1h	equ	0xFE2
   710                           fsr1l	equ	0xFE1
   711                           indf2	equ	0xFDF
   712                           postinc2	equ	0xFDE
   713                           postdec2	equ	0xFDD
   714                           plusw2	equ	0xFDB
   715                           fsr2h	equ	0xFDA
   716                           fsr2l	equ	0xFD9
   717                           status	equ	0xFD8
   718                           
   719                           	psect	bssBANK1
   720  000100                     __pbssBANK1:
   721                           	opt stack 0
   722  000100                     _writeBuffer:
   723                           	opt stack 0
   724  000100                     	ds	64
   725  000140                     _readBuffer:
   726                           	opt stack 0
   727  000140                     	ds	64
   728                           tblptru	equ	0xFF8
   729                           tblptrh	equ	0xFF7
   730                           tblptrl	equ	0xFF6
   731                           tablat	equ	0xFF5
   732                           prodh	equ	0xFF4
   733                           prodl	equ	0xFF3
   734                           intcon	equ	0xFF2
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           indf1	equ	0xFE7
   738                           postdec1	equ	0xFE5
   739                           fsr1h	equ	0xFE2
   740                           fsr1l	equ	0xFE1
   741                           indf2	equ	0xFDF
   742                           postinc2	equ	0xFDE
   743                           postdec2	equ	0xFDD
   744                           plusw2	equ	0xFDB
   745                           fsr2h	equ	0xFDA
   746                           fsr2l	equ	0xFD9
   747                           status	equ	0xFD8
   748                           
   749                           	psect	cstackBANK0
   750  000093                     __pcstackBANK0:
   751                           	opt stack 0
   752  000093                     ??_PIC18F26K40_sendByteMsbToLsb:
   753  000093                     ?_USBTransferOnePacket:
   754                           	opt stack 0
   755  000093                     PIC18F26K40_sendByte@direction:
   756                           	opt stack 0
   757  000093                     BUTTON_IsPressed@button:
   758                           	opt stack 0
   759  000093                     BUTTON_Enable@button:
   760                           	opt stack 0
   761  000093                     LED_Enable@led:
   762                           	opt stack 0
   763  000093                     USBTransferOnePacket@dir:
   764                           	opt stack 0
   765  000093                     putUSBUSART@data:
   766                           	opt stack 0
   767  000093                     putrsUSBUSART@data:
   768                           	opt stack 0
   769  000093                     memset@p1:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x0
   773  000093                     	ds	1
   774  000094                     ??_PIC18F26K40_sendByte:
   775  000094                     SYSTEM_Initialize@state:
   776                           	opt stack 0
   777  000094                     USBTransferOnePacket@data:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x1
   781  000094                     	ds	1
   782  000095                     ??_putrsUSBUSART:
   783  000095                     PIC18F26K40_sendByteMsbToLsb@info:
   784                           	opt stack 0
   785  000095                     putUSBUSART@length:
   786                           	opt stack 0
   787  000095                     memset@c:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x2
   791  000095                     	ds	1
   792  000096                     PIC18F26K40_sendByte@info:
   793                           	opt stack 0
   794  000096                     PIC18F26K40_sendByteMsbToLsb@i:
   795                           	opt stack 0
   796  000096                     USBTransferOnePacket@len:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x3
   800  000096                     	ds	1
   801  000097                     ??_USBTransferOnePacket:
   802  000097                     PIC18F26K40_sendByte@j:
   803                           	opt stack 0
   804  000097                     putrsUSBUSART@pData:
   805                           	opt stack 0
   806  000097                     memset@n:
   807                           	opt stack 0
   808  000097                     PIC18F26K40_loadDataIntoNVM@data:
   809                           	opt stack 0
   810                           
   811                           ; 4 bytes @ 0x4
   812  000097                     	ds	1
   813  000098                     PIC18F26K40_sendByte@i:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x5
   817  000098                     	ds	1
   818  000099                     ?_PIC18F26K40_readThreeBytes:
   819                           	opt stack 0
   820  000099                     PIC18F26K40_readThreeBytes@IncreasePC:
   821                           	opt stack 0
   822  000099                     USBTransferOnePacket@ep:
   823                           	opt stack 0
   824  000099                     putrsUSBUSART@len:
   825                           	opt stack 0
   826  000099                     memset@p:
   827                           	opt stack 0
   828  000099                     PIC18F26K40_enterLowVoltageProg@code:
   829                           	opt stack 0
   830  000099                     PIC18F26K40_loadPC@address:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x6
   834  000099                     	ds	1
   835  00009A                     USBTransferOnePacket@handle:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x7
   839  00009A                     	ds	1
   840  00009B                     PIC18F26K40_loadDataIntoNVM@IncreasePC:
   841                           	opt stack 0
   842  00009B                     USBDeviceInit@i:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x8
   846  00009B                     	ds	1
   847  00009C                     ??_PIC18F26K40_loadDataIntoNVM:
   848  00009C                     CDCTxService@i:
   849                           	opt stack 0
   850  00009C                     getsUSBUSART@buffer:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x9
   854  00009C                     	ds	1
   855  00009D                     ??_PIC18F26K40_readThreeBytes:
   856  00009D                     CDCTxService@byte_to_send:
   857                           	opt stack 0
   858  00009D                     PIC18F26K40_loadPC@tempAddress:
   859                           	opt stack 0
   860  00009D                     PIC18F26K40_loadDataIntoNVM@tempData:
   861                           	opt stack 0
   862                           
   863                           ; 4 bytes @ 0xA
   864  00009D                     	ds	1
   865  00009E                     getsUSBUSART@len:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0xB
   869  00009E                     	ds	1
   870  00009F                     
   871                           ; 1 bytes @ 0xC
   872  00009F                     	ds	5
   873  0000A4                     PIC18F26K40_readThreeBytes@direction:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x11
   877  0000A4                     	ds	1
   878  0000A5                     PIC18F26K40_readThreeBytes@data:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0x12
   882  0000A5                     	ds	4
   883  0000A9                     PIC18F26K40_readThreeBytes@j:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x16
   887  0000A9                     	ds	1
   888  0000AA                     PIC18F26K40_readThreeBytes@i:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x17
   892  0000AA                     	ds	1
   893  0000AB                     APP_DeviceCDCBasicDemoTasks@a:
   894                           	opt stack 0
   895                           
   896                           ; 4 bytes @ 0x18
   897  0000AB                     	ds	4
   898  0000AF                     APP_DeviceCDCBasicDemoTasks@a_2114:
   899                           	opt stack 0
   900                           
   901                           ; 4 bytes @ 0x1C
   902  0000AF                     	ds	4
   903  0000B3                     APP_DeviceCDCBasicDemoTasks@numBytesRead:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x20
   907  0000B3                     	ds	1
   908  0000B4                     APP_DeviceCDCBasicDemoTasks@i:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x21
   912  0000B4                     	ds	1
   913  0000B5                     ??_main:
   914                           
   915                           ; 1 bytes @ 0x22
   916  0000B5                     	ds	2
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           prodh	equ	0xFF4
   922                           prodl	equ	0xFF3
   923                           intcon	equ	0xFF2
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           indf1	equ	0xFE7
   927                           postdec1	equ	0xFE5
   928                           fsr1h	equ	0xFE2
   929                           fsr1l	equ	0xFE1
   930                           indf2	equ	0xFDF
   931                           postinc2	equ	0xFDE
   932                           postdec2	equ	0xFDD
   933                           plusw2	equ	0xFDB
   934                           fsr2h	equ	0xFDA
   935                           fsr2l	equ	0xFD9
   936                           status	equ	0xFD8
   937                           
   938                           	psect	cstackCOMRAM
   939  00002A                     __pcstackCOMRAM:
   940                           	opt stack 0
   941  00002A                     ??_USBStdGetDscHandler:
   942  00002A                     ?i2_USBTransferOnePacket:
   943                           	opt stack 0
   944  00002A                     LED_On@led:
   945                           	opt stack 0
   946  00002A                     LED_Off@led:
   947                           	opt stack 0
   948  00002A                     USBConfigureEndpoint@direction:
   949                           	opt stack 0
   950  00002A                     USBCtrlTrfTxService@byteToSend:
   951                           	opt stack 0
   952  00002A                     USBCtrlTrfRxService@i:
   953                           	opt stack 0
   954  00002A                     i2BUTTON_Enable@button:
   955                           	opt stack 0
   956  00002A                     i2LED_Enable@led:
   957                           	opt stack 0
   958  00002A                     i2USBTransferOnePacket@dir:
   959                           	opt stack 0
   960  00002A                     USBStdGetStatusHandler@p:
   961                           	opt stack 0
   962  00002A                     memcpy@d1:
   963                           	opt stack 0
   964  00002A                     i2memset@p1:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x0
   968  00002A                     	ds	1
   969  00002B                     ??_USBConfigureEndpoint:
   970  00002B                     USBCtrlTrfRxService@byteToRead:
   971                           	opt stack 0
   972  00002B                     USBCtrlTrfInHandler@lastDTS:
   973                           	opt stack 0
   974  00002B                     i2SYSTEM_Initialize@state:
   975                           	opt stack 0
   976  00002B                     i2USBTransferOnePacket@data:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x1
   980  00002B                     	ds	1
   981  00002C                     memcpy@s1:
   982                           	opt stack 0
   983  00002C                     i2memset@c:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x2
   987  00002C                     	ds	1
   988  00002D                     i2USBTransferOnePacket@len:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x3
   992  00002D                     	ds	1
   993  00002E                     ??i2_USBTransferOnePacket:
   994  00002E                     memcpy@n:
   995                           	opt stack 0
   996  00002E                     i2memset@n:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x4
  1000  00002E                     	ds	1
  1001  00002F                     USBConfigureEndpoint@EPNum:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x5
  1005  00002F                     	ds	1
  1006  000030                     i2USBTransferOnePacket@ep:
  1007                           	opt stack 0
  1008  000030                     USBConfigureEndpoint@handle:
  1009                           	opt stack 0
  1010  000030                     memcpy@d:
  1011                           	opt stack 0
  1012  000030                     i2memset@p:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x6
  1016  000030                     	ds	1
  1017  000031                     i2USBTransferOnePacket@handle:
  1018                           	opt stack 0
  1019                           
  1020                           ; 2 bytes @ 0x7
  1021  000031                     	ds	1
  1022  000032                     USBEnableEndpoint@options:
  1023                           	opt stack 0
  1024  000032                     i2USBDeviceInit@i:
  1025                           	opt stack 0
  1026  000032                     memcpy@s:
  1027                           	opt stack 0
  1028                           
  1029                           ; 2 bytes @ 0x8
  1030  000032                     	ds	1
  1031  000033                     USBEnableEndpoint@p:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x9
  1035  000033                     	ds	1
  1036  000034                     memcpy@tmp:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0xA
  1040  000034                     	ds	1
  1041  000035                     USBEnableEndpoint@ep:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0xB
  1045  000035                     	ds	1
  1046  000036                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0xC
  1050  000036                     	ds	2
  1051  000038                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0xE
  1055  000038                     	ds	2
  1056  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x10
  1060  00003A                     	ds	2
  1061  00003C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1062                           
  1063                           ; 1 bytes @ 0x12
  1064  00003C                     	ds	2
  1065  00003E                     ??_USBStdFeatureReqHandler:
  1066  00003E                     USBStdSetCfgHandler@i:
  1067                           	opt stack 0
  1068                           
  1069                           ; 1 bytes @ 0x14
  1070  00003E                     	ds	2
  1071  000040                     USBStdFeatureReqHandler@pUEP:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x16
  1075  000040                     	ds	2
  1076  000042                     USBStdFeatureReqHandler@current_ep_data:
  1077                           	opt stack 0
  1078                           
  1079                           ; 1 bytes @ 0x18
  1080  000042                     	ds	1
  1081  000043                     USBStdFeatureReqHandler@p:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x19
  1085  000043                     	ds	2
  1086  000045                     ??_USBCheckStdRequest:
  1087                           
  1088                           ; 1 bytes @ 0x1B
  1089  000045                     	ds	1
  1090  000046                     ??_USBCtrlEPService:
  1091  000046                     
  1092                           ; 1 bytes @ 0x1C
  1093  000046                     	ds	1
  1094  000047                     USBDeviceTasks@i:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0x1D
  1098  000047                     	ds	1
  1099  000048                     ??_SYS_InterruptHigh:
  1100                           
  1101                           ; 1 bytes @ 0x1E
  1102  000048                     	ds	10
  1103                           tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           prodh	equ	0xFF4
  1108                           prodl	equ	0xFF3
  1109                           intcon	equ	0xFF2
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           indf1	equ	0xFE7
  1113                           postdec1	equ	0xFE5
  1114                           fsr1h	equ	0xFE2
  1115                           fsr1l	equ	0xFE1
  1116                           indf2	equ	0xFDF
  1117                           postinc2	equ	0xFDE
  1118                           postdec2	equ	0xFDD
  1119                           plusw2	equ	0xFDB
  1120                           fsr2h	equ	0xFDA
  1121                           fsr2l	equ	0xFD9
  1122                           status	equ	0xFD8
  1123                           
  1124 ;;
  1125 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1126 ;;
  1127 ;; *************** function _main *****************
  1128 ;; Defined at:
  1129 ;;		line 12 in file "main.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1143 ;;      Params:         0       0       0       0
  1144 ;;      Locals:         0       0       0       0
  1145 ;;      Temps:          0       2       0       0
  1146 ;;      Totals:         0       2       0       0
  1147 ;;Total ram usage:        2 bytes
  1148 ;; Hardware stack levels required when called:   14
  1149 ;; This function calls:
  1150 ;;		_APP_DeviceCDCBasicDemoTasks
  1151 ;;		_SYSTEM_Initialize
  1152 ;;		_USBDeviceAttach
  1153 ;;		_USBDeviceInit
  1154 ;; This function is called by:
  1155 ;;		Startup code after reset
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text0
  1160  001880                     __ptext0:
  1161                           	opt stack 0
  1162  001880                     _main:
  1163                           	opt stack 17
  1164                           
  1165                           ;main.c: 13: ANSEL = ANSELH = 0;
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;incstack = 0
  1169  001880  6A7F               	clrf	3967,c	;volatile
  1170  001882  6A7E               	clrf	3966,c	;volatile
  1171                           
  1172                           ;main.c: 14: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1173  001884  0E00               	movlw	0
  1174  001886  EC1C  F00D         	call	_SYSTEM_Initialize
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;main.c: 15: USBDeviceInit();
  1178  00188A  EC0A  F00A         	call	_USBDeviceInit	;wreg free
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;main.c: 16: USBDeviceAttach();
  1182  00188E  EC0C  F00C         	call	_USBDeviceAttach	;wreg free
  1183  001892                     l5042:
  1184                           
  1185                           ;main.c: 18: ;
  1186                           ;main.c: 37: APP_DeviceCDCBasicDemoTasks();
  1187  001892  ECC4  F002         	call	_APP_DeviceCDCBasicDemoTasks	;wreg free
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 38: _delay((unsigned long)((100)*(12000000/4000.0)));
  1191  001896  0E02               	movlw	2
  1192  001898  0100               	movlb	0	; () banked
  1193  00189A  6FB6               	movwf	(??_main+1)& (0+255),b
  1194  00189C  0E86               	movlw	134
  1195  00189E  6FB5               	movwf	??_main& (0+255),b
  1196  0018A0  0E99               	movlw	153
  1197  0018A2                     u4097:
  1198  0018A2  2EE8               	decfsz	wreg,f,c
  1199  0018A4  D7FE               	bra	u4097
  1200  0018A6  2FB5               	decfsz	??_main& (0+255),f,b
  1201  0018A8  D7FC               	bra	u4097
  1202  0018AA  2FB6               	decfsz	(??_main+1)& (0+255),f,b
  1203  0018AC  D7FA               	bra	u4097
  1204  0018AE  D7F1               	goto	l5042
  1205  0018B0                     __end_of_main:
  1206                           	opt stack 0
  1207                           tblptru	equ	0xFF8
  1208                           tblptrh	equ	0xFF7
  1209                           tblptrl	equ	0xFF6
  1210                           tablat	equ	0xFF5
  1211                           prodh	equ	0xFF4
  1212                           prodl	equ	0xFF3
  1213                           intcon	equ	0xFF2
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           indf1	equ	0xFE7
  1217                           postdec1	equ	0xFE5
  1218                           fsr1h	equ	0xFE2
  1219                           fsr1l	equ	0xFE1
  1220                           indf2	equ	0xFDF
  1221                           postinc2	equ	0xFDE
  1222                           postdec2	equ	0xFDD
  1223                           plusw2	equ	0xFDB
  1224                           fsr2h	equ	0xFDA
  1225                           fsr2l	equ	0xFD9
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _USBDeviceInit *****************
  1229 ;; Defined at:
  1230 ;;		line 277 in file "picLibs/usb_device.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  i               1    8[BANK0 ] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 3F/0
  1241 ;;		On exit  : 3F/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1244 ;;      Params:         0       0       0       0
  1245 ;;      Locals:         0       1       0       0
  1246 ;;      Temps:          0       0       0       0
  1247 ;;      Totals:         0       1       0       0
  1248 ;;Total ram usage:        1 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:   11
  1251 ;; This function calls:
  1252 ;;		_memset
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text1
  1259  001414                     __ptext1:
  1260                           	opt stack 0
  1261  001414                     _USBDeviceInit:
  1262                           	opt stack 0
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;usb_device.c: 279: uint8_t i;
  1266                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1267                           
  1268                           ;incstack = 0
  1269                           
  1270                           ;usb_device.c: 285: ;
  1271                           ;usb_device.c: 288: {UEIR = 0;};
  1272                           
  1273                           ;usb_device.c: 291: {UIR = 0;};
  1274                           
  1275                           ;usb_device.c: 294: UEP0 = 0;
  1276  001414  ECC8  F004         	call	PL76	;call to abstracted procedure
  1277                           
  1278                           ; BSR set to: 15
  1279                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1280  001418  0E54               	movlw	84
  1281  00141A  0100               	movlb	0	; () banked
  1282  00141C  6F93               	movwf	memset@p1& (0+255),b
  1283  00141E  0E0F               	movlw	15
  1284  001420  6F94               	movwf	(memset@p1+1)& (0+255),b
  1285  001422  6B96               	clrf	(memset@c+1)& (0+255),b
  1286  001424  6B95               	clrf	memset@c& (0+255),b
  1287  001426  6B98               	clrf	(memset@n+1)& (0+255),b
  1288  001428  0E02               	movlw	2
  1289  00142A  6F97               	movwf	memset@n& (0+255),b
  1290  00142C  ECB2  F00C         	call	_memset	;wreg free
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1294                           
  1295                           ; BSR set to: 0
  1296                           
  1297                           ; BSR set to: 15
  1298  001430  EC1E  F00C         	call	PL30	;call to abstracted procedure
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;usb_device.c: 301: ;
  1302                           ;usb_device.c: 304: ;
  1303                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1304  001434  0100               	movlb	0	; () banked
  1305  001436  6B9B               	clrf	USBDeviceInit@i& (0+255),b
  1306  001438                     l4958:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;usb_device.c: 308: {
  1310                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1311  001438  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1312  00143A  ECBC  F004         	call	PL34	;call to abstracted procedure
  1313                           
  1314                           ; BSR set to: 0
  1315  00143E  2B9B               	incf	USBDeviceInit@i& (0+255),f,b
  1316                           
  1317                           ; BSR set to: 0
  1318  001440  0E0B               	movlw	11
  1319  001442  659B               	cpfsgt	USBDeviceInit@i& (0+255),b
  1320  001444  D7F9               	goto	l4958
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;usb_device.c: 310: }
  1324                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1325                           
  1326                           ;usb_device.c: 316: UADDR = 0x00;
  1327                           
  1328                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1329                           
  1330                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1331                           
  1332                           ;usb_device.c: 326: {
  1333                           ;usb_device.c: 327: (UIR &= 0xF7);
  1334                           
  1335                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1336                           
  1337                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1338                           
  1339                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1340                           
  1341                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1342                           
  1343                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1344                           
  1345                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1346                           
  1347                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1348                           
  1349                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1353  001446  ECA8  F004         	call	PL20	;call to abstracted procedure
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1357  00144A  6B9B               	clrf	USBDeviceInit@i& (0+255),b
  1358  00144C                     l4988:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;usb_device.c: 346: {
  1362                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1363  00144C  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1364  00144E  EC88  F005         	call	PL26	;call to abstracted procedure
  1365  001452  6ADE               	clrf	postinc2,c
  1366  001454  6ADD               	clrf	postdec2,c
  1367                           
  1368                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1369  001456  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1370  001458  EC82  F005         	call	PL24	;call to abstracted procedure
  1371  00145C  6ADE               	clrf	postinc2,c
  1372  00145E  6ADD               	clrf	postdec2,c
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1376  001460  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1377  001462  ECD3  F004         	call	PL88	;call to abstracted procedure
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1381  001466  519B               	movf	USBDeviceInit@i& (0+255),w,b
  1382  001468  ECCE  F004         	call	PL80	;call to abstracted procedure
  1383                           
  1384                           ; BSR set to: 0
  1385  00146C  2B9B               	incf	USBDeviceInit@i& (0+255),f,b
  1386                           
  1387                           ; BSR set to: 0
  1388  00146E  0E02               	movlw	2
  1389  001470  659B               	cpfsgt	USBDeviceInit@i& (0+255),b
  1390  001472  D7EC               	goto	l4988
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;usb_device.c: 351: }
  1394                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1395  001474  0E08               	movlw	8
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1399                           
  1400                           ; BSR set to: 15
  1401                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1402                           
  1403                           ; BSR set to: 2
  1404                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1405                           
  1406                           ; BSR set to: 2
  1407                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1408                           
  1409                           ; BSR set to: 2
  1410                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1411                           
  1412                           ; BSR set to: 2
  1413                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1414                           
  1415                           ; BSR set to: 2
  1416                           ;usb_device.c: 366: USB1msTickCount = 0;
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1423                           
  1424                           ; BSR set to: 0
  1425  001476  EF8F  F004         	goto	PL14	;call to abstracted procedure
  1426  00147A                     __end_of_USBDeviceInit:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           prodh	equ	0xFF4
  1433                           prodl	equ	0xFF3
  1434                           intcon	equ	0xFF2
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           indf1	equ	0xFE7
  1438                           postdec1	equ	0xFE5
  1439                           fsr1h	equ	0xFE2
  1440                           fsr1l	equ	0xFE1
  1441                           indf2	equ	0xFDF
  1442                           postinc2	equ	0xFDE
  1443                           postdec2	equ	0xFDD
  1444                           plusw2	equ	0xFDB
  1445                           fsr2h	equ	0xFDA
  1446                           fsr2l	equ	0xFD9
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _memset *****************
  1450 ;; Defined at:
  1451 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  p1              2    0[BANK0 ] PTR void 
  1454 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1455 ;;  c               2    2[BANK0 ] int 
  1456 ;;  n               2    4[BANK0 ] unsigned int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  p               2    6[BANK0 ] PTR unsigned char 
  1459 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  2    0[BANK0 ] PTR void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 3F/0
  1466 ;;		On exit  : 3F/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1469 ;;      Params:         0       6       0       0
  1470 ;;      Locals:         0       2       0       0
  1471 ;;      Temps:          0       0       0       0
  1472 ;;      Totals:         0       8       0       0
  1473 ;;Total ram usage:        8 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:   10
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_USBDeviceInit
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text2
  1484  001964                     __ptext2:
  1485                           	opt stack 0
  1486  001964                     _memset:
  1487                           	opt stack 19
  1488                           
  1489                           ; BSR set to: 0
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;incstack = 0
  1493  001964  C093  F099         	movff	memset@p1,memset@p
  1494  001968  C094  F09A         	movff	memset@p1+1,memset@p+1
  1495  00196C  D008               	goto	l4864
  1496  00196E                     l4860:
  1497                           
  1498                           ; BSR set to: 0
  1499  00196E  C099  FFD9         	movff	memset@p,fsr2l
  1500  001972  C09A  FFDA         	movff	memset@p+1,fsr2h
  1501  001976  C095  FFDF         	movff	memset@c,indf2
  1502                           
  1503                           ; BSR set to: 0
  1504  00197A  4B99               	infsnz	memset@p& (0+255),f,b
  1505  00197C  2B9A               	incf	(memset@p+1)& (0+255),f,b
  1506  00197E                     l4864:
  1507                           
  1508                           ; BSR set to: 0
  1509  00197E  0797               	decf	memset@n& (0+255),f,b
  1510  001980  A0D8               	btfss	status,0,c
  1511  001982  0798               	decf	(memset@n+1)& (0+255),f,b
  1512  001984  2997               	incf	memset@n& (0+255),w,b
  1513  001986  E1F3               	bnz	l4860
  1514  001988  2998               	incf	(memset@n+1)& (0+255),w,b
  1515  00198A  E1F1               	bnz	l4860
  1516                           
  1517                           ; BSR set to: 0
  1518  00198C  0012               	return		;funcret
  1519  00198E                     __end_of_memset:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           prodh	equ	0xFF4
  1526                           prodl	equ	0xFF3
  1527                           intcon	equ	0xFF2
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           indf1	equ	0xFE7
  1531                           postdec1	equ	0xFE5
  1532                           fsr1h	equ	0xFE2
  1533                           fsr1l	equ	0xFE1
  1534                           indf2	equ	0xFDF
  1535                           postinc2	equ	0xFDE
  1536                           postdec2	equ	0xFDD
  1537                           plusw2	equ	0xFDB
  1538                           fsr2h	equ	0xFDA
  1539                           fsr2l	equ	0xFD9
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function _USBDeviceAttach *****************
  1543 ;; Defined at:
  1544 ;;		line 1352 in file "picLibs/usb_device.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2
  1553 ;; Tracked objects:
  1554 ;;		On entry : 3F/0
  1555 ;;		On exit  : 3F/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1558 ;;      Params:         0       0       0       0
  1559 ;;      Locals:         0       0       0       0
  1560 ;;      Temps:          0       0       0       0
  1561 ;;      Totals:         0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:   10
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text3
  1573  001818                     __ptext3:
  1574                           	opt stack 0
  1575  001818                     _USBDeviceAttach:
  1576                           	opt stack 20
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;usb_device.c: 1356: {
  1580                           ;usb_device.c: 1357: if(1 == 1)
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;incstack = 0
  1584  001818  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1585  00181A  A4D8               	btfss	status,2,c
  1586  00181C  0012               	return	
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;usb_device.c: 1358: {
  1590                           ;usb_device.c: 1360: UCON = 0;
  1591  00181E  6A64               	clrf	3940,c	;volatile
  1592                           
  1593                           ;usb_device.c: 1363: UIE = 0;
  1594  001820  6A60               	clrf	3936,c	;volatile
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1598  001822  D80C               	call	PL30	;call to abstracted procedure
  1599                           
  1600                           ; BSR set to: 15
  1601                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1602  001824  8ED0               	bsf	4048,7,c	;volatile
  1603                           
  1604                           ; BSR set to: 15
  1605  001826  84A2               	bsf	4002,2,c	;volatile
  1606                           
  1607                           ; BSR set to: 15
  1608  001828  84A0               	bsf	4000,2,c	;volatile
  1609                           
  1610                           ; BSR set to: 15
  1611  00182A  8EF2               	bsf	intcon,7,c	;volatile
  1612                           
  1613                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1614  00182C  D001               	goto	l525
  1615  00182E                     l526:
  1616  00182E  8664               	bsf	3940,3,c	;volatile
  1617  001830                     l525:
  1618  001830  A664               	btfss	3940,3,c	;volatile
  1619  001832  D7FD               	goto	l526
  1620                           
  1621                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1622  001834  0E01               	movlw	1
  1623  001836  0100               	movlb	0	; () banked
  1624  001838  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  1625                           
  1626                           ; BSR set to: 0
  1627  00183A  0C01               	retlw	1	;funcret
  1628  00183C                     __end_of_USBDeviceAttach:
  1629                           	opt stack 0
  1630  00183C                     PL30:
  1631                           	opt stack 19
  1632  00183C  0E16               	movlw	22
  1633  00183E  6E61               	movwf	3937,c	;volatile
  1634  001840  0E9F               	movlw	159
  1635  001842  010F               	movlb	15	; () banked
  1636  001844  6F5B               	movwf	91,b	;volatile
  1637  001846  0E7B               	movlw	123
  1638  001848  6E60               	movwf	3936,c	;volatile
  1639  00184A  0C7B               	retlw	123
  1640  00184C                     __end_ofPL30:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           prodh	equ	0xFF4
  1647                           prodl	equ	0xFF3
  1648                           intcon	equ	0xFF2
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           indf1	equ	0xFE7
  1652                           postdec1	equ	0xFE5
  1653                           fsr1h	equ	0xFE2
  1654                           fsr1l	equ	0xFE1
  1655                           indf2	equ	0xFDF
  1656                           postinc2	equ	0xFDE
  1657                           postdec2	equ	0xFDD
  1658                           plusw2	equ	0xFDB
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _SYSTEM_Initialize *****************
  1664 ;; Defined at:
  1665 ;;		line 66 in file "picLibs/system.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  state           1    wreg     enum E3329
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  state           1    1[BANK0 ] enum E3329
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 3F/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1679 ;;      Params:         0       0       0       0
  1680 ;;      Locals:         0       1       0       0
  1681 ;;      Temps:          0       0       0       0
  1682 ;;      Totals:         0       1       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:   11
  1686 ;; This function calls:
  1687 ;;		_BUTTON_Enable
  1688 ;;		_LED_Enable
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text4
  1695  001A38                     __ptext4:
  1696                           	opt stack 0
  1697  001A38                     _SYSTEM_Initialize:
  1698                           	opt stack 19
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;incstack = 0
  1702                           ;SYSTEM_Initialize@state stored from wreg
  1703  001A38  0100               	movlb	0	; () banked
  1704  001A3A  6F94               	movwf	SYSTEM_Initialize@state& (0+255),b
  1705                           
  1706                           ;system.c: 68: switch(state)
  1707  001A3C  D006               	goto	l4940
  1708  001A3E                     l4936:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;system.c: 71: LED_Enable(LED_D1);
  1712  001A3E  0E01               	movlw	1
  1713  001A40  EC58  F00C         	call	_LED_Enable
  1714                           
  1715                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  1716  001A44  0E01               	movlw	1
  1717  001A46  EF70  F00D         	goto	_BUTTON_Enable
  1718  001A4A                     l4940:
  1719  001A4A  0100               	movlb	0	; () banked
  1720  001A4C  5194               	movf	SYSTEM_Initialize@state& (0+255),w,b
  1721                           
  1722                           ; Switch size 1, requested type "space"
  1723                           ; Number of cases is 3, Range of values is 0 to 2
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte           10     6 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  001A4E  E0F7               	bz	l4936
  1729  001A50  EF18  F00D         	goto	PL102	;call to abstracted procedure
  1730  001A54                     __end_of_SYSTEM_Initialize:
  1731                           	opt stack 0
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           prodh	equ	0xFF4
  1737                           prodl	equ	0xFF3
  1738                           intcon	equ	0xFF2
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           indf1	equ	0xFE7
  1742                           postdec1	equ	0xFE5
  1743                           fsr1h	equ	0xFE2
  1744                           fsr1l	equ	0xFE1
  1745                           indf2	equ	0xFDF
  1746                           postinc2	equ	0xFDE
  1747                           postdec2	equ	0xFDD
  1748                           plusw2	equ	0xFDB
  1749                           fsr2h	equ	0xFDA
  1750                           fsr2l	equ	0xFD9
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _LED_Enable *****************
  1754 ;; Defined at:
  1755 ;;		line 220 in file "picLibs/leds.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  led             1    wreg     enum E2
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  led             1    0[BANK0 ] enum E2
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 3F/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1769 ;;      Params:         0       0       0       0
  1770 ;;      Locals:         0       1       0       0
  1771 ;;      Temps:          0       0       0       0
  1772 ;;      Totals:         0       1       0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:   10
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_SYSTEM_Initialize
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text5
  1784  0018B0                     __ptext5:
  1785                           	opt stack 0
  1786  0018B0                     _LED_Enable:
  1787                           	opt stack 19
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;incstack = 0
  1791                           ;LED_Enable@led stored from wreg
  1792  0018B0  0100               	movlb	0	; () banked
  1793  0018B2  6F93               	movwf	LED_Enable@led& (0+255),b
  1794                           
  1795                           ;leds.c: 222: switch(led)
  1796  0018B4  D008               	goto	l4856
  1797  0018B6                     l286:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  1801  0018B6  9094               	bcf	3988,0,c	;volatile
  1802                           
  1803                           ;leds.c: 226: break;
  1804  0018B8  0012               	return	
  1805  0018BA                     l288:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  1809  0018BA  9294               	bcf	3988,1,c	;volatile
  1810                           
  1811                           ;leds.c: 230: break;
  1812  0018BC  0012               	return	
  1813  0018BE                     l289:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  1817  0018BE  9494               	bcf	3988,2,c	;volatile
  1818                           
  1819                           ;leds.c: 234: break;
  1820  0018C0  0012               	return	
  1821  0018C2                     l290:
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  1825  0018C2  9694               	bcf	3988,3,c	;volatile
  1826                           
  1827                           ;leds.c: 238: break;
  1828  0018C4  0012               	return	
  1829  0018C6                     l4856:
  1830  0018C6  0100               	movlb	0	; () banked
  1831  0018C8  5193               	movf	LED_Enable@led& (0+255),w,b
  1832                           
  1833                           ; Switch size 1, requested type "space"
  1834                           ; Number of cases is 5, Range of values is 0 to 4
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte           16     9 (average)
  1838                           ;	Chosen strategy is simple_byte
  1839  0018CA  B4D8               	btfsc	status,2,c
  1840  0018CC  0012               	return	
  1841  0018CE  0A01               	xorlw	1	; case 1
  1842  0018D0  E0F2               	bz	l286
  1843  0018D2  0A03               	xorlw	3	; case 2
  1844  0018D4  E0F2               	bz	l288
  1845  0018D6  0A01               	xorlw	1	; case 3
  1846  0018D8  E0F2               	bz	l289
  1847  0018DA  0A07               	xorlw	7	; case 4
  1848  0018DC  E0F2               	bz	l290
  1849                           
  1850                           ; BSR set to: 0
  1851  0018DE  0012               	return		;funcret
  1852  0018E0                     __end_of_LED_Enable:
  1853                           	opt stack 0
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           prodh	equ	0xFF4
  1859                           prodl	equ	0xFF3
  1860                           intcon	equ	0xFF2
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           indf1	equ	0xFE7
  1864                           postdec1	equ	0xFE5
  1865                           fsr1h	equ	0xFE2
  1866                           fsr1l	equ	0xFE1
  1867                           indf2	equ	0xFDF
  1868                           postinc2	equ	0xFDE
  1869                           postdec2	equ	0xFDD
  1870                           plusw2	equ	0xFDB
  1871                           fsr2h	equ	0xFDA
  1872                           fsr2l	equ	0xFD9
  1873                           status	equ	0xFD8
  1874                           
  1875 ;; *************** function _BUTTON_Enable *****************
  1876 ;; Defined at:
  1877 ;;		line 85 in file "picLibs/buttons.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  button          1    wreg     enum E3304
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  button          1    0[BANK0 ] enum E3304
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 3F/0
  1888 ;;		On exit  : 3F/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1891 ;;      Params:         0       0       0       0
  1892 ;;      Locals:         0       1       0       0
  1893 ;;      Temps:          0       0       0       0
  1894 ;;      Totals:         0       1       0       0
  1895 ;;Total ram usage:        1 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:   10
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_SYSTEM_Initialize
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text6
  1906  001AE0                     __ptext6:
  1907                           	opt stack 0
  1908  001AE0                     _BUTTON_Enable:
  1909                           	opt stack 19
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;incstack = 0
  1913                           ;BUTTON_Enable@button stored from wreg
  1914  001AE0  6F93               	movwf	BUTTON_Enable@button& (0+255),b
  1915                           
  1916                           ;buttons.c: 87: switch(button)
  1917  001AE2  0100               	movlb	0	; () banked
  1918  001AE4  5193               	movf	BUTTON_Enable@button& (0+255),w,b
  1919                           
  1920                           ; Switch size 1, requested type "space"
  1921                           ; Number of cases is 2, Range of values is 0 to 1
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte            7     4 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926  001AE6  EF6D  F00D         	goto	PL114	;call to abstracted procedure
  1927  001AEA                     __end_of_BUTTON_Enable:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           prodh	equ	0xFF4
  1934                           prodl	equ	0xFF3
  1935                           intcon	equ	0xFF2
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           indf1	equ	0xFE7
  1939                           postdec1	equ	0xFE5
  1940                           fsr1h	equ	0xFE2
  1941                           fsr1l	equ	0xFE1
  1942                           indf2	equ	0xFDF
  1943                           postinc2	equ	0xFDE
  1944                           postdec2	equ	0xFDD
  1945                           plusw2	equ	0xFDB
  1946                           fsr2h	equ	0xFDA
  1947                           fsr2l	equ	0xFD9
  1948                           status	equ	0xFD8
  1949                           
  1950 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  1951 ;; Defined at:
  1952 ;;		line 77 in file "picLibs/app_device_cdc_basic.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  a               4   28[BANK0 ] struct _DWORD_VAL
  1957 ;;  a               4   24[BANK0 ] struct _DWORD_VAL
  1958 ;;  i               1   33[BANK0 ] unsigned char 
  1959 ;;  numBytesRead    1   32[BANK0 ] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 3F/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1969 ;;      Params:         0       0       0       0
  1970 ;;      Locals:         0      10       0       0
  1971 ;;      Temps:          0       0       0       0
  1972 ;;      Totals:         0      10       0       0
  1973 ;;Total ram usage:       10 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:   13
  1976 ;; This function calls:
  1977 ;;		_BUTTON_IsPressed
  1978 ;;		_CDCTxService
  1979 ;;		_PIC18F26K40_enterLowVoltageProg
  1980 ;;		_PIC18F26K40_exitLowVoltageProg
  1981 ;;		_PIC18F26K40_loadDataIntoNVM
  1982 ;;		_PIC18F26K40_loadPC
  1983 ;;		_PIC18F26K40_readThreeBytes
  1984 ;;		_getsUSBUSART
  1985 ;;		_putUSBUSART
  1986 ;;		_putrsUSBUSART
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text7
  1993  000588                     __ptext7:
  1994                           	opt stack 0
  1995  000588                     _APP_DeviceCDCBasicDemoTasks:
  1996                           	opt stack 17
  1997                           
  1998                           ;app_device_cdc_basic.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;incstack = 0
  2002  000588  0E20               	movlw	32
  2003  00058A  0100               	movlb	0	; () banked
  2004  00058C  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  2005  00058E  D001               	goto	l176
  2006  000590  0C20               	retlw	32
  2007  000592                     l176:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;app_device_cdc_basic.c: 85: }
  2011                           ;app_device_cdc_basic.c: 91: if( UCONbits.SUSPND== 1 )
  2012  000592  B264               	btfsc	3940,1,c	;volatile
  2013  000594  0012               	return	
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;app_device_cdc_basic.c: 94: }
  2017                           ;app_device_cdc_basic.c: 99: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  2018  000596  0E01               	movlw	1
  2019  000598  EC46  F00D         	call	_BUTTON_IsPressed
  2020  00059C  06E8               	decf	wreg,f,c
  2021  00059E  E10C               	bnz	l179
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;app_device_cdc_basic.c: 100: {
  2025                           ;app_device_cdc_basic.c: 104: if(buttonPressed == 0)
  2026  0005A0  517F               	movf	_buttonPressed& (0+255),w,b
  2027  0005A2  E10B               	bnz	l4882
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;app_device_cdc_basic.c: 105: {
  2031                           ;app_device_cdc_basic.c: 108: if((cdc_trf_state == 0) == 1)
  2032  0005A4  5180               	movf	_cdc_trf_state& (0+255),w,b
  2033  0005A6  E109               	bnz	l4882
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;app_device_cdc_basic.c: 109: {
  2037                           ;app_device_cdc_basic.c: 110: putrsUSBUSART(buttonMessage);
  2038  0005A8  0EB8               	movlw	low _buttonMessage
  2039  0005AA  6F93               	movwf	putrsUSBUSART@data& (0+255),b
  2040  0005AC  6B94               	clrf	(putrsUSBUSART@data+1)& (0+255),b
  2041  0005AE  EC3D  F00A         	call	_putrsUSBUSART	;wreg free
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;app_device_cdc_basic.c: 111: buttonPressed = 1;
  2045  0005B2  0E01               	movlw	1
  2046  0005B4  6F7F               	movwf	_buttonPressed& (0+255),b
  2047  0005B6  D001               	goto	l4882
  2048  0005B8                     l179:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;app_device_cdc_basic.c: 115: else
  2052                           ;app_device_cdc_basic.c: 116: {
  2053                           ;app_device_cdc_basic.c: 120: buttonPressed = 0;
  2054  0005B8  6B7F               	clrf	_buttonPressed& (0+255),b
  2055  0005BA                     l4882:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;app_device_cdc_basic.c: 121: }
  2059                           ;app_device_cdc_basic.c: 126: if( (cdc_trf_state == 0) == 1)
  2060  0005BA  5180               	movf	_cdc_trf_state& (0+255),w,b
  2061  0005BC  E002 EFEF  F003    	bnz	_CDCTxService
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;app_device_cdc_basic.c: 127: {
  2065                           ;app_device_cdc_basic.c: 128: uint8_t i;
  2066                           ;app_device_cdc_basic.c: 129: uint8_t numBytesRead;
  2067                           ;app_device_cdc_basic.c: 131: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  2068  0005C2  0E40               	movlw	low _readBuffer
  2069  0005C4  6F9C               	movwf	getsUSBUSART@buffer& (0+255),b
  2070  0005C6  0E01               	movlw	high _readBuffer
  2071  0005C8  6F9D               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
  2072  0005CA  0E40               	movlw	64
  2073  0005CC  6F9E               	movwf	getsUSBUSART@len& (0+255),b
  2074  0005CE  ECB6  F008         	call	_getsUSBUSART	;wreg free
  2075  0005D2  6FB3               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),b
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;app_device_cdc_basic.c: 134: for(i=0; i<numBytesRead; i++)
  2079  0005D4  6BB4               	clrf	APP_DeviceCDCBasicDemoTasks@i& (0+255),b
  2080  0005D6  D06E               	goto	l4926
  2081  0005D8                     l4888:
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;app_device_cdc_basic.c: 142: case 0x0D:
  2085                           ;app_device_cdc_basic.c: 143: putrsUSBUSART("\n\r");
  2086  0005D8  0EEC               	movlw	low (STR_2+38)
  2087  0005DA  D87B               	call	PL96	;call to abstracted procedure
  2088  0005DC  EC3D  F00A         	call	_putrsUSBUSART	;wreg free
  2089                           
  2090                           ;app_device_cdc_basic.c: 145: break;
  2091  0005E0  D068               	goto	l4924
  2092  0005E2                     l4890:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;app_device_cdc_basic.c: 152: DWORD_VAL a;
  2096                           ;app_device_cdc_basic.c: 153: a.Val = 0x310000;
  2097  0005E2  6BAB               	clrf	APP_DeviceCDCBasicDemoTasks@a& (0+255),b
  2098  0005E4  6BAC               	clrf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),b
  2099  0005E6  0E31               	movlw	49
  2100  0005E8  6FAD               	movwf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2101  0005EA  0E00               	movlw	0
  2102  0005EC  6BAE               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;app_device_cdc_basic.c: 154: PIC18F26K40_enterLowVoltageProg();
  2106  0005EE  EC8F  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;app_device_cdc_basic.c: 155: PIC18F26K40_loadPC(a);
  2110  0005F2  C0AB  F099         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadPC@address
  2111  0005F6  C0AC  F09A         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadPC@address+1
  2112  0005FA  C0AD  F09B         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadPC@address+2
  2113  0005FE  C0AE  F09C         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadPC@address+3
  2114  000602  ECD3  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2115                           
  2116                           ;app_device_cdc_basic.c: 156: a.Val = GLOBAL_COUNTER;
  2117  000606  51B7               	movf	_GLOBAL_COUNTER& (0+255),w,b
  2118  000608  6FAB               	movwf	APP_DeviceCDCBasicDemoTasks@a& (0+255),b
  2119  00060A  6BAC               	clrf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),b
  2120  00060C  6BAD               	clrf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2121  00060E  6BAE               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;app_device_cdc_basic.c: 157: putrsUSBUSART("GLOBAL_COUNTER is placed at 0x00310000\n\r"
      +                          );
  2125  000610  0EC6               	movlw	low STR_2
  2126  000612  D85F               	call	PL96	;call to abstracted procedure
  2127  000614  EC3D  F00A         	call	_putrsUSBUSART	;wreg free
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;app_device_cdc_basic.c: 158: PIC18F26K40_loadDataIntoNVM(a, FALSE);
  2131  000618  C0AB  F097         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadDataIntoNVM@data
  2132  00061C  C0AC  F098         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadDataIntoNVM@data+1
  2133  000620  C0AD  F099         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadDataIntoNVM@data+2
  2134  000624  C0AE  F09A         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadDataIntoNVM@data+3
  2135  000628  6B9B               	clrf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),b
  2136  00062A  EC6C  F00A         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2137                           
  2138                           ;app_device_cdc_basic.c: 159: PIC18F26K40_exitLowVoltageProg();
  2139  00062E  EC75  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2140                           
  2141                           ;app_device_cdc_basic.c: 160: GLOBAL_COUNTER++;
  2142  000632  0100               	movlb	0	; () banked
  2143  000634  2BB7               	incf	_GLOBAL_COUNTER& (0+255),f,b
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;app_device_cdc_basic.c: 161: if (GLOBAL_COUNTER>0x39)
  2147  000636  0E39               	movlw	57
  2148  000638  65B7               	cpfsgt	_GLOBAL_COUNTER& (0+255),b
  2149  00063A  D03B               	goto	l4924
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;app_device_cdc_basic.c: 162: GLOBAL_COUNTER = 0x30;
  2153  00063C  0E30               	movlw	48
  2154  00063E  6FB7               	movwf	_GLOBAL_COUNTER& (0+255),b
  2155  000640  D038               	goto	l4924
  2156  000642                     l4908:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;app_device_cdc_basic.c: 170: DWORD_VAL a;
  2160                           ;app_device_cdc_basic.c: 171: a.Val = 0x310000;
  2161  000642  6BAF               	clrf	APP_DeviceCDCBasicDemoTasks@a_2114& (0+255),b
  2162  000644  6BB0               	clrf	(APP_DeviceCDCBasicDemoTasks@a_2114+1)& (0+255),b
  2163  000646  0E31               	movlw	49
  2164  000648  6FB1               	movwf	(APP_DeviceCDCBasicDemoTasks@a_2114+2)& (0+255),b
  2165  00064A  0E00               	movlw	0
  2166  00064C  6BB2               	clrf	(APP_DeviceCDCBasicDemoTasks@a_2114+3)& (0+255),b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;app_device_cdc_basic.c: 172: PIC18F26K40_enterLowVoltageProg();
  2170  00064E  EC8F  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;app_device_cdc_basic.c: 173: PIC18F26K40_loadPC(a);
  2174  000652  C0AF  F099         	movff	APP_DeviceCDCBasicDemoTasks@a_2114,PIC18F26K40_loadPC@address
  2175  000656  C0B0  F09A         	movff	APP_DeviceCDCBasicDemoTasks@a_2114+1,PIC18F26K40_loadPC@address+1
  2176  00065A  C0B1  F09B         	movff	APP_DeviceCDCBasicDemoTasks@a_2114+2,PIC18F26K40_loadPC@address+2
  2177  00065E  C0B2  F09C         	movff	APP_DeviceCDCBasicDemoTasks@a_2114+3,PIC18F26K40_loadPC@address+3
  2178  000662  ECD3  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;app_device_cdc_basic.c: 174: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2182  000666  0E00               	movlw	0
  2183  000668  6F99               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2184  00066A  ECFF  F005         	call	_PIC18F26K40_readThreeBytes
  2185  00066E  C099  F0AF         	movff	?_PIC18F26K40_readThreeBytes,APP_DeviceCDCBasicDemoTasks@a_2114
  2186  000672  C09A  F0B0         	movff	?_PIC18F26K40_readThreeBytes+1,APP_DeviceCDCBasicDemoTasks@a_2114+1
  2187  000676  C09B  F0B1         	movff	?_PIC18F26K40_readThreeBytes+2,APP_DeviceCDCBasicDemoTasks@a_2114+2
  2188  00067A  C09C  F0B2         	movff	?_PIC18F26K40_readThreeBytes+3,APP_DeviceCDCBasicDemoTasks@a_2114+3
  2189                           
  2190                           ;app_device_cdc_basic.c: 175: PIC18F26K40_exitLowVoltageProg();
  2191  00067E  EC75  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2192                           
  2193                           ;app_device_cdc_basic.c: 176: writeBuffer[i] = a.v[0];
  2194  000682  0E00               	movlw	low _writeBuffer
  2195  000684  0100               	movlb	0	; () banked
  2196  000686  25B4               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2197  000688  6ED9               	movwf	fsr2l,c
  2198  00068A  6ADA               	clrf	fsr2h,c
  2199  00068C  0E01               	movlw	high _writeBuffer
  2200  00068E  22DA               	addwfc	fsr2h,f,c
  2201  000690  C0AF  FFDF         	movff	APP_DeviceCDCBasicDemoTasks@a_2114,indf2
  2202                           
  2203                           ;app_device_cdc_basic.c: 180: break;
  2204  000694  D00E               	goto	l4924
  2205  000696                     l4922:
  2206                           
  2207                           ; BSR set to: 0
  2208  000696  0E40               	movlw	low _readBuffer
  2209  000698  25B4               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2210  00069A  6ED9               	movwf	fsr2l,c
  2211  00069C  6ADA               	clrf	fsr2h,c
  2212  00069E  0E01               	movlw	high _readBuffer
  2213  0006A0  22DA               	addwfc	fsr2h,f,c
  2214  0006A2  50DF               	movf	indf2,w,c
  2215                           
  2216                           ; Switch size 1, requested type "space"
  2217                           ; Number of cases is 3, Range of values is 10 to 65
  2218                           ; switch strategies available:
  2219                           ; Name         Instructions Cycles
  2220                           ; simple_byte           10     6 (average)
  2221                           ;	Chosen strategy is simple_byte
  2222  0006A4  0A0A               	xorlw	10	; case 10
  2223  0006A6  E098               	bz	l4888
  2224  0006A8  0A07               	xorlw	7	; case 13
  2225  0006AA  E096               	bz	l4888
  2226  0006AC  0A4C               	xorlw	76	; case 65
  2227  0006AE  E099               	bz	l4890
  2228  0006B0  D7C8               	goto	l4908
  2229  0006B2                     l4924:
  2230                           
  2231                           ; BSR set to: 0
  2232  0006B2  2BB4               	incf	APP_DeviceCDCBasicDemoTasks@i& (0+255),f,b
  2233  0006B4                     l4926:
  2234                           
  2235                           ; BSR set to: 0
  2236  0006B4  51B3               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2237  0006B6  5DB4               	subwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2238  0006B8  E3EE               	bnc	l4922
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;app_device_cdc_basic.c: 191: }
  2242                           ;app_device_cdc_basic.c: 193: if(numBytesRead > 0)
  2243  0006BA  51B3               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2244  0006BC  E008               	bz	l4932
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;app_device_cdc_basic.c: 194: {
  2248                           ;app_device_cdc_basic.c: 198: putUSBUSART(writeBuffer,numBytesRead);
  2249  0006BE  0E00               	movlw	low _writeBuffer
  2250  0006C0  6F93               	movwf	putUSBUSART@data& (0+255),b
  2251  0006C2  0E01               	movlw	high _writeBuffer
  2252  0006C4  6F94               	movwf	(putUSBUSART@data+1)& (0+255),b
  2253  0006C6  C0B3  F095         	movff	APP_DeviceCDCBasicDemoTasks@numBytesRead,putUSBUSART@length
  2254  0006CA  EC2A  F00D         	call	_putUSBUSART	;wreg free
  2255  0006CE                     l4932:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;app_device_cdc_basic.c: 199: }
  2259                           ;app_device_cdc_basic.c: 200: }
  2260                           ;app_device_cdc_basic.c: 202: CDCTxService();
  2261  0006CE  EFEF  F003         	goto	_CDCTxService	;wreg free
  2262  0006D2                     __end_of_APP_DeviceCDCBasicDemoTasks:
  2263                           	opt stack 0
  2264  0006D2                     PL96:
  2265                           	opt stack 17
  2266  0006D2  6F93               	movwf	putrsUSBUSART@data& (0+255),b
  2267  0006D4  5193               	movf	putrsUSBUSART@data& (0+255),w,b
  2268  0006D6  A4D8               	btfss	status,2,c
  2269  0006D8  0E03               	movlw	high __smallconst
  2270  0006DA  6F94               	movwf	(putrsUSBUSART@data+1)& (0+255),b
  2271  0006DC  0012               	return	
  2272  0006DE                     __end_ofPL96:
  2273                           	opt stack 0
  2274                           tblptru	equ	0xFF8
  2275                           tblptrh	equ	0xFF7
  2276                           tblptrl	equ	0xFF6
  2277                           tablat	equ	0xFF5
  2278                           prodh	equ	0xFF4
  2279                           prodl	equ	0xFF3
  2280                           intcon	equ	0xFF2
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           indf1	equ	0xFE7
  2284                           postdec1	equ	0xFE5
  2285                           fsr1h	equ	0xFE2
  2286                           fsr1l	equ	0xFE1
  2287                           indf2	equ	0xFDF
  2288                           postinc2	equ	0xFDE
  2289                           postdec2	equ	0xFDD
  2290                           plusw2	equ	0xFDB
  2291                           fsr2h	equ	0xFDA
  2292                           fsr2l	equ	0xFD9
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function _putrsUSBUSART *****************
  2296 ;; Defined at:
  2297 ;;		line 726 in file "picLibs/usb_device_cdc.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  data            2    0[BANK0 ] PTR const unsigned char 
  2300 ;;		 -> STR_2(41), STR_1(3), buttonMessage(18), 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  pData           2    4[BANK0 ] PTR const unsigned char 
  2303 ;;		 -> STR_2(41), STR_1(3), buttonMessage(18), 
  2304 ;;  len             1    6[BANK0 ] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  2309 ;; Tracked objects:
  2310 ;;		On entry : 3F/0
  2311 ;;		On exit  : 3F/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2314 ;;      Params:         0       2       0       0
  2315 ;;      Locals:         0       3       0       0
  2316 ;;      Temps:          0       2       0       0
  2317 ;;      Totals:         0       7       0       0
  2318 ;;Total ram usage:        7 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:   10
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_APP_DeviceCDCBasicDemoTasks
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text8
  2329  00147A                     __ptext8:
  2330                           	opt stack 0
  2331  00147A                     _putrsUSBUSART:
  2332                           	opt stack 19
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;usb_device_cdc.c: 728: uint8_t len;
  2336                           ;usb_device_cdc.c: 729: const const char *pData;
  2337                           ;usb_device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;incstack = 0
  2341  00147A  94A0               	bcf	4000,2,c	;volatile
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  2345  00147C  5180               	movf	_cdc_trf_state& (0+255),w,b
  2346  00147E  E002               	bz	l815
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;usb_device_cdc.c: 756: {
  2350                           ;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  2351  001480  84A0               	bsf	4000,2,c	;volatile
  2352                           
  2353                           ;usb_device_cdc.c: 758: return;
  2354  001482  0012               	return	
  2355  001484                     l815:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;usb_device_cdc.c: 759: }
  2359                           ;usb_device_cdc.c: 765: len = 0;
  2360  001484  6B99               	clrf	putrsUSBUSART@len& (0+255),b
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;usb_device_cdc.c: 766: pData = data;
  2364  001486  C093  F097         	movff	putrsUSBUSART@data,putrsUSBUSART@pData
  2365  00148A  C094  F098         	movff	putrsUSBUSART@data+1,putrsUSBUSART@pData+1
  2366  00148E                     l4722:
  2367                           
  2368                           ;usb_device_cdc.c: 768: {
  2369                           ;usb_device_cdc.c: 769: len++;
  2370  00148E  0100               	movlb	0	; () banked
  2371  001490  2B99               	incf	putrsUSBUSART@len& (0+255),f,b
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;usb_device_cdc.c: 770: if(len == 255) break;
  2375  001492  2999               	incf	putrsUSBUSART@len& (0+255),w,b
  2376  001494  E015               	bz	l4730
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;usb_device_cdc.c: 771: }while(*pData++);
  2380  001496  5197               	movf	putrsUSBUSART@pData& (0+255),w,b
  2381  001498  6F95               	movwf	??_putrsUSBUSART& (0+255),b
  2382  00149A  5198               	movf	(putrsUSBUSART@pData+1)& (0+255),w,b
  2383  00149C  6F96               	movwf	(??_putrsUSBUSART+1)& (0+255),b
  2384  00149E  4B97               	infsnz	putrsUSBUSART@pData& (0+255),f,b
  2385  0014A0  2B98               	incf	(putrsUSBUSART@pData+1)& (0+255),f,b
  2386  0014A2  C095  FFF6         	movff	??_putrsUSBUSART,tblptrl
  2387  0014A6  C096  FFF7         	movff	??_putrsUSBUSART+1,tblptrh
  2388  0014AA  6AF8               	clrf	tblptru,c
  2389  0014AC  0E02               	movlw	(high __ramtop+-1)
  2390  0014AE  64F7               	cpfsgt	tblptrh,c
  2391  0014B0  D003               	bra	u3737
  2392  0014B2  0008               	tblrd		*
  2393  0014B4  50F5               	movf	tablat,w,c
  2394  0014B6  D002               	bra	u3730
  2395  0014B8                     u3737:
  2396  0014B8  EC25  F005         	call	PL18	;call to abstracted procedure
  2397  0014BC                     u3730:
  2398  0014BC  0900               	iorlw	0
  2399  0014BE  E1E7               	bnz	l4722
  2400  0014C0                     l4730:
  2401                           
  2402                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  2403  0014C0  C093  F06D         	movff	putrsUSBUSART@data,_pCDCSrc
  2404  0014C4  C094  F06E         	movff	putrsUSBUSART@data+1,_pCDCSrc+1
  2405  0014C8  C099  F01B         	movff	putrsUSBUSART@len,_cdc_tx_len
  2406  0014CC  0100               	movlb	0	; () banked
  2407  0014CE  6B7C               	clrf	_cdc_mem_type& (0+255),b
  2408                           
  2409                           ; BSR set to: 0
  2410  0014D0  0E01               	movlw	1
  2411  0014D2  6F80               	movwf	_cdc_trf_state& (0+255),b
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  2415  0014D4  84A0               	bsf	4000,2,c	;volatile
  2416                           
  2417                           ; BSR set to: 0
  2418  0014D6  0C01               	retlw	1	;funcret
  2419  0014D8                     __end_of_putrsUSBUSART:
  2420                           	opt stack 0
  2421                           tblptru	equ	0xFF8
  2422                           tblptrh	equ	0xFF7
  2423                           tblptrl	equ	0xFF6
  2424                           tablat	equ	0xFF5
  2425                           prodh	equ	0xFF4
  2426                           prodl	equ	0xFF3
  2427                           intcon	equ	0xFF2
  2428                           postinc0	equ	0xFEE
  2429                           wreg	equ	0xFE8
  2430                           indf1	equ	0xFE7
  2431                           postdec1	equ	0xFE5
  2432                           fsr1h	equ	0xFE2
  2433                           fsr1l	equ	0xFE1
  2434                           indf2	equ	0xFDF
  2435                           postinc2	equ	0xFDE
  2436                           postdec2	equ	0xFDD
  2437                           plusw2	equ	0xFDB
  2438                           fsr2h	equ	0xFDA
  2439                           fsr2l	equ	0xFD9
  2440                           status	equ	0xFD8
  2441                           
  2442 ;; *************** function _putUSBUSART *****************
  2443 ;; Defined at:
  2444 ;;		line 556 in file "picLibs/usb_device_cdc.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  data            2    0[BANK0 ] PTR unsigned char 
  2447 ;;		 -> writeBuffer(64), 
  2448 ;;  length          1    2[BANK0 ] unsigned char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 3F/0
  2457 ;;		On exit  : 3F/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2460 ;;      Params:         0       3       0       0
  2461 ;;      Locals:         0       0       0       0
  2462 ;;      Temps:          0       0       0       0
  2463 ;;      Totals:         0       3       0       0
  2464 ;;Total ram usage:        3 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:   10
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_APP_DeviceCDCBasicDemoTasks
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text9
  2475  001A54                     __ptext9:
  2476                           	opt stack 0
  2477  001A54                     _putUSBUSART:
  2478                           	opt stack 19
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;incstack = 0
  2485  001A54  94A0               	bcf	4000,2,c	;volatile
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2489  001A56  5180               	movf	_cdc_trf_state& (0+255),w,b
  2490  001A58  E109               	bnz	l4776
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;usb_device_cdc.c: 583: {
  2494                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2495  001A5A  C093  F06D         	movff	putUSBUSART@data,_pCDCSrc
  2496  001A5E  C094  F06E         	movff	putUSBUSART@data+1,_pCDCSrc+1
  2497                           
  2498                           ; BSR set to: 0
  2499  001A62  C095  F01B         	movff	putUSBUSART@length,_cdc_tx_len
  2500                           
  2501                           ; BSR set to: 0
  2502  001A66  0E01               	movlw	1
  2503  001A68  6F7C               	movwf	_cdc_mem_type& (0+255),b
  2504                           
  2505                           ; BSR set to: 0
  2506  001A6A  6F80               	movwf	_cdc_trf_state& (0+255),b
  2507  001A6C                     l4776:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;usb_device_cdc.c: 585: }
  2511                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2512  001A6C  84A0               	bsf	4000,2,c	;volatile
  2513                           
  2514                           ; BSR set to: 0
  2515  001A6E  0012               	return		;funcret
  2516  001A70                     __end_of_putUSBUSART:
  2517                           	opt stack 0
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           prodh	equ	0xFF4
  2523                           prodl	equ	0xFF3
  2524                           intcon	equ	0xFF2
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           indf1	equ	0xFE7
  2528                           postdec1	equ	0xFE5
  2529                           fsr1h	equ	0xFE2
  2530                           fsr1l	equ	0xFE1
  2531                           indf2	equ	0xFDF
  2532                           postinc2	equ	0xFDE
  2533                           postdec2	equ	0xFDD
  2534                           plusw2	equ	0xFDB
  2535                           fsr2h	equ	0xFDA
  2536                           fsr2l	equ	0xFD9
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _getsUSBUSART *****************
  2540 ;; Defined at:
  2541 ;;		line 485 in file "picLibs/usb_device_cdc.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  buffer          2    9[BANK0 ] PTR unsigned char 
  2544 ;;		 -> readBuffer(64), 
  2545 ;;  len             1   11[BANK0 ] unsigned char 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      unsigned char 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 3F/0
  2554 ;;		On exit  : 3F/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2557 ;;      Params:         0       3       0       0
  2558 ;;      Locals:         0       0       0       0
  2559 ;;      Temps:          0       1       0       0
  2560 ;;      Totals:         0       4       0       0
  2561 ;;Total ram usage:        4 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:   11
  2564 ;; This function calls:
  2565 ;;		_USBTransferOnePacket
  2566 ;; This function is called by:
  2567 ;;		_APP_DeviceCDCBasicDemoTasks
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text10
  2572  00116C                     __ptext10:
  2573                           	opt stack 0
  2574  00116C                     _getsUSBUSART:
  2575                           	opt stack 18
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;incstack = 0
  2582  00116C  6A1C               	clrf	_cdc_rx_len,c
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2586  00116E  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2587  001170  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  2588  001172  E006               	bz	l4746
  2589                           
  2590                           ; BSR set to: 0
  2591  001174  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2592  001178  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2593  00117C  BEDF               	btfsc	indf2,7,c
  2594  00117E  D028               	goto	l4760
  2595  001180                     l4746:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;usb_device_cdc.c: 490: {
  2599                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2600  001180  D829               	call	PL72	;call to abstracted procedure
  2601  001182  519E               	movf	getsUSBUSART@len& (0+255),w,b
  2602  001184  5CDE               	subwf	postinc2,w,c
  2603  001186  E203               	bc	l4750
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2607  001188  D825               	call	PL72	;call to abstracted procedure
  2608  00118A  50DF               	movf	indf2,w,c
  2609  00118C  6F9E               	movwf	getsUSBUSART@len& (0+255),b
  2610  00118E                     l4750:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2614  00118E  6A1C               	clrf	_cdc_rx_len,c
  2615  001190  D00D               	goto	l4756
  2616  001192                     l4752:
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2620  001192  0E80               	movlw	128
  2621  001194  241C               	addwf	_cdc_rx_len,w,c
  2622  001196  ECFA  F005         	call	PL108	;call to abstracted procedure
  2623  00119A  501C               	movf	_cdc_rx_len,w,c
  2624  00119C  259C               	addwf	getsUSBUSART@buffer& (0+255),w,b
  2625  00119E  6EE1               	movwf	fsr1l,c
  2626  0011A0  0E00               	movlw	0
  2627  0011A2  219D               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  2628  0011A4  6EE2               	movwf	fsr1h,c
  2629  0011A6  CFDF FFE7          	movff	indf2,indf1
  2630                           
  2631                           ; BSR set to: 0
  2632  0011AA  2A1C               	incf	_cdc_rx_len,f,c
  2633  0011AC                     l4756:
  2634                           
  2635                           ; BSR set to: 0
  2636  0011AC  519E               	movf	getsUSBUSART@len& (0+255),w,b
  2637  0011AE  5C1C               	subwf	_cdc_rx_len,w,c
  2638  0011B0  E3F0               	bnc	l4752
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2642  0011B2  0E00               	movlw	0
  2643  0011B4  6F93               	movwf	USBTransferOnePacket@dir& (0+255),b
  2644  0011B6  0E80               	movlw	128
  2645  0011B8  6F94               	movwf	USBTransferOnePacket@data& (0+255),b
  2646  0011BA  0E02               	movlw	2
  2647  0011BC  6F95               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  2648  0011BE  0E40               	movlw	64
  2649  0011C0  6F96               	movwf	USBTransferOnePacket@len& (0+255),b
  2650  0011C2  0E02               	movlw	2
  2651  0011C4  EC41  F005         	call	_USBTransferOnePacket
  2652  0011C8  C093  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  2653  0011CC  C094  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  2654  0011D0                     l4760:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;usb_device_cdc.c: 510: }
  2658                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2659  0011D0  501C               	movf	_cdc_rx_len,w,c
  2660                           
  2661                           ; BSR set to: 0
  2662  0011D2  0012               	return		;funcret
  2663  0011D4                     __end_of_getsUSBUSART:
  2664                           	opt stack 0
  2665  0011D4                     PL72:
  2666                           	opt stack 18
  2667  0011D4  EE20 F001          	lfsr	2,1
  2668  0011D8  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2669  0011DA  26D9               	addwf	fsr2l,f,c
  2670  0011DC  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  2671  0011DE  22DA               	addwfc	fsr2h,f,c
  2672  0011E0  0012               	return	
  2673  0011E2                     __end_ofPL72:
  2674                           	opt stack 0
  2675                           tblptru	equ	0xFF8
  2676                           tblptrh	equ	0xFF7
  2677                           tblptrl	equ	0xFF6
  2678                           tablat	equ	0xFF5
  2679                           prodh	equ	0xFF4
  2680                           prodl	equ	0xFF3
  2681                           intcon	equ	0xFF2
  2682                           postinc0	equ	0xFEE
  2683                           wreg	equ	0xFE8
  2684                           indf1	equ	0xFE7
  2685                           postdec1	equ	0xFE5
  2686                           fsr1h	equ	0xFE2
  2687                           fsr1l	equ	0xFE1
  2688                           indf2	equ	0xFDF
  2689                           postinc2	equ	0xFDE
  2690                           postdec2	equ	0xFDD
  2691                           plusw2	equ	0xFDB
  2692                           fsr2h	equ	0xFDA
  2693                           fsr2l	equ	0xFD9
  2694                           status	equ	0xFD8
  2695                           
  2696 ;; *************** function _PIC18F26K40_readThreeBytes *****************
  2697 ;; Defined at:
  2698 ;;		line 53 in file "libs/progPIC18F26K40.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  direction       1    wreg     enum E4265
  2701 ;;  IncreasePC      1    6[BANK0 ] enum E4064
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  direction       1   17[BANK0 ] enum E4265
  2704 ;;  data            4   18[BANK0 ] struct _DWORD_VAL
  2705 ;;  i               1   23[BANK0 ] unsigned char 
  2706 ;;  j               1   22[BANK0 ] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  4    6[BANK0 ] struct _DWORD_VAL
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 3F/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2716 ;;      Params:         0       4       0       0
  2717 ;;      Locals:         0       7       0       0
  2718 ;;      Temps:          0       7       0       0
  2719 ;;      Totals:         0      18       0       0
  2720 ;;Total ram usage:       18 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:   12
  2723 ;; This function calls:
  2724 ;;		_PIC18F26K40_sendByte
  2725 ;; This function is called by:
  2726 ;;		_APP_DeviceCDCBasicDemoTasks
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text11
  2731  000BFE                     __ptext11:
  2732                           	opt stack 0
  2733  000BFE                     _PIC18F26K40_readThreeBytes:
  2734                           	opt stack 17
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;incstack = 0
  2738                           ;PIC18F26K40_readThreeBytes@direction stored from wreg
  2739  000BFE  6FA4               	movwf	PIC18F26K40_readThreeBytes@direction& (0+255),b
  2740                           
  2741                           ;progPIC18F26K40.c: 54: if (IncreasePC)
  2742  000C00  0100               	movlb	0	; () banked
  2743  000C02  5199               	movf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),w,b
  2744  000C04  E005               	bz	l4632
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;progPIC18F26K40.c: 55: PIC18F26K40_sendByte(0xFE, MSBTOLSB);
  2748  000C06  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2749  000C08  0EFE               	movlw	254
  2750  000C0A  ECC6  F00A         	call	_PIC18F26K40_sendByte
  2751  000C0E  D004               	goto	l4634
  2752  000C10                     l4632:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;progPIC18F26K40.c: 56: else
  2756                           ;progPIC18F26K40.c: 57: PIC18F26K40_sendByte(0xFC, MSBTOLSB);
  2757  000C10  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2758  000C12  0EFC               	movlw	252
  2759  000C14  ECC6  F00A         	call	_PIC18F26K40_sendByte
  2760  000C18                     l4634:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;progPIC18F26K40.c: 58: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2764  000C18  D000               	nop2		;2 cycle nop
  2765  000C1A  F000               	nop	
  2766                           
  2767                           ;progPIC18F26K40.c: 59: DWORD_VAL data;
  2768                           ;progPIC18F26K40.c: 60: data.Val = 0x000000;
  2769  000C1C  0100               	movlb	0	; () banked
  2770  000C1E  6BA5               	clrf	PIC18F26K40_readThreeBytes@data& (0+255),b
  2771  000C20  6BA6               	clrf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),b
  2772  000C22  6BA7               	clrf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),b
  2773  000C24  6BA8               	clrf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;progPIC18F26K40.c: 61: BYTE i, j;
  2777                           ;progPIC18F26K40.c: 62: TRISCbits.TRISC6 = 1;
  2778  000C26  8C94               	bsf	3988,6,c	;volatile
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;progPIC18F26K40.c: 63: for (i = 0; i < 23; i++) {
  2782  000C28  6BAA               	clrf	PIC18F26K40_readThreeBytes@i& (0+255),b
  2783  000C2A                     l4646:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;progPIC18F26K40.c: 64: if (direction)
  2787  000C2A  51A4               	movf	PIC18F26K40_readThreeBytes@direction& (0+255),w,b
  2788  000C2C  E003               	bz	l4650
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;progPIC18F26K40.c: 65: j = i;
  2792  000C2E  C0AA  F0A9         	movff	PIC18F26K40_readThreeBytes@i,PIC18F26K40_readThreeBytes@j
  2793  000C32  D003               	goto	l4652
  2794  000C34                     l4650:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;progPIC18F26K40.c: 66: else
  2798                           ;progPIC18F26K40.c: 67: j = 22-i;
  2799  000C34  51AA               	movf	PIC18F26K40_readThreeBytes@i& (0+255),w,b
  2800  000C36  0816               	sublw	22
  2801  000C38  6FA9               	movwf	PIC18F26K40_readThreeBytes@j& (0+255),b
  2802  000C3A                     l4652:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;progPIC18F26K40.c: 68: LATCbits.LATC5 = 1;
  2806  000C3A  8A8B               	bsf	3979,5,c	;volatile
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;progPIC18F26K40.c: 69: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2810  000C3C  D000               	nop2		;2 cycle nop
  2811  000C3E  F000               	nop	
  2812                           
  2813                           ;progPIC18F26K40.c: 70: if (PORTCbits.RC6 == 1)
  2814  000C40  AC82               	btfss	3970,6,c	;volatile
  2815  000C42  D01F               	goto	l4660
  2816                           
  2817                           ;progPIC18F26K40.c: 71: data.Val = data.Val | ((DWORD)(0x1<<j));
  2818  000C44  C0A9  F09D         	movff	PIC18F26K40_readThreeBytes@j,??_PIC18F26K40_readThreeBytes
  2819  000C48  0E01               	movlw	1
  2820  000C4A  0100               	movlb	0	; () banked
  2821  000C4C  6F9E               	movwf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),b
  2822  000C4E  6B9F               	clrf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),b
  2823  000C50  2B9D               	incf	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2824  000C52  D003               	goto	u3664
  2825  000C54                     u3665:
  2826  000C54  90D8               	bcf	status,0,c
  2827  000C56  379E               	rlcf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),f,b
  2828  000C58  379F               	rlcf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),f,b
  2829  000C5A                     u3664:
  2830  000C5A  2F9D               	decfsz	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2831  000C5C  D7FB               	goto	u3665
  2832  000C5E  C09E  F0A0         	movff	??_PIC18F26K40_readThreeBytes+1,??_PIC18F26K40_readThreeBytes+3
  2833  000C62  C09F  F0A1         	movff	??_PIC18F26K40_readThreeBytes+2,??_PIC18F26K40_readThreeBytes+4
  2834  000C66  0E00               	movlw	0
  2835  000C68  0100               	movlb	0	; () banked
  2836  000C6A  BFA1               	btfsc	(??_PIC18F26K40_readThreeBytes+4)& (0+255),7,b
  2837  000C6C  0EFF               	movlw	255
  2838  000C6E  6FA2               	movwf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),b
  2839  000C70  6FA3               	movwf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),b
  2840  000C72  51A0               	movf	(??_PIC18F26K40_readThreeBytes+3)& (0+255),w,b
  2841  000C74  13A5               	iorwf	PIC18F26K40_readThreeBytes@data& (0+255),f,b
  2842  000C76  51A1               	movf	(??_PIC18F26K40_readThreeBytes+4)& (0+255),w,b
  2843  000C78  13A6               	iorwf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),f,b
  2844  000C7A  51A2               	movf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),w,b
  2845  000C7C  13A7               	iorwf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),f,b
  2846  000C7E  51A3               	movf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),w,b
  2847  000C80  13A8               	iorwf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),f,b
  2848  000C82                     l4660:
  2849                           
  2850                           ;progPIC18F26K40.c: 72: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2851  000C82  D000               	nop2		;2 cycle nop
  2852  000C84  F000               	nop	
  2853                           
  2854                           ;progPIC18F26K40.c: 73: LATCbits.LATC5 = 0;
  2855  000C86  9A8B               	bcf	3979,5,c	;volatile
  2856                           
  2857                           ;progPIC18F26K40.c: 74: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2858  000C88  D000               	nop2		;2 cycle nop
  2859  000C8A  F000               	nop	
  2860  000C8C  0100               	movlb	0	; () banked
  2861  000C8E  2BAA               	incf	PIC18F26K40_readThreeBytes@i& (0+255),f,b
  2862                           
  2863                           ; BSR set to: 0
  2864  000C90  0E16               	movlw	22
  2865  000C92  65AA               	cpfsgt	PIC18F26K40_readThreeBytes@i& (0+255),b
  2866  000C94  D7CA               	goto	l4646
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;progPIC18F26K40.c: 75: }
  2870                           ;progPIC18F26K40.c: 76: LATCbits.LATC5 = 1;
  2871  000C96  8A8B               	bsf	3979,5,c	;volatile
  2872                           
  2873                           ;progPIC18F26K40.c: 77: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2874  000C98  D000               	nop2		;2 cycle nop
  2875  000C9A  F000               	nop	
  2876                           
  2877                           ;progPIC18F26K40.c: 78: LATCbits.LATC5 = 0;
  2878  000C9C  9A8B               	bcf	3979,5,c	;volatile
  2879                           
  2880                           ;progPIC18F26K40.c: 79: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2881  000C9E  D000               	nop2		;2 cycle nop
  2882  000CA0  F000               	nop	
  2883                           
  2884                           ;progPIC18F26K40.c: 81: TRISCbits.TRISC6 = 0;
  2885  000CA2  9C94               	bcf	3988,6,c	;volatile
  2886                           
  2887                           ;progPIC18F26K40.c: 82: return data;
  2888  000CA4  C0A5  F099         	movff	PIC18F26K40_readThreeBytes@data,?_PIC18F26K40_readThreeBytes
  2889  000CA8  C0A6  F09A         	movff	PIC18F26K40_readThreeBytes@data+1,?_PIC18F26K40_readThreeBytes+1
  2890  000CAC  C0A7  F09B         	movff	PIC18F26K40_readThreeBytes@data+2,?_PIC18F26K40_readThreeBytes+2
  2891  000CB0  C0A8  F09C         	movff	PIC18F26K40_readThreeBytes@data+3,?_PIC18F26K40_readThreeBytes+3
  2892  000CB4  0C16               	retlw	22	;funcret
  2893  000CB6                     __end_of_PIC18F26K40_readThreeBytes:
  2894                           	opt stack 0
  2895                           tblptru	equ	0xFF8
  2896                           tblptrh	equ	0xFF7
  2897                           tblptrl	equ	0xFF6
  2898                           tablat	equ	0xFF5
  2899                           prodh	equ	0xFF4
  2900                           prodl	equ	0xFF3
  2901                           intcon	equ	0xFF2
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           indf1	equ	0xFE7
  2905                           postdec1	equ	0xFE5
  2906                           fsr1h	equ	0xFE2
  2907                           fsr1l	equ	0xFE1
  2908                           indf2	equ	0xFDF
  2909                           postinc2	equ	0xFDE
  2910                           postdec2	equ	0xFDD
  2911                           plusw2	equ	0xFDB
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function _PIC18F26K40_loadPC *****************
  2917 ;; Defined at:
  2918 ;;		line 86 in file "libs/progPIC18F26K40.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  address         4    6[BANK0 ] struct _DWORD_VAL
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  tempAddress     4   10[BANK0 ] struct _DWORD_VAL
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 3F/0
  2929 ;;		On exit  : 3F/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2932 ;;      Params:         0       4       0       0
  2933 ;;      Locals:         0       4       0       0
  2934 ;;      Temps:          0       0       0       0
  2935 ;;      Totals:         0       8       0       0
  2936 ;;Total ram usage:        8 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:   12
  2939 ;; This function calls:
  2940 ;;		_PIC18F26K40_sendByte
  2941 ;; This function is called by:
  2942 ;;		_APP_DeviceCDCBasicDemoTasks
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text12
  2947  0017A6                     __ptext12:
  2948                           	opt stack 0
  2949  0017A6                     _PIC18F26K40_loadPC:
  2950                           	opt stack 17
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;progPIC18F26K40.c: 87: DWORD_VAL tempAddress;
  2954                           ;progPIC18F26K40.c: 88: tempAddress.Val= (address.Val<<1);
  2955                           
  2956                           ;incstack = 0
  2957  0017A6  90D8               	bcf	status,0,c
  2958  0017A8  3599               	rlcf	PIC18F26K40_loadPC@address& (0+255),w,b
  2959  0017AA  6F9D               	movwf	PIC18F26K40_loadPC@tempAddress& (0+255),b
  2960  0017AC  359A               	rlcf	(PIC18F26K40_loadPC@address+1)& (0+255),w,b
  2961  0017AE  6F9E               	movwf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),b
  2962  0017B0  359B               	rlcf	(PIC18F26K40_loadPC@address+2)& (0+255),w,b
  2963  0017B2  6F9F               	movwf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),b
  2964  0017B4  359C               	rlcf	(PIC18F26K40_loadPC@address+3)& (0+255),w,b
  2965  0017B6  6FA0               	movwf	(PIC18F26K40_loadPC@tempAddress+3)& (0+255),b
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;progPIC18F26K40.c: 89: tempAddress.bits.b0 = 0;
  2969  0017B8  919D               	bcf	PIC18F26K40_loadPC@tempAddress& (0+255),0,b
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;progPIC18F26K40.c: 90: tempAddress.bits.b23 = 0;
  2973  0017BA  9F9F               	bcf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),7,b
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;progPIC18F26K40.c: 91: PIC18F26K40_sendByte(0x80, MSBTOLSB);
  2977  0017BC  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2978  0017BE  0E80               	movlw	128
  2979  0017C0  ECC6  F00A         	call	_PIC18F26K40_sendByte
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;progPIC18F26K40.c: 92: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2983  0017C4  D000               	nop2		;2 cycle nop
  2984  0017C6  F000               	nop	
  2985                           
  2986                           ;progPIC18F26K40.c: 93: PIC18F26K40_sendByte(tempAddress.v[2], MSBTOLSB);
  2987  0017C8  0100               	movlb	0	; () banked
  2988  0017CA  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2989  0017CC  519F               	movf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),w,b
  2990  0017CE  ECC6  F00A         	call	_PIC18F26K40_sendByte
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;progPIC18F26K40.c: 94: PIC18F26K40_sendByte(tempAddress.v[1], MSBTOLSB);
  2994  0017D2  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2995  0017D4  519E               	movf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),w,b
  2996  0017D6  ECC6  F00A         	call	_PIC18F26K40_sendByte
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;progPIC18F26K40.c: 95: PIC18F26K40_sendByte(tempAddress.v[0], MSBTOLSB);
  3000  0017DA  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3001  0017DC  519D               	movf	PIC18F26K40_loadPC@tempAddress& (0+255),w,b
  3002  0017DE  EFC6  F00A         	goto	_PIC18F26K40_sendByte
  3003  0017E2                     __end_of_PIC18F26K40_loadPC:
  3004                           	opt stack 0
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           intcon	equ	0xFF2
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           indf1	equ	0xFE7
  3015                           postdec1	equ	0xFE5
  3016                           fsr1h	equ	0xFE2
  3017                           fsr1l	equ	0xFE1
  3018                           indf2	equ	0xFDF
  3019                           postinc2	equ	0xFDE
  3020                           postdec2	equ	0xFDD
  3021                           plusw2	equ	0xFDB
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _PIC18F26K40_loadDataIntoNVM *****************
  3027 ;; Defined at:
  3028 ;;		line 98 in file "libs/progPIC18F26K40.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  data            4    4[BANK0 ] struct _DWORD_VAL
  3031 ;;  IncreasePC      1    8[BANK0 ] enum E4064
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  tempData        4   10[BANK0 ] struct _DWORD_VAL
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 3F/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3043 ;;      Params:         0       5       0       0
  3044 ;;      Locals:         0       4       0       0
  3045 ;;      Temps:          0       1       0       0
  3046 ;;      Totals:         0      10       0       0
  3047 ;;Total ram usage:       10 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:   12
  3050 ;; This function calls:
  3051 ;;		_PIC18F26K40_sendByteMsbToLsb
  3052 ;; This function is called by:
  3053 ;;		_APP_DeviceCDCBasicDemoTasks
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text13
  3058  0014D8                     __ptext13:
  3059                           	opt stack 0
  3060  0014D8                     _PIC18F26K40_loadDataIntoNVM:
  3061                           	opt stack 17
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;progPIC18F26K40.c: 99: DWORD_VAL tempData;
  3065                           ;progPIC18F26K40.c: 100: tempData.Val = (data.Val <<1 );
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;incstack = 0
  3069  0014D8  90D8               	bcf	status,0,c
  3070  0014DA  3597               	rlcf	PIC18F26K40_loadDataIntoNVM@data& (0+255),w,b
  3071  0014DC  6F9D               	movwf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),b
  3072  0014DE  3598               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+1)& (0+255),w,b
  3073  0014E0  6F9E               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),b
  3074  0014E2  3599               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+2)& (0+255),w,b
  3075  0014E4  6F9F               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),b
  3076  0014E6  359A               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+3)& (0+255),w,b
  3077  0014E8  6FA0               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+3)& (0+255),b
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;progPIC18F26K40.c: 101: tempData.bits.b0 = 0;
  3081  0014EA  919D               	bcf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),0,b
  3082                           
  3083                           ;progPIC18F26K40.c: 102: if (IncreasePC==TRUE)
  3084  0014EC  059B               	decf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),w,b
  3085  0014EE  E104               	bnz	l4692
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;progPIC18F26K40.c: 103: PIC18F26K40_sendByteMsbToLsb(0x02);
  3089  0014F0  0E02               	movlw	2
  3090  0014F2  EC6A  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3091  0014F6  D003               	goto	l4694
  3092  0014F8                     l4692:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;progPIC18F26K40.c: 104: else
  3096                           ;progPIC18F26K40.c: 105: PIC18F26K40_sendByteMsbToLsb(0x00);
  3097  0014F8  0E00               	movlw	0
  3098  0014FA  EC6A  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3099  0014FE                     l4694:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;progPIC18F26K40.c: 106: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3103  0014FE  D000               	nop2		;2 cycle nop
  3104  001500  F000               	nop	
  3105                           
  3106                           ;progPIC18F26K40.c: 107: PIC18F26K40_sendByteMsbToLsb(tempData.v[2]);
  3107  001502  0100               	movlb	0	; () banked
  3108  001504  519F               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),w,b
  3109  001506  EC6A  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3110                           
  3111                           ;progPIC18F26K40.c: 108: PIC18F26K40_sendByteMsbToLsb(tempData.v[1]);
  3112  00150A  519E               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),w,b
  3113  00150C  EC6A  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3114                           
  3115                           ;progPIC18F26K40.c: 109: PIC18F26K40_sendByteMsbToLsb(tempData.v[0]);
  3116  001510  519D               	movf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),w,b
  3117  001512  EC6A  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;progPIC18F26K40.c: 110: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3121  001516  D000               	nop2		;2 cycle nop
  3122  001518  F000               	nop	
  3123                           
  3124                           ;progPIC18F26K40.c: 112: PIC18F26K40_sendByteMsbToLsb(0xE0);
  3125  00151A  0EE0               	movlw	224
  3126  00151C  EC6A  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;progPIC18F26K40.c: 113: _delay((unsigned long)((6)*(12000000/4000.0)));
  3130  001520  0E18               	movlw	24
  3131  001522  0100               	movlb	0	; () banked
  3132  001524  6F9C               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3133  001526  0E5F               	movlw	95
  3134  001528                     u4107:
  3135  001528  2EE8               	decfsz	wreg,f,c
  3136  00152A  D7FE               	bra	u4107
  3137  00152C  2F9C               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3138  00152E  D7FC               	bra	u4107
  3139  001530  0012               	return		;funcret
  3140  001532                     __end_of_PIC18F26K40_loadDataIntoNVM:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           intcon	equ	0xFF2
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           indf1	equ	0xFE7
  3152                           postdec1	equ	0xFE5
  3153                           fsr1h	equ	0xFE2
  3154                           fsr1l	equ	0xFE1
  3155                           indf2	equ	0xFDF
  3156                           postinc2	equ	0xFDE
  3157                           postdec2	equ	0xFDD
  3158                           plusw2	equ	0xFDB
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           
  3163 ;; *************** function _PIC18F26K40_sendByteMsbToLsb *****************
  3164 ;; Defined at:
  3165 ;;		line 125 in file "libs/progPIC18F26K40.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  info            1    wreg     unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  info            1    2[BANK0 ] unsigned char 
  3170 ;;  i               1    3[BANK0 ] char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 3F/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3180 ;;      Params:         0       0       0       0
  3181 ;;      Locals:         0       2       0       0
  3182 ;;      Temps:          0       2       0       0
  3183 ;;      Totals:         0       4       0       0
  3184 ;;Total ram usage:        4 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:   11
  3187 ;; This function calls:
  3188 ;;		_PIC18F26K40_setTrisToOut
  3189 ;; This function is called by:
  3190 ;;		_PIC18F26K40_loadDataIntoNVM
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text14
  3195  0016D4                     __ptext14:
  3196                           	opt stack 0
  3197  0016D4                     _PIC18F26K40_sendByteMsbToLsb:
  3198                           	opt stack 17
  3199                           
  3200                           ;incstack = 0
  3201                           ;PIC18F26K40_sendByteMsbToLsb@info stored from wreg
  3202  0016D4  0100               	movlb	0	; () banked
  3203  0016D6  6F95               	movwf	PIC18F26K40_sendByteMsbToLsb@info& (0+255),b
  3204                           
  3205                           ;progPIC18F26K40.c: 126: PIC18F26K40_setTrisToOut ();
  3206  0016D8  EC7A  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3207                           
  3208                           ;progPIC18F26K40.c: 127: for (INT8 i = 7; i >= 0; i--) {
  3209  0016DC  0E07               	movlw	7
  3210  0016DE  0100               	movlb	0	; () banked
  3211  0016E0  6F96               	movwf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),b
  3212  0016E2                     l128:
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;progPIC18F26K40.c: 128: LATCbits.LATC5 = 1;
  3216  0016E2  8A8B               	bsf	3979,5,c	;volatile
  3217                           
  3218                           ;progPIC18F26K40.c: 129: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3219  0016E4  D000               	nop2		;2 cycle nop
  3220  0016E6  F000               	nop	
  3221                           
  3222                           ;progPIC18F26K40.c: 130: if ((info >> i) & 0x01)
  3223  0016E8  C096  F093         	movff	PIC18F26K40_sendByteMsbToLsb@i,??_PIC18F26K40_sendByteMsbToLsb
  3224  0016EC  C095  F094         	movff	PIC18F26K40_sendByteMsbToLsb@info,??_PIC18F26K40_sendByteMsbToLsb+1
  3225  0016F0  0100               	movlb	0	; () banked
  3226  0016F2  2B93               	incf	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3227  0016F4  D002               	goto	u3574
  3228  0016F6                     u3575:
  3229  0016F6  90D8               	bcf	status,0,c
  3230  0016F8  3394               	rrcf	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),f,b
  3231  0016FA                     u3574:
  3232  0016FA  2F93               	decfsz	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3233  0016FC  D7FC               	goto	u3575
  3234  0016FE  0100               	movlb	0	; () banked
  3235  001700  A194               	btfss	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),0,b
  3236  001702  D002               	goto	l130
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;progPIC18F26K40.c: 131: LATCbits.LATC6 = 1;
  3240  001704  8C8B               	bsf	3979,6,c	;volatile
  3241  001706  D001               	goto	l131
  3242  001708                     l130:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;progPIC18F26K40.c: 132: else
  3246                           ;progPIC18F26K40.c: 133: LATCbits.LATC6 = 0;
  3247  001708  9C8B               	bcf	3979,6,c	;volatile
  3248  00170A                     l131:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;progPIC18F26K40.c: 134: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3252  00170A  D000               	nop2		;2 cycle nop
  3253  00170C  F000               	nop	
  3254                           
  3255                           ;progPIC18F26K40.c: 135: LATCbits.LATC5 = 0;
  3256  00170E  9A8B               	bcf	3979,5,c	;volatile
  3257                           
  3258                           ;progPIC18F26K40.c: 136: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3259  001710  D000               	nop2		;2 cycle nop
  3260  001712  F000               	nop	
  3261  001714  0100               	movlb	0	; () banked
  3262  001716  0796               	decf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),f,b
  3263                           
  3264                           ; BSR set to: 0
  3265  001718  BF96               	btfsc	PIC18F26K40_sendByteMsbToLsb@i& (0+255),7,b
  3266                           
  3267                           ; BSR set to: 0
  3268  00171A  0012               	return		;funcret
  3269  00171C  D7E2               	goto	l128
  3270  00171E                     __end_of_PIC18F26K40_sendByteMsbToLsb:
  3271                           	opt stack 0
  3272                           tblptru	equ	0xFF8
  3273                           tblptrh	equ	0xFF7
  3274                           tblptrl	equ	0xFF6
  3275                           tablat	equ	0xFF5
  3276                           prodh	equ	0xFF4
  3277                           prodl	equ	0xFF3
  3278                           intcon	equ	0xFF2
  3279                           postinc0	equ	0xFEE
  3280                           wreg	equ	0xFE8
  3281                           indf1	equ	0xFE7
  3282                           postdec1	equ	0xFE5
  3283                           fsr1h	equ	0xFE2
  3284                           fsr1l	equ	0xFE1
  3285                           indf2	equ	0xFDF
  3286                           postinc2	equ	0xFDE
  3287                           postdec2	equ	0xFDD
  3288                           plusw2	equ	0xFDB
  3289                           fsr2h	equ	0xFDA
  3290                           fsr2l	equ	0xFD9
  3291                           status	equ	0xFD8
  3292                           
  3293 ;; *************** function _PIC18F26K40_exitLowVoltageProg *****************
  3294 ;; Defined at:
  3295 ;;		line 27 in file "libs/progPIC18F26K40.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		None
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3309 ;;      Params:         0       0       0       0
  3310 ;;      Locals:         0       0       0       0
  3311 ;;      Temps:          0       0       0       0
  3312 ;;      Totals:         0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:   10
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_APP_DeviceCDCBasicDemoTasks
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text15
  3324  001AEA                     __ptext15:
  3325                           	opt stack 0
  3326  001AEA                     _PIC18F26K40_exitLowVoltageProg:
  3327                           	opt stack 19
  3328                           
  3329                           ;progPIC18F26K40.c: 28: TRISCbits.TRISC7 = 0;
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;incstack = 0
  3333  001AEA  9E94               	bcf	3988,7,c	;volatile
  3334                           
  3335                           ;progPIC18F26K40.c: 29: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3336  001AEC  D000               	nop2		;2 cycle nop
  3337  001AEE  F000               	nop	
  3338                           
  3339                           ;progPIC18F26K40.c: 30: LATCbits.LATC7 = 1;
  3340  001AF0  8E8B               	bsf	3979,7,c	;volatile
  3341  001AF2  0012               	return		;funcret
  3342  001AF4                     __end_of_PIC18F26K40_exitLowVoltageProg:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           prodh	equ	0xFF4
  3349                           prodl	equ	0xFF3
  3350                           intcon	equ	0xFF2
  3351                           postinc0	equ	0xFEE
  3352                           wreg	equ	0xFE8
  3353                           indf1	equ	0xFE7
  3354                           postdec1	equ	0xFE5
  3355                           fsr1h	equ	0xFE2
  3356                           fsr1l	equ	0xFE1
  3357                           indf2	equ	0xFDF
  3358                           postinc2	equ	0xFDE
  3359                           postdec2	equ	0xFDD
  3360                           plusw2	equ	0xFDB
  3361                           fsr2h	equ	0xFDA
  3362                           fsr2l	equ	0xFD9
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _PIC18F26K40_enterLowVoltageProg *****************
  3366 ;; Defined at:
  3367 ;;		line 10 in file "libs/progPIC18F26K40.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  code            4    6[BANK0 ] struct _DWORD_VAL
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 3F/0
  3378 ;;		On exit  : 3F/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3381 ;;      Params:         0       0       0       0
  3382 ;;      Locals:         0       4       0       0
  3383 ;;      Temps:          0       0       0       0
  3384 ;;      Totals:         0       4       0       0
  3385 ;;Total ram usage:        4 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:   12
  3388 ;; This function calls:
  3389 ;;		_PIC18F26K40_sendByte
  3390 ;;		_PIC18F26K40_setTrisToOut
  3391 ;; This function is called by:
  3392 ;;		_APP_DeviceCDCBasicDemoTasks
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text16
  3397  00171E                     __ptext16:
  3398                           	opt stack 0
  3399  00171E                     _PIC18F26K40_enterLowVoltageProg:
  3400                           	opt stack 17
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;progPIC18F26K40.c: 11: PIC18F26K40_setTrisToOut ();
  3404                           
  3405                           ;incstack = 0
  3406  00171E  EC7A  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3407                           
  3408                           ;progPIC18F26K40.c: 12: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3409  001722  D000               	nop2		;2 cycle nop
  3410  001724  F000               	nop	
  3411                           
  3412                           ;progPIC18F26K40.c: 14: LATCbits.LATC7 = 0;
  3413  001726  9E8B               	bcf	3979,7,c	;volatile
  3414                           
  3415                           ;progPIC18F26K40.c: 15: LATCbits.LATC6 = 0;
  3416  001728  9C8B               	bcf	3979,6,c	;volatile
  3417                           
  3418                           ;progPIC18F26K40.c: 16: LATCbits.LATC5 = 0;
  3419  00172A  9A8B               	bcf	3979,5,c	;volatile
  3420                           
  3421                           ;progPIC18F26K40.c: 17: (_delay((unsigned long)((250)*(12000000/4000000.0))));
  3422  00172C  0EFA               	movlw	250
  3423  00172E                     u4117:
  3424  00172E  2EE8               	decfsz	wreg,f,c
  3425  001730  D7FE               	bra	u4117
  3426                           
  3427                           ;progPIC18F26K40.c: 19: DWORD_VAL code;
  3428                           ;progPIC18F26K40.c: 20: code.Val = (0x4d434850);
  3429  001732  0E50               	movlw	80
  3430  001734  0100               	movlb	0	; () banked
  3431  001736  6F99               	movwf	PIC18F26K40_enterLowVoltageProg@code& (0+255),b
  3432  001738  0E48               	movlw	72
  3433  00173A  6F9A               	movwf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),b
  3434  00173C  0E43               	movlw	67
  3435  00173E  6F9B               	movwf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),b
  3436  001740  0E4D               	movlw	77
  3437  001742  6F9C               	movwf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),b
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;progPIC18F26K40.c: 21: PIC18F26K40_sendByte(code.v[3], MSBTOLSB);
  3441  001744  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3442  001746  519C               	movf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),w,b
  3443  001748  ECC6  F00A         	call	_PIC18F26K40_sendByte
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;progPIC18F26K40.c: 22: PIC18F26K40_sendByte(code.v[2], MSBTOLSB);
  3447  00174C  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3448  00174E  519B               	movf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),w,b
  3449  001750  ECC6  F00A         	call	_PIC18F26K40_sendByte
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;progPIC18F26K40.c: 23: PIC18F26K40_sendByte(code.v[1], MSBTOLSB);
  3453  001754  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3454  001756  519A               	movf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),w,b
  3455  001758  ECC6  F00A         	call	_PIC18F26K40_sendByte
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;progPIC18F26K40.c: 24: PIC18F26K40_sendByte(code.v[0], MSBTOLSB);
  3459  00175C  6B93               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3460  00175E  5199               	movf	PIC18F26K40_enterLowVoltageProg@code& (0+255),w,b
  3461  001760  EFC6  F00A         	goto	_PIC18F26K40_sendByte
  3462  001764                     __end_of_PIC18F26K40_enterLowVoltageProg:
  3463                           	opt stack 0
  3464                           tblptru	equ	0xFF8
  3465                           tblptrh	equ	0xFF7
  3466                           tblptrl	equ	0xFF6
  3467                           tablat	equ	0xFF5
  3468                           prodh	equ	0xFF4
  3469                           prodl	equ	0xFF3
  3470                           intcon	equ	0xFF2
  3471                           postinc0	equ	0xFEE
  3472                           wreg	equ	0xFE8
  3473                           indf1	equ	0xFE7
  3474                           postdec1	equ	0xFE5
  3475                           fsr1h	equ	0xFE2
  3476                           fsr1l	equ	0xFE1
  3477                           indf2	equ	0xFDF
  3478                           postinc2	equ	0xFDE
  3479                           postdec2	equ	0xFDD
  3480                           plusw2	equ	0xFDB
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _PIC18F26K40_sendByte *****************
  3486 ;; Defined at:
  3487 ;;		line 33 in file "libs/progPIC18F26K40.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  info            1    wreg     unsigned char 
  3490 ;;  direction       1    0[BANK0 ] enum E4265
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  info            1    3[BANK0 ] unsigned char 
  3493 ;;  i               1    5[BANK0 ] unsigned char 
  3494 ;;  j               1    4[BANK0 ] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 3F/0
  3501 ;;		On exit  : 3F/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3504 ;;      Params:         0       1       0       0
  3505 ;;      Locals:         0       3       0       0
  3506 ;;      Temps:          0       2       0       0
  3507 ;;      Totals:         0       6       0       0
  3508 ;;Total ram usage:        6 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:   11
  3511 ;; This function calls:
  3512 ;;		_PIC18F26K40_setTrisToOut
  3513 ;; This function is called by:
  3514 ;;		_PIC18F26K40_enterLowVoltageProg
  3515 ;;		_PIC18F26K40_readThreeBytes
  3516 ;;		_PIC18F26K40_loadPC
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text17
  3521  00158C                     __ptext17:
  3522                           	opt stack 0
  3523  00158C                     _PIC18F26K40_sendByte:
  3524                           	opt stack 17
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;incstack = 0
  3528                           ;PIC18F26K40_sendByte@info stored from wreg
  3529  00158C  6F96               	movwf	PIC18F26K40_sendByte@info& (0+255),b
  3530                           
  3531                           ;progPIC18F26K40.c: 34: PIC18F26K40_setTrisToOut ();
  3532  00158E  EC7A  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3533                           
  3534                           ;progPIC18F26K40.c: 35: BYTE i, j;
  3535                           ;progPIC18F26K40.c: 36: for (i = 0; i < 8; i++) {
  3536  001592  0100               	movlb	0	; () banked
  3537  001594  6B98               	clrf	PIC18F26K40_sendByte@i& (0+255),b
  3538  001596                     l4542:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;progPIC18F26K40.c: 37: if (direction)
  3542  001596  5193               	movf	PIC18F26K40_sendByte@direction& (0+255),w,b
  3543  001598  E003               	bz	l4546
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;progPIC18F26K40.c: 38: j = i;
  3547  00159A  C098  F097         	movff	PIC18F26K40_sendByte@i,PIC18F26K40_sendByte@j
  3548  00159E  D003               	goto	l4548
  3549  0015A0                     l4546:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;progPIC18F26K40.c: 39: else
  3553                           ;progPIC18F26K40.c: 40: j = 7-i;
  3554  0015A0  5198               	movf	PIC18F26K40_sendByte@i& (0+255),w,b
  3555  0015A2  0807               	sublw	7
  3556  0015A4  6F97               	movwf	PIC18F26K40_sendByte@j& (0+255),b
  3557  0015A6                     l4548:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;progPIC18F26K40.c: 41: LATCbits.LATC5 = 1;
  3561  0015A6  8A8B               	bsf	3979,5,c	;volatile
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;progPIC18F26K40.c: 42: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3565  0015A8  D000               	nop2		;2 cycle nop
  3566  0015AA  F000               	nop	
  3567                           
  3568                           ;progPIC18F26K40.c: 43: if ((info >> j) & 0x01)
  3569  0015AC  C097  F094         	movff	PIC18F26K40_sendByte@j,??_PIC18F26K40_sendByte
  3570  0015B0  C096  F095         	movff	PIC18F26K40_sendByte@info,??_PIC18F26K40_sendByte+1
  3571  0015B4  0100               	movlb	0	; () banked
  3572  0015B6  2B94               	incf	??_PIC18F26K40_sendByte& (0+255),f,b
  3573  0015B8  D002               	goto	u3544
  3574  0015BA                     u3545:
  3575  0015BA  90D8               	bcf	status,0,c
  3576  0015BC  3395               	rrcf	(??_PIC18F26K40_sendByte+1)& (0+255),f,b
  3577  0015BE                     u3544:
  3578  0015BE  2F94               	decfsz	??_PIC18F26K40_sendByte& (0+255),f,b
  3579  0015C0  D7FC               	goto	u3545
  3580  0015C2  0100               	movlb	0	; () banked
  3581  0015C4  A195               	btfss	(??_PIC18F26K40_sendByte+1)& (0+255),0,b
  3582  0015C6  D002               	goto	l105
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;progPIC18F26K40.c: 44: LATCbits.LATC6 = 1;
  3586  0015C8  8C8B               	bsf	3979,6,c	;volatile
  3587  0015CA  D001               	goto	l106
  3588  0015CC                     l105:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;progPIC18F26K40.c: 45: else
  3592                           ;progPIC18F26K40.c: 46: LATCbits.LATC6 = 0;
  3593  0015CC  9C8B               	bcf	3979,6,c	;volatile
  3594  0015CE                     l106:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;progPIC18F26K40.c: 47: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3598  0015CE  D000               	nop2		;2 cycle nop
  3599  0015D0  F000               	nop	
  3600                           
  3601                           ;progPIC18F26K40.c: 48: LATCbits.LATC5 = 0;
  3602  0015D2  9A8B               	bcf	3979,5,c	;volatile
  3603                           
  3604                           ;progPIC18F26K40.c: 49: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3605  0015D4  D000               	nop2		;2 cycle nop
  3606  0015D6  F000               	nop	
  3607  0015D8  0100               	movlb	0	; () banked
  3608  0015DA  2B98               	incf	PIC18F26K40_sendByte@i& (0+255),f,b
  3609                           
  3610                           ; BSR set to: 0
  3611  0015DC  0E07               	movlw	7
  3612  0015DE  6598               	cpfsgt	PIC18F26K40_sendByte@i& (0+255),b
  3613  0015E0  D7DA               	goto	l4542
  3614  0015E2  0C07               	retlw	7
  3615  0015E4                     __end_of_PIC18F26K40_sendByte:
  3616                           	opt stack 0
  3617                           tblptru	equ	0xFF8
  3618                           tblptrh	equ	0xFF7
  3619                           tblptrl	equ	0xFF6
  3620                           tablat	equ	0xFF5
  3621                           prodh	equ	0xFF4
  3622                           prodl	equ	0xFF3
  3623                           intcon	equ	0xFF2
  3624                           postinc0	equ	0xFEE
  3625                           wreg	equ	0xFE8
  3626                           indf1	equ	0xFE7
  3627                           postdec1	equ	0xFE5
  3628                           fsr1h	equ	0xFE2
  3629                           fsr1l	equ	0xFE1
  3630                           indf2	equ	0xFDF
  3631                           postinc2	equ	0xFDE
  3632                           postdec2	equ	0xFDD
  3633                           plusw2	equ	0xFDB
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _PIC18F26K40_setTrisToOut *****************
  3639 ;; Defined at:
  3640 ;;		line 4 in file "libs/progPIC18F26K40.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		None
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3654 ;;      Params:         0       0       0       0
  3655 ;;      Locals:         0       0       0       0
  3656 ;;      Temps:          0       0       0       0
  3657 ;;      Totals:         0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:   10
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_PIC18F26K40_enterLowVoltageProg
  3665 ;;		_PIC18F26K40_sendByte
  3666 ;;		_PIC18F26K40_sendByteMsbToLsb
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text18
  3671  001AF4                     __ptext18:
  3672                           	opt stack 0
  3673  001AF4                     _PIC18F26K40_setTrisToOut:
  3674                           	opt stack 17
  3675                           
  3676                           ;progPIC18F26K40.c: 5: TRISCbits.TRISC7 = 0;
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;incstack = 0
  3680  001AF4  9E94               	bcf	3988,7,c	;volatile
  3681                           
  3682                           ;progPIC18F26K40.c: 6: TRISCbits.TRISC6 = 0;
  3683  001AF6  9C94               	bcf	3988,6,c	;volatile
  3684                           
  3685                           ;progPIC18F26K40.c: 7: TRISCbits.TRISC5 = 0;
  3686  001AF8  9A94               	bcf	3988,5,c	;volatile
  3687  001AFA  0012               	return		;funcret
  3688  001AFC                     __end_of_PIC18F26K40_setTrisToOut:
  3689                           	opt stack 0
  3690                           tblptru	equ	0xFF8
  3691                           tblptrh	equ	0xFF7
  3692                           tblptrl	equ	0xFF6
  3693                           tablat	equ	0xFF5
  3694                           prodh	equ	0xFF4
  3695                           prodl	equ	0xFF3
  3696                           intcon	equ	0xFF2
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           indf1	equ	0xFE7
  3700                           postdec1	equ	0xFE5
  3701                           fsr1h	equ	0xFE2
  3702                           fsr1l	equ	0xFE1
  3703                           indf2	equ	0xFDF
  3704                           postinc2	equ	0xFDE
  3705                           postdec2	equ	0xFDD
  3706                           plusw2	equ	0xFDB
  3707                           fsr2h	equ	0xFDA
  3708                           fsr2l	equ	0xFD9
  3709                           status	equ	0xFD8
  3710                           
  3711 ;; *************** function _CDCTxService *****************
  3712 ;; Defined at:
  3713 ;;		line 836 in file "picLibs/usb_device_cdc.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  3718 ;;  i               1    9[BANK0 ] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 3F/0
  3725 ;;		On exit  : 3F/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3728 ;;      Params:         0       0       0       0
  3729 ;;      Locals:         0       2       0       0
  3730 ;;      Temps:          0       0       0       0
  3731 ;;      Totals:         0       2       0       0
  3732 ;;Total ram usage:        2 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:   11
  3735 ;; This function calls:
  3736 ;;		_USBTransferOnePacket
  3737 ;; This function is called by:
  3738 ;;		_APP_DeviceCDCBasicDemoTasks
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text19
  3743  0007DE                     __ptext19:
  3744                           	opt stack 0
  3745  0007DE                     _CDCTxService:
  3746                           	opt stack 18
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3750                           ;usb_device_cdc.c: 839: uint8_t i;
  3751                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3752                           
  3753                           ;incstack = 0
  3754  0007DE  94A0               	bcf	4000,2,c	;volatile
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;usb_device_cdc.c: 843: {};
  3758                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3759  0007E0  5176               	movf	_CDCDataInHandle& (0+255),w,b
  3760  0007E2  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3761  0007E4  E008               	bz	l4786
  3762                           
  3763                           ; BSR set to: 0
  3764  0007E6  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
  3765  0007EA  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3766  0007EE  AEDF               	btfss	indf2,7,c
  3767  0007F0  D002               	goto	l4786
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;usb_device_cdc.c: 846: {
  3771                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3772  0007F2  84A0               	bsf	4000,2,c	;volatile
  3773                           
  3774                           ;usb_device_cdc.c: 848: return;
  3775  0007F4  0012               	return	
  3776  0007F6                     l4786:
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;usb_device_cdc.c: 849: }
  3780                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3781  0007F6  0E03               	movlw	3
  3782  0007F8  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3783  0007FA  E101               	bnz	l4790
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3787  0007FC  6B80               	clrf	_cdc_trf_state& (0+255),b
  3788  0007FE                     l4790:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3792  0007FE  5180               	movf	_cdc_trf_state& (0+255),w,b
  3793  000800  E102               	bnz	l4794
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;usb_device_cdc.c: 863: {
  3797                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3798  000802  84A0               	bsf	4000,2,c	;volatile
  3799                           
  3800                           ;usb_device_cdc.c: 865: return;
  3801  000804  0012               	return	
  3802  000806                     l4794:
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;usb_device_cdc.c: 866: }
  3806                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3807  000806  0E02               	movlw	2
  3808  000808  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3809  00080A  E10D               	bnz	l4800
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;usb_device_cdc.c: 872: {
  3813                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3814  00080C  0E01               	movlw	1
  3815  00080E  6F93               	movwf	USBTransferOnePacket@dir& (0+255),b
  3816  000810  0E00               	movlw	0
  3817  000812  6F94               	movwf	USBTransferOnePacket@data& (0+255),b
  3818  000814  6F95               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3819  000816  6F96               	movwf	USBTransferOnePacket@len& (0+255),b
  3820  000818  0E02               	movlw	2
  3821  00081A  EC41  F005         	call	_USBTransferOnePacket
  3822  00081E  D856               	call	PL110	;call to abstracted procedure
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3826  000820  0E03               	movlw	3
  3827  000822  6F80               	movwf	_cdc_trf_state& (0+255),b
  3828                           
  3829                           ;usb_device_cdc.c: 876: }
  3830  000824  D03E               	goto	l4844
  3831  000826                     l4800:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3835  000826  0580               	decf	_cdc_trf_state& (0+255),w,b
  3836  000828  E13C               	bnz	l4844
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;usb_device_cdc.c: 878: {
  3840                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3841  00082A  0E40               	movlw	64
  3842  00082C  641B               	cpfsgt	_cdc_tx_len,c
  3843  00082E  D002               	goto	l829
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3847  000830  6F9D               	movwf	CDCTxService@byte_to_send& (0+255),b
  3848  000832  D002               	goto	l4806
  3849  000834                     l829:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;usb_device_cdc.c: 884: else
  3853                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3854  000834  C01B  F09D         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3855  000838                     l4806:
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3859  000838  519D               	movf	CDCTxService@byte_to_send& (0+255),w,b
  3860  00083A  5E1B               	subwf	_cdc_tx_len,f,c
  3861                           
  3862                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3863  00083C  0E40               	movlw	64
  3864  00083E  6F6A               	movwf	_pCDCDst& (0+255),b
  3865  000840  0E02               	movlw	2
  3866  000842  6F6B               	movwf	(_pCDCDst+1)& (0+255),b
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3870  000844  C09D  F09C         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3874  000848  517C               	movf	_cdc_mem_type& (0+255),w,b
  3875  00084A  E00A               	bz	l4822
  3876  00084C  D015               	goto	l4832
  3877  00084E                     l4814:
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;usb_device_cdc.c: 898: {
  3881                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3882  00084E  D82B               	call	PL42	;call to abstracted procedure
  3883  000850  64F7               	cpfsgt	tblptrh,c
  3884  000852  D003               	bra	u3887
  3885  000854  0008               	tblrd		*
  3886  000856  50F5               	movf	tablat,w,c
  3887  000858  D002               	bra	u3880
  3888  00085A                     u3887:
  3889  00085A  EC25  F005         	call	PL18	;call to abstracted procedure
  3890  00085E                     u3880:
  3891                           
  3892                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;usb_device_cdc.c: 902: i--;
  3899  00085E  D82E               	call	PL68	;call to abstracted procedure
  3900  000860                     l4822:
  3901                           
  3902                           ; BSR set to: 0
  3903  000860  519C               	movf	CDCTxService@i& (0+255),w,b
  3904  000862  E00C               	bz	l4834
  3905  000864  D7F4               	goto	l4814
  3906  000866                     l4824:
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;usb_device_cdc.c: 908: {
  3910                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  3911  000866  D81F               	call	PL42	;call to abstracted procedure
  3912  000868  64F7               	cpfsgt	tblptrh,c
  3913  00086A  D003               	bra	u3907
  3914  00086C  0008               	tblrd		*
  3915  00086E  50F5               	movf	tablat,w,c
  3916  000870  D002               	bra	u3900
  3917  000872                     u3907:
  3918  000872  EC25  F005         	call	PL18	;call to abstracted procedure
  3919  000876                     u3900:
  3920                           
  3921                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;usb_device_cdc.c: 912: i--;
  3928  000876  D822               	call	PL68	;call to abstracted procedure
  3929  000878                     l4832:
  3930                           
  3931                           ; BSR set to: 0
  3932  000878  519C               	movf	CDCTxService@i& (0+255),w,b
  3933  00087A  E1F5               	bnz	l4824
  3934  00087C                     l4834:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;usb_device_cdc.c: 913: }
  3938                           ;usb_device_cdc.c: 914: }
  3939                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  3940  00087C  501B               	movf	_cdc_tx_len,w,c
  3941  00087E  E106               	bnz	l4842
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;usb_device_cdc.c: 921: {
  3945                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  3946  000880  0E40               	movlw	64
  3947  000882  199D               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  3951  000884  0E02               	movlw	2
  3952  000886  A4D8               	btfss	status,2,c
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;usb_device_cdc.c: 924: else
  3956                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  3957  000888  0E03               	movlw	3
  3958  00088A  6F80               	movwf	_cdc_trf_state& (0+255),b
  3959  00088C                     l4842:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;usb_device_cdc.c: 926: }
  3963                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3964  00088C  0E01               	movlw	1
  3965  00088E  6F93               	movwf	USBTransferOnePacket@dir& (0+255),b
  3966  000890  0E40               	movlw	64
  3967  000892  6F94               	movwf	USBTransferOnePacket@data& (0+255),b
  3968  000894  0E02               	movlw	2
  3969  000896  6F95               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3970  000898  C09D  F096         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3971  00089C  EC41  F005         	call	_USBTransferOnePacket
  3972  0008A0  D815               	call	PL110	;call to abstracted procedure
  3973  0008A2                     l4844:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;usb_device_cdc.c: 929: }
  3977                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  3978  0008A2  84A0               	bsf	4000,2,c	;volatile
  3979                           
  3980                           ; BSR set to: 0
  3981  0008A4  0012               	return		;funcret
  3982  0008A6                     __end_of_CDCTxService:
  3983                           	opt stack 0
  3984  0008A6                     PL42:
  3985                           	opt stack 18
  3986  0008A6  C06D  FFF6         	movff	_pCDCSrc,tblptrl
  3987  0008AA  C06E  FFF7         	movff	_pCDCSrc+1,tblptrh
  3988  0008AE  6AF8               	clrf	tblptru,c
  3989  0008B0  C06A  FFD9         	movff	_pCDCDst,fsr2l
  3990  0008B4  C06B  FFDA         	movff	_pCDCDst+1,fsr2h
  3991  0008B8  0E02               	movlw	(high __ramtop+-1)
  3992  0008BA  0012               	return	
  3993  0008BC                     __end_ofPL42:
  3994                           	opt stack 0
  3995  0008BC                     PL68:
  3996                           	opt stack 18
  3997  0008BC  6EDF               	movwf	indf2,c
  3998  0008BE  0100               	movlb	0	; () banked
  3999  0008C0  4B6A               	infsnz	_pCDCDst& (0+255),f,b
  4000  0008C2  2B6B               	incf	(_pCDCDst+1)& (0+255),f,b
  4001  0008C4  4B6D               	infsnz	_pCDCSrc& (0+255),f,b
  4002  0008C6  2B6E               	incf	(_pCDCSrc+1)& (0+255),f,b
  4003  0008C8  079C               	decf	CDCTxService@i& (0+255),f,b
  4004  0008CA  0012               	return	
  4005  0008CC                     __end_ofPL68:
  4006                           	opt stack 0
  4007  0008CC                     PL110:
  4008                           	opt stack 18
  4009  0008CC  C093  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4010  0008D0  C094  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4011  0008D4  0012               	return	
  4012  0008D6                     __end_ofPL110:
  4013                           	opt stack 0
  4014                           tblptru	equ	0xFF8
  4015                           tblptrh	equ	0xFF7
  4016                           tblptrl	equ	0xFF6
  4017                           tablat	equ	0xFF5
  4018                           prodh	equ	0xFF4
  4019                           prodl	equ	0xFF3
  4020                           intcon	equ	0xFF2
  4021                           postinc0	equ	0xFEE
  4022                           wreg	equ	0xFE8
  4023                           indf1	equ	0xFE7
  4024                           postdec1	equ	0xFE5
  4025                           fsr1h	equ	0xFE2
  4026                           fsr1l	equ	0xFE1
  4027                           indf2	equ	0xFDF
  4028                           postinc2	equ	0xFDE
  4029                           postdec2	equ	0xFDD
  4030                           plusw2	equ	0xFDB
  4031                           fsr2h	equ	0xFDA
  4032                           fsr2l	equ	0xFD9
  4033                           status	equ	0xFD8
  4034                           
  4035 ;; *************** function _USBTransferOnePacket *****************
  4036 ;; Defined at:
  4037 ;;		line 995 in file "picLibs/usb_device.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  ep              1    wreg     unsigned char 
  4040 ;;  dir             1    0[BANK0 ] unsigned char 
  4041 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4042 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4043 ;;  len             1    3[BANK0 ] unsigned char 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  ep              1    6[BANK0 ] unsigned char 
  4046 ;;  handle          2    7[BANK0 ] PTR volatile struct __BD
  4047 ;;		 -> RAM(767), NULL(0), BDT(48), 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  2    0[BANK0 ] PTR void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4052 ;; Tracked objects:
  4053 ;;		On entry : 3F/0
  4054 ;;		On exit  : 3F/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4057 ;;      Params:         0       4       0       0
  4058 ;;      Locals:         0       3       0       0
  4059 ;;      Temps:          0       2       0       0
  4060 ;;      Totals:         0       9       0       0
  4061 ;;Total ram usage:        9 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:   10
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_getsUSBUSART
  4068 ;;		_CDCTxService
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text20
  4073  000A82                     __ptext20:
  4074                           	opt stack 0
  4075  000A82                     _USBTransferOnePacket:
  4076                           	opt stack 18
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;incstack = 0
  4080                           ;USBTransferOnePacket@ep stored from wreg
  4081  000A82  6F99               	movwf	USBTransferOnePacket@ep& (0+255),b
  4082                           
  4083                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4084                           ;usb_device.c: 1000: if(dir != 0)
  4085  000A84  0100               	movlb	0	; () banked
  4086  000A86  5193               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4087  000A88  E004               	bz	l4580
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;usb_device.c: 1001: {
  4091                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4092  000A8A  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4093  000A8C  ECA5  F006         	call	PL82	;call to abstracted procedure
  4094  000A90  D003               	goto	L2
  4095  000A92                     l4580:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;usb_device.c: 1005: else
  4099                           ;usb_device.c: 1006: {
  4100                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4101  000A92  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4102  000A94  ECAE  F006         	call	PL90	;call to abstracted procedure
  4103  000A98                     L2:
  4104  000A98  6ED9               	movwf	fsr2l,c
  4105  000A9A  6ADA               	clrf	fsr2h,c
  4106  000A9C  CFDE F09A          	movff	postinc2,USBTransferOnePacket@handle
  4107  000AA0  CFDD F09B          	movff	postdec2,USBTransferOnePacket@handle+1
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;usb_device.c: 1009: }
  4111                           ;usb_device.c: 1013: if(handle == 0)
  4112  000AA4  519A               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4113  000AA6  119B               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4114  000AA8  E103               	bnz	l4586
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;usb_device.c: 1014: {
  4118                           ;usb_device.c: 1015: return 0;
  4119  000AAA  6B93               	clrf	?_USBTransferOnePacket& (0+255),b
  4120  000AAC  6B94               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  4121  000AAE  0012               	return	
  4122  000AB0                     l4586:
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;usb_device.c: 1016: }
  4126                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4127  000AB0  EE20 F002          	lfsr	2,2
  4128  000AB4  D842               	call	PL106	;call to abstracted procedure
  4129  000AB6  C094  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4130  000ABA  C095  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4131                           
  4132                           ;usb_device.c: 1030: handle->CNT = len;
  4133  000ABE  EE20 F001          	lfsr	2,1
  4134  000AC2  D83B               	call	PL106	;call to abstracted procedure
  4135  000AC4  C096  FFDF         	movff	USBTransferOnePacket@len,indf2
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4139  000AC8  D833               	call	PL92	;call to abstracted procedure
  4140  000ACA  0E40               	movlw	64
  4141  000ACC  16DF               	andwf	indf2,f,c
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4145  000ACE  D830               	call	PL92	;call to abstracted procedure
  4146  000AD0  0E00               	movlw	0
  4147  000AD2  86DB               	bsf	plusw2,3,c
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4151  000AD4  D82D               	call	PL92	;call to abstracted procedure
  4152  000AD6  8EDB               	bsf	plusw2,7,c
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;usb_device.c: 1036: if(dir != 0)
  4156  000AD8  5193               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4157  000ADA  E005               	bz	l4598
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;usb_device.c: 1037: {
  4161                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4162  000ADC  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4163  000ADE  D818               	call	PL26	;call to abstracted procedure
  4164  000AE0  D81D               	call	PL46	;call to abstracted procedure
  4165  000AE2  0F0F               	addlw	low _pBDTEntryIn
  4166  000AE4  D004               	goto	L3
  4167  000AE6                     l4598:
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;usb_device.c: 1041: else
  4171                           ;usb_device.c: 1042: {
  4172                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4173  000AE6  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4174  000AE8  D80D               	call	PL24	;call to abstracted procedure
  4175  000AEA  D818               	call	PL46	;call to abstracted procedure
  4176  000AEC  0F60               	addlw	low _pBDTEntryOut
  4177  000AEE                     L3:
  4178  000AEE  6ED9               	movwf	fsr2l,c
  4179  000AF0  6ADA               	clrf	fsr2h,c
  4180  000AF2  C097  FFDE         	movff	??_USBTransferOnePacket,postinc2
  4181  000AF6  C098  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;usb_device.c: 1045: }
  4185                           ;usb_device.c: 1046: return (void*)handle;
  4186  000AFA  C09A  F093         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4187  000AFE  C09B  F094         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4188                           
  4189                           ; BSR set to: 0
  4190  000B02  0012               	return		;funcret
  4191  000B04                     __end_of_USBTransferOnePacket:
  4192                           	opt stack 0
  4193  000B04                     PL24:
  4194                           	opt stack 19
  4195  000B04  0D02               	mullw	2
  4196  000B06  50F3               	movf	prodl,w,c
  4197  000B08  0F60               	addlw	low _pBDTEntryOut
  4198  000B0A  6ED9               	movwf	fsr2l,c
  4199  000B0C  6ADA               	clrf	fsr2h,c
  4200  000B0E  0012               	return	
  4201  000B10                     __end_ofPL24:
  4202                           	opt stack 0
  4203  000B10                     PL26:
  4204                           	opt stack 19
  4205  000B10  0D02               	mullw	2
  4206  000B12  50F3               	movf	prodl,w,c
  4207  000B14  0F0F               	addlw	low _pBDTEntryIn
  4208  000B16  6ED9               	movwf	fsr2l,c
  4209  000B18  6ADA               	clrf	fsr2h,c
  4210  000B1A  0012               	return	
  4211  000B1C                     __end_ofPL26:
  4212                           	opt stack 0
  4213  000B1C                     PL46:
  4214                           	opt stack 18
  4215  000B1C  CFDE F097          	movff	postinc2,??_USBTransferOnePacket
  4216  000B20  CFDD F098          	movff	postdec2,??_USBTransferOnePacket+1
  4217  000B24  0E04               	movlw	4
  4218  000B26  1B97               	xorwf	??_USBTransferOnePacket& (0+255),f,b
  4219  000B28  5199               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4220  000B2A  0D02               	mullw	2
  4221  000B2C  50F3               	movf	prodl,w,c
  4222  000B2E  0012               	return	
  4223  000B30                     __end_ofPL46:
  4224                           	opt stack 0
  4225  000B30                     PL92:
  4226                           	opt stack 18
  4227  000B30  C09A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4228  000B34  C09B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4229  000B38  0012               	return	
  4230  000B3A                     __end_ofPL92:
  4231                           	opt stack 0
  4232  000B3A                     PL106:
  4233                           	opt stack 18
  4234  000B3A  519A               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4235  000B3C  26D9               	addwf	fsr2l,f,c
  4236  000B3E  519B               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4237  000B40  22DA               	addwfc	fsr2h,f,c
  4238  000B42  0012               	return	
  4239  000B44                     __end_ofPL106:
  4240                           	opt stack 0
  4241                           tblptru	equ	0xFF8
  4242                           tblptrh	equ	0xFF7
  4243                           tblptrl	equ	0xFF6
  4244                           tablat	equ	0xFF5
  4245                           prodh	equ	0xFF4
  4246                           prodl	equ	0xFF3
  4247                           intcon	equ	0xFF2
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           indf1	equ	0xFE7
  4251                           postdec1	equ	0xFE5
  4252                           fsr1h	equ	0xFE2
  4253                           fsr1l	equ	0xFE1
  4254                           indf2	equ	0xFDF
  4255                           postinc2	equ	0xFDE
  4256                           postdec2	equ	0xFDD
  4257                           plusw2	equ	0xFDB
  4258                           fsr2h	equ	0xFDA
  4259                           fsr2l	equ	0xFD9
  4260                           status	equ	0xFD8
  4261                           
  4262 ;; *************** function _BUTTON_IsPressed *****************
  4263 ;; Defined at:
  4264 ;;		line 55 in file "picLibs/buttons.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  button          1    wreg     enum E3304
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  button          1    0[BANK0 ] enum E3304
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      unsigned char 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 3F/0
  4275 ;;		On exit  : 3F/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4278 ;;      Params:         0       0       0       0
  4279 ;;      Locals:         0       1       0       0
  4280 ;;      Temps:          0       0       0       0
  4281 ;;      Totals:         0       1       0       0
  4282 ;;Total ram usage:        1 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:   10
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_APP_DeviceCDCBasicDemoTasks
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text21
  4293  001A8C                     __ptext21:
  4294                           	opt stack 0
  4295  001A8C                     _BUTTON_IsPressed:
  4296                           	opt stack 19
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;incstack = 0
  4300                           ;BUTTON_IsPressed@button stored from wreg
  4301  001A8C  6F93               	movwf	BUTTON_IsPressed@button& (0+255),b
  4302                           
  4303                           ;buttons.c: 57: switch(button)
  4304  001A8E  D003               	goto	l4708
  4305  001A90                     l228:
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4309  001A90  A680               	btfss	3968,3,c	;volatile
  4310  001A92  0C01               	retlw	1
  4311  001A94  0C00               	retlw	0
  4312  001A96                     l4708:
  4313  001A96  0100               	movlb	0	; () banked
  4314  001A98  5193               	movf	BUTTON_IsPressed@button& (0+255),w,b
  4315                           
  4316                           ; Switch size 1, requested type "space"
  4317                           ; Number of cases is 2, Range of values is 0 to 1
  4318                           ; switch strategies available:
  4319                           ; Name         Instructions Cycles
  4320                           ; simple_byte            7     4 (average)
  4321                           ;	Chosen strategy is simple_byte
  4322  001A9A  B4D8               	btfsc	status,2,c
  4323  001A9C  0C00               	retlw	0
  4324  001A9E  0A01               	xorlw	1	; case 1
  4325  001AA0  A4D8               	btfss	status,2,c
  4326  001AA2  0C00               	retlw	0
  4327  001AA4  D7F5               	goto	l228
  4328  001AA6                     __end_of_BUTTON_IsPressed:
  4329                           	opt stack 0
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           intcon	equ	0xFF2
  4337                           postinc0	equ	0xFEE
  4338                           wreg	equ	0xFE8
  4339                           indf1	equ	0xFE7
  4340                           postdec1	equ	0xFE5
  4341                           fsr1h	equ	0xFE2
  4342                           fsr1l	equ	0xFE1
  4343                           indf2	equ	0xFDF
  4344                           postinc2	equ	0xFDE
  4345                           postdec2	equ	0xFDD
  4346                           plusw2	equ	0xFDB
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function _SYS_InterruptHigh *****************
  4352 ;; Defined at:
  4353 ;;		line 86 in file "picLibs/system.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4367 ;;      Params:         0       0       0       0
  4368 ;;      Locals:         0       0       0       0
  4369 ;;      Temps:         10       0       0       0
  4370 ;;      Totals:        10       0       0       0
  4371 ;;Total ram usage:       10 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    9
  4374 ;; This function calls:
  4375 ;;		_USBDeviceTasks
  4376 ;; This function is called by:
  4377 ;;		Interrupt level 2
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	intcode
  4382  000008                     __pintcode:
  4383                           	opt stack 0
  4384  000008                     _SYS_InterruptHigh:
  4385                           	opt stack 17
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;incstack = 0
  4389  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4390  00000A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh
  4391  00000E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+1
  4392  000012  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+2
  4393  000016  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+3
  4394  00001A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+4
  4395  00001E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+5
  4396  000022  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+6
  4397  000026  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+7
  4398  00002A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+8
  4399  00002E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+9
  4400                           
  4401                           ;system.c: 89: USBDeviceTasks();
  4402  000032  EC6F  F003         	call	_USBDeviceTasks	;wreg free
  4403  000036  C051  FFF5         	movff	??_SYS_InterruptHigh+9,tablat
  4404  00003A  C050  FFF8         	movff	??_SYS_InterruptHigh+8,tblptru
  4405  00003E  C04F  FFF7         	movff	??_SYS_InterruptHigh+7,tblptrh
  4406  000042  C04E  FFF6         	movff	??_SYS_InterruptHigh+6,tblptrl
  4407  000046  C04D  FFF4         	movff	??_SYS_InterruptHigh+5,prodh
  4408  00004A  C04C  FFF3         	movff	??_SYS_InterruptHigh+4,prodl
  4409  00004E  C04B  FFDA         	movff	??_SYS_InterruptHigh+3,fsr2h
  4410  000052  C04A  FFD9         	movff	??_SYS_InterruptHigh+2,fsr2l
  4411  000056  C049  FFE2         	movff	??_SYS_InterruptHigh+1,fsr1h
  4412  00005A  C048  FFE1         	movff	??_SYS_InterruptHigh,fsr1l
  4413  00005E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4414  000060  0011               	retfie		f
  4415  000062                     __end_of_SYS_InterruptHigh:
  4416                           	opt stack 0
  4417                           tblptru	equ	0xFF8
  4418                           tblptrh	equ	0xFF7
  4419                           tblptrl	equ	0xFF6
  4420                           tablat	equ	0xFF5
  4421                           prodh	equ	0xFF4
  4422                           prodl	equ	0xFF3
  4423                           intcon	equ	0xFF2
  4424                           postinc0	equ	0xFEE
  4425                           wreg	equ	0xFE8
  4426                           indf1	equ	0xFE7
  4427                           postdec1	equ	0xFE5
  4428                           fsr1h	equ	0xFE2
  4429                           fsr1l	equ	0xFE1
  4430                           indf2	equ	0xFDF
  4431                           postinc2	equ	0xFDE
  4432                           postdec2	equ	0xFDD
  4433                           plusw2	equ	0xFDB
  4434                           fsr2h	equ	0xFDA
  4435                           fsr2l	equ	0xFD9
  4436                           status	equ	0xFD8
  4437                           
  4438 ;; *************** function _USBDeviceTasks *****************
  4439 ;; Defined at:
  4440 ;;		line 477 in file "picLibs/usb_device.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;		None
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  i               1   29[COMRAM] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      void 
  4447 ;; Registers used:
  4448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4454 ;;      Params:         0       0       0       0
  4455 ;;      Locals:         1       0       0       0
  4456 ;;      Temps:          0       0       0       0
  4457 ;;      Totals:         1       0       0       0
  4458 ;;Total ram usage:        1 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    8
  4461 ;; This function calls:
  4462 ;;		_USBCtrlEPAllowStatusStage
  4463 ;;		_USBCtrlEPService
  4464 ;;		_USBIncrement1msInternalTimers
  4465 ;;		_USBStallHandler
  4466 ;;		_USBSuspend
  4467 ;;		_USBWakeFromSuspend
  4468 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4469 ;;		i2_USBDeviceInit
  4470 ;; This function is called by:
  4471 ;;		_SYS_InterruptHigh
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text23
  4476  0006DE                     __ptext23:
  4477                           	opt stack 0
  4478  0006DE                     _USBDeviceTasks:
  4479                           	opt stack 17
  4480                           
  4481                           ;usb_device.c: 479: uint8_t i;
  4482                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4483                           
  4484                           ;incstack = 0
  4485  0006DE  0100               	movlb	0	; () banked
  4486  0006E0  0581               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4487  0006E2  E107               	bnz	i2l4294
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;usb_device.c: 591: {
  4491                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4492  0006E4  BA64               	btfsc	3940,5,c	;volatile
  4493  0006E6  D005               	goto	i2l4294
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;usb_device.c: 602: {
  4497                           ;usb_device.c: 608: {UIR = 0;};
  4498  0006E8  6A62               	clrf	3938,c	;volatile
  4499                           
  4500                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4501  0006EA  8060               	bsf	3936,0,c	;volatile
  4502                           
  4503                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4504  0006EC  8860               	bsf	3936,4,c	;volatile
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4508  0006EE  0E02               	movlw	2
  4509  0006F0  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4510  0006F2                     i2l4294:
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;usb_device.c: 617: }
  4514                           ;usb_device.c: 618: }
  4515                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4516  0006F2  B462               	btfsc	3938,2,c	;volatile
  4517                           
  4518                           ; BSR set to: 0
  4519  0006F4  A460               	btfss	3936,2,c	;volatile
  4520  0006F6  D003               	goto	i2l4302
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;usb_device.c: 635: {
  4524                           ;usb_device.c: 636: (UIR &= 0xFB);
  4525  0006F8  9462               	bcf	3938,2,c	;volatile
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;usb_device.c: 640: USBWakeFromSuspend();
  4529  0006FA  ECED  F00C         	call	_USBWakeFromSuspend	;wreg free
  4530  0006FE                     i2l4302:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;usb_device.c: 642: }
  4534                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4535  0006FE  A264               	btfss	3940,1,c	;volatile
  4536  000700  D002               	goto	i2l476
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;usb_device.c: 648: {
  4540                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  4541  000702  94A1               	bcf	4001,2,c	;volatile
  4542                           
  4543                           ;usb_device.c: 650: return;
  4544  000704  0012               	return	
  4545  000706                     i2l476:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;usb_device.c: 651: }
  4549                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4550  000706  B062               	btfsc	3938,0,c	;volatile
  4551                           
  4552                           ; BSR set to: 0
  4553  000708  A060               	btfss	3936,0,c	;volatile
  4554  00070A  D006               	goto	i2l4316
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;usb_device.c: 664: {
  4558                           ;usb_device.c: 665: USBDeviceInit();
  4559  00070C  EC6B  F004         	call	i2_USBDeviceInit	;wreg free
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4563  000710  84A0               	bsf	4000,2,c	;volatile
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4567  000712  0E04               	movlw	4
  4568  000714  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;usb_device.c: 681: (UIR &= 0xFE);
  4572  000716  9062               	bcf	3938,0,c	;volatile
  4573  000718                     i2l4316:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;usb_device.c: 682: }
  4577                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4578  000718  B862               	btfsc	3938,4,c	;volatile
  4579                           
  4580                           ; BSR set to: 0
  4581  00071A  A860               	btfss	3936,4,c	;volatile
  4582  00071C  D002               	goto	i2l4322
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;usb_device.c: 688: {
  4586                           ;usb_device.c: 694: USBSuspend();
  4587  00071E  ECDC  F00C         	call	_USBSuspend	;wreg free
  4588  000722                     i2l4322:
  4589                           
  4590                           ;usb_device.c: 696: }
  4591                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4592  000722  AC62               	btfss	3938,6,c	;volatile
  4593  000724  D013               	goto	i2l4340
  4594                           
  4595                           ;usb_device.c: 709: {
  4596                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4597  000726  AC60               	btfss	3936,6,c	;volatile
  4598  000728  D007               	goto	i2l4328
  4599                           
  4600                           ;usb_device.c: 712: {
  4601                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4602  00072A  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4603  00072C  0E73               	movlw	115
  4604  00072E  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4605  000730  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4606  000732  D850               	call	PL86	;call to abstracted procedure
  4607  000734  ECD5  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4608  000738                     i2l4328:
  4609                           
  4610                           ;usb_device.c: 714: }
  4611                           ;usb_device.c: 715: (UIR &= 0xBF);
  4612  000738  9C62               	bcf	3938,6,c	;volatile
  4613                           
  4614                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4615  00073A  EC38  F00D         	call	_USBIncrement1msInternalTimers	;wreg free
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4619  00073E  5021               	movf	_USBStatusStageTimeoutCounter,w,c
  4620  000740  E001               	bz	i2l4336
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;usb_device.c: 736: {
  4624                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4625  000742  0621               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  4626  000744                     i2l4336:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;usb_device.c: 738: }
  4630                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4631  000744  5021               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4632  000746  E102               	bnz	i2l4340
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;usb_device.c: 745: {
  4636                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4637  000748  ECF1  F008         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4638  00074C                     i2l4340:
  4639                           
  4640                           ;usb_device.c: 747: }
  4641                           ;usb_device.c: 749: }
  4642                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4643  00074C  BA62               	btfsc	3938,5,c	;volatile
  4644  00074E  AA60               	btfss	3936,5,c	;volatile
  4645  000750  D002               	goto	i2l4346
  4646                           
  4647                           ;usb_device.c: 752: {
  4648                           ;usb_device.c: 753: USBStallHandler();
  4649  000752  EC26  F00C         	call	_USBStallHandler	;wreg free
  4650  000756                     i2l4346:
  4651                           
  4652                           ;usb_device.c: 754: }
  4653                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4654  000756  B262               	btfsc	3938,1,c	;volatile
  4655  000758  A260               	btfss	3936,1,c	;volatile
  4656  00075A  D009               	goto	i2l4354
  4657                           
  4658                           ;usb_device.c: 757: {
  4659                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4660  00075C  0E7F               	movlw	127
  4661  00075E  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4662  000760  6836               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4663  000762  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4664  000764  D837               	call	PL86	;call to abstracted procedure
  4665  000766  ECD5  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4666                           
  4667                           ;usb_device.c: 759: {UEIR = 0;};
  4668  00076A  010F               	movlb	15	; () banked
  4669  00076C  6B5F               	clrf	95,b	;volatile
  4670  00076E                     i2l4354:
  4671                           
  4672                           ;usb_device.c: 767: }
  4673                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4674  00076E  0E04               	movlw	4
  4675  000770  0100               	movlb	0	; () banked
  4676  000772  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4677  000774  D002               	goto	i2l486
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;usb_device.c: 775: {
  4681                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  4682  000776  94A1               	bcf	4001,2,c	;volatile
  4683                           
  4684                           ;usb_device.c: 777: return;
  4685  000778  0C04               	retlw	4
  4686  00077A                     i2l486:
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;usb_device.c: 778: }
  4690                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4691  00077A  A660               	btfss	3936,3,c	;volatile
  4692  00077C  D029               	goto	i2l487
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;usb_device.c: 784: {
  4696                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4697  00077E  6A47               	clrf	USBDeviceTasks@i,c
  4698  000780                     i2l488:
  4699                           
  4700                           ;usb_device.c: 786: {
  4701                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4702  000780  A662               	btfss	3938,3,c	;volatile
  4703  000782  D026               	goto	i2l487
  4704                           
  4705                           ;usb_device.c: 788: {
  4706                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4707  000784  CF63 F028          	movff	3939,_USTATcopy	;volatile
  4708                           
  4709                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4710  000788  3028               	rrcf	_USTATcopy,w,c	;volatile
  4711  00078A  32E8               	rrcf	wreg,f,c
  4712  00078C  32E8               	rrcf	wreg,f,c
  4713  00078E  0B0F               	andlw	15
  4714  000790  6E23               	movwf	_endpoint_number,c	;volatile
  4715                           
  4716                           ;usb_device.c: 793: (UIR &= 0xF7);
  4717  000792  9662               	bcf	3938,3,c	;volatile
  4718                           
  4719                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4720  000794  B428               	btfsc	_USTATcopy,2,c	;volatile
  4721  000796  D003               	goto	i2l4374
  4722                           
  4723                           ;usb_device.c: 799: {
  4724                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4725  000798  5023               	movf	_endpoint_number,w,c
  4726  00079A  0F70               	addlw	low _ep_data_out
  4727  00079C  D002               	goto	L4
  4728  00079E                     i2l4374:
  4729                           
  4730                           ;usb_device.c: 802: else
  4731                           ;usb_device.c: 803: {
  4732                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4733  00079E  5023               	movf	_endpoint_number,w,c
  4734  0007A0  0F73               	addlw	low _ep_data_in
  4735  0007A2                     L4:
  4736  0007A2  6ED9               	movwf	fsr2l,c
  4737  0007A4  6ADA               	clrf	fsr2h,c
  4738  0007A6  0100               	movlb	0	; () banked
  4739  0007A8  70DF               	btg	indf2,0,c
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;usb_device.c: 805: }
  4743                           ;usb_device.c: 810: if(endpoint_number == 0)
  4744  0007AA  5023               	movf	_endpoint_number,w,c	;volatile
  4745  0007AC  E103               	bnz	i2l4380
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;usb_device.c: 811: {
  4749                           ;usb_device.c: 812: USBCtrlEPService();
  4750  0007AE  EC65  F009         	call	_USBCtrlEPService	;wreg free
  4751                           
  4752                           ;usb_device.c: 813: }
  4753  0007B2  D00A               	goto	i2l4382
  4754  0007B4                     i2l4380:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;usb_device.c: 814: else
  4758                           ;usb_device.c: 815: {
  4759                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4760  0007B4  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4761  0007B6  0E72               	movlw	114
  4762  0007B8  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4763  0007BA  0E28               	movlw	low _USTATcopy
  4764  0007BC  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4765  0007BE  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4766  0007C0  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4767  0007C2  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4768  0007C4  ECD5  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4769  0007C8                     i2l4382:
  4770  0007C8  2A47               	incf	USBDeviceTasks@i,f,c
  4771  0007CA  0E03               	movlw	3
  4772  0007CC  6447               	cpfsgt	USBDeviceTasks@i,c
  4773  0007CE  D7D8               	goto	i2l488
  4774  0007D0                     i2l487:
  4775                           
  4776                           ;usb_device.c: 822: }
  4777                           ;usb_device.c: 823: }
  4778                           ;usb_device.c: 824: }
  4779                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  4780  0007D0  94A1               	bcf	4001,2,c	;volatile
  4781  0007D2  0012               	return		;funcret
  4782  0007D4                     __end_of_USBDeviceTasks:
  4783                           	opt stack 0
  4784  0007D4                     PL86:
  4785                           	opt stack 17
  4786  0007D4  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4787  0007D6  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4788  0007D8  0E01               	movlw	1
  4789  0007DA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4790  0007DC  0C01               	retlw	1
  4791  0007DE                     __end_ofPL86:
  4792                           	opt stack 0
  4793                           tblptru	equ	0xFF8
  4794                           tblptrh	equ	0xFF7
  4795                           tblptrl	equ	0xFF6
  4796                           tablat	equ	0xFF5
  4797                           prodh	equ	0xFF4
  4798                           prodl	equ	0xFF3
  4799                           intcon	equ	0xFF2
  4800                           postinc0	equ	0xFEE
  4801                           wreg	equ	0xFE8
  4802                           indf1	equ	0xFE7
  4803                           postdec1	equ	0xFE5
  4804                           fsr1h	equ	0xFE2
  4805                           fsr1l	equ	0xFE1
  4806                           indf2	equ	0xFDF
  4807                           postinc2	equ	0xFDE
  4808                           postdec2	equ	0xFDD
  4809                           plusw2	equ	0xFDB
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function i2_USBDeviceInit *****************
  4815 ;; Defined at:
  4816 ;;		line 277 in file "picLibs/usb_device.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 3F/0
  4827 ;;		On exit  : 3F/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4830 ;;      Params:         0       0       0       0
  4831 ;;      Locals:         1       0       0       0
  4832 ;;      Temps:          0       0       0       0
  4833 ;;      Totals:         1       0       0       0
  4834 ;;Total ram usage:        1 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    1
  4837 ;; This function calls:
  4838 ;;		i2_memset
  4839 ;; This function is called by:
  4840 ;;		_USBDeviceTasks
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text24
  4845  0008D6                     __ptext24:
  4846                           	opt stack 0
  4847  0008D6                     i2_USBDeviceInit:
  4848                           	opt stack 0
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;usb_device.c: 279: uint8_t i;
  4852                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4853                           
  4854                           ;incstack = 0
  4855                           
  4856                           ;usb_device.c: 285: ;
  4857                           ;usb_device.c: 288: {UEIR = 0;};
  4858                           
  4859                           ;usb_device.c: 291: {UIR = 0;};
  4860                           
  4861                           ;usb_device.c: 294: UEP0 = 0;
  4862  0008D6  D85C               	call	PL76	;call to abstracted procedure
  4863                           
  4864                           ; BSR set to: 15
  4865                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  4866  0008D8  EC4D  F007         	call	PL50	;call to abstracted procedure
  4867  0008DC  ECC7  F00C         	call	i2_memset	;wreg free
  4868                           
  4869                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4870                           
  4871                           ; BSR set to: 15
  4872  0008E0  EC1E  F00C         	call	PL30	;call to abstracted procedure
  4873                           
  4874                           ; BSR set to: 15
  4875                           ;usb_device.c: 301: ;
  4876                           ;usb_device.c: 304: ;
  4877                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4878  0008E4  6A32               	clrf	i2USBDeviceInit@i,c
  4879  0008E6                     i2l4158:
  4880                           
  4881                           ;usb_device.c: 308: {
  4882                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4883  0008E6  5032               	movf	i2USBDeviceInit@i,w,c
  4884  0008E8  D847               	call	PL34	;call to abstracted procedure
  4885  0008EA  2A32               	incf	i2USBDeviceInit@i,f,c
  4886  0008EC  0E0B               	movlw	11
  4887  0008EE  6432               	cpfsgt	i2USBDeviceInit@i,c
  4888  0008F0  D7FA               	goto	i2l4158
  4889                           
  4890                           ;usb_device.c: 310: }
  4891                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4892                           
  4893                           ;usb_device.c: 316: UADDR = 0x00;
  4894                           
  4895                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4896                           
  4897                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4898                           
  4899                           ;usb_device.c: 326: {
  4900                           ;usb_device.c: 327: (UIR &= 0xF7);
  4901                           
  4902                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4903                           
  4904                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4905                           
  4906                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4907                           
  4908                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4909                           
  4910                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4911                           
  4912                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4913                           
  4914                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4915                           
  4916                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4920  0008F2  D82E               	call	PL20	;call to abstracted procedure
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4924  0008F4  6A32               	clrf	i2USBDeviceInit@i,c
  4925  0008F6                     i2l4188:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;usb_device.c: 346: {
  4929                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4930  0008F6  5032               	movf	i2USBDeviceInit@i,w,c
  4931  0008F8  EC88  F005         	call	PL26	;call to abstracted procedure
  4932  0008FC  6ADE               	clrf	postinc2,c
  4933  0008FE  6ADD               	clrf	postdec2,c
  4934                           
  4935                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4936  000900  5032               	movf	i2USBDeviceInit@i,w,c
  4937  000902  EC82  F005         	call	PL24	;call to abstracted procedure
  4938  000906  6ADE               	clrf	postinc2,c
  4939  000908  6ADD               	clrf	postdec2,c
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4943  00090A  5032               	movf	i2USBDeviceInit@i,w,c
  4944  00090C  D84C               	call	PL88	;call to abstracted procedure
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4948  00090E  5032               	movf	i2USBDeviceInit@i,w,c
  4949  000910  D845               	call	PL80	;call to abstracted procedure
  4950                           
  4951                           ; BSR set to: 0
  4952  000912  2A32               	incf	i2USBDeviceInit@i,f,c
  4953                           
  4954                           ; BSR set to: 0
  4955  000914  0E02               	movlw	2
  4956  000916  6432               	cpfsgt	i2USBDeviceInit@i,c
  4957  000918  D7EE               	goto	i2l4188
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;usb_device.c: 351: }
  4961                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4962  00091A  0E08               	movlw	8
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4966                           
  4967                           ; BSR set to: 15
  4968                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  4969                           
  4970                           ; BSR set to: 2
  4971                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4972                           
  4973                           ; BSR set to: 2
  4974                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4975                           
  4976                           ; BSR set to: 2
  4977                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4978                           
  4979                           ; BSR set to: 2
  4980                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4981                           
  4982                           ; BSR set to: 2
  4983                           ;usb_device.c: 366: USB1msTickCount = 0;
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4990                           
  4991                           ; BSR set to: 0
  4992  00091C  D000               	goto	PL14	;call to abstracted procedure
  4993  00091E                     __end_ofi2_USBDeviceInit:
  4994                           	opt stack 0
  4995  00091E                     PL14:
  4996                           	opt stack 19
  4997  00091E  6E0F               	movwf	_pBDTEntryIn,c
  4998  000920  0E02               	movlw	2
  4999  000922  6E10               	movwf	_pBDTEntryIn+1,c
  5000  000924  0E16               	movlw	22
  5001  000926  010F               	movlb	15	; () banked
  5002  000928  6F53               	movwf	83,b	;volatile
  5003  00092A  0E02               	movlw	2
  5004  00092C  0102               	movlb	2	; () banked
  5005  00092E  6F03               	movwf	3,b	;volatile
  5006  000930  0E30               	movlw	48
  5007  000932  6F02               	movwf	2,b	;volatile
  5008  000934  0E08               	movlw	8
  5009  000936  6F01               	movwf	1,b	;volatile
  5010  000938  0E04               	movlw	4
  5011  00093A  6F00               	movwf	0,b	;volatile
  5012  00093C  8F00               	bsf	0,7,b	;volatile
  5013  00093E  6A29               	clrf	_USBActiveConfiguration,c	;volatile
  5014  000940  0100               	movlb	0	; () banked
  5015  000942  6B66               	clrf	_USB1msTickCount& (0+255),b	;volatile
  5016  000944  6B67               	clrf	(_USB1msTickCount+1)& (0+255),b	;volatile
  5017  000946  6B68               	clrf	(_USB1msTickCount+2)& (0+255),b	;volatile
  5018  000948  6B69               	clrf	(_USB1msTickCount+3)& (0+255),b	;volatile
  5019  00094A  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5020  00094C  6B81               	clrf	_USBDeviceState& (0+255),b	;volatile
  5021  00094E  0012               	return		;funcret
  5022  000950                     __end_ofPL14:
  5023                           	opt stack 0
  5024  000950                     PL20:
  5025                           	opt stack 19
  5026  000950  8C64               	bsf	3940,6,c	;volatile
  5027  000952  010F               	movlb	15	; () banked
  5028  000954  6B5C               	clrf	92,b	;volatile
  5029  000956  9864               	bcf	3940,4,c	;volatile
  5030  000958  9C64               	bcf	3940,6,c	;volatile
  5031  00095A                     l4964:
  5032  00095A  9662               	bcf	3938,3,c	;volatile
  5033  00095C  6A0C               	clrf	_inPipes+3,c	;volatile
  5034  00095E  6A04               	clrf	_outPipes+3,c	;volatile
  5035  000960  6A05               	clrf	_outPipes+4,c	;volatile
  5036  000962  6A06               	clrf	_outPipes+5,c	;volatile
  5037  000964  B662               	btfsc	3938,3,c	;volatile
  5038  000966  D7F9               	goto	l4964
  5039  000968  0E01               	movlw	1
  5040  00096A  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5041  00096C  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5042  00096E  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5043  000970  0100               	movlb	0	; () banked
  5044  000972  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5045  000974  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5046  000976  0012               	return	
  5047  000978                     __end_ofPL20:
  5048                           	opt stack 0
  5049  000978                     PL34:
  5050                           	opt stack 19
  5051  000978  0D04               	mullw	4
  5052  00097A  0E00               	movlw	0
  5053  00097C  24F3               	addwf	prodl,w,c
  5054  00097E  6ED9               	movwf	fsr2l,c
  5055  000980  0E02               	movlw	2
  5056  000982  20F4               	addwfc	prodh,w,c
  5057  000984  6EDA               	movwf	fsr2h,c
  5058  000986  6ADE               	clrf	postinc2,c
  5059  000988  6ADE               	clrf	postinc2,c
  5060  00098A  6ADE               	clrf	postinc2,c
  5061  00098C  6ADD               	clrf	postdec2,c
  5062  00098E  0012               	return	
  5063  000990                     __end_ofPL34:
  5064                           	opt stack 0
  5065  000990                     PL76:
  5066                           	opt stack 19
  5067  000990  94A0               	bcf	4000,2,c	;volatile
  5068  000992  010F               	movlb	15	; () banked
  5069  000994  6B5F               	clrf	95,b	;volatile
  5070  000996  6A62               	clrf	3938,c	;volatile
  5071  000998  6B53               	clrf	83,b	;volatile
  5072  00099A  0012               	return	
  5073  00099C                     __end_ofPL76:
  5074                           	opt stack 0
  5075  00099C                     PL80:
  5076                           	opt stack 19
  5077  00099C  0F70               	addlw	low _ep_data_out
  5078  00099E  6ED9               	movwf	fsr2l,c
  5079  0009A0  6ADA               	clrf	fsr2h,c
  5080  0009A2  6ADF               	clrf	indf2,c
  5081  0009A4  0012               	return	
  5082  0009A6                     __end_ofPL80:
  5083                           	opt stack 0
  5084  0009A6                     PL88:
  5085                           	opt stack 19
  5086  0009A6  0F73               	addlw	low _ep_data_in
  5087  0009A8  6ED9               	movwf	fsr2l,c
  5088  0009AA  6ADA               	clrf	fsr2h,c
  5089  0009AC  6ADF               	clrf	indf2,c
  5090  0009AE  0012               	return	
  5091  0009B0                     __end_ofPL88:
  5092                           	opt stack 0
  5093                           tblptru	equ	0xFF8
  5094                           tblptrh	equ	0xFF7
  5095                           tblptrl	equ	0xFF6
  5096                           tablat	equ	0xFF5
  5097                           prodh	equ	0xFF4
  5098                           prodl	equ	0xFF3
  5099                           intcon	equ	0xFF2
  5100                           postinc0	equ	0xFEE
  5101                           wreg	equ	0xFE8
  5102                           indf1	equ	0xFE7
  5103                           postdec1	equ	0xFE5
  5104                           fsr1h	equ	0xFE2
  5105                           fsr1l	equ	0xFE1
  5106                           indf2	equ	0xFDF
  5107                           postinc2	equ	0xFDE
  5108                           postdec2	equ	0xFDD
  5109                           plusw2	equ	0xFDB
  5110                           fsr2h	equ	0xFDA
  5111                           fsr2l	equ	0xFD9
  5112                           status	equ	0xFD8
  5113                           
  5114 ;; *************** function _USBWakeFromSuspend *****************
  5115 ;; Defined at:
  5116 ;;		line 2303 in file "picLibs/usb_device.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5125 ;; Tracked objects:
  5126 ;;		On entry : 3F/0
  5127 ;;		On exit  : 3F/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5130 ;;      Params:         0       0       0       0
  5131 ;;      Locals:         0       0       0       0
  5132 ;;      Temps:          0       0       0       0
  5133 ;;      Totals:         0       0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    4
  5137 ;; This function calls:
  5138 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5139 ;; This function is called by:
  5140 ;;		_USBDeviceTasks
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text25
  5145  0019DA                     __ptext25:
  5146                           	opt stack 0
  5147  0019DA                     _USBWakeFromSuspend:
  5148                           	opt stack 20
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;incstack = 0
  5155  0019DA  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5159  0019DC  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5160  0019DE  0E74               	movlw	116
  5161  0019E0  ECE7  F00C         	call	PL40	;call to abstracted procedure
  5162  0019E4  ECD5  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5163                           
  5164                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5165  0019E8  9264               	bcf	3940,1,c	;volatile
  5166                           
  5167                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5168  0019EA  9460               	bcf	3936,2,c	;volatile
  5169                           
  5170                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5171  0019EC  D001               	goto	i2l4084
  5172  0019EE                     i2l4082:
  5173                           
  5174                           ;usb_device.c: 2343: {
  5175                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5176  0019EE  9462               	bcf	3938,2,c	;volatile
  5177  0019F0                     i2l4084:
  5178  0019F0  B462               	btfsc	3938,2,c	;volatile
  5179  0019F2  D7FD               	goto	i2l4082
  5180                           
  5181                           ;usb_device.c: 2345: }
  5182                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5183  0019F4  0100               	movlb	0	; () banked
  5184  0019F6  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5185                           
  5186                           ; BSR set to: 0
  5187  0019F8  0012               	return		;funcret
  5188  0019FA                     __end_of_USBWakeFromSuspend:
  5189                           	opt stack 0
  5190                           tblptru	equ	0xFF8
  5191                           tblptrh	equ	0xFF7
  5192                           tblptrl	equ	0xFF6
  5193                           tablat	equ	0xFF5
  5194                           prodh	equ	0xFF4
  5195                           prodl	equ	0xFF3
  5196                           intcon	equ	0xFF2
  5197                           postinc0	equ	0xFEE
  5198                           wreg	equ	0xFE8
  5199                           indf1	equ	0xFE7
  5200                           postdec1	equ	0xFE5
  5201                           fsr1h	equ	0xFE2
  5202                           fsr1l	equ	0xFE1
  5203                           indf2	equ	0xFDF
  5204                           postinc2	equ	0xFDE
  5205                           postdec2	equ	0xFDD
  5206                           plusw2	equ	0xFDB
  5207                           fsr2h	equ	0xFDA
  5208                           fsr2l	equ	0xFD9
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _USBSuspend *****************
  5212 ;; Defined at:
  5213 ;;		line 2245 in file "picLibs/usb_device.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 3F/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5227 ;;      Params:         0       0       0       0
  5228 ;;      Locals:         0       0       0       0
  5229 ;;      Temps:          0       0       0       0
  5230 ;;      Totals:         0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    4
  5234 ;; This function calls:
  5235 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5236 ;; This function is called by:
  5237 ;;		_USBDeviceTasks
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text26
  5242  0019B8                     __ptext26:
  5243                           	opt stack 0
  5244  0019B8                     _USBSuspend:
  5245                           	opt stack 20
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;incstack = 0
  5252  0019B8  8460               	bsf	3936,2,c	;volatile
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5256  0019BA  9862               	bcf	3938,4,c	;volatile
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5260  0019BC  8264               	bsf	3940,1,c	;volatile
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5264  0019BE  0E01               	movlw	1
  5265  0019C0  6E24               	movwf	_USBBusIsSuspended,c	;volatile
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5269  0019C2  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5273  0019C4  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5274  0019C6  0E75               	movlw	117
  5275  0019C8  D802               	call	PL40	;call to abstracted procedure
  5276  0019CA  EFD5  F009         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5277  0019CE                     __end_of_USBSuspend:
  5278                           	opt stack 0
  5279  0019CE                     PL40:
  5280                           	opt stack 20
  5281  0019CE  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5282  0019D0  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5283  0019D2  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5284  0019D4  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5285  0019D6  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5286  0019D8  0012               	return	
  5287  0019DA                     __end_ofPL40:
  5288                           	opt stack 0
  5289                           tblptru	equ	0xFF8
  5290                           tblptrh	equ	0xFF7
  5291                           tblptrl	equ	0xFF6
  5292                           tablat	equ	0xFF5
  5293                           prodh	equ	0xFF4
  5294                           prodl	equ	0xFF3
  5295                           intcon	equ	0xFF2
  5296                           postinc0	equ	0xFEE
  5297                           wreg	equ	0xFE8
  5298                           indf1	equ	0xFE7
  5299                           postdec1	equ	0xFE5
  5300                           fsr1h	equ	0xFE2
  5301                           fsr1l	equ	0xFE1
  5302                           indf2	equ	0xFDF
  5303                           postinc2	equ	0xFDE
  5304                           postdec2	equ	0xFDD
  5305                           plusw2	equ	0xFDB
  5306                           fsr2h	equ	0xFDA
  5307                           fsr2l	equ	0xFD9
  5308                           status	equ	0xFD8
  5309                           
  5310 ;; *************** function _USBStallHandler *****************
  5311 ;; Defined at:
  5312 ;;		line 2202 in file "picLibs/usb_device.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 3F/F
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5326 ;;      Params:         0       0       0       0
  5327 ;;      Locals:         0       0       0       0
  5328 ;;      Temps:          1       0       0       0
  5329 ;;      Totals:         1       0       0       0
  5330 ;;Total ram usage:        1 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_USBDeviceTasks
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text27
  5340  00184C                     __ptext27:
  5341                           	opt stack 0
  5342  00184C                     _USBStallHandler:
  5343                           	opt stack 24
  5344                           
  5345                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5346                           
  5347                           ;incstack = 0
  5348  00184C  010F               	movlb	15	; () banked
  5349  00184E  A153               	btfss	83,0,b	;volatile
  5350  001850  D010               	goto	i2l626
  5351                           
  5352                           ; BSR set to: 15
  5353                           ;usb_device.c: 2215: {
  5354                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5355  001852  D811               	call	PL28	;call to abstracted procedure
  5356  001854  0E80               	movlw	128
  5357  001856  18DE               	xorwf	postinc2,w,c
  5358  001858  E10B               	bnz	i2l4118
  5359                           
  5360                           ; BSR set to: 15
  5361  00185A  EC27  F008         	call	PL16	;call to abstracted procedure
  5362  00185E  0E84               	movlw	132
  5363  001860  18DE               	xorwf	postinc2,w,c
  5364  001862  E106               	bnz	i2l4118
  5365                           
  5366                           ; BSR set to: 15
  5367                           ;usb_device.c: 2218: {
  5368                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5369  001864  D808               	call	PL28	;call to abstracted procedure
  5370  001866  0E0C               	movlw	12
  5371  001868  6EDF               	movwf	indf2,c
  5372                           
  5373                           ; BSR set to: 15
  5374                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5375  00186A  D805               	call	PL28	;call to abstracted procedure
  5376  00186C  0E00               	movlw	0
  5377  00186E  8EDB               	bsf	plusw2,7,c
  5378  001870                     i2l4118:
  5379                           
  5380                           ; BSR set to: 15
  5381                           ;usb_device.c: 2222: }
  5382                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5383  001870  9153               	bcf	83,0,b	;volatile
  5384  001872                     i2l626:
  5385                           
  5386                           ; BSR set to: 15
  5387                           ;usb_device.c: 2224: }
  5388                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5389  001872  9A62               	bcf	3938,5,c	;volatile
  5390                           
  5391                           ; BSR set to: 15
  5392  001874  0012               	return		;funcret
  5393  001876                     __end_of_USBStallHandler:
  5394                           	opt stack 0
  5395  001876                     PL28:
  5396                           	opt stack 24
  5397  001876  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5398  00187A  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5399  00187E  0012               	return	
  5400  001880                     __end_ofPL28:
  5401                           	opt stack 0
  5402                           tblptru	equ	0xFF8
  5403                           tblptrh	equ	0xFF7
  5404                           tblptrl	equ	0xFF6
  5405                           tablat	equ	0xFF5
  5406                           prodh	equ	0xFF4
  5407                           prodl	equ	0xFF3
  5408                           intcon	equ	0xFF2
  5409                           postinc0	equ	0xFEE
  5410                           wreg	equ	0xFE8
  5411                           indf1	equ	0xFE7
  5412                           postdec1	equ	0xFE5
  5413                           fsr1h	equ	0xFE2
  5414                           fsr1l	equ	0xFE1
  5415                           indf2	equ	0xFDF
  5416                           postinc2	equ	0xFDE
  5417                           postdec2	equ	0xFDD
  5418                           plusw2	equ	0xFDB
  5419                           fsr2h	equ	0xFDA
  5420                           fsr2l	equ	0xFD9
  5421                           status	equ	0xFD8
  5422                           
  5423 ;; *************** function _USBIncrement1msInternalTimers *****************
  5424 ;; Defined at:
  5425 ;;		line 3025 in file "picLibs/usb_device.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;		None
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      void 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 3F/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5439 ;;      Params:         0       0       0       0
  5440 ;;      Locals:         0       0       0       0
  5441 ;;      Temps:          0       0       0       0
  5442 ;;      Totals:         0       0       0       0
  5443 ;;Total ram usage:        0 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_USBDeviceTasks
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text28
  5453  001A70                     __ptext28:
  5454                           	opt stack 0
  5455  001A70                     _USBIncrement1msInternalTimers:
  5456                           	opt stack 24
  5457                           
  5458                           ;usb_device.c: 3033: USB1msTickCount++;
  5459                           
  5460                           ; BSR set to: 15
  5461                           ;incstack = 0
  5462  001A70  0100               	movlb	0	; () banked
  5463  001A72  2B66               	incf	_USB1msTickCount& (0+255),f,b	;volatile
  5464  001A74  0E00               	movlw	0
  5465  001A76  2367               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  5466  001A78  2368               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  5467  001A7A  2369               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5471  001A7C  5024               	movf	_USBBusIsSuspended,w,c	;volatile
  5472  001A7E  A4D8               	btfss	status,2,c
  5473  001A80  0012               	return	
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;usb_device.c: 3035: {
  5477                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5478  001A82  2B7D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5482  001A84  517D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  5483  001A86  B4D8               	btfsc	status,2,c
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;usb_device.c: 3039: {
  5487                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5488  001A88  697D               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5489                           
  5490                           ; BSR set to: 0
  5491  001A8A  0012               	return		;funcret
  5492  001A8C                     __end_of_USBIncrement1msInternalTimers:
  5493                           	opt stack 0
  5494                           tblptru	equ	0xFF8
  5495                           tblptrh	equ	0xFF7
  5496                           tblptrl	equ	0xFF6
  5497                           tablat	equ	0xFF5
  5498                           prodh	equ	0xFF4
  5499                           prodl	equ	0xFF3
  5500                           intcon	equ	0xFF2
  5501                           postinc0	equ	0xFEE
  5502                           wreg	equ	0xFE8
  5503                           indf1	equ	0xFE7
  5504                           postdec1	equ	0xFE5
  5505                           fsr1h	equ	0xFE2
  5506                           fsr1l	equ	0xFE1
  5507                           indf2	equ	0xFDF
  5508                           postinc2	equ	0xFDE
  5509                           postdec2	equ	0xFDD
  5510                           plusw2	equ	0xFDB
  5511                           fsr2h	equ	0xFDA
  5512                           fsr2l	equ	0xFD9
  5513                           status	equ	0xFD8
  5514                           
  5515 ;; *************** function _USBCtrlEPService *****************
  5516 ;; Defined at:
  5517 ;;		line 2372 in file "picLibs/usb_device.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      void 
  5524 ;; Registers used:
  5525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 3F/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5531 ;;      Params:         0       0       0       0
  5532 ;;      Locals:         0       0       0       0
  5533 ;;      Temps:          1       0       0       0
  5534 ;;      Totals:         1       0       0       0
  5535 ;;Total ram usage:        1 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    7
  5538 ;; This function calls:
  5539 ;;		_USBCtrlTrfInHandler
  5540 ;;		_USBCtrlTrfOutHandler
  5541 ;;		_USBCtrlTrfSetupHandler
  5542 ;;		_memcpy
  5543 ;; This function is called by:
  5544 ;;		_USBDeviceTasks
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text29
  5549  0012CA                     __ptext29:
  5550                           	opt stack 0
  5551  0012CA                     _USBCtrlEPService:
  5552                           	opt stack 17
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;incstack = 0
  5559  0012CA  0E2D               	movlw	45
  5560  0012CC  6E21               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5564  0012CE  C028  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5565  0012D2  0EFD               	movlw	253
  5566  0012D4  1646               	andwf	??_USBCtrlEPService,f,c
  5567  0012D6  E12A               	bnz	i2l4138
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;usb_device.c: 2383: {
  5571                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5572  0012D8  90D8               	bcf	status,0,c
  5573  0012DA  3028               	rrcf	_USTATcopy,w,c	;volatile
  5574  0012DC  0B3F               	andlw	63
  5575  0012DE  0D04               	mullw	4
  5576  0012E0  0E00               	movlw	0
  5577  0012E2  24F3               	addwf	prodl,w,c
  5578  0012E4  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  5579  0012E6  0E02               	movlw	2
  5580  0012E8  20F4               	addwfc	prodh,w,c
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5584  0012EA  EC57  F007         	call	PL98	;call to abstracted procedure
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5588  0012EE  0E04               	movlw	4
  5589  0012F0  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
  5590  0012F2  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5594  0012F4  EC3B  F00C         	call	PL28	;call to abstracted procedure
  5595  0012F8  30DF               	rrcf	indf2,w,c
  5596  0012FA  32E8               	rrcf	wreg,f,c
  5597  0012FC  0B0F               	andlw	15
  5598  0012FE  0A0D               	xorlw	13
  5599  001300  E002 EFFD  F00C    	bnz	_USBCtrlTrfOutHandler
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;usb_device.c: 2400: {
  5603                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  5604  001306  0E30               	movlw	48
  5605  001308  6E2A               	movwf	memcpy@d1,c
  5606  00130A  0E02               	movlw	2
  5607  00130C  6E2B               	movwf	memcpy@d1+1,c
  5608  00130E  EE20 F002          	lfsr	2,2
  5609  001312  EC27  F009         	call	PL70	;call to abstracted procedure
  5610  001316  CFDE F02C          	movff	postinc2,memcpy@s1
  5611  00131A  CFDD F02D          	movff	postdec2,memcpy@s1+1
  5612  00131E  6A2F               	clrf	memcpy@n+1,c
  5613  001320  0E08               	movlw	8
  5614  001322  6E2E               	movwf	memcpy@n,c
  5615  001324  ECB2  F00B         	call	_memcpy	;wreg free
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5619  001328  EF44  F00B         	goto	_USBCtrlTrfSetupHandler	;wreg free
  5620  00132C                     i2l4138:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5624  00132C  5028               	movf	_USTATcopy,w,c	;volatile
  5625  00132E  0BFD               	andlw	253
  5626  001330  0A04               	xorlw	4
  5627  001332  B4D8               	btfsc	status,2,c
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;usb_device.c: 2417: {
  5631                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5632  001334  ECF1  F007         	call	_USBCtrlTrfInHandler	;wreg free
  5633  001338  0012               	return		;funcret
  5634  00133A                     __end_of_USBCtrlEPService:
  5635                           	opt stack 0
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           postinc0	equ	0xFEE
  5644                           wreg	equ	0xFE8
  5645                           indf1	equ	0xFE7
  5646                           postdec1	equ	0xFE5
  5647                           fsr1h	equ	0xFE2
  5648                           fsr1l	equ	0xFE1
  5649                           indf2	equ	0xFDF
  5650                           postinc2	equ	0xFDE
  5651                           postdec2	equ	0xFDD
  5652                           plusw2	equ	0xFDB
  5653                           fsr2h	equ	0xFDA
  5654                           fsr2l	equ	0xFD9
  5655                           status	equ	0xFD8
  5656                           
  5657 ;; *************** function _memcpy *****************
  5658 ;; Defined at:
  5659 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  d1              2    0[COMRAM] PTR void 
  5662 ;;		 -> SetupPkt(8), 
  5663 ;;  s1              2    2[COMRAM] PTR const void 
  5664 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5665 ;;  n               2    4[COMRAM] unsigned int 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5668 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5669 ;;  d               2    6[COMRAM] PTR unsigned char 
  5670 ;;		 -> SetupPkt(8), 
  5671 ;;  tmp             1   10[COMRAM] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  2    0[COMRAM] PTR void 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 3F/0
  5678 ;;		On exit  : 3F/0
  5679 ;;		Unchanged: 3F/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5681 ;;      Params:         6       0       0       0
  5682 ;;      Locals:         5       0       0       0
  5683 ;;      Temps:          0       0       0       0
  5684 ;;      Totals:        11       0       0       0
  5685 ;;Total ram usage:       11 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_USBCtrlEPService
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text30
  5695  001764                     __ptext30:
  5696                           	opt stack 0
  5697  001764                     _memcpy:
  5698                           	opt stack 23
  5699                           
  5700                           ; BSR set to: 0
  5701                           
  5702                           ;incstack = 0
  5703  001764  C02C  F032         	movff	memcpy@s1,memcpy@s
  5704  001768  C02D  F033         	movff	memcpy@s1+1,memcpy@s+1
  5705  00176C  C02A  F030         	movff	memcpy@d1,memcpy@d
  5706  001770  C02B  F031         	movff	memcpy@d1+1,memcpy@d+1
  5707  001774  D010               	goto	i2l3748
  5708  001776                     i2l3740:
  5709                           
  5710                           ; BSR set to: 0
  5711  001776  C032  FFD9         	movff	memcpy@s,fsr2l
  5712  00177A  C033  FFDA         	movff	memcpy@s+1,fsr2h
  5713  00177E  50DF               	movf	indf2,w,c
  5714  001780  6E34               	movwf	memcpy@tmp,c
  5715                           
  5716                           ; BSR set to: 0
  5717  001782  4A32               	infsnz	memcpy@s,f,c
  5718  001784  2A33               	incf	memcpy@s+1,f,c
  5719                           
  5720                           ; BSR set to: 0
  5721  001786  C030  FFD9         	movff	memcpy@d,fsr2l
  5722  00178A  C031  FFDA         	movff	memcpy@d+1,fsr2h
  5723  00178E  C034  FFDF         	movff	memcpy@tmp,indf2
  5724                           
  5725                           ; BSR set to: 0
  5726  001792  4A30               	infsnz	memcpy@d,f,c
  5727  001794  2A31               	incf	memcpy@d+1,f,c
  5728  001796                     i2l3748:
  5729                           
  5730                           ; BSR set to: 0
  5731  001796  062E               	decf	memcpy@n,f,c
  5732  001798  A0D8               	btfss	status,0,c
  5733  00179A  062F               	decf	memcpy@n+1,f,c
  5734  00179C  282E               	incf	memcpy@n,w,c
  5735  00179E  E1EB               	bnz	i2l3740
  5736  0017A0  282F               	incf	memcpy@n+1,w,c
  5737  0017A2  E1E9               	bnz	i2l3740
  5738                           
  5739                           ; BSR set to: 0
  5740  0017A4  0012               	return		;funcret
  5741  0017A6                     __end_of_memcpy:
  5742                           	opt stack 0
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           prodh	equ	0xFF4
  5748                           prodl	equ	0xFF3
  5749                           intcon	equ	0xFF2
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           indf1	equ	0xFE7
  5753                           postdec1	equ	0xFE5
  5754                           fsr1h	equ	0xFE2
  5755                           fsr1l	equ	0xFE1
  5756                           indf2	equ	0xFDF
  5757                           postinc2	equ	0xFDE
  5758                           postdec2	equ	0xFDD
  5759                           plusw2	equ	0xFDB
  5760                           fsr2h	equ	0xFDA
  5761                           fsr2l	equ	0xFD9
  5762                           status	equ	0xFD8
  5763                           
  5764 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5765 ;; Defined at:
  5766 ;;		line 2465 in file "picLibs/usb_device.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;		None
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 3F/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5780 ;;      Params:         0       0       0       0
  5781 ;;      Locals:         0       0       0       0
  5782 ;;      Temps:          0       0       0       0
  5783 ;;      Totals:         0       0       0       0
  5784 ;;Total ram usage:        0 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    6
  5787 ;; This function calls:
  5788 ;;		_USBCheckStdRequest
  5789 ;;		_USBCtrlEPServiceComplete
  5790 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5791 ;; This function is called by:
  5792 ;;		_USBCtrlEPService
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text31
  5797  001688                     __ptext31:
  5798                           	opt stack 0
  5799  001688                     _USBCtrlTrfSetupHandler:
  5800                           	opt stack 17
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;incstack = 0
  5807  001688  6A27               	clrf	_shortPacketStatus,c	;volatile
  5808                           
  5809                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5810  00168A  6A20               	clrf	_USBDeferStatusStagePacket,c	;volatile
  5811                           
  5812                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5813  00168C  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5814                           
  5815                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5816  00168E  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5817                           
  5818                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5819  001690  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  5820                           
  5821                           ;usb_device.c: 2475: controlTransferState = 0;
  5822  001692  6A26               	clrf	_controlTransferState,c	;volatile
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5826  001694  EC27  F008         	call	PL16	;call to abstracted procedure
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5830  001698  D817               	call	PL94	;call to abstracted procedure
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5834  00169A  EC27  F008         	call	PL16	;call to abstracted procedure
  5835                           
  5836                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5837  00169E  D814               	call	PL94	;call to abstracted procedure
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5841  0016A0  ECF5  F005         	call	PL12	;call to abstracted procedure
  5842  0016A4  0E7F               	movlw	127
  5843  0016A6  16DF               	andwf	indf2,f,c
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5847  0016A8  6A0C               	clrf	_inPipes+3,c	;volatile
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5851  0016AA  6A0D               	clrf	_inPipes+4,c	;volatile
  5852  0016AC  6A0E               	clrf	_inPipes+5,c	;volatile
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5856  0016AE  6A04               	clrf	_outPipes+3,c	;volatile
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5860  0016B0  6A05               	clrf	_outPipes+4,c	;volatile
  5861  0016B2  6A06               	clrf	_outPipes+5,c	;volatile
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;usb_device.c: 2500: USBCheckStdRequest();
  5865  0016B4  ECA9  F007         	call	_USBCheckStdRequest	;wreg free
  5866                           
  5867                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5868  0016B8  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5869  0016BA  0E03               	movlw	3
  5870  0016BC  ECE7  F00C         	call	PL40	;call to abstracted procedure
  5871  0016C0  ECD5  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5872                           
  5873                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5874  0016C4  EF5D  F007         	goto	_USBCtrlEPServiceComplete	;wreg free
  5875  0016C8                     __end_of_USBCtrlTrfSetupHandler:
  5876                           	opt stack 0
  5877  0016C8                     PL94:
  5878                           	opt stack 17
  5879  0016C8  0E7F               	movlw	127
  5880  0016CA  16DF               	andwf	indf2,f,c
  5881  0016CC  0E04               	movlw	4
  5882  0016CE  1A0F               	xorwf	_pBDTEntryIn,f,c
  5883  0016D0  5010               	movf	_pBDTEntryIn+1,w,c
  5884  0016D2  0012               	return	
  5885  0016D4                     __end_ofPL94:
  5886                           	opt stack 0
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           prodh	equ	0xFF4
  5892                           prodl	equ	0xFF3
  5893                           intcon	equ	0xFF2
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           indf1	equ	0xFE7
  5897                           postdec1	equ	0xFE5
  5898                           fsr1h	equ	0xFE2
  5899                           fsr1l	equ	0xFE1
  5900                           indf2	equ	0xFDF
  5901                           postinc2	equ	0xFDE
  5902                           postdec2	equ	0xFDD
  5903                           plusw2	equ	0xFDB
  5904                           fsr2h	equ	0xFDA
  5905                           fsr2l	equ	0xFD9
  5906                           status	equ	0xFD8
  5907                           
  5908 ;; *************** function _USBCtrlEPServiceComplete *****************
  5909 ;; Defined at:
  5910 ;;		line 1616 in file "picLibs/usb_device.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;		None
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      void 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5924 ;;      Params:         0       0       0       0
  5925 ;;      Locals:         0       0       0       0
  5926 ;;      Temps:          0       0       0       0
  5927 ;;      Totals:         0       0       0       0
  5928 ;;Total ram usage:        0 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    2
  5931 ;; This function calls:
  5932 ;;		_USBCtrlEPAllowDataStage
  5933 ;;		_USBCtrlEPAllowStatusStage
  5934 ;; This function is called by:
  5935 ;;		_USBCtrlTrfSetupHandler
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text32
  5940  000EBA                     __ptext32:
  5941                           	opt stack 0
  5942  000EBA                     _USBCtrlEPServiceComplete:
  5943                           	opt stack 20
  5944                           
  5945                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5946                           
  5947                           ;incstack = 0
  5948  000EBA  9864               	bcf	3940,4,c	;volatile
  5949                           
  5950                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5951  000EBC  BE0C               	btfsc	_inPipes+3,7,c	;volatile
  5952  000EBE  D015               	goto	i2l550
  5953                           
  5954                           ;usb_device.c: 1629: {
  5955                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5956  000EC0  AE04               	btfss	_outPipes+3,7,c	;volatile
  5957  000EC2  D00A               	goto	i2l3548
  5958                           
  5959                           ;usb_device.c: 1631: {
  5960                           ;usb_device.c: 1632: controlTransferState = 2;
  5961  000EC4  0E02               	movlw	2
  5962  000EC6  6E26               	movwf	_controlTransferState,c	;volatile
  5963                           
  5964                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5965  000EC8  0100               	movlb	0	; () banked
  5966  000ECA  517E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  5967  000ECC  E102               	bnz	i2l3544
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;usb_device.c: 1644: {
  5971                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5972  000ECE  EC99  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  5973  000ED2                     i2l3544:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;usb_device.c: 1646: }
  5977                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5978  000ED2  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5982  000ED4  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  5983                           
  5984                           ;usb_device.c: 1652: }
  5985  000ED6  0012               	return	
  5986  000ED8                     i2l3548:
  5987                           
  5988                           ;usb_device.c: 1653: else
  5989                           ;usb_device.c: 1654: {
  5990                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5991                           
  5992                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5993                           
  5994                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5995  000ED8  D825               	call	PL2	;call to abstracted procedure
  5996  000EDA  0E0C               	movlw	12
  5997                           
  5998                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5999  000EDC  ECED  F005         	call	PL10	;call to abstracted procedure
  6000                           
  6001                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6002  000EE0  EC27  F008         	call	PL16	;call to abstracted procedure
  6003  000EE4  0E04               	movlw	4
  6004                           
  6005                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6006  000EE6  EF1F  F008         	goto	PL8	;call to abstracted procedure
  6007  000EEA                     i2l550:
  6008                           
  6009                           ;usb_device.c: 1667: else
  6010                           ;usb_device.c: 1668: {
  6011                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6012  000EEA  0102               	movlb	2	; () banked
  6013  000EEC  AF30               	btfss	48,7,b	;volatile
  6014  000EEE  D00D               	goto	i2l3568
  6015                           
  6016                           ; BSR set to: 2
  6017                           ;usb_device.c: 1670: {
  6018                           ;usb_device.c: 1671: controlTransferState = 1;
  6019  000EF0  0E01               	movlw	1
  6020  000EF2  6E26               	movwf	_controlTransferState,c	;volatile
  6021                           
  6022                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6023  000EF4  501D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  6024  000EF6  E102               	bnz	i2l3560
  6025                           
  6026                           ; BSR set to: 2
  6027                           ;usb_device.c: 1686: {
  6028                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6029  000EF8  EC99  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  6030  000EFC                     i2l3560:
  6031                           
  6032                           ;usb_device.c: 1688: }
  6033                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6034  000EFC  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6035                           
  6036                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6037  000EFE  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6038                           
  6039                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6040  000F00  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6041  000F02  A4D8               	btfss	status,2,c
  6042  000F04  0012               	return	
  6043                           
  6044                           ;usb_device.c: 1713: {
  6045                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6046  000F06  EFF1  F008         	goto	_USBCtrlEPAllowStatusStage	;wreg free
  6047  000F0A                     i2l3568:
  6048                           
  6049                           ; BSR set to: 2
  6050                           ;usb_device.c: 1717: else
  6051                           ;usb_device.c: 1718: {
  6052                           ;usb_device.c: 1729: controlTransferState = 2;
  6053  000F0A  0E02               	movlw	2
  6054  000F0C  6E26               	movwf	_controlTransferState,c	;volatile
  6055                           
  6056                           ; BSR set to: 2
  6057                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6058                           
  6059                           ; BSR set to: 2
  6060                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6061                           
  6062                           ; BSR set to: 2
  6063                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6064  000F0E  D80A               	call	PL2	;call to abstracted procedure
  6065  000F10  0E04               	movlw	4
  6066                           
  6067                           ; BSR set to: 2
  6068                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6069  000F12  ECED  F005         	call	PL10	;call to abstracted procedure
  6070                           
  6071                           ; BSR set to: 2
  6072                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6073  000F16  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6074                           
  6075                           ; BSR set to: 2
  6076                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6077  000F18  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6078                           
  6079                           ; BSR set to: 2
  6080                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6081  000F1A  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6082  000F1C  E102 EFF1  F008    	bz	_USBCtrlEPAllowStatusStage
  6083  000F22  0012               	return	
  6084  000F24                     __end_of_USBCtrlEPServiceComplete:
  6085                           	opt stack 0
  6086  000F24                     PL2:
  6087                           	opt stack 20
  6088  000F24  EE20 F001          	lfsr	2,1
  6089  000F28  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6090  000F2A  26D9               	addwf	fsr2l,f,c
  6091  000F2C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6092  000F2E  22DA               	addwfc	fsr2h,f,c
  6093  000F30  0E08               	movlw	8
  6094  000F32  6EDF               	movwf	indf2,c
  6095  000F34  EE20 F002          	lfsr	2,2
  6096  000F38  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6097  000F3A  26D9               	addwf	fsr2l,f,c
  6098  000F3C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6099  000F3E  22DA               	addwfc	fsr2h,f,c
  6100  000F40  0E30               	movlw	48
  6101  000F42  6EDE               	movwf	postinc2,c
  6102  000F44  0E02               	movlw	2
  6103  000F46  6EDD               	movwf	postdec2,c
  6104  000F48  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6105  000F4C  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6106  000F50  0C02               	retlw	2
  6107  000F52                     __end_ofPL2:
  6108                           	opt stack 0
  6109                           tblptru	equ	0xFF8
  6110                           tblptrh	equ	0xFF7
  6111                           tblptrl	equ	0xFF6
  6112                           tablat	equ	0xFF5
  6113                           prodh	equ	0xFF4
  6114                           prodl	equ	0xFF3
  6115                           intcon	equ	0xFF2
  6116                           postinc0	equ	0xFEE
  6117                           wreg	equ	0xFE8
  6118                           indf1	equ	0xFE7
  6119                           postdec1	equ	0xFE5
  6120                           fsr1h	equ	0xFE2
  6121                           fsr1l	equ	0xFE1
  6122                           indf2	equ	0xFDF
  6123                           postinc2	equ	0xFDE
  6124                           postdec2	equ	0xFDD
  6125                           plusw2	equ	0xFDB
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6131 ;; Defined at:
  6132 ;;		line 1488 in file "picLibs/usb_device.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 3D/0
  6143 ;;		On exit  : 3F/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6146 ;;      Params:         0       0       0       0
  6147 ;;      Locals:         0       0       0       0
  6148 ;;      Temps:          0       0       0       0
  6149 ;;      Totals:         0       0       0       0
  6150 ;;Total ram usage:        0 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    1
  6153 ;; This function calls:
  6154 ;;		_USBCtrlTrfTxService
  6155 ;; This function is called by:
  6156 ;;		_USBCtrlEPServiceComplete
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text33
  6161  001532                     __ptext33:
  6162                           	opt stack 0
  6163  001532                     _USBCtrlEPAllowDataStage:
  6164                           	opt stack 20
  6165                           
  6166                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6167                           
  6168                           ;incstack = 0
  6169  001532  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6170                           
  6171                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6172  001534  0100               	movlb	0	; () banked
  6173  001536  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6177  001538  0E02               	movlw	2
  6178  00153A  1826               	xorwf	_controlTransferState,w,c	;volatile
  6179  00153C  E112               	bnz	i2l3346
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;usb_device.c: 1494: {
  6183                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6184  00153E  EE20 F001          	lfsr	2,1
  6185  001542  ECE3  F005         	call	PL4	;call to abstracted procedure
  6186                           
  6187                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  6188  001546  ECE8  F005         	call	PL6	;call to abstracted procedure
  6189  00154A  ECE3  F005         	call	PL4	;call to abstracted procedure
  6190  00154E  0E38               	movlw	56
  6191  001550  6EDE               	movwf	postinc2,c
  6192  001552  0E02               	movlw	2
  6193  001554  6EDD               	movwf	postdec2,c
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6197  001556  ECF5  F005         	call	PL12	;call to abstracted procedure
  6198  00155A  0E48               	movlw	72
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6202  00155C  ECED  F005         	call	PL10	;call to abstracted procedure
  6203                           
  6204                           ;usb_device.c: 1500: }
  6205  001560  0C00               	retlw	0
  6206  001562                     i2l3346:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;usb_device.c: 1501: else
  6210                           ;usb_device.c: 1502: {
  6211                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6212  001562  500D               	movf	_inPipes+4,w,c	;volatile
  6213  001564  0102               	movlb	2	; () banked
  6214  001566  5D36               	subwf	54,w,b	;volatile
  6215  001568  500E               	movf	_inPipes+5,w,c	;volatile
  6216  00156A  5937               	subwfb	55,w,b	;volatile
  6217  00156C  E204               	bc	i2l3350
  6218                           
  6219                           ; BSR set to: 2
  6220                           ;usb_device.c: 1506: {
  6221                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6222  00156E  C236 F00D          	movff	566,_inPipes+4	;volatile
  6223  001572  C237 F00E          	movff	567,_inPipes+5	;volatile
  6224  001576                     i2l3350:
  6225                           
  6226                           ; BSR set to: 2
  6227                           ;usb_device.c: 1508: }
  6228                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6229  001576  ECB7  F006         	call	_USBCtrlTrfTxService	;wreg free
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  6233  00157A  EC32  F008         	call	PL44	;call to abstracted procedure
  6234  00157E  EC2C  F008         	call	PL38	;call to abstracted procedure
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6238  001582  EC27  F008         	call	PL16	;call to abstracted procedure
  6239  001586  0E48               	movlw	72
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6243                           
  6244                           ; BSR set to: 0
  6245  001588  EF1F  F008         	goto	PL8	;call to abstracted procedure
  6246  00158C                     __end_of_USBCtrlEPAllowDataStage:
  6247                           	opt stack 0
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           prodh	equ	0xFF4
  6253                           prodl	equ	0xFF3
  6254                           intcon	equ	0xFF2
  6255                           postinc0	equ	0xFEE
  6256                           wreg	equ	0xFE8
  6257                           indf1	equ	0xFE7
  6258                           postdec1	equ	0xFE5
  6259                           fsr1h	equ	0xFE2
  6260                           fsr1l	equ	0xFE1
  6261                           indf2	equ	0xFDF
  6262                           postinc2	equ	0xFDE
  6263                           postdec2	equ	0xFDD
  6264                           plusw2	equ	0xFDB
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8
  6268                           
  6269 ;; *************** function _USBCheckStdRequest *****************
  6270 ;; Defined at:
  6271 ;;		line 2686 in file "picLibs/usb_device.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 3F/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6285 ;;      Params:         0       0       0       0
  6286 ;;      Locals:         0       0       0       0
  6287 ;;      Temps:          1       0       0       0
  6288 ;;      Totals:         1       0       0       0
  6289 ;;Total ram usage:        1 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    5
  6292 ;; This function calls:
  6293 ;;		_USBStdFeatureReqHandler
  6294 ;;		_USBStdGetDscHandler
  6295 ;;		_USBStdGetStatusHandler
  6296 ;;		_USBStdSetCfgHandler
  6297 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6298 ;; This function is called by:
  6299 ;;		_USBCtrlTrfSetupHandler
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text34
  6304  000F52                     __ptext34:
  6305                           	opt stack 0
  6306  000F52                     _USBCheckStdRequest:
  6307                           	opt stack 17
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;incstack = 0
  6314  000F52  0102               	movlb	2	; () banked
  6315  000F54  3930               	swapf	48,w,b	;volatile
  6316  000F56  32E8               	rrcf	wreg,f,c
  6317  000F58  0B03               	andlw	3
  6318  000F5A  E01D               	bz	i2l3666
  6319  000F5C  0012               	return	
  6320  000F5E                     i2l675:
  6321                           
  6322                           ; BSR set to: 2
  6323                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6324  000F5E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6325                           
  6326                           ; BSR set to: 2
  6327                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6328  000F60  0E08               	movlw	8
  6329  000F62  0100               	movlb	0	; () banked
  6330  000F64  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6331                           
  6332                           ;usb_device.c: 2696: break;
  6333  000F66  0C08               	retlw	8
  6334  000F68                     i2l3640:
  6335                           
  6336                           ; BSR set to: 2
  6337                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6338  000F68  0E29               	movlw	low _USBActiveConfiguration
  6339  000F6A  6E09               	movwf	_inPipes,c	;volatile
  6340                           
  6341                           ; BSR set to: 2
  6342                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6343                           
  6344                           ; BSR set to: 2
  6345                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6346                           
  6347                           ; BSR set to: 2
  6348                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6349                           
  6350                           ;usb_device.c: 2708: break;
  6351  000F6C  D034               	goto	PL78	;call to abstracted procedure
  6352  000F6E                     i2l3652:
  6353                           
  6354                           ; BSR set to: 2
  6355                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6356  000F6E  5134               	movf	52,w,b	;volatile
  6357  000F70  0F91               	addlw	low _USBAlternateInterface
  6358  000F72  6E45               	movwf	??_USBCheckStdRequest& (0+255),c
  6359  000F74  C045  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  6360                           
  6361                           ; BSR set to: 2
  6362                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6363                           
  6364                           ; BSR set to: 2
  6365                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6366                           
  6367                           ; BSR set to: 2
  6368                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6369                           
  6370                           ;usb_device.c: 2721: break;
  6371  000F78  D02E               	goto	PL78	;call to abstracted procedure
  6372  000F7A                     i2l684:
  6373                           
  6374                           ; BSR set to: 2
  6375                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6376  000F7A  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6377                           
  6378                           ; BSR set to: 2
  6379                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6380  000F7C  5134               	movf	52,w,b	;volatile
  6381  000F7E  0F91               	addlw	low _USBAlternateInterface
  6382  000F80  6ED9               	movwf	fsr2l,c
  6383  000F82  6ADA               	clrf	fsr2h,c
  6384  000F84  C232 FFDF          	movff	562,indf2	;volatile
  6385                           
  6386                           ;usb_device.c: 2725: break;
  6387  000F88  0012               	return	
  6388  000F8A                     i2l3662:
  6389                           
  6390                           ; BSR set to: 2
  6391                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6392  000F8A  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6393  000F8C  0E02               	movlw	2
  6394  000F8E  ECE7  F00C         	call	PL40	;call to abstracted procedure
  6395  000F92  EFD5  F009         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6396  000F96                     i2l3666:
  6397                           
  6398                           ; BSR set to: 2
  6399  000F96  5131               	movf	49,w,b	;volatile
  6400                           
  6401                           ; Switch size 1, requested type "space"
  6402                           ; Number of cases is 11, Range of values is 0 to 12
  6403                           ; switch strategies available:
  6404                           ; Name         Instructions Cycles
  6405                           ; simple_byte           34    18 (average)
  6406                           ;	Chosen strategy is simple_byte
  6407  000F98  E102 EF2C  F009    	bz	_USBStdGetStatusHandler
  6408  000F9E  0A01               	xorlw	1	; case 1
  6409  000FA0  E102 EFF8  F001    	bz	_USBStdFeatureReqHandler
  6410  000FA6  0A02               	xorlw	2	; case 3
  6411  000FA8  E102 EFF8  F001    	bz	_USBStdFeatureReqHandler
  6412  000FAE  0A06               	xorlw	6	; case 5
  6413  000FB0  E0D6               	bz	i2l675
  6414  000FB2  0A03               	xorlw	3	; case 6
  6415  000FB4  E102 EFD8  F004    	bz	_USBStdGetDscHandler
  6416  000FBA  0A01               	xorlw	1	; case 7
  6417  000FBC  E0E6               	bz	i2l3662
  6418  000FBE  0A0F               	xorlw	15	; case 8
  6419  000FC0  E0D3               	bz	i2l3640
  6420  000FC2  0A01               	xorlw	1	; case 9
  6421  000FC4  E102 EF0B  F007    	bz	_USBStdSetCfgHandler
  6422  000FCA  0A03               	xorlw	3	; case 10
  6423  000FCC  E0D0               	bz	i2l3652
  6424  000FCE  0A01               	xorlw	1	; case 11
  6425  000FD0  E0D4               	bz	i2l684
  6426  000FD2  0A07               	xorlw	7	; case 12
  6427  000FD4  0012               	return	
  6428  000FD6                     __end_of_USBCheckStdRequest:
  6429                           	opt stack 0
  6430  000FD6                     PL78:
  6431                           	opt stack 17
  6432  000FD6  6A0A               	clrf	_inPipes+1,c	;volatile
  6433  000FD8  800C               	bsf	_inPipes+3,0,c	;volatile
  6434  000FDA  0E01               	movlw	1
  6435  000FDC  6E0D               	movwf	_inPipes+4,c	;volatile
  6436  000FDE  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6437  000FE0  0C01               	retlw	1
  6438  000FE2                     __end_ofPL78:
  6439                           	opt stack 0
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           prodh	equ	0xFF4
  6445                           prodl	equ	0xFF3
  6446                           intcon	equ	0xFF2
  6447                           postinc0	equ	0xFEE
  6448                           wreg	equ	0xFE8
  6449                           indf1	equ	0xFE7
  6450                           postdec1	equ	0xFE5
  6451                           fsr1h	equ	0xFE2
  6452                           fsr1l	equ	0xFE1
  6453                           indf2	equ	0xFDF
  6454                           postinc2	equ	0xFDE
  6455                           postdec2	equ	0xFDD
  6456                           plusw2	equ	0xFDB
  6457                           fsr2h	equ	0xFDA
  6458                           fsr2l	equ	0xFD9
  6459                           status	equ	0xFD8
  6460                           
  6461 ;; *************** function _USBStdSetCfgHandler *****************
  6462 ;; Defined at:
  6463 ;;		line 1968 in file "picLibs/usb_device.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  i               1   20[COMRAM] unsigned char 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      void 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 3D/2
  6474 ;;		On exit  : 3F/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6477 ;;      Params:         0       0       0       0
  6478 ;;      Locals:         1       0       0       0
  6479 ;;      Temps:          0       0       0       0
  6480 ;;      Totals:         1       0       0       0
  6481 ;;Total ram usage:        1 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    4
  6484 ;; This function calls:
  6485 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6486 ;;		i2_memset
  6487 ;; This function is called by:
  6488 ;;		_USBCheckStdRequest
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text35
  6493  000E16                     __ptext35:
  6494                           	opt stack 0
  6495  000E16                     _USBStdSetCfgHandler:
  6496                           	opt stack 17
  6497                           
  6498                           ;usb_device.c: 1970: uint8_t i;
  6499                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6500                           
  6501                           ;incstack = 0
  6502  000E16  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6503                           
  6504                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  6505  000E18  D840               	call	PL50	;call to abstracted procedure
  6506  000E1A  ECC7  F00C         	call	i2_memset	;wreg free
  6507                           
  6508                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6509  000E1E  6A2A               	clrf	i2memset@p1,c
  6510  000E20  0E02               	movlw	2
  6511  000E22  6E2B               	movwf	i2memset@p1+1,c
  6512  000E24  6A2D               	clrf	i2memset@c+1,c
  6513  000E26  6A2C               	clrf	i2memset@c,c
  6514  000E28  6A2F               	clrf	i2memset@n+1,c
  6515  000E2A  0E30               	movlw	48
  6516  000E2C  6E2E               	movwf	i2memset@n,c
  6517  000E2E  ECC7  F00C         	call	i2_memset	;wreg free
  6518                           
  6519                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6520  000E32  8C64               	bsf	3940,6,c	;volatile
  6521                           
  6522                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6523  000E34  6A3E               	clrf	USBStdSetCfgHandler@i,c
  6524  000E36                     i2l3370:
  6525                           
  6526                           ;usb_device.c: 1988: {
  6527                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6528  000E36  503E               	movf	USBStdSetCfgHandler@i,w,c
  6529  000E38  ECD3  F004         	call	PL88	;call to abstracted procedure
  6530                           
  6531                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6532  000E3C  503E               	movf	USBStdSetCfgHandler@i,w,c
  6533  000E3E  ECCE  F004         	call	PL80	;call to abstracted procedure
  6534  000E42  2A3E               	incf	USBStdSetCfgHandler@i,f,c
  6535  000E44  0E02               	movlw	2
  6536  000E46  643E               	cpfsgt	USBStdSetCfgHandler@i,c
  6537  000E48  D7F6               	goto	i2l3370
  6538                           
  6539                           ;usb_device.c: 1991: }
  6540                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6541  000E4A  0E91               	movlw	low _USBAlternateInterface
  6542  000E4C  6E2A               	movwf	i2memset@p1,c
  6543  000E4E  6A2B               	clrf	i2memset@p1+1,c
  6544  000E50  6A2D               	clrf	i2memset@c+1,c
  6545  000E52  6A2C               	clrf	i2memset@c,c
  6546  000E54  6A2F               	clrf	i2memset@n+1,c
  6547  000E56  0E02               	movlw	2
  6548  000E58  6E2E               	movwf	i2memset@n,c
  6549  000E5A  ECC7  F00C         	call	i2_memset	;wreg free
  6550                           
  6551                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6552  000E5E  9C64               	bcf	3940,6,c	;volatile
  6553                           
  6554                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6555  000E60  0E08               	movlw	8
  6556  000E62  6E0F               	movwf	_pBDTEntryIn,c
  6557  000E64  0E02               	movlw	2
  6558  000E66  6E10               	movwf	_pBDTEntryIn+1,c
  6559                           
  6560                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6561  000E68  0E00               	movlw	0
  6562  000E6A  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  6563  000E6C  0E02               	movlw	2
  6564                           
  6565                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6566  000E6E  D81F               	call	PL98	;call to abstracted procedure
  6567                           
  6568                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6569  000E70  C232 F029          	movff	562,_USBActiveConfiguration	;volatile
  6570                           
  6571                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6572  000E74  5029               	movf	_USBActiveConfiguration,w,c	;volatile
  6573  000E76  E104               	bnz	i2l3392
  6574                           
  6575                           ;usb_device.c: 2010: {
  6576                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6577  000E78  0E10               	movlw	16
  6578  000E7A  0100               	movlb	0	; () banked
  6579  000E7C  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6580                           
  6581                           ;usb_device.c: 2013: }
  6582  000E7E  0C10               	retlw	16
  6583  000E80                     i2l3392:
  6584                           
  6585                           ;usb_device.c: 2014: else
  6586                           ;usb_device.c: 2015: {
  6587                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6588  000E80  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6589  000E82  0E01               	movlw	1
  6590  000E84  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6591  000E86  0E29               	movlw	low _USBActiveConfiguration
  6592  000E88  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6593  000E8A  ECEA  F003         	call	PL86	;call to abstracted procedure
  6594  000E8E  ECD5  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6595                           
  6596                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6597  000E92  0E20               	movlw	32
  6598  000E94  0100               	movlb	0	; () banked
  6599  000E96  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6600                           
  6601                           ; BSR set to: 0
  6602  000E98  0C20               	retlw	32	;funcret
  6603  000E9A                     __end_of_USBStdSetCfgHandler:
  6604                           	opt stack 0
  6605  000E9A                     PL50:
  6606                           	opt stack 23
  6607  000E9A  0E54               	movlw	84
  6608  000E9C  6E2A               	movwf	i2memset@p1,c
  6609  000E9E  0E0F               	movlw	15
  6610  000EA0  6E2B               	movwf	i2memset@p1+1,c
  6611  000EA2  6A2D               	clrf	i2memset@c+1,c
  6612  000EA4  6A2C               	clrf	i2memset@c,c
  6613  000EA6  6A2F               	clrf	i2memset@n+1,c
  6614  000EA8  0E02               	movlw	2
  6615  000EAA  6E2E               	movwf	i2memset@n,c
  6616  000EAC  0C02               	retlw	2
  6617  000EAE                     __end_ofPL50:
  6618                           	opt stack 0
  6619  000EAE                     PL98:
  6620                           	opt stack 17
  6621  000EAE  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6622  000EB0  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6623  000EB4  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6624  000EB8  0012               	return	
  6625  000EBA                     __end_ofPL98:
  6626                           	opt stack 0
  6627                           tblptru	equ	0xFF8
  6628                           tblptrh	equ	0xFF7
  6629                           tblptrl	equ	0xFF6
  6630                           tablat	equ	0xFF5
  6631                           prodh	equ	0xFF4
  6632                           prodl	equ	0xFF3
  6633                           intcon	equ	0xFF2
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           indf1	equ	0xFE7
  6637                           postdec1	equ	0xFE5
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           postdec2	equ	0xFDD
  6643                           plusw2	equ	0xFDB
  6644                           fsr2h	equ	0xFDA
  6645                           fsr2l	equ	0xFD9
  6646                           status	equ	0xFD8
  6647                           
  6648 ;; *************** function i2_memset *****************
  6649 ;; Defined at:
  6650 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  p1              2    0[COMRAM] PTR void 
  6653 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6654 ;;  c               2    2[COMRAM] int 
  6655 ;;  n               2    4[COMRAM] unsigned int 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  memset          2    6[COMRAM] PTR unsigned char 
  6658 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  2    0[COMRAM] PTR void 
  6661 ;; Registers used:
  6662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/F
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6668 ;;      Params:         6       0       0       0
  6669 ;;      Locals:         2       0       0       0
  6670 ;;      Temps:          0       0       0       0
  6671 ;;      Totals:         8       0       0       0
  6672 ;;Total ram usage:        8 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_USBStdSetCfgHandler
  6678 ;;		i2_USBDeviceInit
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text36
  6683  00198E                     __ptext36:
  6684                           	opt stack 0
  6685  00198E                     i2_memset:
  6686                           	opt stack 23
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;incstack = 0
  6690  00198E  C02A  F030         	movff	i2memset@p1,i2memset@p
  6691  001992  C02B  F031         	movff	i2memset@p1+1,i2memset@p+1
  6692  001996  D008               	goto	i2l3302
  6693  001998                     i2l3298:
  6694  001998  C030  FFD9         	movff	i2memset@p,fsr2l
  6695  00199C  C031  FFDA         	movff	i2memset@p+1,fsr2h
  6696  0019A0  C02C  FFDF         	movff	i2memset@c,indf2
  6697  0019A4  4A30               	infsnz	i2memset@p,f,c
  6698  0019A6  2A31               	incf	i2memset@p+1,f,c
  6699  0019A8                     i2l3302:
  6700  0019A8  062E               	decf	i2memset@n,f,c
  6701  0019AA  A0D8               	btfss	status,0,c
  6702  0019AC  062F               	decf	i2memset@n+1,f,c
  6703  0019AE  282E               	incf	i2memset@n,w,c
  6704  0019B0  E1F3               	bnz	i2l3298
  6705  0019B2  282F               	incf	i2memset@n+1,w,c
  6706  0019B4  E1F1               	bnz	i2l3298
  6707  0019B6  0012               	return		;funcret
  6708  0019B8                     __end_ofi2_memset:
  6709                           	opt stack 0
  6710                           tblptru	equ	0xFF8
  6711                           tblptrh	equ	0xFF7
  6712                           tblptrl	equ	0xFF6
  6713                           tablat	equ	0xFF5
  6714                           prodh	equ	0xFF4
  6715                           prodl	equ	0xFF3
  6716                           intcon	equ	0xFF2
  6717                           postinc0	equ	0xFEE
  6718                           wreg	equ	0xFE8
  6719                           indf1	equ	0xFE7
  6720                           postdec1	equ	0xFE5
  6721                           fsr1h	equ	0xFE2
  6722                           fsr1l	equ	0xFE1
  6723                           indf2	equ	0xFDF
  6724                           postinc2	equ	0xFDE
  6725                           postdec2	equ	0xFDD
  6726                           plusw2	equ	0xFDB
  6727                           fsr2h	equ	0xFDA
  6728                           fsr2l	equ	0xFD9
  6729                           status	equ	0xFD8
  6730                           
  6731 ;; *************** function _USBStdGetStatusHandler *****************
  6732 ;; Defined at:
  6733 ;;		line 2129 in file "picLibs/usb_device.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  p               2    0[COMRAM] PTR struct __BDT
  6738 ;;		 -> RAM(767), NULL(0), BDT(48), 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6743 ;; Tracked objects:
  6744 ;;		On entry : 3D/2
  6745 ;;		On exit  : 3F/2
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6748 ;;      Params:         0       0       0       0
  6749 ;;      Locals:         2       0       0       0
  6750 ;;      Temps:          0       0       0       0
  6751 ;;      Totals:         2       0       0       0
  6752 ;;Total ram usage:        2 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_USBCheckStdRequest
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text37
  6762  001258                     __ptext37:
  6763                           	opt stack 0
  6764  001258                     _USBStdGetStatusHandler:
  6765                           	opt stack 21
  6766                           
  6767                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6768                           
  6769                           ;incstack = 0
  6770  001258  0102               	movlb	2	; () banked
  6771  00125A  6B38               	clrf	56,b	;volatile
  6772                           
  6773                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6774  00125C  6B39               	clrf	57,b	;volatile
  6775                           
  6776                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6777  00125E  D020               	goto	i2l3442
  6778  001260                     i2l613:
  6779                           
  6780                           ; BSR set to: 2
  6781                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6782  001260  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6783                           
  6784                           ; BSR set to: 2
  6785                           ;usb_device.c: 2145: }
  6786                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6787                           
  6788                           ;usb_device.c: 2142: if(0 == 1)
  6789  001262  0425               	decf	_RemoteWakeup,w,c	;volatile
  6790  001264  E124               	bnz	i2l616
  6791                           
  6792                           ; BSR set to: 2
  6793                           ;usb_device.c: 2148: {
  6794                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6795  001266  8338               	bsf	56,1,b	;volatile
  6796  001268  D022               	goto	i2l616
  6797  00126A                     i2l617:
  6798                           
  6799                           ; BSR set to: 2
  6800                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6801  00126A  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6802                           
  6803                           ;usb_device.c: 2154: break;
  6804  00126C  D020               	goto	i2l616
  6805  00126E                     i2l618:
  6806                           
  6807                           ; BSR set to: 2
  6808                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6809  00126E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6810                           
  6811                           ;usb_device.c: 2160: {
  6812                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6813                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6814  001270  BF34               	btfsc	52,7,b	;volatile
  6815  001272  D004               	goto	i2l3432
  6816                           
  6817                           ; BSR set to: 2
  6818                           ;usb_device.c: 2164: {
  6819                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6820  001274  ECBA  F002         	call	PL58	;call to abstracted procedure
  6821  001278  0F60               	addlw	low _pBDTEntryOut
  6822  00127A  D003               	goto	L5
  6823  00127C                     i2l3432:
  6824                           
  6825                           ; BSR set to: 2
  6826                           ;usb_device.c: 2167: else
  6827                           ;usb_device.c: 2168: {
  6828                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6829  00127C  ECBA  F002         	call	PL58	;call to abstracted procedure
  6830  001280  0F0F               	addlw	low _pBDTEntryIn
  6831  001282                     L5:
  6832  001282  6ED9               	movwf	fsr2l,c
  6833  001284  6ADA               	clrf	fsr2h,c
  6834  001286  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  6835  00128A  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  6836                           
  6837                           ; BSR set to: 2
  6838                           ;usb_device.c: 2170: }
  6839                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6840  00128E  D818               	call	PL112	;call to abstracted procedure
  6841  001290  AEDF               	btfss	indf2,7,c
  6842  001292  D00D               	goto	i2l616
  6843                           
  6844                           ; BSR set to: 2
  6845  001294  D815               	call	PL112	;call to abstracted procedure
  6846  001296  A4DF               	btfss	indf2,2,c
  6847  001298  D00A               	goto	i2l616
  6848                           
  6849                           ; BSR set to: 2
  6850                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6851  00129A  0E01               	movlw	1
  6852  00129C  6F38               	movwf	56,b	;volatile
  6853  00129E  D007               	goto	i2l616
  6854  0012A0                     i2l3442:
  6855                           
  6856                           ; BSR set to: 2
  6857  0012A0  5130               	movf	48,w,b	;volatile
  6858  0012A2  0B1F               	andlw	31
  6859                           
  6860                           ; Switch size 1, requested type "space"
  6861                           ; Number of cases is 3, Range of values is 0 to 2
  6862                           ; switch strategies available:
  6863                           ; Name         Instructions Cycles
  6864                           ; simple_byte           10     6 (average)
  6865                           ;	Chosen strategy is simple_byte
  6866  0012A4  E0DD               	bz	i2l613
  6867  0012A6  0A01               	xorlw	1	; case 1
  6868  0012A8  E0E0               	bz	i2l617
  6869  0012AA  0A03               	xorlw	3	; case 2
  6870  0012AC  E0E0               	bz	i2l618
  6871  0012AE                     i2l616:
  6872                           
  6873                           ; BSR set to: 2
  6874                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6875  0012AE  AE0C               	btfss	_inPipes+3,7,c	;volatile
  6876  0012B0  0012               	return	
  6877                           
  6878                           ; BSR set to: 2
  6879                           ;usb_device.c: 2179: {
  6880                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6881  0012B2  0E38               	movlw	56
  6882  0012B4  6E09               	movwf	_inPipes,c	;volatile
  6883  0012B6  0E02               	movlw	2
  6884  0012B8  6E0A               	movwf	_inPipes+1,c	;volatile
  6885                           
  6886                           ; BSR set to: 2
  6887                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6888  0012BA  800C               	bsf	_inPipes+3,0,c	;volatile
  6889                           
  6890                           ; BSR set to: 2
  6891                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6892  0012BC  6E0D               	movwf	_inPipes+4,c	;volatile
  6893                           
  6894                           ; BSR set to: 2
  6895  0012BE  0C02               	retlw	2	;funcret
  6896  0012C0                     __end_of_USBStdGetStatusHandler:
  6897                           	opt stack 0
  6898  0012C0                     PL112:
  6899                           	opt stack 21
  6900  0012C0  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6901  0012C4  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6902  0012C8  0012               	return	
  6903  0012CA                     __end_ofPL112:
  6904                           	opt stack 0
  6905                           tblptru	equ	0xFF8
  6906                           tblptrh	equ	0xFF7
  6907                           tblptrl	equ	0xFF6
  6908                           tablat	equ	0xFF5
  6909                           prodh	equ	0xFF4
  6910                           prodl	equ	0xFF3
  6911                           intcon	equ	0xFF2
  6912                           postinc0	equ	0xFEE
  6913                           wreg	equ	0xFE8
  6914                           indf1	equ	0xFE7
  6915                           postdec1	equ	0xFE5
  6916                           fsr1h	equ	0xFE2
  6917                           fsr1l	equ	0xFE1
  6918                           indf2	equ	0xFDF
  6919                           postinc2	equ	0xFDE
  6920                           postdec2	equ	0xFDD
  6921                           plusw2	equ	0xFDB
  6922                           fsr2h	equ	0xFDA
  6923                           fsr2l	equ	0xFD9
  6924                           status	equ	0xFD8
  6925                           
  6926 ;; *************** function _USBStdGetDscHandler *****************
  6927 ;; Defined at:
  6928 ;;		line 2043 in file "picLibs/usb_device.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6937 ;; Tracked objects:
  6938 ;;		On entry : 3D/2
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6942 ;;      Params:         0       0       0       0
  6943 ;;      Locals:         0       0       0       0
  6944 ;;      Temps:          2       0       0       0
  6945 ;;      Totals:         2       0       0       0
  6946 ;;Total ram usage:        2 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_USBCheckStdRequest
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text38
  6956  0009B0                     __ptext38:
  6957                           	opt stack 0
  6958  0009B0                     _USBStdGetDscHandler:
  6959                           	opt stack 21
  6960                           
  6961                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6962                           
  6963                           ; BSR set to: 2
  6964                           ;incstack = 0
  6965  0009B0  0E80               	movlw	128
  6966  0009B2  0102               	movlb	2	; () banked
  6967  0009B4  1930               	xorwf	48,w,b	;volatile
  6968  0009B6  A4D8               	btfss	status,2,c
  6969  0009B8  0012               	return	
  6970                           
  6971                           ; BSR set to: 2
  6972                           ;usb_device.c: 2046: {
  6973                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6974  0009BA  0EC0               	movlw	192
  6975  0009BC  6E0C               	movwf	_inPipes+3,c	;volatile
  6976                           
  6977                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6978  0009BE  D03D               	goto	i2l3420
  6979  0009C0                     i2l3400:
  6980                           
  6981                           ; BSR set to: 2
  6982                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6983  0009C0  0EB0               	movlw	low _device_dsc
  6984  0009C2  6E09               	movwf	_inPipes,c	;volatile
  6985  0009C4  5009               	movf	_inPipes,w,c	;volatile
  6986  0009C6  A4D8               	btfss	status,2,c
  6987  0009C8  0E03               	movlw	high __smallconst
  6988  0009CA  6E0A               	movwf	_inPipes+1,c	;volatile
  6989                           
  6990                           ; BSR set to: 2
  6991                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6992  0009CC  6A0E               	clrf	_inPipes+5,c	;volatile
  6993  0009CE  0E12               	movlw	18
  6994  0009D0  6E0D               	movwf	_inPipes+4,c	;volatile
  6995                           
  6996                           ;usb_device.c: 2058: break;
  6997  0009D2  0C12               	retlw	18
  6998  0009D4                     i2l3404:
  6999                           
  7000                           ; BSR set to: 2
  7001                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7002  0009D4  5132               	movf	50,w,b	;volatile
  7003  0009D6  E116               	bnz	i2l603
  7004                           
  7005                           ; BSR set to: 2
  7006                           ;usb_device.c: 2064: {
  7007                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7008  0009D8  5132               	movf	50,w,b	;volatile
  7009  0009DA  0F04               	addlw	low _USB_CD_Ptr
  7010  0009DC  D848               	call	PL48	;call to abstracted procedure
  7011                           
  7012                           ; BSR set to: 2
  7013                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7014  0009DE  0E02               	movlw	2
  7015  0009E0  D83A               	call	PL32	;call to abstracted procedure
  7016  0009E2  64F7               	cpfsgt	tblptrh,c
  7017  0009E4  D003               	bra	i2u213_47
  7018  0009E6  0008               	tblrd		*
  7019  0009E8  50F5               	movf	tablat,w,c
  7020  0009EA  D001               	bra	i2u213_40
  7021  0009EC                     i2u213_47:
  7022  0009EC  D82E               	call	PL18	;call to abstracted procedure
  7023  0009EE                     i2u213_40:
  7024  0009EE  6E0D               	movwf	_inPipes+4,c	;volatile
  7025                           
  7026                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7027  0009F0  0E03               	movlw	3
  7028  0009F2  D831               	call	PL32	;call to abstracted procedure
  7029  0009F4  64F7               	cpfsgt	tblptrh,c
  7030  0009F6  D003               	bra	i2u214_47
  7031  0009F8  0008               	tblrd		*
  7032  0009FA  50F5               	movf	tablat,w,c
  7033  0009FC  D001               	bra	i2u214_40
  7034  0009FE                     i2u214_47:
  7035  0009FE  D825               	call	PL18	;call to abstracted procedure
  7036  000A00                     i2u214_40:
  7037  000A00  6E0E               	movwf	_inPipes+5,c	;volatile
  7038                           
  7039                           ;usb_device.c: 2076: }
  7040  000A02  0012               	return	
  7041  000A04                     i2l603:
  7042                           
  7043                           ; BSR set to: 2
  7044                           ;usb_device.c: 2077: else
  7045                           ;usb_device.c: 2078: {
  7046                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7047  000A04  6A0C               	clrf	_inPipes+3,c	;volatile
  7048  000A06  0012               	return	
  7049  000A08                     i2l3412:
  7050                           
  7051                           ; BSR set to: 2
  7052                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7053  000A08  0E03               	movlw	3
  7054  000A0A  6132               	cpfslt	50,b	;volatile
  7055  000A0C  D012               	goto	i2l606
  7056                           
  7057                           ; BSR set to: 2
  7058                           ;usb_device.c: 2087: {
  7059                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7060  000A0E  5132               	movf	50,w,b	;volatile
  7061  000A10  0F01               	addlw	low _USB_SD_Ptr
  7062  000A12  D82D               	call	PL48	;call to abstracted procedure
  7063                           
  7064                           ; BSR set to: 2
  7065                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7066  000A14  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
  7067  000A18  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7068  000A1C  6AF8               	clrf	tblptru,c
  7069  000A1E  0E02               	movlw	(high __ramtop+-1)
  7070  000A20  64F7               	cpfsgt	tblptrh,c
  7071  000A22  D003               	bra	i2u216_47
  7072  000A24  0008               	tblrd		*
  7073  000A26  50F5               	movf	tablat,w,c
  7074  000A28  D001               	bra	i2u216_40
  7075  000A2A                     i2u216_47:
  7076  000A2A  D80F               	call	PL18	;call to abstracted procedure
  7077  000A2C                     i2u216_40:
  7078  000A2C  6E0D               	movwf	_inPipes+4,c	;volatile
  7079  000A2E  6A0E               	clrf	_inPipes+5,c	;volatile
  7080                           
  7081                           ;usb_device.c: 2092: }
  7082  000A30  0012               	return	
  7083  000A32                     i2l606:
  7084                           
  7085                           ; BSR set to: 2
  7086                           ;usb_device.c: 2102: else
  7087                           ;usb_device.c: 2103: {
  7088                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7089  000A32  6A0C               	clrf	_inPipes+3,c	;volatile
  7090  000A34  0012               	return	
  7091  000A36                     i2l608:
  7092                           
  7093                           ; BSR set to: 2
  7094                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7095  000A36  6A0C               	clrf	_inPipes+3,c	;volatile
  7096                           
  7097                           ;usb_device.c: 2109: break;
  7098  000A38  0012               	return	
  7099  000A3A                     i2l3420:
  7100                           
  7101                           ; BSR set to: 2
  7102  000A3A  5133               	movf	51,w,b	;volatile
  7103                           
  7104                           ; Switch size 1, requested type "space"
  7105                           ; Number of cases is 3, Range of values is 1 to 3
  7106                           ; switch strategies available:
  7107                           ; Name         Instructions Cycles
  7108                           ; simple_byte           10     6 (average)
  7109                           ;	Chosen strategy is simple_byte
  7110  000A3C  0A01               	xorlw	1	; case 1
  7111  000A3E  E0C0               	bz	i2l3400
  7112  000A40  0A03               	xorlw	3	; case 2
  7113  000A42  E0C8               	bz	i2l3404
  7114  000A44  0A01               	xorlw	1	; case 3
  7115  000A46  E0E0               	bz	i2l3412
  7116  000A48  D7F6               	goto	i2l608
  7117  000A4A                     __end_of_USBStdGetDscHandler:
  7118                           	opt stack 0
  7119  000A4A                     PL18:
  7120                           	opt stack 19
  7121  000A4A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7122  000A4E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7123  000A52  50E7               	movf	indf1,w,c
  7124  000A54  0012               	return	
  7125  000A56                     __end_ofPL18:
  7126                           	opt stack 0
  7127  000A56                     PL32:
  7128                           	opt stack 21
  7129  000A56  2409               	addwf	_inPipes,w,c	;volatile
  7130  000A58  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7131  000A5A  0E00               	movlw	0
  7132  000A5C  200A               	addwfc	_inPipes+1,w,c	;volatile
  7133  000A5E  6E2B               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7134  000A60  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7135  000A64  C02B  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7136  000A68  6AF8               	clrf	tblptru,c
  7137  000A6A  0E02               	movlw	(high __ramtop+-1)
  7138  000A6C  0012               	return	
  7139  000A6E                     __end_ofPL32:
  7140                           	opt stack 0
  7141  000A6E                     PL48:
  7142                           	opt stack 21
  7143  000A6E  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7144  000A70  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7145  000A74                     	if	1	;There is more than 1 active tblptr byte
  7146  000A74  0E03               	movlw	high __smallconst
  7147  000A76  6EF7               	movwf	tblptrh,c
  7148  000A78                     	endif
  7149  000A78                     	if	0	;tblptru may be non-zero
  7150  000A78                     	endif
  7151  000A78                     	if	0	;tblptru may be non-zero
  7152  000A78                     	endif
  7153  000A78  0009               	tblrd		*+
  7154  000A7A  CFF5 F009          	movff	tablat,_inPipes	;volatile
  7155  000A7E  6E0A               	movwf	_inPipes+1,c	;volatile
  7156  000A80  0012               	return	
  7157  000A82                     __end_ofPL48:
  7158                           	opt stack 0
  7159                           tblptru	equ	0xFF8
  7160                           tblptrh	equ	0xFF7
  7161                           tblptrl	equ	0xFF6
  7162                           tablat	equ	0xFF5
  7163                           prodh	equ	0xFF4
  7164                           prodl	equ	0xFF3
  7165                           intcon	equ	0xFF2
  7166                           postinc0	equ	0xFEE
  7167                           wreg	equ	0xFE8
  7168                           indf1	equ	0xFE7
  7169                           postdec1	equ	0xFE5
  7170                           fsr1h	equ	0xFE2
  7171                           fsr1l	equ	0xFE1
  7172                           indf2	equ	0xFDF
  7173                           postinc2	equ	0xFDE
  7174                           postdec2	equ	0xFDD
  7175                           plusw2	equ	0xFDB
  7176                           fsr2h	equ	0xFDA
  7177                           fsr2l	equ	0xFD9
  7178                           status	equ	0xFD8
  7179                           
  7180 ;; *************** function _USBStdFeatureReqHandler *****************
  7181 ;; Defined at:
  7182 ;;		line 2754 in file "picLibs/usb_device.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;		None
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  p               2   25[COMRAM] PTR struct __BDT
  7187 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7188 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  7189 ;;		 -> UEP0(1), 
  7190 ;;  current_ep_d    1   24[COMRAM] struct .
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1    wreg      void 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 3D/2
  7197 ;;		On exit  : 3D/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7200 ;;      Params:         0       0       0       0
  7201 ;;      Locals:         5       0       0       0
  7202 ;;      Temps:          2       0       0       0
  7203 ;;      Totals:         7       0       0       0
  7204 ;;Total ram usage:        7 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    4
  7207 ;; This function calls:
  7208 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7209 ;; This function is called by:
  7210 ;;		_USBCheckStdRequest
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text39
  7215  0003F0                     __ptext39:
  7216                           	opt stack 0
  7217  0003F0                     _USBStdFeatureReqHandler:
  7218                           	opt stack 17
  7219                           
  7220                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7221                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7222                           ;usb_device.c: 2761: unsigned char* pUEP;
  7223                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7224                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7225                           
  7226                           ;incstack = 0
  7227  0003F0  0102               	movlb	2	; () banked
  7228  0003F2  0532               	decf	50,w,b	;volatile
  7229  0003F4  E10B               	bnz	i2l3460
  7230                           
  7231                           ; BSR set to: 2
  7232  0003F6  5130               	movf	48,w,b	;volatile
  7233  0003F8  0B1F               	andlw	31
  7234  0003FA  E108               	bnz	i2l3460
  7235                           
  7236                           ; BSR set to: 2
  7237                           ;usb_device.c: 2801: {
  7238                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7239  0003FC  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7240                           
  7241                           ; BSR set to: 2
  7242                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7243  0003FE  0E03               	movlw	3
  7244  000400  1931               	xorwf	49,w,b	;volatile
  7245  000402  E103               	bnz	i2l691
  7246                           
  7247                           ; BSR set to: 2
  7248                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7249  000404  0E01               	movlw	1
  7250  000406  6E25               	movwf	_RemoteWakeup,c	;volatile
  7251  000408  D001               	goto	i2l3460
  7252  00040A                     i2l691:
  7253                           
  7254                           ; BSR set to: 2
  7255                           ;usb_device.c: 2805: else
  7256                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7257  00040A  6A25               	clrf	_RemoteWakeup,c	;volatile
  7258  00040C                     i2l3460:
  7259                           
  7260                           ; BSR set to: 2
  7261                           ;usb_device.c: 2807: }
  7262                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7263                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7264                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7265                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7266  00040C  5132               	movf	50,w,b	;volatile
  7267  00040E  A4D8               	btfss	status,2,c
  7268  000410  0012               	return	
  7269                           
  7270                           ; BSR set to: 2
  7271  000412  5130               	movf	48,w,b	;volatile
  7272  000414  0B1F               	andlw	31
  7273  000416  0A02               	xorlw	2
  7274  000418  A4D8               	btfss	status,2,c
  7275  00041A  0012               	return	
  7276                           
  7277                           ; BSR set to: 2
  7278  00041C  5134               	movf	52,w,b	;volatile
  7279  00041E  0B0F               	andlw	15
  7280  000420  B4D8               	btfsc	status,2,c
  7281  000422  0012               	return	
  7282                           
  7283                           ; BSR set to: 2
  7284  000424  5134               	movf	52,w,b	;volatile
  7285  000426  0B0F               	andlw	15
  7286  000428  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7287  00042A  0E03               	movlw	3
  7288  00042C  603E               	cpfslt	??_USBStdFeatureReqHandler,c
  7289  00042E  0C03               	retlw	3
  7290                           
  7291                           ; BSR set to: 2
  7292  000430  0E20               	movlw	32
  7293  000432  0100               	movlb	0	; () banked
  7294  000434  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7295  000436  A4D8               	btfss	status,2,c
  7296  000438  0012               	return	
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;usb_device.c: 2814: {
  7300                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7301  00043A  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7302                           
  7303                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7304  00043C  0102               	movlb	2	; () banked
  7305  00043E  BF34               	btfsc	52,7,b	;volatile
  7306  000440  D007               	goto	i2l3476
  7307                           
  7308                           ; BSR set to: 2
  7309                           ;usb_device.c: 2821: {
  7310                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7311  000442  5134               	movf	52,w,b	;volatile
  7312  000444  0B0F               	andlw	15
  7313  000446  EC82  F005         	call	PL24	;call to abstracted procedure
  7314                           
  7315                           ; BSR set to: 2
  7316                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7317  00044A  D88B               	call	PL56	;call to abstracted procedure
  7318  00044C  0F70               	addlw	low _ep_data_out
  7319  00044E  D006               	goto	L6
  7320  000450                     i2l3476:
  7321                           
  7322                           ; BSR set to: 2
  7323                           ;usb_device.c: 2825: else
  7324                           ;usb_device.c: 2826: {
  7325                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7326  000450  5134               	movf	52,w,b	;volatile
  7327  000452  0B0F               	andlw	15
  7328  000454  EC88  F005         	call	PL26	;call to abstracted procedure
  7329                           
  7330                           ; BSR set to: 2
  7331                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7332  000458  D884               	call	PL56	;call to abstracted procedure
  7333  00045A  0F73               	addlw	low _ep_data_in
  7334  00045C                     L6:
  7335  00045C  6ED9               	movwf	fsr2l,c
  7336  00045E  6ADA               	clrf	fsr2h,c
  7337  000460  50DF               	movf	indf2,w,c
  7338  000462  6E42               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7339                           
  7340                           ; BSR set to: 2
  7341                           ;usb_device.c: 2829: }
  7342                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7343  000464  B042               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7344  000466  D003               	goto	i2l3484
  7345                           
  7346                           ; BSR set to: 2
  7347                           ;usb_device.c: 2836: {
  7348                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7349  000468  0EFB               	movlw	251
  7350  00046A  1643               	andwf	USBStdFeatureReqHandler@p,f,c
  7351  00046C  D002               	goto	L7
  7352  00046E                     i2l3484:
  7353                           
  7354                           ; BSR set to: 2
  7355                           ;usb_device.c: 2839: else
  7356                           ;usb_device.c: 2840: {
  7357                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7358  00046E  0E04               	movlw	4
  7359  000470  1243               	iorwf	USBStdFeatureReqHandler@p,f,c
  7360  000472                     L7:
  7361  000472  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7362                           
  7363                           ; BSR set to: 2
  7364                           ;usb_device.c: 2842: }
  7365                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7366  000474  BF34               	btfsc	52,7,b	;volatile
  7367  000476  D003               	goto	i2l3490
  7368                           
  7369                           ; BSR set to: 2
  7370                           ;usb_device.c: 2848: {
  7371                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7372  000478  D87D               	call	PL58	;call to abstracted procedure
  7373  00047A  0F60               	addlw	low _pBDTEntryOut
  7374  00047C  D002               	goto	L8
  7375  00047E                     i2l3490:
  7376                           
  7377                           ; BSR set to: 2
  7378                           ;usb_device.c: 2851: else
  7379                           ;usb_device.c: 2852: {
  7380                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7381  00047E  D87A               	call	PL58	;call to abstracted procedure
  7382  000480  0F0F               	addlw	low _pBDTEntryIn
  7383  000482                     L8:
  7384  000482  6ED9               	movwf	fsr2l,c
  7385  000484  6ADA               	clrf	fsr2h,c
  7386  000486  C043  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7387  00048A  C044  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7388                           
  7389                           ; BSR set to: 2
  7390                           ;usb_device.c: 2854: }
  7391                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7392  00048E  0E03               	movlw	3
  7393  000490  1931               	xorwf	49,w,b	;volatile
  7394  000492  E114               	bnz	i2l3502
  7395                           
  7396                           ; BSR set to: 2
  7397                           ;usb_device.c: 2858: {
  7398                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7399  000494  D856               	call	PL22	;call to abstracted procedure
  7400  000496  AEDF               	btfss	indf2,7,c
  7401  000498  D00B               	goto	i2l701
  7402                           
  7403                           ; BSR set to: 2
  7404                           ;usb_device.c: 2860: {
  7405                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7406  00049A  BF34               	btfsc	52,7,b	;volatile
  7407  00049C  D003               	goto	i2l3500
  7408                           
  7409                           ; BSR set to: 2
  7410                           ;usb_device.c: 2864: {
  7411                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7412  00049E  D86F               	call	PL60	;call to abstracted procedure
  7413  0004A0  0F70               	addlw	low _ep_data_out
  7414  0004A2  D002               	goto	L9
  7415  0004A4                     i2l3500:
  7416                           
  7417                           ; BSR set to: 2
  7418                           ;usb_device.c: 2867: else
  7419                           ;usb_device.c: 2868: {
  7420                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7421  0004A4  D86C               	call	PL60	;call to abstracted procedure
  7422  0004A6  0F73               	addlw	low _ep_data_in
  7423  0004A8                     L9:
  7424  0004A8  6ED9               	movwf	fsr2l,c
  7425  0004AA  6ADA               	clrf	fsr2h,c
  7426  0004AC  0100               	movlb	0	; () banked
  7427  0004AE  82DF               	bsf	indf2,1,c
  7428  0004B0                     i2l701:
  7429                           
  7430                           ;usb_device.c: 2870: }
  7431                           ;usb_device.c: 2871: }
  7432                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7433  0004B0  D848               	call	PL22	;call to abstracted procedure
  7434  0004B2  0E00               	movlw	0
  7435  0004B4  84DB               	bsf	plusw2,2,c
  7436                           
  7437                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7438  0004B6  D845               	call	PL22	;call to abstracted procedure
  7439  0004B8  8EDB               	bsf	plusw2,7,c
  7440                           
  7441                           ;usb_device.c: 2876: }
  7442  0004BA  0C00               	retlw	0
  7443  0004BC                     i2l3502:
  7444                           
  7445                           ; BSR set to: 2
  7446                           ;usb_device.c: 2877: else
  7447                           ;usb_device.c: 2878: {
  7448                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7449  0004BC  0E04               	movlw	4
  7450  0004BE  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7451  0004C0  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7452                           
  7453                           ; BSR set to: 2
  7454                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7455  0004C2  D83F               	call	PL22	;call to abstracted procedure
  7456  0004C4  AEDF               	btfss	indf2,7,c
  7457  0004C6  D00A               	goto	i2l3512
  7458                           
  7459                           ; BSR set to: 2
  7460                           ;usb_device.c: 2885: {
  7461                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7462  0004C8  D83C               	call	PL22	;call to abstracted procedure
  7463  0004CA  0E7F               	movlw	127
  7464  0004CC  16DF               	andwf	indf2,f,c
  7465                           
  7466                           ; BSR set to: 2
  7467                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7468  0004CE  D839               	call	PL22	;call to abstracted procedure
  7469  0004D0  0E00               	movlw	0
  7470  0004D2  8CDB               	bsf	plusw2,6,c
  7471                           
  7472                           ; BSR set to: 2
  7473                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7474  0004D4  D83B               	call	PL36	;call to abstracted procedure
  7475  0004D6  ECD5  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7476                           
  7477                           ;usb_device.c: 2891: }
  7478  0004DA  D003               	goto	i2l3514
  7479  0004DC                     i2l3512:
  7480                           
  7481                           ; BSR set to: 2
  7482                           ;usb_device.c: 2892: else
  7483                           ;usb_device.c: 2893: {
  7484                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7485  0004DC  D832               	call	PL22	;call to abstracted procedure
  7486  0004DE  0E00               	movlw	0
  7487  0004E0  8CDB               	bsf	plusw2,6,c
  7488  0004E2                     i2l3514:
  7489                           
  7490                           ;usb_device.c: 2896: }
  7491                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7492  0004E2  0E04               	movlw	4
  7493  0004E4  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7494  0004E6  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7495                           
  7496                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7497  0004E8  B242               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7498  0004EA  D003               	goto	i2l709
  7499  0004EC  D82A               	call	PL22	;call to abstracted procedure
  7500  0004EE  AEDF               	btfss	indf2,7,c
  7501  0004F0  D013               	goto	i2l3528
  7502  0004F2                     i2l709:
  7503                           
  7504                           ;usb_device.c: 2907: {
  7505                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7506  0004F2  0102               	movlb	2	; () banked
  7507  0004F4  BF34               	btfsc	52,7,b	;volatile
  7508  0004F6  D003               	goto	i2l3522
  7509                           
  7510                           ; BSR set to: 2
  7511                           ;usb_device.c: 2909: {
  7512                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7513  0004F8  D842               	call	PL60	;call to abstracted procedure
  7514  0004FA  0F70               	addlw	low _ep_data_out
  7515  0004FC  D002               	goto	L10
  7516  0004FE                     i2l3522:
  7517                           
  7518                           ; BSR set to: 2
  7519                           ;usb_device.c: 2912: else
  7520                           ;usb_device.c: 2913: {
  7521                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7522  0004FE  D83F               	call	PL60	;call to abstracted procedure
  7523  000500  0F73               	addlw	low _ep_data_in
  7524  000502                     L10:
  7525  000502  6ED9               	movwf	fsr2l,c
  7526  000504  6ADA               	clrf	fsr2h,c
  7527  000506  0100               	movlb	0	; () banked
  7528  000508  92DF               	bcf	indf2,1,c
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;usb_device.c: 2915: }
  7532                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7533  00050A  D81B               	call	PL22	;call to abstracted procedure
  7534  00050C  0E3B               	movlw	59
  7535  00050E  16DF               	andwf	indf2,f,c
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7539  000510  D81D               	call	PL36	;call to abstracted procedure
  7540  000512  ECD5  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7541                           
  7542                           ;usb_device.c: 2921: }
  7543  000516  D003               	goto	i2l3530
  7544  000518                     i2l3528:
  7545                           
  7546                           ;usb_device.c: 2922: else
  7547                           ;usb_device.c: 2923: {
  7548                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7549  000518  D814               	call	PL22	;call to abstracted procedure
  7550  00051A  0E3B               	movlw	59
  7551  00051C  16DF               	andwf	indf2,f,c
  7552  00051E                     i2l3530:
  7553                           
  7554                           ;usb_device.c: 2926: }
  7555                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7556  00051E  0102               	movlb	2	; () banked
  7557  000520  5134               	movf	52,w,b	;volatile
  7558  000522  0B0F               	andlw	15
  7559  000524  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7560  000526  6A3F               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  7561  000528  0E53               	movlw	83
  7562  00052A  243E               	addwf	??_USBStdFeatureReqHandler,w,c
  7563  00052C  6E40               	movwf	USBStdFeatureReqHandler@pUEP,c
  7564  00052E  0E0F               	movlw	15
  7565  000530  203F               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  7566  000532  6E41               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7567                           
  7568                           ; BSR set to: 2
  7569                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7570  000534  C040  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7571  000538  C041  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7572  00053C  0EFE               	movlw	254
  7573  00053E  16DF               	andwf	indf2,f,c
  7574  000540  0CFE               	retlw	254	;funcret
  7575  000542                     __end_of_USBStdFeatureReqHandler:
  7576                           	opt stack 0
  7577  000542                     PL22:
  7578                           	opt stack 17
  7579  000542  C043  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7580  000546  C044  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7581  00054A  0012               	return	
  7582  00054C                     __end_ofPL22:
  7583                           	opt stack 0
  7584  00054C                     PL36:
  7585                           	opt stack 17
  7586  00054C  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7587  00054E  0E05               	movlw	5
  7588  000550  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7589  000552  C043  F038         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7590  000556  C044  F039         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7591  00055A  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7592  00055C  0E02               	movlw	2
  7593  00055E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7594  000560  0C02               	retlw	2
  7595  000562                     __end_ofPL36:
  7596                           	opt stack 0
  7597  000562                     PL56:
  7598                           	opt stack 17
  7599  000562  CFDE F043          	movff	postinc2,USBStdFeatureReqHandler@p
  7600  000566  CFDD F044          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7601  00056A  5134               	movf	52,w,b	;volatile
  7602  00056C  0B0F               	andlw	15
  7603  00056E  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7604  000570  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7605  000572  0012               	return	
  7606  000574                     __end_ofPL56:
  7607                           	opt stack 0
  7608  000574                     PL58:
  7609                           	opt stack 21
  7610  000574  5134               	movf	52,w,b	;volatile
  7611  000576  0B0F               	andlw	15
  7612  000578  0D02               	mullw	2
  7613  00057A  50F3               	movf	prodl,w,c
  7614  00057C  0012               	return	
  7615  00057E                     __end_ofPL58:
  7616                           	opt stack 0
  7617  00057E                     PL60:
  7618                           	opt stack 17
  7619  00057E  5134               	movf	52,w,b	;volatile
  7620  000580  0B0F               	andlw	15
  7621  000582  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7622  000584  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7623  000586  0012               	return	
  7624  000588                     __end_ofPL60:
  7625                           	opt stack 0
  7626                           tblptru	equ	0xFF8
  7627                           tblptrh	equ	0xFF7
  7628                           tblptrl	equ	0xFF6
  7629                           tablat	equ	0xFF5
  7630                           prodh	equ	0xFF4
  7631                           prodl	equ	0xFF3
  7632                           intcon	equ	0xFF2
  7633                           postinc0	equ	0xFEE
  7634                           wreg	equ	0xFE8
  7635                           indf1	equ	0xFE7
  7636                           postdec1	equ	0xFE5
  7637                           fsr1h	equ	0xFE2
  7638                           fsr1l	equ	0xFE1
  7639                           indf2	equ	0xFDF
  7640                           postinc2	equ	0xFDE
  7641                           postdec2	equ	0xFDD
  7642                           plusw2	equ	0xFDB
  7643                           fsr2h	equ	0xFDA
  7644                           fsr2l	equ	0xFD9
  7645                           status	equ	0xFD8
  7646                           
  7647 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7648 ;; Defined at:
  7649 ;;		line 51 in file "picLibs/usb_events.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  event           2   12[COMRAM] enum E3370
  7652 ;;  pdata           2   14[COMRAM] PTR void 
  7653 ;;		 -> RAM(767), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7654 ;;		 -> BDT(48), 
  7655 ;;  size            2   16[COMRAM] unsigned int 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      unsigned char 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7667 ;;      Params:         6       0       0       0
  7668 ;;      Locals:         0       0       0       0
  7669 ;;      Temps:          2       0       0       0
  7670 ;;      Totals:         8       0       0       0
  7671 ;;Total ram usage:        8 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:    3
  7674 ;; This function calls:
  7675 ;;		_APP_DeviceCDCBasicDemoInitialize
  7676 ;;		_APP_LEDUpdateUSBStatus
  7677 ;;		_CDCInitEP
  7678 ;;		_USBCheckCDCRequest
  7679 ;;		i2_SYSTEM_Initialize
  7680 ;; This function is called by:
  7681 ;;		_USBDeviceTasks
  7682 ;;		_USBStdSetCfgHandler
  7683 ;;		_USBSuspend
  7684 ;;		_USBWakeFromSuspend
  7685 ;;		_USBCtrlTrfSetupHandler
  7686 ;;		_USBCheckStdRequest
  7687 ;;		_USBStdFeatureReqHandler
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text40
  7692  0013AA                     __ptext40:
  7693                           	opt stack 0
  7694  0013AA                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7695                           	opt stack 21
  7696                           
  7697                           ;usb_events.c: 53: switch( (int) event )
  7698                           
  7699                           ;incstack = 0
  7700  0013AA  D00E               	goto	i2l3242
  7701  0013AC                     i2l3230:
  7702                           
  7703                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  7704  0013AC  EC9D  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7705                           
  7706                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7707  0013B0  0E01               	movlw	1
  7708  0013B2  EF0D  F00D         	goto	i2_SYSTEM_Initialize
  7709  0013B6                     i2l3232:
  7710                           
  7711                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  7712  0013B6  EC9D  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7713                           
  7714                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7715  0013BA  0E02               	movlw	2
  7716  0013BC  EF0D  F00D         	goto	i2_SYSTEM_Initialize
  7717  0013C0                     i2l3234:
  7718                           
  7719                           ;usb_events.c: 91: CDCInitEP();
  7720  0013C0  EC1B  F00B         	call	_CDCInitEP	;wreg free
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;usb_events.c: 92: APP_DeviceCDCBasicDemoInitialize();
  7724  0013C4  EF53  F00D         	goto	_APP_DeviceCDCBasicDemoInitialize	;wreg free
  7725  0013C8                     i2l3242:
  7726  0013C8  C036  F03C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7727  0013CC  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7728                           
  7729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7730                           ; Switch size 1, requested type "space"
  7731                           ; Number of cases is 2, Range of values is 0 to 127
  7732                           ; switch strategies available:
  7733                           ; Name         Instructions Cycles
  7734                           ; simple_byte            7     4 (average)
  7735                           ;	Chosen strategy is simple_byte
  7736  0013D0  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7737  0013D2  E004               	bz	i2l5086
  7738  0013D4  0A7F               	xorlw	127	; case 127
  7739  0013D6  A4D8               	btfss	status,2,c
  7740  0013D8  0012               	return	
  7741  0013DA  D01A               	goto	i2l5088
  7742  0013DC                     i2l5086:
  7743                           
  7744                           ; Switch size 1, requested type "space"
  7745                           ; Number of cases is 8, Range of values is 1 to 117
  7746                           ; switch strategies available:
  7747                           ; Name         Instructions Cycles
  7748                           ; simple_byte           25    13 (average)
  7749                           ;	Chosen strategy is simple_byte
  7750  0013DC  503C               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7751  0013DE  0A01               	xorlw	1	; case 1
  7752  0013E0  E0EF               	bz	i2l3234
  7753  0013E2  0A03               	xorlw	3	; case 2
  7754  0013E4  B4D8               	btfsc	status,2,c
  7755  0013E6  0012               	return	
  7756  0013E8  0A01               	xorlw	1	; case 3
  7757  0013EA  E102 EF38  F008    	bz	_USBCheckCDCRequest
  7758  0013F0  0A06               	xorlw	6	; case 5
  7759  0013F2  B4D8               	btfsc	status,2,c
  7760  0013F4  0012               	return	
  7761  0013F6  0A77               	xorlw	119	; case 114
  7762  0013F8  B4D8               	btfsc	status,2,c
  7763  0013FA  0012               	return	
  7764  0013FC  0A01               	xorlw	1	; case 115
  7765  0013FE  E102 EF9D  F009    	bz	_APP_LEDUpdateUSBStatus
  7766  001404  0A07               	xorlw	7	; case 116
  7767  001406  E0D7               	bz	i2l3232
  7768  001408  0A01               	xorlw	1	; case 117
  7769  00140A  A4D8               	btfss	status,2,c
  7770  00140C  0012               	return	
  7771  00140E  D7CE               	goto	i2l3230
  7772  001410                     i2l5088:
  7773                           
  7774                           ; Switch size 1, requested type "space"
  7775                           ; Number of cases is 1, Range of values is 255 to 255
  7776                           ; switch strategies available:
  7777                           ; Name         Instructions Cycles
  7778                           ; simple_byte            4     3 (average)
  7779                           ;	Chosen strategy is simple_byte
  7780  001410  1C3C               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7781  001412  0012               	return	
  7782  001414                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7783                           	opt stack 0
  7784                           tblptru	equ	0xFF8
  7785                           tblptrh	equ	0xFF7
  7786                           tblptrl	equ	0xFF6
  7787                           tablat	equ	0xFF5
  7788                           prodh	equ	0xFF4
  7789                           prodl	equ	0xFF3
  7790                           intcon	equ	0xFF2
  7791                           postinc0	equ	0xFEE
  7792                           wreg	equ	0xFE8
  7793                           indf1	equ	0xFE7
  7794                           postdec1	equ	0xFE5
  7795                           fsr1h	equ	0xFE2
  7796                           fsr1l	equ	0xFE1
  7797                           indf2	equ	0xFDF
  7798                           postinc2	equ	0xFDE
  7799                           postdec2	equ	0xFDD
  7800                           plusw2	equ	0xFDB
  7801                           fsr2h	equ	0xFDA
  7802                           fsr2l	equ	0xFD9
  7803                           status	equ	0xFD8
  7804                           
  7805 ;; *************** function i2_SYSTEM_Initialize *****************
  7806 ;; Defined at:
  7807 ;;		line 66 in file "picLibs/system.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  state           1    wreg     enum E3329
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  state           1    1[COMRAM] enum E3329
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg, status,2, status,0, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7821 ;;      Params:         0       0       0       0
  7822 ;;      Locals:         1       0       0       0
  7823 ;;      Temps:          0       0       0       0
  7824 ;;      Totals:         1       0       0       0
  7825 ;;Total ram usage:        1 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    1
  7828 ;; This function calls:
  7829 ;;		i2_BUTTON_Enable
  7830 ;;		i2_LED_Enable
  7831 ;; This function is called by:
  7832 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text41
  7837  001A1A                     __ptext41:
  7838                           	opt stack 0
  7839  001A1A                     i2_SYSTEM_Initialize:
  7840                           	opt stack 22
  7841                           
  7842                           ;incstack = 0
  7843                           ;i2SYSTEM_Initialize@state stored from wreg
  7844  001A1A  6E2B               	movwf	i2SYSTEM_Initialize@state,c
  7845                           
  7846                           ;system.c: 68: switch(state)
  7847  001A1C  D006               	goto	i2l3224
  7848  001A1E                     i2l3220:
  7849                           
  7850                           ;system.c: 71: LED_Enable(LED_D1);
  7851  001A1E  0E01               	movlw	1
  7852  001A20  EC70  F00C         	call	i2_LED_Enable
  7853                           
  7854                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  7855  001A24  0E01               	movlw	1
  7856  001A26  EF6A  F00D         	goto	i2_BUTTON_Enable
  7857  001A2A                     i2l3224:
  7858  001A2A  502B               	movf	i2SYSTEM_Initialize@state,w,c
  7859                           
  7860                           ; Switch size 1, requested type "space"
  7861                           ; Number of cases is 3, Range of values is 0 to 2
  7862                           ; switch strategies available:
  7863                           ; Name         Instructions Cycles
  7864                           ; simple_byte           10     6 (average)
  7865                           ;	Chosen strategy is simple_byte
  7866  001A2C  E0F8               	bz	i2l3220
  7867  001A2E  D000               	goto	PL102	;call to abstracted procedure
  7868  001A30                     __end_ofi2_SYSTEM_Initialize:
  7869                           	opt stack 0
  7870  001A30                     PL102:
  7871                           	opt stack 19
  7872  001A30  0A01               	xorlw	1	; case 1
  7873  001A32  A4D8               	btfss	status,2,c
  7874  001A34  0A03               	xorlw	3	; case 2
  7875  001A36  0012               	return	
  7876  001A38                     __end_ofPL102:
  7877                           	opt stack 0
  7878                           tblptru	equ	0xFF8
  7879                           tblptrh	equ	0xFF7
  7880                           tblptrl	equ	0xFF6
  7881                           tablat	equ	0xFF5
  7882                           prodh	equ	0xFF4
  7883                           prodl	equ	0xFF3
  7884                           intcon	equ	0xFF2
  7885                           postinc0	equ	0xFEE
  7886                           wreg	equ	0xFE8
  7887                           indf1	equ	0xFE7
  7888                           postdec1	equ	0xFE5
  7889                           fsr1h	equ	0xFE2
  7890                           fsr1l	equ	0xFE1
  7891                           indf2	equ	0xFDF
  7892                           postinc2	equ	0xFDE
  7893                           postdec2	equ	0xFDD
  7894                           plusw2	equ	0xFDB
  7895                           fsr2h	equ	0xFDA
  7896                           fsr2l	equ	0xFD9
  7897                           status	equ	0xFD8
  7898                           
  7899 ;; *************** function i2_LED_Enable *****************
  7900 ;; Defined at:
  7901 ;;		line 220 in file "picLibs/leds.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  led             1    wreg     enum E2
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  led             1    0[COMRAM] enum E2
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      void 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7915 ;;      Params:         0       0       0       0
  7916 ;;      Locals:         1       0       0       0
  7917 ;;      Temps:          0       0       0       0
  7918 ;;      Totals:         1       0       0       0
  7919 ;;Total ram usage:        1 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		i2_SYSTEM_Initialize
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text42
  7929  0018E0                     __ptext42:
  7930                           	opt stack 0
  7931  0018E0                     i2_LED_Enable:
  7932                           	opt stack 22
  7933                           
  7934                           ;incstack = 0
  7935                           ;i2LED_Enable@led stored from wreg
  7936  0018E0  6E2A               	movwf	i2LED_Enable@led,c
  7937                           
  7938                           ;leds.c: 222: switch(led)
  7939  0018E2  D008               	goto	i2l3080
  7940  0018E4                     i2l286:
  7941                           
  7942                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  7943  0018E4  9094               	bcf	3988,0,c	;volatile
  7944                           
  7945                           ;leds.c: 226: break;
  7946  0018E6  0012               	return	
  7947  0018E8                     i2l288:
  7948                           
  7949                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  7950  0018E8  9294               	bcf	3988,1,c	;volatile
  7951                           
  7952                           ;leds.c: 230: break;
  7953  0018EA  0012               	return	
  7954  0018EC                     i2l289:
  7955                           
  7956                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  7957  0018EC  9494               	bcf	3988,2,c	;volatile
  7958                           
  7959                           ;leds.c: 234: break;
  7960  0018EE  0012               	return	
  7961  0018F0                     i2l290:
  7962                           
  7963                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  7964  0018F0  9694               	bcf	3988,3,c	;volatile
  7965                           
  7966                           ;leds.c: 238: break;
  7967  0018F2  0012               	return	
  7968  0018F4                     i2l3080:
  7969  0018F4  502A               	movf	i2LED_Enable@led,w,c
  7970                           
  7971                           ; Switch size 1, requested type "space"
  7972                           ; Number of cases is 5, Range of values is 0 to 4
  7973                           ; switch strategies available:
  7974                           ; Name         Instructions Cycles
  7975                           ; simple_byte           16     9 (average)
  7976                           ;	Chosen strategy is simple_byte
  7977  0018F6  B4D8               	btfsc	status,2,c
  7978  0018F8  0012               	return	
  7979  0018FA  0A01               	xorlw	1	; case 1
  7980  0018FC  E0F3               	bz	i2l286
  7981  0018FE  0A03               	xorlw	3	; case 2
  7982  001900  E0F3               	bz	i2l288
  7983  001902  0A01               	xorlw	1	; case 3
  7984  001904  E0F3               	bz	i2l289
  7985  001906  0A07               	xorlw	7	; case 4
  7986  001908  E0F3               	bz	i2l290
  7987  00190A  0012               	return		;funcret
  7988  00190C                     __end_ofi2_LED_Enable:
  7989                           	opt stack 0
  7990                           tblptru	equ	0xFF8
  7991                           tblptrh	equ	0xFF7
  7992                           tblptrl	equ	0xFF6
  7993                           tablat	equ	0xFF5
  7994                           prodh	equ	0xFF4
  7995                           prodl	equ	0xFF3
  7996                           intcon	equ	0xFF2
  7997                           postinc0	equ	0xFEE
  7998                           wreg	equ	0xFE8
  7999                           indf1	equ	0xFE7
  8000                           postdec1	equ	0xFE5
  8001                           fsr1h	equ	0xFE2
  8002                           fsr1l	equ	0xFE1
  8003                           indf2	equ	0xFDF
  8004                           postinc2	equ	0xFDE
  8005                           postdec2	equ	0xFDD
  8006                           plusw2	equ	0xFDB
  8007                           fsr2h	equ	0xFDA
  8008                           fsr2l	equ	0xFD9
  8009                           status	equ	0xFD8
  8010                           
  8011 ;; *************** function i2_BUTTON_Enable *****************
  8012 ;; Defined at:
  8013 ;;		line 85 in file "picLibs/buttons.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  button          1    wreg     enum E3304
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  button          1    0[COMRAM] enum E3304
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8027 ;;      Params:         0       0       0       0
  8028 ;;      Locals:         1       0       0       0
  8029 ;;      Temps:          0       0       0       0
  8030 ;;      Totals:         1       0       0       0
  8031 ;;Total ram usage:        1 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		i2_SYSTEM_Initialize
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text43
  8041  001AD4                     __ptext43:
  8042                           	opt stack 0
  8043  001AD4                     i2_BUTTON_Enable:
  8044                           	opt stack 22
  8045                           
  8046                           ;incstack = 0
  8047                           ;i2BUTTON_Enable@button stored from wreg
  8048  001AD4  6E2A               	movwf	i2BUTTON_Enable@button,c
  8049                           
  8050                           ;buttons.c: 87: switch(button)
  8051  001AD6  502A               	movf	i2BUTTON_Enable@button,w,c
  8052                           
  8053                           ; Switch size 1, requested type "space"
  8054                           ; Number of cases is 2, Range of values is 0 to 1
  8055                           ; switch strategies available:
  8056                           ; Name         Instructions Cycles
  8057                           ; simple_byte            7     4 (average)
  8058                           ;	Chosen strategy is simple_byte
  8059  001AD8  D000               	goto	PL114	;call to abstracted procedure
  8060  001ADA                     __end_ofi2_BUTTON_Enable:
  8061                           	opt stack 0
  8062  001ADA                     PL114:
  8063                           	opt stack 19
  8064  001ADA  A4D8               	btfss	status,2,c
  8065  001ADC  0A01               	xorlw	1	; case 1
  8066  001ADE  0012               	return	
  8067  001AE0                     __end_ofPL114:
  8068                           	opt stack 0
  8069                           tblptru	equ	0xFF8
  8070                           tblptrh	equ	0xFF7
  8071                           tblptrl	equ	0xFF6
  8072                           tablat	equ	0xFF5
  8073                           prodh	equ	0xFF4
  8074                           prodl	equ	0xFF3
  8075                           intcon	equ	0xFF2
  8076                           postinc0	equ	0xFEE
  8077                           wreg	equ	0xFE8
  8078                           indf1	equ	0xFE7
  8079                           postdec1	equ	0xFE5
  8080                           fsr1h	equ	0xFE2
  8081                           fsr1l	equ	0xFE1
  8082                           indf2	equ	0xFDF
  8083                           postinc2	equ	0xFDE
  8084                           postdec2	equ	0xFDD
  8085                           plusw2	equ	0xFDB
  8086                           fsr2h	equ	0xFDA
  8087                           fsr2l	equ	0xFD9
  8088                           status	equ	0xFD8
  8089                           
  8090 ;; *************** function _USBCheckCDCRequest *****************
  8091 ;; Defined at:
  8092 ;;		line 147 in file "picLibs/usb_device_cdc.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;		None
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 3F/2
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8106 ;;      Params:         0       0       0       0
  8107 ;;      Locals:         0       0       0       0
  8108 ;;      Temps:          0       0       0       0
  8109 ;;      Totals:         0       0       0       0
  8110 ;;Total ram usage:        0 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text44
  8120  001070                     __ptext44:
  8121                           	opt stack 0
  8122  001070                     _USBCheckCDCRequest:
  8123                           	opt stack 23
  8124                           
  8125                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8126                           
  8127                           ;incstack = 0
  8128  001070  0102               	movlb	2	; () banked
  8129  001072  5130               	movf	48,w,b	;volatile
  8130  001074  0B1F               	andlw	31
  8131  001076  06E8               	decf	wreg,f,c
  8132  001078  E001               	bz	i2l3158
  8133  00107A  0012               	return	
  8134  00107C                     i2l3158:
  8135                           
  8136                           ; BSR set to: 2
  8137                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8138  00107C  3930               	swapf	48,w,b	;volatile
  8139  00107E  32E8               	rrcf	wreg,f,c
  8140  001080  0B03               	andlw	3
  8141  001082  06E8               	decf	wreg,f,c
  8142  001084  E001               	bz	i2l3162
  8143  001086  0012               	return	
  8144  001088                     i2l3162:
  8145                           
  8146                           ; BSR set to: 2
  8147                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8148                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8149  001088  5134               	movf	52,w,b	;volatile
  8150  00108A  E027               	bz	i2l3198
  8151                           
  8152                           ; BSR set to: 2
  8153  00108C  0534               	decf	52,w,b	;volatile
  8154  00108E  E025               	bz	i2l3198
  8155  001090  0012               	return	
  8156  001092                     i2l3168:
  8157                           
  8158                           ; BSR set to: 2
  8159                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8160  001092  0E82               	movlw	low _dummy_encapsulated_cmd_response
  8161  001094  6E09               	movwf	_inPipes,c	;volatile
  8162  001096  6A0A               	clrf	_inPipes+1,c	;volatile
  8163                           
  8164                           ; BSR set to: 2
  8165                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8166  001098  6A0E               	clrf	_inPipes+5,c	;volatile
  8167  00109A  0E08               	movlw	8
  8168  00109C  6E0D               	movwf	_inPipes+4,c	;volatile
  8169                           
  8170                           ; BSR set to: 2
  8171                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8172  00109E  800C               	bsf	_inPipes+3,0,c	;volatile
  8173                           
  8174                           ; BSR set to: 2
  8175                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8176  0010A0  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8177                           
  8178                           ;usb_device_cdc.c: 175: break;
  8179  0010A2  0C08               	retlw	8
  8180  0010A4                     i2l3176:
  8181                           
  8182                           ; BSR set to: 2
  8183                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8184  0010A4  0E82               	movlw	low _dummy_encapsulated_cmd_response
  8185  0010A6  6E09               	movwf	_inPipes,c	;volatile
  8186  0010A8  6A0A               	clrf	_inPipes+1,c	;volatile
  8187                           
  8188                           ; BSR set to: 2
  8189                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8190  0010AA  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8191                           
  8192                           ;usb_device_cdc.c: 180: break;
  8193  0010AC  0012               	return	
  8194  0010AE                     i2l776:
  8195                           
  8196                           ; BSR set to: 2
  8197                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8198  0010AE  C236 F005          	movff	566,_outPipes+4	;volatile
  8199  0010B2  C237 F006          	movff	567,_outPipes+5	;volatile
  8200                           
  8201                           ; BSR set to: 2
  8202                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8203  0010B6  0E8A               	movlw	low _line_coding
  8204  0010B8  6E01               	movwf	_outPipes,c	;volatile
  8205                           
  8206                           ; BSR set to: 2
  8207                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8208  0010BA  6A07               	clrf	_outPipes+6,c	;volatile
  8209  0010BC  6A08               	clrf	_outPipes+7,c	;volatile
  8210                           
  8211                           ; BSR set to: 2
  8212                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8213  0010BE  8E04               	bsf	_outPipes+3,7,c	;volatile
  8214                           
  8215                           ;usb_device_cdc.c: 189: break;
  8216  0010C0  0012               	return	
  8217  0010C2                     i2l3186:
  8218                           
  8219                           ; BSR set to: 2
  8220                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8221  0010C2  0E8A               	movlw	low _line_coding
  8222  0010C4  6E09               	movwf	_inPipes,c	;volatile
  8223  0010C6  6A0A               	clrf	_inPipes+1,c	;volatile
  8224                           
  8225                           ; BSR set to: 2
  8226  0010C8  6A0E               	clrf	_inPipes+5,c	;volatile
  8227  0010CA  0E07               	movlw	7
  8228  0010CC  6E0D               	movwf	_inPipes+4,c	;volatile
  8229                           
  8230                           ; BSR set to: 2
  8231  0010CE  0EC1               	movlw	193
  8232  0010D0  6E0C               	movwf	_inPipes+3,c	;volatile
  8233                           
  8234                           ;usb_device_cdc.c: 196: break;
  8235  0010D2  0CC1               	retlw	193
  8236  0010D4                     i2l3192:
  8237                           
  8238                           ; BSR set to: 2
  8239                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8240  0010D4  5132               	movf	50,w,b	;volatile
  8241                           
  8242                           ; BSR set to: 2
  8243                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8244  0010D6  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8245                           
  8246                           ;usb_device_cdc.c: 232: break;
  8247  0010D8  0012               	return	
  8248  0010DA                     i2l3198:
  8249                           
  8250                           ; BSR set to: 2
  8251  0010DA  5131               	movf	49,w,b	;volatile
  8252                           
  8253                           ; Switch size 1, requested type "space"
  8254                           ; Number of cases is 5, Range of values is 0 to 34
  8255                           ; switch strategies available:
  8256                           ; Name         Instructions Cycles
  8257                           ; simple_byte           16     9 (average)
  8258                           ;	Chosen strategy is simple_byte
  8259  0010DC  E0DA               	bz	i2l3168
  8260  0010DE  0A01               	xorlw	1	; case 1
  8261  0010E0  E0E1               	bz	i2l3176
  8262  0010E2  0A21               	xorlw	33	; case 32
  8263  0010E4  E0E4               	bz	i2l776
  8264  0010E6  0A01               	xorlw	1	; case 33
  8265  0010E8  E0EC               	bz	i2l3186
  8266  0010EA  0A03               	xorlw	3	; case 34
  8267  0010EC  E0F3               	bz	i2l3192
  8268                           
  8269                           ; BSR set to: 2
  8270  0010EE  0012               	return		;funcret
  8271  0010F0                     __end_of_USBCheckCDCRequest:
  8272                           	opt stack 0
  8273                           tblptru	equ	0xFF8
  8274                           tblptrh	equ	0xFF7
  8275                           tblptrl	equ	0xFF6
  8276                           tablat	equ	0xFF5
  8277                           prodh	equ	0xFF4
  8278                           prodl	equ	0xFF3
  8279                           intcon	equ	0xFF2
  8280                           postinc0	equ	0xFEE
  8281                           wreg	equ	0xFE8
  8282                           indf1	equ	0xFE7
  8283                           postdec1	equ	0xFE5
  8284                           fsr1h	equ	0xFE2
  8285                           fsr1l	equ	0xFE1
  8286                           indf2	equ	0xFDF
  8287                           postinc2	equ	0xFDE
  8288                           postdec2	equ	0xFDD
  8289                           plusw2	equ	0xFDB
  8290                           fsr2h	equ	0xFDA
  8291                           fsr2l	equ	0xFD9
  8292                           status	equ	0xFD8
  8293                           
  8294 ;; *************** function _CDCInitEP *****************
  8295 ;; Defined at:
  8296 ;;		line 294 in file "picLibs/usb_device_cdc.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;		None
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;		None
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 3F/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8310 ;;      Params:         0       0       0       0
  8311 ;;      Locals:         0       0       0       0
  8312 ;;      Temps:          0       0       0       0
  8313 ;;      Totals:         0       0       0       0
  8314 ;;Total ram usage:        0 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    2
  8317 ;; This function calls:
  8318 ;;		_USBEnableEndpoint
  8319 ;;		i2_USBTransferOnePacket
  8320 ;; This function is called by:
  8321 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text45
  8326  001636                     __ptext45:
  8327                           	opt stack 0
  8328  001636                     _CDCInitEP:
  8329                           	opt stack 21
  8330                           
  8331                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8332                           
  8333                           ; BSR set to: 2
  8334                           ;incstack = 0
  8335  001636  0100               	movlb	0	; () banked
  8336  001638  6B8A               	clrf	_line_coding& (0+255),b
  8337  00163A  0E4B               	movlw	75
  8338  00163C  6F8B               	movwf	(_line_coding+1)& (0+255),b
  8339  00163E  6B8C               	clrf	(_line_coding+2)& (0+255),b
  8340  001640  6B8D               	clrf	(_line_coding+3)& (0+255),b
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8344  001642  6B8E               	clrf	(_line_coding+4)& (0+255),b
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8348  001644  6B8F               	clrf	(_line_coding+5)& (0+255),b
  8349                           
  8350                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8351  001646  0E08               	movlw	8
  8352  001648  6F90               	movwf	(_line_coding+6)& (0+255),b
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8356  00164A  6A1C               	clrf	_cdc_rx_len,c
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8360  00164C  0E1A               	movlw	26
  8361  00164E  6E32               	movwf	USBEnableEndpoint@options,c
  8362  001650  0E01               	movlw	1
  8363  001652  ECF1  F00B         	call	_USBEnableEndpoint
  8364                           
  8365                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8366  001656  0E1E               	movlw	30
  8367  001658  6E32               	movwf	USBEnableEndpoint@options,c
  8368  00165A  0E02               	movlw	2
  8369  00165C  ECF1  F00B         	call	_USBEnableEndpoint
  8370                           
  8371                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8372  001660  0E00               	movlw	0
  8373  001662  6E2A               	movwf	i2USBTransferOnePacket@dir,c
  8374  001664  0E80               	movlw	128
  8375  001666  6E2B               	movwf	i2USBTransferOnePacket@data,c
  8376  001668  0E02               	movlw	2
  8377  00166A  6E2C               	movwf	i2USBTransferOnePacket@data+1,c
  8378  00166C  0E40               	movlw	64
  8379  00166E  6E2D               	movwf	i2USBTransferOnePacket@len,c
  8380  001670  0E02               	movlw	2
  8381  001672  EC5B  F006         	call	i2_USBTransferOnePacket
  8382  001676  C02A  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  8383  00167A  C02B  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8384                           
  8385                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8386  00167E  0100               	movlb	0	; () banked
  8387  001680  6B76               	clrf	_CDCDataInHandle& (0+255),b
  8388  001682  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8392  001684  6B80               	clrf	_cdc_trf_state& (0+255),b
  8393                           
  8394                           ; BSR set to: 0
  8395  001686  0012               	return		;funcret
  8396  001688                     __end_of_CDCInitEP:
  8397                           	opt stack 0
  8398                           tblptru	equ	0xFF8
  8399                           tblptrh	equ	0xFF7
  8400                           tblptrl	equ	0xFF6
  8401                           tablat	equ	0xFF5
  8402                           prodh	equ	0xFF4
  8403                           prodl	equ	0xFF3
  8404                           intcon	equ	0xFF2
  8405                           postinc0	equ	0xFEE
  8406                           wreg	equ	0xFE8
  8407                           indf1	equ	0xFE7
  8408                           postdec1	equ	0xFE5
  8409                           fsr1h	equ	0xFE2
  8410                           fsr1l	equ	0xFE1
  8411                           indf2	equ	0xFDF
  8412                           postinc2	equ	0xFDE
  8413                           postdec2	equ	0xFDD
  8414                           plusw2	equ	0xFDB
  8415                           fsr2h	equ	0xFDA
  8416                           fsr2l	equ	0xFD9
  8417                           status	equ	0xFD8
  8418                           
  8419 ;; *************** function i2_USBTransferOnePacket *****************
  8420 ;; Defined at:
  8421 ;;		line 995 in file "picLibs/usb_device.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  ep              1    wreg     unsigned char 
  8424 ;;  dir             1    0[COMRAM] unsigned char 
  8425 ;;  data            2    1[COMRAM] PTR unsigned char 
  8426 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8427 ;;  len             1    3[COMRAM] unsigned char 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  ep              1    6[COMRAM] unsigned char 
  8430 ;;  USBTransferO    2    7[COMRAM] PTR volatile struct __BD
  8431 ;;		 -> RAM(767), NULL(0), BDT(48), 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  2    0[COMRAM] PTR void 
  8434 ;; Registers used:
  8435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8441 ;;      Params:         4       0       0       0
  8442 ;;      Locals:         3       0       0       0
  8443 ;;      Temps:          2       0       0       0
  8444 ;;      Totals:         9       0       0       0
  8445 ;;Total ram usage:        9 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_CDCInitEP
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text46
  8455  000CB6                     __ptext46:
  8456                           	opt stack 0
  8457  000CB6                     i2_USBTransferOnePacket:
  8458                           	opt stack 22
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;incstack = 0
  8462                           ;i2USBTransferOnePacket@ep stored from wreg
  8463  000CB6  6E30               	movwf	i2USBTransferOnePacket@ep,c
  8464                           
  8465                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8466                           ;usb_device.c: 1000: if(dir != 0)
  8467  000CB8  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8468  000CBA  E003               	bz	i2l3086
  8469                           
  8470                           ;usb_device.c: 1001: {
  8471                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8472  000CBC  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8473  000CBE  D845               	call	PL82	;call to abstracted procedure
  8474  000CC0  D002               	goto	L11
  8475  000CC2                     i2l3086:
  8476                           
  8477                           ;usb_device.c: 1005: else
  8478                           ;usb_device.c: 1006: {
  8479                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8480  000CC2  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8481  000CC4  D84B               	call	PL90	;call to abstracted procedure
  8482  000CC6                     L11:
  8483  000CC6  6ED9               	movwf	fsr2l,c
  8484  000CC8  6ADA               	clrf	fsr2h,c
  8485  000CCA  CFDE F031          	movff	postinc2,i2USBTransferOnePacket@handle
  8486  000CCE  CFDD F032          	movff	postdec2,i2USBTransferOnePacket@handle+1
  8487                           
  8488                           ;usb_device.c: 1009: }
  8489                           ;usb_device.c: 1013: if(handle == 0)
  8490  000CD2  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8491  000CD4  1032               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  8492  000CD6  E103               	bnz	i2l3092
  8493                           
  8494                           ;usb_device.c: 1014: {
  8495                           ;usb_device.c: 1015: return 0;
  8496  000CD8  6A2A               	clrf	?i2_USBTransferOnePacket,c
  8497  000CDA  6A2B               	clrf	?i2_USBTransferOnePacket+1,c
  8498  000CDC  0012               	return	
  8499  000CDE                     i2l3092:
  8500                           
  8501                           ;usb_device.c: 1016: }
  8502                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8503  000CDE  EE20 F002          	lfsr	2,2
  8504  000CE2  D840               	call	PL100	;call to abstracted procedure
  8505  000CE4  C02B  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  8506  000CE8  C02C  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  8507                           
  8508                           ;usb_device.c: 1030: handle->CNT = len;
  8509  000CEC  EE20 F001          	lfsr	2,1
  8510  000CF0  D839               	call	PL100	;call to abstracted procedure
  8511  000CF2  C02D  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  8512                           
  8513                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8514  000CF6  D82D               	call	PL84	;call to abstracted procedure
  8515  000CF8  0E40               	movlw	64
  8516  000CFA  16DF               	andwf	indf2,f,c
  8517                           
  8518                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8519  000CFC  D82A               	call	PL84	;call to abstracted procedure
  8520  000CFE  0E00               	movlw	0
  8521  000D00  86DB               	bsf	plusw2,3,c
  8522                           
  8523                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8524  000D02  D827               	call	PL84	;call to abstracted procedure
  8525  000D04  8EDB               	bsf	plusw2,7,c
  8526                           
  8527                           ;usb_device.c: 1036: if(dir != 0)
  8528  000D06  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8529  000D08  E006               	bz	i2l3104
  8530                           
  8531                           ;usb_device.c: 1037: {
  8532                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8533  000D0A  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8534  000D0C  EC88  F005         	call	PL26	;call to abstracted procedure
  8535  000D10  D812               	call	PL52	;call to abstracted procedure
  8536  000D12  0F0F               	addlw	low _pBDTEntryIn
  8537  000D14  D005               	goto	L12
  8538  000D16                     i2l3104:
  8539                           
  8540                           ;usb_device.c: 1041: else
  8541                           ;usb_device.c: 1042: {
  8542                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8543  000D16  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8544  000D18  EC82  F005         	call	PL24	;call to abstracted procedure
  8545  000D1C  D80C               	call	PL52	;call to abstracted procedure
  8546  000D1E  0F60               	addlw	low _pBDTEntryOut
  8547  000D20                     L12:
  8548  000D20  6ED9               	movwf	fsr2l,c
  8549  000D22  6ADA               	clrf	fsr2h,c
  8550  000D24  C02E  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
  8551  000D28  C02F  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
  8552                           
  8553                           ;usb_device.c: 1045: }
  8554                           ;usb_device.c: 1046: return (void*)handle;
  8555  000D2C  C031  F02A         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  8556  000D30  C032  F02B         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  8557  000D34  0012               	return		;funcret
  8558  000D36                     __end_ofi2_USBTransferOnePacket:
  8559                           	opt stack 0
  8560  000D36                     PL52:
  8561                           	opt stack 22
  8562  000D36  CFDE F02E          	movff	postinc2,??i2_USBTransferOnePacket
  8563  000D3A  CFDD F02F          	movff	postdec2,??i2_USBTransferOnePacket+1
  8564  000D3E  0E04               	movlw	4
  8565  000D40  1A2E               	xorwf	??i2_USBTransferOnePacket,f,c
  8566  000D42  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8567  000D44  0D02               	mullw	2
  8568  000D46  50F3               	movf	prodl,w,c
  8569  000D48  0012               	return	
  8570  000D4A                     __end_ofPL52:
  8571                           	opt stack 0
  8572  000D4A                     PL82:
  8573                           	opt stack 18
  8574  000D4A  0D02               	mullw	2
  8575  000D4C  50F3               	movf	prodl,w,c
  8576  000D4E  0F0F               	addlw	low _pBDTEntryIn
  8577  000D50  0012               	return	
  8578  000D52                     __end_ofPL82:
  8579                           	opt stack 0
  8580  000D52                     PL84:
  8581                           	opt stack 22
  8582  000D52  C031  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  8583  000D56  C032  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  8584  000D5A  0012               	return	
  8585  000D5C                     __end_ofPL84:
  8586                           	opt stack 0
  8587  000D5C                     PL90:
  8588                           	opt stack 18
  8589  000D5C  0D02               	mullw	2
  8590  000D5E  50F3               	movf	prodl,w,c
  8591  000D60  0F60               	addlw	low _pBDTEntryOut
  8592  000D62  0012               	return	
  8593  000D64                     __end_ofPL90:
  8594                           	opt stack 0
  8595  000D64                     PL100:
  8596                           	opt stack 22
  8597  000D64  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8598  000D66  26D9               	addwf	fsr2l,f,c
  8599  000D68  5032               	movf	i2USBTransferOnePacket@handle+1,w,c
  8600  000D6A  22DA               	addwfc	fsr2h,f,c
  8601  000D6C  0012               	return	
  8602  000D6E                     __end_ofPL100:
  8603                           	opt stack 0
  8604                           tblptru	equ	0xFF8
  8605                           tblptrh	equ	0xFF7
  8606                           tblptrl	equ	0xFF6
  8607                           tablat	equ	0xFF5
  8608                           prodh	equ	0xFF4
  8609                           prodl	equ	0xFF3
  8610                           intcon	equ	0xFF2
  8611                           postinc0	equ	0xFEE
  8612                           wreg	equ	0xFE8
  8613                           indf1	equ	0xFE7
  8614                           postdec1	equ	0xFE5
  8615                           fsr1h	equ	0xFE2
  8616                           fsr1l	equ	0xFE1
  8617                           indf2	equ	0xFDF
  8618                           postinc2	equ	0xFDE
  8619                           postdec2	equ	0xFDD
  8620                           plusw2	equ	0xFDB
  8621                           fsr2h	equ	0xFDA
  8622                           fsr2l	equ	0xFD9
  8623                           status	equ	0xFD8
  8624                           
  8625 ;; *************** function _USBEnableEndpoint *****************
  8626 ;; Defined at:
  8627 ;;		line 878 in file "picLibs/usb_device.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  ep              1    wreg     unsigned char 
  8630 ;;  options         1    8[COMRAM] unsigned char 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  ep              1   11[COMRAM] unsigned char 
  8633 ;;  p               2    9[COMRAM] PTR unsigned char 
  8634 ;;		 -> UEP0(1), 
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8644 ;;      Params:         1       0       0       0
  8645 ;;      Locals:         3       0       0       0
  8646 ;;      Temps:          0       0       0       0
  8647 ;;      Totals:         4       0       0       0
  8648 ;;Total ram usage:        4 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    1
  8651 ;; This function calls:
  8652 ;;		_USBConfigureEndpoint
  8653 ;; This function is called by:
  8654 ;;		_CDCInitEP
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text47
  8659  0017E2                     __ptext47:
  8660                           	opt stack 0
  8661  0017E2                     _USBEnableEndpoint:
  8662                           	opt stack 21
  8663                           
  8664                           ;incstack = 0
  8665                           ;USBEnableEndpoint@ep stored from wreg
  8666  0017E2  6E35               	movwf	USBEnableEndpoint@ep,c
  8667                           
  8668                           ;usb_device.c: 880: unsigned char* p;
  8669                           ;usb_device.c: 884: if(options & 0x04)
  8670  0017E4  A432               	btfss	USBEnableEndpoint@options,2,c
  8671  0017E6  D004               	goto	i2l3062
  8672                           
  8673                           ;usb_device.c: 885: {
  8674                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8675  0017E8  6A2A               	clrf	USBConfigureEndpoint@direction,c
  8676  0017EA  5035               	movf	USBEnableEndpoint@ep,w,c
  8677  0017EC  EC78  F008         	call	_USBConfigureEndpoint
  8678  0017F0                     i2l3062:
  8679                           
  8680                           ;usb_device.c: 887: }
  8681                           ;usb_device.c: 888: if(options & 0x02)
  8682  0017F0  A232               	btfss	USBEnableEndpoint@options,1,c
  8683  0017F2  D005               	goto	i2l3066
  8684                           
  8685                           ;usb_device.c: 889: {
  8686                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8687  0017F4  0E01               	movlw	1
  8688  0017F6  6E2A               	movwf	USBConfigureEndpoint@direction,c
  8689  0017F8  5035               	movf	USBEnableEndpoint@ep,w,c
  8690  0017FA  EC78  F008         	call	_USBConfigureEndpoint
  8691  0017FE                     i2l3066:
  8692                           
  8693                           ;usb_device.c: 891: }
  8694                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8695  0017FE  0E53               	movlw	83
  8696  001800  2435               	addwf	USBEnableEndpoint@ep,w,c
  8697  001802  6E33               	movwf	USBEnableEndpoint@p,c
  8698  001804  6A34               	clrf	USBEnableEndpoint@p+1,c
  8699  001806  0E0F               	movlw	15
  8700  001808  2234               	addwfc	USBEnableEndpoint@p+1,f,c
  8701                           
  8702                           ;usb_device.c: 901: *p = options;
  8703  00180A  C033  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8704  00180E  C034  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8705  001812  C032  FFDF         	movff	USBEnableEndpoint@options,indf2
  8706  001816  0C0F               	retlw	15	;funcret
  8707  001818                     __end_of_USBEnableEndpoint:
  8708                           	opt stack 0
  8709                           tblptru	equ	0xFF8
  8710                           tblptrh	equ	0xFF7
  8711                           tblptrl	equ	0xFF6
  8712                           tablat	equ	0xFF5
  8713                           prodh	equ	0xFF4
  8714                           prodl	equ	0xFF3
  8715                           intcon	equ	0xFF2
  8716                           postinc0	equ	0xFEE
  8717                           wreg	equ	0xFE8
  8718                           indf1	equ	0xFE7
  8719                           postdec1	equ	0xFE5
  8720                           fsr1h	equ	0xFE2
  8721                           fsr1l	equ	0xFE1
  8722                           indf2	equ	0xFDF
  8723                           postinc2	equ	0xFDE
  8724                           postdec2	equ	0xFDD
  8725                           plusw2	equ	0xFDB
  8726                           fsr2h	equ	0xFDA
  8727                           fsr2l	equ	0xFD9
  8728                           status	equ	0xFD8
  8729                           
  8730 ;; *************** function _USBConfigureEndpoint *****************
  8731 ;; Defined at:
  8732 ;;		line 1543 in file "picLibs/usb_device.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  EPNum           1    wreg     unsigned char 
  8735 ;;  direction       1    0[COMRAM] unsigned char 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;  EPNum           1    5[COMRAM] unsigned char 
  8738 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  8739 ;;		 -> BDT(48), 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8749 ;;      Params:         1       0       0       0
  8750 ;;      Locals:         3       0       0       0
  8751 ;;      Temps:          4       0       0       0
  8752 ;;      Totals:         8       0       0       0
  8753 ;;Total ram usage:        8 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_USBEnableEndpoint
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text48
  8763  0010F0                     __ptext48:
  8764                           	opt stack 0
  8765  0010F0                     _USBConfigureEndpoint:
  8766                           	opt stack 21
  8767                           
  8768                           ;incstack = 0
  8769                           ;USBConfigureEndpoint@EPNum stored from wreg
  8770  0010F0  6E2F               	movwf	USBConfigureEndpoint@EPNum,c
  8771                           
  8772                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8773                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8774  0010F2  6A30               	clrf	USBConfigureEndpoint@handle,c
  8775  0010F4  0E02               	movlw	2
  8776  0010F6  6E31               	movwf	USBConfigureEndpoint@handle+1,c
  8777                           
  8778                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8779  0010F8  502A               	movf	USBConfigureEndpoint@direction,w,c
  8780  0010FA  6E2B               	movwf	??_USBConfigureEndpoint& (0+255),c
  8781  0010FC  6A2C               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8782  0010FE  90D8               	bcf	status,0,c
  8783  001100  362B               	rlcf	??_USBConfigureEndpoint,f,c
  8784  001102  362C               	rlcf	??_USBConfigureEndpoint+1,f,c
  8785  001104  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8786  001106  6E2D               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8787  001108  6A2E               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8788  00110A  D824               	call	PL74	;call to abstracted procedure
  8789  00110C  502B               	movf	??_USBConfigureEndpoint,w,c
  8790  00110E  262D               	addwf	??_USBConfigureEndpoint+2,f,c
  8791  001110  502C               	movf	??_USBConfigureEndpoint+1,w,c
  8792  001112  222E               	addwfc	??_USBConfigureEndpoint+3,f,c
  8793  001114  D81F               	call	PL74	;call to abstracted procedure
  8794  001116  502D               	movf	??_USBConfigureEndpoint+2,w,c
  8795  001118  2630               	addwf	USBConfigureEndpoint@handle,f,c
  8796  00111A  502E               	movf	??_USBConfigureEndpoint+3,w,c
  8797  00111C  2231               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8798                           
  8799                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8800  00111E  D821               	call	PL104	;call to abstracted procedure
  8801  001120  9EDF               	bcf	indf2,7,c
  8802                           
  8803                           ;usb_device.c: 1557: if(direction == 0)
  8804  001122  502A               	movf	USBConfigureEndpoint@direction,w,c
  8805  001124  E104               	bnz	i2l3040
  8806                           
  8807                           ;usb_device.c: 1558: {
  8808                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8809  001126  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8810  001128  ECAE  F006         	call	PL90	;call to abstracted procedure
  8811  00112C  D003               	goto	L13
  8812  00112E                     i2l3040:
  8813                           
  8814                           ;usb_device.c: 1561: else
  8815                           ;usb_device.c: 1562: {
  8816                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8817  00112E  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8818  001130  ECA5  F006         	call	PL82	;call to abstracted procedure
  8819  001134                     L13:
  8820  001134  6ED9               	movwf	fsr2l,c
  8821  001136  6ADA               	clrf	fsr2h,c
  8822  001138  C030  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8823  00113C  C031  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8824                           
  8825                           ;usb_device.c: 1564: }
  8826                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8827  001140  D810               	call	PL104	;call to abstracted procedure
  8828  001142  9CDF               	bcf	indf2,6,c
  8829                           
  8830                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8831  001144  EE20 F004          	lfsr	2,4
  8832  001148  5030               	movf	USBConfigureEndpoint@handle,w,c
  8833  00114A  26D9               	addwf	fsr2l,f,c
  8834  00114C  5031               	movf	USBConfigureEndpoint@handle+1,w,c
  8835  00114E  22DA               	addwfc	fsr2h,f,c
  8836  001150  8CDF               	bsf	indf2,6,c
  8837  001152  0012               	return		;funcret
  8838  001154                     __end_of_USBConfigureEndpoint:
  8839                           	opt stack 0
  8840  001154                     PL74:
  8841                           	opt stack 21
  8842  001154  90D8               	bcf	status,0,c
  8843  001156  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8844  001158  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8845  00115A  90D8               	bcf	status,0,c
  8846  00115C  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8847  00115E  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8848  001160  0012               	return	
  8849  001162                     __end_ofPL74:
  8850                           	opt stack 0
  8851  001162                     PL104:
  8852                           	opt stack 21
  8853  001162  C030  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8854  001166  C031  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8855  00116A  0012               	return	
  8856  00116C                     __end_ofPL104:
  8857                           	opt stack 0
  8858                           tblptru	equ	0xFF8
  8859                           tblptrh	equ	0xFF7
  8860                           tblptrl	equ	0xFF6
  8861                           tablat	equ	0xFF5
  8862                           prodh	equ	0xFF4
  8863                           prodl	equ	0xFF3
  8864                           intcon	equ	0xFF2
  8865                           postinc0	equ	0xFEE
  8866                           wreg	equ	0xFE8
  8867                           indf1	equ	0xFE7
  8868                           postdec1	equ	0xFE5
  8869                           fsr1h	equ	0xFE2
  8870                           fsr1l	equ	0xFE1
  8871                           indf2	equ	0xFDF
  8872                           postinc2	equ	0xFDE
  8873                           postdec2	equ	0xFDD
  8874                           plusw2	equ	0xFDB
  8875                           fsr2h	equ	0xFDA
  8876                           fsr2l	equ	0xFD9
  8877                           status	equ	0xFD8
  8878                           
  8879 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8880 ;; Defined at:
  8881 ;;		line 50 in file "picLibs/app_led_usb_status.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      void 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8895 ;;      Params:         0       0       0       0
  8896 ;;      Locals:         0       0       0       0
  8897 ;;      Temps:          0       0       0       0
  8898 ;;      Totals:         0       0       0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    1
  8902 ;; This function calls:
  8903 ;;		_LED_Off
  8904 ;;		_LED_On
  8905 ;; This function is called by:
  8906 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910                           	psect	text49
  8911  00133A                     __ptext49:
  8912                           	opt stack 0
  8913  00133A                     _APP_LEDUpdateUSBStatus:
  8914                           	opt stack 22
  8915                           
  8916                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  8917                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  8918                           
  8919                           ;incstack = 0
  8920  00133A  A264               	btfss	3940,1,c	;volatile
  8921  00133C  D02E               	goto	i2l3150
  8922                           
  8923                           ;app_led_usb_status.c: 55: {
  8924                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  8925  00133E  0E01               	movlw	1
  8926  001340  EF9C  F00C         	goto	_LED_Off
  8927  001344                     i2l3124:
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  8931  001344  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8932  001346  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8933  001348  E104               	bnz	i2l3128
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;app_led_usb_status.c: 66: {
  8937                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  8938  00134A  0E01               	movlw	1
  8939  00134C  EC86  F00C         	call	_LED_On
  8940                           
  8941                           ;app_led_usb_status.c: 68: }
  8942  001350  D029               	goto	i2l3152
  8943  001352                     i2l3128:
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  8947  001352  0E4B               	movlw	75
  8948  001354  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8949  001356  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8950  001358  E104               	bnz	i2l3132
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;app_led_usb_status.c: 70: {
  8954                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  8955  00135A  0E01               	movlw	1
  8956  00135C  EC9C  F00C         	call	_LED_Off
  8957                           
  8958                           ;app_led_usb_status.c: 72: }
  8959  001360  D021               	goto	i2l3152
  8960  001362                     i2l3132:
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  8964  001362  501A               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8965  001364  E103               	bnz	i2u186_40
  8966  001366  0E97               	movlw	151
  8967  001368  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8968  00136A  E31C               	bnc	i2l3152
  8969  00136C                     i2u186_40:
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;app_led_usb_status.c: 74: {
  8973                           ;app_led_usb_status.c: 75: ledCount = 0;
  8974  00136C  6A19               	clrf	APP_LEDUpdateUSBStatus@ledCount,c
  8975  00136E  6A1A               	clrf	APP_LEDUpdateUSBStatus@ledCount+1,c
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;app_led_usb_status.c: 76: }
  8979                           ;app_led_usb_status.c: 77: break;
  8980  001370  D019               	goto	i2l3152
  8981  001372                     i2l3136:
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  8985  001372  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8986  001374  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8987  001376  E104               	bnz	i2l3140
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;app_led_usb_status.c: 83: {
  8991                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  8992  001378  0E01               	movlw	1
  8993  00137A  EC86  F00C         	call	_LED_On
  8994                           
  8995                           ;app_led_usb_status.c: 85: }
  8996  00137E  D012               	goto	i2l3152
  8997  001380                     i2l3140:
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  9001  001380  0E32               	movlw	50
  9002  001382  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9003  001384  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9004  001386  E104               	bnz	i2l3144
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;app_led_usb_status.c: 87: {
  9008                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  9009  001388  0E01               	movlw	1
  9010  00138A  EC9C  F00C         	call	_LED_Off
  9011                           
  9012                           ;app_led_usb_status.c: 89: }
  9013  00138E  D00A               	goto	i2l3152
  9014  001390                     i2l3144:
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  9018  001390  0EB7               	movlw	183
  9019  001392  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9020  001394  0E03               	movlw	3
  9021  001396  581A               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9022  001398  D7E8               	goto	L14
  9023  00139A                     i2l3150:
  9024  00139A  0100               	movlb	0	; () banked
  9025  00139C  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  9026                           
  9027                           ; Switch size 1, requested type "space"
  9028                           ; Number of cases is 1, Range of values is 32 to 32
  9029                           ; switch strategies available:
  9030                           ; Name         Instructions Cycles
  9031                           ; simple_byte            4     3 (average)
  9032                           ;	Chosen strategy is simple_byte
  9033  00139E  0A20               	xorlw	32	; case 32
  9034  0013A0  E0D1               	bz	i2l3124
  9035  0013A2  D7E7               	goto	i2l3136
  9036  0013A4                     i2l3152:
  9037                           
  9038                           ;app_led_usb_status.c: 98: ledCount++;
  9039  0013A4  4A19               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
  9040  0013A6  2A1A               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
  9041  0013A8  0012               	return		;funcret
  9042  0013AA                     __end_of_APP_LEDUpdateUSBStatus:
  9043                           	opt stack 0
  9044                           tblptru	equ	0xFF8
  9045                           tblptrh	equ	0xFF7
  9046                           tblptrl	equ	0xFF6
  9047                           tablat	equ	0xFF5
  9048                           prodh	equ	0xFF4
  9049                           prodl	equ	0xFF3
  9050                           intcon	equ	0xFF2
  9051                           postinc0	equ	0xFEE
  9052                           wreg	equ	0xFE8
  9053                           indf1	equ	0xFE7
  9054                           postdec1	equ	0xFE5
  9055                           fsr1h	equ	0xFE2
  9056                           fsr1l	equ	0xFE1
  9057                           indf2	equ	0xFDF
  9058                           postinc2	equ	0xFDE
  9059                           postdec2	equ	0xFDD
  9060                           plusw2	equ	0xFDB
  9061                           fsr2h	equ	0xFDA
  9062                           fsr2l	equ	0xFD9
  9063                           status	equ	0xFD8
  9064                           
  9065 ;; *************** function _LED_On *****************
  9066 ;; Defined at:
  9067 ;;		line 59 in file "picLibs/leds.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  led             1    wreg     enum E2
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;  led             1    0[COMRAM] enum E2
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9081 ;;      Params:         0       0       0       0
  9082 ;;      Locals:         1       0       0       0
  9083 ;;      Temps:          0       0       0       0
  9084 ;;      Totals:         1       0       0       0
  9085 ;;Total ram usage:        1 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_APP_LEDUpdateUSBStatus
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text50
  9095  00190C                     __ptext50:
  9096                           	opt stack 0
  9097  00190C                     _LED_On:
  9098                           	opt stack 22
  9099                           
  9100                           ;incstack = 0
  9101                           ;LED_On@led stored from wreg
  9102  00190C  6E2A               	movwf	LED_On@led,c
  9103                           
  9104                           ;leds.c: 61: switch(led)
  9105  00190E  D008               	goto	i2l3056
  9106  001910                     i2l246:
  9107                           
  9108                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9109  001910  808B               	bsf	3979,0,c	;volatile
  9110                           
  9111                           ;leds.c: 65: break;
  9112  001912  0012               	return	
  9113  001914                     i2l248:
  9114                           
  9115                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9116  001914  828B               	bsf	3979,1,c	;volatile
  9117                           
  9118                           ;leds.c: 69: break;
  9119  001916  0012               	return	
  9120  001918                     i2l249:
  9121                           
  9122                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9123  001918  848B               	bsf	3979,2,c	;volatile
  9124                           
  9125                           ;leds.c: 73: break;
  9126  00191A  0012               	return	
  9127  00191C                     i2l250:
  9128                           
  9129                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9130  00191C  868B               	bsf	3979,3,c	;volatile
  9131                           
  9132                           ;leds.c: 77: break;
  9133  00191E  0012               	return	
  9134  001920                     i2l3056:
  9135  001920  502A               	movf	LED_On@led,w,c
  9136                           
  9137                           ; Switch size 1, requested type "space"
  9138                           ; Number of cases is 5, Range of values is 0 to 4
  9139                           ; switch strategies available:
  9140                           ; Name         Instructions Cycles
  9141                           ; simple_byte           16     9 (average)
  9142                           ;	Chosen strategy is simple_byte
  9143  001922  B4D8               	btfsc	status,2,c
  9144  001924  0012               	return	
  9145  001926  0A01               	xorlw	1	; case 1
  9146  001928  E0F3               	bz	i2l246
  9147  00192A  0A03               	xorlw	3	; case 2
  9148  00192C  E0F3               	bz	i2l248
  9149  00192E  0A01               	xorlw	1	; case 3
  9150  001930  E0F3               	bz	i2l249
  9151  001932  0A07               	xorlw	7	; case 4
  9152  001934  E0F3               	bz	i2l250
  9153  001936  0012               	return		;funcret
  9154  001938                     __end_of_LED_On:
  9155                           	opt stack 0
  9156                           tblptru	equ	0xFF8
  9157                           tblptrh	equ	0xFF7
  9158                           tblptrl	equ	0xFF6
  9159                           tablat	equ	0xFF5
  9160                           prodh	equ	0xFF4
  9161                           prodl	equ	0xFF3
  9162                           intcon	equ	0xFF2
  9163                           postinc0	equ	0xFEE
  9164                           wreg	equ	0xFE8
  9165                           indf1	equ	0xFE7
  9166                           postdec1	equ	0xFE5
  9167                           fsr1h	equ	0xFE2
  9168                           fsr1l	equ	0xFE1
  9169                           indf2	equ	0xFDF
  9170                           postinc2	equ	0xFDE
  9171                           postdec2	equ	0xFDD
  9172                           plusw2	equ	0xFDB
  9173                           fsr2h	equ	0xFDA
  9174                           fsr2l	equ	0xFD9
  9175                           status	equ	0xFD8
  9176                           
  9177 ;; *************** function _LED_Off *****************
  9178 ;; Defined at:
  9179 ;;		line 100 in file "picLibs/leds.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  led             1    wreg     enum E2
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  led             1    0[COMRAM] enum E2
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      void 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9193 ;;      Params:         0       0       0       0
  9194 ;;      Locals:         1       0       0       0
  9195 ;;      Temps:          0       0       0       0
  9196 ;;      Totals:         1       0       0       0
  9197 ;;Total ram usage:        1 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_APP_LEDUpdateUSBStatus
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text51
  9207  001938                     __ptext51:
  9208                           	opt stack 0
  9209  001938                     _LED_Off:
  9210                           	opt stack 22
  9211                           
  9212                           ;incstack = 0
  9213                           ;LED_Off@led stored from wreg
  9214  001938  6E2A               	movwf	LED_Off@led,c
  9215                           
  9216                           ;leds.c: 102: switch(led)
  9217  00193A  D008               	goto	i2l3050
  9218  00193C                     i2l256:
  9219                           
  9220                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9221  00193C  908B               	bcf	3979,0,c	;volatile
  9222                           
  9223                           ;leds.c: 106: break;
  9224  00193E  0012               	return	
  9225  001940                     i2l258:
  9226                           
  9227                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9228  001940  928B               	bcf	3979,1,c	;volatile
  9229                           
  9230                           ;leds.c: 110: break;
  9231  001942  0012               	return	
  9232  001944                     i2l259:
  9233                           
  9234                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9235  001944  948B               	bcf	3979,2,c	;volatile
  9236                           
  9237                           ;leds.c: 114: break;
  9238  001946  0012               	return	
  9239  001948                     i2l260:
  9240                           
  9241                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9242  001948  968B               	bcf	3979,3,c	;volatile
  9243                           
  9244                           ;leds.c: 118: break;
  9245  00194A  0012               	return	
  9246  00194C                     i2l3050:
  9247  00194C  502A               	movf	LED_Off@led,w,c
  9248                           
  9249                           ; Switch size 1, requested type "space"
  9250                           ; Number of cases is 5, Range of values is 0 to 4
  9251                           ; switch strategies available:
  9252                           ; Name         Instructions Cycles
  9253                           ; simple_byte           16     9 (average)
  9254                           ;	Chosen strategy is simple_byte
  9255  00194E  B4D8               	btfsc	status,2,c
  9256  001950  0012               	return	
  9257  001952  0A01               	xorlw	1	; case 1
  9258  001954  E0F3               	bz	i2l256
  9259  001956  0A03               	xorlw	3	; case 2
  9260  001958  E0F3               	bz	i2l258
  9261  00195A  0A01               	xorlw	1	; case 3
  9262  00195C  E0F3               	bz	i2l259
  9263  00195E  0A07               	xorlw	7	; case 4
  9264  001960  E0F3               	bz	i2l260
  9265  001962  0012               	return		;funcret
  9266  001964                     __end_of_LED_Off:
  9267                           	opt stack 0
  9268                           tblptru	equ	0xFF8
  9269                           tblptrh	equ	0xFF7
  9270                           tblptrl	equ	0xFF6
  9271                           tablat	equ	0xFF5
  9272                           prodh	equ	0xFF4
  9273                           prodl	equ	0xFF3
  9274                           intcon	equ	0xFF2
  9275                           postinc0	equ	0xFEE
  9276                           wreg	equ	0xFE8
  9277                           indf1	equ	0xFE7
  9278                           postdec1	equ	0xFE5
  9279                           fsr1h	equ	0xFE2
  9280                           fsr1l	equ	0xFE1
  9281                           indf2	equ	0xFDF
  9282                           postinc2	equ	0xFDE
  9283                           postdec2	equ	0xFDD
  9284                           plusw2	equ	0xFDB
  9285                           fsr2h	equ	0xFDA
  9286                           fsr2l	equ	0xFD9
  9287                           status	equ	0xFD8
  9288                           
  9289 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  9290 ;; Defined at:
  9291 ;;		line 53 in file "picLibs/app_device_cdc_basic.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;		None
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;		None
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2
  9300 ;; Tracked objects:
  9301 ;;		On entry : 3F/0
  9302 ;;		On exit  : 3F/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9305 ;;      Params:         0       0       0       0
  9306 ;;      Locals:         0       0       0       0
  9307 ;;      Temps:          0       0       0       0
  9308 ;;      Totals:         0       0       0       0
  9309 ;;Total ram usage:        0 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9315 ;; This function uses a non-reentrant model
  9316 ;;
  9317                           
  9318                           	psect	text52
  9319  001AA6                     __ptext52:
  9320                           	opt stack 0
  9321  001AA6                     _APP_DeviceCDCBasicDemoInitialize:
  9322                           	opt stack 23
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;app_device_cdc_basic.c: 55: line_coding.bCharFormat = 0;
  9326                           
  9327                           ;incstack = 0
  9328  001AA6  6B8E               	clrf	(_line_coding+4)& (0+255),b
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;app_device_cdc_basic.c: 56: line_coding.bDataBits = 8;
  9332  001AA8  0E08               	movlw	8
  9333  001AAA  6F90               	movwf	(_line_coding+6)& (0+255),b
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;app_device_cdc_basic.c: 57: line_coding.bParityType = 0;
  9337  001AAC  6B8F               	clrf	(_line_coding+5)& (0+255),b
  9338                           
  9339                           ;app_device_cdc_basic.c: 58: line_coding.dwDTERate = 9600;
  9340  001AAE  0E80               	movlw	128
  9341  001AB0  6F8A               	movwf	_line_coding& (0+255),b
  9342  001AB2  0E25               	movlw	37
  9343  001AB4  6F8B               	movwf	(_line_coding+1)& (0+255),b
  9344  001AB6  0E00               	movlw	0
  9345  001AB8  6B8C               	clrf	(_line_coding+2)& (0+255),b
  9346  001ABA  6B8D               	clrf	(_line_coding+3)& (0+255),b
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;app_device_cdc_basic.c: 60: buttonPressed = 0;
  9350  001ABC  6B7F               	clrf	_buttonPressed& (0+255),b
  9351                           
  9352                           ; BSR set to: 0
  9353  001ABE  0012               	return		;funcret
  9354  001AC0                     __end_of_APP_DeviceCDCBasicDemoInitialize:
  9355                           	opt stack 0
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodh	equ	0xFF4
  9361                           prodl	equ	0xFF3
  9362                           intcon	equ	0xFF2
  9363                           postinc0	equ	0xFEE
  9364                           wreg	equ	0xFE8
  9365                           indf1	equ	0xFE7
  9366                           postdec1	equ	0xFE5
  9367                           fsr1h	equ	0xFE2
  9368                           fsr1l	equ	0xFE1
  9369                           indf2	equ	0xFDF
  9370                           postinc2	equ	0xFDE
  9371                           postdec2	equ	0xFDD
  9372                           plusw2	equ	0xFDB
  9373                           fsr2h	equ	0xFDA
  9374                           fsr2l	equ	0xFD9
  9375                           status	equ	0xFD8
  9376                           
  9377 ;; *************** function _USBCtrlTrfOutHandler *****************
  9378 ;; Defined at:
  9379 ;;		line 2538 in file "picLibs/usb_device.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;		None
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  1    wreg      void 
  9386 ;; Registers used:
  9387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9388 ;; Tracked objects:
  9389 ;;		On entry : 3F/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9393 ;;      Params:         0       0       0       0
  9394 ;;      Locals:         0       0       0       0
  9395 ;;      Temps:          0       0       0       0
  9396 ;;      Totals:         0       0       0       0
  9397 ;;Total ram usage:        0 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    2
  9400 ;; This function calls:
  9401 ;;		_USBCtrlTrfRxService
  9402 ;; This function is called by:
  9403 ;;		_USBCtrlEPService
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text53
  9408  0019FA                     __ptext53:
  9409                           	opt stack 0
  9410  0019FA                     _USBCtrlTrfOutHandler:
  9411                           	opt stack 21
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;incstack = 0
  9418  0019FA  0E02               	movlw	2
  9419  0019FC  1826               	xorwf	_controlTransferState,w,c	;volatile
  9420  0019FE  E102               	bnz	i2l651
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;usb_device.c: 2541: {
  9424                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9425  001A00  EFA2  F005         	goto	_USBCtrlTrfRxService	;wreg free
  9426  001A04                     i2l651:
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;usb_device.c: 2544: else
  9430                           ;usb_device.c: 2545: {
  9431                           ;usb_device.c: 2548: controlTransferState = 0;
  9432  001A04  6A26               	clrf	_controlTransferState,c	;volatile
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9436  001A06  5022               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9437  001A08  E106               	bnz	i2l653
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;usb_device.c: 2556: {
  9441                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9442                           
  9443                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9447  001A0A  EC92  F007         	call	PL2	;call to abstracted procedure
  9448  001A0E  0E0C               	movlw	12
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9452  001A10  ECED  F005         	call	PL10	;call to abstracted procedure
  9453                           
  9454                           ;usb_device.c: 2561: }
  9455  001A14  0C00               	retlw	0
  9456  001A16                     i2l653:
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;usb_device.c: 2562: else
  9460                           ;usb_device.c: 2563: {
  9461                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9462  001A16  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9463  001A18  0012               	return		;funcret
  9464  001A1A                     __end_of_USBCtrlTrfOutHandler:
  9465                           	opt stack 0
  9466                           tblptru	equ	0xFF8
  9467                           tblptrh	equ	0xFF7
  9468                           tblptrl	equ	0xFF6
  9469                           tablat	equ	0xFF5
  9470                           prodh	equ	0xFF4
  9471                           prodl	equ	0xFF3
  9472                           intcon	equ	0xFF2
  9473                           postinc0	equ	0xFEE
  9474                           wreg	equ	0xFE8
  9475                           indf1	equ	0xFE7
  9476                           postdec1	equ	0xFE5
  9477                           fsr1h	equ	0xFE2
  9478                           fsr1l	equ	0xFE1
  9479                           indf2	equ	0xFDF
  9480                           postinc2	equ	0xFDE
  9481                           postdec2	equ	0xFDD
  9482                           plusw2	equ	0xFDB
  9483                           fsr2h	equ	0xFDA
  9484                           fsr2l	equ	0xFD9
  9485                           status	equ	0xFD8
  9486                           
  9487 ;; *************** function _USBCtrlTrfRxService *****************
  9488 ;; Defined at:
  9489 ;;		line 1852 in file "picLibs/usb_device.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;		None
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  byteToRead      1    1[COMRAM] unsigned char 
  9494 ;;  i               1    0[COMRAM] unsigned char 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 3F/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9504 ;;      Params:         0       0       0       0
  9505 ;;      Locals:         2       0       0       0
  9506 ;;      Temps:          0       0       0       0
  9507 ;;      Totals:         2       0       0       0
  9508 ;;Total ram usage:        2 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    1
  9511 ;; This function calls:
  9512 ;;		_USBCtrlEPAllowStatusStage
  9513 ;; This function is called by:
  9514 ;;		_USBCtrlTrfOutHandler
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text54
  9519  000B44                     __ptext54:
  9520                           	opt stack 0
  9521  000B44                     _USBCtrlTrfRxService:
  9522                           	opt stack 21
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;usb_device.c: 1854: uint8_t byteToRead;
  9526                           ;usb_device.c: 1855: uint8_t i;
  9527                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9528                           
  9529                           ;incstack = 0
  9530  000B44  EE20 F001          	lfsr	2,1
  9531  000B48  EC27  F009         	call	PL70	;call to abstracted procedure
  9532  000B4C  50DF               	movf	indf2,w,c
  9533  000B4E  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9537  000B50  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9538  000B52  5C05               	subwf	_outPipes+4,w,c	;volatile
  9539  000B54  0E00               	movlw	0
  9540  000B56  5806               	subwfb	_outPipes+5,w,c	;volatile
  9541  000B58  E202               	bc	i2l3592
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;usb_device.c: 1866: {
  9545                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9546  000B5A  C005  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9547  000B5E                     i2l3592:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;usb_device.c: 1868: }
  9551                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9552  000B5E  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9553  000B60  5E05               	subwf	_outPipes+4,f,c	;volatile
  9554  000B62  0E00               	movlw	0
  9555  000B64  5A06               	subwfb	_outPipes+5,f,c	;volatile
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9559  000B66  6A2A               	clrf	USBCtrlTrfRxService@i,c
  9560  000B68  D00A               	goto	i2l3602
  9561  000B6A                     i2l3596:
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;usb_device.c: 1875: {
  9565                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9566  000B6A  0E38               	movlw	56
  9567  000B6C  242A               	addwf	USBCtrlTrfRxService@i,w,c
  9568  000B6E  D842               	call	PL108	;call to abstracted procedure
  9569  000B70  5001               	movf	_outPipes,w,c	;volatile
  9570  000B72  6EE1               	movwf	fsr1l,c
  9571  000B74  6AE2               	clrf	fsr1h,c
  9572  000B76  CFDF FFE7          	movff	indf2,indf1
  9573                           
  9574                           ; BSR set to: 0
  9575  000B7A  2A01               	incf	_outPipes,f,c	;volatile
  9576                           
  9577                           ; BSR set to: 0
  9578  000B7C  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  9579  000B7E                     i2l3602:
  9580                           
  9581                           ; BSR set to: 0
  9582  000B7E  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9583  000B80  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  9584  000B82  E3F3               	bnc	i2l3596
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;usb_device.c: 1877: }
  9588                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9589  000B84  5005               	movf	_outPipes+4,w,c	;volatile
  9590  000B86  1006               	iorwf	_outPipes+5,w,c	;volatile
  9591  000B88  E014               	bz	i2l3618
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;usb_device.c: 1882: {
  9595                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9596  000B8A  EE20 F001          	lfsr	2,1
  9597  000B8E  D81B               	call	PL4	;call to abstracted procedure
  9598                           
  9599                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9600  000B90  D81F               	call	PL6	;call to abstracted procedure
  9601  000B92  D819               	call	PL4	;call to abstracted procedure
  9602  000B94  0E38               	movlw	56
  9603  000B96  EC23  F009         	call	PL62	;call to abstracted procedure
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9607  000B9A  EC3B  F00C         	call	PL28	;call to abstracted procedure
  9608  000B9E  BCDF               	btfsc	indf2,6,c
  9609  000BA0  D004               	goto	i2l3614
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;usb_device.c: 1886: {
  9613                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9614  000BA2  D823               	call	PL12	;call to abstracted procedure
  9615  000BA4  0E48               	movlw	72
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9619  000BA6  D819               	call	PL10	;call to abstracted procedure
  9620                           
  9621                           ;usb_device.c: 1889: }
  9622  000BA8  0C00               	retlw	0
  9623  000BAA                     i2l3614:
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;usb_device.c: 1890: else
  9627                           ;usb_device.c: 1891: {
  9628                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9629  000BAA  D81F               	call	PL12	;call to abstracted procedure
  9630  000BAC  0E08               	movlw	8
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9634  000BAE  D815               	call	PL10	;call to abstracted procedure
  9635  000BB0  0C00               	retlw	0
  9636  000BB2                     i2l3618:
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;usb_device.c: 1896: else
  9640                           ;usb_device.c: 1897: {
  9641                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9642                           
  9643                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9647  000BB2  EC92  F007         	call	PL2	;call to abstracted procedure
  9648  000BB6  0E04               	movlw	4
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9652  000BB8  D810               	call	PL10	;call to abstracted procedure
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;usb_device.c: 1926: }
  9656                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;usb_device.c: 1915: {
  9660                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9661  000BBA  9E04               	bcf	_outPipes+3,7,c	;volatile
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9665  000BBC  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9666  000BBE  B4D8               	btfsc	status,2,c
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;usb_device.c: 1942: {
  9670                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9671  000BC0  ECF1  F008         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9672  000BC4  0012               	return		;funcret
  9673  000BC6                     __end_of_USBCtrlTrfRxService:
  9674                           	opt stack 0
  9675  000BC6                     PL4:
  9676                           	opt stack 20
  9677  000BC6  5015               	movf	_pBDTEntryEP0OutNext,w,c
  9678  000BC8  26D9               	addwf	fsr2l,f,c
  9679  000BCA  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  9680  000BCC  22DA               	addwfc	fsr2h,f,c
  9681  000BCE  0012               	return	
  9682  000BD0                     __end_ofPL4:
  9683                           	opt stack 0
  9684  000BD0                     PL6:
  9685                           	opt stack 20
  9686  000BD0  0E08               	movlw	8
  9687  000BD2  6EDF               	movwf	indf2,c
  9688  000BD4  EE20 F002          	lfsr	2,2
  9689  000BD8  0C08               	retlw	8
  9690  000BDA                     __end_ofPL6:
  9691                           	opt stack 0
  9692  000BDA                     PL10:
  9693                           	opt stack 20
  9694  000BDA  6EDF               	movwf	indf2,c
  9695  000BDC  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9696  000BE0  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9697  000BE4  0E00               	movlw	0
  9698  000BE6  8EDB               	bsf	plusw2,7,c
  9699  000BE8  0C00               	retlw	0
  9700  000BEA                     __end_ofPL10:
  9701                           	opt stack 0
  9702  000BEA                     PL12:
  9703                           	opt stack 17
  9704  000BEA  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9705  000BEE  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9706  000BF2  0012               	return	
  9707  000BF4                     __end_ofPL12:
  9708                           	opt stack 0
  9709  000BF4                     PL108:
  9710                           	opt stack 18
  9711  000BF4  6ED9               	movwf	fsr2l,c
  9712  000BF6  6ADA               	clrf	fsr2h,c
  9713  000BF8  0E02               	movlw	2
  9714  000BFA  22DA               	addwfc	fsr2h,f,c
  9715  000BFC  0C02               	retlw	2
  9716  000BFE                     __end_ofPL108:
  9717                           	opt stack 0
  9718                           tblptru	equ	0xFF8
  9719                           tblptrh	equ	0xFF7
  9720                           tblptrl	equ	0xFF6
  9721                           tablat	equ	0xFF5
  9722                           prodh	equ	0xFF4
  9723                           prodl	equ	0xFF3
  9724                           intcon	equ	0xFF2
  9725                           postinc0	equ	0xFEE
  9726                           wreg	equ	0xFE8
  9727                           indf1	equ	0xFE7
  9728                           postdec1	equ	0xFE5
  9729                           fsr1h	equ	0xFE2
  9730                           fsr1l	equ	0xFE1
  9731                           indf2	equ	0xFDF
  9732                           postinc2	equ	0xFDE
  9733                           postdec2	equ	0xFDD
  9734                           plusw2	equ	0xFDB
  9735                           fsr2h	equ	0xFDA
  9736                           fsr2l	equ	0xFD9
  9737                           status	equ	0xFD8
  9738                           
  9739 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9740 ;; Defined at:
  9741 ;;		line 1416 in file "picLibs/usb_device.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;		None
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;		None
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      void 
  9748 ;; Registers used:
  9749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9755 ;;      Params:         0       0       0       0
  9756 ;;      Locals:         0       0       0       0
  9757 ;;      Temps:          0       0       0       0
  9758 ;;      Totals:         0       0       0       0
  9759 ;;Total ram usage:        0 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; This function calls:
  9762 ;;		Nothing
  9763 ;; This function is called by:
  9764 ;;		_USBDeviceTasks
  9765 ;;		_USBCtrlEPServiceComplete
  9766 ;;		_USBCtrlTrfRxService
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text55
  9771  0011E2                     __ptext55:
  9772                           	opt stack 0
  9773  0011E2                     _USBCtrlEPAllowStatusStage:
  9774                           	opt stack 21
  9775                           
  9776                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9777                           
  9778                           ;incstack = 0
  9779  0011E2  501F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  9780  0011E4  A4D8               	btfss	status,2,c
  9781  0011E6  0012               	return	
  9782                           
  9783                           ;usb_device.c: 1424: {
  9784                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9785  0011E8  0E01               	movlw	1
  9786  0011EA  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9787                           
  9788                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9789  0011EC  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  9790  0011EE  A4D8               	btfss	status,2,c
  9791  0011F0  0012               	return	
  9792                           
  9793                           ;usb_device.c: 1427: {
  9794                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9795  0011F2  0E01               	movlw	1
  9796  0011F4  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9797                           
  9798                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9799  0011F6  0E02               	movlw	2
  9800  0011F8  1826               	xorwf	_controlTransferState,w,c	;volatile
  9801  0011FA  E10A               	bnz	i2l3318
  9802                           
  9803                           ;usb_device.c: 1433: {
  9804                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9805  0011FC  EE20 F001          	lfsr	2,1
  9806  001200  ECFE  F006         	call	PL64	;call to abstracted procedure
  9807  001204  6ADF               	clrf	indf2,c
  9808                           
  9809                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9810  001206  EC27  F008         	call	PL16	;call to abstracted procedure
  9811  00120A  0E48               	movlw	72
  9812                           
  9813                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9814                           
  9815                           ;usb_device.c: 1437: }
  9816  00120C  EF1F  F008         	goto	PL8	;call to abstracted procedure
  9817  001210                     i2l3318:
  9818                           
  9819                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9820  001210  0426               	decf	_controlTransferState,w,c	;volatile
  9821  001212  A4D8               	btfss	status,2,c
  9822  001214  0012               	return	
  9823                           
  9824                           ;usb_device.c: 1439: {
  9825                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9826  001216  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9827                           
  9828                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9829  001218  EE20 F001          	lfsr	2,1
  9830  00121C  D818               	call	PL70	;call to abstracted procedure
  9831                           
  9832                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  9833  00121E  ECE8  F005         	call	PL6	;call to abstracted procedure
  9834  001222  D815               	call	PL70	;call to abstracted procedure
  9835  001224  0E30               	movlw	48
  9836  001226  D80F               	call	PL62	;call to abstracted procedure
  9837                           
  9838                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9839  001228  EC3B  F00C         	call	PL28	;call to abstracted procedure
  9840  00122C  0E04               	movlw	4
  9841  00122E  6EDF               	movwf	indf2,c
  9842                           
  9843                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9844  001230  EC3B  F00C         	call	PL28	;call to abstracted procedure
  9845  001234  0E00               	movlw	0
  9846  001236  8EDB               	bsf	plusw2,7,c
  9847                           
  9848                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9849  001238  0E01               	movlw	1
  9850  00123A  6E22               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9851                           
  9852                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9853                           
  9854                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9855                           
  9856                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9857  00123C  EC92  F007         	call	PL2	;call to abstracted procedure
  9858  001240  0E80               	movlw	128
  9859  001242  6EDF               	movwf	indf2,c
  9860  001244  0C80               	retlw	128
  9861  001246                     __end_of_USBCtrlEPAllowStatusStage:
  9862                           	opt stack 0
  9863  001246                     PL62:
  9864                           	opt stack 21
  9865  001246  6EDE               	movwf	postinc2,c
  9866  001248  0E02               	movlw	2
  9867  00124A  6EDD               	movwf	postdec2,c
  9868  00124C  0C02               	retlw	2
  9869  00124E                     __end_ofPL62:
  9870                           	opt stack 0
  9871  00124E                     PL70:
  9872                           	opt stack 17
  9873  00124E  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
  9874  001250  26D9               	addwf	fsr2l,f,c
  9875  001252  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9876  001254  22DA               	addwfc	fsr2h,f,c
  9877  001256  0012               	return	
  9878  001258                     __end_ofPL70:
  9879                           	opt stack 0
  9880                           tblptru	equ	0xFF8
  9881                           tblptrh	equ	0xFF7
  9882                           tblptrl	equ	0xFF6
  9883                           tablat	equ	0xFF5
  9884                           prodh	equ	0xFF4
  9885                           prodl	equ	0xFF3
  9886                           intcon	equ	0xFF2
  9887                           postinc0	equ	0xFEE
  9888                           wreg	equ	0xFE8
  9889                           indf1	equ	0xFE7
  9890                           postdec1	equ	0xFE5
  9891                           fsr1h	equ	0xFE2
  9892                           fsr1l	equ	0xFE1
  9893                           indf2	equ	0xFDF
  9894                           postinc2	equ	0xFDE
  9895                           postdec2	equ	0xFDD
  9896                           plusw2	equ	0xFDB
  9897                           fsr2h	equ	0xFDA
  9898                           fsr2l	equ	0xFD9
  9899                           status	equ	0xFD8
  9900                           
  9901 ;; *************** function _USBCtrlTrfInHandler *****************
  9902 ;; Defined at:
  9903 ;;		line 2592 in file "picLibs/usb_device.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;		None
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  lastDTS         1    1[COMRAM] unsigned char 
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9912 ;; Tracked objects:
  9913 ;;		On entry : 3F/0
  9914 ;;		On exit  : 3F/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9917 ;;      Params:         0       0       0       0
  9918 ;;      Locals:         1       0       0       0
  9919 ;;      Temps:          0       0       0       0
  9920 ;;      Totals:         1       0       0       0
  9921 ;;Total ram usage:        1 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    1
  9924 ;; This function calls:
  9925 ;;		_USBCtrlTrfTxService
  9926 ;; This function is called by:
  9927 ;;		_USBCtrlEPService
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	text56
  9932  000FE2                     __ptext56:
  9933                           	opt stack 0
  9934  000FE2                     _USBCtrlTrfInHandler:
  9935                           	opt stack 0
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;usb_device.c: 2594: uint8_t lastDTS;
  9939                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9940                           
  9941                           ;incstack = 0
  9942  000FE2  D835               	call	PL16	;call to abstracted procedure
  9943  000FE4  0E00               	movlw	0
  9944  000FE6  BCDF               	btfsc	indf2,6,c
  9945  000FE8  0E01               	movlw	1
  9946  000FEA  6E2B               	movwf	USBCtrlTrfInHandler@lastDTS,c
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9950  000FEC  0E04               	movlw	4
  9951  000FEE  1A0F               	xorwf	_pBDTEntryIn,f,c
  9952  000FF0  5010               	movf	_pBDTEntryIn+1,w,c
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9956  000FF2  0E08               	movlw	8
  9957  000FF4  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  9958  000FF6  E10B               	bnz	i2l3800
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;usb_device.c: 2605: {
  9962                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9963  000FF8  0102               	movlb	2	; () banked
  9964  000FFA  5132               	movf	50,w,b	;volatile
  9965  000FFC  0B7F               	andlw	127
  9966  000FFE  010F               	movlb	15	; () banked
  9967  001000  6F5C               	movwf	92,b	;volatile
  9968                           
  9969                           ; BSR set to: 15
  9970                           ;usb_device.c: 2607: if(UADDR != 0u)
  9971  001002  515C               	movf	92,w,b
  9972                           
  9973                           ; BSR set to: 15
  9974                           ;usb_device.c: 2608: {
  9975                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9976  001004  0E10               	movlw	16
  9977  001006  B4D8               	btfsc	status,2,c
  9978                           
  9979                           ; BSR set to: 15
  9980                           ;usb_device.c: 2611: else
  9981                           ;usb_device.c: 2612: {
  9982                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9983  001008  0E04               	movlw	4
  9984                           
  9985                           ;usb_device.c: 2610: }
  9986  00100A  0100               	movlb	0	; () banked
  9987  00100C  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  9988  00100E                     i2l3800:
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;usb_device.c: 2614: }
  9992                           ;usb_device.c: 2615: }
  9993                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9994  00100E  0426               	decf	_controlTransferState,w,c	;volatile
  9995  001010  E112               	bnz	i2l661
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;usb_device.c: 2619: {
  9999                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 10000  001012  D828               	call	PL44	;call to abstracted procedure
 10001  001014  D821               	call	PL38	;call to abstracted procedure
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10005  001016  ECB7  F006         	call	_USBCtrlTrfTxService	;wreg free
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10009  00101A  0E02               	movlw	2
 10010  00101C  1827               	xorwf	_shortPacketStatus,w,c	;volatile
 10011  00101E  E103               	bnz	i2l3812
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;usb_device.c: 2628: {
 10015                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10016  001020  D816               	call	PL16	;call to abstracted procedure
 10017  001022  0E04               	movlw	4
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10021                           
 10022                           ;usb_device.c: 2633: }
 10023  001024  D00C               	goto	PL8	;call to abstracted procedure
 10024  001026                     i2l3812:
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;usb_device.c: 2634: else
 10028                           ;usb_device.c: 2635: {
 10029                           ;usb_device.c: 2636: if(lastDTS == 0)
 10030  001026  502B               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10031  001028  E103               	bnz	i2l3818
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;usb_device.c: 2637: {
 10035                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10036  00102A  D811               	call	PL16	;call to abstracted procedure
 10037  00102C  0E48               	movlw	72
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10041                           
 10042                           ;usb_device.c: 2640: }
 10043  00102E  D007               	goto	PL8	;call to abstracted procedure
 10044  001030                     i2l3818:
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;usb_device.c: 2641: else
 10048                           ;usb_device.c: 2642: {
 10049                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10050  001030  D80E               	call	PL16	;call to abstracted procedure
 10051  001032  0E08               	movlw	8
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10055  001034  D004               	goto	PL8	;call to abstracted procedure
 10056  001036                     i2l661:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;usb_device.c: 2648: else
 10060                           ;usb_device.c: 2649: {
 10061                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10062  001036  BE04               	btfsc	_outPipes+3,7,c	;volatile
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;usb_device.c: 2658: }
 10066                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;usb_device.c: 2656: {
 10070                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10071  001038  9E04               	bcf	_outPipes+3,7,c	;volatile
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;usb_device.c: 2660: }
 10075                           ;usb_device.c: 2662: controlTransferState = 0;
 10076  00103A  6A26               	clrf	_controlTransferState,c	;volatile
 10077                           
 10078                           ; BSR set to: 0
 10079  00103C  0012               	return		;funcret
 10080  00103E                     __end_of_USBCtrlTrfInHandler:
 10081                           	opt stack 0
 10082  00103E                     PL8:
 10083                           	opt stack 20
 10084  00103E  6EDF               	movwf	indf2,c
 10085  001040  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10086  001044  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10087  001048  0E00               	movlw	0
 10088  00104A  8EDB               	bsf	plusw2,7,c
 10089  00104C  0C00               	retlw	0
 10090  00104E                     __end_ofPL8:
 10091                           	opt stack 0
 10092  00104E                     PL16:
 10093                           	opt stack 24
 10094  00104E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10095  001052  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10096  001056  0012               	return	
 10097  001058                     __end_ofPL16:
 10098                           	opt stack 0
 10099  001058                     PL38:
 10100                           	opt stack 20
 10101  001058  22DA               	addwfc	fsr2h,f,c
 10102  00105A  0E38               	movlw	56
 10103  00105C  6EDE               	movwf	postinc2,c
 10104  00105E  0E02               	movlw	2
 10105  001060  6EDD               	movwf	postdec2,c
 10106  001062  0C02               	retlw	2
 10107  001064                     __end_ofPL38:
 10108                           	opt stack 0
 10109  001064                     PL44:
 10110                           	opt stack 20
 10111  001064  EE20 F002          	lfsr	2,2
 10112  001068  500F               	movf	_pBDTEntryIn,w,c
 10113  00106A  26D9               	addwf	fsr2l,f,c
 10114  00106C  5010               	movf	_pBDTEntryIn+1,w,c
 10115  00106E  0012               	return	
 10116  001070                     __end_ofPL44:
 10117                           	opt stack 0
 10118                           tblptru	equ	0xFF8
 10119                           tblptrh	equ	0xFF7
 10120                           tblptrl	equ	0xFF6
 10121                           tablat	equ	0xFF5
 10122                           prodh	equ	0xFF4
 10123                           prodl	equ	0xFF3
 10124                           intcon	equ	0xFF2
 10125                           postinc0	equ	0xFEE
 10126                           wreg	equ	0xFE8
 10127                           indf1	equ	0xFE7
 10128                           postdec1	equ	0xFE5
 10129                           fsr1h	equ	0xFE2
 10130                           fsr1l	equ	0xFE1
 10131                           indf2	equ	0xFDF
 10132                           postinc2	equ	0xFDE
 10133                           postdec2	equ	0xFDD
 10134                           plusw2	equ	0xFDB
 10135                           fsr2h	equ	0xFDA
 10136                           fsr2l	equ	0xFD9
 10137                           status	equ	0xFD8
 10138                           
 10139 ;; *************** function _USBCtrlTrfTxService *****************
 10140 ;; Defined at:
 10141 ;;		line 1771 in file "picLibs/usb_device.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;		None
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  1    wreg      void 
 10148 ;; Registers used:
 10149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10150 ;; Tracked objects:
 10151 ;;		On entry : 3D/2
 10152 ;;		On exit  : 3F/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10155 ;;      Params:         0       0       0       0
 10156 ;;      Locals:         1       0       0       0
 10157 ;;      Temps:          0       0       0       0
 10158 ;;      Totals:         1       0       0       0
 10159 ;;Total ram usage:        1 bytes
 10160 ;; Hardware stack levels used:    1
 10161 ;; This function calls:
 10162 ;;		Nothing
 10163 ;; This function is called by:
 10164 ;;		_USBCtrlEPAllowDataStage
 10165 ;;		_USBCtrlTrfInHandler
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           	psect	text57
 10170  000D6E                     __ptext57:
 10171                           	opt stack 0
 10172  000D6E                     _USBCtrlTrfTxService:
 10173                           	opt stack 20
 10174                           
 10175                           ;usb_device.c: 1773: uint8_t byteToSend;
 10176                           ;usb_device.c: 1777: byteToSend = 8;
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;incstack = 0
 10180  000D6E  0E08               	movlw	8
 10181  000D70  6E2A               	movwf	USBCtrlTrfTxService@byteToSend,c
 10182                           
 10183                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10184  000D72  500E               	movf	_inPipes+5,w,c	;volatile
 10185  000D74  E10D               	bnz	i2l3266
 10186  000D76  0E08               	movlw	8
 10187  000D78  5C0D               	subwf	_inPipes+4,w,c	;volatile
 10188  000D7A  E20A               	bc	i2l3266
 10189                           
 10190                           ;usb_device.c: 1779: {
 10191                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10192  000D7C  C00D  F02A         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10193                           
 10194                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10195  000D80  5027               	movf	_shortPacketStatus,w,c	;volatile
 10196  000D82  E102               	bnz	i2l3262
 10197                           
 10198                           ;usb_device.c: 1788: {
 10199                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10200  000D84  0E01               	movlw	1
 10201  000D86  D003               	goto	L16
 10202  000D88                     i2l3262:
 10203                           
 10204                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10205  000D88  0427               	decf	_shortPacketStatus,w,c	;volatile
 10206  000D8A  E102               	bnz	i2l3266
 10207                           
 10208                           ;usb_device.c: 1792: {
 10209                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10210  000D8C  0E02               	movlw	2
 10211  000D8E                     L16:
 10212  000D8E  6E27               	movwf	_shortPacketStatus,c	;volatile
 10213  000D90                     i2l3266:
 10214                           
 10215                           ;usb_device.c: 1794: }
 10216                           ;usb_device.c: 1795: }
 10217                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10218  000D90  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10219  000D92  5E0D               	subwf	_inPipes+4,f,c	;volatile
 10220  000D94  0E00               	movlw	0
 10221  000D96  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 10222                           
 10223                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10224  000D98  EE20 F001          	lfsr	2,1
 10225  000D9C  D82F               	call	PL64	;call to abstracted procedure
 10226  000D9E  C02A  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10227                           
 10228                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10229  000DA2  0E38               	movlw	56
 10230  000DA4  0100               	movlb	0	; () banked
 10231  000DA6  6F7A               	movwf	_pDst& (0+255),b
 10232  000DA8  0E02               	movlw	2
 10233  000DAA  6F7B               	movwf	(_pDst+1)& (0+255),b
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10237  000DAC  B00C               	btfsc	_inPipes+3,0,c	;volatile
 10238  000DAE  D01A               	goto	i2l3294
 10239  000DB0  D00B               	goto	i2l3284
 10240  000DB2                     i2l3276:
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;usb_device.c: 1812: {
 10244                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10245  000DB2  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10246  000DB6  D819               	call	PL54	;call to abstracted procedure
 10247  000DB8  64F7               	cpfsgt	tblptrh,c
 10248  000DBA  D003               	bra	i2u198_47
 10249  000DBC  0008               	tblrd		*
 10250  000DBE  50F5               	movf	tablat,w,c
 10251  000DC0  D002               	bra	i2u198_40
 10252  000DC2                     i2u198_47:
 10253  000DC2  EC25  F005         	call	PL18	;call to abstracted procedure
 10254  000DC6                     i2u198_40:
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;usb_device.c: 1814: byteToSend--;
 10258  000DC6  D81F               	call	PL66	;call to abstracted procedure
 10259  000DC8                     i2l3284:
 10260                           
 10261                           ; BSR set to: 0
 10262  000DC8  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10263  000DCA  E1F3               	bnz	i2l3276
 10264  000DCC  0012               	return	
 10265  000DCE                     i2l3286:
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;usb_device.c: 1820: {
 10269                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10270  000DCE  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10271  000DD2  D80B               	call	PL54	;call to abstracted procedure
 10272  000DD4  64F7               	cpfsgt	tblptrh,c
 10273  000DD6  D003               	bra	i2u200_47
 10274  000DD8  0008               	tblrd		*
 10275  000DDA  50F5               	movf	tablat,w,c
 10276  000DDC  D002               	bra	i2u200_40
 10277  000DDE                     i2u200_47:
 10278  000DDE  EC25  F005         	call	PL18	;call to abstracted procedure
 10279  000DE2                     i2u200_40:
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;usb_device.c: 1822: byteToSend--;
 10283  000DE2  D811               	call	PL66	;call to abstracted procedure
 10284  000DE4                     i2l3294:
 10285                           
 10286                           ; BSR set to: 0
 10287  000DE4  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10288  000DE6  E1F3               	bnz	i2l3286
 10289                           
 10290                           ; BSR set to: 0
 10291  000DE8  0012               	return		;funcret
 10292  000DEA                     __end_of_USBCtrlTrfTxService:
 10293                           	opt stack 0
 10294  000DEA                     PL54:
 10295                           	opt stack 20
 10296  000DEA  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10297  000DEE  6AF8               	clrf	tblptru,c
 10298  000DF0  C07A  FFD9         	movff	_pDst,fsr2l
 10299  000DF4  C07B  FFDA         	movff	_pDst+1,fsr2h
 10300  000DF8  0E02               	movlw	(high __ramtop+-1)
 10301  000DFA  0012               	return	
 10302  000DFC                     __end_ofPL54:
 10303                           	opt stack 0
 10304  000DFC                     PL64:
 10305                           	opt stack 21
 10306  000DFC  500F               	movf	_pBDTEntryIn,w,c
 10307  000DFE  26D9               	addwf	fsr2l,f,c
 10308  000E00  5010               	movf	_pBDTEntryIn+1,w,c
 10309  000E02  22DA               	addwfc	fsr2h,f,c
 10310  000E04  0012               	return	
 10311  000E06                     __end_ofPL64:
 10312                           	opt stack 0
 10313  000E06                     PL66:
 10314                           	opt stack 20
 10315  000E06  6EDF               	movwf	indf2,c
 10316  000E08  4A09               	infsnz	_inPipes,f,c	;volatile
 10317  000E0A  2A0A               	incf	_inPipes+1,f,c	;volatile
 10318  000E0C  0100               	movlb	0	; () banked
 10319  000E0E  4B7A               	infsnz	_pDst& (0+255),f,b
 10320  000E10  2B7B               	incf	(_pDst+1)& (0+255),f,b
 10321  000E12  062A               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10322  000E14  0012               	return	
 10323  000E16                     __end_ofPL66:
 10324                           	opt stack 0
 10325                           tblptru	equ	0xFF8
 10326                           tblptrh	equ	0xFF7
 10327                           tblptrl	equ	0xFF6
 10328                           tablat	equ	0xFF5
 10329                           prodh	equ	0xFF4
 10330                           prodl	equ	0xFF3
 10331                           intcon	equ	0xFF2
 10332                           postinc0	equ	0xFEE
 10333                           wreg	equ	0xFE8
 10334                           indf1	equ	0xFE7
 10335                           postdec1	equ	0xFE5
 10336                           fsr1h	equ	0xFE2
 10337                           fsr1l	equ	0xFE1
 10338                           indf2	equ	0xFDF
 10339                           postinc2	equ	0xFDE
 10340                           postdec2	equ	0xFDD
 10341                           plusw2	equ	0xFDB
 10342                           fsr2h	equ	0xFDA
 10343                           fsr2l	equ	0xFD9
 10344                           status	equ	0xFD8
 10345                           tblptru	equ	0xFF8
 10346                           tblptrh	equ	0xFF7
 10347                           tblptrl	equ	0xFF6
 10348                           tablat	equ	0xFF5
 10349                           prodh	equ	0xFF4
 10350                           prodl	equ	0xFF3
 10351                           intcon	equ	0xFF2
 10352                           postinc0	equ	0xFEE
 10353                           wreg	equ	0xFE8
 10354                           indf1	equ	0xFE7
 10355                           postdec1	equ	0xFE5
 10356                           fsr1h	equ	0xFE2
 10357                           fsr1l	equ	0xFE1
 10358                           indf2	equ	0xFDF
 10359                           postinc2	equ	0xFDE
 10360                           postdec2	equ	0xFDD
 10361                           plusw2	equ	0xFDB
 10362                           fsr2h	equ	0xFDA
 10363                           fsr2l	equ	0xFD9
 10364                           status	equ	0xFD8
 10365                           
 10366                           	psect	rparam
 10367  0000                     tblptru	equ	0xFF8
 10368                           tblptrh	equ	0xFF7
 10369                           tblptrl	equ	0xFF6
 10370                           tablat	equ	0xFF5
 10371                           prodh	equ	0xFF4
 10372                           prodl	equ	0xFF3
 10373                           intcon	equ	0xFF2
 10374                           postinc0	equ	0xFEE
 10375                           wreg	equ	0xFE8
 10376                           indf1	equ	0xFE7
 10377                           postdec1	equ	0xFE5
 10378                           fsr1h	equ	0xFE2
 10379                           fsr1l	equ	0xFE1
 10380                           indf2	equ	0xFDF
 10381                           postinc2	equ	0xFDE
 10382                           postdec2	equ	0xFDD
 10383                           plusw2	equ	0xFDB
 10384                           fsr2h	equ	0xFDA
 10385                           fsr2l	equ	0xFD9
 10386                           status	equ	0xFD8
 10387                           
 10388                           	psect	temp
 10389  000052                     btemp:
 10390                           	opt stack 0
 10391  000052                     	ds	1
 10392  0000                     int$flags	set	btemp
 10393                           tblptru	equ	0xFF8
 10394                           tblptrh	equ	0xFF7
 10395                           tblptrl	equ	0xFF6
 10396                           tablat	equ	0xFF5
 10397                           prodh	equ	0xFF4
 10398                           prodl	equ	0xFF3
 10399                           intcon	equ	0xFF2
 10400                           postinc0	equ	0xFEE
 10401                           wreg	equ	0xFE8
 10402                           indf1	equ	0xFE7
 10403                           postdec1	equ	0xFE5
 10404                           fsr1h	equ	0xFE2
 10405                           fsr1l	equ	0xFE1
 10406                           indf2	equ	0xFDF
 10407                           postinc2	equ	0xFDE
 10408                           postdec2	equ	0xFDD
 10409                           plusw2	equ	0xFDB
 10410                           fsr2h	equ	0xFDA
 10411                           fsr2l	equ	0xFD9
 10412                           status	equ	0xFD8
 10413                           tblptru	equ	0xFF8
 10414                           tblptrh	equ	0xFF7
 10415                           tblptrl	equ	0xFF6
 10416                           tablat	equ	0xFF5
 10417                           prodh	equ	0xFF4
 10418                           prodl	equ	0xFF3
 10419                           intcon	equ	0xFF2
 10420                           postinc0	equ	0xFEE
 10421                           wreg	equ	0xFE8
 10422                           indf1	equ	0xFE7
 10423                           postdec1	equ	0xFE5
 10424                           fsr1h	equ	0xFE2
 10425                           fsr1l	equ	0xFE1
 10426                           indf2	equ	0xFDF
 10427                           postinc2	equ	0xFDE
 10428                           postdec2	equ	0xFDD
 10429                           plusw2	equ	0xFDB
 10430                           fsr2h	equ	0xFDA
 10431                           fsr2l	equ	0xFD9
 10432                           status	equ	0xFD8


Data Sizes:
    Strings     41
    Constant    197
    Data        19
    BSS         220
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      81
    BANK0           160     36     106
    BANK1           256      0     128
    BANK2            64      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    putrsUSBUSART@data	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_2(CODE[41]), STR_1(CODE[3]), buttonMessage(BANK0[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_2(CODE[41]), STR_1(CODE[3]), buttonMessage(BANK0[18]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4450_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4450_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4450_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4450_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMh[64]), cdc_data_rx(BIGRAMh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2768$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2758$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2758$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2734$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2734$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2734$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2734$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_APP_DeviceCDCBasicDemoTasks
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_PIC18F26K40_readThreeBytes
    _getsUSBUSART->_USBTransferOnePacket
    _PIC18F26K40_readThreeBytes->_PIC18F26K40_sendByte
    _PIC18F26K40_loadPC->_PIC18F26K40_sendByte
    _PIC18F26K40_loadDataIntoNVM->_PIC18F26K40_sendByteMsbToLsb
    _PIC18F26K40_enterLowVoltageProg->_PIC18F26K40_sendByte
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12092
                                             34 BANK0      2     2      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK0      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                         10    10      0   10665
                                             24 BANK0     10    10      0
                   _BUTTON_IsPressed
                       _CDCTxService
    _PIC18F26K40_enterLowVoltageProg
     _PIC18F26K40_exitLowVoltageProg
        _PIC18F26K40_loadDataIntoNVM
                 _PIC18F26K40_loadPC
         _PIC18F26K40_readThreeBytes
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        7     5      2     476
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     1      3    2232
                                              9 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_readThreeBytes                          18    14      4    1639
                                              6 BANK0     18    14      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadPC                                   8     4      4    1647
                                              6 BANK0      8     4      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadDataIntoNVM                         10     5      5     505
                                              4 BANK0     10     5      5
       _PIC18F26K40_sendByteMsbToLsb
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByteMsbToLsb                         4     4      0     130
                                              0 BANK0      4     4      0
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_exitLowVoltageProg                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_enterLowVoltageProg                      4     4      0    1405
                                              6 BANK0      4     4      0
               _PIC18F26K40_sendByte
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByte                                 6     5      1    1269
                                              0 BANK0      6     5      1
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (4) _PIC18F26K40_setTrisToOut                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2129
                                              9 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1928
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SYS_InterruptHigh                                   10    10      0   30325
                                             30 COMRAM    10    10      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       1     1      0   30325
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     1     1      0   17702
                                             28 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               0     0      0   17063
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   12982
                                             27 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 1     1      0    4487
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    4460
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3989
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                          _CDCInitEP
                 _USBCheckCDCRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (8) i2_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (9) i2_LED_Enable                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_BUTTON_Enable                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i2_USBTransferOnePacket                               9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (8) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (9) _LED_On                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _LED_Off                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _PIC18F26K40_enterLowVoltageProg
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
       _PIC18F26K40_setTrisToOut
     _PIC18F26K40_exitLowVoltageProg
     _PIC18F26K40_loadDataIntoNVM
       _PIC18F26K40_sendByteMsbToLsb
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_loadPC
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_readThreeBytes
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            1FF      0       0      12        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      6A       5       66.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      51       1       86.2%
BIGRAMh             40      0       0      11        0.0%
BITBANK2            40      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13B       7        0.0%
DATA                 0      0     13B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 30 09:48:41 2017

                               _USB_SD_Ptr 0301                                         PL2 0F24  
                                       PL4 0BC6                                         PL6 0BD0  
                                       PL8 103E                                ?_LED_Enable 002A  
                            _USBDeviceInit 1414                         __size_of_CDCInitEP 0052  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                                      PL10 0BDA                                        PL20 0950  
                                      PL12 0BEA                                        PL30 183C  
                                      PL22 0542                                        PL14 091E  
                                      PL40 19CE                                        PL32 0A56  
                                      PL24 0B04                                        PL16 104E  
                                      PL50 0E9A                                        PL42 08A6  
                                      PL34 0978                                        PL26 0B10  
                                      PL18 0A4A                                        PL60 057E  
                                      PL52 0D36                                        PL44 1064  
                                      PL36 054C                                        PL28 1876  
                                      PL70 124E                                        PL62 1246  
                                      PL54 0DEA                                        PL46 0B1C  
                                      PL38 1058                                __CFG_LVP$ON 000000  
                                      PL80 099C                                        PL72 11D4  
                                      PL64 0DFC                                        PL56 0562  
                                      PL48 0A6E                                        PL90 0D5C  
                                      PL82 0D4A                                        PL74 1154  
                                      PL66 0E06                                        PL58 0574  
                                      PL92 0B30                                        PL84 0D52  
                                      PL76 0990                                        PL68 08BC  
                                      PL94 16C8                                        PL86 07D4  
                                      PL78 0FD6                                        PL96 06D2  
                                      PL88 09A6                                        PL98 0EAE  
     USER_USB_CALLBACK_EVENT_HANDLER@event 0036       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0038  
                                      l105 15CC                                        l106 15CE  
                                      l130 1708                                        l131 170A  
                                      l128 16E2                                        l228 1A90  
              __end_of_USBStdGetDscHandler 0A4A                                        l176 0592  
                                      l290 18C2                                        l179 05B8  
                                      l525 1830                                        l286 18B6  
                                      l526 182E                                        l288 18BA  
                                      l289 18BE                                        l815 1484  
                                      _BDT 000200                                        l829 0834  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                                      _UIE 000F60                                        _UIR 000F62  
                   _APP_LEDUpdateUSBStatus 133A                                 _USBSuspend 19B8  
                             __CFG_BORV$30 000000                       USBStdSetCfgHandler@i 003E  
                                      prod 000FF3                                        wreg 000FE8  
                           _USBDeviceTasks 06DE                             _USBDeviceState 0081  
                             __CFG_FOSC$XT 000000                              _BUTTON_Enable 1AE0  
                    ??_USBCtrlTrfRxService 002A                   __size_ofi2_USBDeviceInit 0048  
                           ??_getsUSBUSART 009F                                       PL100 0D64  
                                     PL110 08CC                                       PL102 1A30  
                                     PL112 12C0                                       PL104 1162  
                                     PL114 1ADA                                       PL106 0B3A  
                                     PL108 0BF4                   USBEnableEndpoint@options 0032  
                          __end_of_LED_Off 1964                 USBConfigureEndpoint@handle 0030  
                                     l5042 1892                                       l4542 1596  
                                     l4800 0826                                       l4632 0C10  
                                     l4546 15A0                                       l4650 0C34  
                                     l4634 0C18                                       l4730 14C0  
                                     l4722 148E                                       l4708 1A96  
                                     l4580 0A92                                       l4548 15A6  
                                     l4660 0C82                                       l4652 0C3A  
                                     l4814 084E                                       l4822 0860  
                                     l4806 0838                                       l4646 0C2A  
                                     l4750 118E                                       l4824 0866  
                                     l4832 0878                                       l4752 1192  
                                     l4760 11D0                                       l4586 0AB0  
                                     l4842 088C                                       l4834 087C  
                                     l4746 1180                                       l4922 0696  
                                     l4844 08A2                                       l4692 14F8  
                                     l4756 11AC                                       l4908 0642  
                                     l4924 06B2                                       l4932 06CE  
                                     l4940 1A4A                                       l4860 196E  
                                     l4598 0AE6                                       l4790 07FE  
                                     l4694 14FE                                       l4926 06B4  
                                     l4776 1A6C                                       l4856 18C6  
                                     l4936 1A3E                                       l4864 197E  
                                     l4794 0806                                       l4786 07F6  
                                     l4890 05E2                                       l4882 05BA  
                                     l4964 095A                                       l4958 1438  
                                     l4888 05D8                                       l4988 144C  
                    ??i2_SYSTEM_Initialize 002B                                       STR_1 03EC  
                                     STR_2 03C6                                       u4107 1528  
                                     u4117 172E                                       u3544 15BE  
                                     u3545 15BA                                       u4097 18A2  
                                     u3730 14BC                                       u3900 0876  
                                     u3574 16FA                                       u3575 16F6  
                                     u3664 0C5A                                       u3665 0C54  
                                     u3737 14B8                                       u3907 0872  
                                     u3880 085E                                       u3887 085A  
                    ??_USBCtrlTrfTxService 002A                                       _UCFG 000F61  
                                     _UEP0 000F53                                       _UEP1 000F54  
                                     _UEIE 000F5B                                       _UCON 000F64  
                                     _UEIR 000F5F                            _CDCDataInHandle 0076  
   USBStdFeatureReqHandler@current_ep_data 0042                                       _pDst 007A  
                                     _main 1880                   ??i2_USBTransferOnePacket 002E  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                          _USBDeviceAttach 1818                                       btemp 0052  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0062                   __size_ofi2_BUTTON_Enable 0006  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 0FD6  
                   ??_USBCtrlTrfOutHandler 002C                               ___param_bank 000000  
                ??_USBStdFeatureReqHandler 003E                     __size_of_putrsUSBUSART 005E  
                     _PIC18F26K40_sendByte 158C                   ??_USBStdGetStatusHandler 002A  
                           ?_USBDeviceInit 002A                              __CFG_PLLEN$ON 000000  
           PIC18F26K40_readThreeBytes@data 00A5                                _writeBuffer 0100  
                                    ?_main 002A          __size_of_USBCtrlEPServiceComplete 006A  
                                    _ANSEL 000F7E                     __end_of_USBDeviceTasks 07D4  
                ?_USBCtrlEPServiceComplete 002A                                      i2l250 191C  
                                    i2l260 1948                                      i2l246 1910  
                                    i2l256 193C                                      i2l248 1914  
                                    i2l249 1918                                      i2l258 1940  
                                    i2l290 18F0                                      i2l259 1944  
                                    i2l603 0A04                                      i2l701 04B0  
                                    i2l613 1260                                      i2l286 18E4  
                                    i2l606 0A32                                      i2l550 0EEA  
                                    i2l288 18E8                                      i2l608 0A36  
                                    i2l616 12AE                                      i2l289 18EC  
                                    i2l617 126A                                      i2l618 126E  
                                    i2l626 1872                                      i2l651 1A04  
                                    i2l476 0706                                      i2l661 1036  
                                    i2l653 1A16                                      i2l709 04F2  
                                    i2l486 077A                                      i2l487 07D0  
                                    i2l488 0780                                      i2l691 040A  
                                    i2l675 0F5E                                      i2l684 0F7A  
                                    i2l776 10AE                                      _UADDR 000F5C  
                           __CFG_BBSIZ$OFF 000000                                      _USTAT 000F63  
         __end_of_PIC18F26K40_setTrisToOut 1AFC                              __CFG_WRT0$OFF 000000  
       __size_of_USBCtrlEPAllowStatusStage 0064                              __CFG_WRT1$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           ?_BUTTON_Enable 002A                             __CFG_EBTR1$OFF 000000  
          __end_of_USBCtrlEPAllowDataStage 158C                                      _sd000 03C2  
                                    _sd001 037C                                      _sd002 0348  
                            __CFG_WRTB$OFF 000000             ?_USBIncrement1msInternalTimers 002A  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                                 i2memset@p1 002A  
                __size_of_BUTTON_IsPressed 001A                             __CFG_BOREN$OFF 000000  
                                    tablat 000FF5                        __size_of_LED_Enable 0030  
                                    plusw2 000FDB                          __end_of_CDCInitEP 1688  
                                    status 000FD8                               __end_ofPL100 0D6E  
                             __end_ofPL110 08D6                               __end_ofPL102 1A38  
                             __end_ofPL112 12CA                               __end_ofPL104 116C  
                             __end_ofPL114 1AE0                               __end_ofPL106 0B44  
                             __end_ofPL108 0BFE                           __end_ofi2_memset 19B8  
                          putUSBUSART@data 0093               __size_of_USBStdSetCfgHandler 0084  
                           __CFG_MCLRE$OFF 000000                            __initialization 15E4  
                    ?_PIC18F26K40_sendByte 0093                               __end_of_main 18B0  
              __size_of_PIC18F26K40_loadPC 003C                  __size_of_USBCtrlEPService 0070  
                                   ??_main 00B5                              __activetblptr 000002  
                          ?_USBDeviceTasks 002A                                ?_USBSuspend 002A  
                                ??_LED_Off 002A                               _cdc_mem_type 007C  
                            _putrsUSBUSART 147A                    __end_of_USBDeviceAttach 183C  
                         _CDCDataOutHandle 0078            PIC18F26K40_loadDataIntoNVM@data 0097  
                                   _ANSELH 000F7F                            getsUSBUSART@len 009E  
                   SYSTEM_Initialize@state 0094                      __size_of_CDCTxService 00C8  
                                   i2l3040 112E                                     i2l3104 0D16  
                                   i2l3050 194C                                     i2l3140 1380  
                                   i2l3132 1362                                     i2l3124 1344  
                                   i2l3220 1A1E                                     i2l3150 139A  
                                   i2l3062 17F0                                     i2l3230 13AC  
                                   i2l3302 19A8                                     i2l3056 1920  
                                   i2l3144 1390                                     i2l3136 1372  
                                   i2l3152 13A4                                     i2l3128 1352  
                                   i2l3080 18F4                                     i2l3224 1A2A  
                                   i2l3232 13B6                                     i2l3400 09C0  
                                   _LED_On 190C                                     i2l3066 17FE  
                                   i2l3162 1088                                     i2l3234 13C0  
                                   i2l3242 13C8                                     i2l3092 0CDE  
                                   i2l3500 04A4                                     i2l3412 0A08  
                                   i2l3404 09D4                                     i2l3420 0A3A  
                                   i2l3262 0D88                                     i2l3318 1210  
                                   i2l3086 0CC2                                     i2l3158 107C  
                                   i2l3502 04BC                                     i2l3350 1576  
                                   i2l4118 1870                                     i2l4302 06FE  
                           __CFG_WDTEN$OFF 000000                                     i2l3192 10D4  
                                   i2l3176 10A4                                     i2l3168 1092  
                                   i2l3512 04DC                                     i2l3432 127C  
                                   i2l3266 0D90                                     i2l3602 0B7E  
                                   i2l3186 10C2                                     i2l3530 051E  
                                   i2l3522 04FE                                     i2l3514 04E2  
                                   i2l3442 12A0                                     i2l3370 0E36  
                                   i2l3346 1562                                     i2l4138 132C  
                                   i2l4082 19EE                                     i2l4322 0722  
                                   i2l3276 0DB2                                     i2l3284 0DC8  
                                   i2l3460 040C                                     i2l4084 19F0  
                                   i2l4340 074C                                     i2l4316 0718  
                                   i2l3286 0DCE                                     i2l3294 0DE4  
                                   i2l3614 0BAA                                     i2l3198 10DA  
                                   i2l4158 08E6                                     i2l3800 100E  
                                   i2l3528 0518                                     i2l3392 0E80  
                                   i2l3640 0F68                                     i2l3560 0EFC  
                                   i2l3544 0ED2                                     i2l4336 0744  
                                   i2l4328 0738                                     i2l3618 0BB2  
                                   i2l3490 047E                                     i2l3298 1998  
                                   i2l4354 076E                                     i2l4346 0756  
                                   i2l3812 1026                                     i2l3484 046E  
                                   i2l3476 0450                                     i2l3652 0F6E  
                                   i2l3548 0ED8                                     i2l3740 1776  
                                   i2l4188 08F6                                     i2l4380 07B4  
                                   i2l5086 13DC                                     i2l3662 0F8A  
                                   i2l4382 07C8                                     i2l4374 079E  
                                   i2l4294 06F2                                     i2l3592 0B5E  
                                   i2l5088 1410                                     i2l3568 0F0A  
                                   i2l3818 1030                                     i2l3666 0F96  
                                   i2l3596 0B6A                                     i2l3748 1796  
                            CDCTxService@i 009C                   i2USBTransferOnePacket@ep 0030  
                        ??i2_USBDeviceInit 0032            __size_ofi2_USBTransferOnePacket 0080  
                        _shortPacketStatus 0027                             __CFG_XINST$OFF 000000  
             ??_PIC18F26K40_readThreeBytes 009D                            USBDeviceTasks@i 0047  
              USBStdFeatureReqHandler@pUEP 0040                   USBTransferOnePacket@data 0094  
               USBCtrlTrfInHandler@lastDTS 002B                            ??_USBDeviceInit 009B  
                             ?_putUSBUSART 0093                             __CFG_STVREN$ON 000000  
                     __end_of_getsUSBUSART 11D4                          ??i2_BUTTON_Enable 002A  
                        _USBEnableEndpoint 17E2            __size_of_USBStdGetStatusHandler 0068  
        APP_DeviceCDCBasicDemoTasks@a_2114 00AF                                     _memcpy 1764  
                            ?i2_LED_Enable 002A                                     _memset 1964  
                                   clear_0 160A                                     clear_1 1616  
                                   clear_2 1622                PIC18F26K40_readThreeBytes@i 00AA  
              PIC18F26K40_readThreeBytes@j 00A9                         ?_USBEnableEndpoint 0032  
            __size_of_USBTransferOnePacket 0082                            ??_BUTTON_Enable 0093  
                             _CDCTxService 07DE                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                             ?_putrsUSBUSART 0093  
                      ??_USBEnableEndpoint 0033                                _CtrlTrfData 000238  
                          __CFG_HFOFST$OFF 000000                   _PIC18F26K40_setTrisToOut 1AF4  
             ?_APP_DeviceCDCBasicDemoTasks 002A        __size_of_PIC18F26K40_readThreeBytes 00B8  
                     _controlTransferState 0026                          _SYSTEM_Initialize 1A38  
                               __accesstop 0060                    __end_of__initialization 1628  
                       ?_SYSTEM_Initialize 002A                              ___rparam_used 000001  
                 __size_of_USBStallHandler 002A                        __size_of_USBSuspend 0016  
                   ??_PIC18F26K40_sendByte 0094                             __pcstackCOMRAM 002A  
                __end_of_USBEnableEndpoint 1818                              __end_of_sd000 03C6  
                            __end_of_sd001 03B0                              __end_of_sd002 037C  
                             __pidataBANK0 1AC0                        ??_SYSTEM_Initialize 0094  
                                LED_On@led 002A           __size_of_USBCtrlEPAllowDataStage 005A  
                           ??i2_LED_Enable 002A                               ??_LED_Enable 0093  
            __size_of_USBConfigureEndpoint 0064                __end_of_USBCtrlTrfInHandler 103E  
                  ?_APP_LEDUpdateUSBStatus 002A                                 __end_ofPL2 0F52  
                               __end_ofPL4 0BD0                                 __end_ofPL6 0BDA  
                               __end_ofPL8 104E                     i2_USBTransferOnePacket 0CB6  
                          __CFG_PCLKEN$OFF 000000                                  ?i2_memset 002A  
                               _cdc_rx_len 001C                                 _cdc_tx_len 001B  
             ?_PIC18F26K40_loadDataIntoNVM 0097                              _buttonMessage 00B8  
                 ??_USBCtrlTrfSetupHandler 0046                    _USBTicksSinceSuspendEnd 007D  
                         ?_USBDeviceAttach 002A                  __end_of_SYSTEM_Initialize 1A54  
                         _BUTTON_IsPressed 1A8C                     _USBStdGetStatusHandler 1258  
                            _buttonPressed 007F                                 __pbssBANK0 0060  
                               __pbssBANK1 0100                                    ?_LED_On 002A  
            ??_APP_DeviceCDCBasicDemoTasks 00AB   __end_of_APP_DeviceCDCBasicDemoInitialize 1AC0  
__size_of_APP_DeviceCDCBasicDemoInitialize 001A         ??_APP_DeviceCDCBasicDemoInitialize 002A  
        ?_APP_DeviceCDCBasicDemoInitialize 002A           _APP_DeviceCDCBasicDemoInitialize 1AA6  
                       __end_of_LED_Enable 18E0                __size_of_USBWakeFromSuspend 0020  
                              _pBDTEntryIn 000F           __end_of_USBCtrlEPServiceComplete 0F24  
              __size_of_USBCheckCDCRequest 0080                       USBCtrlTrfRxService@i 002A  
                            LED_Enable@led 0093             __end_of_APP_LEDUpdateUSBStatus 13AA  
                                  ?_memcpy 002A               APP_DeviceCDCBasicDemoTasks@a 00AB  
             APP_DeviceCDCBasicDemoTasks@i 00B4                                    ?_memset 0093  
                               _device_dsc 03B0                           _USBCtrlEPService 12CA  
                               _ep_data_in 0073                __end_of_USBCtrlTrfRxService 0BC6  
                       _USBCheckStdRequest 0F52                          _configDescriptor1 0305  
                          ??_putrsUSBUSART 0095                                    _LED_Off 1938  
              __end_ofi2_SYSTEM_Initialize 1A30                                 ??i2_memset 0030  
              __end_of_USBCtrlTrfTxService 0DEA                        _USBStdSetCfgHandler 0E16  
      PIC18F26K40_loadDataIntoNVM@tempData 009D                            __CFG_USBDIV$OFF 000000  
                      ?_USBCheckStdRequest 002A               __size_of_USBStdGetDscHandler 009A  
            ??_PIC18F26K40_loadDataIntoNVM 009C                                    _UIEbits 000F60  
                                  _UIRbits 000F62                            __size_of_LED_On 002C  
                            _cdc_trf_state 0080             APP_LEDUpdateUSBStatus@ledCount 0019  
       __end_of_PIC18F26K40_readThreeBytes 0CB6                 _PIC18F26K40_readThreeBytes 0BFE  
                                  _pCDCDst 006A                                    _pCDCSrc 006D  
                          __CFG_PWRTEN$OFF 000000                      __size_of_getsUSBUSART 0068  
                                  __Hparam 0000            ??_USBIncrement1msInternalTimers 002A  
                     ?_USBStdSetCfgHandler 002A                                  _CDCInitEP 1636  
                                  __Lparam 0000                 __size_of_USBEnableEndpoint 0036  
                               _readBuffer 0140                       ??_USBCheckStdRequest 0045  
            __size_of_USBCtrlTrfOutHandler 0020                           ??_USBDeviceTasks 0047  
                        ??_USBStallHandler 002A                               __psmallconst 0300  
     __size_of_APP_DeviceCDCBasicDemoTasks 014A                       __size_of_putUSBUSART 001C  
                                  __pcinit 15E4                         getsUSBUSART@buffer 009C  
                          __size_of_memcpy 0042                            __size_of_memset 002A  
                __end_of_configDescriptor1 0348                                    __ramtop 0300  
                                  __ptext0 1880                                    __ptext1 1414  
                                  __ptext2 1964                                    __ptext3 1818  
                                  __ptext4 1A38                                    __ptext5 18B0  
                                  __ptext6 1AE0                                    __ptext7 0588  
                                  __ptext8 147A                                    __ptext9 1A54  
                                  _inPipes 0009                _USBDeferOUTDataStagePackets 007E  
                             ??_USBSuspend 003E                            i2_USBDeviceInit 08D6  
                         i2USBDeviceInit@i 0032                      PIC18F26K40_sendByte@i 0098  
                    PIC18F26K40_sendByte@j 0097                         __end_of_USB_CD_Ptr 0305  
               __size_of_SYSTEM_Initialize 001C            __size_of_USBCtrlTrfSetupHandler 0040  
                     end_of_initialization 1628                               _getsUSBUSART 116C  
                     __end_ofi2_LED_Enable 190C                         __end_of_USB_SD_Ptr 0304  
                                  memcpy@d 0030                                    memcpy@n 002E  
                                  memcpy@s 0032                        _pBDTEntryEP0OutNext 0015  
                                  memset@c 0095                                    memset@n 0097  
                                  memset@p 0099                              __Lmediumconst 0000  
                          _USB1msTickCount 0066            _dummy_encapsulated_cmd_response 0082  
                          i2_BUTTON_Enable 1AD4                   ?_USBStdFeatureReqHandler 002A  
                    ??_USBStdSetCfgHandler 003E                                 ?_CDCInitEP 002A  
                       __end_of_USBSuspend 19CE       __size_of_PIC18F26K40_loadDataIntoNVM 005A  
                  _USBCtrlEPAllowDataStage 1532                                    postdec1 000FE5  
                                  postdec2 000FDD                 __end_of_PIC18F26K40_loadPC 17E2  
                                  postinc0 000FEE                                    postinc2 000FDE  
                 PIC18F26K40_sendByte@info 0096    __end_of_PIC18F26K40_enterLowVoltageProg 1764  
 __size_of_PIC18F26K40_enterLowVoltageProg 0046           ?_PIC18F26K40_enterLowVoltageProg 002A  
        ??_PIC18F26K40_enterLowVoltageProg 0099            _PIC18F26K40_enterLowVoltageProg 171E  
                 _USBCtrlEPServiceComplete 0EBA                 _USBStatusStageEnabledFlag1 001F  
               _USBStatusStageEnabledFlag2 001E                         USBEnableEndpoint@p 0033  
                                _PORTAbits 000F80                                  _PORTCbits 000F82  
               ??_PIC18F26K40_setTrisToOut 0093                                  _TRISCbits 000F94  
            PIC18F26K40_loadPC@tempAddress 009D                         _BothEP0OutUOWNsSet 0022  
                USBConfigureEndpoint@EPNum 002F                 ?_USBCtrlEPAllowStatusStage 002A  
                           _GLOBAL_COUNTER 00B7        USER_USB_CALLBACK_EVENT_HANDLER@size 003A  
  APP_DeviceCDCBasicDemoTasks@numBytesRead 00B3                                  _USTATcopy 0028  
          ?_PIC18F26K40_exitLowVoltageProg 002A           ??_PIC18F26K40_exitLowVoltageProg 0093  
             __end_of_USBTransferOnePacket 0B04                             __end_of_LED_On 1938  
                        putUSBUSART@length 0095                     _USBCtrlTrfSetupHandler 1688  
                 __end_of_BUTTON_IsPressed 1AA6                    ?i2_USBTransferOnePacket 002A  
                    __end_of_USBDeviceInit 147A      __end_of_USBIncrement1msInternalTimers 1A8C  
   __size_of_USBIncrement1msInternalTimers 001C              _USBIncrement1msInternalTimers 1A70  
                               LED_Off@led 002A                    __end_ofi2_USBDeviceInit 091E  
                                i2memset@c 002C                                  i2memset@n 002E  
                                i2memset@p 0030                             __end_of_memcpy 17A6  
                       putrsUSBUSART@pData 0097                             __end_of_memset 198E  
                        _USBBusIsSuspended 0024                                __end_ofPL10 0BEA  
                              __end_ofPL20 0978                                __end_ofPL12 0BF4  
                              __end_ofPL30 184C                                __end_ofPL22 054C  
                              __end_ofPL14 0950                                __end_ofPL40 19DA  
                              __end_ofPL32 0A6E                                __end_ofPL24 0B10  
                              __end_ofPL16 1058                                __end_ofPL50 0EAE  
                              __end_ofPL42 08BC                                __end_ofPL34 0990  
                              __end_ofPL26 0B1C                                __end_ofPL18 0A56  
                              __end_ofPL60 0588                                __end_ofPL52 0D4A  
                              __end_ofPL44 1070                                __end_ofPL36 0562  
                              __end_ofPL28 1880                                __end_ofPL70 1258  
                              __end_ofPL62 124E                                __end_ofPL54 0DFC  
                              __end_ofPL46 0B30                                __end_ofPL38 1064  
                              __end_ofPL80 09A6                                __end_ofPL72 11E2  
                              __end_ofPL64 0E06                                __end_ofPL56 0574  
                              __end_ofPL48 0A82                                __end_ofPL90 0D64  
                              __end_ofPL82 0D52                                __end_ofPL74 1162  
                              __end_ofPL66 0E16                                __end_ofPL58 057E  
                              __end_ofPL92 0B3A                                __end_ofPL84 0D5C  
                              __end_ofPL76 099C                                __end_ofPL68 08CC  
                              __end_ofPL94 16D4                                __end_ofPL86 07DE  
                              __end_ofPL78 0FE2                                __end_ofPL96 06DE  
                              __end_ofPL88 09B0                                __end_ofPL98 0EBA  
                      start_initialization 15E4                    ?_USBStdGetStatusHandler 002A  
                 i2SYSTEM_Initialize@state 002B                      __end_of_BUTTON_Enable 1AEA  
            USBCtrlTrfRxService@byteToRead 002B                    __end_ofi2_BUTTON_Enable 1ADA  
                              _cdc_data_rx 000280                                _cdc_data_tx 000240  
                        __size_ofi2_memset 002A               __end_of_USBConfigureEndpoint 1154  
          __end_of_USBStdFeatureReqHandler 0542                                   ??_LED_On 002A  
        __end_of_USBCtrlEPAllowStatusStage 1246                   __end_of_USBCtrlEPService 133A  
                ??_USBCtrlEPAllowDataStage 002B                                ??_CDCInitEP 0036  
                           USBDeviceInit@i 009B                     _pBDTEntryEP0OutCurrent 0017  
                  USBTransferOnePacket@dir 0093                    USBTransferOnePacket@len 0096  
           __end_ofi2_USBTransferOnePacket 0D36              __size_of_PIC18F26K40_sendByte 0058  
                      _USBStdGetDscHandler 09B0        PIC18F26K40_readThreeBytes@direction 00A4  
                              __pdataBANK0 00B7                                   ??_memcpy 0030  
                                 ??_memset 0099                     BUTTON_IsPressed@button 0093  
                   _USBActiveConfiguration 0029             __end_of_USBStdGetStatusHandler 12C0  
                PIC18F26K40_loadPC@address 0099                                   ?_LED_Off 002A  
                              __pbssCOMRAM 0001                              __pcstackBANK0 0093  
             __size_of_USBCtrlTrfInHandler 005C                      __size_ofi2_LED_Enable 002C  
                     ?_USBStdGetDscHandler 002A                 __end_of_USBWakeFromSuspend 19FA  
                          _USBStallHandler 184C                               _pBDTEntryOut 0060  
               __end_of_USBCheckCDCRequest 10F0                   __size_of_USBDeviceAttach 0024  
              ?_PIC18F26K40_readThreeBytes 0099                      i2BUTTON_Enable@button 002A  
                                __pintcode 0008                               i2_LED_Enable 18E0  
                         ?i2_USBDeviceInit 002A                       _USBTransferOnePacket 0A82  
                              __smallconst 0300                      __end_of_putrsUSBUSART 14D8  
             __end_of_USBCtrlTrfOutHandler 1A1A                      ??_USBStdGetDscHandler 002A  
                              _ep_data_out 0070                           ?i2_BUTTON_Enable 002A  
      __end_of_APP_DeviceCDCBasicDemoTasks 06D2                _APP_DeviceCDCBasicDemoTasks 0588  
             __size_of_USBCtrlTrfRxService 0082              USBConfigureEndpoint@direction 002A  
             __size_ofi2_SYSTEM_Initialize 0016               __size_of_USBCtrlTrfTxService 007C  
                                 _LATCbits 000F8B                 ??_USBCtrlEPServiceComplete 002B  
                                 _IPR2bits 000FA2                                   _PIE2bits 000FA0  
    PIC18F26K40_loadDataIntoNVM@IncreasePC 009B                                   i2u200_40 0DE2  
                                 i2u200_47 0DDE       __end_of_PIC18F26K40_sendByteMsbToLsb 171E  
    __size_of_PIC18F26K40_sendByteMsbToLsb 004A               _PIC18F26K40_sendByteMsbToLsb 16D4  
                                 i2u213_40 09EE                                   i2u213_47 09EC  
                                 i2u214_40 0A00                                   i2u214_47 09FE  
                                 i2u216_40 0A2C                                   i2u216_47 0A2A  
                                 i2u186_40 136C                                   _PIR2bits 000FA1  
                                 i2u198_40 0DC6                                   i2u198_47 0DC2  
                                 _RCONbits 000FD0                              ??_putUSBUSART 0096  
                         __CFG_WDTPS$32768 000000                                   _UEP0bits 000F53  
               _USBDeferINDataStagePackets 001D                __size_of_USBCheckStdRequest 0084  
                                 _UCONbits 000F64                       _USBConfigureEndpoint 10F0  
         __size_of_USBStdFeatureReqHandler 0152                      ?_USBTransferOnePacket 0093  
                          i2LED_Enable@led 002A                          _SYS_InterruptHigh 0008  
                            ?_CDCTxService 002A                               _RemoteWakeup 0025  
                                 i2_memset 198E        __end_of_PIC18F26K40_loadDataIntoNVM 1532  
              _PIC18F26K40_loadDataIntoNVM 14D8                         _PIC18F26K40_loadPC 17A6  
                         __size_of_LED_Off 002C                         ?_SYS_InterruptHigh 002A  
                  __end_of_USBStallHandler 1876                                  copy_data0 15F8  
                        putrsUSBUSART@data 0093                ??_USBCtrlEPAllowStatusStage 002A  
              __end_of_USBStdSetCfgHandler 0E9A                        ?_PIC18F26K40_loadPC 0099  
                      ??_SYS_InterruptHigh 0048                         __end_of_device_dsc 03C2  
                 ??_APP_LEDUpdateUSBStatus 002B                    ?_USBCtrlTrfSetupHandler 002A  
                  USBStdGetStatusHandler@p 002A                                   __Hrparam 0000  
      PIC18F26K40_enterLowVoltageProg@code 0099                                  memcpy@tmp 0034  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 0099  
         PIC18F26K40_sendByteMsbToLsb@info 0095              ?_PIC18F26K40_sendByteMsbToLsb 002A  
                                 _SetupPkt 000230                      ?_USBConfigureEndpoint 002A  
   __end_of_PIC18F26K40_exitLowVoltageProg 1AF4    __size_of_PIC18F26K40_exitLowVoltageProg 000A  
           _PIC18F26K40_exitLowVoltageProg 1AEA                          ??_USBDeviceAttach 0093  
                        ?_BUTTON_IsPressed 002A                       ??_PIC18F26K40_loadPC 009D  
                __end_of_SYS_InterruptHigh 0062                         ??_BUTTON_IsPressed 0093  
                      __end_of_putUSBUSART 1A70                                _line_coding 008A  
                           ??_CDCTxService 009C              PIC18F26K40_sendByte@direction 0093  
                  __size_of_USBDeviceTasks 00F6                                   __ptext10 116C  
                                 __ptext11 0BFE                                   __ptext20 0A82  
                                 __ptext12 17A6                                   __ptext21 1A8C  
                                 __ptext13 14D8                                   __ptext30 1764  
                                 __ptext14 16D4                                   __ptext31 1688  
                                 __ptext23 06DE                                   __ptext15 1AEA  
                                 __ptext40 13AA                                   __ptext32 0EBA  
                                 __ptext24 08D6                                   __ptext16 171E  
                                 __ptext41 1A1A                                   __ptext33 1532  
                                 __ptext25 19DA                                   __ptext17 158C  
                                 __ptext50 190C                                   __ptext42 18E0  
                                 __ptext34 0F52                                   __ptext26 19B8  
                                 __ptext18 1AF4                                   __ptext51 1938  
                                 __ptext43 1AD4                                   __ptext35 0E16  
                                 __ptext27 184C                                   __ptext19 07DE  
                                 __ptext52 1AA6                                   __ptext44 1070  
                                 __ptext36 198E                                   __ptext28 1A70  
                                 __ptext53 19FA                                   __ptext45 1636  
                                 __ptext37 1258                                   __ptext29 12CA  
                                 __ptext54 0B44                                   __ptext46 0CB6  
                                 __ptext38 09B0                                   __ptext55 11E2  
                                 __ptext47 17E2                                   __ptext39 03F0  
                                 __ptext56 0FE2                                   __ptext48 10F0  
                                 __ptext57 0D6E                                   __ptext49 133A  
        __size_of_PIC18F26K40_setTrisToOut 0008             __end_of_USBCtrlTrfSetupHandler 16C8  
                            __size_of_main 0030                          ?_USBCtrlEPService 002A  
                ?_PIC18F26K40_setTrisToOut 002A                         ??_USBCtrlEPService 0046  
                      _USBCtrlTrfInHandler 0FE2                        BUTTON_Enable@button 0093  
                                 _outPipes 0001                       _USBCtrlTrfOutHandler 19FA  
                                 int$flags 0052                  _USBCtrlEPAllowStatusStage 11E2  
                               _LED_Enable 18B0                     ??_USBTransferOnePacket 0097  
                         putrsUSBUSART@len 0099                  _USBDeferStatusStagePacket 0020  
                 CDCTxService@byte_to_send 009D                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002A                                   memcpy@d1 002A  
                                 memcpy@s1 002C              USBCtrlTrfTxService@byteToSend 002A  
             __end_of_PIC18F26K40_sendByte 15E4                                   memset@p1 0093  
                         ?_USBStallHandler 002A                   USBStdFeatureReqHandler@p 0043  
                                 intlevel2 0000                     __size_of_USBDeviceInit 0066  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1414   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 006A  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 003C           ?_USER_USB_CALLBACK_EVENT_HANDLER 0036  
          _USER_USB_CALLBACK_EVENT_HANDLER 13AA               i2USBTransferOnePacket@handle 0031  
          __size_of_APP_LEDUpdateUSBStatus 0070                 i2USBTransferOnePacket@data 002B  
                   ??_USBConfigureEndpoint 002B                      ?_USBCtrlTrfOutHandler 002A  
                   __size_of_BUTTON_Enable 000A                                _putUSBUSART 1A54  
                     __CFG_CPUDIV$NOCLKDIV 000000                        _USBCtrlTrfRxService 0B44  
                       _USBWakeFromSuspend 19DA                    _USBStdFeatureReqHandler 03F0  
                      i2_SYSTEM_Initialize 1A1A                         _USBCheckCDCRequest 1070  
                      _USBCtrlTrfTxService 0D6E                 __size_of_SYS_InterruptHigh 005A  
           ??_PIC18F26K40_sendByteMsbToLsb 0093              PIC18F26K40_sendByteMsbToLsb@i 0096  
                      ?_USBWakeFromSuspend 002A                      ??_USBCtrlTrfInHandler 002B  
                    _USBAlternateInterface 0091                        ?_USBCheckCDCRequest 002A  
                i2USBTransferOnePacket@dir 002A                  i2USBTransferOnePacket@len 002D  
                      USBEnableEndpoint@ep 0035                            _endpoint_number 0023  
                     ?_USBCtrlTrfRxService 002A                              ?_getsUSBUSART 009C  
                     ?i2_SYSTEM_Initialize 002A                   ?_USBCtrlEPAllowDataStage 002A  
                     ?_USBCtrlTrfTxService 002A               _USBStatusStageTimeoutCounter 0021  
     PIC18F26K40_readThreeBytes@IncreasePC 0099                       ??_USBWakeFromSuspend 003E  
               USBTransferOnePacket@handle 009A                       __end_of_CDCTxService 08A6  
                     ??_USBCheckCDCRequest 002A                                 _USB_CD_Ptr 0304  
