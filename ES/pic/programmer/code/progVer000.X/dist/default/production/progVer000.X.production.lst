

Microchip Technology PIC18 PRO Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 30 09:35:39 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	pa_nodes0,global,class=CODE,delta=1
    77                           	dabs	1,0x200,48,_BDT
    78                           	dabs	1,0x280,64,_cdc_data_rx
    79                           	dabs	1,0x240,64,_cdc_data_tx
    80                           	dabs	1,0x238,8,_CtrlTrfData
    81                           	dabs	1,0x230,8,_SetupPkt
    82  0000                     
    83                           ; Version 1.42
    84                           ; Generated 13/04/2017 GMT
    85                           ; 
    86                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F14K50 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     tblptru	equ	0xFF8
   118                           tblptrh	equ	0xFF7
   119                           tblptrl	equ	0xFF6
   120                           tablat	equ	0xFF5
   121                           prodh	equ	0xFF4
   122                           prodl	equ	0xFF3
   123                           intcon	equ	0xFF2
   124                           wreg	equ	0xFE8
   125                           indf1	equ	0xFE7
   126                           fsr1h	equ	0xFE2
   127                           fsr1l	equ	0xFE1
   128                           indf2	equ	0xFDF
   129                           postinc2	equ	0xFDE
   130                           postdec2	equ	0xFDD
   131                           plusw2	equ	0xFDB
   132                           fsr2h	equ	0xFDA
   133                           fsr2l	equ	0xFD9
   134                           status	equ	0xFD8
   135                           
   136                           	psect	idataBANK0
   137  001AAC                     __pidataBANK0:
   138                           	opt stack 0
   139                           
   140                           ;initializer for _buttonMessage
   141  001AAC  42                 	db	66
   142  001AAD  75                 	db	117
   143  001AAE  74                 	db	116
   144  001AAF  74                 	db	116
   145  001AB0  6F                 	db	111
   146  001AB1  6E                 	db	110
   147  001AB2  20                 	db	32
   148  001AB3  70                 	db	112
   149  001AB4  72                 	db	114
   150  001AB5  65                 	db	101
   151  001AB6  73                 	db	115
   152  001AB7  73                 	db	115
   153  001AB8  65                 	db	101
   154  001AB9  64                 	db	100
   155  001ABA  2E                 	db	46
   156  001ABB  0D                 	db	13
   157  001ABC  0A                 	db	10
   158  001ABD  00                 	db	0
   159                           tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           tblptrl	equ	0xFF6
   162                           tablat	equ	0xFF5
   163                           prodh	equ	0xFF4
   164                           prodl	equ	0xFF3
   165                           intcon	equ	0xFF2
   166                           wreg	equ	0xFE8
   167                           indf1	equ	0xFE7
   168                           fsr1h	equ	0xFE2
   169                           fsr1l	equ	0xFE1
   170                           indf2	equ	0xFDF
   171                           postinc2	equ	0xFDE
   172                           postdec2	equ	0xFDD
   173                           plusw2	equ	0xFDB
   174                           fsr2h	equ	0xFDA
   175                           fsr2l	equ	0xFD9
   176                           status	equ	0xFD8
   177                           
   178                           	psect	smallconst
   179  000300                     __psmallconst:
   180                           	opt stack 0
   181  000300  00                 	db	0
   182  000301                     _USB_SD_Ptr:
   183                           	opt stack 0
   184  000301  C2                 	db	low _sd000
   185  000302  7C                 	db	low _sd001
   186  000303  48                 	db	low _sd002
   187  000304                     __end_of_USB_SD_Ptr:
   188                           	opt stack 0
   189  000304                     _USB_CD_Ptr:
   190                           	opt stack 0
   191  000304  05                 	db	low _configDescriptor1
   192  000305                     __end_of_USB_CD_Ptr:
   193                           	opt stack 0
   194  000305                     _configDescriptor1:
   195                           	opt stack 0
   196  000305  09                 	db	9
   197  000306  02                 	db	2
   198  000307  43                 	db	67
   199  000308  00                 	db	0
   200  000309  02                 	db	2
   201  00030A  01                 	db	1
   202  00030B  00                 	db	0
   203  00030C  C0                 	db	192
   204  00030D  32                 	db	50
   205  00030E  09                 	db	9
   206  00030F  04                 	db	4
   207  000310  00                 	db	0
   208  000311  00                 	db	0
   209  000312  01                 	db	1
   210  000313  02                 	db	2
   211  000314  02                 	db	2
   212  000315  01                 	db	1
   213  000316  00                 	db	0
   214  000317  05                 	db	5
   215  000318  24                 	db	36
   216  000319  00                 	db	0
   217  00031A  10                 	db	16
   218  00031B  01                 	db	1
   219  00031C  04                 	db	4
   220  00031D  24                 	db	36
   221  00031E  02                 	db	2
   222  00031F  02                 	db	2
   223  000320  05                 	db	5
   224  000321  24                 	db	36
   225  000322  06                 	db	6
   226  000323  00                 	db	0
   227  000324  01                 	db	1
   228  000325  05                 	db	5
   229  000326  24                 	db	36
   230  000327  01                 	db	1
   231  000328  00                 	db	0
   232  000329  01                 	db	1
   233  00032A  07                 	db	7
   234  00032B  05                 	db	5
   235  00032C  81                 	db	129
   236  00032D  03                 	db	3
   237  00032E  08                 	db	8
   238  00032F  00                 	db	0
   239  000330  02                 	db	2
   240  000331  09                 	db	9
   241  000332  04                 	db	4
   242  000333  01                 	db	1
   243  000334  00                 	db	0
   244  000335  02                 	db	2
   245  000336  0A                 	db	10
   246  000337  00                 	db	0
   247  000338  00                 	db	0
   248  000339  00                 	db	0
   249  00033A  07                 	db	7
   250  00033B  05                 	db	5
   251  00033C  02                 	db	2
   252  00033D  02                 	db	2
   253  00033E  40                 	db	64
   254  00033F  00                 	db	0
   255  000340  00                 	db	0
   256  000341  07                 	db	7
   257  000342  05                 	db	5
   258  000343  82                 	db	130
   259  000344  02                 	db	2
   260  000345  40                 	db	64
   261  000346  00                 	db	0
   262  000347  00                 	db	0
   263  000348                     __end_of_configDescriptor1:
   264                           	opt stack 0
   265  000348                     _sd002:
   266                           	opt stack 0
   267  000348  34                 	db	52
   268  000349  03                 	db	3
   269  00034A  0043               	dw	67
   270  00034C  0044               	dw	68
   271  00034E  0043               	dw	67
   272  000350  0020               	dw	32
   273  000352  0052               	dw	82
   274  000354  0053               	dw	83
   275  000356  002D               	dw	45
   276  000358  0032               	dw	50
   277  00035A  0033               	dw	51
   278  00035C  0032               	dw	50
   279  00035E  0020               	dw	32
   280  000360  0045               	dw	69
   281  000362  006D               	dw	109
   282  000364  0075               	dw	117
   283  000366  006C               	dw	108
   284  000368  0061               	dw	97
   285  00036A  0074               	dw	116
   286  00036C  0069               	dw	105
   287  00036E  006F               	dw	111
   288  000370  006E               	dw	110
   289  000372  0020               	dw	32
   290  000374  0044               	dw	68
   291  000376  0065               	dw	101
   292  000378  006D               	dw	109
   293  00037A  006F               	dw	111
   294  00037C                     __end_of_sd002:
   295                           	opt stack 0
   296  00037C                     _sd001:
   297                           	opt stack 0
   298  00037C  34                 	db	52
   299  00037D  03                 	db	3
   300  00037E  004D               	dw	77
   301  000380  0069               	dw	105
   302  000382  0063               	dw	99
   303  000384  0072               	dw	114
   304  000386  006F               	dw	111
   305  000388  0063               	dw	99
   306  00038A  0068               	dw	104
   307  00038C  0069               	dw	105
   308  00038E  0070               	dw	112
   309  000390  0020               	dw	32
   310  000392  0054               	dw	84
   311  000394  0065               	dw	101
   312  000396  0063               	dw	99
   313  000398  0068               	dw	104
   314  00039A  006E               	dw	110
   315  00039C  006F               	dw	111
   316  00039E  006C               	dw	108
   317  0003A0  006F               	dw	111
   318  0003A2  0067               	dw	103
   319  0003A4  0079               	dw	121
   320  0003A6  0020               	dw	32
   321  0003A8  0049               	dw	73
   322  0003AA  006E               	dw	110
   323  0003AC  0063               	dw	99
   324  0003AE  002E               	dw	46
   325  0003B0                     __end_of_sd001:
   326                           	opt stack 0
   327  0003B0                     _device_dsc:
   328                           	opt stack 0
   329  0003B0  12                 	db	18
   330  0003B1  01                 	db	1
   331  0003B2  0200               	dw	512
   332  0003B4  02                 	db	2
   333  0003B5  00                 	db	0
   334  0003B6  00                 	db	0
   335  0003B7  08                 	db	8
   336  0003B8  04D8               	dw	1240
   337  0003BA  000A               	dw	10
   338  0003BC  0100               	dw	256
   339  0003BE  01                 	db	1
   340  0003BF  02                 	db	2
   341  0003C0  00                 	db	0
   342  0003C1  01                 	db	1
   343  0003C2                     __end_of_device_dsc:
   344                           	opt stack 0
   345  0003C2                     _sd000:
   346                           	opt stack 0
   347  0003C2  04                 	db	4
   348  0003C3  03                 	db	3
   349  0003C4  0409               	dw	1033
   350  0003C6                     __end_of_sd000:
   351                           	opt stack 0
   352  0000                     _UEP0bits	set	3923
   353  0000                     _UADDR	set	3932
   354  0000                     _UEIE	set	3931
   355  0000                     _UEIR	set	3935
   356  0000                     _UEP1	set	3924
   357  0000                     _UEP0	set	3923
   358  0000                     _ANSELH	set	3967
   359  0000                     _ANSEL	set	3966
   360  0000                     _INTCONbits	set	4082
   361  0000                     _IPR2bits	set	4002
   362  0000                     _RCONbits	set	4048
   363  0000                     _UCON	set	3940
   364  0000                     _USTAT	set	3939
   365  0000                     _PIR2bits	set	4001
   366  0000                     _UIEbits	set	3936
   367  0000                     _UIRbits	set	3938
   368  0000                     _UIE	set	3936
   369  0000                     _UCFG	set	3937
   370  0000                     _UIR	set	3938
   371  0000                     _PIE2bits	set	4000
   372  0000                     _PORTAbits	set	3968
   373  0000                     _UCONbits	set	3940
   374  0000                     _PORTCbits	set	3970
   375  0000                     _LATCbits	set	3979
   376  0000                     _TRISCbits	set	3988
   377  0003C6                     STR_2:
   378                           
   379                           ; BSR set to: 0
   380  0003C6  30                 	db	48	;'0'
   381  0003C7  78                 	db	120	;'x'
   382  0003C8  30                 	db	48	;'0'
   383  0003C9  35                 	db	53	;'5'
   384  0003CA  20                 	db	32
   385  0003CB  69                 	db	105	;'i'
   386  0003CC  73                 	db	115	;'s'
   387  0003CD  20                 	db	32
   388  0003CE  70                 	db	112	;'p'
   389  0003CF  6C                 	db	108	;'l'
   390  0003D0  61                 	db	97	;'a'
   391  0003D1  63                 	db	99	;'c'
   392  0003D2  65                 	db	101	;'e'
   393  0003D3  64                 	db	100	;'d'
   394  0003D4  20                 	db	32
   395  0003D5  61                 	db	97	;'a'
   396  0003D6  74                 	db	116	;'t'
   397  0003D7  20                 	db	32
   398  0003D8  30                 	db	48	;'0'
   399  0003D9  78                 	db	120	;'x'
   400  0003DA  30                 	db	48	;'0'
   401  0003DB  30                 	db	48	;'0'
   402  0003DC  33                 	db	51	;'3'
   403  0003DD  31                 	db	49	;'1'
   404  0003DE  30                 	db	48	;'0'
   405  0003DF  30                 	db	48	;'0'
   406  0003E0  30                 	db	48	;'0'
   407  0003E1  30                 	db	48	;'0'
   408  0003E2  0A                 	db	10
   409  0003E3  0D                 	db	13
   410  0003E4  00                 	db	0
   411  0000                     
   412                           ; #config settings
   413  0003E5  00                 	db	0	; dummy byte at the end
   414  0000                     tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           prodh	equ	0xFF4
   419                           prodl	equ	0xFF3
   420                           intcon	equ	0xFF2
   421                           wreg	equ	0xFE8
   422                           indf1	equ	0xFE7
   423                           fsr1h	equ	0xFE2
   424                           fsr1l	equ	0xFE1
   425                           indf2	equ	0xFDF
   426                           postinc2	equ	0xFDE
   427                           postdec2	equ	0xFDD
   428                           plusw2	equ	0xFDB
   429                           fsr2h	equ	0xFDA
   430                           fsr2l	equ	0xFD9
   431                           status	equ	0xFD8
   432                           
   433                           	psect	cinit
   434  0015D0                     __pcinit:
   435                           	opt stack 0
   436  0015D0                     start_initialization:
   437                           	opt stack 0
   438  0015D0                     __initialization:
   439                           	opt stack 0
   440                           
   441                           ; Initialize objects allocated to BANK0 (18 bytes)
   442                           ; load TBLPTR registers with __pidataBANK0
   443  0015D0  0EAC               	movlw	low __pidataBANK0
   444  0015D2  6EF6               	movwf	tblptrl,c
   445  0015D4  0E1A               	movlw	high __pidataBANK0
   446  0015D6  6EF7               	movwf	tblptrh,c
   447  0015D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   448  0015DA  6EF8               	movwf	tblptru,c
   449  0015DC  EE00  F0ED         	lfsr	0,__pdataBANK0
   450  0015E0  EE10 F012          	lfsr	1,18
   451  0015E4                     copy_data0:
   452  0015E4  0009               	tblrd		*+
   453  0015E6  CFF5 FFEE          	movff	tablat,postinc0
   454  0015EA  50E5               	movf	postdec1,w,c
   455  0015EC  50E1               	movf	fsr1l,w,c
   456  0015EE  E1FA               	bnz	copy_data0
   457                           
   458                           ; Clear objects allocated to BANK1 (64 bytes)
   459  0015F0  EE01  F000         	lfsr	0,__pbssBANK1
   460  0015F4  0E40               	movlw	64
   461  0015F6                     clear_0:
   462  0015F6  6AEE               	clrf	postinc0,c
   463  0015F8  06E8               	decf	wreg,f,c
   464  0015FA  E1FD               	bnz	clear_0
   465                           
   466                           ; Clear objects allocated to BANK0 (115 bytes)
   467  0015FC  EE00  F060         	lfsr	0,__pbssBANK0
   468  001600  0E73               	movlw	115
   469  001602                     clear_1:
   470  001602  6AEE               	clrf	postinc0,c
   471  001604  06E8               	decf	wreg,f,c
   472  001606  E1FD               	bnz	clear_1
   473                           
   474                           ; Clear objects allocated to COMRAM (41 bytes)
   475  001608  EE00  F001         	lfsr	0,__pbssCOMRAM
   476  00160C  0E29               	movlw	41
   477  00160E                     clear_2:
   478  00160E  6AEE               	clrf	postinc0,c
   479  001610  06E8               	decf	wreg,f,c
   480  001612  E1FD               	bnz	clear_2
   481  001614                     end_of_initialization:
   482                           	opt stack 0
   483  001614                     __end_of__initialization:
   484                           	opt stack 0
   485  001614  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   486  001616  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   487  001618  0E00               	movlw	low (__Lmediumconst shr (0+16))
   488  00161A  6EF8               	movwf	tblptru,c
   489  00161C  0100               	movlb	0
   490  00161E  EF36  F00C         	goto	_main	;jump to C main() function
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           prodh	equ	0xFF4
   496                           prodl	equ	0xFF3
   497                           intcon	equ	0xFF2
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           indf1	equ	0xFE7
   501                           postdec1	equ	0xFE5
   502                           fsr1h	equ	0xFE2
   503                           fsr1l	equ	0xFE1
   504                           indf2	equ	0xFDF
   505                           postinc2	equ	0xFDE
   506                           postdec2	equ	0xFDD
   507                           plusw2	equ	0xFDB
   508                           fsr2h	equ	0xFDA
   509                           fsr2l	equ	0xFD9
   510                           status	equ	0xFD8
   511                           
   512                           	psect	bssCOMRAM
   513  000001                     __pbssCOMRAM:
   514                           	opt stack 0
   515  000001                     _outPipes:
   516                           	opt stack 0
   517  000001                     	ds	8
   518  000009                     _inPipes:
   519                           	opt stack 0
   520  000009                     	ds	6
   521  00000F                     _pBDTEntryIn:
   522                           	opt stack 0
   523  00000F                     	ds	6
   524  000015                     _pBDTEntryEP0OutNext:
   525                           	opt stack 0
   526  000015                     	ds	2
   527  000017                     _pBDTEntryEP0OutCurrent:
   528                           	opt stack 0
   529  000017                     	ds	2
   530  000019                     APP_LEDUpdateUSBStatus@ledCount:
   531                           	opt stack 0
   532  000019                     	ds	2
   533  00001B                     _cdc_tx_len:
   534                           	opt stack 0
   535  00001B                     	ds	1
   536  00001C                     _cdc_rx_len:
   537                           	opt stack 0
   538  00001C                     	ds	1
   539  00001D                     _USBDeferINDataStagePackets:
   540                           	opt stack 0
   541  00001D                     	ds	1
   542  00001E                     _USBStatusStageEnabledFlag2:
   543                           	opt stack 0
   544  00001E                     	ds	1
   545  00001F                     _USBStatusStageEnabledFlag1:
   546                           	opt stack 0
   547  00001F                     	ds	1
   548  000020                     _USBDeferStatusStagePacket:
   549                           	opt stack 0
   550  000020                     	ds	1
   551  000021                     _USBStatusStageTimeoutCounter:
   552                           	opt stack 0
   553  000021                     	ds	1
   554  000022                     _BothEP0OutUOWNsSet:
   555                           	opt stack 0
   556  000022                     	ds	1
   557  000023                     _endpoint_number:
   558                           	opt stack 0
   559  000023                     	ds	1
   560  000024                     _USBBusIsSuspended:
   561                           	opt stack 0
   562  000024                     	ds	1
   563  000025                     _RemoteWakeup:
   564                           	opt stack 0
   565  000025                     	ds	1
   566  000026                     _controlTransferState:
   567                           	opt stack 0
   568  000026                     	ds	1
   569  000027                     _shortPacketStatus:
   570                           	opt stack 0
   571  000027                     	ds	1
   572  000028                     _USTATcopy:
   573                           	opt stack 0
   574  000028                     	ds	1
   575  000029                     _USBActiveConfiguration:
   576                           	opt stack 0
   577  000029                     	ds	1
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           prodh	equ	0xFF4
   583                           prodl	equ	0xFF3
   584                           intcon	equ	0xFF2
   585                           postinc0	equ	0xFEE
   586                           wreg	equ	0xFE8
   587                           indf1	equ	0xFE7
   588                           postdec1	equ	0xFE5
   589                           fsr1h	equ	0xFE2
   590                           fsr1l	equ	0xFE1
   591                           indf2	equ	0xFDF
   592                           postinc2	equ	0xFDE
   593                           postdec2	equ	0xFDD
   594                           plusw2	equ	0xFDB
   595                           fsr2h	equ	0xFDA
   596                           fsr2l	equ	0xFD9
   597                           status	equ	0xFD8
   598                           
   599                           	psect	bssBANK0
   600  000060                     __pbssBANK0:
   601                           	opt stack 0
   602  000060                     _pBDTEntryOut:
   603                           	opt stack 0
   604  000060                     	ds	6
   605  000066                     _USB1msTickCount:
   606                           	opt stack 0
   607  000066                     	ds	4
   608  00006A                     _pCDCDst:
   609                           	opt stack 0
   610  00006A                     	ds	3
   611  00006D                     _pCDCSrc:
   612                           	opt stack 0
   613  00006D                     	ds	3
   614  000070                     _ep_data_out:
   615                           	opt stack 0
   616  000070                     	ds	3
   617  000073                     _ep_data_in:
   618                           	opt stack 0
   619  000073                     	ds	3
   620  000076                     _CDCDataInHandle:
   621                           	opt stack 0
   622  000076                     	ds	2
   623  000078                     _CDCDataOutHandle:
   624                           	opt stack 0
   625  000078                     	ds	2
   626  00007A                     _pDst:
   627                           	opt stack 0
   628  00007A                     	ds	2
   629  00007C                     _cdc_mem_type:
   630                           	opt stack 0
   631  00007C                     	ds	1
   632  00007D                     _USBTicksSinceSuspendEnd:
   633                           	opt stack 0
   634  00007D                     	ds	1
   635  00007E                     _USBDeferOUTDataStagePackets:
   636                           	opt stack 0
   637  00007E                     	ds	1
   638  00007F                     _buttonPressed:
   639                           	opt stack 0
   640  00007F                     	ds	1
   641  000080                     _cdc_trf_state:
   642                           	opt stack 0
   643  000080                     	ds	1
   644  000081                     _USBDeviceState:
   645                           	opt stack 0
   646  000081                     	ds	1
   647  000082                     _readBuffer:
   648                           	opt stack 0
   649  000082                     	ds	64
   650  0000C2                     _dummy_encapsulated_cmd_response:
   651                           	opt stack 0
   652  0000C2                     	ds	8
   653  0000CA                     _line_coding:
   654                           	opt stack 0
   655  0000CA                     	ds	7
   656  0000D1                     _USBAlternateInterface:
   657                           	opt stack 0
   658  0000D1                     	ds	2
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           prodh	equ	0xFF4
   664                           prodl	equ	0xFF3
   665                           intcon	equ	0xFF2
   666                           postinc0	equ	0xFEE
   667                           wreg	equ	0xFE8
   668                           indf1	equ	0xFE7
   669                           postdec1	equ	0xFE5
   670                           fsr1h	equ	0xFE2
   671                           fsr1l	equ	0xFE1
   672                           indf2	equ	0xFDF
   673                           postinc2	equ	0xFDE
   674                           postdec2	equ	0xFDD
   675                           plusw2	equ	0xFDB
   676                           fsr2h	equ	0xFDA
   677                           fsr2l	equ	0xFD9
   678                           status	equ	0xFD8
   679                           
   680                           	psect	dataBANK0
   681  0000ED                     __pdataBANK0:
   682                           	opt stack 0
   683  0000ED                     _buttonMessage:
   684                           	opt stack 0
   685  0000ED                     	ds	18
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           prodh	equ	0xFF4
   691                           prodl	equ	0xFF3
   692                           intcon	equ	0xFF2
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           indf1	equ	0xFE7
   696                           postdec1	equ	0xFE5
   697                           fsr1h	equ	0xFE2
   698                           fsr1l	equ	0xFE1
   699                           indf2	equ	0xFDF
   700                           postinc2	equ	0xFDE
   701                           postdec2	equ	0xFDD
   702                           plusw2	equ	0xFDB
   703                           fsr2h	equ	0xFDA
   704                           fsr2l	equ	0xFD9
   705                           status	equ	0xFD8
   706                           
   707                           	psect	bssBANK1
   708  000100                     __pbssBANK1:
   709                           	opt stack 0
   710  000100                     _writeBuffer:
   711                           	opt stack 0
   712  000100                     	ds	64
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           intcon	equ	0xFF2
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           indf1	equ	0xFE7
   723                           postdec1	equ	0xFE5
   724                           fsr1h	equ	0xFE2
   725                           fsr1l	equ	0xFE1
   726                           indf2	equ	0xFDF
   727                           postinc2	equ	0xFDE
   728                           postdec2	equ	0xFDD
   729                           plusw2	equ	0xFDB
   730                           fsr2h	equ	0xFDA
   731                           fsr2l	equ	0xFD9
   732                           status	equ	0xFD8
   733                           
   734                           	psect	cstackBANK1
   735  000140                     __pcstackBANK1:
   736                           	opt stack 0
   737  000140                     APP_DeviceCDCBasicDemoTasks@a:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x0
   741  000140                     	ds	4
   742  000144                     APP_DeviceCDCBasicDemoTasks@a_2111:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x4
   746  000144                     	ds	4
   747  000148                     APP_DeviceCDCBasicDemoTasks@numBytesRead:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x8
   751  000148                     	ds	1
   752  000149                     APP_DeviceCDCBasicDemoTasks@i:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x9
   756  000149                     	ds	1
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           prodh	equ	0xFF4
   762                           prodl	equ	0xFF3
   763                           intcon	equ	0xFF2
   764                           postinc0	equ	0xFEE
   765                           wreg	equ	0xFE8
   766                           indf1	equ	0xFE7
   767                           postdec1	equ	0xFE5
   768                           fsr1h	equ	0xFE2
   769                           fsr1l	equ	0xFE1
   770                           indf2	equ	0xFDF
   771                           postinc2	equ	0xFDE
   772                           postdec2	equ	0xFDD
   773                           plusw2	equ	0xFDB
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8
   777                           
   778                           	psect	cstackBANK0
   779  0000D3                     __pcstackBANK0:
   780                           	opt stack 0
   781  0000D3                     ??_PIC18F26K40_sendByteMsbToLsb:
   782  0000D3                     ?_USBTransferOnePacket:
   783                           	opt stack 0
   784  0000D3                     PIC18F26K40_sendByte@direction:
   785                           	opt stack 0
   786  0000D3                     BUTTON_IsPressed@button:
   787                           	opt stack 0
   788  0000D3                     BUTTON_Enable@button:
   789                           	opt stack 0
   790  0000D3                     LED_Enable@led:
   791                           	opt stack 0
   792  0000D3                     USBTransferOnePacket@dir:
   793                           	opt stack 0
   794  0000D3                     putUSBUSART@data:
   795                           	opt stack 0
   796  0000D3                     putrsUSBUSART@data:
   797                           	opt stack 0
   798  0000D3                     memset@p1:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x0
   802  0000D3                     	ds	1
   803  0000D4                     ??_PIC18F26K40_sendByte:
   804  0000D4                     SYSTEM_Initialize@state:
   805                           	opt stack 0
   806  0000D4                     USBTransferOnePacket@data:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x1
   810  0000D4                     	ds	1
   811  0000D5                     ??_putrsUSBUSART:
   812  0000D5                     PIC18F26K40_sendByteMsbToLsb@info:
   813                           	opt stack 0
   814  0000D5                     putUSBUSART@length:
   815                           	opt stack 0
   816  0000D5                     memset@c:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x2
   820  0000D5                     	ds	1
   821  0000D6                     PIC18F26K40_sendByte@info:
   822                           	opt stack 0
   823  0000D6                     PIC18F26K40_sendByteMsbToLsb@i:
   824                           	opt stack 0
   825  0000D6                     USBTransferOnePacket@len:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x3
   829  0000D6                     	ds	1
   830  0000D7                     ??_USBTransferOnePacket:
   831  0000D7                     PIC18F26K40_sendByte@j:
   832                           	opt stack 0
   833  0000D7                     putrsUSBUSART@pData:
   834                           	opt stack 0
   835  0000D7                     memset@n:
   836                           	opt stack 0
   837  0000D7                     PIC18F26K40_loadDataIntoNVM@data:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x4
   841  0000D7                     	ds	1
   842  0000D8                     PIC18F26K40_sendByte@i:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x5
   846  0000D8                     	ds	1
   847  0000D9                     ?_PIC18F26K40_readThreeBytes:
   848                           	opt stack 0
   849  0000D9                     PIC18F26K40_readThreeBytes@IncreasePC:
   850                           	opt stack 0
   851  0000D9                     USBTransferOnePacket@ep:
   852                           	opt stack 0
   853  0000D9                     putrsUSBUSART@len:
   854                           	opt stack 0
   855  0000D9                     memset@p:
   856                           	opt stack 0
   857  0000D9                     PIC18F26K40_enterLowVoltageProg@code:
   858                           	opt stack 0
   859  0000D9                     PIC18F26K40_loadPC@address:
   860                           	opt stack 0
   861                           
   862                           ; 4 bytes @ 0x6
   863  0000D9                     	ds	1
   864  0000DA                     USBTransferOnePacket@handle:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x7
   868  0000DA                     	ds	1
   869  0000DB                     PIC18F26K40_loadDataIntoNVM@IncreasePC:
   870                           	opt stack 0
   871  0000DB                     USBDeviceInit@i:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x8
   875  0000DB                     	ds	1
   876  0000DC                     ??_PIC18F26K40_loadDataIntoNVM:
   877  0000DC                     getsUSBUSART@buffer:
   878                           	opt stack 0
   879  0000DC                     CDCTxService@i:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x9
   883  0000DC                     	ds	1
   884  0000DD                     ??_PIC18F26K40_readThreeBytes:
   885  0000DD                     getsUSBUSART@len:
   886                           	opt stack 0
   887  0000DD                     CDCTxService@byte_to_send:
   888                           	opt stack 0
   889  0000DD                     PIC18F26K40_loadPC@tempAddress:
   890                           	opt stack 0
   891  0000DD                     PIC18F26K40_loadDataIntoNVM@tempData:
   892                           	opt stack 0
   893                           
   894                           ; 4 bytes @ 0xA
   895  0000DD                     	ds	1
   896  0000DE                     
   897                           ; 1 bytes @ 0xB
   898  0000DE                     	ds	6
   899  0000E4                     PIC18F26K40_readThreeBytes@direction:
   900                           	opt stack 0
   901                           
   902                           ; 1 bytes @ 0x11
   903  0000E4                     	ds	1
   904  0000E5                     PIC18F26K40_readThreeBytes@data:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x12
   908  0000E5                     	ds	4
   909  0000E9                     PIC18F26K40_readThreeBytes@j:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x16
   913  0000E9                     	ds	1
   914  0000EA                     PIC18F26K40_readThreeBytes@i:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x17
   918  0000EA                     	ds	1
   919  0000EB                     ??_main:
   920                           
   921                           ; 1 bytes @ 0x18
   922  0000EB                     	ds	2
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           prodh	equ	0xFF4
   928                           prodl	equ	0xFF3
   929                           intcon	equ	0xFF2
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           indf1	equ	0xFE7
   933                           postdec1	equ	0xFE5
   934                           fsr1h	equ	0xFE2
   935                           fsr1l	equ	0xFE1
   936                           indf2	equ	0xFDF
   937                           postinc2	equ	0xFDE
   938                           postdec2	equ	0xFDD
   939                           plusw2	equ	0xFDB
   940                           fsr2h	equ	0xFDA
   941                           fsr2l	equ	0xFD9
   942                           status	equ	0xFD8
   943                           
   944                           	psect	cstackCOMRAM
   945  00002A                     __pcstackCOMRAM:
   946                           	opt stack 0
   947  00002A                     ??_USBStdGetDscHandler:
   948  00002A                     ?i2_USBTransferOnePacket:
   949                           	opt stack 0
   950  00002A                     LED_On@led:
   951                           	opt stack 0
   952  00002A                     LED_Off@led:
   953                           	opt stack 0
   954  00002A                     USBConfigureEndpoint@direction:
   955                           	opt stack 0
   956  00002A                     USBCtrlTrfTxService@byteToSend:
   957                           	opt stack 0
   958  00002A                     USBCtrlTrfRxService@i:
   959                           	opt stack 0
   960  00002A                     i2BUTTON_Enable@button:
   961                           	opt stack 0
   962  00002A                     i2LED_Enable@led:
   963                           	opt stack 0
   964  00002A                     i2USBTransferOnePacket@dir:
   965                           	opt stack 0
   966  00002A                     USBStdGetStatusHandler@p:
   967                           	opt stack 0
   968  00002A                     memcpy@d1:
   969                           	opt stack 0
   970  00002A                     i2memset@p1:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0x0
   974  00002A                     	ds	1
   975  00002B                     ??_USBConfigureEndpoint:
   976  00002B                     USBCtrlTrfRxService@byteToRead:
   977                           	opt stack 0
   978  00002B                     USBCtrlTrfInHandler@lastDTS:
   979                           	opt stack 0
   980  00002B                     i2SYSTEM_Initialize@state:
   981                           	opt stack 0
   982  00002B                     i2USBTransferOnePacket@data:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0x1
   986  00002B                     	ds	1
   987  00002C                     memcpy@s1:
   988                           	opt stack 0
   989  00002C                     i2memset@c:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x2
   993  00002C                     	ds	1
   994  00002D                     i2USBTransferOnePacket@len:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x3
   998  00002D                     	ds	1
   999  00002E                     ??i2_USBTransferOnePacket:
  1000  00002E                     memcpy@n:
  1001                           	opt stack 0
  1002  00002E                     i2memset@n:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x4
  1006  00002E                     	ds	1
  1007  00002F                     USBConfigureEndpoint@EPNum:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x5
  1011  00002F                     	ds	1
  1012  000030                     i2USBTransferOnePacket@ep:
  1013                           	opt stack 0
  1014  000030                     USBConfigureEndpoint@handle:
  1015                           	opt stack 0
  1016  000030                     memcpy@d:
  1017                           	opt stack 0
  1018  000030                     i2memset@p:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0x6
  1022  000030                     	ds	1
  1023  000031                     i2USBTransferOnePacket@handle:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x7
  1027  000031                     	ds	1
  1028  000032                     USBEnableEndpoint@options:
  1029                           	opt stack 0
  1030  000032                     i2USBDeviceInit@i:
  1031                           	opt stack 0
  1032  000032                     memcpy@s:
  1033                           	opt stack 0
  1034                           
  1035                           ; 2 bytes @ 0x8
  1036  000032                     	ds	1
  1037  000033                     USBEnableEndpoint@p:
  1038                           	opt stack 0
  1039                           
  1040                           ; 2 bytes @ 0x9
  1041  000033                     	ds	1
  1042  000034                     memcpy@tmp:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0xA
  1046  000034                     	ds	1
  1047  000035                     USBEnableEndpoint@ep:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0xB
  1051  000035                     	ds	1
  1052  000036                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0xC
  1056  000036                     	ds	2
  1057  000038                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0xE
  1061  000038                     	ds	2
  1062  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x10
  1066  00003A                     	ds	2
  1067  00003C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1068                           
  1069                           ; 1 bytes @ 0x12
  1070  00003C                     	ds	2
  1071  00003E                     ??_USBStdFeatureReqHandler:
  1072  00003E                     USBStdSetCfgHandler@i:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x14
  1076  00003E                     	ds	2
  1077  000040                     USBStdFeatureReqHandler@pUEP:
  1078                           	opt stack 0
  1079                           
  1080                           ; 2 bytes @ 0x16
  1081  000040                     	ds	2
  1082  000042                     USBStdFeatureReqHandler@current_ep_data:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0x18
  1086  000042                     	ds	1
  1087  000043                     USBStdFeatureReqHandler@p:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x19
  1091  000043                     	ds	2
  1092  000045                     ??_USBCheckStdRequest:
  1093                           
  1094                           ; 1 bytes @ 0x1B
  1095  000045                     	ds	1
  1096  000046                     ??_USBCtrlEPService:
  1097  000046                     
  1098                           ; 1 bytes @ 0x1C
  1099  000046                     	ds	1
  1100  000047                     USBDeviceTasks@i:
  1101                           	opt stack 0
  1102                           
  1103                           ; 1 bytes @ 0x1D
  1104  000047                     	ds	1
  1105  000048                     ??_SYS_InterruptHigh:
  1106                           
  1107                           ; 1 bytes @ 0x1E
  1108  000048                     	ds	10
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           prodh	equ	0xFF4
  1114                           prodl	equ	0xFF3
  1115                           intcon	equ	0xFF2
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           indf1	equ	0xFE7
  1119                           postdec1	equ	0xFE5
  1120                           fsr1h	equ	0xFE2
  1121                           fsr1l	equ	0xFE1
  1122                           indf2	equ	0xFDF
  1123                           postinc2	equ	0xFDE
  1124                           postdec2	equ	0xFDD
  1125                           plusw2	equ	0xFDB
  1126                           fsr2h	equ	0xFDA
  1127                           fsr2l	equ	0xFD9
  1128                           status	equ	0xFD8
  1129                           
  1130 ;;
  1131 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1132 ;;
  1133 ;; *************** function _main *****************
  1134 ;; Defined at:
  1135 ;;		line 12 in file "main.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1149 ;;      Params:         0       0       0       0
  1150 ;;      Locals:         0       0       0       0
  1151 ;;      Temps:          0       2       0       0
  1152 ;;      Totals:         0       2       0       0
  1153 ;;Total ram usage:        2 bytes
  1154 ;; Hardware stack levels required when called:   14
  1155 ;; This function calls:
  1156 ;;		_APP_DeviceCDCBasicDemoTasks
  1157 ;;		_SYSTEM_Initialize
  1158 ;;		_USBDeviceAttach
  1159 ;;		_USBDeviceInit
  1160 ;; This function is called by:
  1161 ;;		Startup code after reset
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text0
  1166  00186C                     __ptext0:
  1167                           	opt stack 0
  1168  00186C                     _main:
  1169                           	opt stack 17
  1170                           
  1171                           ;main.c: 13: ANSEL = ANSELH = 0;
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;incstack = 0
  1175  00186C  6A7F               	clrf	3967,c	;volatile
  1176  00186E  6A7E               	clrf	3966,c	;volatile
  1177                           
  1178                           ;main.c: 14: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1179  001870  0E00               	movlw	0
  1180  001872  EC12  F00D         	call	_SYSTEM_Initialize
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;main.c: 15: USBDeviceInit();
  1184  001876  EC00  F00A         	call	_USBDeviceInit	;wreg free
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;main.c: 16: USBDeviceAttach();
  1188  00187A  EC02  F00C         	call	_USBDeviceAttach	;wreg free
  1189  00187E                     l5015:
  1190                           
  1191                           ;main.c: 18: ;
  1192                           ;main.c: 37: APP_DeviceCDCBasicDemoTasks();
  1193  00187E  ECBF  F002         	call	_APP_DeviceCDCBasicDemoTasks	;wreg free
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;main.c: 38: _delay((unsigned long)((100)*(12000000/4000.0)));
  1197  001882  0E02               	movlw	2
  1198  001884  0100               	movlb	0	; () banked
  1199  001886  6FEC               	movwf	(??_main+1)& (0+255),b
  1200  001888  0E86               	movlw	134
  1201  00188A  6FEB               	movwf	??_main& (0+255),b
  1202  00188C  0E99               	movlw	153
  1203  00188E                     u4067:
  1204  00188E  2EE8               	decfsz	wreg,f,c
  1205  001890  D7FE               	bra	u4067
  1206  001892  2FEB               	decfsz	??_main& (0+255),f,b
  1207  001894  D7FC               	bra	u4067
  1208  001896  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1209  001898  D7FA               	bra	u4067
  1210  00189A  D7F1               	goto	l5015
  1211  00189C                     __end_of_main:
  1212                           	opt stack 0
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           prodh	equ	0xFF4
  1218                           prodl	equ	0xFF3
  1219                           intcon	equ	0xFF2
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           indf1	equ	0xFE7
  1223                           postdec1	equ	0xFE5
  1224                           fsr1h	equ	0xFE2
  1225                           fsr1l	equ	0xFE1
  1226                           indf2	equ	0xFDF
  1227                           postinc2	equ	0xFDE
  1228                           postdec2	equ	0xFDD
  1229                           plusw2	equ	0xFDB
  1230                           fsr2h	equ	0xFDA
  1231                           fsr2l	equ	0xFD9
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _USBDeviceInit *****************
  1235 ;; Defined at:
  1236 ;;		line 277 in file "picLibs/usb_device.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  i               1    8[BANK0 ] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 3F/0
  1247 ;;		On exit  : 3F/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1250 ;;      Params:         0       0       0       0
  1251 ;;      Locals:         0       1       0       0
  1252 ;;      Temps:          0       0       0       0
  1253 ;;      Totals:         0       1       0       0
  1254 ;;Total ram usage:        1 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:   11
  1257 ;; This function calls:
  1258 ;;		_memset
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text1
  1265  001400                     __ptext1:
  1266                           	opt stack 0
  1267  001400                     _USBDeviceInit:
  1268                           	opt stack 0
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;usb_device.c: 279: uint8_t i;
  1272                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1273                           
  1274                           ;incstack = 0
  1275                           
  1276                           ;usb_device.c: 285: ;
  1277                           ;usb_device.c: 288: {UEIR = 0;};
  1278                           
  1279                           ;usb_device.c: 291: {UIR = 0;};
  1280                           
  1281                           ;usb_device.c: 294: UEP0 = 0;
  1282  001400  ECC0  F004         	call	PL76	;call to abstracted procedure
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1286  001404  0E54               	movlw	84
  1287  001406  0100               	movlb	0	; () banked
  1288  001408  6FD3               	movwf	memset@p1& (0+255),b
  1289  00140A  0E0F               	movlw	15
  1290  00140C  6FD4               	movwf	(memset@p1+1)& (0+255),b
  1291  00140E  6BD6               	clrf	(memset@c+1)& (0+255),b
  1292  001410  6BD5               	clrf	memset@c& (0+255),b
  1293  001412  6BD8               	clrf	(memset@n+1)& (0+255),b
  1294  001414  0E02               	movlw	2
  1295  001416  6FD7               	movwf	memset@n& (0+255),b
  1296  001418  ECA8  F00C         	call	_memset	;wreg free
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1300                           
  1301                           ; BSR set to: 0
  1302                           
  1303                           ; BSR set to: 15
  1304  00141C  EC14  F00C         	call	PL30	;call to abstracted procedure
  1305                           
  1306                           ; BSR set to: 15
  1307                           ;usb_device.c: 301: ;
  1308                           ;usb_device.c: 304: ;
  1309                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1310  001420  0100               	movlb	0	; () banked
  1311  001422  6BDB               	clrf	USBDeviceInit@i& (0+255),b
  1312  001424                     l4931:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;usb_device.c: 308: {
  1316                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1317  001424  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1318  001426  ECB4  F004         	call	PL34	;call to abstracted procedure
  1319                           
  1320                           ; BSR set to: 0
  1321  00142A  2BDB               	incf	USBDeviceInit@i& (0+255),f,b
  1322                           
  1323                           ; BSR set to: 0
  1324  00142C  0E0B               	movlw	11
  1325  00142E  65DB               	cpfsgt	USBDeviceInit@i& (0+255),b
  1326  001430  D7F9               	goto	l4931
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;usb_device.c: 310: }
  1330                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1331                           
  1332                           ;usb_device.c: 316: UADDR = 0x00;
  1333                           
  1334                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1335                           
  1336                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1337                           
  1338                           ;usb_device.c: 326: {
  1339                           ;usb_device.c: 327: (UIR &= 0xF7);
  1340                           
  1341                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1342                           
  1343                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1344                           
  1345                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1346                           
  1347                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1348                           
  1349                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1350                           
  1351                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1352                           
  1353                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1354                           
  1355                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1359  001432  ECA0  F004         	call	PL20	;call to abstracted procedure
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1363  001436  6BDB               	clrf	USBDeviceInit@i& (0+255),b
  1364  001438                     l4961:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;usb_device.c: 346: {
  1368                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1369  001438  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1370  00143A  EC80  F005         	call	PL26	;call to abstracted procedure
  1371  00143E  6ADE               	clrf	postinc2,c
  1372  001440  6ADD               	clrf	postdec2,c
  1373                           
  1374                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1375  001442  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1376  001444  EC7A  F005         	call	PL24	;call to abstracted procedure
  1377  001448  6ADE               	clrf	postinc2,c
  1378  00144A  6ADD               	clrf	postdec2,c
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1382  00144C  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1383  00144E  ECCB  F004         	call	PL90	;call to abstracted procedure
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1387  001452  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1388  001454  ECC6  F004         	call	PL82	;call to abstracted procedure
  1389                           
  1390                           ; BSR set to: 0
  1391  001458  2BDB               	incf	USBDeviceInit@i& (0+255),f,b
  1392                           
  1393                           ; BSR set to: 0
  1394  00145A  0E02               	movlw	2
  1395  00145C  65DB               	cpfsgt	USBDeviceInit@i& (0+255),b
  1396  00145E  D7EC               	goto	l4961
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;usb_device.c: 351: }
  1400                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1401  001460  0E08               	movlw	8
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1405                           
  1406                           ; BSR set to: 15
  1407                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1408                           
  1409                           ; BSR set to: 2
  1410                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1411                           
  1412                           ; BSR set to: 2
  1413                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1414                           
  1415                           ; BSR set to: 2
  1416                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1417                           
  1418                           ; BSR set to: 2
  1419                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1420                           
  1421                           ; BSR set to: 2
  1422                           ;usb_device.c: 366: USB1msTickCount = 0;
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1429                           
  1430                           ; BSR set to: 0
  1431  001462  EF87  F004         	goto	PL14	;call to abstracted procedure
  1432  001466                     __end_of_USBDeviceInit:
  1433                           	opt stack 0
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           prodh	equ	0xFF4
  1439                           prodl	equ	0xFF3
  1440                           intcon	equ	0xFF2
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           indf1	equ	0xFE7
  1444                           postdec1	equ	0xFE5
  1445                           fsr1h	equ	0xFE2
  1446                           fsr1l	equ	0xFE1
  1447                           indf2	equ	0xFDF
  1448                           postinc2	equ	0xFDE
  1449                           postdec2	equ	0xFDD
  1450                           plusw2	equ	0xFDB
  1451                           fsr2h	equ	0xFDA
  1452                           fsr2l	equ	0xFD9
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function _memset *****************
  1456 ;; Defined at:
  1457 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  p1              2    0[BANK0 ] PTR void 
  1460 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1461 ;;  c               2    2[BANK0 ] int 
  1462 ;;  n               2    4[BANK0 ] unsigned int 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  p               2    6[BANK0 ] PTR unsigned char 
  1465 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  2    0[BANK0 ] PTR void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 3F/0
  1472 ;;		On exit  : 3F/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1475 ;;      Params:         0       6       0       0
  1476 ;;      Locals:         0       2       0       0
  1477 ;;      Temps:          0       0       0       0
  1478 ;;      Totals:         0       8       0       0
  1479 ;;Total ram usage:        8 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:   10
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_USBDeviceInit
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text2
  1490  001950                     __ptext2:
  1491                           	opt stack 0
  1492  001950                     _memset:
  1493                           	opt stack 19
  1494                           
  1495                           ; BSR set to: 0
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;incstack = 0
  1499  001950  C0D3  F0D9         	movff	memset@p1,memset@p
  1500  001954  C0D4  F0DA         	movff	memset@p1+1,memset@p+1
  1501  001958  D008               	goto	l4843
  1502  00195A                     l4839:
  1503                           
  1504                           ; BSR set to: 0
  1505  00195A  C0D9  FFD9         	movff	memset@p,fsr2l
  1506  00195E  C0DA  FFDA         	movff	memset@p+1,fsr2h
  1507  001962  C0D5  FFDF         	movff	memset@c,indf2
  1508                           
  1509                           ; BSR set to: 0
  1510  001966  4BD9               	infsnz	memset@p& (0+255),f,b
  1511  001968  2BDA               	incf	(memset@p+1)& (0+255),f,b
  1512  00196A                     l4843:
  1513                           
  1514                           ; BSR set to: 0
  1515  00196A  07D7               	decf	memset@n& (0+255),f,b
  1516  00196C  A0D8               	btfss	status,0,c
  1517  00196E  07D8               	decf	(memset@n+1)& (0+255),f,b
  1518  001970  29D7               	incf	memset@n& (0+255),w,b
  1519  001972  E1F3               	bnz	l4839
  1520  001974  29D8               	incf	(memset@n+1)& (0+255),w,b
  1521  001976  E1F1               	bnz	l4839
  1522                           
  1523                           ; BSR set to: 0
  1524  001978  0012               	return		;funcret
  1525  00197A                     __end_of_memset:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           prodh	equ	0xFF4
  1532                           prodl	equ	0xFF3
  1533                           intcon	equ	0xFF2
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           indf1	equ	0xFE7
  1537                           postdec1	equ	0xFE5
  1538                           fsr1h	equ	0xFE2
  1539                           fsr1l	equ	0xFE1
  1540                           indf2	equ	0xFDF
  1541                           postinc2	equ	0xFDE
  1542                           postdec2	equ	0xFDD
  1543                           plusw2	equ	0xFDB
  1544                           fsr2h	equ	0xFDA
  1545                           fsr2l	equ	0xFD9
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _USBDeviceAttach *****************
  1549 ;; Defined at:
  1550 ;;		line 1352 in file "picLibs/usb_device.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2
  1559 ;; Tracked objects:
  1560 ;;		On entry : 3F/0
  1561 ;;		On exit  : 3F/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1564 ;;      Params:         0       0       0       0
  1565 ;;      Locals:         0       0       0       0
  1566 ;;      Temps:          0       0       0       0
  1567 ;;      Totals:         0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:   10
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text3
  1579  001804                     __ptext3:
  1580                           	opt stack 0
  1581  001804                     _USBDeviceAttach:
  1582                           	opt stack 20
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;usb_device.c: 1356: {
  1586                           ;usb_device.c: 1357: if(1 == 1)
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;incstack = 0
  1590  001804  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1591  001806  A4D8               	btfss	status,2,c
  1592  001808  0012               	return	
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;usb_device.c: 1358: {
  1596                           ;usb_device.c: 1360: UCON = 0;
  1597  00180A  6A64               	clrf	3940,c	;volatile
  1598                           
  1599                           ;usb_device.c: 1363: UIE = 0;
  1600  00180C  6A60               	clrf	3936,c	;volatile
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1604  00180E  D80C               	call	PL30	;call to abstracted procedure
  1605                           
  1606                           ; BSR set to: 15
  1607                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1608  001810  8ED0               	bsf	4048,7,c	;volatile
  1609                           
  1610                           ; BSR set to: 15
  1611  001812  84A2               	bsf	4002,2,c	;volatile
  1612                           
  1613                           ; BSR set to: 15
  1614  001814  84A0               	bsf	4000,2,c	;volatile
  1615                           
  1616                           ; BSR set to: 15
  1617  001816  8EF2               	bsf	intcon,7,c	;volatile
  1618                           
  1619                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1620  001818  D001               	goto	l518
  1621  00181A                     l519:
  1622  00181A  8664               	bsf	3940,3,c	;volatile
  1623  00181C                     l518:
  1624  00181C  A664               	btfss	3940,3,c	;volatile
  1625  00181E  D7FD               	goto	l519
  1626                           
  1627                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1628  001820  0E01               	movlw	1
  1629  001822  0100               	movlb	0	; () banked
  1630  001824  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633  001826  0C01               	retlw	1	;funcret
  1634  001828                     __end_of_USBDeviceAttach:
  1635                           	opt stack 0
  1636  001828                     PL30:
  1637                           	opt stack 19
  1638  001828  0E16               	movlw	22
  1639  00182A  6E61               	movwf	3937,c	;volatile
  1640  00182C  0E9F               	movlw	159
  1641  00182E  010F               	movlb	15	; () banked
  1642  001830  6F5B               	movwf	91,b	;volatile
  1643  001832  0E7B               	movlw	123
  1644  001834  6E60               	movwf	3936,c	;volatile
  1645  001836  0C7B               	retlw	123
  1646  001838                     __end_ofPL30:
  1647                           	opt stack 0
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           prodh	equ	0xFF4
  1653                           prodl	equ	0xFF3
  1654                           intcon	equ	0xFF2
  1655                           postinc0	equ	0xFEE
  1656                           wreg	equ	0xFE8
  1657                           indf1	equ	0xFE7
  1658                           postdec1	equ	0xFE5
  1659                           fsr1h	equ	0xFE2
  1660                           fsr1l	equ	0xFE1
  1661                           indf2	equ	0xFDF
  1662                           postinc2	equ	0xFDE
  1663                           postdec2	equ	0xFDD
  1664                           plusw2	equ	0xFDB
  1665                           fsr2h	equ	0xFDA
  1666                           fsr2l	equ	0xFD9
  1667                           status	equ	0xFD8
  1668                           
  1669 ;; *************** function _SYSTEM_Initialize *****************
  1670 ;; Defined at:
  1671 ;;		line 66 in file "picLibs/system.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  state           1    wreg     enum E3329
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  state           1    1[BANK0 ] enum E3329
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 3F/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1685 ;;      Params:         0       0       0       0
  1686 ;;      Locals:         0       1       0       0
  1687 ;;      Temps:          0       0       0       0
  1688 ;;      Totals:         0       1       0       0
  1689 ;;Total ram usage:        1 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:   11
  1692 ;; This function calls:
  1693 ;;		_BUTTON_Enable
  1694 ;;		_LED_Enable
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text4
  1701  001A24                     __ptext4:
  1702                           	opt stack 0
  1703  001A24                     _SYSTEM_Initialize:
  1704                           	opt stack 19
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;incstack = 0
  1708                           ;SYSTEM_Initialize@state stored from wreg
  1709  001A24  0100               	movlb	0	; () banked
  1710  001A26  6FD4               	movwf	SYSTEM_Initialize@state& (0+255),b
  1711                           
  1712                           ;system.c: 68: switch(state)
  1713  001A28  D006               	goto	l4913
  1714  001A2A                     l4909:
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;system.c: 71: LED_Enable(LED_D1);
  1718  001A2A  0E01               	movlw	1
  1719  001A2C  EC4E  F00C         	call	_LED_Enable
  1720                           
  1721                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  1722  001A30  0E01               	movlw	1
  1723  001A32  EF65  F00D         	goto	_BUTTON_Enable
  1724  001A36                     l4913:
  1725  001A36  0100               	movlb	0	; () banked
  1726  001A38  51D4               	movf	SYSTEM_Initialize@state& (0+255),w,b
  1727                           
  1728                           ; Switch size 1, requested type "space"
  1729                           ; Number of cases is 3, Range of values is 0 to 2
  1730                           ; switch strategies available:
  1731                           ; Name         Instructions Cycles
  1732                           ; simple_byte           10     6 (average)
  1733                           ;	Chosen strategy is simple_byte
  1734  001A3A  E0F7               	bz	l4909
  1735  001A3C  EF0E  F00D         	goto	PL104	;call to abstracted procedure
  1736  001A40                     __end_of_SYSTEM_Initialize:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           intcon	equ	0xFF2
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           indf1	equ	0xFE7
  1748                           postdec1	equ	0xFE5
  1749                           fsr1h	equ	0xFE2
  1750                           fsr1l	equ	0xFE1
  1751                           indf2	equ	0xFDF
  1752                           postinc2	equ	0xFDE
  1753                           postdec2	equ	0xFDD
  1754                           plusw2	equ	0xFDB
  1755                           fsr2h	equ	0xFDA
  1756                           fsr2l	equ	0xFD9
  1757                           status	equ	0xFD8
  1758                           
  1759 ;; *************** function _LED_Enable *****************
  1760 ;; Defined at:
  1761 ;;		line 220 in file "picLibs/leds.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  led             1    wreg     enum E2
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  led             1    0[BANK0 ] enum E2
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 3F/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1775 ;;      Params:         0       0       0       0
  1776 ;;      Locals:         0       1       0       0
  1777 ;;      Temps:          0       0       0       0
  1778 ;;      Totals:         0       1       0       0
  1779 ;;Total ram usage:        1 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:   10
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_SYSTEM_Initialize
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text5
  1790  00189C                     __ptext5:
  1791                           	opt stack 0
  1792  00189C                     _LED_Enable:
  1793                           	opt stack 19
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;incstack = 0
  1797                           ;LED_Enable@led stored from wreg
  1798  00189C  0100               	movlb	0	; () banked
  1799  00189E  6FD3               	movwf	LED_Enable@led& (0+255),b
  1800                           
  1801                           ;leds.c: 222: switch(led)
  1802  0018A0  D008               	goto	l4835
  1803  0018A2                     l279:
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  1807  0018A2  9094               	bcf	3988,0,c	;volatile
  1808                           
  1809                           ;leds.c: 226: break;
  1810  0018A4  0012               	return	
  1811  0018A6                     l281:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  1815  0018A6  9294               	bcf	3988,1,c	;volatile
  1816                           
  1817                           ;leds.c: 230: break;
  1818  0018A8  0012               	return	
  1819  0018AA                     l282:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  1823  0018AA  9494               	bcf	3988,2,c	;volatile
  1824                           
  1825                           ;leds.c: 234: break;
  1826  0018AC  0012               	return	
  1827  0018AE                     l283:
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  1831  0018AE  9694               	bcf	3988,3,c	;volatile
  1832                           
  1833                           ;leds.c: 238: break;
  1834  0018B0  0012               	return	
  1835  0018B2                     l4835:
  1836  0018B2  0100               	movlb	0	; () banked
  1837  0018B4  51D3               	movf	LED_Enable@led& (0+255),w,b
  1838                           
  1839                           ; Switch size 1, requested type "space"
  1840                           ; Number of cases is 5, Range of values is 0 to 4
  1841                           ; switch strategies available:
  1842                           ; Name         Instructions Cycles
  1843                           ; simple_byte           16     9 (average)
  1844                           ;	Chosen strategy is simple_byte
  1845  0018B6  B4D8               	btfsc	status,2,c
  1846  0018B8  0012               	return	
  1847  0018BA  0A01               	xorlw	1	; case 1
  1848  0018BC  E0F2               	bz	l279
  1849  0018BE  0A03               	xorlw	3	; case 2
  1850  0018C0  E0F2               	bz	l281
  1851  0018C2  0A01               	xorlw	1	; case 3
  1852  0018C4  E0F2               	bz	l282
  1853  0018C6  0A07               	xorlw	7	; case 4
  1854  0018C8  E0F2               	bz	l283
  1855                           
  1856                           ; BSR set to: 0
  1857  0018CA  0012               	return		;funcret
  1858  0018CC                     __end_of_LED_Enable:
  1859                           	opt stack 0
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           prodh	equ	0xFF4
  1865                           prodl	equ	0xFF3
  1866                           intcon	equ	0xFF2
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           indf1	equ	0xFE7
  1870                           postdec1	equ	0xFE5
  1871                           fsr1h	equ	0xFE2
  1872                           fsr1l	equ	0xFE1
  1873                           indf2	equ	0xFDF
  1874                           postinc2	equ	0xFDE
  1875                           postdec2	equ	0xFDD
  1876                           plusw2	equ	0xFDB
  1877                           fsr2h	equ	0xFDA
  1878                           fsr2l	equ	0xFD9
  1879                           status	equ	0xFD8
  1880                           
  1881 ;; *************** function _BUTTON_Enable *****************
  1882 ;; Defined at:
  1883 ;;		line 85 in file "picLibs/buttons.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  button          1    wreg     enum E3304
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  button          1    0[BANK0 ] enum E3304
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0
  1892 ;; Tracked objects:
  1893 ;;		On entry : 3F/0
  1894 ;;		On exit  : 3F/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1897 ;;      Params:         0       0       0       0
  1898 ;;      Locals:         0       1       0       0
  1899 ;;      Temps:          0       0       0       0
  1900 ;;      Totals:         0       1       0       0
  1901 ;;Total ram usage:        1 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:   10
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_SYSTEM_Initialize
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text6
  1912  001ACA                     __ptext6:
  1913                           	opt stack 0
  1914  001ACA                     _BUTTON_Enable:
  1915                           	opt stack 19
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;incstack = 0
  1919                           ;BUTTON_Enable@button stored from wreg
  1920  001ACA  6FD3               	movwf	BUTTON_Enable@button& (0+255),b
  1921                           
  1922                           ;buttons.c: 87: switch(button)
  1923  001ACC  0100               	movlb	0	; () banked
  1924  001ACE  51D3               	movf	BUTTON_Enable@button& (0+255),w,b
  1925                           
  1926                           ; Switch size 1, requested type "space"
  1927                           ; Number of cases is 2, Range of values is 0 to 1
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            7     4 (average)
  1931                           ;	Chosen strategy is simple_byte
  1932  001AD0  EF62  F00D         	goto	PL116	;call to abstracted procedure
  1933  001AD4                     __end_of_BUTTON_Enable:
  1934                           	opt stack 0
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           prodh	equ	0xFF4
  1940                           prodl	equ	0xFF3
  1941                           intcon	equ	0xFF2
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           indf1	equ	0xFE7
  1945                           postdec1	equ	0xFE5
  1946                           fsr1h	equ	0xFE2
  1947                           fsr1l	equ	0xFE1
  1948                           indf2	equ	0xFDF
  1949                           postinc2	equ	0xFDE
  1950                           postdec2	equ	0xFDD
  1951                           plusw2	equ	0xFDB
  1952                           fsr2h	equ	0xFDA
  1953                           fsr2l	equ	0xFD9
  1954                           status	equ	0xFD8
  1955                           
  1956 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  1957 ;; Defined at:
  1958 ;;		line 77 in file "picLibs/app_device_cdc_basic.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  a               4    4[BANK1 ] struct _DWORD_VAL
  1963 ;;  a               4    0[BANK1 ] struct _DWORD_VAL
  1964 ;;  i               1    9[BANK1 ] unsigned char 
  1965 ;;  numBytesRead    1    8[BANK1 ] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 3F/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1975 ;;      Params:         0       0       0       0
  1976 ;;      Locals:         0       0      10       0
  1977 ;;      Temps:          0       0       0       0
  1978 ;;      Totals:         0       0      10       0
  1979 ;;Total ram usage:       10 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:   13
  1982 ;; This function calls:
  1983 ;;		_BUTTON_IsPressed
  1984 ;;		_CDCTxService
  1985 ;;		_PIC18F26K40_enterLowVoltageProg
  1986 ;;		_PIC18F26K40_exitLowVoltageProg
  1987 ;;		_PIC18F26K40_loadDataIntoNVM
  1988 ;;		_PIC18F26K40_loadPC
  1989 ;;		_PIC18F26K40_readThreeBytes
  1990 ;;		_getsUSBUSART
  1991 ;;		_putUSBUSART
  1992 ;;		_putrsUSBUSART
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text7
  1999  00057E                     __ptext7:
  2000                           	opt stack 0
  2001  00057E                     _APP_DeviceCDCBasicDemoTasks:
  2002                           	opt stack 17
  2003                           
  2004                           ;app_device_cdc_basic.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;incstack = 0
  2008  00057E  0E20               	movlw	32
  2009  000580  0100               	movlb	0	; () banked
  2010  000582  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  2011  000584  D001               	goto	l170
  2012  000586  0C20               	retlw	32
  2013  000588                     l170:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;app_device_cdc_basic.c: 85: }
  2017                           ;app_device_cdc_basic.c: 91: if( UCONbits.SUSPND== 1 )
  2018  000588  B264               	btfsc	3940,1,c	;volatile
  2019  00058A  0012               	return	
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;app_device_cdc_basic.c: 94: }
  2023                           ;app_device_cdc_basic.c: 99: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  2024  00058C  0E01               	movlw	1
  2025  00058E  EC3C  F00D         	call	_BUTTON_IsPressed
  2026  000592  06E8               	decf	wreg,f,c
  2027  000594  E10C               	bnz	l173
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;app_device_cdc_basic.c: 100: {
  2031                           ;app_device_cdc_basic.c: 104: if(buttonPressed == 0)
  2032  000596  517F               	movf	_buttonPressed& (0+255),w,b
  2033  000598  E10B               	bnz	l4861
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;app_device_cdc_basic.c: 105: {
  2037                           ;app_device_cdc_basic.c: 108: if((cdc_trf_state == 0) == 1)
  2038  00059A  5180               	movf	_cdc_trf_state& (0+255),w,b
  2039  00059C  E109               	bnz	l4861
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;app_device_cdc_basic.c: 109: {
  2043                           ;app_device_cdc_basic.c: 110: putrsUSBUSART(buttonMessage);
  2044  00059E  0EED               	movlw	low _buttonMessage
  2045  0005A0  6FD3               	movwf	putrsUSBUSART@data& (0+255),b
  2046  0005A2  6BD4               	clrf	(putrsUSBUSART@data+1)& (0+255),b
  2047  0005A4  EC33  F00A         	call	_putrsUSBUSART	;wreg free
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;app_device_cdc_basic.c: 111: buttonPressed = 1;
  2051  0005A8  0E01               	movlw	1
  2052  0005AA  6F7F               	movwf	_buttonPressed& (0+255),b
  2053  0005AC  D001               	goto	l4861
  2054  0005AE                     l173:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;app_device_cdc_basic.c: 115: else
  2058                           ;app_device_cdc_basic.c: 116: {
  2059                           ;app_device_cdc_basic.c: 120: buttonPressed = 0;
  2060  0005AE  6B7F               	clrf	_buttonPressed& (0+255),b
  2061  0005B0                     l4861:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;app_device_cdc_basic.c: 121: }
  2065                           ;app_device_cdc_basic.c: 126: if( (cdc_trf_state == 0) == 1)
  2066  0005B0  5180               	movf	_cdc_trf_state& (0+255),w,b
  2067  0005B2  E002 EFE6  F003    	bnz	_CDCTxService
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;app_device_cdc_basic.c: 127: {
  2071                           ;app_device_cdc_basic.c: 128: uint8_t i;
  2072                           ;app_device_cdc_basic.c: 129: uint8_t numBytesRead;
  2073                           ;app_device_cdc_basic.c: 131: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  2074  0005B8  0E82               	movlw	low _readBuffer
  2075  0005BA  6FDC               	movwf	getsUSBUSART@buffer& (0+255),b
  2076  0005BC  0E40               	movlw	64
  2077  0005BE  6FDD               	movwf	getsUSBUSART@len& (0+255),b
  2078  0005C0  EC94  F009         	call	_getsUSBUSART	;wreg free
  2079  0005C4  0101               	movlb	1	; () banked
  2080  0005C6  6F48               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),b
  2081                           
  2082                           ; BSR set to: 1
  2083                           ;app_device_cdc_basic.c: 134: for(i=0; i<numBytesRead; i++)
  2084  0005C8  6B49               	clrf	APP_DeviceCDCBasicDemoTasks@i& (0+255),b
  2085  0005CA  D069               	goto	l4899
  2086  0005CC                     l4867:
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;app_device_cdc_basic.c: 142: case 0x0D:
  2090                           ;app_device_cdc_basic.c: 143: putrsUSBUSART("\n\r");
  2091  0005CC  0EE2               	movlw	low (STR_2+28)
  2092  0005CE  D877               	call	PL80	;call to abstracted procedure
  2093  0005D0  EC33  F00A         	call	_putrsUSBUSART	;wreg free
  2094                           
  2095                           ;app_device_cdc_basic.c: 145: break;
  2096  0005D4  D062               	goto	l4897
  2097  0005D6                     l4869:
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;app_device_cdc_basic.c: 152: DWORD_VAL a;
  2101                           ;app_device_cdc_basic.c: 153: a.Val = 0x310000;
  2102  0005D6  6B40               	clrf	APP_DeviceCDCBasicDemoTasks@a& (0+255),b
  2103  0005D8  6B41               	clrf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),b
  2104  0005DA  0E31               	movlw	49
  2105  0005DC  6F42               	movwf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2106  0005DE  0E00               	movlw	0
  2107  0005E0  6B43               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2108                           
  2109                           ; BSR set to: 1
  2110                           ;app_device_cdc_basic.c: 154: PIC18F26K40_enterLowVoltageProg();
  2111  0005E2  EC85  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;app_device_cdc_basic.c: 155: PIC18F26K40_loadPC(a);
  2115  0005E6  C140  F0D9         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadPC@address
  2116  0005EA  C141  F0DA         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadPC@address+1
  2117  0005EE  C142  F0DB         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadPC@address+2
  2118  0005F2  C143  F0DC         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadPC@address+3
  2119  0005F6  ECC9  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2120                           
  2121                           ;app_device_cdc_basic.c: 156: a.Val = 0x05;
  2122  0005FA  0E05               	movlw	5
  2123  0005FC  0101               	movlb	1	; () banked
  2124  0005FE  6F40               	movwf	APP_DeviceCDCBasicDemoTasks@a& (0+255),b
  2125  000600  0E00               	movlw	0
  2126  000602  6F41               	movwf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),b
  2127  000604  6F42               	movwf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2128  000606  6F43               	movwf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2129                           
  2130                           ; BSR set to: 1
  2131                           ;app_device_cdc_basic.c: 157: putrsUSBUSART("0x05 is placed at 0x00310000\n\r");
  2132  000608  0EC6               	movlw	low STR_2
  2133  00060A  D859               	call	PL80	;call to abstracted procedure
  2134  00060C  EC33  F00A         	call	_putrsUSBUSART	;wreg free
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;app_device_cdc_basic.c: 158: PIC18F26K40_loadDataIntoNVM(a, FALSE);
  2138  000610  C140  F0D7         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadDataIntoNVM@data
  2139  000614  C141  F0D8         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadDataIntoNVM@data+1
  2140  000618  C142  F0D9         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadDataIntoNVM@data+2
  2141  00061C  C143  F0DA         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadDataIntoNVM@data+3
  2142  000620  6BDB               	clrf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),b
  2143  000622  EC62  F00A         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2144                           
  2145                           ;app_device_cdc_basic.c: 159: PIC18F26K40_exitLowVoltageProg();
  2146  000626  EC6A  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2147                           
  2148                           ;app_device_cdc_basic.c: 161: break;
  2149  00062A  D037               	goto	l4897
  2150  00062C                     l4881:
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;app_device_cdc_basic.c: 167: DWORD_VAL a;
  2154                           ;app_device_cdc_basic.c: 168: a.Val = 0x310000;
  2155  00062C  6B44               	clrf	APP_DeviceCDCBasicDemoTasks@a_2111& (0+255),b
  2156  00062E  6B45               	clrf	(APP_DeviceCDCBasicDemoTasks@a_2111+1)& (0+255),b
  2157  000630  0E31               	movlw	49
  2158  000632  6F46               	movwf	(APP_DeviceCDCBasicDemoTasks@a_2111+2)& (0+255),b
  2159  000634  0E00               	movlw	0
  2160  000636  6B47               	clrf	(APP_DeviceCDCBasicDemoTasks@a_2111+3)& (0+255),b
  2161                           
  2162                           ; BSR set to: 1
  2163                           ;app_device_cdc_basic.c: 169: PIC18F26K40_enterLowVoltageProg();
  2164  000638  EC85  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;app_device_cdc_basic.c: 170: PIC18F26K40_loadPC(a);
  2168  00063C  C144  F0D9         	movff	APP_DeviceCDCBasicDemoTasks@a_2111,PIC18F26K40_loadPC@address
  2169  000640  C145  F0DA         	movff	APP_DeviceCDCBasicDemoTasks@a_2111+1,PIC18F26K40_loadPC@address+1
  2170  000644  C146  F0DB         	movff	APP_DeviceCDCBasicDemoTasks@a_2111+2,PIC18F26K40_loadPC@address+2
  2171  000648  C147  F0DC         	movff	APP_DeviceCDCBasicDemoTasks@a_2111+3,PIC18F26K40_loadPC@address+3
  2172  00064C  ECC9  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;app_device_cdc_basic.c: 171: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2176  000650  0E00               	movlw	0
  2177  000652  6FD9               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2178  000654  ECF9  F005         	call	_PIC18F26K40_readThreeBytes
  2179  000658  C0D9  F144         	movff	?_PIC18F26K40_readThreeBytes,APP_DeviceCDCBasicDemoTasks@a_2111
  2180  00065C  C0DA  F145         	movff	?_PIC18F26K40_readThreeBytes+1,APP_DeviceCDCBasicDemoTasks@a_2111+1
  2181  000660  C0DB  F146         	movff	?_PIC18F26K40_readThreeBytes+2,APP_DeviceCDCBasicDemoTasks@a_2111+2
  2182  000664  C0DC  F147         	movff	?_PIC18F26K40_readThreeBytes+3,APP_DeviceCDCBasicDemoTasks@a_2111+3
  2183                           
  2184                           ;app_device_cdc_basic.c: 172: PIC18F26K40_exitLowVoltageProg();
  2185  000668  EC6A  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2186                           
  2187                           ;app_device_cdc_basic.c: 173: writeBuffer[i] = a.v[0]+0x30;
  2188  00066C  0E00               	movlw	low _writeBuffer
  2189  00066E  0101               	movlb	1	; () banked
  2190  000670  2549               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2191  000672  6ED9               	movwf	fsr2l,c
  2192  000674  6ADA               	clrf	fsr2h,c
  2193  000676  0E01               	movlw	high _writeBuffer
  2194  000678  22DA               	addwfc	fsr2h,f,c
  2195  00067A  5144               	movf	APP_DeviceCDCBasicDemoTasks@a_2111& (0+255),w,b
  2196  00067C  0F30               	addlw	48
  2197  00067E  6EDF               	movwf	indf2,c
  2198                           
  2199                           ;app_device_cdc_basic.c: 177: break;
  2200  000680  D00C               	goto	l4897
  2201  000682                     l4895:
  2202                           
  2203                           ; BSR set to: 1
  2204  000682  5149               	movf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2205  000684  0F82               	addlw	low _readBuffer
  2206  000686  6ED9               	movwf	fsr2l,c
  2207  000688  6ADA               	clrf	fsr2h,c
  2208  00068A  50DF               	movf	indf2,w,c
  2209                           
  2210                           ; Switch size 1, requested type "space"
  2211                           ; Number of cases is 3, Range of values is 10 to 65
  2212                           ; switch strategies available:
  2213                           ; Name         Instructions Cycles
  2214                           ; simple_byte           10     6 (average)
  2215                           ;	Chosen strategy is simple_byte
  2216  00068C  0A0A               	xorlw	10	; case 10
  2217  00068E  E09E               	bz	l4867
  2218  000690  0A07               	xorlw	7	; case 13
  2219  000692  E09C               	bz	l4867
  2220  000694  0A4C               	xorlw	76	; case 65
  2221  000696  E09F               	bz	l4869
  2222  000698  D7C9               	goto	l4881
  2223  00069A                     l4897:
  2224  00069A  0101               	movlb	1	; () banked
  2225  00069C  2B49               	incf	APP_DeviceCDCBasicDemoTasks@i& (0+255),f,b
  2226  00069E                     l4899:
  2227                           
  2228                           ; BSR set to: 1
  2229  00069E  5148               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2230  0006A0  5D49               	subwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2231  0006A2  E3EF               	bnc	l4895
  2232                           
  2233                           ; BSR set to: 1
  2234                           ;app_device_cdc_basic.c: 188: }
  2235                           ;app_device_cdc_basic.c: 190: if(numBytesRead > 0)
  2236  0006A4  5148               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2237  0006A6  E009               	bz	l4905
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;app_device_cdc_basic.c: 191: {
  2241                           ;app_device_cdc_basic.c: 195: putUSBUSART(writeBuffer,numBytesRead);
  2242  0006A8  0E00               	movlw	low _writeBuffer
  2243  0006AA  0100               	movlb	0	; () banked
  2244  0006AC  6FD3               	movwf	putUSBUSART@data& (0+255),b
  2245  0006AE  0E01               	movlw	high _writeBuffer
  2246  0006B0  6FD4               	movwf	(putUSBUSART@data+1)& (0+255),b
  2247  0006B2  C148  F0D5         	movff	APP_DeviceCDCBasicDemoTasks@numBytesRead,putUSBUSART@length
  2248  0006B6  EC20  F00D         	call	_putUSBUSART	;wreg free
  2249  0006BA                     l4905:
  2250                           
  2251                           ;app_device_cdc_basic.c: 196: }
  2252                           ;app_device_cdc_basic.c: 197: }
  2253                           ;app_device_cdc_basic.c: 199: CDCTxService();
  2254  0006BA  EFE6  F003         	goto	_CDCTxService	;wreg free
  2255  0006BE                     __end_of_APP_DeviceCDCBasicDemoTasks:
  2256                           	opt stack 0
  2257  0006BE                     PL80:
  2258                           	opt stack 17
  2259  0006BE  0100               	movlb	0	; () banked
  2260  0006C0  6FD3               	movwf	putrsUSBUSART@data& (0+255),b
  2261  0006C2  51D3               	movf	putrsUSBUSART@data& (0+255),w,b
  2262  0006C4  A4D8               	btfss	status,2,c
  2263  0006C6  0E03               	movlw	high __smallconst
  2264  0006C8  6FD4               	movwf	(putrsUSBUSART@data+1)& (0+255),b
  2265  0006CA  0012               	return	
  2266  0006CC                     __end_ofPL80:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           prodh	equ	0xFF4
  2273                           prodl	equ	0xFF3
  2274                           intcon	equ	0xFF2
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           indf1	equ	0xFE7
  2278                           postdec1	equ	0xFE5
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           indf2	equ	0xFDF
  2282                           postinc2	equ	0xFDE
  2283                           postdec2	equ	0xFDD
  2284                           plusw2	equ	0xFDB
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _putrsUSBUSART *****************
  2290 ;; Defined at:
  2291 ;;		line 726 in file "picLibs/usb_device_cdc.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  data            2    0[BANK0 ] PTR const unsigned char 
  2294 ;;		 -> STR_2(31), STR_1(3), buttonMessage(18), 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  pData           2    4[BANK0 ] PTR const unsigned char 
  2297 ;;		 -> STR_2(31), STR_1(3), buttonMessage(18), 
  2298 ;;  len             1    6[BANK0 ] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  2303 ;; Tracked objects:
  2304 ;;		On entry : 3F/0
  2305 ;;		On exit  : 3F/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2308 ;;      Params:         0       2       0       0
  2309 ;;      Locals:         0       3       0       0
  2310 ;;      Temps:          0       2       0       0
  2311 ;;      Totals:         0       7       0       0
  2312 ;;Total ram usage:        7 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:   10
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_APP_DeviceCDCBasicDemoTasks
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text8
  2323  001466                     __ptext8:
  2324                           	opt stack 0
  2325  001466                     _putrsUSBUSART:
  2326                           	opt stack 19
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;usb_device_cdc.c: 728: uint8_t len;
  2330                           ;usb_device_cdc.c: 729: const const char *pData;
  2331                           ;usb_device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;incstack = 0
  2335  001466  94A0               	bcf	4000,2,c	;volatile
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  2339  001468  5180               	movf	_cdc_trf_state& (0+255),w,b
  2340  00146A  E002               	bz	l808
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;usb_device_cdc.c: 756: {
  2344                           ;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  2345  00146C  84A0               	bsf	4000,2,c	;volatile
  2346                           
  2347                           ;usb_device_cdc.c: 758: return;
  2348  00146E  0012               	return	
  2349  001470                     l808:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;usb_device_cdc.c: 759: }
  2353                           ;usb_device_cdc.c: 765: len = 0;
  2354  001470  6BD9               	clrf	putrsUSBUSART@len& (0+255),b
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;usb_device_cdc.c: 766: pData = data;
  2358  001472  C0D3  F0D7         	movff	putrsUSBUSART@data,putrsUSBUSART@pData
  2359  001476  C0D4  F0D8         	movff	putrsUSBUSART@data+1,putrsUSBUSART@pData+1
  2360  00147A                     l4701:
  2361                           
  2362                           ;usb_device_cdc.c: 768: {
  2363                           ;usb_device_cdc.c: 769: len++;
  2364  00147A  0100               	movlb	0	; () banked
  2365  00147C  2BD9               	incf	putrsUSBUSART@len& (0+255),f,b
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;usb_device_cdc.c: 770: if(len == 255) break;
  2369  00147E  29D9               	incf	putrsUSBUSART@len& (0+255),w,b
  2370  001480  E015               	bz	l4709
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;usb_device_cdc.c: 771: }while(*pData++);
  2374  001482  51D7               	movf	putrsUSBUSART@pData& (0+255),w,b
  2375  001484  6FD5               	movwf	??_putrsUSBUSART& (0+255),b
  2376  001486  51D8               	movf	(putrsUSBUSART@pData+1)& (0+255),w,b
  2377  001488  6FD6               	movwf	(??_putrsUSBUSART+1)& (0+255),b
  2378  00148A  4BD7               	infsnz	putrsUSBUSART@pData& (0+255),f,b
  2379  00148C  2BD8               	incf	(putrsUSBUSART@pData+1)& (0+255),f,b
  2380  00148E  C0D5  FFF6         	movff	??_putrsUSBUSART,tblptrl
  2381  001492  C0D6  FFF7         	movff	??_putrsUSBUSART+1,tblptrh
  2382  001496  6AF8               	clrf	tblptru,c
  2383  001498  0E02               	movlw	(high __ramtop+-1)
  2384  00149A  64F7               	cpfsgt	tblptrh,c
  2385  00149C  D003               	bra	u3717
  2386  00149E  0008               	tblrd		*
  2387  0014A0  50F5               	movf	tablat,w,c
  2388  0014A2  D002               	bra	u3710
  2389  0014A4                     u3717:
  2390  0014A4  EC1D  F005         	call	PL18	;call to abstracted procedure
  2391  0014A8                     u3710:
  2392  0014A8  0900               	iorlw	0
  2393  0014AA  E1E7               	bnz	l4701
  2394  0014AC                     l4709:
  2395                           
  2396                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  2397  0014AC  C0D3  F06D         	movff	putrsUSBUSART@data,_pCDCSrc
  2398  0014B0  C0D4  F06E         	movff	putrsUSBUSART@data+1,_pCDCSrc+1
  2399  0014B4  C0D9  F01B         	movff	putrsUSBUSART@len,_cdc_tx_len
  2400  0014B8  0100               	movlb	0	; () banked
  2401  0014BA  6B7C               	clrf	_cdc_mem_type& (0+255),b
  2402                           
  2403                           ; BSR set to: 0
  2404  0014BC  0E01               	movlw	1
  2405  0014BE  6F80               	movwf	_cdc_trf_state& (0+255),b
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  2409  0014C0  84A0               	bsf	4000,2,c	;volatile
  2410                           
  2411                           ; BSR set to: 0
  2412  0014C2  0C01               	retlw	1	;funcret
  2413  0014C4                     __end_of_putrsUSBUSART:
  2414                           	opt stack 0
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           prodh	equ	0xFF4
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           indf1	equ	0xFE7
  2425                           postdec1	equ	0xFE5
  2426                           fsr1h	equ	0xFE2
  2427                           fsr1l	equ	0xFE1
  2428                           indf2	equ	0xFDF
  2429                           postinc2	equ	0xFDE
  2430                           postdec2	equ	0xFDD
  2431                           plusw2	equ	0xFDB
  2432                           fsr2h	equ	0xFDA
  2433                           fsr2l	equ	0xFD9
  2434                           status	equ	0xFD8
  2435                           
  2436 ;; *************** function _putUSBUSART *****************
  2437 ;; Defined at:
  2438 ;;		line 556 in file "picLibs/usb_device_cdc.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  data            2    0[BANK0 ] PTR unsigned char 
  2441 ;;		 -> writeBuffer(64), 
  2442 ;;  length          1    2[BANK0 ] unsigned char 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 3F/0
  2451 ;;		On exit  : 3F/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2454 ;;      Params:         0       3       0       0
  2455 ;;      Locals:         0       0       0       0
  2456 ;;      Temps:          0       0       0       0
  2457 ;;      Totals:         0       3       0       0
  2458 ;;Total ram usage:        3 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:   10
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_APP_DeviceCDCBasicDemoTasks
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text9
  2469  001A40                     __ptext9:
  2470                           	opt stack 0
  2471  001A40                     _putUSBUSART:
  2472                           	opt stack 19
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;incstack = 0
  2479  001A40  94A0               	bcf	4000,2,c	;volatile
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2483  001A42  5180               	movf	_cdc_trf_state& (0+255),w,b
  2484  001A44  E109               	bnz	l4755
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;usb_device_cdc.c: 583: {
  2488                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2489  001A46  C0D3  F06D         	movff	putUSBUSART@data,_pCDCSrc
  2490  001A4A  C0D4  F06E         	movff	putUSBUSART@data+1,_pCDCSrc+1
  2491                           
  2492                           ; BSR set to: 0
  2493  001A4E  C0D5  F01B         	movff	putUSBUSART@length,_cdc_tx_len
  2494                           
  2495                           ; BSR set to: 0
  2496  001A52  0E01               	movlw	1
  2497  001A54  6F7C               	movwf	_cdc_mem_type& (0+255),b
  2498                           
  2499                           ; BSR set to: 0
  2500  001A56  6F80               	movwf	_cdc_trf_state& (0+255),b
  2501  001A58                     l4755:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;usb_device_cdc.c: 585: }
  2505                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2506  001A58  84A0               	bsf	4000,2,c	;volatile
  2507                           
  2508                           ; BSR set to: 0
  2509  001A5A  0012               	return		;funcret
  2510  001A5C                     __end_of_putUSBUSART:
  2511                           	opt stack 0
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           prodh	equ	0xFF4
  2517                           prodl	equ	0xFF3
  2518                           intcon	equ	0xFF2
  2519                           postinc0	equ	0xFEE
  2520                           wreg	equ	0xFE8
  2521                           indf1	equ	0xFE7
  2522                           postdec1	equ	0xFE5
  2523                           fsr1h	equ	0xFE2
  2524                           fsr1l	equ	0xFE1
  2525                           indf2	equ	0xFDF
  2526                           postinc2	equ	0xFDE
  2527                           postdec2	equ	0xFDD
  2528                           plusw2	equ	0xFDB
  2529                           fsr2h	equ	0xFDA
  2530                           fsr2l	equ	0xFD9
  2531                           status	equ	0xFD8
  2532                           
  2533 ;; *************** function _getsUSBUSART *****************
  2534 ;; Defined at:
  2535 ;;		line 485 in file "picLibs/usb_device_cdc.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  buffer          1    9[BANK0 ] PTR unsigned char 
  2538 ;;		 -> readBuffer(64), 
  2539 ;;  len             1   10[BANK0 ] unsigned char 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      unsigned char 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 3F/0
  2548 ;;		On exit  : 3F/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2551 ;;      Params:         0       2       0       0
  2552 ;;      Locals:         0       0       0       0
  2553 ;;      Temps:          0       1       0       0
  2554 ;;      Totals:         0       3       0       0
  2555 ;;Total ram usage:        3 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:   11
  2558 ;; This function calls:
  2559 ;;		_USBTransferOnePacket
  2560 ;; This function is called by:
  2561 ;;		_APP_DeviceCDCBasicDemoTasks
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text10
  2566  001328                     __ptext10:
  2567                           	opt stack 0
  2568  001328                     _getsUSBUSART:
  2569                           	opt stack 18
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;incstack = 0
  2576  001328  6A1C               	clrf	_cdc_rx_len,c
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2580  00132A  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2581  00132C  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  2582  00132E  E006               	bz	l4725
  2583                           
  2584                           ; BSR set to: 0
  2585  001330  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2586  001334  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2587  001338  BEDF               	btfsc	indf2,7,c
  2588  00133A  D024               	goto	l4739
  2589  00133C                     l4725:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;usb_device_cdc.c: 490: {
  2593                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2594  00133C  D825               	call	PL72	;call to abstracted procedure
  2595  00133E  51DD               	movf	getsUSBUSART@len& (0+255),w,b
  2596  001340  5CDE               	subwf	postinc2,w,c
  2597  001342  E203               	bc	l4729
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2601  001344  D821               	call	PL72	;call to abstracted procedure
  2602  001346  50DF               	movf	indf2,w,c
  2603  001348  6FDD               	movwf	getsUSBUSART@len& (0+255),b
  2604  00134A                     l4729:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2608  00134A  6A1C               	clrf	_cdc_rx_len,c
  2609  00134C  D009               	goto	l4735
  2610  00134E                     l4731:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2614  00134E  0E80               	movlw	128
  2615  001350  241C               	addwf	_cdc_rx_len,w,c
  2616  001352  ECF4  F005         	call	PL112	;call to abstracted procedure
  2617  001356  51DC               	movf	getsUSBUSART@buffer& (0+255),w,b
  2618  001358  241C               	addwf	_cdc_rx_len,w,c
  2619  00135A  ECEF  F005         	call	PL110	;call to abstracted procedure
  2620                           
  2621                           ; BSR set to: 0
  2622  00135E  2A1C               	incf	_cdc_rx_len,f,c
  2623  001360                     l4735:
  2624                           
  2625                           ; BSR set to: 0
  2626  001360  51DD               	movf	getsUSBUSART@len& (0+255),w,b
  2627  001362  5C1C               	subwf	_cdc_rx_len,w,c
  2628  001364  E3F4               	bnc	l4731
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2632  001366  0E00               	movlw	0
  2633  001368  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  2634  00136A  0E80               	movlw	128
  2635  00136C  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  2636  00136E  0E02               	movlw	2
  2637  001370  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  2638  001372  0E40               	movlw	64
  2639  001374  6FD6               	movwf	USBTransferOnePacket@len& (0+255),b
  2640  001376  0E02               	movlw	2
  2641  001378  EC39  F005         	call	_USBTransferOnePacket
  2642  00137C  C0D3  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  2643  001380  C0D4  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  2644  001384                     l4739:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;usb_device_cdc.c: 510: }
  2648                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2649  001384  501C               	movf	_cdc_rx_len,w,c
  2650                           
  2651                           ; BSR set to: 0
  2652  001386  0012               	return		;funcret
  2653  001388                     __end_of_getsUSBUSART:
  2654                           	opt stack 0
  2655  001388                     PL72:
  2656                           	opt stack 18
  2657  001388  EE20 F001          	lfsr	2,1
  2658  00138C  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2659  00138E  26D9               	addwf	fsr2l,f,c
  2660  001390  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  2661  001392  22DA               	addwfc	fsr2h,f,c
  2662  001394  0012               	return	
  2663  001396                     __end_ofPL72:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           indf1	equ	0xFE7
  2675                           postdec1	equ	0xFE5
  2676                           fsr1h	equ	0xFE2
  2677                           fsr1l	equ	0xFE1
  2678                           indf2	equ	0xFDF
  2679                           postinc2	equ	0xFDE
  2680                           postdec2	equ	0xFDD
  2681                           plusw2	equ	0xFDB
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _PIC18F26K40_readThreeBytes *****************
  2687 ;; Defined at:
  2688 ;;		line 53 in file "libs/progPIC18F26K40.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  direction       1    wreg     enum E4265
  2691 ;;  IncreasePC      1    6[BANK0 ] enum E4064
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  direction       1   17[BANK0 ] enum E4265
  2694 ;;  data            4   18[BANK0 ] struct _DWORD_VAL
  2695 ;;  i               1   23[BANK0 ] unsigned char 
  2696 ;;  j               1   22[BANK0 ] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  4    6[BANK0 ] struct _DWORD_VAL
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 3F/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2706 ;;      Params:         0       4       0       0
  2707 ;;      Locals:         0       7       0       0
  2708 ;;      Temps:          0       7       0       0
  2709 ;;      Totals:         0      18       0       0
  2710 ;;Total ram usage:       18 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:   12
  2713 ;; This function calls:
  2714 ;;		_PIC18F26K40_sendByte
  2715 ;; This function is called by:
  2716 ;;		_APP_DeviceCDCBasicDemoTasks
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text11
  2721  000BF2                     __ptext11:
  2722                           	opt stack 0
  2723  000BF2                     _PIC18F26K40_readThreeBytes:
  2724                           	opt stack 17
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;incstack = 0
  2728                           ;PIC18F26K40_readThreeBytes@direction stored from wreg
  2729  000BF2  6FE4               	movwf	PIC18F26K40_readThreeBytes@direction& (0+255),b
  2730                           
  2731                           ;progPIC18F26K40.c: 54: if (IncreasePC)
  2732  000BF4  0100               	movlb	0	; () banked
  2733  000BF6  51D9               	movf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),w,b
  2734  000BF8  E005               	bz	l4611
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;progPIC18F26K40.c: 55: PIC18F26K40_sendByte(0xFE, MSBTOLSB);
  2738  000BFA  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2739  000BFC  0EFE               	movlw	254
  2740  000BFE  ECBC  F00A         	call	_PIC18F26K40_sendByte
  2741  000C02  D004               	goto	l4613
  2742  000C04                     l4611:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;progPIC18F26K40.c: 56: else
  2746                           ;progPIC18F26K40.c: 57: PIC18F26K40_sendByte(0xFC, MSBTOLSB);
  2747  000C04  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2748  000C06  0EFC               	movlw	252
  2749  000C08  ECBC  F00A         	call	_PIC18F26K40_sendByte
  2750  000C0C                     l4613:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;progPIC18F26K40.c: 58: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2754  000C0C  D000               	nop2		;2 cycle nop
  2755  000C0E  F000               	nop	
  2756                           
  2757                           ;progPIC18F26K40.c: 59: DWORD_VAL data;
  2758                           ;progPIC18F26K40.c: 60: data.Val = 0x000000;
  2759  000C10  0100               	movlb	0	; () banked
  2760  000C12  6BE5               	clrf	PIC18F26K40_readThreeBytes@data& (0+255),b
  2761  000C14  6BE6               	clrf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),b
  2762  000C16  6BE7               	clrf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),b
  2763  000C18  6BE8               	clrf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),b
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;progPIC18F26K40.c: 61: BYTE i, j;
  2767                           ;progPIC18F26K40.c: 62: TRISCbits.TRISC6 = 1;
  2768  000C1A  8C94               	bsf	3988,6,c	;volatile
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;progPIC18F26K40.c: 63: for (i = 0; i < 23; i++) {
  2772  000C1C  6BEA               	clrf	PIC18F26K40_readThreeBytes@i& (0+255),b
  2773  000C1E                     l4625:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;progPIC18F26K40.c: 64: if (direction)
  2777  000C1E  51E4               	movf	PIC18F26K40_readThreeBytes@direction& (0+255),w,b
  2778  000C20  E003               	bz	l4629
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;progPIC18F26K40.c: 65: j = i;
  2782  000C22  C0EA  F0E9         	movff	PIC18F26K40_readThreeBytes@i,PIC18F26K40_readThreeBytes@j
  2783  000C26  D003               	goto	l4631
  2784  000C28                     l4629:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;progPIC18F26K40.c: 66: else
  2788                           ;progPIC18F26K40.c: 67: j = 22-i;
  2789  000C28  51EA               	movf	PIC18F26K40_readThreeBytes@i& (0+255),w,b
  2790  000C2A  0816               	sublw	22
  2791  000C2C  6FE9               	movwf	PIC18F26K40_readThreeBytes@j& (0+255),b
  2792  000C2E                     l4631:
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;progPIC18F26K40.c: 68: LATCbits.LATC5 = 1;
  2796  000C2E  8A8B               	bsf	3979,5,c	;volatile
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;progPIC18F26K40.c: 69: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2800  000C30  D000               	nop2		;2 cycle nop
  2801  000C32  F000               	nop	
  2802                           
  2803                           ;progPIC18F26K40.c: 70: if (PORTCbits.RC6 == 1)
  2804  000C34  AC82               	btfss	3970,6,c	;volatile
  2805  000C36  D01F               	goto	l4639
  2806                           
  2807                           ;progPIC18F26K40.c: 71: data.Val = data.Val | ((DWORD)(0x1<<j));
  2808  000C38  C0E9  F0DD         	movff	PIC18F26K40_readThreeBytes@j,??_PIC18F26K40_readThreeBytes
  2809  000C3C  0E01               	movlw	1
  2810  000C3E  0100               	movlb	0	; () banked
  2811  000C40  6FDE               	movwf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),b
  2812  000C42  6BDF               	clrf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),b
  2813  000C44  2BDD               	incf	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2814  000C46  D003               	goto	u3644
  2815  000C48                     u3645:
  2816  000C48  90D8               	bcf	status,0,c
  2817  000C4A  37DE               	rlcf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),f,b
  2818  000C4C  37DF               	rlcf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),f,b
  2819  000C4E                     u3644:
  2820  000C4E  2FDD               	decfsz	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2821  000C50  D7FB               	goto	u3645
  2822  000C52  C0DE  F0E0         	movff	??_PIC18F26K40_readThreeBytes+1,??_PIC18F26K40_readThreeBytes+3
  2823  000C56  C0DF  F0E1         	movff	??_PIC18F26K40_readThreeBytes+2,??_PIC18F26K40_readThreeBytes+4
  2824  000C5A  0E00               	movlw	0
  2825  000C5C  0100               	movlb	0	; () banked
  2826  000C5E  BFE1               	btfsc	(??_PIC18F26K40_readThreeBytes+4)& (0+255),7,b
  2827  000C60  0EFF               	movlw	255
  2828  000C62  6FE2               	movwf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),b
  2829  000C64  6FE3               	movwf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),b
  2830  000C66  51E0               	movf	(??_PIC18F26K40_readThreeBytes+3)& (0+255),w,b
  2831  000C68  13E5               	iorwf	PIC18F26K40_readThreeBytes@data& (0+255),f,b
  2832  000C6A  51E1               	movf	(??_PIC18F26K40_readThreeBytes+4)& (0+255),w,b
  2833  000C6C  13E6               	iorwf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),f,b
  2834  000C6E  51E2               	movf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),w,b
  2835  000C70  13E7               	iorwf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),f,b
  2836  000C72  51E3               	movf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),w,b
  2837  000C74  13E8               	iorwf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),f,b
  2838  000C76                     l4639:
  2839                           
  2840                           ;progPIC18F26K40.c: 72: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2841  000C76  D000               	nop2		;2 cycle nop
  2842  000C78  F000               	nop	
  2843                           
  2844                           ;progPIC18F26K40.c: 73: LATCbits.LATC5 = 0;
  2845  000C7A  9A8B               	bcf	3979,5,c	;volatile
  2846                           
  2847                           ;progPIC18F26K40.c: 74: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2848  000C7C  D000               	nop2		;2 cycle nop
  2849  000C7E  F000               	nop	
  2850  000C80  0100               	movlb	0	; () banked
  2851  000C82  2BEA               	incf	PIC18F26K40_readThreeBytes@i& (0+255),f,b
  2852                           
  2853                           ; BSR set to: 0
  2854  000C84  0E16               	movlw	22
  2855  000C86  65EA               	cpfsgt	PIC18F26K40_readThreeBytes@i& (0+255),b
  2856  000C88  D7CA               	goto	l4625
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;progPIC18F26K40.c: 75: }
  2860                           ;progPIC18F26K40.c: 76: LATCbits.LATC5 = 1;
  2861  000C8A  8A8B               	bsf	3979,5,c	;volatile
  2862                           
  2863                           ;progPIC18F26K40.c: 77: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2864  000C8C  D000               	nop2		;2 cycle nop
  2865  000C8E  F000               	nop	
  2866                           
  2867                           ;progPIC18F26K40.c: 78: LATCbits.LATC5 = 0;
  2868  000C90  9A8B               	bcf	3979,5,c	;volatile
  2869                           
  2870                           ;progPIC18F26K40.c: 79: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2871  000C92  D000               	nop2		;2 cycle nop
  2872  000C94  F000               	nop	
  2873                           
  2874                           ;progPIC18F26K40.c: 81: TRISCbits.TRISC6 = 0;
  2875  000C96  9C94               	bcf	3988,6,c	;volatile
  2876                           
  2877                           ;progPIC18F26K40.c: 82: return data;
  2878  000C98  C0E5  F0D9         	movff	PIC18F26K40_readThreeBytes@data,?_PIC18F26K40_readThreeBytes
  2879  000C9C  C0E6  F0DA         	movff	PIC18F26K40_readThreeBytes@data+1,?_PIC18F26K40_readThreeBytes+1
  2880  000CA0  C0E7  F0DB         	movff	PIC18F26K40_readThreeBytes@data+2,?_PIC18F26K40_readThreeBytes+2
  2881  000CA4  C0E8  F0DC         	movff	PIC18F26K40_readThreeBytes@data+3,?_PIC18F26K40_readThreeBytes+3
  2882  000CA8  0C16               	retlw	22	;funcret
  2883  000CAA                     __end_of_PIC18F26K40_readThreeBytes:
  2884                           	opt stack 0
  2885                           tblptru	equ	0xFF8
  2886                           tblptrh	equ	0xFF7
  2887                           tblptrl	equ	0xFF6
  2888                           tablat	equ	0xFF5
  2889                           prodh	equ	0xFF4
  2890                           prodl	equ	0xFF3
  2891                           intcon	equ	0xFF2
  2892                           postinc0	equ	0xFEE
  2893                           wreg	equ	0xFE8
  2894                           indf1	equ	0xFE7
  2895                           postdec1	equ	0xFE5
  2896                           fsr1h	equ	0xFE2
  2897                           fsr1l	equ	0xFE1
  2898                           indf2	equ	0xFDF
  2899                           postinc2	equ	0xFDE
  2900                           postdec2	equ	0xFDD
  2901                           plusw2	equ	0xFDB
  2902                           fsr2h	equ	0xFDA
  2903                           fsr2l	equ	0xFD9
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _PIC18F26K40_loadPC *****************
  2907 ;; Defined at:
  2908 ;;		line 86 in file "libs/progPIC18F26K40.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  address         4    6[BANK0 ] struct _DWORD_VAL
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  tempAddress     4   10[BANK0 ] struct _DWORD_VAL
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 3F/0
  2919 ;;		On exit  : 3F/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2922 ;;      Params:         0       4       0       0
  2923 ;;      Locals:         0       4       0       0
  2924 ;;      Temps:          0       0       0       0
  2925 ;;      Totals:         0       8       0       0
  2926 ;;Total ram usage:        8 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:   12
  2929 ;; This function calls:
  2930 ;;		_PIC18F26K40_sendByte
  2931 ;; This function is called by:
  2932 ;;		_APP_DeviceCDCBasicDemoTasks
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text12
  2937  001792                     __ptext12:
  2938                           	opt stack 0
  2939  001792                     _PIC18F26K40_loadPC:
  2940                           	opt stack 17
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;progPIC18F26K40.c: 87: DWORD_VAL tempAddress;
  2944                           ;progPIC18F26K40.c: 88: tempAddress.Val= (address.Val<<1);
  2945                           
  2946                           ;incstack = 0
  2947  001792  90D8               	bcf	status,0,c
  2948  001794  35D9               	rlcf	PIC18F26K40_loadPC@address& (0+255),w,b
  2949  001796  6FDD               	movwf	PIC18F26K40_loadPC@tempAddress& (0+255),b
  2950  001798  35DA               	rlcf	(PIC18F26K40_loadPC@address+1)& (0+255),w,b
  2951  00179A  6FDE               	movwf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),b
  2952  00179C  35DB               	rlcf	(PIC18F26K40_loadPC@address+2)& (0+255),w,b
  2953  00179E  6FDF               	movwf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),b
  2954  0017A0  35DC               	rlcf	(PIC18F26K40_loadPC@address+3)& (0+255),w,b
  2955  0017A2  6FE0               	movwf	(PIC18F26K40_loadPC@tempAddress+3)& (0+255),b
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;progPIC18F26K40.c: 89: tempAddress.bits.b0 = 0;
  2959  0017A4  91DD               	bcf	PIC18F26K40_loadPC@tempAddress& (0+255),0,b
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;progPIC18F26K40.c: 90: tempAddress.bits.b23 = 0;
  2963  0017A6  9FDF               	bcf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),7,b
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;progPIC18F26K40.c: 91: PIC18F26K40_sendByte(0x80, MSBTOLSB);
  2967  0017A8  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2968  0017AA  0E80               	movlw	128
  2969  0017AC  ECBC  F00A         	call	_PIC18F26K40_sendByte
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;progPIC18F26K40.c: 92: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2973  0017B0  D000               	nop2		;2 cycle nop
  2974  0017B2  F000               	nop	
  2975                           
  2976                           ;progPIC18F26K40.c: 93: PIC18F26K40_sendByte(tempAddress.v[2], MSBTOLSB);
  2977  0017B4  0100               	movlb	0	; () banked
  2978  0017B6  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2979  0017B8  51DF               	movf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),w,b
  2980  0017BA  ECBC  F00A         	call	_PIC18F26K40_sendByte
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;progPIC18F26K40.c: 94: PIC18F26K40_sendByte(tempAddress.v[1], MSBTOLSB);
  2984  0017BE  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2985  0017C0  51DE               	movf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),w,b
  2986  0017C2  ECBC  F00A         	call	_PIC18F26K40_sendByte
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;progPIC18F26K40.c: 95: PIC18F26K40_sendByte(tempAddress.v[0], MSBTOLSB);
  2990  0017C6  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2991  0017C8  51DD               	movf	PIC18F26K40_loadPC@tempAddress& (0+255),w,b
  2992  0017CA  EFBC  F00A         	goto	_PIC18F26K40_sendByte
  2993  0017CE                     __end_of_PIC18F26K40_loadPC:
  2994                           	opt stack 0
  2995                           tblptru	equ	0xFF8
  2996                           tblptrh	equ	0xFF7
  2997                           tblptrl	equ	0xFF6
  2998                           tablat	equ	0xFF5
  2999                           prodh	equ	0xFF4
  3000                           prodl	equ	0xFF3
  3001                           intcon	equ	0xFF2
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           indf1	equ	0xFE7
  3005                           postdec1	equ	0xFE5
  3006                           fsr1h	equ	0xFE2
  3007                           fsr1l	equ	0xFE1
  3008                           indf2	equ	0xFDF
  3009                           postinc2	equ	0xFDE
  3010                           postdec2	equ	0xFDD
  3011                           plusw2	equ	0xFDB
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _PIC18F26K40_loadDataIntoNVM *****************
  3017 ;; Defined at:
  3018 ;;		line 98 in file "libs/progPIC18F26K40.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  data            4    4[BANK0 ] struct _DWORD_VAL
  3021 ;;  IncreasePC      1    8[BANK0 ] enum E4064
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  tempData        4   10[BANK0 ] struct _DWORD_VAL
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 3F/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3033 ;;      Params:         0       5       0       0
  3034 ;;      Locals:         0       4       0       0
  3035 ;;      Temps:          0       1       0       0
  3036 ;;      Totals:         0      10       0       0
  3037 ;;Total ram usage:       10 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:   12
  3040 ;; This function calls:
  3041 ;;		_PIC18F26K40_sendByteMsbToLsb
  3042 ;; This function is called by:
  3043 ;;		_APP_DeviceCDCBasicDemoTasks
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text13
  3048  0014C4                     __ptext13:
  3049                           	opt stack 0
  3050  0014C4                     _PIC18F26K40_loadDataIntoNVM:
  3051                           	opt stack 17
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;progPIC18F26K40.c: 99: DWORD_VAL tempData;
  3055                           ;progPIC18F26K40.c: 100: tempData.Val = (data.Val <<1 );
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;incstack = 0
  3059  0014C4  90D8               	bcf	status,0,c
  3060  0014C6  35D7               	rlcf	PIC18F26K40_loadDataIntoNVM@data& (0+255),w,b
  3061  0014C8  6FDD               	movwf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),b
  3062  0014CA  35D8               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+1)& (0+255),w,b
  3063  0014CC  6FDE               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),b
  3064  0014CE  35D9               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+2)& (0+255),w,b
  3065  0014D0  6FDF               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),b
  3066  0014D2  35DA               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+3)& (0+255),w,b
  3067  0014D4  6FE0               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+3)& (0+255),b
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;progPIC18F26K40.c: 101: tempData.bits.b0 = 0;
  3071  0014D6  91DD               	bcf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),0,b
  3072                           
  3073                           ;progPIC18F26K40.c: 102: if (IncreasePC==TRUE)
  3074  0014D8  05DB               	decf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),w,b
  3075  0014DA  E104               	bnz	l4671
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;progPIC18F26K40.c: 103: PIC18F26K40_sendByteMsbToLsb(0x02);
  3079  0014DC  0E02               	movlw	2
  3080  0014DE  EC60  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3081  0014E2  D003               	goto	l4673
  3082  0014E4                     l4671:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;progPIC18F26K40.c: 104: else
  3086                           ;progPIC18F26K40.c: 105: PIC18F26K40_sendByteMsbToLsb(0x00);
  3087  0014E4  0E00               	movlw	0
  3088  0014E6  EC60  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3089  0014EA                     l4673:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;progPIC18F26K40.c: 106: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3093  0014EA  D000               	nop2		;2 cycle nop
  3094  0014EC  F000               	nop	
  3095                           
  3096                           ;progPIC18F26K40.c: 107: PIC18F26K40_sendByteMsbToLsb(tempData.v[2]);
  3097  0014EE  0100               	movlb	0	; () banked
  3098  0014F0  51DF               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),w,b
  3099  0014F2  EC60  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3100                           
  3101                           ;progPIC18F26K40.c: 108: PIC18F26K40_sendByteMsbToLsb(tempData.v[1]);
  3102  0014F6  51DE               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),w,b
  3103  0014F8  EC60  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3104                           
  3105                           ;progPIC18F26K40.c: 109: PIC18F26K40_sendByteMsbToLsb(tempData.v[0]);
  3106  0014FC  51DD               	movf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),w,b
  3107  0014FE  EC60  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;progPIC18F26K40.c: 110: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3111  001502  D000               	nop2		;2 cycle nop
  3112  001504  F000               	nop	
  3113                           
  3114                           ;progPIC18F26K40.c: 112: PIC18F26K40_sendByteMsbToLsb(0xE0);
  3115  001506  0EE0               	movlw	224
  3116  001508  EC60  F00B         	call	_PIC18F26K40_sendByteMsbToLsb
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;progPIC18F26K40.c: 113: _delay((unsigned long)((6)*(12000000/4000.0)));
  3120  00150C  0E18               	movlw	24
  3121  00150E  0100               	movlb	0	; () banked
  3122  001510  6FDC               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3123  001512  0E5F               	movlw	95
  3124  001514                     u4077:
  3125  001514  2EE8               	decfsz	wreg,f,c
  3126  001516  D7FE               	bra	u4077
  3127  001518  2FDC               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3128  00151A  D7FC               	bra	u4077
  3129  00151C  0012               	return		;funcret
  3130  00151E                     __end_of_PIC18F26K40_loadDataIntoNVM:
  3131                           	opt stack 0
  3132                           tblptru	equ	0xFF8
  3133                           tblptrh	equ	0xFF7
  3134                           tblptrl	equ	0xFF6
  3135                           tablat	equ	0xFF5
  3136                           prodh	equ	0xFF4
  3137                           prodl	equ	0xFF3
  3138                           intcon	equ	0xFF2
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           indf1	equ	0xFE7
  3142                           postdec1	equ	0xFE5
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           indf2	equ	0xFDF
  3146                           postinc2	equ	0xFDE
  3147                           postdec2	equ	0xFDD
  3148                           plusw2	equ	0xFDB
  3149                           fsr2h	equ	0xFDA
  3150                           fsr2l	equ	0xFD9
  3151                           status	equ	0xFD8
  3152                           
  3153 ;; *************** function _PIC18F26K40_sendByteMsbToLsb *****************
  3154 ;; Defined at:
  3155 ;;		line 125 in file "libs/progPIC18F26K40.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  info            1    wreg     unsigned char 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  info            1    2[BANK0 ] unsigned char 
  3160 ;;  i               1    3[BANK0 ] char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 3F/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3170 ;;      Params:         0       0       0       0
  3171 ;;      Locals:         0       2       0       0
  3172 ;;      Temps:          0       2       0       0
  3173 ;;      Totals:         0       4       0       0
  3174 ;;Total ram usage:        4 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:   11
  3177 ;; This function calls:
  3178 ;;		_PIC18F26K40_setTrisToOut
  3179 ;; This function is called by:
  3180 ;;		_PIC18F26K40_loadDataIntoNVM
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text14
  3185  0016C0                     __ptext14:
  3186                           	opt stack 0
  3187  0016C0                     _PIC18F26K40_sendByteMsbToLsb:
  3188                           	opt stack 17
  3189                           
  3190                           ;incstack = 0
  3191                           ;PIC18F26K40_sendByteMsbToLsb@info stored from wreg
  3192  0016C0  0100               	movlb	0	; () banked
  3193  0016C2  6FD5               	movwf	PIC18F26K40_sendByteMsbToLsb@info& (0+255),b
  3194                           
  3195                           ;progPIC18F26K40.c: 126: PIC18F26K40_setTrisToOut ();
  3196  0016C4  EC6F  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3197                           
  3198                           ;progPIC18F26K40.c: 127: for (INT8 i = 7; i >= 0; i--) {
  3199  0016C8  0E07               	movlw	7
  3200  0016CA  0100               	movlb	0	; () banked
  3201  0016CC  6FD6               	movwf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),b
  3202  0016CE                     l124:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;progPIC18F26K40.c: 128: LATCbits.LATC5 = 1;
  3206  0016CE  8A8B               	bsf	3979,5,c	;volatile
  3207                           
  3208                           ;progPIC18F26K40.c: 129: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3209  0016D0  D000               	nop2		;2 cycle nop
  3210  0016D2  F000               	nop	
  3211                           
  3212                           ;progPIC18F26K40.c: 130: if ((info >> i) & 0x01)
  3213  0016D4  C0D6  F0D3         	movff	PIC18F26K40_sendByteMsbToLsb@i,??_PIC18F26K40_sendByteMsbToLsb
  3214  0016D8  C0D5  F0D4         	movff	PIC18F26K40_sendByteMsbToLsb@info,??_PIC18F26K40_sendByteMsbToLsb+1
  3215  0016DC  0100               	movlb	0	; () banked
  3216  0016DE  2BD3               	incf	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3217  0016E0  D002               	goto	u3554
  3218  0016E2                     u3555:
  3219  0016E2  90D8               	bcf	status,0,c
  3220  0016E4  33D4               	rrcf	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),f,b
  3221  0016E6                     u3554:
  3222  0016E6  2FD3               	decfsz	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3223  0016E8  D7FC               	goto	u3555
  3224  0016EA  0100               	movlb	0	; () banked
  3225  0016EC  A1D4               	btfss	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),0,b
  3226  0016EE  D002               	goto	l126
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;progPIC18F26K40.c: 131: LATCbits.LATC6 = 1;
  3230  0016F0  8C8B               	bsf	3979,6,c	;volatile
  3231  0016F2  D001               	goto	l127
  3232  0016F4                     l126:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;progPIC18F26K40.c: 132: else
  3236                           ;progPIC18F26K40.c: 133: LATCbits.LATC6 = 0;
  3237  0016F4  9C8B               	bcf	3979,6,c	;volatile
  3238  0016F6                     l127:
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;progPIC18F26K40.c: 134: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3242  0016F6  D000               	nop2		;2 cycle nop
  3243  0016F8  F000               	nop	
  3244                           
  3245                           ;progPIC18F26K40.c: 135: LATCbits.LATC5 = 0;
  3246  0016FA  9A8B               	bcf	3979,5,c	;volatile
  3247                           
  3248                           ;progPIC18F26K40.c: 136: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3249  0016FC  D000               	nop2		;2 cycle nop
  3250  0016FE  F000               	nop	
  3251  001700  0100               	movlb	0	; () banked
  3252  001702  07D6               	decf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),f,b
  3253                           
  3254                           ; BSR set to: 0
  3255  001704  BFD6               	btfsc	PIC18F26K40_sendByteMsbToLsb@i& (0+255),7,b
  3256                           
  3257                           ; BSR set to: 0
  3258  001706  0012               	return		;funcret
  3259  001708  D7E2               	goto	l124
  3260  00170A                     __end_of_PIC18F26K40_sendByteMsbToLsb:
  3261                           	opt stack 0
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           prodh	equ	0xFF4
  3267                           prodl	equ	0xFF3
  3268                           intcon	equ	0xFF2
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           indf1	equ	0xFE7
  3272                           postdec1	equ	0xFE5
  3273                           fsr1h	equ	0xFE2
  3274                           fsr1l	equ	0xFE1
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           postdec2	equ	0xFDD
  3278                           plusw2	equ	0xFDB
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _PIC18F26K40_exitLowVoltageProg *****************
  3284 ;; Defined at:
  3285 ;;		line 27 in file "libs/progPIC18F26K40.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		None
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3299 ;;      Params:         0       0       0       0
  3300 ;;      Locals:         0       0       0       0
  3301 ;;      Temps:          0       0       0       0
  3302 ;;      Totals:         0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:   10
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_APP_DeviceCDCBasicDemoTasks
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text15
  3314  001AD4                     __ptext15:
  3315                           	opt stack 0
  3316  001AD4                     _PIC18F26K40_exitLowVoltageProg:
  3317                           	opt stack 19
  3318                           
  3319                           ;progPIC18F26K40.c: 28: TRISCbits.TRISC7 = 0;
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;incstack = 0
  3323  001AD4  9E94               	bcf	3988,7,c	;volatile
  3324                           
  3325                           ;progPIC18F26K40.c: 29: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3326  001AD6  D000               	nop2		;2 cycle nop
  3327  001AD8  F000               	nop	
  3328                           
  3329                           ;progPIC18F26K40.c: 30: LATCbits.LATC7 = 1;
  3330  001ADA  8E8B               	bsf	3979,7,c	;volatile
  3331  001ADC  0012               	return		;funcret
  3332  001ADE                     __end_of_PIC18F26K40_exitLowVoltageProg:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           intcon	equ	0xFF2
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           indf1	equ	0xFE7
  3344                           postdec1	equ	0xFE5
  3345                           fsr1h	equ	0xFE2
  3346                           fsr1l	equ	0xFE1
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           plusw2	equ	0xFDB
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8
  3354                           
  3355 ;; *************** function _PIC18F26K40_enterLowVoltageProg *****************
  3356 ;; Defined at:
  3357 ;;		line 10 in file "libs/progPIC18F26K40.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  code            4    6[BANK0 ] struct _DWORD_VAL
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 3F/1
  3368 ;;		On exit  : 3F/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3371 ;;      Params:         0       0       0       0
  3372 ;;      Locals:         0       4       0       0
  3373 ;;      Temps:          0       0       0       0
  3374 ;;      Totals:         0       4       0       0
  3375 ;;Total ram usage:        4 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:   12
  3378 ;; This function calls:
  3379 ;;		_PIC18F26K40_sendByte
  3380 ;;		_PIC18F26K40_setTrisToOut
  3381 ;; This function is called by:
  3382 ;;		_APP_DeviceCDCBasicDemoTasks
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text16
  3387  00170A                     __ptext16:
  3388                           	opt stack 0
  3389  00170A                     _PIC18F26K40_enterLowVoltageProg:
  3390                           	opt stack 17
  3391                           
  3392                           ; BSR set to: 1
  3393                           ;progPIC18F26K40.c: 11: PIC18F26K40_setTrisToOut ();
  3394                           
  3395                           ;incstack = 0
  3396  00170A  EC6F  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3397                           
  3398                           ;progPIC18F26K40.c: 12: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3399  00170E  D000               	nop2		;2 cycle nop
  3400  001710  F000               	nop	
  3401                           
  3402                           ;progPIC18F26K40.c: 14: LATCbits.LATC7 = 0;
  3403  001712  9E8B               	bcf	3979,7,c	;volatile
  3404                           
  3405                           ;progPIC18F26K40.c: 15: LATCbits.LATC6 = 0;
  3406  001714  9C8B               	bcf	3979,6,c	;volatile
  3407                           
  3408                           ;progPIC18F26K40.c: 16: LATCbits.LATC5 = 0;
  3409  001716  9A8B               	bcf	3979,5,c	;volatile
  3410                           
  3411                           ;progPIC18F26K40.c: 17: (_delay((unsigned long)((250)*(12000000/4000000.0))));
  3412  001718  0EFA               	movlw	250
  3413  00171A                     u4087:
  3414  00171A  2EE8               	decfsz	wreg,f,c
  3415  00171C  D7FE               	bra	u4087
  3416                           
  3417                           ;progPIC18F26K40.c: 19: DWORD_VAL code;
  3418                           ;progPIC18F26K40.c: 20: code.Val = (0x4d434850);
  3419  00171E  0E50               	movlw	80
  3420  001720  0100               	movlb	0	; () banked
  3421  001722  6FD9               	movwf	PIC18F26K40_enterLowVoltageProg@code& (0+255),b
  3422  001724  0E48               	movlw	72
  3423  001726  6FDA               	movwf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),b
  3424  001728  0E43               	movlw	67
  3425  00172A  6FDB               	movwf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),b
  3426  00172C  0E4D               	movlw	77
  3427  00172E  6FDC               	movwf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;progPIC18F26K40.c: 21: PIC18F26K40_sendByte(code.v[3], MSBTOLSB);
  3431  001730  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3432  001732  51DC               	movf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),w,b
  3433  001734  ECBC  F00A         	call	_PIC18F26K40_sendByte
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;progPIC18F26K40.c: 22: PIC18F26K40_sendByte(code.v[2], MSBTOLSB);
  3437  001738  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3438  00173A  51DB               	movf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),w,b
  3439  00173C  ECBC  F00A         	call	_PIC18F26K40_sendByte
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;progPIC18F26K40.c: 23: PIC18F26K40_sendByte(code.v[1], MSBTOLSB);
  3443  001740  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3444  001742  51DA               	movf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),w,b
  3445  001744  ECBC  F00A         	call	_PIC18F26K40_sendByte
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;progPIC18F26K40.c: 24: PIC18F26K40_sendByte(code.v[0], MSBTOLSB);
  3449  001748  6BD3               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3450  00174A  51D9               	movf	PIC18F26K40_enterLowVoltageProg@code& (0+255),w,b
  3451  00174C  EFBC  F00A         	goto	_PIC18F26K40_sendByte
  3452  001750                     __end_of_PIC18F26K40_enterLowVoltageProg:
  3453                           	opt stack 0
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           prodh	equ	0xFF4
  3459                           prodl	equ	0xFF3
  3460                           intcon	equ	0xFF2
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           indf1	equ	0xFE7
  3464                           postdec1	equ	0xFE5
  3465                           fsr1h	equ	0xFE2
  3466                           fsr1l	equ	0xFE1
  3467                           indf2	equ	0xFDF
  3468                           postinc2	equ	0xFDE
  3469                           postdec2	equ	0xFDD
  3470                           plusw2	equ	0xFDB
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _PIC18F26K40_sendByte *****************
  3476 ;; Defined at:
  3477 ;;		line 33 in file "libs/progPIC18F26K40.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  info            1    wreg     unsigned char 
  3480 ;;  direction       1    0[BANK0 ] enum E4265
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  info            1    3[BANK0 ] unsigned char 
  3483 ;;  i               1    5[BANK0 ] unsigned char 
  3484 ;;  j               1    4[BANK0 ] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 3F/0
  3491 ;;		On exit  : 3F/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3494 ;;      Params:         0       1       0       0
  3495 ;;      Locals:         0       3       0       0
  3496 ;;      Temps:          0       2       0       0
  3497 ;;      Totals:         0       6       0       0
  3498 ;;Total ram usage:        6 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:   11
  3501 ;; This function calls:
  3502 ;;		_PIC18F26K40_setTrisToOut
  3503 ;; This function is called by:
  3504 ;;		_PIC18F26K40_enterLowVoltageProg
  3505 ;;		_PIC18F26K40_readThreeBytes
  3506 ;;		_PIC18F26K40_loadPC
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text17
  3511  001578                     __ptext17:
  3512                           	opt stack 0
  3513  001578                     _PIC18F26K40_sendByte:
  3514                           	opt stack 17
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;incstack = 0
  3518                           ;PIC18F26K40_sendByte@info stored from wreg
  3519  001578  6FD6               	movwf	PIC18F26K40_sendByte@info& (0+255),b
  3520                           
  3521                           ;progPIC18F26K40.c: 34: PIC18F26K40_setTrisToOut ();
  3522  00157A  EC6F  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3523                           
  3524                           ;progPIC18F26K40.c: 35: BYTE i, j;
  3525                           ;progPIC18F26K40.c: 36: for (i = 0; i < 8; i++) {
  3526  00157E  0100               	movlb	0	; () banked
  3527  001580  6BD8               	clrf	PIC18F26K40_sendByte@i& (0+255),b
  3528  001582                     l4521:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;progPIC18F26K40.c: 37: if (direction)
  3532  001582  51D3               	movf	PIC18F26K40_sendByte@direction& (0+255),w,b
  3533  001584  E003               	bz	l4525
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;progPIC18F26K40.c: 38: j = i;
  3537  001586  C0D8  F0D7         	movff	PIC18F26K40_sendByte@i,PIC18F26K40_sendByte@j
  3538  00158A  D003               	goto	l4527
  3539  00158C                     l4525:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;progPIC18F26K40.c: 39: else
  3543                           ;progPIC18F26K40.c: 40: j = 7-i;
  3544  00158C  51D8               	movf	PIC18F26K40_sendByte@i& (0+255),w,b
  3545  00158E  0807               	sublw	7
  3546  001590  6FD7               	movwf	PIC18F26K40_sendByte@j& (0+255),b
  3547  001592                     l4527:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;progPIC18F26K40.c: 41: LATCbits.LATC5 = 1;
  3551  001592  8A8B               	bsf	3979,5,c	;volatile
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;progPIC18F26K40.c: 42: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3555  001594  D000               	nop2		;2 cycle nop
  3556  001596  F000               	nop	
  3557                           
  3558                           ;progPIC18F26K40.c: 43: if ((info >> j) & 0x01)
  3559  001598  C0D7  F0D4         	movff	PIC18F26K40_sendByte@j,??_PIC18F26K40_sendByte
  3560  00159C  C0D6  F0D5         	movff	PIC18F26K40_sendByte@info,??_PIC18F26K40_sendByte+1
  3561  0015A0  0100               	movlb	0	; () banked
  3562  0015A2  2BD4               	incf	??_PIC18F26K40_sendByte& (0+255),f,b
  3563  0015A4  D002               	goto	u3524
  3564  0015A6                     u3525:
  3565  0015A6  90D8               	bcf	status,0,c
  3566  0015A8  33D5               	rrcf	(??_PIC18F26K40_sendByte+1)& (0+255),f,b
  3567  0015AA                     u3524:
  3568  0015AA  2FD4               	decfsz	??_PIC18F26K40_sendByte& (0+255),f,b
  3569  0015AC  D7FC               	goto	u3525
  3570  0015AE  0100               	movlb	0	; () banked
  3571  0015B0  A1D5               	btfss	(??_PIC18F26K40_sendByte+1)& (0+255),0,b
  3572  0015B2  D002               	goto	l101
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;progPIC18F26K40.c: 44: LATCbits.LATC6 = 1;
  3576  0015B4  8C8B               	bsf	3979,6,c	;volatile
  3577  0015B6  D001               	goto	l102
  3578  0015B8                     l101:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;progPIC18F26K40.c: 45: else
  3582                           ;progPIC18F26K40.c: 46: LATCbits.LATC6 = 0;
  3583  0015B8  9C8B               	bcf	3979,6,c	;volatile
  3584  0015BA                     l102:
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;progPIC18F26K40.c: 47: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3588  0015BA  D000               	nop2		;2 cycle nop
  3589  0015BC  F000               	nop	
  3590                           
  3591                           ;progPIC18F26K40.c: 48: LATCbits.LATC5 = 0;
  3592  0015BE  9A8B               	bcf	3979,5,c	;volatile
  3593                           
  3594                           ;progPIC18F26K40.c: 49: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3595  0015C0  D000               	nop2		;2 cycle nop
  3596  0015C2  F000               	nop	
  3597  0015C4  0100               	movlb	0	; () banked
  3598  0015C6  2BD8               	incf	PIC18F26K40_sendByte@i& (0+255),f,b
  3599                           
  3600                           ; BSR set to: 0
  3601  0015C8  0E07               	movlw	7
  3602  0015CA  65D8               	cpfsgt	PIC18F26K40_sendByte@i& (0+255),b
  3603  0015CC  D7DA               	goto	l4521
  3604  0015CE  0C07               	retlw	7
  3605  0015D0                     __end_of_PIC18F26K40_sendByte:
  3606                           	opt stack 0
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodh	equ	0xFF4
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           indf1	equ	0xFE7
  3617                           postdec1	equ	0xFE5
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           indf2	equ	0xFDF
  3621                           postinc2	equ	0xFDE
  3622                           postdec2	equ	0xFDD
  3623                           plusw2	equ	0xFDB
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function _PIC18F26K40_setTrisToOut *****************
  3629 ;; Defined at:
  3630 ;;		line 4 in file "libs/progPIC18F26K40.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		None
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3644 ;;      Params:         0       0       0       0
  3645 ;;      Locals:         0       0       0       0
  3646 ;;      Temps:          0       0       0       0
  3647 ;;      Totals:         0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:   10
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_PIC18F26K40_enterLowVoltageProg
  3655 ;;		_PIC18F26K40_sendByte
  3656 ;;		_PIC18F26K40_sendByteMsbToLsb
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text18
  3661  001ADE                     __ptext18:
  3662                           	opt stack 0
  3663  001ADE                     _PIC18F26K40_setTrisToOut:
  3664                           	opt stack 17
  3665                           
  3666                           ;progPIC18F26K40.c: 5: TRISCbits.TRISC7 = 0;
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;incstack = 0
  3670  001ADE  9E94               	bcf	3988,7,c	;volatile
  3671                           
  3672                           ;progPIC18F26K40.c: 6: TRISCbits.TRISC6 = 0;
  3673  001AE0  9C94               	bcf	3988,6,c	;volatile
  3674                           
  3675                           ;progPIC18F26K40.c: 7: TRISCbits.TRISC5 = 0;
  3676  001AE2  9A94               	bcf	3988,5,c	;volatile
  3677  001AE4  0012               	return		;funcret
  3678  001AE6                     __end_of_PIC18F26K40_setTrisToOut:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           tblptrh	equ	0xFF7
  3682                           tblptrl	equ	0xFF6
  3683                           tablat	equ	0xFF5
  3684                           prodh	equ	0xFF4
  3685                           prodl	equ	0xFF3
  3686                           intcon	equ	0xFF2
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           indf1	equ	0xFE7
  3690                           postdec1	equ	0xFE5
  3691                           fsr1h	equ	0xFE2
  3692                           fsr1l	equ	0xFE1
  3693                           indf2	equ	0xFDF
  3694                           postinc2	equ	0xFDE
  3695                           postdec2	equ	0xFDD
  3696                           plusw2	equ	0xFDB
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           status	equ	0xFD8
  3700                           
  3701 ;; *************** function _CDCTxService *****************
  3702 ;; Defined at:
  3703 ;;		line 836 in file "picLibs/usb_device_cdc.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  3708 ;;  i               1    9[BANK0 ] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 3E/0
  3715 ;;		On exit  : 3F/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3718 ;;      Params:         0       0       0       0
  3719 ;;      Locals:         0       2       0       0
  3720 ;;      Temps:          0       0       0       0
  3721 ;;      Totals:         0       2       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:   11
  3725 ;; This function calls:
  3726 ;;		_USBTransferOnePacket
  3727 ;; This function is called by:
  3728 ;;		_APP_DeviceCDCBasicDemoTasks
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text19
  3733  0007CC                     __ptext19:
  3734                           	opt stack 0
  3735  0007CC                     _CDCTxService:
  3736                           	opt stack 18
  3737                           
  3738                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3739                           ;usb_device_cdc.c: 839: uint8_t i;
  3740                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3741                           
  3742                           ;incstack = 0
  3743  0007CC  94A0               	bcf	4000,2,c	;volatile
  3744                           
  3745                           ;usb_device_cdc.c: 843: {};
  3746                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3747  0007CE  0100               	movlb	0	; () banked
  3748  0007D0  5176               	movf	_CDCDataInHandle& (0+255),w,b
  3749  0007D2  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3750  0007D4  E008               	bz	l4765
  3751                           
  3752                           ; BSR set to: 0
  3753  0007D6  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
  3754  0007DA  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3755  0007DE  AEDF               	btfss	indf2,7,c
  3756  0007E0  D002               	goto	l4765
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;usb_device_cdc.c: 846: {
  3760                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3761  0007E2  84A0               	bsf	4000,2,c	;volatile
  3762                           
  3763                           ;usb_device_cdc.c: 848: return;
  3764  0007E4  0012               	return	
  3765  0007E6                     l4765:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;usb_device_cdc.c: 849: }
  3769                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3770  0007E6  0E03               	movlw	3
  3771  0007E8  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3772  0007EA  E101               	bnz	l4769
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3776  0007EC  6B80               	clrf	_cdc_trf_state& (0+255),b
  3777  0007EE                     l4769:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3781  0007EE  5180               	movf	_cdc_trf_state& (0+255),w,b
  3782  0007F0  E102               	bnz	l4773
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;usb_device_cdc.c: 863: {
  3786                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3787  0007F2  84A0               	bsf	4000,2,c	;volatile
  3788                           
  3789                           ;usb_device_cdc.c: 865: return;
  3790  0007F4  0012               	return	
  3791  0007F6                     l4773:
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;usb_device_cdc.c: 866: }
  3795                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3796  0007F6  0E02               	movlw	2
  3797  0007F8  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3798  0007FA  E10D               	bnz	l4779
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;usb_device_cdc.c: 872: {
  3802                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3803  0007FC  0E01               	movlw	1
  3804  0007FE  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  3805  000800  0E00               	movlw	0
  3806  000802  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  3807  000804  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3808  000806  6FD6               	movwf	USBTransferOnePacket@len& (0+255),b
  3809  000808  0E02               	movlw	2
  3810  00080A  EC39  F005         	call	_USBTransferOnePacket
  3811  00080E  D856               	call	PL114	;call to abstracted procedure
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3815  000810  0E03               	movlw	3
  3816  000812  6F80               	movwf	_cdc_trf_state& (0+255),b
  3817                           
  3818                           ;usb_device_cdc.c: 876: }
  3819  000814  D03E               	goto	l4823
  3820  000816                     l4779:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3824  000816  0580               	decf	_cdc_trf_state& (0+255),w,b
  3825  000818  E13C               	bnz	l4823
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;usb_device_cdc.c: 878: {
  3829                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3830  00081A  0E40               	movlw	64
  3831  00081C  641B               	cpfsgt	_cdc_tx_len,c
  3832  00081E  D002               	goto	l822
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3836  000820  6FDD               	movwf	CDCTxService@byte_to_send& (0+255),b
  3837  000822  D002               	goto	l4785
  3838  000824                     l822:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;usb_device_cdc.c: 884: else
  3842                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3843  000824  C01B  F0DD         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3844  000828                     l4785:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3848  000828  51DD               	movf	CDCTxService@byte_to_send& (0+255),w,b
  3849  00082A  5E1B               	subwf	_cdc_tx_len,f,c
  3850                           
  3851                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3852  00082C  0E40               	movlw	64
  3853  00082E  6F6A               	movwf	_pCDCDst& (0+255),b
  3854  000830  0E02               	movlw	2
  3855  000832  6F6B               	movwf	(_pCDCDst+1)& (0+255),b
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3859  000834  C0DD  F0DC         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3863  000838  517C               	movf	_cdc_mem_type& (0+255),w,b
  3864  00083A  E00A               	bz	l4801
  3865  00083C  D015               	goto	l4811
  3866  00083E                     l4793:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;usb_device_cdc.c: 898: {
  3870                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3871  00083E  D82B               	call	PL42	;call to abstracted procedure
  3872  000840  64F7               	cpfsgt	tblptrh,c
  3873  000842  D003               	bra	u3867
  3874  000844  0008               	tblrd		*
  3875  000846  50F5               	movf	tablat,w,c
  3876  000848  D002               	bra	u3860
  3877  00084A                     u3867:
  3878  00084A  EC1D  F005         	call	PL18	;call to abstracted procedure
  3879  00084E                     u3860:
  3880                           
  3881                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;usb_device_cdc.c: 902: i--;
  3888  00084E  D82E               	call	PL70	;call to abstracted procedure
  3889  000850                     l4801:
  3890                           
  3891                           ; BSR set to: 0
  3892  000850  51DC               	movf	CDCTxService@i& (0+255),w,b
  3893  000852  E00C               	bz	l4813
  3894  000854  D7F4               	goto	l4793
  3895  000856                     l4803:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;usb_device_cdc.c: 908: {
  3899                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  3900  000856  D81F               	call	PL42	;call to abstracted procedure
  3901  000858  64F7               	cpfsgt	tblptrh,c
  3902  00085A  D003               	bra	u3887
  3903  00085C  0008               	tblrd		*
  3904  00085E  50F5               	movf	tablat,w,c
  3905  000860  D002               	bra	u3880
  3906  000862                     u3887:
  3907  000862  EC1D  F005         	call	PL18	;call to abstracted procedure
  3908  000866                     u3880:
  3909                           
  3910                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;usb_device_cdc.c: 912: i--;
  3917  000866  D822               	call	PL70	;call to abstracted procedure
  3918  000868                     l4811:
  3919                           
  3920                           ; BSR set to: 0
  3921  000868  51DC               	movf	CDCTxService@i& (0+255),w,b
  3922  00086A  E1F5               	bnz	l4803
  3923  00086C                     l4813:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;usb_device_cdc.c: 913: }
  3927                           ;usb_device_cdc.c: 914: }
  3928                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  3929  00086C  501B               	movf	_cdc_tx_len,w,c
  3930  00086E  E106               	bnz	l4821
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;usb_device_cdc.c: 921: {
  3934                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  3935  000870  0E40               	movlw	64
  3936  000872  19DD               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  3940  000874  0E02               	movlw	2
  3941  000876  A4D8               	btfss	status,2,c
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;usb_device_cdc.c: 924: else
  3945                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  3946  000878  0E03               	movlw	3
  3947  00087A  6F80               	movwf	_cdc_trf_state& (0+255),b
  3948  00087C                     l4821:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;usb_device_cdc.c: 926: }
  3952                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3953  00087C  0E01               	movlw	1
  3954  00087E  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  3955  000880  0E40               	movlw	64
  3956  000882  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  3957  000884  0E02               	movlw	2
  3958  000886  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3959  000888  C0DD  F0D6         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3960  00088C  EC39  F005         	call	_USBTransferOnePacket
  3961  000890  D815               	call	PL114	;call to abstracted procedure
  3962  000892                     l4823:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;usb_device_cdc.c: 929: }
  3966                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  3967  000892  84A0               	bsf	4000,2,c	;volatile
  3968                           
  3969                           ; BSR set to: 0
  3970  000894  0012               	return		;funcret
  3971  000896                     __end_of_CDCTxService:
  3972                           	opt stack 0
  3973  000896                     PL42:
  3974                           	opt stack 18
  3975  000896  C06D  FFF6         	movff	_pCDCSrc,tblptrl
  3976  00089A  C06E  FFF7         	movff	_pCDCSrc+1,tblptrh
  3977  00089E  6AF8               	clrf	tblptru,c
  3978  0008A0  C06A  FFD9         	movff	_pCDCDst,fsr2l
  3979  0008A4  C06B  FFDA         	movff	_pCDCDst+1,fsr2h
  3980  0008A8  0E02               	movlw	(high __ramtop+-1)
  3981  0008AA  0012               	return	
  3982  0008AC                     __end_ofPL42:
  3983                           	opt stack 0
  3984  0008AC                     PL70:
  3985                           	opt stack 18
  3986  0008AC  6EDF               	movwf	indf2,c
  3987  0008AE  0100               	movlb	0	; () banked
  3988  0008B0  4B6A               	infsnz	_pCDCDst& (0+255),f,b
  3989  0008B2  2B6B               	incf	(_pCDCDst+1)& (0+255),f,b
  3990  0008B4  4B6D               	infsnz	_pCDCSrc& (0+255),f,b
  3991  0008B6  2B6E               	incf	(_pCDCSrc+1)& (0+255),f,b
  3992  0008B8  07DC               	decf	CDCTxService@i& (0+255),f,b
  3993  0008BA  0012               	return	
  3994  0008BC                     __end_ofPL70:
  3995                           	opt stack 0
  3996  0008BC                     PL114:
  3997                           	opt stack 18
  3998  0008BC  C0D3  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3999  0008C0  C0D4  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4000  0008C4  0012               	return	
  4001  0008C6                     __end_ofPL114:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           indf1	equ	0xFE7
  4013                           postdec1	equ	0xFE5
  4014                           fsr1h	equ	0xFE2
  4015                           fsr1l	equ	0xFE1
  4016                           indf2	equ	0xFDF
  4017                           postinc2	equ	0xFDE
  4018                           postdec2	equ	0xFDD
  4019                           plusw2	equ	0xFDB
  4020                           fsr2h	equ	0xFDA
  4021                           fsr2l	equ	0xFD9
  4022                           status	equ	0xFD8
  4023                           
  4024 ;; *************** function _USBTransferOnePacket *****************
  4025 ;; Defined at:
  4026 ;;		line 995 in file "picLibs/usb_device.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  ep              1    wreg     unsigned char 
  4029 ;;  dir             1    0[BANK0 ] unsigned char 
  4030 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4031 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4032 ;;  len             1    3[BANK0 ] unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  ep              1    6[BANK0 ] unsigned char 
  4035 ;;  handle          2    7[BANK0 ] PTR volatile struct __BD
  4036 ;;		 -> RAM(767), NULL(0), BDT(48), 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2    0[BANK0 ] PTR void 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4041 ;; Tracked objects:
  4042 ;;		On entry : 3F/0
  4043 ;;		On exit  : 3F/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4046 ;;      Params:         0       4       0       0
  4047 ;;      Locals:         0       3       0       0
  4048 ;;      Temps:          0       2       0       0
  4049 ;;      Totals:         0       9       0       0
  4050 ;;Total ram usage:        9 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:   10
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_getsUSBUSART
  4057 ;;		_CDCTxService
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text20
  4062  000A72                     __ptext20:
  4063                           	opt stack 0
  4064  000A72                     _USBTransferOnePacket:
  4065                           	opt stack 18
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;incstack = 0
  4069                           ;USBTransferOnePacket@ep stored from wreg
  4070  000A72  6FD9               	movwf	USBTransferOnePacket@ep& (0+255),b
  4071                           
  4072                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4073                           ;usb_device.c: 1000: if(dir != 0)
  4074  000A74  0100               	movlb	0	; () banked
  4075  000A76  51D3               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4076  000A78  E004               	bz	l4559
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;usb_device.c: 1001: {
  4080                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4081  000A7A  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4082  000A7C  EC9F  F006         	call	PL84	;call to abstracted procedure
  4083  000A80  D003               	goto	L2
  4084  000A82                     l4559:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;usb_device.c: 1005: else
  4088                           ;usb_device.c: 1006: {
  4089                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4090  000A82  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4091  000A84  ECA8  F006         	call	PL92	;call to abstracted procedure
  4092  000A88                     L2:
  4093  000A88  6ED9               	movwf	fsr2l,c
  4094  000A8A  6ADA               	clrf	fsr2h,c
  4095  000A8C  CFDE F0DA          	movff	postinc2,USBTransferOnePacket@handle
  4096  000A90  CFDD F0DB          	movff	postdec2,USBTransferOnePacket@handle+1
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;usb_device.c: 1009: }
  4100                           ;usb_device.c: 1013: if(handle == 0)
  4101  000A94  51DA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4102  000A96  11DB               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4103  000A98  E103               	bnz	l4565
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;usb_device.c: 1014: {
  4107                           ;usb_device.c: 1015: return 0;
  4108  000A9A  6BD3               	clrf	?_USBTransferOnePacket& (0+255),b
  4109  000A9C  6BD4               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  4110  000A9E  0012               	return	
  4111  000AA0                     l4565:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;usb_device.c: 1016: }
  4115                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4116  000AA0  EE20 F002          	lfsr	2,2
  4117  000AA4  D842               	call	PL108	;call to abstracted procedure
  4118  000AA6  C0D4  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4119  000AAA  C0D5  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4120                           
  4121                           ;usb_device.c: 1030: handle->CNT = len;
  4122  000AAE  EE20 F001          	lfsr	2,1
  4123  000AB2  D83B               	call	PL108	;call to abstracted procedure
  4124  000AB4  C0D6  FFDF         	movff	USBTransferOnePacket@len,indf2
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4128  000AB8  D833               	call	PL94	;call to abstracted procedure
  4129  000ABA  0E40               	movlw	64
  4130  000ABC  16DF               	andwf	indf2,f,c
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4134  000ABE  D830               	call	PL94	;call to abstracted procedure
  4135  000AC0  0E00               	movlw	0
  4136  000AC2  86DB               	bsf	plusw2,3,c
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4140  000AC4  D82D               	call	PL94	;call to abstracted procedure
  4141  000AC6  8EDB               	bsf	plusw2,7,c
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;usb_device.c: 1036: if(dir != 0)
  4145  000AC8  51D3               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4146  000ACA  E005               	bz	l4577
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;usb_device.c: 1037: {
  4150                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4151  000ACC  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4152  000ACE  D818               	call	PL26	;call to abstracted procedure
  4153  000AD0  D81D               	call	PL46	;call to abstracted procedure
  4154  000AD2  0F0F               	addlw	low _pBDTEntryIn
  4155  000AD4  D004               	goto	L3
  4156  000AD6                     l4577:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;usb_device.c: 1041: else
  4160                           ;usb_device.c: 1042: {
  4161                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4162  000AD6  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4163  000AD8  D80D               	call	PL24	;call to abstracted procedure
  4164  000ADA  D818               	call	PL46	;call to abstracted procedure
  4165  000ADC  0F60               	addlw	low _pBDTEntryOut
  4166  000ADE                     L3:
  4167  000ADE  6ED9               	movwf	fsr2l,c
  4168  000AE0  6ADA               	clrf	fsr2h,c
  4169  000AE2  C0D7  FFDE         	movff	??_USBTransferOnePacket,postinc2
  4170  000AE6  C0D8  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;usb_device.c: 1045: }
  4174                           ;usb_device.c: 1046: return (void*)handle;
  4175  000AEA  C0DA  F0D3         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4176  000AEE  C0DB  F0D4         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4177                           
  4178                           ; BSR set to: 0
  4179  000AF2  0012               	return		;funcret
  4180  000AF4                     __end_of_USBTransferOnePacket:
  4181                           	opt stack 0
  4182  000AF4                     PL24:
  4183                           	opt stack 19
  4184  000AF4  0D02               	mullw	2
  4185  000AF6  50F3               	movf	prodl,w,c
  4186  000AF8  0F60               	addlw	low _pBDTEntryOut
  4187  000AFA  6ED9               	movwf	fsr2l,c
  4188  000AFC  6ADA               	clrf	fsr2h,c
  4189  000AFE  0012               	return	
  4190  000B00                     __end_ofPL24:
  4191                           	opt stack 0
  4192  000B00                     PL26:
  4193                           	opt stack 19
  4194  000B00  0D02               	mullw	2
  4195  000B02  50F3               	movf	prodl,w,c
  4196  000B04  0F0F               	addlw	low _pBDTEntryIn
  4197  000B06  6ED9               	movwf	fsr2l,c
  4198  000B08  6ADA               	clrf	fsr2h,c
  4199  000B0A  0012               	return	
  4200  000B0C                     __end_ofPL26:
  4201                           	opt stack 0
  4202  000B0C                     PL46:
  4203                           	opt stack 18
  4204  000B0C  CFDE F0D7          	movff	postinc2,??_USBTransferOnePacket
  4205  000B10  CFDD F0D8          	movff	postdec2,??_USBTransferOnePacket+1
  4206  000B14  0E04               	movlw	4
  4207  000B16  1BD7               	xorwf	??_USBTransferOnePacket& (0+255),f,b
  4208  000B18  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4209  000B1A  0D02               	mullw	2
  4210  000B1C  50F3               	movf	prodl,w,c
  4211  000B1E  0012               	return	
  4212  000B20                     __end_ofPL46:
  4213                           	opt stack 0
  4214  000B20                     PL94:
  4215                           	opt stack 18
  4216  000B20  C0DA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4217  000B24  C0DB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4218  000B28  0012               	return	
  4219  000B2A                     __end_ofPL94:
  4220                           	opt stack 0
  4221  000B2A                     PL108:
  4222                           	opt stack 18
  4223  000B2A  51DA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4224  000B2C  26D9               	addwf	fsr2l,f,c
  4225  000B2E  51DB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4226  000B30  22DA               	addwfc	fsr2h,f,c
  4227  000B32  0012               	return	
  4228  000B34                     __end_ofPL108:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           prodh	equ	0xFF4
  4235                           prodl	equ	0xFF3
  4236                           intcon	equ	0xFF2
  4237                           postinc0	equ	0xFEE
  4238                           wreg	equ	0xFE8
  4239                           indf1	equ	0xFE7
  4240                           postdec1	equ	0xFE5
  4241                           fsr1h	equ	0xFE2
  4242                           fsr1l	equ	0xFE1
  4243                           indf2	equ	0xFDF
  4244                           postinc2	equ	0xFDE
  4245                           postdec2	equ	0xFDD
  4246                           plusw2	equ	0xFDB
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           
  4251 ;; *************** function _BUTTON_IsPressed *****************
  4252 ;; Defined at:
  4253 ;;		line 55 in file "picLibs/buttons.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  button          1    wreg     enum E3304
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  button          1    0[BANK0 ] enum E3304
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      unsigned char 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 3F/0
  4264 ;;		On exit  : 3F/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4267 ;;      Params:         0       0       0       0
  4268 ;;      Locals:         0       1       0       0
  4269 ;;      Temps:          0       0       0       0
  4270 ;;      Totals:         0       1       0       0
  4271 ;;Total ram usage:        1 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:   10
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_APP_DeviceCDCBasicDemoTasks
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text21
  4282  001A78                     __ptext21:
  4283                           	opt stack 0
  4284  001A78                     _BUTTON_IsPressed:
  4285                           	opt stack 19
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;incstack = 0
  4289                           ;BUTTON_IsPressed@button stored from wreg
  4290  001A78  6FD3               	movwf	BUTTON_IsPressed@button& (0+255),b
  4291                           
  4292                           ;buttons.c: 57: switch(button)
  4293  001A7A  D003               	goto	l4687
  4294  001A7C                     l221:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4298  001A7C  A680               	btfss	3968,3,c	;volatile
  4299  001A7E  0C01               	retlw	1
  4300  001A80  0C00               	retlw	0
  4301  001A82                     l4687:
  4302  001A82  0100               	movlb	0	; () banked
  4303  001A84  51D3               	movf	BUTTON_IsPressed@button& (0+255),w,b
  4304                           
  4305                           ; Switch size 1, requested type "space"
  4306                           ; Number of cases is 2, Range of values is 0 to 1
  4307                           ; switch strategies available:
  4308                           ; Name         Instructions Cycles
  4309                           ; simple_byte            7     4 (average)
  4310                           ;	Chosen strategy is simple_byte
  4311  001A86  B4D8               	btfsc	status,2,c
  4312  001A88  0C00               	retlw	0
  4313  001A8A  0A01               	xorlw	1	; case 1
  4314  001A8C  A4D8               	btfss	status,2,c
  4315  001A8E  0C00               	retlw	0
  4316  001A90  D7F5               	goto	l221
  4317  001A92                     __end_of_BUTTON_IsPressed:
  4318                           	opt stack 0
  4319                           tblptru	equ	0xFF8
  4320                           tblptrh	equ	0xFF7
  4321                           tblptrl	equ	0xFF6
  4322                           tablat	equ	0xFF5
  4323                           prodh	equ	0xFF4
  4324                           prodl	equ	0xFF3
  4325                           intcon	equ	0xFF2
  4326                           postinc0	equ	0xFEE
  4327                           wreg	equ	0xFE8
  4328                           indf1	equ	0xFE7
  4329                           postdec1	equ	0xFE5
  4330                           fsr1h	equ	0xFE2
  4331                           fsr1l	equ	0xFE1
  4332                           indf2	equ	0xFDF
  4333                           postinc2	equ	0xFDE
  4334                           postdec2	equ	0xFDD
  4335                           plusw2	equ	0xFDB
  4336                           fsr2h	equ	0xFDA
  4337                           fsr2l	equ	0xFD9
  4338                           status	equ	0xFD8
  4339                           
  4340 ;; *************** function _SYS_InterruptHigh *****************
  4341 ;; Defined at:
  4342 ;;		line 86 in file "picLibs/system.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4356 ;;      Params:         0       0       0       0
  4357 ;;      Locals:         0       0       0       0
  4358 ;;      Temps:         10       0       0       0
  4359 ;;      Totals:        10       0       0       0
  4360 ;;Total ram usage:       10 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    9
  4363 ;; This function calls:
  4364 ;;		_USBDeviceTasks
  4365 ;; This function is called by:
  4366 ;;		Interrupt level 2
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	intcode
  4371  000008                     __pintcode:
  4372                           	opt stack 0
  4373  000008                     _SYS_InterruptHigh:
  4374                           	opt stack 17
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;incstack = 0
  4378  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4379  00000A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh
  4380  00000E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+1
  4381  000012  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+2
  4382  000016  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+3
  4383  00001A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+4
  4384  00001E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+5
  4385  000022  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+6
  4386  000026  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+7
  4387  00002A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+8
  4388  00002E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+9
  4389                           
  4390                           ;system.c: 89: USBDeviceTasks();
  4391  000032  EC66  F003         	call	_USBDeviceTasks	;wreg free
  4392  000036  C051  FFF5         	movff	??_SYS_InterruptHigh+9,tablat
  4393  00003A  C050  FFF8         	movff	??_SYS_InterruptHigh+8,tblptru
  4394  00003E  C04F  FFF7         	movff	??_SYS_InterruptHigh+7,tblptrh
  4395  000042  C04E  FFF6         	movff	??_SYS_InterruptHigh+6,tblptrl
  4396  000046  C04D  FFF4         	movff	??_SYS_InterruptHigh+5,prodh
  4397  00004A  C04C  FFF3         	movff	??_SYS_InterruptHigh+4,prodl
  4398  00004E  C04B  FFDA         	movff	??_SYS_InterruptHigh+3,fsr2h
  4399  000052  C04A  FFD9         	movff	??_SYS_InterruptHigh+2,fsr2l
  4400  000056  C049  FFE2         	movff	??_SYS_InterruptHigh+1,fsr1h
  4401  00005A  C048  FFE1         	movff	??_SYS_InterruptHigh,fsr1l
  4402  00005E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4403  000060  0011               	retfie		f
  4404  000062                     __end_of_SYS_InterruptHigh:
  4405                           	opt stack 0
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           intcon	equ	0xFF2
  4413                           postinc0	equ	0xFEE
  4414                           wreg	equ	0xFE8
  4415                           indf1	equ	0xFE7
  4416                           postdec1	equ	0xFE5
  4417                           fsr1h	equ	0xFE2
  4418                           fsr1l	equ	0xFE1
  4419                           indf2	equ	0xFDF
  4420                           postinc2	equ	0xFDE
  4421                           postdec2	equ	0xFDD
  4422                           plusw2	equ	0xFDB
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _USBDeviceTasks *****************
  4428 ;; Defined at:
  4429 ;;		line 477 in file "picLibs/usb_device.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  i               1   29[COMRAM] unsigned char 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4443 ;;      Params:         0       0       0       0
  4444 ;;      Locals:         1       0       0       0
  4445 ;;      Temps:          0       0       0       0
  4446 ;;      Totals:         1       0       0       0
  4447 ;;Total ram usage:        1 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    8
  4450 ;; This function calls:
  4451 ;;		_USBCtrlEPAllowStatusStage
  4452 ;;		_USBCtrlEPService
  4453 ;;		_USBIncrement1msInternalTimers
  4454 ;;		_USBStallHandler
  4455 ;;		_USBSuspend
  4456 ;;		_USBWakeFromSuspend
  4457 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4458 ;;		i2_USBDeviceInit
  4459 ;; This function is called by:
  4460 ;;		_SYS_InterruptHigh
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text23
  4465  0006CC                     __ptext23:
  4466                           	opt stack 0
  4467  0006CC                     _USBDeviceTasks:
  4468                           	opt stack 17
  4469                           
  4470                           ;usb_device.c: 479: uint8_t i;
  4471                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4472                           
  4473                           ;incstack = 0
  4474  0006CC  0100               	movlb	0	; () banked
  4475  0006CE  0581               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4476  0006D0  E107               	bnz	i2l4273
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;usb_device.c: 591: {
  4480                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4481  0006D2  BA64               	btfsc	3940,5,c	;volatile
  4482  0006D4  D005               	goto	i2l4273
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;usb_device.c: 602: {
  4486                           ;usb_device.c: 608: {UIR = 0;};
  4487  0006D6  6A62               	clrf	3938,c	;volatile
  4488                           
  4489                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4490  0006D8  8060               	bsf	3936,0,c	;volatile
  4491                           
  4492                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4493  0006DA  8860               	bsf	3936,4,c	;volatile
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4497  0006DC  0E02               	movlw	2
  4498  0006DE  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4499  0006E0                     i2l4273:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;usb_device.c: 617: }
  4503                           ;usb_device.c: 618: }
  4504                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4505  0006E0  B462               	btfsc	3938,2,c	;volatile
  4506                           
  4507                           ; BSR set to: 0
  4508  0006E2  A460               	btfss	3936,2,c	;volatile
  4509  0006E4  D003               	goto	i2l4281
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;usb_device.c: 635: {
  4513                           ;usb_device.c: 636: (UIR &= 0xFB);
  4514  0006E6  9462               	bcf	3938,2,c	;volatile
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;usb_device.c: 640: USBWakeFromSuspend();
  4518  0006E8  ECE3  F00C         	call	_USBWakeFromSuspend	;wreg free
  4519  0006EC                     i2l4281:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;usb_device.c: 642: }
  4523                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4524  0006EC  A264               	btfss	3940,1,c	;volatile
  4525  0006EE  D002               	goto	i2l469
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;usb_device.c: 648: {
  4529                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  4530  0006F0  94A1               	bcf	4001,2,c	;volatile
  4531                           
  4532                           ;usb_device.c: 650: return;
  4533  0006F2  0012               	return	
  4534  0006F4                     i2l469:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;usb_device.c: 651: }
  4538                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4539  0006F4  B062               	btfsc	3938,0,c	;volatile
  4540                           
  4541                           ; BSR set to: 0
  4542  0006F6  A060               	btfss	3936,0,c	;volatile
  4543  0006F8  D006               	goto	i2l4295
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;usb_device.c: 664: {
  4547                           ;usb_device.c: 665: USBDeviceInit();
  4548  0006FA  EC63  F004         	call	i2_USBDeviceInit	;wreg free
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4552  0006FE  84A0               	bsf	4000,2,c	;volatile
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4556  000700  0E04               	movlw	4
  4557  000702  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;usb_device.c: 681: (UIR &= 0xFE);
  4561  000704  9062               	bcf	3938,0,c	;volatile
  4562  000706                     i2l4295:
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;usb_device.c: 682: }
  4566                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4567  000706  B862               	btfsc	3938,4,c	;volatile
  4568                           
  4569                           ; BSR set to: 0
  4570  000708  A860               	btfss	3936,4,c	;volatile
  4571  00070A  D002               	goto	i2l4301
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;usb_device.c: 688: {
  4575                           ;usb_device.c: 694: USBSuspend();
  4576  00070C  ECD2  F00C         	call	_USBSuspend	;wreg free
  4577  000710                     i2l4301:
  4578                           
  4579                           ;usb_device.c: 696: }
  4580                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4581  000710  AC62               	btfss	3938,6,c	;volatile
  4582  000712  D013               	goto	i2l4319
  4583                           
  4584                           ;usb_device.c: 709: {
  4585                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4586  000714  AC60               	btfss	3936,6,c	;volatile
  4587  000716  D007               	goto	i2l4307
  4588                           
  4589                           ;usb_device.c: 712: {
  4590                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4591  000718  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4592  00071A  0E73               	movlw	115
  4593  00071C  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4594  00071E  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4595  000720  D850               	call	PL88	;call to abstracted procedure
  4596  000722  ECCB  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4597  000726                     i2l4307:
  4598                           
  4599                           ;usb_device.c: 714: }
  4600                           ;usb_device.c: 715: (UIR &= 0xBF);
  4601  000726  9C62               	bcf	3938,6,c	;volatile
  4602                           
  4603                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4604  000728  EC2E  F00D         	call	_USBIncrement1msInternalTimers	;wreg free
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4608  00072C  5021               	movf	_USBStatusStageTimeoutCounter,w,c
  4609  00072E  E001               	bz	i2l4315
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;usb_device.c: 736: {
  4613                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4614  000730  0621               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  4615  000732                     i2l4315:
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;usb_device.c: 738: }
  4619                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4620  000732  5021               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4621  000734  E102               	bnz	i2l4319
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;usb_device.c: 745: {
  4625                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4626  000736  ECB0  F008         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4627  00073A                     i2l4319:
  4628                           
  4629                           ;usb_device.c: 747: }
  4630                           ;usb_device.c: 749: }
  4631                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4632  00073A  BA62               	btfsc	3938,5,c	;volatile
  4633  00073C  AA60               	btfss	3936,5,c	;volatile
  4634  00073E  D002               	goto	i2l4325
  4635                           
  4636                           ;usb_device.c: 752: {
  4637                           ;usb_device.c: 753: USBStallHandler();
  4638  000740  EC1C  F00C         	call	_USBStallHandler	;wreg free
  4639  000744                     i2l4325:
  4640                           
  4641                           ;usb_device.c: 754: }
  4642                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4643  000744  B262               	btfsc	3938,1,c	;volatile
  4644  000746  A260               	btfss	3936,1,c	;volatile
  4645  000748  D009               	goto	i2l4333
  4646                           
  4647                           ;usb_device.c: 757: {
  4648                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4649  00074A  0E7F               	movlw	127
  4650  00074C  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4651  00074E  6836               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4652  000750  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4653  000752  D837               	call	PL88	;call to abstracted procedure
  4654  000754  ECCB  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4655                           
  4656                           ;usb_device.c: 759: {UEIR = 0;};
  4657  000758  010F               	movlb	15	; () banked
  4658  00075A  6B5F               	clrf	95,b	;volatile
  4659  00075C                     i2l4333:
  4660                           
  4661                           ;usb_device.c: 767: }
  4662                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4663  00075C  0E04               	movlw	4
  4664  00075E  0100               	movlb	0	; () banked
  4665  000760  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4666  000762  D002               	goto	i2l479
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;usb_device.c: 775: {
  4670                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  4671  000764  94A1               	bcf	4001,2,c	;volatile
  4672                           
  4673                           ;usb_device.c: 777: return;
  4674  000766  0C04               	retlw	4
  4675  000768                     i2l479:
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;usb_device.c: 778: }
  4679                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4680  000768  A660               	btfss	3936,3,c	;volatile
  4681  00076A  D029               	goto	i2l480
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;usb_device.c: 784: {
  4685                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4686  00076C  6A47               	clrf	USBDeviceTasks@i,c
  4687  00076E                     i2l481:
  4688                           
  4689                           ;usb_device.c: 786: {
  4690                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4691  00076E  A662               	btfss	3938,3,c	;volatile
  4692  000770  D026               	goto	i2l480
  4693                           
  4694                           ;usb_device.c: 788: {
  4695                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4696  000772  CF63 F028          	movff	3939,_USTATcopy	;volatile
  4697                           
  4698                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4699  000776  3028               	rrcf	_USTATcopy,w,c	;volatile
  4700  000778  32E8               	rrcf	wreg,f,c
  4701  00077A  32E8               	rrcf	wreg,f,c
  4702  00077C  0B0F               	andlw	15
  4703  00077E  6E23               	movwf	_endpoint_number,c	;volatile
  4704                           
  4705                           ;usb_device.c: 793: (UIR &= 0xF7);
  4706  000780  9662               	bcf	3938,3,c	;volatile
  4707                           
  4708                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4709  000782  B428               	btfsc	_USTATcopy,2,c	;volatile
  4710  000784  D003               	goto	i2l4353
  4711                           
  4712                           ;usb_device.c: 799: {
  4713                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4714  000786  5023               	movf	_endpoint_number,w,c
  4715  000788  0F70               	addlw	low _ep_data_out
  4716  00078A  D002               	goto	L4
  4717  00078C                     i2l4353:
  4718                           
  4719                           ;usb_device.c: 802: else
  4720                           ;usb_device.c: 803: {
  4721                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4722  00078C  5023               	movf	_endpoint_number,w,c
  4723  00078E  0F73               	addlw	low _ep_data_in
  4724  000790                     L4:
  4725  000790  6ED9               	movwf	fsr2l,c
  4726  000792  6ADA               	clrf	fsr2h,c
  4727  000794  0100               	movlb	0	; () banked
  4728  000796  70DF               	btg	indf2,0,c
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;usb_device.c: 805: }
  4732                           ;usb_device.c: 810: if(endpoint_number == 0)
  4733  000798  5023               	movf	_endpoint_number,w,c	;volatile
  4734  00079A  E103               	bnz	i2l4359
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;usb_device.c: 811: {
  4738                           ;usb_device.c: 812: USBCtrlEPService();
  4739  00079C  EC24  F009         	call	_USBCtrlEPService	;wreg free
  4740                           
  4741                           ;usb_device.c: 813: }
  4742  0007A0  D00A               	goto	i2l4361
  4743  0007A2                     i2l4359:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;usb_device.c: 814: else
  4747                           ;usb_device.c: 815: {
  4748                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4749  0007A2  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4750  0007A4  0E72               	movlw	114
  4751  0007A6  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4752  0007A8  0E28               	movlw	low _USTATcopy
  4753  0007AA  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4754  0007AC  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4755  0007AE  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4756  0007B0  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4757  0007B2  ECCB  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4758  0007B6                     i2l4361:
  4759  0007B6  2A47               	incf	USBDeviceTasks@i,f,c
  4760  0007B8  0E03               	movlw	3
  4761  0007BA  6447               	cpfsgt	USBDeviceTasks@i,c
  4762  0007BC  D7D8               	goto	i2l481
  4763  0007BE                     i2l480:
  4764                           
  4765                           ;usb_device.c: 822: }
  4766                           ;usb_device.c: 823: }
  4767                           ;usb_device.c: 824: }
  4768                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  4769  0007BE  94A1               	bcf	4001,2,c	;volatile
  4770  0007C0  0012               	return		;funcret
  4771  0007C2                     __end_of_USBDeviceTasks:
  4772                           	opt stack 0
  4773  0007C2                     PL88:
  4774                           	opt stack 17
  4775  0007C2  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4776  0007C4  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4777  0007C6  0E01               	movlw	1
  4778  0007C8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4779  0007CA  0C01               	retlw	1
  4780  0007CC                     __end_ofPL88:
  4781                           	opt stack 0
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           intcon	equ	0xFF2
  4789                           postinc0	equ	0xFEE
  4790                           wreg	equ	0xFE8
  4791                           indf1	equ	0xFE7
  4792                           postdec1	equ	0xFE5
  4793                           fsr1h	equ	0xFE2
  4794                           fsr1l	equ	0xFE1
  4795                           indf2	equ	0xFDF
  4796                           postinc2	equ	0xFDE
  4797                           postdec2	equ	0xFDD
  4798                           plusw2	equ	0xFDB
  4799                           fsr2h	equ	0xFDA
  4800                           fsr2l	equ	0xFD9
  4801                           status	equ	0xFD8
  4802                           
  4803 ;; *************** function i2_USBDeviceInit *****************
  4804 ;; Defined at:
  4805 ;;		line 277 in file "picLibs/usb_device.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 3F/0
  4816 ;;		On exit  : 3F/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4819 ;;      Params:         0       0       0       0
  4820 ;;      Locals:         1       0       0       0
  4821 ;;      Temps:          0       0       0       0
  4822 ;;      Totals:         1       0       0       0
  4823 ;;Total ram usage:        1 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    1
  4826 ;; This function calls:
  4827 ;;		i2_memset
  4828 ;; This function is called by:
  4829 ;;		_USBDeviceTasks
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text24
  4834  0008C6                     __ptext24:
  4835                           	opt stack 0
  4836  0008C6                     i2_USBDeviceInit:
  4837                           	opt stack 0
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;usb_device.c: 279: uint8_t i;
  4841                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4842                           
  4843                           ;incstack = 0
  4844                           
  4845                           ;usb_device.c: 285: ;
  4846                           ;usb_device.c: 288: {UEIR = 0;};
  4847                           
  4848                           ;usb_device.c: 291: {UIR = 0;};
  4849                           
  4850                           ;usb_device.c: 294: UEP0 = 0;
  4851  0008C6  D85C               	call	PL76	;call to abstracted procedure
  4852                           
  4853                           ; BSR set to: 15
  4854                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  4855  0008C8  EC47  F007         	call	PL50	;call to abstracted procedure
  4856  0008CC  ECBD  F00C         	call	i2_memset	;wreg free
  4857                           
  4858                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4859                           
  4860                           ; BSR set to: 15
  4861  0008D0  EC14  F00C         	call	PL30	;call to abstracted procedure
  4862                           
  4863                           ; BSR set to: 15
  4864                           ;usb_device.c: 301: ;
  4865                           ;usb_device.c: 304: ;
  4866                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4867  0008D4  6A32               	clrf	i2USBDeviceInit@i,c
  4868  0008D6                     i2l4143:
  4869                           
  4870                           ;usb_device.c: 308: {
  4871                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4872  0008D6  5032               	movf	i2USBDeviceInit@i,w,c
  4873  0008D8  D847               	call	PL34	;call to abstracted procedure
  4874  0008DA  2A32               	incf	i2USBDeviceInit@i,f,c
  4875  0008DC  0E0B               	movlw	11
  4876  0008DE  6432               	cpfsgt	i2USBDeviceInit@i,c
  4877  0008E0  D7FA               	goto	i2l4143
  4878                           
  4879                           ;usb_device.c: 310: }
  4880                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4881                           
  4882                           ;usb_device.c: 316: UADDR = 0x00;
  4883                           
  4884                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4885                           
  4886                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4887                           
  4888                           ;usb_device.c: 326: {
  4889                           ;usb_device.c: 327: (UIR &= 0xF7);
  4890                           
  4891                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4892                           
  4893                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4894                           
  4895                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4896                           
  4897                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4898                           
  4899                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4900                           
  4901                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4902                           
  4903                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4904                           
  4905                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4909  0008E2  D82E               	call	PL20	;call to abstracted procedure
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4913  0008E4  6A32               	clrf	i2USBDeviceInit@i,c
  4914  0008E6                     i2l4173:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;usb_device.c: 346: {
  4918                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4919  0008E6  5032               	movf	i2USBDeviceInit@i,w,c
  4920  0008E8  EC80  F005         	call	PL26	;call to abstracted procedure
  4921  0008EC  6ADE               	clrf	postinc2,c
  4922  0008EE  6ADD               	clrf	postdec2,c
  4923                           
  4924                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4925  0008F0  5032               	movf	i2USBDeviceInit@i,w,c
  4926  0008F2  EC7A  F005         	call	PL24	;call to abstracted procedure
  4927  0008F6  6ADE               	clrf	postinc2,c
  4928  0008F8  6ADD               	clrf	postdec2,c
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4932  0008FA  5032               	movf	i2USBDeviceInit@i,w,c
  4933  0008FC  D84C               	call	PL90	;call to abstracted procedure
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4937  0008FE  5032               	movf	i2USBDeviceInit@i,w,c
  4938  000900  D845               	call	PL82	;call to abstracted procedure
  4939                           
  4940                           ; BSR set to: 0
  4941  000902  2A32               	incf	i2USBDeviceInit@i,f,c
  4942                           
  4943                           ; BSR set to: 0
  4944  000904  0E02               	movlw	2
  4945  000906  6432               	cpfsgt	i2USBDeviceInit@i,c
  4946  000908  D7EE               	goto	i2l4173
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;usb_device.c: 351: }
  4950                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4951  00090A  0E08               	movlw	8
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4955                           
  4956                           ; BSR set to: 15
  4957                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  4958                           
  4959                           ; BSR set to: 2
  4960                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4961                           
  4962                           ; BSR set to: 2
  4963                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4964                           
  4965                           ; BSR set to: 2
  4966                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4967                           
  4968                           ; BSR set to: 2
  4969                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4970                           
  4971                           ; BSR set to: 2
  4972                           ;usb_device.c: 366: USB1msTickCount = 0;
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4979                           
  4980                           ; BSR set to: 0
  4981  00090C  D000               	goto	PL14	;call to abstracted procedure
  4982  00090E                     __end_ofi2_USBDeviceInit:
  4983                           	opt stack 0
  4984  00090E                     PL14:
  4985                           	opt stack 19
  4986  00090E  6E0F               	movwf	_pBDTEntryIn,c
  4987  000910  0E02               	movlw	2
  4988  000912  6E10               	movwf	_pBDTEntryIn+1,c
  4989  000914  0E16               	movlw	22
  4990  000916  010F               	movlb	15	; () banked
  4991  000918  6F53               	movwf	83,b	;volatile
  4992  00091A  0E02               	movlw	2
  4993  00091C  0102               	movlb	2	; () banked
  4994  00091E  6F03               	movwf	3,b	;volatile
  4995  000920  0E30               	movlw	48
  4996  000922  6F02               	movwf	2,b	;volatile
  4997  000924  0E08               	movlw	8
  4998  000926  6F01               	movwf	1,b	;volatile
  4999  000928  0E04               	movlw	4
  5000  00092A  6F00               	movwf	0,b	;volatile
  5001  00092C  8F00               	bsf	0,7,b	;volatile
  5002  00092E  6A29               	clrf	_USBActiveConfiguration,c	;volatile
  5003  000930  0100               	movlb	0	; () banked
  5004  000932  6B66               	clrf	_USB1msTickCount& (0+255),b	;volatile
  5005  000934  6B67               	clrf	(_USB1msTickCount+1)& (0+255),b	;volatile
  5006  000936  6B68               	clrf	(_USB1msTickCount+2)& (0+255),b	;volatile
  5007  000938  6B69               	clrf	(_USB1msTickCount+3)& (0+255),b	;volatile
  5008  00093A  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5009  00093C  6B81               	clrf	_USBDeviceState& (0+255),b	;volatile
  5010  00093E  0012               	return		;funcret
  5011  000940                     __end_ofPL14:
  5012                           	opt stack 0
  5013  000940                     PL20:
  5014                           	opt stack 19
  5015  000940  8C64               	bsf	3940,6,c	;volatile
  5016  000942  010F               	movlb	15	; () banked
  5017  000944  6B5C               	clrf	92,b	;volatile
  5018  000946  9864               	bcf	3940,4,c	;volatile
  5019  000948  9C64               	bcf	3940,6,c	;volatile
  5020  00094A                     l4937:
  5021  00094A  9662               	bcf	3938,3,c	;volatile
  5022  00094C  6A0C               	clrf	_inPipes+3,c	;volatile
  5023  00094E  6A04               	clrf	_outPipes+3,c	;volatile
  5024  000950  6A05               	clrf	_outPipes+4,c	;volatile
  5025  000952  6A06               	clrf	_outPipes+5,c	;volatile
  5026  000954  B662               	btfsc	3938,3,c	;volatile
  5027  000956  D7F9               	goto	l4937
  5028  000958  0E01               	movlw	1
  5029  00095A  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5030  00095C  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5031  00095E  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5032  000960  0100               	movlb	0	; () banked
  5033  000962  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5034  000964  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5035  000966  0012               	return	
  5036  000968                     __end_ofPL20:
  5037                           	opt stack 0
  5038  000968                     PL34:
  5039                           	opt stack 19
  5040  000968  0D04               	mullw	4
  5041  00096A  0E00               	movlw	0
  5042  00096C  24F3               	addwf	prodl,w,c
  5043  00096E  6ED9               	movwf	fsr2l,c
  5044  000970  0E02               	movlw	2
  5045  000972  20F4               	addwfc	prodh,w,c
  5046  000974  6EDA               	movwf	fsr2h,c
  5047  000976  6ADE               	clrf	postinc2,c
  5048  000978  6ADE               	clrf	postinc2,c
  5049  00097A  6ADE               	clrf	postinc2,c
  5050  00097C  6ADD               	clrf	postdec2,c
  5051  00097E  0012               	return	
  5052  000980                     __end_ofPL34:
  5053                           	opt stack 0
  5054  000980                     PL76:
  5055                           	opt stack 19
  5056  000980  94A0               	bcf	4000,2,c	;volatile
  5057  000982  010F               	movlb	15	; () banked
  5058  000984  6B5F               	clrf	95,b	;volatile
  5059  000986  6A62               	clrf	3938,c	;volatile
  5060  000988  6B53               	clrf	83,b	;volatile
  5061  00098A  0012               	return	
  5062  00098C                     __end_ofPL76:
  5063                           	opt stack 0
  5064  00098C                     PL82:
  5065                           	opt stack 19
  5066  00098C  0F70               	addlw	low _ep_data_out
  5067  00098E  6ED9               	movwf	fsr2l,c
  5068  000990  6ADA               	clrf	fsr2h,c
  5069  000992  6ADF               	clrf	indf2,c
  5070  000994  0012               	return	
  5071  000996                     __end_ofPL82:
  5072                           	opt stack 0
  5073  000996                     PL90:
  5074                           	opt stack 19
  5075  000996  0F73               	addlw	low _ep_data_in
  5076  000998  6ED9               	movwf	fsr2l,c
  5077  00099A  6ADA               	clrf	fsr2h,c
  5078  00099C  6ADF               	clrf	indf2,c
  5079  00099E  0012               	return	
  5080  0009A0                     __end_ofPL90:
  5081                           	opt stack 0
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           prodh	equ	0xFF4
  5087                           prodl	equ	0xFF3
  5088                           intcon	equ	0xFF2
  5089                           postinc0	equ	0xFEE
  5090                           wreg	equ	0xFE8
  5091                           indf1	equ	0xFE7
  5092                           postdec1	equ	0xFE5
  5093                           fsr1h	equ	0xFE2
  5094                           fsr1l	equ	0xFE1
  5095                           indf2	equ	0xFDF
  5096                           postinc2	equ	0xFDE
  5097                           postdec2	equ	0xFDD
  5098                           plusw2	equ	0xFDB
  5099                           fsr2h	equ	0xFDA
  5100                           fsr2l	equ	0xFD9
  5101                           status	equ	0xFD8
  5102                           
  5103 ;; *************** function _USBWakeFromSuspend *****************
  5104 ;; Defined at:
  5105 ;;		line 2303 in file "picLibs/usb_device.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;		None
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 3F/0
  5116 ;;		On exit  : 3F/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5119 ;;      Params:         0       0       0       0
  5120 ;;      Locals:         0       0       0       0
  5121 ;;      Temps:          0       0       0       0
  5122 ;;      Totals:         0       0       0       0
  5123 ;;Total ram usage:        0 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    4
  5126 ;; This function calls:
  5127 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5128 ;; This function is called by:
  5129 ;;		_USBDeviceTasks
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text25
  5134  0019C6                     __ptext25:
  5135                           	opt stack 0
  5136  0019C6                     _USBWakeFromSuspend:
  5137                           	opt stack 20
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;incstack = 0
  5144  0019C6  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5148  0019C8  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5149  0019CA  0E74               	movlw	116
  5150  0019CC  ECDD  F00C         	call	PL40	;call to abstracted procedure
  5151  0019D0  ECCB  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5152                           
  5153                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5154  0019D4  9264               	bcf	3940,1,c	;volatile
  5155                           
  5156                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5157  0019D6  9460               	bcf	3936,2,c	;volatile
  5158                           
  5159                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5160  0019D8  D001               	goto	i2l4069
  5161  0019DA                     i2l4067:
  5162                           
  5163                           ;usb_device.c: 2343: {
  5164                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5165  0019DA  9462               	bcf	3938,2,c	;volatile
  5166  0019DC                     i2l4069:
  5167  0019DC  B462               	btfsc	3938,2,c	;volatile
  5168  0019DE  D7FD               	goto	i2l4067
  5169                           
  5170                           ;usb_device.c: 2345: }
  5171                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5172  0019E0  0100               	movlb	0	; () banked
  5173  0019E2  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5174                           
  5175                           ; BSR set to: 0
  5176  0019E4  0012               	return		;funcret
  5177  0019E6                     __end_of_USBWakeFromSuspend:
  5178                           	opt stack 0
  5179                           tblptru	equ	0xFF8
  5180                           tblptrh	equ	0xFF7
  5181                           tblptrl	equ	0xFF6
  5182                           tablat	equ	0xFF5
  5183                           prodh	equ	0xFF4
  5184                           prodl	equ	0xFF3
  5185                           intcon	equ	0xFF2
  5186                           postinc0	equ	0xFEE
  5187                           wreg	equ	0xFE8
  5188                           indf1	equ	0xFE7
  5189                           postdec1	equ	0xFE5
  5190                           fsr1h	equ	0xFE2
  5191                           fsr1l	equ	0xFE1
  5192                           indf2	equ	0xFDF
  5193                           postinc2	equ	0xFDE
  5194                           postdec2	equ	0xFDD
  5195                           plusw2	equ	0xFDB
  5196                           fsr2h	equ	0xFDA
  5197                           fsr2l	equ	0xFD9
  5198                           status	equ	0xFD8
  5199                           
  5200 ;; *************** function _USBSuspend *****************
  5201 ;; Defined at:
  5202 ;;		line 2245 in file "picLibs/usb_device.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;		None
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5211 ;; Tracked objects:
  5212 ;;		On entry : 3F/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5216 ;;      Params:         0       0       0       0
  5217 ;;      Locals:         0       0       0       0
  5218 ;;      Temps:          0       0       0       0
  5219 ;;      Totals:         0       0       0       0
  5220 ;;Total ram usage:        0 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    4
  5223 ;; This function calls:
  5224 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5225 ;; This function is called by:
  5226 ;;		_USBDeviceTasks
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text26
  5231  0019A4                     __ptext26:
  5232                           	opt stack 0
  5233  0019A4                     _USBSuspend:
  5234                           	opt stack 20
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;incstack = 0
  5241  0019A4  8460               	bsf	3936,2,c	;volatile
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5245  0019A6  9862               	bcf	3938,4,c	;volatile
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5249  0019A8  8264               	bsf	3940,1,c	;volatile
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5253  0019AA  0E01               	movlw	1
  5254  0019AC  6E24               	movwf	_USBBusIsSuspended,c	;volatile
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5258  0019AE  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5262  0019B0  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5263  0019B2  0E75               	movlw	117
  5264  0019B4  D802               	call	PL40	;call to abstracted procedure
  5265  0019B6  EFCB  F009         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5266  0019BA                     __end_of_USBSuspend:
  5267                           	opt stack 0
  5268  0019BA                     PL40:
  5269                           	opt stack 20
  5270  0019BA  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5271  0019BC  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5272  0019BE  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5273  0019C0  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5274  0019C2  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5275  0019C4  0012               	return	
  5276  0019C6                     __end_ofPL40:
  5277                           	opt stack 0
  5278                           tblptru	equ	0xFF8
  5279                           tblptrh	equ	0xFF7
  5280                           tblptrl	equ	0xFF6
  5281                           tablat	equ	0xFF5
  5282                           prodh	equ	0xFF4
  5283                           prodl	equ	0xFF3
  5284                           intcon	equ	0xFF2
  5285                           postinc0	equ	0xFEE
  5286                           wreg	equ	0xFE8
  5287                           indf1	equ	0xFE7
  5288                           postdec1	equ	0xFE5
  5289                           fsr1h	equ	0xFE2
  5290                           fsr1l	equ	0xFE1
  5291                           indf2	equ	0xFDF
  5292                           postinc2	equ	0xFDE
  5293                           postdec2	equ	0xFDD
  5294                           plusw2	equ	0xFDB
  5295                           fsr2h	equ	0xFDA
  5296                           fsr2l	equ	0xFD9
  5297                           status	equ	0xFD8
  5298                           
  5299 ;; *************** function _USBStallHandler *****************
  5300 ;; Defined at:
  5301 ;;		line 2202 in file "picLibs/usb_device.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 3F/F
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5315 ;;      Params:         0       0       0       0
  5316 ;;      Locals:         0       0       0       0
  5317 ;;      Temps:          1       0       0       0
  5318 ;;      Totals:         1       0       0       0
  5319 ;;Total ram usage:        1 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_USBDeviceTasks
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text27
  5329  001838                     __ptext27:
  5330                           	opt stack 0
  5331  001838                     _USBStallHandler:
  5332                           	opt stack 24
  5333                           
  5334                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5335                           
  5336                           ;incstack = 0
  5337  001838  010F               	movlb	15	; () banked
  5338  00183A  A153               	btfss	83,0,b	;volatile
  5339  00183C  D010               	goto	i2l619
  5340                           
  5341                           ; BSR set to: 15
  5342                           ;usb_device.c: 2215: {
  5343                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5344  00183E  D811               	call	PL28	;call to abstracted procedure
  5345  001840  0E80               	movlw	128
  5346  001842  18DE               	xorwf	postinc2,w,c
  5347  001844  E10B               	bnz	i2l4103
  5348                           
  5349                           ; BSR set to: 15
  5350  001846  EC21  F008         	call	PL16	;call to abstracted procedure
  5351  00184A  0E84               	movlw	132
  5352  00184C  18DE               	xorwf	postinc2,w,c
  5353  00184E  E106               	bnz	i2l4103
  5354                           
  5355                           ; BSR set to: 15
  5356                           ;usb_device.c: 2218: {
  5357                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5358  001850  D808               	call	PL28	;call to abstracted procedure
  5359  001852  0E0C               	movlw	12
  5360  001854  6EDF               	movwf	indf2,c
  5361                           
  5362                           ; BSR set to: 15
  5363                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5364  001856  D805               	call	PL28	;call to abstracted procedure
  5365  001858  0E00               	movlw	0
  5366  00185A  8EDB               	bsf	plusw2,7,c
  5367  00185C                     i2l4103:
  5368                           
  5369                           ; BSR set to: 15
  5370                           ;usb_device.c: 2222: }
  5371                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5372  00185C  9153               	bcf	83,0,b	;volatile
  5373  00185E                     i2l619:
  5374                           
  5375                           ; BSR set to: 15
  5376                           ;usb_device.c: 2224: }
  5377                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5378  00185E  9A62               	bcf	3938,5,c	;volatile
  5379                           
  5380                           ; BSR set to: 15
  5381  001860  0012               	return		;funcret
  5382  001862                     __end_of_USBStallHandler:
  5383                           	opt stack 0
  5384  001862                     PL28:
  5385                           	opt stack 24
  5386  001862  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5387  001866  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5388  00186A  0012               	return	
  5389  00186C                     __end_ofPL28:
  5390                           	opt stack 0
  5391                           tblptru	equ	0xFF8
  5392                           tblptrh	equ	0xFF7
  5393                           tblptrl	equ	0xFF6
  5394                           tablat	equ	0xFF5
  5395                           prodh	equ	0xFF4
  5396                           prodl	equ	0xFF3
  5397                           intcon	equ	0xFF2
  5398                           postinc0	equ	0xFEE
  5399                           wreg	equ	0xFE8
  5400                           indf1	equ	0xFE7
  5401                           postdec1	equ	0xFE5
  5402                           fsr1h	equ	0xFE2
  5403                           fsr1l	equ	0xFE1
  5404                           indf2	equ	0xFDF
  5405                           postinc2	equ	0xFDE
  5406                           postdec2	equ	0xFDD
  5407                           plusw2	equ	0xFDB
  5408                           fsr2h	equ	0xFDA
  5409                           fsr2l	equ	0xFD9
  5410                           status	equ	0xFD8
  5411                           
  5412 ;; *************** function _USBIncrement1msInternalTimers *****************
  5413 ;; Defined at:
  5414 ;;		line 3025 in file "picLibs/usb_device.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 3F/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5428 ;;      Params:         0       0       0       0
  5429 ;;      Locals:         0       0       0       0
  5430 ;;      Temps:          0       0       0       0
  5431 ;;      Totals:         0       0       0       0
  5432 ;;Total ram usage:        0 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_USBDeviceTasks
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text28
  5442  001A5C                     __ptext28:
  5443                           	opt stack 0
  5444  001A5C                     _USBIncrement1msInternalTimers:
  5445                           	opt stack 24
  5446                           
  5447                           ;usb_device.c: 3033: USB1msTickCount++;
  5448                           
  5449                           ; BSR set to: 15
  5450                           ;incstack = 0
  5451  001A5C  0100               	movlb	0	; () banked
  5452  001A5E  2B66               	incf	_USB1msTickCount& (0+255),f,b	;volatile
  5453  001A60  0E00               	movlw	0
  5454  001A62  2367               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  5455  001A64  2368               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  5456  001A66  2369               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5460  001A68  5024               	movf	_USBBusIsSuspended,w,c	;volatile
  5461  001A6A  A4D8               	btfss	status,2,c
  5462  001A6C  0012               	return	
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;usb_device.c: 3035: {
  5466                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5467  001A6E  2B7D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5471  001A70  517D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  5472  001A72  B4D8               	btfsc	status,2,c
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;usb_device.c: 3039: {
  5476                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5477  001A74  697D               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5478                           
  5479                           ; BSR set to: 0
  5480  001A76  0012               	return		;funcret
  5481  001A78                     __end_of_USBIncrement1msInternalTimers:
  5482                           	opt stack 0
  5483                           tblptru	equ	0xFF8
  5484                           tblptrh	equ	0xFF7
  5485                           tblptrl	equ	0xFF6
  5486                           tablat	equ	0xFF5
  5487                           prodh	equ	0xFF4
  5488                           prodl	equ	0xFF3
  5489                           intcon	equ	0xFF2
  5490                           postinc0	equ	0xFEE
  5491                           wreg	equ	0xFE8
  5492                           indf1	equ	0xFE7
  5493                           postdec1	equ	0xFE5
  5494                           fsr1h	equ	0xFE2
  5495                           fsr1l	equ	0xFE1
  5496                           indf2	equ	0xFDF
  5497                           postinc2	equ	0xFDE
  5498                           postdec2	equ	0xFDD
  5499                           plusw2	equ	0xFDB
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _USBCtrlEPService *****************
  5505 ;; Defined at:
  5506 ;;		line 2372 in file "picLibs/usb_device.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;		None
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 3F/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5520 ;;      Params:         0       0       0       0
  5521 ;;      Locals:         0       0       0       0
  5522 ;;      Temps:          1       0       0       0
  5523 ;;      Totals:         1       0       0       0
  5524 ;;Total ram usage:        1 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    7
  5527 ;; This function calls:
  5528 ;;		_USBCtrlTrfInHandler
  5529 ;;		_USBCtrlTrfOutHandler
  5530 ;;		_USBCtrlTrfSetupHandler
  5531 ;;		_memcpy
  5532 ;; This function is called by:
  5533 ;;		_USBDeviceTasks
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text29
  5538  001248                     __ptext29:
  5539                           	opt stack 0
  5540  001248                     _USBCtrlEPService:
  5541                           	opt stack 17
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;incstack = 0
  5548  001248  0E2D               	movlw	45
  5549  00124A  6E21               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5553  00124C  C028  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5554  001250  0EFD               	movlw	253
  5555  001252  1646               	andwf	??_USBCtrlEPService,f,c
  5556  001254  E12A               	bnz	i2l4123
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;usb_device.c: 2383: {
  5560                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5561  001256  90D8               	bcf	status,0,c
  5562  001258  3028               	rrcf	_USTATcopy,w,c	;volatile
  5563  00125A  0B3F               	andlw	63
  5564  00125C  0D04               	mullw	4
  5565  00125E  0E00               	movlw	0
  5566  001260  24F3               	addwf	prodl,w,c
  5567  001262  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  5568  001264  0E02               	movlw	2
  5569  001266  20F4               	addwfc	prodh,w,c
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5573  001268  EC51  F007         	call	PL96	;call to abstracted procedure
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5577  00126C  0E04               	movlw	4
  5578  00126E  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
  5579  001270  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5583  001272  EC31  F00C         	call	PL28	;call to abstracted procedure
  5584  001276  30DF               	rrcf	indf2,w,c
  5585  001278  32E8               	rrcf	wreg,f,c
  5586  00127A  0B0F               	andlw	15
  5587  00127C  0A0D               	xorlw	13
  5588  00127E  E002 EFF3  F00C    	bnz	_USBCtrlTrfOutHandler
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;usb_device.c: 2400: {
  5592                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  5593  001284  0E30               	movlw	48
  5594  001286  6E2A               	movwf	memcpy@d1,c
  5595  001288  0E02               	movlw	2
  5596  00128A  6E2B               	movwf	memcpy@d1+1,c
  5597  00128C  EE20 F002          	lfsr	2,2
  5598  001290  ECE2  F008         	call	PL62	;call to abstracted procedure
  5599  001294  CFDE F02C          	movff	postinc2,memcpy@s1
  5600  001298  CFDD F02D          	movff	postdec2,memcpy@s1+1
  5601  00129C  6A2F               	clrf	memcpy@n+1,c
  5602  00129E  0E08               	movlw	8
  5603  0012A0  6E2E               	movwf	memcpy@n,c
  5604  0012A2  ECA8  F00B         	call	_memcpy	;wreg free
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5608  0012A6  EF3A  F00B         	goto	_USBCtrlTrfSetupHandler	;wreg free
  5609  0012AA                     i2l4123:
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5613  0012AA  5028               	movf	_USTATcopy,w,c	;volatile
  5614  0012AC  0BFD               	andlw	253
  5615  0012AE  0A04               	xorlw	4
  5616  0012B0  B4D8               	btfsc	status,2,c
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;usb_device.c: 2417: {
  5620                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5621  0012B2  ECEB  F007         	call	_USBCtrlTrfInHandler	;wreg free
  5622  0012B6  0012               	return		;funcret
  5623  0012B8                     __end_of_USBCtrlEPService:
  5624                           	opt stack 0
  5625                           tblptru	equ	0xFF8
  5626                           tblptrh	equ	0xFF7
  5627                           tblptrl	equ	0xFF6
  5628                           tablat	equ	0xFF5
  5629                           prodh	equ	0xFF4
  5630                           prodl	equ	0xFF3
  5631                           intcon	equ	0xFF2
  5632                           postinc0	equ	0xFEE
  5633                           wreg	equ	0xFE8
  5634                           indf1	equ	0xFE7
  5635                           postdec1	equ	0xFE5
  5636                           fsr1h	equ	0xFE2
  5637                           fsr1l	equ	0xFE1
  5638                           indf2	equ	0xFDF
  5639                           postinc2	equ	0xFDE
  5640                           postdec2	equ	0xFDD
  5641                           plusw2	equ	0xFDB
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8
  5645                           
  5646 ;; *************** function _memcpy *****************
  5647 ;; Defined at:
  5648 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  d1              2    0[COMRAM] PTR void 
  5651 ;;		 -> SetupPkt(8), 
  5652 ;;  s1              2    2[COMRAM] PTR const void 
  5653 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5654 ;;  n               2    4[COMRAM] unsigned int 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5657 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5658 ;;  d               2    6[COMRAM] PTR unsigned char 
  5659 ;;		 -> SetupPkt(8), 
  5660 ;;  tmp             1   10[COMRAM] unsigned char 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  2    0[COMRAM] PTR void 
  5663 ;; Registers used:
  5664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 3F/0
  5667 ;;		On exit  : 3F/0
  5668 ;;		Unchanged: 3F/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5670 ;;      Params:         6       0       0       0
  5671 ;;      Locals:         5       0       0       0
  5672 ;;      Temps:          0       0       0       0
  5673 ;;      Totals:        11       0       0       0
  5674 ;;Total ram usage:       11 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_USBCtrlEPService
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text30
  5684  001750                     __ptext30:
  5685                           	opt stack 0
  5686  001750                     _memcpy:
  5687                           	opt stack 23
  5688                           
  5689                           ; BSR set to: 0
  5690                           
  5691                           ;incstack = 0
  5692  001750  C02C  F032         	movff	memcpy@s1,memcpy@s
  5693  001754  C02D  F033         	movff	memcpy@s1+1,memcpy@s+1
  5694  001758  C02A  F030         	movff	memcpy@d1,memcpy@d
  5695  00175C  C02B  F031         	movff	memcpy@d1+1,memcpy@d+1
  5696  001760  D010               	goto	i2l3733
  5697  001762                     i2l3725:
  5698                           
  5699                           ; BSR set to: 0
  5700  001762  C032  FFD9         	movff	memcpy@s,fsr2l
  5701  001766  C033  FFDA         	movff	memcpy@s+1,fsr2h
  5702  00176A  50DF               	movf	indf2,w,c
  5703  00176C  6E34               	movwf	memcpy@tmp,c
  5704                           
  5705                           ; BSR set to: 0
  5706  00176E  4A32               	infsnz	memcpy@s,f,c
  5707  001770  2A33               	incf	memcpy@s+1,f,c
  5708                           
  5709                           ; BSR set to: 0
  5710  001772  C030  FFD9         	movff	memcpy@d,fsr2l
  5711  001776  C031  FFDA         	movff	memcpy@d+1,fsr2h
  5712  00177A  C034  FFDF         	movff	memcpy@tmp,indf2
  5713                           
  5714                           ; BSR set to: 0
  5715  00177E  4A30               	infsnz	memcpy@d,f,c
  5716  001780  2A31               	incf	memcpy@d+1,f,c
  5717  001782                     i2l3733:
  5718                           
  5719                           ; BSR set to: 0
  5720  001782  062E               	decf	memcpy@n,f,c
  5721  001784  A0D8               	btfss	status,0,c
  5722  001786  062F               	decf	memcpy@n+1,f,c
  5723  001788  282E               	incf	memcpy@n,w,c
  5724  00178A  E1EB               	bnz	i2l3725
  5725  00178C  282F               	incf	memcpy@n+1,w,c
  5726  00178E  E1E9               	bnz	i2l3725
  5727                           
  5728                           ; BSR set to: 0
  5729  001790  0012               	return		;funcret
  5730  001792                     __end_of_memcpy:
  5731                           	opt stack 0
  5732                           tblptru	equ	0xFF8
  5733                           tblptrh	equ	0xFF7
  5734                           tblptrl	equ	0xFF6
  5735                           tablat	equ	0xFF5
  5736                           prodh	equ	0xFF4
  5737                           prodl	equ	0xFF3
  5738                           intcon	equ	0xFF2
  5739                           postinc0	equ	0xFEE
  5740                           wreg	equ	0xFE8
  5741                           indf1	equ	0xFE7
  5742                           postdec1	equ	0xFE5
  5743                           fsr1h	equ	0xFE2
  5744                           fsr1l	equ	0xFE1
  5745                           indf2	equ	0xFDF
  5746                           postinc2	equ	0xFDE
  5747                           postdec2	equ	0xFDD
  5748                           plusw2	equ	0xFDB
  5749                           fsr2h	equ	0xFDA
  5750                           fsr2l	equ	0xFD9
  5751                           status	equ	0xFD8
  5752                           
  5753 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5754 ;; Defined at:
  5755 ;;		line 2465 in file "picLibs/usb_device.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 3F/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5769 ;;      Params:         0       0       0       0
  5770 ;;      Locals:         0       0       0       0
  5771 ;;      Temps:          0       0       0       0
  5772 ;;      Totals:         0       0       0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    6
  5776 ;; This function calls:
  5777 ;;		_USBCheckStdRequest
  5778 ;;		_USBCtrlEPServiceComplete
  5779 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5780 ;; This function is called by:
  5781 ;;		_USBCtrlEPService
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text31
  5786  001674                     __ptext31:
  5787                           	opt stack 0
  5788  001674                     _USBCtrlTrfSetupHandler:
  5789                           	opt stack 17
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;incstack = 0
  5796  001674  6A27               	clrf	_shortPacketStatus,c	;volatile
  5797                           
  5798                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5799  001676  6A20               	clrf	_USBDeferStatusStagePacket,c	;volatile
  5800                           
  5801                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5802  001678  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5803                           
  5804                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5805  00167A  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5806                           
  5807                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5808  00167C  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  5809                           
  5810                           ;usb_device.c: 2475: controlTransferState = 0;
  5811  00167E  6A26               	clrf	_controlTransferState,c	;volatile
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5815  001680  EC21  F008         	call	PL16	;call to abstracted procedure
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5819  001684  D817               	call	PL98	;call to abstracted procedure
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5823  001686  EC21  F008         	call	PL16	;call to abstracted procedure
  5824                           
  5825                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5826  00168A  D814               	call	PL98	;call to abstracted procedure
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5830  00168C  ECEA  F005         	call	PL12	;call to abstracted procedure
  5831  001690  0E7F               	movlw	127
  5832  001692  16DF               	andwf	indf2,f,c
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5836  001694  6A0C               	clrf	_inPipes+3,c	;volatile
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5840  001696  6A0D               	clrf	_inPipes+4,c	;volatile
  5841  001698  6A0E               	clrf	_inPipes+5,c	;volatile
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5845  00169A  6A04               	clrf	_outPipes+3,c	;volatile
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5849  00169C  6A05               	clrf	_outPipes+4,c	;volatile
  5850  00169E  6A06               	clrf	_outPipes+5,c	;volatile
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;usb_device.c: 2500: USBCheckStdRequest();
  5854  0016A0  ECA3  F007         	call	_USBCheckStdRequest	;wreg free
  5855                           
  5856                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5857  0016A4  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5858  0016A6  0E03               	movlw	3
  5859  0016A8  ECDD  F00C         	call	PL40	;call to abstracted procedure
  5860  0016AC  ECCB  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5861                           
  5862                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5863  0016B0  EF57  F007         	goto	_USBCtrlEPServiceComplete	;wreg free
  5864  0016B4                     __end_of_USBCtrlTrfSetupHandler:
  5865                           	opt stack 0
  5866  0016B4                     PL98:
  5867                           	opt stack 17
  5868  0016B4  0E7F               	movlw	127
  5869  0016B6  16DF               	andwf	indf2,f,c
  5870  0016B8  0E04               	movlw	4
  5871  0016BA  1A0F               	xorwf	_pBDTEntryIn,f,c
  5872  0016BC  5010               	movf	_pBDTEntryIn+1,w,c
  5873  0016BE  0012               	return	
  5874  0016C0                     __end_ofPL98:
  5875                           	opt stack 0
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           postinc0	equ	0xFEE
  5884                           wreg	equ	0xFE8
  5885                           indf1	equ	0xFE7
  5886                           postdec1	equ	0xFE5
  5887                           fsr1h	equ	0xFE2
  5888                           fsr1l	equ	0xFE1
  5889                           indf2	equ	0xFDF
  5890                           postinc2	equ	0xFDE
  5891                           postdec2	equ	0xFDD
  5892                           plusw2	equ	0xFDB
  5893                           fsr2h	equ	0xFDA
  5894                           fsr2l	equ	0xFD9
  5895                           status	equ	0xFD8
  5896                           
  5897 ;; *************** function _USBCtrlEPServiceComplete *****************
  5898 ;; Defined at:
  5899 ;;		line 1616 in file "picLibs/usb_device.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;		None
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  1    wreg      void 
  5906 ;; Registers used:
  5907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5913 ;;      Params:         0       0       0       0
  5914 ;;      Locals:         0       0       0       0
  5915 ;;      Temps:          0       0       0       0
  5916 ;;      Totals:         0       0       0       0
  5917 ;;Total ram usage:        0 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    2
  5920 ;; This function calls:
  5921 ;;		_USBCtrlEPAllowDataStage
  5922 ;;		_USBCtrlEPAllowStatusStage
  5923 ;; This function is called by:
  5924 ;;		_USBCtrlTrfSetupHandler
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text32
  5929  000EAE                     __ptext32:
  5930                           	opt stack 0
  5931  000EAE                     _USBCtrlEPServiceComplete:
  5932                           	opt stack 20
  5933                           
  5934                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5935                           
  5936                           ;incstack = 0
  5937  000EAE  9864               	bcf	3940,4,c	;volatile
  5938                           
  5939                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5940  000EB0  BE0C               	btfsc	_inPipes+3,7,c	;volatile
  5941  000EB2  D015               	goto	i2l543
  5942                           
  5943                           ;usb_device.c: 1629: {
  5944                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5945  000EB4  AE04               	btfss	_outPipes+3,7,c	;volatile
  5946  000EB6  D00A               	goto	i2l3533
  5947                           
  5948                           ;usb_device.c: 1631: {
  5949                           ;usb_device.c: 1632: controlTransferState = 2;
  5950  000EB8  0E02               	movlw	2
  5951  000EBA  6E26               	movwf	_controlTransferState,c	;volatile
  5952                           
  5953                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5954  000EBC  0100               	movlb	0	; () banked
  5955  000EBE  517E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  5956  000EC0  E102               	bnz	i2l3529
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;usb_device.c: 1644: {
  5960                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5961  000EC2  EC8F  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  5962  000EC6                     i2l3529:
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;usb_device.c: 1646: }
  5966                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5967  000EC6  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5971  000EC8  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  5972                           
  5973                           ;usb_device.c: 1652: }
  5974  000ECA  0012               	return	
  5975  000ECC                     i2l3533:
  5976                           
  5977                           ;usb_device.c: 1653: else
  5978                           ;usb_device.c: 1654: {
  5979                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5980                           
  5981                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5982                           
  5983                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5984  000ECC  D825               	call	PL2	;call to abstracted procedure
  5985  000ECE  0E0C               	movlw	12
  5986                           
  5987                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5988  000ED0  ECE2  F005         	call	PL10	;call to abstracted procedure
  5989                           
  5990                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5991  000ED4  EC21  F008         	call	PL16	;call to abstracted procedure
  5992  000ED8  0E04               	movlw	4
  5993                           
  5994                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5995  000EDA  EF19  F008         	goto	PL8	;call to abstracted procedure
  5996  000EDE                     i2l543:
  5997                           
  5998                           ;usb_device.c: 1667: else
  5999                           ;usb_device.c: 1668: {
  6000                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6001  000EDE  0102               	movlb	2	; () banked
  6002  000EE0  AF30               	btfss	48,7,b	;volatile
  6003  000EE2  D00D               	goto	i2l3553
  6004                           
  6005                           ; BSR set to: 2
  6006                           ;usb_device.c: 1670: {
  6007                           ;usb_device.c: 1671: controlTransferState = 1;
  6008  000EE4  0E01               	movlw	1
  6009  000EE6  6E26               	movwf	_controlTransferState,c	;volatile
  6010                           
  6011                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6012  000EE8  501D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  6013  000EEA  E102               	bnz	i2l3545
  6014                           
  6015                           ; BSR set to: 2
  6016                           ;usb_device.c: 1686: {
  6017                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6018  000EEC  EC8F  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  6019  000EF0                     i2l3545:
  6020                           
  6021                           ;usb_device.c: 1688: }
  6022                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6023  000EF0  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6024                           
  6025                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6026  000EF2  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6027                           
  6028                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6029  000EF4  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6030  000EF6  A4D8               	btfss	status,2,c
  6031  000EF8  0012               	return	
  6032                           
  6033                           ;usb_device.c: 1713: {
  6034                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6035  000EFA  EFB0  F008         	goto	_USBCtrlEPAllowStatusStage	;wreg free
  6036  000EFE                     i2l3553:
  6037                           
  6038                           ; BSR set to: 2
  6039                           ;usb_device.c: 1717: else
  6040                           ;usb_device.c: 1718: {
  6041                           ;usb_device.c: 1729: controlTransferState = 2;
  6042  000EFE  0E02               	movlw	2
  6043  000F00  6E26               	movwf	_controlTransferState,c	;volatile
  6044                           
  6045                           ; BSR set to: 2
  6046                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6047                           
  6048                           ; BSR set to: 2
  6049                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6050                           
  6051                           ; BSR set to: 2
  6052                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6053  000F02  D80A               	call	PL2	;call to abstracted procedure
  6054  000F04  0E04               	movlw	4
  6055                           
  6056                           ; BSR set to: 2
  6057                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6058  000F06  ECE2  F005         	call	PL10	;call to abstracted procedure
  6059                           
  6060                           ; BSR set to: 2
  6061                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6062  000F0A  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6063                           
  6064                           ; BSR set to: 2
  6065                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6066  000F0C  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6067                           
  6068                           ; BSR set to: 2
  6069                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6070  000F0E  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6071  000F10  E102 EFB0  F008    	bz	_USBCtrlEPAllowStatusStage
  6072  000F16  0012               	return	
  6073  000F18                     __end_of_USBCtrlEPServiceComplete:
  6074                           	opt stack 0
  6075  000F18                     PL2:
  6076                           	opt stack 20
  6077  000F18  EE20 F001          	lfsr	2,1
  6078  000F1C  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6079  000F1E  26D9               	addwf	fsr2l,f,c
  6080  000F20  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6081  000F22  22DA               	addwfc	fsr2h,f,c
  6082  000F24  0E08               	movlw	8
  6083  000F26  6EDF               	movwf	indf2,c
  6084  000F28  EE20 F002          	lfsr	2,2
  6085  000F2C  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6086  000F2E  26D9               	addwf	fsr2l,f,c
  6087  000F30  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6088  000F32  22DA               	addwfc	fsr2h,f,c
  6089  000F34  0E30               	movlw	48
  6090  000F36  6EDE               	movwf	postinc2,c
  6091  000F38  0E02               	movlw	2
  6092  000F3A  6EDD               	movwf	postdec2,c
  6093  000F3C  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6094  000F40  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6095  000F44  0C02               	retlw	2
  6096  000F46                     __end_ofPL2:
  6097                           	opt stack 0
  6098                           tblptru	equ	0xFF8
  6099                           tblptrh	equ	0xFF7
  6100                           tblptrl	equ	0xFF6
  6101                           tablat	equ	0xFF5
  6102                           prodh	equ	0xFF4
  6103                           prodl	equ	0xFF3
  6104                           intcon	equ	0xFF2
  6105                           postinc0	equ	0xFEE
  6106                           wreg	equ	0xFE8
  6107                           indf1	equ	0xFE7
  6108                           postdec1	equ	0xFE5
  6109                           fsr1h	equ	0xFE2
  6110                           fsr1l	equ	0xFE1
  6111                           indf2	equ	0xFDF
  6112                           postinc2	equ	0xFDE
  6113                           postdec2	equ	0xFDD
  6114                           plusw2	equ	0xFDB
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6120 ;; Defined at:
  6121 ;;		line 1488 in file "picLibs/usb_device.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 3D/0
  6132 ;;		On exit  : 3F/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6135 ;;      Params:         0       0       0       0
  6136 ;;      Locals:         0       0       0       0
  6137 ;;      Temps:          0       0       0       0
  6138 ;;      Totals:         0       0       0       0
  6139 ;;Total ram usage:        0 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    1
  6142 ;; This function calls:
  6143 ;;		_USBCtrlTrfTxService
  6144 ;; This function is called by:
  6145 ;;		_USBCtrlEPServiceComplete
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text33
  6150  00151E                     __ptext33:
  6151                           	opt stack 0
  6152  00151E                     _USBCtrlEPAllowDataStage:
  6153                           	opt stack 20
  6154                           
  6155                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6156                           
  6157                           ;incstack = 0
  6158  00151E  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6159                           
  6160                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6161  001520  0100               	movlb	0	; () banked
  6162  001522  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6166  001524  0E02               	movlw	2
  6167  001526  1826               	xorwf	_controlTransferState,w,c	;volatile
  6168  001528  E112               	bnz	i2l3331
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;usb_device.c: 1494: {
  6172                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6173  00152A  EE20 F001          	lfsr	2,1
  6174  00152E  ECD8  F005         	call	PL4	;call to abstracted procedure
  6175                           
  6176                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  6177  001532  ECDD  F005         	call	PL6	;call to abstracted procedure
  6178  001536  ECD8  F005         	call	PL4	;call to abstracted procedure
  6179  00153A  0E38               	movlw	56
  6180  00153C  6EDE               	movwf	postinc2,c
  6181  00153E  0E02               	movlw	2
  6182  001540  6EDD               	movwf	postdec2,c
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6186  001542  ECEA  F005         	call	PL12	;call to abstracted procedure
  6187  001546  0E48               	movlw	72
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6191  001548  ECE2  F005         	call	PL10	;call to abstracted procedure
  6192                           
  6193                           ;usb_device.c: 1500: }
  6194  00154C  0C00               	retlw	0
  6195  00154E                     i2l3331:
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;usb_device.c: 1501: else
  6199                           ;usb_device.c: 1502: {
  6200                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6201  00154E  500D               	movf	_inPipes+4,w,c	;volatile
  6202  001550  0102               	movlb	2	; () banked
  6203  001552  5D36               	subwf	54,w,b	;volatile
  6204  001554  500E               	movf	_inPipes+5,w,c	;volatile
  6205  001556  5937               	subwfb	55,w,b	;volatile
  6206  001558  E204               	bc	i2l3335
  6207                           
  6208                           ; BSR set to: 2
  6209                           ;usb_device.c: 1506: {
  6210                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6211  00155A  C236 F00D          	movff	566,_inPipes+4	;volatile
  6212  00155E  C237 F00E          	movff	567,_inPipes+5	;volatile
  6213  001562                     i2l3335:
  6214                           
  6215                           ; BSR set to: 2
  6216                           ;usb_device.c: 1508: }
  6217                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6218  001562  ECB1  F006         	call	_USBCtrlTrfTxService	;wreg free
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  6222  001566  EC2C  F008         	call	PL44	;call to abstracted procedure
  6223  00156A  EC26  F008         	call	PL38	;call to abstracted procedure
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6227  00156E  EC21  F008         	call	PL16	;call to abstracted procedure
  6228  001572  0E48               	movlw	72
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6232                           
  6233                           ; BSR set to: 0
  6234  001574  EF19  F008         	goto	PL8	;call to abstracted procedure
  6235  001578                     __end_of_USBCtrlEPAllowDataStage:
  6236                           	opt stack 0
  6237                           tblptru	equ	0xFF8
  6238                           tblptrh	equ	0xFF7
  6239                           tblptrl	equ	0xFF6
  6240                           tablat	equ	0xFF5
  6241                           prodh	equ	0xFF4
  6242                           prodl	equ	0xFF3
  6243                           intcon	equ	0xFF2
  6244                           postinc0	equ	0xFEE
  6245                           wreg	equ	0xFE8
  6246                           indf1	equ	0xFE7
  6247                           postdec1	equ	0xFE5
  6248                           fsr1h	equ	0xFE2
  6249                           fsr1l	equ	0xFE1
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           plusw2	equ	0xFDB
  6254                           fsr2h	equ	0xFDA
  6255                           fsr2l	equ	0xFD9
  6256                           status	equ	0xFD8
  6257                           
  6258 ;; *************** function _USBCheckStdRequest *****************
  6259 ;; Defined at:
  6260 ;;		line 2686 in file "picLibs/usb_device.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;		None
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      void 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 3F/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6274 ;;      Params:         0       0       0       0
  6275 ;;      Locals:         0       0       0       0
  6276 ;;      Temps:          1       0       0       0
  6277 ;;      Totals:         1       0       0       0
  6278 ;;Total ram usage:        1 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    5
  6281 ;; This function calls:
  6282 ;;		_USBStdFeatureReqHandler
  6283 ;;		_USBStdGetDscHandler
  6284 ;;		_USBStdGetStatusHandler
  6285 ;;		_USBStdSetCfgHandler
  6286 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6287 ;; This function is called by:
  6288 ;;		_USBCtrlTrfSetupHandler
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text34
  6293  000F46                     __ptext34:
  6294                           	opt stack 0
  6295  000F46                     _USBCheckStdRequest:
  6296                           	opt stack 17
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;incstack = 0
  6303  000F46  0102               	movlb	2	; () banked
  6304  000F48  3930               	swapf	48,w,b	;volatile
  6305  000F4A  32E8               	rrcf	wreg,f,c
  6306  000F4C  0B03               	andlw	3
  6307  000F4E  E01D               	bz	i2l3651
  6308  000F50  0012               	return	
  6309  000F52                     i2l668:
  6310                           
  6311                           ; BSR set to: 2
  6312                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6313  000F52  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6314                           
  6315                           ; BSR set to: 2
  6316                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6317  000F54  0E08               	movlw	8
  6318  000F56  0100               	movlb	0	; () banked
  6319  000F58  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6320                           
  6321                           ;usb_device.c: 2696: break;
  6322  000F5A  0C08               	retlw	8
  6323  000F5C                     i2l3625:
  6324                           
  6325                           ; BSR set to: 2
  6326                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6327  000F5C  0E29               	movlw	low _USBActiveConfiguration
  6328  000F5E  6E09               	movwf	_inPipes,c	;volatile
  6329                           
  6330                           ; BSR set to: 2
  6331                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6332                           
  6333                           ; BSR set to: 2
  6334                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6335                           
  6336                           ; BSR set to: 2
  6337                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6338                           
  6339                           ;usb_device.c: 2708: break;
  6340  000F60  D034               	goto	PL78	;call to abstracted procedure
  6341  000F62                     i2l3637:
  6342                           
  6343                           ; BSR set to: 2
  6344                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6345  000F62  5134               	movf	52,w,b	;volatile
  6346  000F64  0FD1               	addlw	low _USBAlternateInterface
  6347  000F66  6E45               	movwf	??_USBCheckStdRequest& (0+255),c
  6348  000F68  C045  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  6349                           
  6350                           ; BSR set to: 2
  6351                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6352                           
  6353                           ; BSR set to: 2
  6354                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6355                           
  6356                           ; BSR set to: 2
  6357                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6358                           
  6359                           ;usb_device.c: 2721: break;
  6360  000F6C  D02E               	goto	PL78	;call to abstracted procedure
  6361  000F6E                     i2l677:
  6362                           
  6363                           ; BSR set to: 2
  6364                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6365  000F6E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6366                           
  6367                           ; BSR set to: 2
  6368                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6369  000F70  5134               	movf	52,w,b	;volatile
  6370  000F72  0FD1               	addlw	low _USBAlternateInterface
  6371  000F74  6ED9               	movwf	fsr2l,c
  6372  000F76  6ADA               	clrf	fsr2h,c
  6373  000F78  C232 FFDF          	movff	562,indf2	;volatile
  6374                           
  6375                           ;usb_device.c: 2725: break;
  6376  000F7C  0012               	return	
  6377  000F7E                     i2l3647:
  6378                           
  6379                           ; BSR set to: 2
  6380                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6381  000F7E  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6382  000F80  0E02               	movlw	2
  6383  000F82  ECDD  F00C         	call	PL40	;call to abstracted procedure
  6384  000F86  EFCB  F009         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6385  000F8A                     i2l3651:
  6386                           
  6387                           ; BSR set to: 2
  6388  000F8A  5131               	movf	49,w,b	;volatile
  6389                           
  6390                           ; Switch size 1, requested type "space"
  6391                           ; Number of cases is 11, Range of values is 0 to 12
  6392                           ; switch strategies available:
  6393                           ; Name         Instructions Cycles
  6394                           ; simple_byte           34    18 (average)
  6395                           ;	Chosen strategy is simple_byte
  6396  000F8C  E102 EFEB  F008    	bz	_USBStdGetStatusHandler
  6397  000F92  0A01               	xorlw	1	; case 1
  6398  000F94  E102 EFF3  F001    	bz	_USBStdFeatureReqHandler
  6399  000F9A  0A02               	xorlw	2	; case 3
  6400  000F9C  E102 EFF3  F001    	bz	_USBStdFeatureReqHandler
  6401  000FA2  0A06               	xorlw	6	; case 5
  6402  000FA4  E0D6               	bz	i2l668
  6403  000FA6  0A03               	xorlw	3	; case 6
  6404  000FA8  E102 EFD0  F004    	bz	_USBStdGetDscHandler
  6405  000FAE  0A01               	xorlw	1	; case 7
  6406  000FB0  E0E6               	bz	i2l3647
  6407  000FB2  0A0F               	xorlw	15	; case 8
  6408  000FB4  E0D3               	bz	i2l3625
  6409  000FB6  0A01               	xorlw	1	; case 9
  6410  000FB8  E102 EF05  F007    	bz	_USBStdSetCfgHandler
  6411  000FBE  0A03               	xorlw	3	; case 10
  6412  000FC0  E0D0               	bz	i2l3637
  6413  000FC2  0A01               	xorlw	1	; case 11
  6414  000FC4  E0D4               	bz	i2l677
  6415  000FC6  0A07               	xorlw	7	; case 12
  6416  000FC8  0012               	return	
  6417  000FCA                     __end_of_USBCheckStdRequest:
  6418                           	opt stack 0
  6419  000FCA                     PL78:
  6420                           	opt stack 17
  6421  000FCA  6A0A               	clrf	_inPipes+1,c	;volatile
  6422  000FCC  800C               	bsf	_inPipes+3,0,c	;volatile
  6423  000FCE  0E01               	movlw	1
  6424  000FD0  6E0D               	movwf	_inPipes+4,c	;volatile
  6425  000FD2  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6426  000FD4  0C01               	retlw	1
  6427  000FD6                     __end_ofPL78:
  6428                           	opt stack 0
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           prodh	equ	0xFF4
  6434                           prodl	equ	0xFF3
  6435                           intcon	equ	0xFF2
  6436                           postinc0	equ	0xFEE
  6437                           wreg	equ	0xFE8
  6438                           indf1	equ	0xFE7
  6439                           postdec1	equ	0xFE5
  6440                           fsr1h	equ	0xFE2
  6441                           fsr1l	equ	0xFE1
  6442                           indf2	equ	0xFDF
  6443                           postinc2	equ	0xFDE
  6444                           postdec2	equ	0xFDD
  6445                           plusw2	equ	0xFDB
  6446                           fsr2h	equ	0xFDA
  6447                           fsr2l	equ	0xFD9
  6448                           status	equ	0xFD8
  6449                           
  6450 ;; *************** function _USBStdSetCfgHandler *****************
  6451 ;; Defined at:
  6452 ;;		line 1968 in file "picLibs/usb_device.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  i               1   20[COMRAM] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 3D/2
  6463 ;;		On exit  : 3F/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6466 ;;      Params:         0       0       0       0
  6467 ;;      Locals:         1       0       0       0
  6468 ;;      Temps:          0       0       0       0
  6469 ;;      Totals:         1       0       0       0
  6470 ;;Total ram usage:        1 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    4
  6473 ;; This function calls:
  6474 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6475 ;;		i2_memset
  6476 ;; This function is called by:
  6477 ;;		_USBCheckStdRequest
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text35
  6482  000E0A                     __ptext35:
  6483                           	opt stack 0
  6484  000E0A                     _USBStdSetCfgHandler:
  6485                           	opt stack 17
  6486                           
  6487                           ;usb_device.c: 1970: uint8_t i;
  6488                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6489                           
  6490                           ;incstack = 0
  6491  000E0A  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6492                           
  6493                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  6494  000E0C  D840               	call	PL50	;call to abstracted procedure
  6495  000E0E  ECBD  F00C         	call	i2_memset	;wreg free
  6496                           
  6497                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6498  000E12  6A2A               	clrf	i2memset@p1,c
  6499  000E14  0E02               	movlw	2
  6500  000E16  6E2B               	movwf	i2memset@p1+1,c
  6501  000E18  6A2D               	clrf	i2memset@c+1,c
  6502  000E1A  6A2C               	clrf	i2memset@c,c
  6503  000E1C  6A2F               	clrf	i2memset@n+1,c
  6504  000E1E  0E30               	movlw	48
  6505  000E20  6E2E               	movwf	i2memset@n,c
  6506  000E22  ECBD  F00C         	call	i2_memset	;wreg free
  6507                           
  6508                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6509  000E26  8C64               	bsf	3940,6,c	;volatile
  6510                           
  6511                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6512  000E28  6A3E               	clrf	USBStdSetCfgHandler@i,c
  6513  000E2A                     i2l3355:
  6514                           
  6515                           ;usb_device.c: 1988: {
  6516                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6517  000E2A  503E               	movf	USBStdSetCfgHandler@i,w,c
  6518  000E2C  ECCB  F004         	call	PL90	;call to abstracted procedure
  6519                           
  6520                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6521  000E30  503E               	movf	USBStdSetCfgHandler@i,w,c
  6522  000E32  ECC6  F004         	call	PL82	;call to abstracted procedure
  6523  000E36  2A3E               	incf	USBStdSetCfgHandler@i,f,c
  6524  000E38  0E02               	movlw	2
  6525  000E3A  643E               	cpfsgt	USBStdSetCfgHandler@i,c
  6526  000E3C  D7F6               	goto	i2l3355
  6527                           
  6528                           ;usb_device.c: 1991: }
  6529                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6530  000E3E  0ED1               	movlw	low _USBAlternateInterface
  6531  000E40  6E2A               	movwf	i2memset@p1,c
  6532  000E42  6A2B               	clrf	i2memset@p1+1,c
  6533  000E44  6A2D               	clrf	i2memset@c+1,c
  6534  000E46  6A2C               	clrf	i2memset@c,c
  6535  000E48  6A2F               	clrf	i2memset@n+1,c
  6536  000E4A  0E02               	movlw	2
  6537  000E4C  6E2E               	movwf	i2memset@n,c
  6538  000E4E  ECBD  F00C         	call	i2_memset	;wreg free
  6539                           
  6540                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6541  000E52  9C64               	bcf	3940,6,c	;volatile
  6542                           
  6543                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6544  000E54  0E08               	movlw	8
  6545  000E56  6E0F               	movwf	_pBDTEntryIn,c
  6546  000E58  0E02               	movlw	2
  6547  000E5A  6E10               	movwf	_pBDTEntryIn+1,c
  6548                           
  6549                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6550  000E5C  0E00               	movlw	0
  6551  000E5E  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  6552  000E60  0E02               	movlw	2
  6553                           
  6554                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6555  000E62  D81F               	call	PL96	;call to abstracted procedure
  6556                           
  6557                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6558  000E64  C232 F029          	movff	562,_USBActiveConfiguration	;volatile
  6559                           
  6560                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6561  000E68  5029               	movf	_USBActiveConfiguration,w,c	;volatile
  6562  000E6A  E104               	bnz	i2l3377
  6563                           
  6564                           ;usb_device.c: 2010: {
  6565                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6566  000E6C  0E10               	movlw	16
  6567  000E6E  0100               	movlb	0	; () banked
  6568  000E70  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6569                           
  6570                           ;usb_device.c: 2013: }
  6571  000E72  0C10               	retlw	16
  6572  000E74                     i2l3377:
  6573                           
  6574                           ;usb_device.c: 2014: else
  6575                           ;usb_device.c: 2015: {
  6576                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6577  000E74  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6578  000E76  0E01               	movlw	1
  6579  000E78  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6580  000E7A  0E29               	movlw	low _USBActiveConfiguration
  6581  000E7C  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6582  000E7E  ECE1  F003         	call	PL88	;call to abstracted procedure
  6583  000E82  ECCB  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6584                           
  6585                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6586  000E86  0E20               	movlw	32
  6587  000E88  0100               	movlb	0	; () banked
  6588  000E8A  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6589                           
  6590                           ; BSR set to: 0
  6591  000E8C  0C20               	retlw	32	;funcret
  6592  000E8E                     __end_of_USBStdSetCfgHandler:
  6593                           	opt stack 0
  6594  000E8E                     PL50:
  6595                           	opt stack 23
  6596  000E8E  0E54               	movlw	84
  6597  000E90  6E2A               	movwf	i2memset@p1,c
  6598  000E92  0E0F               	movlw	15
  6599  000E94  6E2B               	movwf	i2memset@p1+1,c
  6600  000E96  6A2D               	clrf	i2memset@c+1,c
  6601  000E98  6A2C               	clrf	i2memset@c,c
  6602  000E9A  6A2F               	clrf	i2memset@n+1,c
  6603  000E9C  0E02               	movlw	2
  6604  000E9E  6E2E               	movwf	i2memset@n,c
  6605  000EA0  0C02               	retlw	2
  6606  000EA2                     __end_ofPL50:
  6607                           	opt stack 0
  6608  000EA2                     PL96:
  6609                           	opt stack 17
  6610  000EA2  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6611  000EA4  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6612  000EA8  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6613  000EAC  0012               	return	
  6614  000EAE                     __end_ofPL96:
  6615                           	opt stack 0
  6616                           tblptru	equ	0xFF8
  6617                           tblptrh	equ	0xFF7
  6618                           tblptrl	equ	0xFF6
  6619                           tablat	equ	0xFF5
  6620                           prodh	equ	0xFF4
  6621                           prodl	equ	0xFF3
  6622                           intcon	equ	0xFF2
  6623                           postinc0	equ	0xFEE
  6624                           wreg	equ	0xFE8
  6625                           indf1	equ	0xFE7
  6626                           postdec1	equ	0xFE5
  6627                           fsr1h	equ	0xFE2
  6628                           fsr1l	equ	0xFE1
  6629                           indf2	equ	0xFDF
  6630                           postinc2	equ	0xFDE
  6631                           postdec2	equ	0xFDD
  6632                           plusw2	equ	0xFDB
  6633                           fsr2h	equ	0xFDA
  6634                           fsr2l	equ	0xFD9
  6635                           status	equ	0xFD8
  6636                           
  6637 ;; *************** function i2_memset *****************
  6638 ;; Defined at:
  6639 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  p1              2    0[COMRAM] PTR void 
  6642 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6643 ;;  c               2    2[COMRAM] int 
  6644 ;;  n               2    4[COMRAM] unsigned int 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  memset          2    6[COMRAM] PTR unsigned char 
  6647 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  2    0[COMRAM] PTR void 
  6650 ;; Registers used:
  6651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/F
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6657 ;;      Params:         6       0       0       0
  6658 ;;      Locals:         2       0       0       0
  6659 ;;      Temps:          0       0       0       0
  6660 ;;      Totals:         8       0       0       0
  6661 ;;Total ram usage:        8 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_USBStdSetCfgHandler
  6667 ;;		i2_USBDeviceInit
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text36
  6672  00197A                     __ptext36:
  6673                           	opt stack 0
  6674  00197A                     i2_memset:
  6675                           	opt stack 23
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;incstack = 0
  6679  00197A  C02A  F030         	movff	i2memset@p1,i2memset@p
  6680  00197E  C02B  F031         	movff	i2memset@p1+1,i2memset@p+1
  6681  001982  D008               	goto	i2l3287
  6682  001984                     i2l3283:
  6683  001984  C030  FFD9         	movff	i2memset@p,fsr2l
  6684  001988  C031  FFDA         	movff	i2memset@p+1,fsr2h
  6685  00198C  C02C  FFDF         	movff	i2memset@c,indf2
  6686  001990  4A30               	infsnz	i2memset@p,f,c
  6687  001992  2A31               	incf	i2memset@p+1,f,c
  6688  001994                     i2l3287:
  6689  001994  062E               	decf	i2memset@n,f,c
  6690  001996  A0D8               	btfss	status,0,c
  6691  001998  062F               	decf	i2memset@n+1,f,c
  6692  00199A  282E               	incf	i2memset@n,w,c
  6693  00199C  E1F3               	bnz	i2l3283
  6694  00199E  282F               	incf	i2memset@n+1,w,c
  6695  0019A0  E1F1               	bnz	i2l3283
  6696  0019A2  0012               	return		;funcret
  6697  0019A4                     __end_ofi2_memset:
  6698                           	opt stack 0
  6699                           tblptru	equ	0xFF8
  6700                           tblptrh	equ	0xFF7
  6701                           tblptrl	equ	0xFF6
  6702                           tablat	equ	0xFF5
  6703                           prodh	equ	0xFF4
  6704                           prodl	equ	0xFF3
  6705                           intcon	equ	0xFF2
  6706                           postinc0	equ	0xFEE
  6707                           wreg	equ	0xFE8
  6708                           indf1	equ	0xFE7
  6709                           postdec1	equ	0xFE5
  6710                           fsr1h	equ	0xFE2
  6711                           fsr1l	equ	0xFE1
  6712                           indf2	equ	0xFDF
  6713                           postinc2	equ	0xFDE
  6714                           postdec2	equ	0xFDD
  6715                           plusw2	equ	0xFDB
  6716                           fsr2h	equ	0xFDA
  6717                           fsr2l	equ	0xFD9
  6718                           status	equ	0xFD8
  6719                           
  6720 ;; *************** function _USBStdGetStatusHandler *****************
  6721 ;; Defined at:
  6722 ;;		line 2129 in file "picLibs/usb_device.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  p               2    0[COMRAM] PTR struct __BDT
  6727 ;;		 -> RAM(767), NULL(0), BDT(48), 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6732 ;; Tracked objects:
  6733 ;;		On entry : 3D/2
  6734 ;;		On exit  : 3F/2
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6737 ;;      Params:         0       0       0       0
  6738 ;;      Locals:         2       0       0       0
  6739 ;;      Temps:          0       0       0       0
  6740 ;;      Totals:         2       0       0       0
  6741 ;;Total ram usage:        2 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_USBCheckStdRequest
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text37
  6751  0011D6                     __ptext37:
  6752                           	opt stack 0
  6753  0011D6                     _USBStdGetStatusHandler:
  6754                           	opt stack 21
  6755                           
  6756                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6757                           
  6758                           ;incstack = 0
  6759  0011D6  0102               	movlb	2	; () banked
  6760  0011D8  6B38               	clrf	56,b	;volatile
  6761                           
  6762                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6763  0011DA  6B39               	clrf	57,b	;volatile
  6764                           
  6765                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6766  0011DC  D020               	goto	i2l3427
  6767  0011DE                     i2l606:
  6768                           
  6769                           ; BSR set to: 2
  6770                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6771  0011DE  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6772                           
  6773                           ; BSR set to: 2
  6774                           ;usb_device.c: 2145: }
  6775                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6776                           
  6777                           ;usb_device.c: 2142: if(0 == 1)
  6778  0011E0  0425               	decf	_RemoteWakeup,w,c	;volatile
  6779  0011E2  E124               	bnz	i2l609
  6780                           
  6781                           ; BSR set to: 2
  6782                           ;usb_device.c: 2148: {
  6783                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6784  0011E4  8338               	bsf	56,1,b	;volatile
  6785  0011E6  D022               	goto	i2l609
  6786  0011E8                     i2l610:
  6787                           
  6788                           ; BSR set to: 2
  6789                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6790  0011E8  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6791                           
  6792                           ;usb_device.c: 2154: break;
  6793  0011EA  D020               	goto	i2l609
  6794  0011EC                     i2l611:
  6795                           
  6796                           ; BSR set to: 2
  6797                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6798  0011EC  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6799                           
  6800                           ;usb_device.c: 2160: {
  6801                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6802                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6803  0011EE  BF34               	btfsc	52,7,b	;volatile
  6804  0011F0  D004               	goto	i2l3417
  6805                           
  6806                           ; BSR set to: 2
  6807                           ;usb_device.c: 2164: {
  6808                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6809  0011F2  ECB5  F002         	call	PL58	;call to abstracted procedure
  6810  0011F6  0F60               	addlw	low _pBDTEntryOut
  6811  0011F8  D003               	goto	L5
  6812  0011FA                     i2l3417:
  6813                           
  6814                           ; BSR set to: 2
  6815                           ;usb_device.c: 2167: else
  6816                           ;usb_device.c: 2168: {
  6817                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6818  0011FA  ECB5  F002         	call	PL58	;call to abstracted procedure
  6819  0011FE  0F0F               	addlw	low _pBDTEntryIn
  6820  001200                     L5:
  6821  001200  6ED9               	movwf	fsr2l,c
  6822  001202  6ADA               	clrf	fsr2h,c
  6823  001204  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  6824  001208  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  6825                           
  6826                           ; BSR set to: 2
  6827                           ;usb_device.c: 2170: }
  6828                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6829  00120C  D818               	call	PL100	;call to abstracted procedure
  6830  00120E  AEDF               	btfss	indf2,7,c
  6831  001210  D00D               	goto	i2l609
  6832                           
  6833                           ; BSR set to: 2
  6834  001212  D815               	call	PL100	;call to abstracted procedure
  6835  001214  A4DF               	btfss	indf2,2,c
  6836  001216  D00A               	goto	i2l609
  6837                           
  6838                           ; BSR set to: 2
  6839                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6840  001218  0E01               	movlw	1
  6841  00121A  6F38               	movwf	56,b	;volatile
  6842  00121C  D007               	goto	i2l609
  6843  00121E                     i2l3427:
  6844                           
  6845                           ; BSR set to: 2
  6846  00121E  5130               	movf	48,w,b	;volatile
  6847  001220  0B1F               	andlw	31
  6848                           
  6849                           ; Switch size 1, requested type "space"
  6850                           ; Number of cases is 3, Range of values is 0 to 2
  6851                           ; switch strategies available:
  6852                           ; Name         Instructions Cycles
  6853                           ; simple_byte           10     6 (average)
  6854                           ;	Chosen strategy is simple_byte
  6855  001222  E0DD               	bz	i2l606
  6856  001224  0A01               	xorlw	1	; case 1
  6857  001226  E0E0               	bz	i2l610
  6858  001228  0A03               	xorlw	3	; case 2
  6859  00122A  E0E0               	bz	i2l611
  6860  00122C                     i2l609:
  6861                           
  6862                           ; BSR set to: 2
  6863                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6864  00122C  AE0C               	btfss	_inPipes+3,7,c	;volatile
  6865  00122E  0012               	return	
  6866                           
  6867                           ; BSR set to: 2
  6868                           ;usb_device.c: 2179: {
  6869                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6870  001230  0E38               	movlw	56
  6871  001232  6E09               	movwf	_inPipes,c	;volatile
  6872  001234  0E02               	movlw	2
  6873  001236  6E0A               	movwf	_inPipes+1,c	;volatile
  6874                           
  6875                           ; BSR set to: 2
  6876                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6877  001238  800C               	bsf	_inPipes+3,0,c	;volatile
  6878                           
  6879                           ; BSR set to: 2
  6880                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6881  00123A  6E0D               	movwf	_inPipes+4,c	;volatile
  6882                           
  6883                           ; BSR set to: 2
  6884  00123C  0C02               	retlw	2	;funcret
  6885  00123E                     __end_of_USBStdGetStatusHandler:
  6886                           	opt stack 0
  6887  00123E                     PL100:
  6888                           	opt stack 21
  6889  00123E  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6890  001242  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6891  001246  0012               	return	
  6892  001248                     __end_ofPL100:
  6893                           	opt stack 0
  6894                           tblptru	equ	0xFF8
  6895                           tblptrh	equ	0xFF7
  6896                           tblptrl	equ	0xFF6
  6897                           tablat	equ	0xFF5
  6898                           prodh	equ	0xFF4
  6899                           prodl	equ	0xFF3
  6900                           intcon	equ	0xFF2
  6901                           postinc0	equ	0xFEE
  6902                           wreg	equ	0xFE8
  6903                           indf1	equ	0xFE7
  6904                           postdec1	equ	0xFE5
  6905                           fsr1h	equ	0xFE2
  6906                           fsr1l	equ	0xFE1
  6907                           indf2	equ	0xFDF
  6908                           postinc2	equ	0xFDE
  6909                           postdec2	equ	0xFDD
  6910                           plusw2	equ	0xFDB
  6911                           fsr2h	equ	0xFDA
  6912                           fsr2l	equ	0xFD9
  6913                           status	equ	0xFD8
  6914                           
  6915 ;; *************** function _USBStdGetDscHandler *****************
  6916 ;; Defined at:
  6917 ;;		line 2043 in file "picLibs/usb_device.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6926 ;; Tracked objects:
  6927 ;;		On entry : 3D/2
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6931 ;;      Params:         0       0       0       0
  6932 ;;      Locals:         0       0       0       0
  6933 ;;      Temps:          2       0       0       0
  6934 ;;      Totals:         2       0       0       0
  6935 ;;Total ram usage:        2 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; This function calls:
  6938 ;;		Nothing
  6939 ;; This function is called by:
  6940 ;;		_USBCheckStdRequest
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text38
  6945  0009A0                     __ptext38:
  6946                           	opt stack 0
  6947  0009A0                     _USBStdGetDscHandler:
  6948                           	opt stack 21
  6949                           
  6950                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6951                           
  6952                           ; BSR set to: 2
  6953                           ;incstack = 0
  6954  0009A0  0E80               	movlw	128
  6955  0009A2  0102               	movlb	2	; () banked
  6956  0009A4  1930               	xorwf	48,w,b	;volatile
  6957  0009A6  A4D8               	btfss	status,2,c
  6958  0009A8  0012               	return	
  6959                           
  6960                           ; BSR set to: 2
  6961                           ;usb_device.c: 2046: {
  6962                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6963  0009AA  0EC0               	movlw	192
  6964  0009AC  6E0C               	movwf	_inPipes+3,c	;volatile
  6965                           
  6966                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6967  0009AE  D03D               	goto	i2l3405
  6968  0009B0                     i2l3385:
  6969                           
  6970                           ; BSR set to: 2
  6971                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6972  0009B0  0EB0               	movlw	low _device_dsc
  6973  0009B2  6E09               	movwf	_inPipes,c	;volatile
  6974  0009B4  5009               	movf	_inPipes,w,c	;volatile
  6975  0009B6  A4D8               	btfss	status,2,c
  6976  0009B8  0E03               	movlw	high __smallconst
  6977  0009BA  6E0A               	movwf	_inPipes+1,c	;volatile
  6978                           
  6979                           ; BSR set to: 2
  6980                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6981  0009BC  6A0E               	clrf	_inPipes+5,c	;volatile
  6982  0009BE  0E12               	movlw	18
  6983  0009C0  6E0D               	movwf	_inPipes+4,c	;volatile
  6984                           
  6985                           ;usb_device.c: 2058: break;
  6986  0009C2  0C12               	retlw	18
  6987  0009C4                     i2l3389:
  6988                           
  6989                           ; BSR set to: 2
  6990                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6991  0009C4  5132               	movf	50,w,b	;volatile
  6992  0009C6  E116               	bnz	i2l596
  6993                           
  6994                           ; BSR set to: 2
  6995                           ;usb_device.c: 2064: {
  6996                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6997  0009C8  5132               	movf	50,w,b	;volatile
  6998  0009CA  0F04               	addlw	low _USB_CD_Ptr
  6999  0009CC  D848               	call	PL48	;call to abstracted procedure
  7000                           
  7001                           ; BSR set to: 2
  7002                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7003  0009CE  0E02               	movlw	2
  7004  0009D0  D83A               	call	PL32	;call to abstracted procedure
  7005  0009D2  64F7               	cpfsgt	tblptrh,c
  7006  0009D4  D003               	bra	i2u212_47
  7007  0009D6  0008               	tblrd		*
  7008  0009D8  50F5               	movf	tablat,w,c
  7009  0009DA  D001               	bra	i2u212_40
  7010  0009DC                     i2u212_47:
  7011  0009DC  D82E               	call	PL18	;call to abstracted procedure
  7012  0009DE                     i2u212_40:
  7013  0009DE  6E0D               	movwf	_inPipes+4,c	;volatile
  7014                           
  7015                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7016  0009E0  0E03               	movlw	3
  7017  0009E2  D831               	call	PL32	;call to abstracted procedure
  7018  0009E4  64F7               	cpfsgt	tblptrh,c
  7019  0009E6  D003               	bra	i2u213_47
  7020  0009E8  0008               	tblrd		*
  7021  0009EA  50F5               	movf	tablat,w,c
  7022  0009EC  D001               	bra	i2u213_40
  7023  0009EE                     i2u213_47:
  7024  0009EE  D825               	call	PL18	;call to abstracted procedure
  7025  0009F0                     i2u213_40:
  7026  0009F0  6E0E               	movwf	_inPipes+5,c	;volatile
  7027                           
  7028                           ;usb_device.c: 2076: }
  7029  0009F2  0012               	return	
  7030  0009F4                     i2l596:
  7031                           
  7032                           ; BSR set to: 2
  7033                           ;usb_device.c: 2077: else
  7034                           ;usb_device.c: 2078: {
  7035                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7036  0009F4  6A0C               	clrf	_inPipes+3,c	;volatile
  7037  0009F6  0012               	return	
  7038  0009F8                     i2l3397:
  7039                           
  7040                           ; BSR set to: 2
  7041                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7042  0009F8  0E03               	movlw	3
  7043  0009FA  6132               	cpfslt	50,b	;volatile
  7044  0009FC  D012               	goto	i2l599
  7045                           
  7046                           ; BSR set to: 2
  7047                           ;usb_device.c: 2087: {
  7048                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7049  0009FE  5132               	movf	50,w,b	;volatile
  7050  000A00  0F01               	addlw	low _USB_SD_Ptr
  7051  000A02  D82D               	call	PL48	;call to abstracted procedure
  7052                           
  7053                           ; BSR set to: 2
  7054                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7055  000A04  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
  7056  000A08  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7057  000A0C  6AF8               	clrf	tblptru,c
  7058  000A0E  0E02               	movlw	(high __ramtop+-1)
  7059  000A10  64F7               	cpfsgt	tblptrh,c
  7060  000A12  D003               	bra	i2u215_47
  7061  000A14  0008               	tblrd		*
  7062  000A16  50F5               	movf	tablat,w,c
  7063  000A18  D001               	bra	i2u215_40
  7064  000A1A                     i2u215_47:
  7065  000A1A  D80F               	call	PL18	;call to abstracted procedure
  7066  000A1C                     i2u215_40:
  7067  000A1C  6E0D               	movwf	_inPipes+4,c	;volatile
  7068  000A1E  6A0E               	clrf	_inPipes+5,c	;volatile
  7069                           
  7070                           ;usb_device.c: 2092: }
  7071  000A20  0012               	return	
  7072  000A22                     i2l599:
  7073                           
  7074                           ; BSR set to: 2
  7075                           ;usb_device.c: 2102: else
  7076                           ;usb_device.c: 2103: {
  7077                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7078  000A22  6A0C               	clrf	_inPipes+3,c	;volatile
  7079  000A24  0012               	return	
  7080  000A26                     i2l601:
  7081                           
  7082                           ; BSR set to: 2
  7083                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7084  000A26  6A0C               	clrf	_inPipes+3,c	;volatile
  7085                           
  7086                           ;usb_device.c: 2109: break;
  7087  000A28  0012               	return	
  7088  000A2A                     i2l3405:
  7089                           
  7090                           ; BSR set to: 2
  7091  000A2A  5133               	movf	51,w,b	;volatile
  7092                           
  7093                           ; Switch size 1, requested type "space"
  7094                           ; Number of cases is 3, Range of values is 1 to 3
  7095                           ; switch strategies available:
  7096                           ; Name         Instructions Cycles
  7097                           ; simple_byte           10     6 (average)
  7098                           ;	Chosen strategy is simple_byte
  7099  000A2C  0A01               	xorlw	1	; case 1
  7100  000A2E  E0C0               	bz	i2l3385
  7101  000A30  0A03               	xorlw	3	; case 2
  7102  000A32  E0C8               	bz	i2l3389
  7103  000A34  0A01               	xorlw	1	; case 3
  7104  000A36  E0E0               	bz	i2l3397
  7105  000A38  D7F6               	goto	i2l601
  7106  000A3A                     __end_of_USBStdGetDscHandler:
  7107                           	opt stack 0
  7108  000A3A                     PL18:
  7109                           	opt stack 19
  7110  000A3A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7111  000A3E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7112  000A42  50E7               	movf	indf1,w,c
  7113  000A44  0012               	return	
  7114  000A46                     __end_ofPL18:
  7115                           	opt stack 0
  7116  000A46                     PL32:
  7117                           	opt stack 21
  7118  000A46  2409               	addwf	_inPipes,w,c	;volatile
  7119  000A48  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7120  000A4A  0E00               	movlw	0
  7121  000A4C  200A               	addwfc	_inPipes+1,w,c	;volatile
  7122  000A4E  6E2B               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7123  000A50  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7124  000A54  C02B  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7125  000A58  6AF8               	clrf	tblptru,c
  7126  000A5A  0E02               	movlw	(high __ramtop+-1)
  7127  000A5C  0012               	return	
  7128  000A5E                     __end_ofPL32:
  7129                           	opt stack 0
  7130  000A5E                     PL48:
  7131                           	opt stack 21
  7132  000A5E  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7133  000A60  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7134  000A64                     	if	1	;There is more than 1 active tblptr byte
  7135  000A64  0E03               	movlw	high __smallconst
  7136  000A66  6EF7               	movwf	tblptrh,c
  7137  000A68                     	endif
  7138  000A68                     	if	0	;tblptru may be non-zero
  7139  000A68                     	endif
  7140  000A68                     	if	0	;tblptru may be non-zero
  7141  000A68                     	endif
  7142  000A68  0009               	tblrd		*+
  7143  000A6A  CFF5 F009          	movff	tablat,_inPipes	;volatile
  7144  000A6E  6E0A               	movwf	_inPipes+1,c	;volatile
  7145  000A70  0012               	return	
  7146  000A72                     __end_ofPL48:
  7147                           	opt stack 0
  7148                           tblptru	equ	0xFF8
  7149                           tblptrh	equ	0xFF7
  7150                           tblptrl	equ	0xFF6
  7151                           tablat	equ	0xFF5
  7152                           prodh	equ	0xFF4
  7153                           prodl	equ	0xFF3
  7154                           intcon	equ	0xFF2
  7155                           postinc0	equ	0xFEE
  7156                           wreg	equ	0xFE8
  7157                           indf1	equ	0xFE7
  7158                           postdec1	equ	0xFE5
  7159                           fsr1h	equ	0xFE2
  7160                           fsr1l	equ	0xFE1
  7161                           indf2	equ	0xFDF
  7162                           postinc2	equ	0xFDE
  7163                           postdec2	equ	0xFDD
  7164                           plusw2	equ	0xFDB
  7165                           fsr2h	equ	0xFDA
  7166                           fsr2l	equ	0xFD9
  7167                           status	equ	0xFD8
  7168                           
  7169 ;; *************** function _USBStdFeatureReqHandler *****************
  7170 ;; Defined at:
  7171 ;;		line 2754 in file "picLibs/usb_device.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  p               2   25[COMRAM] PTR struct __BDT
  7176 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7177 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  7178 ;;		 -> UEP0(1), 
  7179 ;;  current_ep_d    1   24[COMRAM] struct .
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 3D/2
  7186 ;;		On exit  : 3D/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7189 ;;      Params:         0       0       0       0
  7190 ;;      Locals:         5       0       0       0
  7191 ;;      Temps:          2       0       0       0
  7192 ;;      Totals:         7       0       0       0
  7193 ;;Total ram usage:        7 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    4
  7196 ;; This function calls:
  7197 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7198 ;; This function is called by:
  7199 ;;		_USBCheckStdRequest
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text39
  7204  0003E6                     __ptext39:
  7205                           	opt stack 0
  7206  0003E6                     _USBStdFeatureReqHandler:
  7207                           	opt stack 17
  7208                           
  7209                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7210                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7211                           ;usb_device.c: 2761: unsigned char* pUEP;
  7212                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7213                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7214                           
  7215                           ;incstack = 0
  7216  0003E6  0102               	movlb	2	; () banked
  7217  0003E8  0532               	decf	50,w,b	;volatile
  7218  0003EA  E10B               	bnz	i2l3445
  7219                           
  7220                           ; BSR set to: 2
  7221  0003EC  5130               	movf	48,w,b	;volatile
  7222  0003EE  0B1F               	andlw	31
  7223  0003F0  E108               	bnz	i2l3445
  7224                           
  7225                           ; BSR set to: 2
  7226                           ;usb_device.c: 2801: {
  7227                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7228  0003F2  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7229                           
  7230                           ; BSR set to: 2
  7231                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7232  0003F4  0E03               	movlw	3
  7233  0003F6  1931               	xorwf	49,w,b	;volatile
  7234  0003F8  E103               	bnz	i2l684
  7235                           
  7236                           ; BSR set to: 2
  7237                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7238  0003FA  0E01               	movlw	1
  7239  0003FC  6E25               	movwf	_RemoteWakeup,c	;volatile
  7240  0003FE  D001               	goto	i2l3445
  7241  000400                     i2l684:
  7242                           
  7243                           ; BSR set to: 2
  7244                           ;usb_device.c: 2805: else
  7245                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7246  000400  6A25               	clrf	_RemoteWakeup,c	;volatile
  7247  000402                     i2l3445:
  7248                           
  7249                           ; BSR set to: 2
  7250                           ;usb_device.c: 2807: }
  7251                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7252                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7253                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7254                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7255  000402  5132               	movf	50,w,b	;volatile
  7256  000404  A4D8               	btfss	status,2,c
  7257  000406  0012               	return	
  7258                           
  7259                           ; BSR set to: 2
  7260  000408  5130               	movf	48,w,b	;volatile
  7261  00040A  0B1F               	andlw	31
  7262  00040C  0A02               	xorlw	2
  7263  00040E  A4D8               	btfss	status,2,c
  7264  000410  0012               	return	
  7265                           
  7266                           ; BSR set to: 2
  7267  000412  5134               	movf	52,w,b	;volatile
  7268  000414  0B0F               	andlw	15
  7269  000416  B4D8               	btfsc	status,2,c
  7270  000418  0012               	return	
  7271                           
  7272                           ; BSR set to: 2
  7273  00041A  5134               	movf	52,w,b	;volatile
  7274  00041C  0B0F               	andlw	15
  7275  00041E  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7276  000420  0E03               	movlw	3
  7277  000422  603E               	cpfslt	??_USBStdFeatureReqHandler,c
  7278  000424  0C03               	retlw	3
  7279                           
  7280                           ; BSR set to: 2
  7281  000426  0E20               	movlw	32
  7282  000428  0100               	movlb	0	; () banked
  7283  00042A  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7284  00042C  A4D8               	btfss	status,2,c
  7285  00042E  0012               	return	
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;usb_device.c: 2814: {
  7289                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7290  000430  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7291                           
  7292                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7293  000432  0102               	movlb	2	; () banked
  7294  000434  BF34               	btfsc	52,7,b	;volatile
  7295  000436  D007               	goto	i2l3461
  7296                           
  7297                           ; BSR set to: 2
  7298                           ;usb_device.c: 2821: {
  7299                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7300  000438  5134               	movf	52,w,b	;volatile
  7301  00043A  0B0F               	andlw	15
  7302  00043C  EC7A  F005         	call	PL24	;call to abstracted procedure
  7303                           
  7304                           ; BSR set to: 2
  7305                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7306  000440  D88B               	call	PL56	;call to abstracted procedure
  7307  000442  0F70               	addlw	low _ep_data_out
  7308  000444  D006               	goto	L6
  7309  000446                     i2l3461:
  7310                           
  7311                           ; BSR set to: 2
  7312                           ;usb_device.c: 2825: else
  7313                           ;usb_device.c: 2826: {
  7314                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7315  000446  5134               	movf	52,w,b	;volatile
  7316  000448  0B0F               	andlw	15
  7317  00044A  EC80  F005         	call	PL26	;call to abstracted procedure
  7318                           
  7319                           ; BSR set to: 2
  7320                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7321  00044E  D884               	call	PL56	;call to abstracted procedure
  7322  000450  0F73               	addlw	low _ep_data_in
  7323  000452                     L6:
  7324  000452  6ED9               	movwf	fsr2l,c
  7325  000454  6ADA               	clrf	fsr2h,c
  7326  000456  50DF               	movf	indf2,w,c
  7327  000458  6E42               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7328                           
  7329                           ; BSR set to: 2
  7330                           ;usb_device.c: 2829: }
  7331                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7332  00045A  B042               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7333  00045C  D003               	goto	i2l3469
  7334                           
  7335                           ; BSR set to: 2
  7336                           ;usb_device.c: 2836: {
  7337                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7338  00045E  0EFB               	movlw	251
  7339  000460  1643               	andwf	USBStdFeatureReqHandler@p,f,c
  7340  000462  D002               	goto	L7
  7341  000464                     i2l3469:
  7342                           
  7343                           ; BSR set to: 2
  7344                           ;usb_device.c: 2839: else
  7345                           ;usb_device.c: 2840: {
  7346                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7347  000464  0E04               	movlw	4
  7348  000466  1243               	iorwf	USBStdFeatureReqHandler@p,f,c
  7349  000468                     L7:
  7350  000468  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7351                           
  7352                           ; BSR set to: 2
  7353                           ;usb_device.c: 2842: }
  7354                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7355  00046A  BF34               	btfsc	52,7,b	;volatile
  7356  00046C  D003               	goto	i2l3475
  7357                           
  7358                           ; BSR set to: 2
  7359                           ;usb_device.c: 2848: {
  7360                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7361  00046E  D87D               	call	PL58	;call to abstracted procedure
  7362  000470  0F60               	addlw	low _pBDTEntryOut
  7363  000472  D002               	goto	L8
  7364  000474                     i2l3475:
  7365                           
  7366                           ; BSR set to: 2
  7367                           ;usb_device.c: 2851: else
  7368                           ;usb_device.c: 2852: {
  7369                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7370  000474  D87A               	call	PL58	;call to abstracted procedure
  7371  000476  0F0F               	addlw	low _pBDTEntryIn
  7372  000478                     L8:
  7373  000478  6ED9               	movwf	fsr2l,c
  7374  00047A  6ADA               	clrf	fsr2h,c
  7375  00047C  C043  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7376  000480  C044  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7377                           
  7378                           ; BSR set to: 2
  7379                           ;usb_device.c: 2854: }
  7380                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7381  000484  0E03               	movlw	3
  7382  000486  1931               	xorwf	49,w,b	;volatile
  7383  000488  E114               	bnz	i2l3487
  7384                           
  7385                           ; BSR set to: 2
  7386                           ;usb_device.c: 2858: {
  7387                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7388  00048A  D856               	call	PL22	;call to abstracted procedure
  7389  00048C  AEDF               	btfss	indf2,7,c
  7390  00048E  D00B               	goto	i2l694
  7391                           
  7392                           ; BSR set to: 2
  7393                           ;usb_device.c: 2860: {
  7394                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7395  000490  BF34               	btfsc	52,7,b	;volatile
  7396  000492  D003               	goto	i2l3485
  7397                           
  7398                           ; BSR set to: 2
  7399                           ;usb_device.c: 2864: {
  7400                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7401  000494  D86F               	call	PL60	;call to abstracted procedure
  7402  000496  0F70               	addlw	low _ep_data_out
  7403  000498  D002               	goto	L9
  7404  00049A                     i2l3485:
  7405                           
  7406                           ; BSR set to: 2
  7407                           ;usb_device.c: 2867: else
  7408                           ;usb_device.c: 2868: {
  7409                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7410  00049A  D86C               	call	PL60	;call to abstracted procedure
  7411  00049C  0F73               	addlw	low _ep_data_in
  7412  00049E                     L9:
  7413  00049E  6ED9               	movwf	fsr2l,c
  7414  0004A0  6ADA               	clrf	fsr2h,c
  7415  0004A2  0100               	movlb	0	; () banked
  7416  0004A4  82DF               	bsf	indf2,1,c
  7417  0004A6                     i2l694:
  7418                           
  7419                           ;usb_device.c: 2870: }
  7420                           ;usb_device.c: 2871: }
  7421                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7422  0004A6  D848               	call	PL22	;call to abstracted procedure
  7423  0004A8  0E00               	movlw	0
  7424  0004AA  84DB               	bsf	plusw2,2,c
  7425                           
  7426                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7427  0004AC  D845               	call	PL22	;call to abstracted procedure
  7428  0004AE  8EDB               	bsf	plusw2,7,c
  7429                           
  7430                           ;usb_device.c: 2876: }
  7431  0004B0  0C00               	retlw	0
  7432  0004B2                     i2l3487:
  7433                           
  7434                           ; BSR set to: 2
  7435                           ;usb_device.c: 2877: else
  7436                           ;usb_device.c: 2878: {
  7437                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7438  0004B2  0E04               	movlw	4
  7439  0004B4  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7440  0004B6  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7441                           
  7442                           ; BSR set to: 2
  7443                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7444  0004B8  D83F               	call	PL22	;call to abstracted procedure
  7445  0004BA  AEDF               	btfss	indf2,7,c
  7446  0004BC  D00A               	goto	i2l3497
  7447                           
  7448                           ; BSR set to: 2
  7449                           ;usb_device.c: 2885: {
  7450                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7451  0004BE  D83C               	call	PL22	;call to abstracted procedure
  7452  0004C0  0E7F               	movlw	127
  7453  0004C2  16DF               	andwf	indf2,f,c
  7454                           
  7455                           ; BSR set to: 2
  7456                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7457  0004C4  D839               	call	PL22	;call to abstracted procedure
  7458  0004C6  0E00               	movlw	0
  7459  0004C8  8CDB               	bsf	plusw2,6,c
  7460                           
  7461                           ; BSR set to: 2
  7462                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7463  0004CA  D83B               	call	PL36	;call to abstracted procedure
  7464  0004CC  ECCB  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7465                           
  7466                           ;usb_device.c: 2891: }
  7467  0004D0  D003               	goto	i2l3499
  7468  0004D2                     i2l3497:
  7469                           
  7470                           ; BSR set to: 2
  7471                           ;usb_device.c: 2892: else
  7472                           ;usb_device.c: 2893: {
  7473                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7474  0004D2  D832               	call	PL22	;call to abstracted procedure
  7475  0004D4  0E00               	movlw	0
  7476  0004D6  8CDB               	bsf	plusw2,6,c
  7477  0004D8                     i2l3499:
  7478                           
  7479                           ;usb_device.c: 2896: }
  7480                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7481  0004D8  0E04               	movlw	4
  7482  0004DA  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7483  0004DC  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7484                           
  7485                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7486  0004DE  B242               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7487  0004E0  D003               	goto	i2l702
  7488  0004E2  D82A               	call	PL22	;call to abstracted procedure
  7489  0004E4  AEDF               	btfss	indf2,7,c
  7490  0004E6  D013               	goto	i2l3513
  7491  0004E8                     i2l702:
  7492                           
  7493                           ;usb_device.c: 2907: {
  7494                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7495  0004E8  0102               	movlb	2	; () banked
  7496  0004EA  BF34               	btfsc	52,7,b	;volatile
  7497  0004EC  D003               	goto	i2l3507
  7498                           
  7499                           ; BSR set to: 2
  7500                           ;usb_device.c: 2909: {
  7501                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7502  0004EE  D842               	call	PL60	;call to abstracted procedure
  7503  0004F0  0F70               	addlw	low _ep_data_out
  7504  0004F2  D002               	goto	L10
  7505  0004F4                     i2l3507:
  7506                           
  7507                           ; BSR set to: 2
  7508                           ;usb_device.c: 2912: else
  7509                           ;usb_device.c: 2913: {
  7510                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7511  0004F4  D83F               	call	PL60	;call to abstracted procedure
  7512  0004F6  0F73               	addlw	low _ep_data_in
  7513  0004F8                     L10:
  7514  0004F8  6ED9               	movwf	fsr2l,c
  7515  0004FA  6ADA               	clrf	fsr2h,c
  7516  0004FC  0100               	movlb	0	; () banked
  7517  0004FE  92DF               	bcf	indf2,1,c
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;usb_device.c: 2915: }
  7521                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7522  000500  D81B               	call	PL22	;call to abstracted procedure
  7523  000502  0E3B               	movlw	59
  7524  000504  16DF               	andwf	indf2,f,c
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7528  000506  D81D               	call	PL36	;call to abstracted procedure
  7529  000508  ECCB  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7530                           
  7531                           ;usb_device.c: 2921: }
  7532  00050C  D003               	goto	i2l3515
  7533  00050E                     i2l3513:
  7534                           
  7535                           ;usb_device.c: 2922: else
  7536                           ;usb_device.c: 2923: {
  7537                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7538  00050E  D814               	call	PL22	;call to abstracted procedure
  7539  000510  0E3B               	movlw	59
  7540  000512  16DF               	andwf	indf2,f,c
  7541  000514                     i2l3515:
  7542                           
  7543                           ;usb_device.c: 2926: }
  7544                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7545  000514  0102               	movlb	2	; () banked
  7546  000516  5134               	movf	52,w,b	;volatile
  7547  000518  0B0F               	andlw	15
  7548  00051A  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7549  00051C  6A3F               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  7550  00051E  0E53               	movlw	83
  7551  000520  243E               	addwf	??_USBStdFeatureReqHandler,w,c
  7552  000522  6E40               	movwf	USBStdFeatureReqHandler@pUEP,c
  7553  000524  0E0F               	movlw	15
  7554  000526  203F               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  7555  000528  6E41               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7556                           
  7557                           ; BSR set to: 2
  7558                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7559  00052A  C040  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7560  00052E  C041  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7561  000532  0EFE               	movlw	254
  7562  000534  16DF               	andwf	indf2,f,c
  7563  000536  0CFE               	retlw	254	;funcret
  7564  000538                     __end_of_USBStdFeatureReqHandler:
  7565                           	opt stack 0
  7566  000538                     PL22:
  7567                           	opt stack 17
  7568  000538  C043  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7569  00053C  C044  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7570  000540  0012               	return	
  7571  000542                     __end_ofPL22:
  7572                           	opt stack 0
  7573  000542                     PL36:
  7574                           	opt stack 17
  7575  000542  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7576  000544  0E05               	movlw	5
  7577  000546  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7578  000548  C043  F038         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7579  00054C  C044  F039         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7580  000550  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7581  000552  0E02               	movlw	2
  7582  000554  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7583  000556  0C02               	retlw	2
  7584  000558                     __end_ofPL36:
  7585                           	opt stack 0
  7586  000558                     PL56:
  7587                           	opt stack 17
  7588  000558  CFDE F043          	movff	postinc2,USBStdFeatureReqHandler@p
  7589  00055C  CFDD F044          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7590  000560  5134               	movf	52,w,b	;volatile
  7591  000562  0B0F               	andlw	15
  7592  000564  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7593  000566  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7594  000568  0012               	return	
  7595  00056A                     __end_ofPL56:
  7596                           	opt stack 0
  7597  00056A                     PL58:
  7598                           	opt stack 21
  7599  00056A  5134               	movf	52,w,b	;volatile
  7600  00056C  0B0F               	andlw	15
  7601  00056E  0D02               	mullw	2
  7602  000570  50F3               	movf	prodl,w,c
  7603  000572  0012               	return	
  7604  000574                     __end_ofPL58:
  7605                           	opt stack 0
  7606  000574                     PL60:
  7607                           	opt stack 17
  7608  000574  5134               	movf	52,w,b	;volatile
  7609  000576  0B0F               	andlw	15
  7610  000578  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7611  00057A  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7612  00057C  0012               	return	
  7613  00057E                     __end_ofPL60:
  7614                           	opt stack 0
  7615                           tblptru	equ	0xFF8
  7616                           tblptrh	equ	0xFF7
  7617                           tblptrl	equ	0xFF6
  7618                           tablat	equ	0xFF5
  7619                           prodh	equ	0xFF4
  7620                           prodl	equ	0xFF3
  7621                           intcon	equ	0xFF2
  7622                           postinc0	equ	0xFEE
  7623                           wreg	equ	0xFE8
  7624                           indf1	equ	0xFE7
  7625                           postdec1	equ	0xFE5
  7626                           fsr1h	equ	0xFE2
  7627                           fsr1l	equ	0xFE1
  7628                           indf2	equ	0xFDF
  7629                           postinc2	equ	0xFDE
  7630                           postdec2	equ	0xFDD
  7631                           plusw2	equ	0xFDB
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7637 ;; Defined at:
  7638 ;;		line 51 in file "picLibs/usb_events.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  event           2   12[COMRAM] enum E3370
  7641 ;;  pdata           2   14[COMRAM] PTR void 
  7642 ;;		 -> RAM(767), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7643 ;;		 -> BDT(48), 
  7644 ;;  size            2   16[COMRAM] unsigned int 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;		None
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      unsigned char 
  7649 ;; Registers used:
  7650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7656 ;;      Params:         6       0       0       0
  7657 ;;      Locals:         0       0       0       0
  7658 ;;      Temps:          2       0       0       0
  7659 ;;      Totals:         8       0       0       0
  7660 ;;Total ram usage:        8 bytes
  7661 ;; Hardware stack levels used:    1
  7662 ;; Hardware stack levels required when called:    3
  7663 ;; This function calls:
  7664 ;;		_APP_DeviceCDCBasicDemoInitialize
  7665 ;;		_APP_LEDUpdateUSBStatus
  7666 ;;		_CDCInitEP
  7667 ;;		_USBCheckCDCRequest
  7668 ;;		i2_SYSTEM_Initialize
  7669 ;; This function is called by:
  7670 ;;		_USBDeviceTasks
  7671 ;;		_USBStdSetCfgHandler
  7672 ;;		_USBSuspend
  7673 ;;		_USBWakeFromSuspend
  7674 ;;		_USBCtrlTrfSetupHandler
  7675 ;;		_USBCheckStdRequest
  7676 ;;		_USBStdFeatureReqHandler
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text40
  7681  001396                     __ptext40:
  7682                           	opt stack 0
  7683  001396                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7684                           	opt stack 21
  7685                           
  7686                           ;usb_events.c: 53: switch( (int) event )
  7687                           
  7688                           ;incstack = 0
  7689  001396  D00E               	goto	i2l3227
  7690  001398                     i2l3215:
  7691                           
  7692                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  7693  001398  EC5C  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7694                           
  7695                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7696  00139C  0E01               	movlw	1
  7697  00139E  EF03  F00D         	goto	i2_SYSTEM_Initialize
  7698  0013A2                     i2l3217:
  7699                           
  7700                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  7701  0013A2  EC5C  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7702                           
  7703                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7704  0013A6  0E02               	movlw	2
  7705  0013A8  EF03  F00D         	goto	i2_SYSTEM_Initialize
  7706  0013AC                     i2l3219:
  7707                           
  7708                           ;usb_events.c: 91: CDCInitEP();
  7709  0013AC  EC11  F00B         	call	_CDCInitEP	;wreg free
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;usb_events.c: 92: APP_DeviceCDCBasicDemoInitialize();
  7713  0013B0  EF49  F00D         	goto	_APP_DeviceCDCBasicDemoInitialize	;wreg free
  7714  0013B4                     i2l3227:
  7715  0013B4  C036  F03C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7716  0013B8  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7717                           
  7718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7719                           ; Switch size 1, requested type "space"
  7720                           ; Number of cases is 2, Range of values is 0 to 127
  7721                           ; switch strategies available:
  7722                           ; Name         Instructions Cycles
  7723                           ; simple_byte            7     4 (average)
  7724                           ;	Chosen strategy is simple_byte
  7725  0013BC  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7726  0013BE  E004               	bz	i2l5059
  7727  0013C0  0A7F               	xorlw	127	; case 127
  7728  0013C2  A4D8               	btfss	status,2,c
  7729  0013C4  0012               	return	
  7730  0013C6  D01A               	goto	i2l5061
  7731  0013C8                     i2l5059:
  7732                           
  7733                           ; Switch size 1, requested type "space"
  7734                           ; Number of cases is 8, Range of values is 1 to 117
  7735                           ; switch strategies available:
  7736                           ; Name         Instructions Cycles
  7737                           ; simple_byte           25    13 (average)
  7738                           ;	Chosen strategy is simple_byte
  7739  0013C8  503C               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7740  0013CA  0A01               	xorlw	1	; case 1
  7741  0013CC  E0EF               	bz	i2l3219
  7742  0013CE  0A03               	xorlw	3	; case 2
  7743  0013D0  B4D8               	btfsc	status,2,c
  7744  0013D2  0012               	return	
  7745  0013D4  0A01               	xorlw	1	; case 3
  7746  0013D6  E102 EF32  F008    	bz	_USBCheckCDCRequest
  7747  0013DC  0A06               	xorlw	6	; case 5
  7748  0013DE  B4D8               	btfsc	status,2,c
  7749  0013E0  0012               	return	
  7750  0013E2  0A77               	xorlw	119	; case 114
  7751  0013E4  B4D8               	btfsc	status,2,c
  7752  0013E6  0012               	return	
  7753  0013E8  0A01               	xorlw	1	; case 115
  7754  0013EA  E102 EF5C  F009    	bz	_APP_LEDUpdateUSBStatus
  7755  0013F0  0A07               	xorlw	7	; case 116
  7756  0013F2  E0D7               	bz	i2l3217
  7757  0013F4  0A01               	xorlw	1	; case 117
  7758  0013F6  A4D8               	btfss	status,2,c
  7759  0013F8  0012               	return	
  7760  0013FA  D7CE               	goto	i2l3215
  7761  0013FC                     i2l5061:
  7762                           
  7763                           ; Switch size 1, requested type "space"
  7764                           ; Number of cases is 1, Range of values is 255 to 255
  7765                           ; switch strategies available:
  7766                           ; Name         Instructions Cycles
  7767                           ; simple_byte            4     3 (average)
  7768                           ;	Chosen strategy is simple_byte
  7769  0013FC  1C3C               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7770  0013FE  0012               	return	
  7771  001400                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7772                           	opt stack 0
  7773                           tblptru	equ	0xFF8
  7774                           tblptrh	equ	0xFF7
  7775                           tblptrl	equ	0xFF6
  7776                           tablat	equ	0xFF5
  7777                           prodh	equ	0xFF4
  7778                           prodl	equ	0xFF3
  7779                           intcon	equ	0xFF2
  7780                           postinc0	equ	0xFEE
  7781                           wreg	equ	0xFE8
  7782                           indf1	equ	0xFE7
  7783                           postdec1	equ	0xFE5
  7784                           fsr1h	equ	0xFE2
  7785                           fsr1l	equ	0xFE1
  7786                           indf2	equ	0xFDF
  7787                           postinc2	equ	0xFDE
  7788                           postdec2	equ	0xFDD
  7789                           plusw2	equ	0xFDB
  7790                           fsr2h	equ	0xFDA
  7791                           fsr2l	equ	0xFD9
  7792                           status	equ	0xFD8
  7793                           
  7794 ;; *************** function i2_SYSTEM_Initialize *****************
  7795 ;; Defined at:
  7796 ;;		line 66 in file "picLibs/system.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  state           1    wreg     enum E3329
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  state           1    1[COMRAM] enum E3329
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  1    wreg      void 
  7803 ;; Registers used:
  7804 ;;		wreg, status,2, status,0, cstack
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7810 ;;      Params:         0       0       0       0
  7811 ;;      Locals:         1       0       0       0
  7812 ;;      Temps:          0       0       0       0
  7813 ;;      Totals:         1       0       0       0
  7814 ;;Total ram usage:        1 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    1
  7817 ;; This function calls:
  7818 ;;		i2_BUTTON_Enable
  7819 ;;		i2_LED_Enable
  7820 ;; This function is called by:
  7821 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text41
  7826  001A06                     __ptext41:
  7827                           	opt stack 0
  7828  001A06                     i2_SYSTEM_Initialize:
  7829                           	opt stack 22
  7830                           
  7831                           ;incstack = 0
  7832                           ;i2SYSTEM_Initialize@state stored from wreg
  7833  001A06  6E2B               	movwf	i2SYSTEM_Initialize@state,c
  7834                           
  7835                           ;system.c: 68: switch(state)
  7836  001A08  D006               	goto	i2l3209
  7837  001A0A                     i2l3205:
  7838                           
  7839                           ;system.c: 71: LED_Enable(LED_D1);
  7840  001A0A  0E01               	movlw	1
  7841  001A0C  EC66  F00C         	call	i2_LED_Enable
  7842                           
  7843                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  7844  001A10  0E01               	movlw	1
  7845  001A12  EF5F  F00D         	goto	i2_BUTTON_Enable
  7846  001A16                     i2l3209:
  7847  001A16  502B               	movf	i2SYSTEM_Initialize@state,w,c
  7848                           
  7849                           ; Switch size 1, requested type "space"
  7850                           ; Number of cases is 3, Range of values is 0 to 2
  7851                           ; switch strategies available:
  7852                           ; Name         Instructions Cycles
  7853                           ; simple_byte           10     6 (average)
  7854                           ;	Chosen strategy is simple_byte
  7855  001A18  E0F8               	bz	i2l3205
  7856  001A1A  D000               	goto	PL104	;call to abstracted procedure
  7857  001A1C                     __end_ofi2_SYSTEM_Initialize:
  7858                           	opt stack 0
  7859  001A1C                     PL104:
  7860                           	opt stack 19
  7861  001A1C  0A01               	xorlw	1	; case 1
  7862  001A1E  A4D8               	btfss	status,2,c
  7863  001A20  0A03               	xorlw	3	; case 2
  7864  001A22  0012               	return	
  7865  001A24                     __end_ofPL104:
  7866                           	opt stack 0
  7867                           tblptru	equ	0xFF8
  7868                           tblptrh	equ	0xFF7
  7869                           tblptrl	equ	0xFF6
  7870                           tablat	equ	0xFF5
  7871                           prodh	equ	0xFF4
  7872                           prodl	equ	0xFF3
  7873                           intcon	equ	0xFF2
  7874                           postinc0	equ	0xFEE
  7875                           wreg	equ	0xFE8
  7876                           indf1	equ	0xFE7
  7877                           postdec1	equ	0xFE5
  7878                           fsr1h	equ	0xFE2
  7879                           fsr1l	equ	0xFE1
  7880                           indf2	equ	0xFDF
  7881                           postinc2	equ	0xFDE
  7882                           postdec2	equ	0xFDD
  7883                           plusw2	equ	0xFDB
  7884                           fsr2h	equ	0xFDA
  7885                           fsr2l	equ	0xFD9
  7886                           status	equ	0xFD8
  7887                           
  7888 ;; *************** function i2_LED_Enable *****************
  7889 ;; Defined at:
  7890 ;;		line 220 in file "picLibs/leds.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  led             1    wreg     enum E2
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  led             1    0[COMRAM] enum E2
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7904 ;;      Params:         0       0       0       0
  7905 ;;      Locals:         1       0       0       0
  7906 ;;      Temps:          0       0       0       0
  7907 ;;      Totals:         1       0       0       0
  7908 ;;Total ram usage:        1 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; This function calls:
  7911 ;;		Nothing
  7912 ;; This function is called by:
  7913 ;;		i2_SYSTEM_Initialize
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text42
  7918  0018CC                     __ptext42:
  7919                           	opt stack 0
  7920  0018CC                     i2_LED_Enable:
  7921                           	opt stack 22
  7922                           
  7923                           ;incstack = 0
  7924                           ;i2LED_Enable@led stored from wreg
  7925  0018CC  6E2A               	movwf	i2LED_Enable@led,c
  7926                           
  7927                           ;leds.c: 222: switch(led)
  7928  0018CE  D008               	goto	i2l3065
  7929  0018D0                     i2l279:
  7930                           
  7931                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  7932  0018D0  9094               	bcf	3988,0,c	;volatile
  7933                           
  7934                           ;leds.c: 226: break;
  7935  0018D2  0012               	return	
  7936  0018D4                     i2l281:
  7937                           
  7938                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  7939  0018D4  9294               	bcf	3988,1,c	;volatile
  7940                           
  7941                           ;leds.c: 230: break;
  7942  0018D6  0012               	return	
  7943  0018D8                     i2l282:
  7944                           
  7945                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  7946  0018D8  9494               	bcf	3988,2,c	;volatile
  7947                           
  7948                           ;leds.c: 234: break;
  7949  0018DA  0012               	return	
  7950  0018DC                     i2l283:
  7951                           
  7952                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  7953  0018DC  9694               	bcf	3988,3,c	;volatile
  7954                           
  7955                           ;leds.c: 238: break;
  7956  0018DE  0012               	return	
  7957  0018E0                     i2l3065:
  7958  0018E0  502A               	movf	i2LED_Enable@led,w,c
  7959                           
  7960                           ; Switch size 1, requested type "space"
  7961                           ; Number of cases is 5, Range of values is 0 to 4
  7962                           ; switch strategies available:
  7963                           ; Name         Instructions Cycles
  7964                           ; simple_byte           16     9 (average)
  7965                           ;	Chosen strategy is simple_byte
  7966  0018E2  B4D8               	btfsc	status,2,c
  7967  0018E4  0012               	return	
  7968  0018E6  0A01               	xorlw	1	; case 1
  7969  0018E8  E0F3               	bz	i2l279
  7970  0018EA  0A03               	xorlw	3	; case 2
  7971  0018EC  E0F3               	bz	i2l281
  7972  0018EE  0A01               	xorlw	1	; case 3
  7973  0018F0  E0F3               	bz	i2l282
  7974  0018F2  0A07               	xorlw	7	; case 4
  7975  0018F4  E0F3               	bz	i2l283
  7976  0018F6  0012               	return		;funcret
  7977  0018F8                     __end_ofi2_LED_Enable:
  7978                           	opt stack 0
  7979                           tblptru	equ	0xFF8
  7980                           tblptrh	equ	0xFF7
  7981                           tblptrl	equ	0xFF6
  7982                           tablat	equ	0xFF5
  7983                           prodh	equ	0xFF4
  7984                           prodl	equ	0xFF3
  7985                           intcon	equ	0xFF2
  7986                           postinc0	equ	0xFEE
  7987                           wreg	equ	0xFE8
  7988                           indf1	equ	0xFE7
  7989                           postdec1	equ	0xFE5
  7990                           fsr1h	equ	0xFE2
  7991                           fsr1l	equ	0xFE1
  7992                           indf2	equ	0xFDF
  7993                           postinc2	equ	0xFDE
  7994                           postdec2	equ	0xFDD
  7995                           plusw2	equ	0xFDB
  7996                           fsr2h	equ	0xFDA
  7997                           fsr2l	equ	0xFD9
  7998                           status	equ	0xFD8
  7999                           
  8000 ;; *************** function i2_BUTTON_Enable *****************
  8001 ;; Defined at:
  8002 ;;		line 85 in file "picLibs/buttons.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;  button          1    wreg     enum E3304
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;  button          1    0[COMRAM] enum E3304
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		wreg, status,2, status,0
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8016 ;;      Params:         0       0       0       0
  8017 ;;      Locals:         1       0       0       0
  8018 ;;      Temps:          0       0       0       0
  8019 ;;      Totals:         1       0       0       0
  8020 ;;Total ram usage:        1 bytes
  8021 ;; Hardware stack levels used:    1
  8022 ;; This function calls:
  8023 ;;		Nothing
  8024 ;; This function is called by:
  8025 ;;		i2_SYSTEM_Initialize
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           	psect	text43
  8030  001ABE                     __ptext43:
  8031                           	opt stack 0
  8032  001ABE                     i2_BUTTON_Enable:
  8033                           	opt stack 22
  8034                           
  8035                           ;incstack = 0
  8036                           ;i2BUTTON_Enable@button stored from wreg
  8037  001ABE  6E2A               	movwf	i2BUTTON_Enable@button,c
  8038                           
  8039                           ;buttons.c: 87: switch(button)
  8040  001AC0  502A               	movf	i2BUTTON_Enable@button,w,c
  8041                           
  8042                           ; Switch size 1, requested type "space"
  8043                           ; Number of cases is 2, Range of values is 0 to 1
  8044                           ; switch strategies available:
  8045                           ; Name         Instructions Cycles
  8046                           ; simple_byte            7     4 (average)
  8047                           ;	Chosen strategy is simple_byte
  8048  001AC2  D000               	goto	PL116	;call to abstracted procedure
  8049  001AC4                     __end_ofi2_BUTTON_Enable:
  8050                           	opt stack 0
  8051  001AC4                     PL116:
  8052                           	opt stack 19
  8053  001AC4  A4D8               	btfss	status,2,c
  8054  001AC6  0A01               	xorlw	1	; case 1
  8055  001AC8  0012               	return	
  8056  001ACA                     __end_ofPL116:
  8057                           	opt stack 0
  8058                           tblptru	equ	0xFF8
  8059                           tblptrh	equ	0xFF7
  8060                           tblptrl	equ	0xFF6
  8061                           tablat	equ	0xFF5
  8062                           prodh	equ	0xFF4
  8063                           prodl	equ	0xFF3
  8064                           intcon	equ	0xFF2
  8065                           postinc0	equ	0xFEE
  8066                           wreg	equ	0xFE8
  8067                           indf1	equ	0xFE7
  8068                           postdec1	equ	0xFE5
  8069                           fsr1h	equ	0xFE2
  8070                           fsr1l	equ	0xFE1
  8071                           indf2	equ	0xFDF
  8072                           postinc2	equ	0xFDE
  8073                           postdec2	equ	0xFDD
  8074                           plusw2	equ	0xFDB
  8075                           fsr2h	equ	0xFDA
  8076                           fsr2l	equ	0xFD9
  8077                           status	equ	0xFD8
  8078                           
  8079 ;; *************** function _USBCheckCDCRequest *****************
  8080 ;; Defined at:
  8081 ;;		line 147 in file "picLibs/usb_device_cdc.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 3F/2
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8095 ;;      Params:         0       0       0       0
  8096 ;;      Locals:         0       0       0       0
  8097 ;;      Temps:          0       0       0       0
  8098 ;;      Totals:         0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text44
  8109  001064                     __ptext44:
  8110                           	opt stack 0
  8111  001064                     _USBCheckCDCRequest:
  8112                           	opt stack 23
  8113                           
  8114                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8115                           
  8116                           ;incstack = 0
  8117  001064  0102               	movlb	2	; () banked
  8118  001066  5130               	movf	48,w,b	;volatile
  8119  001068  0B1F               	andlw	31
  8120  00106A  06E8               	decf	wreg,f,c
  8121  00106C  E001               	bz	i2l3143
  8122  00106E  0012               	return	
  8123  001070                     i2l3143:
  8124                           
  8125                           ; BSR set to: 2
  8126                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8127  001070  3930               	swapf	48,w,b	;volatile
  8128  001072  32E8               	rrcf	wreg,f,c
  8129  001074  0B03               	andlw	3
  8130  001076  06E8               	decf	wreg,f,c
  8131  001078  E001               	bz	i2l3147
  8132  00107A  0012               	return	
  8133  00107C                     i2l3147:
  8134                           
  8135                           ; BSR set to: 2
  8136                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8137                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8138  00107C  5134               	movf	52,w,b	;volatile
  8139  00107E  E027               	bz	i2l3183
  8140                           
  8141                           ; BSR set to: 2
  8142  001080  0534               	decf	52,w,b	;volatile
  8143  001082  E025               	bz	i2l3183
  8144  001084  0012               	return	
  8145  001086                     i2l3153:
  8146                           
  8147                           ; BSR set to: 2
  8148                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8149  001086  0EC2               	movlw	low _dummy_encapsulated_cmd_response
  8150  001088  6E09               	movwf	_inPipes,c	;volatile
  8151  00108A  6A0A               	clrf	_inPipes+1,c	;volatile
  8152                           
  8153                           ; BSR set to: 2
  8154                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8155  00108C  6A0E               	clrf	_inPipes+5,c	;volatile
  8156  00108E  0E08               	movlw	8
  8157  001090  6E0D               	movwf	_inPipes+4,c	;volatile
  8158                           
  8159                           ; BSR set to: 2
  8160                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8161  001092  800C               	bsf	_inPipes+3,0,c	;volatile
  8162                           
  8163                           ; BSR set to: 2
  8164                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8165  001094  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8166                           
  8167                           ;usb_device_cdc.c: 175: break;
  8168  001096  0C08               	retlw	8
  8169  001098                     i2l3161:
  8170                           
  8171                           ; BSR set to: 2
  8172                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8173  001098  0EC2               	movlw	low _dummy_encapsulated_cmd_response
  8174  00109A  6E09               	movwf	_inPipes,c	;volatile
  8175  00109C  6A0A               	clrf	_inPipes+1,c	;volatile
  8176                           
  8177                           ; BSR set to: 2
  8178                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8179  00109E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8180                           
  8181                           ;usb_device_cdc.c: 180: break;
  8182  0010A0  0012               	return	
  8183  0010A2                     i2l769:
  8184                           
  8185                           ; BSR set to: 2
  8186                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8187  0010A2  C236 F005          	movff	566,_outPipes+4	;volatile
  8188  0010A6  C237 F006          	movff	567,_outPipes+5	;volatile
  8189                           
  8190                           ; BSR set to: 2
  8191                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8192  0010AA  0ECA               	movlw	low _line_coding
  8193  0010AC  6E01               	movwf	_outPipes,c	;volatile
  8194                           
  8195                           ; BSR set to: 2
  8196                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8197  0010AE  6A07               	clrf	_outPipes+6,c	;volatile
  8198  0010B0  6A08               	clrf	_outPipes+7,c	;volatile
  8199                           
  8200                           ; BSR set to: 2
  8201                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8202  0010B2  8E04               	bsf	_outPipes+3,7,c	;volatile
  8203                           
  8204                           ;usb_device_cdc.c: 189: break;
  8205  0010B4  0012               	return	
  8206  0010B6                     i2l3171:
  8207                           
  8208                           ; BSR set to: 2
  8209                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8210  0010B6  0ECA               	movlw	low _line_coding
  8211  0010B8  6E09               	movwf	_inPipes,c	;volatile
  8212  0010BA  6A0A               	clrf	_inPipes+1,c	;volatile
  8213                           
  8214                           ; BSR set to: 2
  8215  0010BC  6A0E               	clrf	_inPipes+5,c	;volatile
  8216  0010BE  0E07               	movlw	7
  8217  0010C0  6E0D               	movwf	_inPipes+4,c	;volatile
  8218                           
  8219                           ; BSR set to: 2
  8220  0010C2  0EC1               	movlw	193
  8221  0010C4  6E0C               	movwf	_inPipes+3,c	;volatile
  8222                           
  8223                           ;usb_device_cdc.c: 196: break;
  8224  0010C6  0CC1               	retlw	193
  8225  0010C8                     i2l3177:
  8226                           
  8227                           ; BSR set to: 2
  8228                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8229  0010C8  5132               	movf	50,w,b	;volatile
  8230                           
  8231                           ; BSR set to: 2
  8232                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8233  0010CA  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8234                           
  8235                           ;usb_device_cdc.c: 232: break;
  8236  0010CC  0012               	return	
  8237  0010CE                     i2l3183:
  8238                           
  8239                           ; BSR set to: 2
  8240  0010CE  5131               	movf	49,w,b	;volatile
  8241                           
  8242                           ; Switch size 1, requested type "space"
  8243                           ; Number of cases is 5, Range of values is 0 to 34
  8244                           ; switch strategies available:
  8245                           ; Name         Instructions Cycles
  8246                           ; simple_byte           16     9 (average)
  8247                           ;	Chosen strategy is simple_byte
  8248  0010D0  E0DA               	bz	i2l3153
  8249  0010D2  0A01               	xorlw	1	; case 1
  8250  0010D4  E0E1               	bz	i2l3161
  8251  0010D6  0A21               	xorlw	33	; case 32
  8252  0010D8  E0E4               	bz	i2l769
  8253  0010DA  0A01               	xorlw	1	; case 33
  8254  0010DC  E0EC               	bz	i2l3171
  8255  0010DE  0A03               	xorlw	3	; case 34
  8256  0010E0  E0F3               	bz	i2l3177
  8257                           
  8258                           ; BSR set to: 2
  8259  0010E2  0012               	return		;funcret
  8260  0010E4                     __end_of_USBCheckCDCRequest:
  8261                           	opt stack 0
  8262                           tblptru	equ	0xFF8
  8263                           tblptrh	equ	0xFF7
  8264                           tblptrl	equ	0xFF6
  8265                           tablat	equ	0xFF5
  8266                           prodh	equ	0xFF4
  8267                           prodl	equ	0xFF3
  8268                           intcon	equ	0xFF2
  8269                           postinc0	equ	0xFEE
  8270                           wreg	equ	0xFE8
  8271                           indf1	equ	0xFE7
  8272                           postdec1	equ	0xFE5
  8273                           fsr1h	equ	0xFE2
  8274                           fsr1l	equ	0xFE1
  8275                           indf2	equ	0xFDF
  8276                           postinc2	equ	0xFDE
  8277                           postdec2	equ	0xFDD
  8278                           plusw2	equ	0xFDB
  8279                           fsr2h	equ	0xFDA
  8280                           fsr2l	equ	0xFD9
  8281                           status	equ	0xFD8
  8282                           
  8283 ;; *************** function _CDCInitEP *****************
  8284 ;; Defined at:
  8285 ;;		line 294 in file "picLibs/usb_device_cdc.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;		None
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;		None
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      void 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 3F/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8299 ;;      Params:         0       0       0       0
  8300 ;;      Locals:         0       0       0       0
  8301 ;;      Temps:          0       0       0       0
  8302 ;;      Totals:         0       0       0       0
  8303 ;;Total ram usage:        0 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    2
  8306 ;; This function calls:
  8307 ;;		_USBEnableEndpoint
  8308 ;;		i2_USBTransferOnePacket
  8309 ;; This function is called by:
  8310 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           	psect	text45
  8315  001622                     __ptext45:
  8316                           	opt stack 0
  8317  001622                     _CDCInitEP:
  8318                           	opt stack 21
  8319                           
  8320                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8321                           
  8322                           ; BSR set to: 2
  8323                           ;incstack = 0
  8324  001622  0100               	movlb	0	; () banked
  8325  001624  6BCA               	clrf	_line_coding& (0+255),b
  8326  001626  0E4B               	movlw	75
  8327  001628  6FCB               	movwf	(_line_coding+1)& (0+255),b
  8328  00162A  6BCC               	clrf	(_line_coding+2)& (0+255),b
  8329  00162C  6BCD               	clrf	(_line_coding+3)& (0+255),b
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8333  00162E  6BCE               	clrf	(_line_coding+4)& (0+255),b
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8337  001630  6BCF               	clrf	(_line_coding+5)& (0+255),b
  8338                           
  8339                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8340  001632  0E08               	movlw	8
  8341  001634  6FD0               	movwf	(_line_coding+6)& (0+255),b
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8345  001636  6A1C               	clrf	_cdc_rx_len,c
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8349  001638  0E1A               	movlw	26
  8350  00163A  6E32               	movwf	USBEnableEndpoint@options,c
  8351  00163C  0E01               	movlw	1
  8352  00163E  ECE7  F00B         	call	_USBEnableEndpoint
  8353                           
  8354                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8355  001642  0E1E               	movlw	30
  8356  001644  6E32               	movwf	USBEnableEndpoint@options,c
  8357  001646  0E02               	movlw	2
  8358  001648  ECE7  F00B         	call	_USBEnableEndpoint
  8359                           
  8360                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8361  00164C  0E00               	movlw	0
  8362  00164E  6E2A               	movwf	i2USBTransferOnePacket@dir,c
  8363  001650  0E80               	movlw	128
  8364  001652  6E2B               	movwf	i2USBTransferOnePacket@data,c
  8365  001654  0E02               	movlw	2
  8366  001656  6E2C               	movwf	i2USBTransferOnePacket@data+1,c
  8367  001658  0E40               	movlw	64
  8368  00165A  6E2D               	movwf	i2USBTransferOnePacket@len,c
  8369  00165C  0E02               	movlw	2
  8370  00165E  EC55  F006         	call	i2_USBTransferOnePacket
  8371  001662  C02A  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  8372  001666  C02B  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8373                           
  8374                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8375  00166A  0100               	movlb	0	; () banked
  8376  00166C  6B76               	clrf	_CDCDataInHandle& (0+255),b
  8377  00166E  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8381  001670  6B80               	clrf	_cdc_trf_state& (0+255),b
  8382                           
  8383                           ; BSR set to: 0
  8384  001672  0012               	return		;funcret
  8385  001674                     __end_of_CDCInitEP:
  8386                           	opt stack 0
  8387                           tblptru	equ	0xFF8
  8388                           tblptrh	equ	0xFF7
  8389                           tblptrl	equ	0xFF6
  8390                           tablat	equ	0xFF5
  8391                           prodh	equ	0xFF4
  8392                           prodl	equ	0xFF3
  8393                           intcon	equ	0xFF2
  8394                           postinc0	equ	0xFEE
  8395                           wreg	equ	0xFE8
  8396                           indf1	equ	0xFE7
  8397                           postdec1	equ	0xFE5
  8398                           fsr1h	equ	0xFE2
  8399                           fsr1l	equ	0xFE1
  8400                           indf2	equ	0xFDF
  8401                           postinc2	equ	0xFDE
  8402                           postdec2	equ	0xFDD
  8403                           plusw2	equ	0xFDB
  8404                           fsr2h	equ	0xFDA
  8405                           fsr2l	equ	0xFD9
  8406                           status	equ	0xFD8
  8407                           
  8408 ;; *************** function i2_USBTransferOnePacket *****************
  8409 ;; Defined at:
  8410 ;;		line 995 in file "picLibs/usb_device.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  ep              1    wreg     unsigned char 
  8413 ;;  dir             1    0[COMRAM] unsigned char 
  8414 ;;  data            2    1[COMRAM] PTR unsigned char 
  8415 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8416 ;;  len             1    3[COMRAM] unsigned char 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  ep              1    6[COMRAM] unsigned char 
  8419 ;;  USBTransferO    2    7[COMRAM] PTR volatile struct __BD
  8420 ;;		 -> RAM(767), NULL(0), BDT(48), 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  2    0[COMRAM] PTR void 
  8423 ;; Registers used:
  8424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8430 ;;      Params:         4       0       0       0
  8431 ;;      Locals:         3       0       0       0
  8432 ;;      Temps:          2       0       0       0
  8433 ;;      Totals:         9       0       0       0
  8434 ;;Total ram usage:        9 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		_CDCInitEP
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text46
  8444  000CAA                     __ptext46:
  8445                           	opt stack 0
  8446  000CAA                     i2_USBTransferOnePacket:
  8447                           	opt stack 22
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;incstack = 0
  8451                           ;i2USBTransferOnePacket@ep stored from wreg
  8452  000CAA  6E30               	movwf	i2USBTransferOnePacket@ep,c
  8453                           
  8454                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8455                           ;usb_device.c: 1000: if(dir != 0)
  8456  000CAC  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8457  000CAE  E003               	bz	i2l3071
  8458                           
  8459                           ;usb_device.c: 1001: {
  8460                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8461  000CB0  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8462  000CB2  D845               	call	PL84	;call to abstracted procedure
  8463  000CB4  D002               	goto	L11
  8464  000CB6                     i2l3071:
  8465                           
  8466                           ;usb_device.c: 1005: else
  8467                           ;usb_device.c: 1006: {
  8468                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8469  000CB6  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8470  000CB8  D84B               	call	PL92	;call to abstracted procedure
  8471  000CBA                     L11:
  8472  000CBA  6ED9               	movwf	fsr2l,c
  8473  000CBC  6ADA               	clrf	fsr2h,c
  8474  000CBE  CFDE F031          	movff	postinc2,i2USBTransferOnePacket@handle
  8475  000CC2  CFDD F032          	movff	postdec2,i2USBTransferOnePacket@handle+1
  8476                           
  8477                           ;usb_device.c: 1009: }
  8478                           ;usb_device.c: 1013: if(handle == 0)
  8479  000CC6  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8480  000CC8  1032               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  8481  000CCA  E103               	bnz	i2l3077
  8482                           
  8483                           ;usb_device.c: 1014: {
  8484                           ;usb_device.c: 1015: return 0;
  8485  000CCC  6A2A               	clrf	?i2_USBTransferOnePacket,c
  8486  000CCE  6A2B               	clrf	?i2_USBTransferOnePacket+1,c
  8487  000CD0  0012               	return	
  8488  000CD2                     i2l3077:
  8489                           
  8490                           ;usb_device.c: 1016: }
  8491                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8492  000CD2  EE20 F002          	lfsr	2,2
  8493  000CD6  D840               	call	PL102	;call to abstracted procedure
  8494  000CD8  C02B  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  8495  000CDC  C02C  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  8496                           
  8497                           ;usb_device.c: 1030: handle->CNT = len;
  8498  000CE0  EE20 F001          	lfsr	2,1
  8499  000CE4  D839               	call	PL102	;call to abstracted procedure
  8500  000CE6  C02D  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  8501                           
  8502                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8503  000CEA  D82D               	call	PL86	;call to abstracted procedure
  8504  000CEC  0E40               	movlw	64
  8505  000CEE  16DF               	andwf	indf2,f,c
  8506                           
  8507                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8508  000CF0  D82A               	call	PL86	;call to abstracted procedure
  8509  000CF2  0E00               	movlw	0
  8510  000CF4  86DB               	bsf	plusw2,3,c
  8511                           
  8512                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8513  000CF6  D827               	call	PL86	;call to abstracted procedure
  8514  000CF8  8EDB               	bsf	plusw2,7,c
  8515                           
  8516                           ;usb_device.c: 1036: if(dir != 0)
  8517  000CFA  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8518  000CFC  E006               	bz	i2l3089
  8519                           
  8520                           ;usb_device.c: 1037: {
  8521                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8522  000CFE  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8523  000D00  EC80  F005         	call	PL26	;call to abstracted procedure
  8524  000D04  D812               	call	PL52	;call to abstracted procedure
  8525  000D06  0F0F               	addlw	low _pBDTEntryIn
  8526  000D08  D005               	goto	L12
  8527  000D0A                     i2l3089:
  8528                           
  8529                           ;usb_device.c: 1041: else
  8530                           ;usb_device.c: 1042: {
  8531                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8532  000D0A  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8533  000D0C  EC7A  F005         	call	PL24	;call to abstracted procedure
  8534  000D10  D80C               	call	PL52	;call to abstracted procedure
  8535  000D12  0F60               	addlw	low _pBDTEntryOut
  8536  000D14                     L12:
  8537  000D14  6ED9               	movwf	fsr2l,c
  8538  000D16  6ADA               	clrf	fsr2h,c
  8539  000D18  C02E  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
  8540  000D1C  C02F  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
  8541                           
  8542                           ;usb_device.c: 1045: }
  8543                           ;usb_device.c: 1046: return (void*)handle;
  8544  000D20  C031  F02A         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  8545  000D24  C032  F02B         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  8546  000D28  0012               	return		;funcret
  8547  000D2A                     __end_ofi2_USBTransferOnePacket:
  8548                           	opt stack 0
  8549  000D2A                     PL52:
  8550                           	opt stack 22
  8551  000D2A  CFDE F02E          	movff	postinc2,??i2_USBTransferOnePacket
  8552  000D2E  CFDD F02F          	movff	postdec2,??i2_USBTransferOnePacket+1
  8553  000D32  0E04               	movlw	4
  8554  000D34  1A2E               	xorwf	??i2_USBTransferOnePacket,f,c
  8555  000D36  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8556  000D38  0D02               	mullw	2
  8557  000D3A  50F3               	movf	prodl,w,c
  8558  000D3C  0012               	return	
  8559  000D3E                     __end_ofPL52:
  8560                           	opt stack 0
  8561  000D3E                     PL84:
  8562                           	opt stack 18
  8563  000D3E  0D02               	mullw	2
  8564  000D40  50F3               	movf	prodl,w,c
  8565  000D42  0F0F               	addlw	low _pBDTEntryIn
  8566  000D44  0012               	return	
  8567  000D46                     __end_ofPL84:
  8568                           	opt stack 0
  8569  000D46                     PL86:
  8570                           	opt stack 22
  8571  000D46  C031  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  8572  000D4A  C032  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  8573  000D4E  0012               	return	
  8574  000D50                     __end_ofPL86:
  8575                           	opt stack 0
  8576  000D50                     PL92:
  8577                           	opt stack 18
  8578  000D50  0D02               	mullw	2
  8579  000D52  50F3               	movf	prodl,w,c
  8580  000D54  0F60               	addlw	low _pBDTEntryOut
  8581  000D56  0012               	return	
  8582  000D58                     __end_ofPL92:
  8583                           	opt stack 0
  8584  000D58                     PL102:
  8585                           	opt stack 22
  8586  000D58  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8587  000D5A  26D9               	addwf	fsr2l,f,c
  8588  000D5C  5032               	movf	i2USBTransferOnePacket@handle+1,w,c
  8589  000D5E  22DA               	addwfc	fsr2h,f,c
  8590  000D60  0012               	return	
  8591  000D62                     __end_ofPL102:
  8592                           	opt stack 0
  8593                           tblptru	equ	0xFF8
  8594                           tblptrh	equ	0xFF7
  8595                           tblptrl	equ	0xFF6
  8596                           tablat	equ	0xFF5
  8597                           prodh	equ	0xFF4
  8598                           prodl	equ	0xFF3
  8599                           intcon	equ	0xFF2
  8600                           postinc0	equ	0xFEE
  8601                           wreg	equ	0xFE8
  8602                           indf1	equ	0xFE7
  8603                           postdec1	equ	0xFE5
  8604                           fsr1h	equ	0xFE2
  8605                           fsr1l	equ	0xFE1
  8606                           indf2	equ	0xFDF
  8607                           postinc2	equ	0xFDE
  8608                           postdec2	equ	0xFDD
  8609                           plusw2	equ	0xFDB
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8
  8613                           
  8614 ;; *************** function _USBEnableEndpoint *****************
  8615 ;; Defined at:
  8616 ;;		line 878 in file "picLibs/usb_device.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  ep              1    wreg     unsigned char 
  8619 ;;  options         1    8[COMRAM] unsigned char 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  ep              1   11[COMRAM] unsigned char 
  8622 ;;  p               2    9[COMRAM] PTR unsigned char 
  8623 ;;		 -> UEP0(1), 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8633 ;;      Params:         1       0       0       0
  8634 ;;      Locals:         3       0       0       0
  8635 ;;      Temps:          0       0       0       0
  8636 ;;      Totals:         4       0       0       0
  8637 ;;Total ram usage:        4 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    1
  8640 ;; This function calls:
  8641 ;;		_USBConfigureEndpoint
  8642 ;; This function is called by:
  8643 ;;		_CDCInitEP
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text47
  8648  0017CE                     __ptext47:
  8649                           	opt stack 0
  8650  0017CE                     _USBEnableEndpoint:
  8651                           	opt stack 21
  8652                           
  8653                           ;incstack = 0
  8654                           ;USBEnableEndpoint@ep stored from wreg
  8655  0017CE  6E35               	movwf	USBEnableEndpoint@ep,c
  8656                           
  8657                           ;usb_device.c: 880: unsigned char* p;
  8658                           ;usb_device.c: 884: if(options & 0x04)
  8659  0017D0  A432               	btfss	USBEnableEndpoint@options,2,c
  8660  0017D2  D004               	goto	i2l3047
  8661                           
  8662                           ;usb_device.c: 885: {
  8663                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8664  0017D4  6A2A               	clrf	USBConfigureEndpoint@direction,c
  8665  0017D6  5035               	movf	USBEnableEndpoint@ep,w,c
  8666  0017D8  EC72  F008         	call	_USBConfigureEndpoint
  8667  0017DC                     i2l3047:
  8668                           
  8669                           ;usb_device.c: 887: }
  8670                           ;usb_device.c: 888: if(options & 0x02)
  8671  0017DC  A232               	btfss	USBEnableEndpoint@options,1,c
  8672  0017DE  D005               	goto	i2l3051
  8673                           
  8674                           ;usb_device.c: 889: {
  8675                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8676  0017E0  0E01               	movlw	1
  8677  0017E2  6E2A               	movwf	USBConfigureEndpoint@direction,c
  8678  0017E4  5035               	movf	USBEnableEndpoint@ep,w,c
  8679  0017E6  EC72  F008         	call	_USBConfigureEndpoint
  8680  0017EA                     i2l3051:
  8681                           
  8682                           ;usb_device.c: 891: }
  8683                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8684  0017EA  0E53               	movlw	83
  8685  0017EC  2435               	addwf	USBEnableEndpoint@ep,w,c
  8686  0017EE  6E33               	movwf	USBEnableEndpoint@p,c
  8687  0017F0  6A34               	clrf	USBEnableEndpoint@p+1,c
  8688  0017F2  0E0F               	movlw	15
  8689  0017F4  2234               	addwfc	USBEnableEndpoint@p+1,f,c
  8690                           
  8691                           ;usb_device.c: 901: *p = options;
  8692  0017F6  C033  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8693  0017FA  C034  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8694  0017FE  C032  FFDF         	movff	USBEnableEndpoint@options,indf2
  8695  001802  0C0F               	retlw	15	;funcret
  8696  001804                     __end_of_USBEnableEndpoint:
  8697                           	opt stack 0
  8698                           tblptru	equ	0xFF8
  8699                           tblptrh	equ	0xFF7
  8700                           tblptrl	equ	0xFF6
  8701                           tablat	equ	0xFF5
  8702                           prodh	equ	0xFF4
  8703                           prodl	equ	0xFF3
  8704                           intcon	equ	0xFF2
  8705                           postinc0	equ	0xFEE
  8706                           wreg	equ	0xFE8
  8707                           indf1	equ	0xFE7
  8708                           postdec1	equ	0xFE5
  8709                           fsr1h	equ	0xFE2
  8710                           fsr1l	equ	0xFE1
  8711                           indf2	equ	0xFDF
  8712                           postinc2	equ	0xFDE
  8713                           postdec2	equ	0xFDD
  8714                           plusw2	equ	0xFDB
  8715                           fsr2h	equ	0xFDA
  8716                           fsr2l	equ	0xFD9
  8717                           status	equ	0xFD8
  8718                           
  8719 ;; *************** function _USBConfigureEndpoint *****************
  8720 ;; Defined at:
  8721 ;;		line 1543 in file "picLibs/usb_device.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  EPNum           1    wreg     unsigned char 
  8724 ;;  direction       1    0[COMRAM] unsigned char 
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  EPNum           1    5[COMRAM] unsigned char 
  8727 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  8728 ;;		 -> BDT(48), 
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8738 ;;      Params:         1       0       0       0
  8739 ;;      Locals:         3       0       0       0
  8740 ;;      Temps:          4       0       0       0
  8741 ;;      Totals:         8       0       0       0
  8742 ;;Total ram usage:        8 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_USBEnableEndpoint
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           	psect	text48
  8752  0010E4                     __ptext48:
  8753                           	opt stack 0
  8754  0010E4                     _USBConfigureEndpoint:
  8755                           	opt stack 21
  8756                           
  8757                           ;incstack = 0
  8758                           ;USBConfigureEndpoint@EPNum stored from wreg
  8759  0010E4  6E2F               	movwf	USBConfigureEndpoint@EPNum,c
  8760                           
  8761                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8762                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8763  0010E6  6A30               	clrf	USBConfigureEndpoint@handle,c
  8764  0010E8  0E02               	movlw	2
  8765  0010EA  6E31               	movwf	USBConfigureEndpoint@handle+1,c
  8766                           
  8767                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8768  0010EC  502A               	movf	USBConfigureEndpoint@direction,w,c
  8769  0010EE  6E2B               	movwf	??_USBConfigureEndpoint& (0+255),c
  8770  0010F0  6A2C               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8771  0010F2  90D8               	bcf	status,0,c
  8772  0010F4  362B               	rlcf	??_USBConfigureEndpoint,f,c
  8773  0010F6  362C               	rlcf	??_USBConfigureEndpoint+1,f,c
  8774  0010F8  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8775  0010FA  6E2D               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8776  0010FC  6A2E               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8777  0010FE  D824               	call	PL74	;call to abstracted procedure
  8778  001100  502B               	movf	??_USBConfigureEndpoint,w,c
  8779  001102  262D               	addwf	??_USBConfigureEndpoint+2,f,c
  8780  001104  502C               	movf	??_USBConfigureEndpoint+1,w,c
  8781  001106  222E               	addwfc	??_USBConfigureEndpoint+3,f,c
  8782  001108  D81F               	call	PL74	;call to abstracted procedure
  8783  00110A  502D               	movf	??_USBConfigureEndpoint+2,w,c
  8784  00110C  2630               	addwf	USBConfigureEndpoint@handle,f,c
  8785  00110E  502E               	movf	??_USBConfigureEndpoint+3,w,c
  8786  001110  2231               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8787                           
  8788                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8789  001112  D821               	call	PL106	;call to abstracted procedure
  8790  001114  9EDF               	bcf	indf2,7,c
  8791                           
  8792                           ;usb_device.c: 1557: if(direction == 0)
  8793  001116  502A               	movf	USBConfigureEndpoint@direction,w,c
  8794  001118  E104               	bnz	i2l3025
  8795                           
  8796                           ;usb_device.c: 1558: {
  8797                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8798  00111A  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8799  00111C  ECA8  F006         	call	PL92	;call to abstracted procedure
  8800  001120  D003               	goto	L13
  8801  001122                     i2l3025:
  8802                           
  8803                           ;usb_device.c: 1561: else
  8804                           ;usb_device.c: 1562: {
  8805                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8806  001122  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8807  001124  EC9F  F006         	call	PL84	;call to abstracted procedure
  8808  001128                     L13:
  8809  001128  6ED9               	movwf	fsr2l,c
  8810  00112A  6ADA               	clrf	fsr2h,c
  8811  00112C  C030  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8812  001130  C031  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8813                           
  8814                           ;usb_device.c: 1564: }
  8815                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8816  001134  D810               	call	PL106	;call to abstracted procedure
  8817  001136  9CDF               	bcf	indf2,6,c
  8818                           
  8819                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8820  001138  EE20 F004          	lfsr	2,4
  8821  00113C  5030               	movf	USBConfigureEndpoint@handle,w,c
  8822  00113E  26D9               	addwf	fsr2l,f,c
  8823  001140  5031               	movf	USBConfigureEndpoint@handle+1,w,c
  8824  001142  22DA               	addwfc	fsr2h,f,c
  8825  001144  8CDF               	bsf	indf2,6,c
  8826  001146  0012               	return		;funcret
  8827  001148                     __end_of_USBConfigureEndpoint:
  8828                           	opt stack 0
  8829  001148                     PL74:
  8830                           	opt stack 21
  8831  001148  90D8               	bcf	status,0,c
  8832  00114A  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8833  00114C  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8834  00114E  90D8               	bcf	status,0,c
  8835  001150  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8836  001152  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8837  001154  0012               	return	
  8838  001156                     __end_ofPL74:
  8839                           	opt stack 0
  8840  001156                     PL106:
  8841                           	opt stack 21
  8842  001156  C030  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8843  00115A  C031  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8844  00115E  0012               	return	
  8845  001160                     __end_ofPL106:
  8846                           	opt stack 0
  8847                           tblptru	equ	0xFF8
  8848                           tblptrh	equ	0xFF7
  8849                           tblptrl	equ	0xFF6
  8850                           tablat	equ	0xFF5
  8851                           prodh	equ	0xFF4
  8852                           prodl	equ	0xFF3
  8853                           intcon	equ	0xFF2
  8854                           postinc0	equ	0xFEE
  8855                           wreg	equ	0xFE8
  8856                           indf1	equ	0xFE7
  8857                           postdec1	equ	0xFE5
  8858                           fsr1h	equ	0xFE2
  8859                           fsr1l	equ	0xFE1
  8860                           indf2	equ	0xFDF
  8861                           postinc2	equ	0xFDE
  8862                           postdec2	equ	0xFDD
  8863                           plusw2	equ	0xFDB
  8864                           fsr2h	equ	0xFDA
  8865                           fsr2l	equ	0xFD9
  8866                           status	equ	0xFD8
  8867                           
  8868 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8869 ;; Defined at:
  8870 ;;		line 50 in file "picLibs/app_led_usb_status.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;		None
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;		None
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  1    wreg      void 
  8877 ;; Registers used:
  8878 ;;		wreg, status,2, status,0, cstack
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8884 ;;      Params:         0       0       0       0
  8885 ;;      Locals:         0       0       0       0
  8886 ;;      Temps:          0       0       0       0
  8887 ;;      Totals:         0       0       0       0
  8888 ;;Total ram usage:        0 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; Hardware stack levels required when called:    1
  8891 ;; This function calls:
  8892 ;;		_LED_Off
  8893 ;;		_LED_On
  8894 ;; This function is called by:
  8895 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           	psect	text49
  8900  0012B8                     __ptext49:
  8901                           	opt stack 0
  8902  0012B8                     _APP_LEDUpdateUSBStatus:
  8903                           	opt stack 22
  8904                           
  8905                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  8906                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  8907                           
  8908                           ;incstack = 0
  8909  0012B8  A264               	btfss	3940,1,c	;volatile
  8910  0012BA  D02E               	goto	i2l3135
  8911                           
  8912                           ;app_led_usb_status.c: 55: {
  8913                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  8914  0012BC  0E01               	movlw	1
  8915  0012BE  EF92  F00C         	goto	_LED_Off
  8916  0012C2                     i2l3109:
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  8920  0012C2  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8921  0012C4  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8922  0012C6  E104               	bnz	i2l3113
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;app_led_usb_status.c: 66: {
  8926                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  8927  0012C8  0E01               	movlw	1
  8928  0012CA  EC7C  F00C         	call	_LED_On
  8929                           
  8930                           ;app_led_usb_status.c: 68: }
  8931  0012CE  D029               	goto	i2l3137
  8932  0012D0                     i2l3113:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  8936  0012D0  0E4B               	movlw	75
  8937  0012D2  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8938  0012D4  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8939  0012D6  E104               	bnz	i2l3117
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;app_led_usb_status.c: 70: {
  8943                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  8944  0012D8  0E01               	movlw	1
  8945  0012DA  EC92  F00C         	call	_LED_Off
  8946                           
  8947                           ;app_led_usb_status.c: 72: }
  8948  0012DE  D021               	goto	i2l3137
  8949  0012E0                     i2l3117:
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  8953  0012E0  501A               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8954  0012E2  E103               	bnz	i2u185_40
  8955  0012E4  0E97               	movlw	151
  8956  0012E6  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8957  0012E8  E31C               	bnc	i2l3137
  8958  0012EA                     i2u185_40:
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;app_led_usb_status.c: 74: {
  8962                           ;app_led_usb_status.c: 75: ledCount = 0;
  8963  0012EA  6A19               	clrf	APP_LEDUpdateUSBStatus@ledCount,c
  8964  0012EC  6A1A               	clrf	APP_LEDUpdateUSBStatus@ledCount+1,c
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;app_led_usb_status.c: 76: }
  8968                           ;app_led_usb_status.c: 77: break;
  8969  0012EE  D019               	goto	i2l3137
  8970  0012F0                     i2l3121:
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  8974  0012F0  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8975  0012F2  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8976  0012F4  E104               	bnz	i2l3125
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;app_led_usb_status.c: 83: {
  8980                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  8981  0012F6  0E01               	movlw	1
  8982  0012F8  EC7C  F00C         	call	_LED_On
  8983                           
  8984                           ;app_led_usb_status.c: 85: }
  8985  0012FC  D012               	goto	i2l3137
  8986  0012FE                     i2l3125:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  8990  0012FE  0E32               	movlw	50
  8991  001300  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8992  001302  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8993  001304  E104               	bnz	i2l3129
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;app_led_usb_status.c: 87: {
  8997                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  8998  001306  0E01               	movlw	1
  8999  001308  EC92  F00C         	call	_LED_Off
  9000                           
  9001                           ;app_led_usb_status.c: 89: }
  9002  00130C  D00A               	goto	i2l3137
  9003  00130E                     i2l3129:
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  9007  00130E  0EB7               	movlw	183
  9008  001310  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9009  001312  0E03               	movlw	3
  9010  001314  581A               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9011  001316  D7E8               	goto	L14
  9012  001318                     i2l3135:
  9013  001318  0100               	movlb	0	; () banked
  9014  00131A  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  9015                           
  9016                           ; Switch size 1, requested type "space"
  9017                           ; Number of cases is 1, Range of values is 32 to 32
  9018                           ; switch strategies available:
  9019                           ; Name         Instructions Cycles
  9020                           ; simple_byte            4     3 (average)
  9021                           ;	Chosen strategy is simple_byte
  9022  00131C  0A20               	xorlw	32	; case 32
  9023  00131E  E0D1               	bz	i2l3109
  9024  001320  D7E7               	goto	i2l3121
  9025  001322                     i2l3137:
  9026                           
  9027                           ;app_led_usb_status.c: 98: ledCount++;
  9028  001322  4A19               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
  9029  001324  2A1A               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
  9030  001326  0012               	return		;funcret
  9031  001328                     __end_of_APP_LEDUpdateUSBStatus:
  9032                           	opt stack 0
  9033                           tblptru	equ	0xFF8
  9034                           tblptrh	equ	0xFF7
  9035                           tblptrl	equ	0xFF6
  9036                           tablat	equ	0xFF5
  9037                           prodh	equ	0xFF4
  9038                           prodl	equ	0xFF3
  9039                           intcon	equ	0xFF2
  9040                           postinc0	equ	0xFEE
  9041                           wreg	equ	0xFE8
  9042                           indf1	equ	0xFE7
  9043                           postdec1	equ	0xFE5
  9044                           fsr1h	equ	0xFE2
  9045                           fsr1l	equ	0xFE1
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           plusw2	equ	0xFDB
  9050                           fsr2h	equ	0xFDA
  9051                           fsr2l	equ	0xFD9
  9052                           status	equ	0xFD8
  9053                           
  9054 ;; *************** function _LED_On *****************
  9055 ;; Defined at:
  9056 ;;		line 59 in file "picLibs/leds.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  led             1    wreg     enum E2
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  led             1    0[COMRAM] enum E2
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1    wreg      void 
  9063 ;; Registers used:
  9064 ;;		wreg, status,2, status,0
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9070 ;;      Params:         0       0       0       0
  9071 ;;      Locals:         1       0       0       0
  9072 ;;      Temps:          0       0       0       0
  9073 ;;      Totals:         1       0       0       0
  9074 ;;Total ram usage:        1 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; This function calls:
  9077 ;;		Nothing
  9078 ;; This function is called by:
  9079 ;;		_APP_LEDUpdateUSBStatus
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text50
  9084  0018F8                     __ptext50:
  9085                           	opt stack 0
  9086  0018F8                     _LED_On:
  9087                           	opt stack 22
  9088                           
  9089                           ;incstack = 0
  9090                           ;LED_On@led stored from wreg
  9091  0018F8  6E2A               	movwf	LED_On@led,c
  9092                           
  9093                           ;leds.c: 61: switch(led)
  9094  0018FA  D008               	goto	i2l3041
  9095  0018FC                     i2l239:
  9096                           
  9097                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9098  0018FC  808B               	bsf	3979,0,c	;volatile
  9099                           
  9100                           ;leds.c: 65: break;
  9101  0018FE  0012               	return	
  9102  001900                     i2l241:
  9103                           
  9104                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9105  001900  828B               	bsf	3979,1,c	;volatile
  9106                           
  9107                           ;leds.c: 69: break;
  9108  001902  0012               	return	
  9109  001904                     i2l242:
  9110                           
  9111                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9112  001904  848B               	bsf	3979,2,c	;volatile
  9113                           
  9114                           ;leds.c: 73: break;
  9115  001906  0012               	return	
  9116  001908                     i2l243:
  9117                           
  9118                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9119  001908  868B               	bsf	3979,3,c	;volatile
  9120                           
  9121                           ;leds.c: 77: break;
  9122  00190A  0012               	return	
  9123  00190C                     i2l3041:
  9124  00190C  502A               	movf	LED_On@led,w,c
  9125                           
  9126                           ; Switch size 1, requested type "space"
  9127                           ; Number of cases is 5, Range of values is 0 to 4
  9128                           ; switch strategies available:
  9129                           ; Name         Instructions Cycles
  9130                           ; simple_byte           16     9 (average)
  9131                           ;	Chosen strategy is simple_byte
  9132  00190E  B4D8               	btfsc	status,2,c
  9133  001910  0012               	return	
  9134  001912  0A01               	xorlw	1	; case 1
  9135  001914  E0F3               	bz	i2l239
  9136  001916  0A03               	xorlw	3	; case 2
  9137  001918  E0F3               	bz	i2l241
  9138  00191A  0A01               	xorlw	1	; case 3
  9139  00191C  E0F3               	bz	i2l242
  9140  00191E  0A07               	xorlw	7	; case 4
  9141  001920  E0F3               	bz	i2l243
  9142  001922  0012               	return		;funcret
  9143  001924                     __end_of_LED_On:
  9144                           	opt stack 0
  9145                           tblptru	equ	0xFF8
  9146                           tblptrh	equ	0xFF7
  9147                           tblptrl	equ	0xFF6
  9148                           tablat	equ	0xFF5
  9149                           prodh	equ	0xFF4
  9150                           prodl	equ	0xFF3
  9151                           intcon	equ	0xFF2
  9152                           postinc0	equ	0xFEE
  9153                           wreg	equ	0xFE8
  9154                           indf1	equ	0xFE7
  9155                           postdec1	equ	0xFE5
  9156                           fsr1h	equ	0xFE2
  9157                           fsr1l	equ	0xFE1
  9158                           indf2	equ	0xFDF
  9159                           postinc2	equ	0xFDE
  9160                           postdec2	equ	0xFDD
  9161                           plusw2	equ	0xFDB
  9162                           fsr2h	equ	0xFDA
  9163                           fsr2l	equ	0xFD9
  9164                           status	equ	0xFD8
  9165                           
  9166 ;; *************** function _LED_Off *****************
  9167 ;; Defined at:
  9168 ;;		line 100 in file "picLibs/leds.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  led             1    wreg     enum E2
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  led             1    0[COMRAM] enum E2
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9182 ;;      Params:         0       0       0       0
  9183 ;;      Locals:         1       0       0       0
  9184 ;;      Temps:          0       0       0       0
  9185 ;;      Totals:         1       0       0       0
  9186 ;;Total ram usage:        1 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; This function calls:
  9189 ;;		Nothing
  9190 ;; This function is called by:
  9191 ;;		_APP_LEDUpdateUSBStatus
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           	psect	text51
  9196  001924                     __ptext51:
  9197                           	opt stack 0
  9198  001924                     _LED_Off:
  9199                           	opt stack 22
  9200                           
  9201                           ;incstack = 0
  9202                           ;LED_Off@led stored from wreg
  9203  001924  6E2A               	movwf	LED_Off@led,c
  9204                           
  9205                           ;leds.c: 102: switch(led)
  9206  001926  D008               	goto	i2l3035
  9207  001928                     i2l249:
  9208                           
  9209                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9210  001928  908B               	bcf	3979,0,c	;volatile
  9211                           
  9212                           ;leds.c: 106: break;
  9213  00192A  0012               	return	
  9214  00192C                     i2l251:
  9215                           
  9216                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9217  00192C  928B               	bcf	3979,1,c	;volatile
  9218                           
  9219                           ;leds.c: 110: break;
  9220  00192E  0012               	return	
  9221  001930                     i2l252:
  9222                           
  9223                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9224  001930  948B               	bcf	3979,2,c	;volatile
  9225                           
  9226                           ;leds.c: 114: break;
  9227  001932  0012               	return	
  9228  001934                     i2l253:
  9229                           
  9230                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9231  001934  968B               	bcf	3979,3,c	;volatile
  9232                           
  9233                           ;leds.c: 118: break;
  9234  001936  0012               	return	
  9235  001938                     i2l3035:
  9236  001938  502A               	movf	LED_Off@led,w,c
  9237                           
  9238                           ; Switch size 1, requested type "space"
  9239                           ; Number of cases is 5, Range of values is 0 to 4
  9240                           ; switch strategies available:
  9241                           ; Name         Instructions Cycles
  9242                           ; simple_byte           16     9 (average)
  9243                           ;	Chosen strategy is simple_byte
  9244  00193A  B4D8               	btfsc	status,2,c
  9245  00193C  0012               	return	
  9246  00193E  0A01               	xorlw	1	; case 1
  9247  001940  E0F3               	bz	i2l249
  9248  001942  0A03               	xorlw	3	; case 2
  9249  001944  E0F3               	bz	i2l251
  9250  001946  0A01               	xorlw	1	; case 3
  9251  001948  E0F3               	bz	i2l252
  9252  00194A  0A07               	xorlw	7	; case 4
  9253  00194C  E0F3               	bz	i2l253
  9254  00194E  0012               	return		;funcret
  9255  001950                     __end_of_LED_Off:
  9256                           	opt stack 0
  9257                           tblptru	equ	0xFF8
  9258                           tblptrh	equ	0xFF7
  9259                           tblptrl	equ	0xFF6
  9260                           tablat	equ	0xFF5
  9261                           prodh	equ	0xFF4
  9262                           prodl	equ	0xFF3
  9263                           intcon	equ	0xFF2
  9264                           postinc0	equ	0xFEE
  9265                           wreg	equ	0xFE8
  9266                           indf1	equ	0xFE7
  9267                           postdec1	equ	0xFE5
  9268                           fsr1h	equ	0xFE2
  9269                           fsr1l	equ	0xFE1
  9270                           indf2	equ	0xFDF
  9271                           postinc2	equ	0xFDE
  9272                           postdec2	equ	0xFDD
  9273                           plusw2	equ	0xFDB
  9274                           fsr2h	equ	0xFDA
  9275                           fsr2l	equ	0xFD9
  9276                           status	equ	0xFD8
  9277                           
  9278 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  9279 ;; Defined at:
  9280 ;;		line 53 in file "picLibs/app_device_cdc_basic.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;		None
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;		None
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  1    wreg      void 
  9287 ;; Registers used:
  9288 ;;		wreg, status,2
  9289 ;; Tracked objects:
  9290 ;;		On entry : 3F/0
  9291 ;;		On exit  : 3F/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9294 ;;      Params:         0       0       0       0
  9295 ;;      Locals:         0       0       0       0
  9296 ;;      Temps:          0       0       0       0
  9297 ;;      Totals:         0       0       0       0
  9298 ;;Total ram usage:        0 bytes
  9299 ;; Hardware stack levels used:    1
  9300 ;; This function calls:
  9301 ;;		Nothing
  9302 ;; This function is called by:
  9303 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text52
  9308  001A92                     __ptext52:
  9309                           	opt stack 0
  9310  001A92                     _APP_DeviceCDCBasicDemoInitialize:
  9311                           	opt stack 23
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;app_device_cdc_basic.c: 55: line_coding.bCharFormat = 0;
  9315                           
  9316                           ;incstack = 0
  9317  001A92  6BCE               	clrf	(_line_coding+4)& (0+255),b
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;app_device_cdc_basic.c: 56: line_coding.bDataBits = 8;
  9321  001A94  0E08               	movlw	8
  9322  001A96  6FD0               	movwf	(_line_coding+6)& (0+255),b
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;app_device_cdc_basic.c: 57: line_coding.bParityType = 0;
  9326  001A98  6BCF               	clrf	(_line_coding+5)& (0+255),b
  9327                           
  9328                           ;app_device_cdc_basic.c: 58: line_coding.dwDTERate = 9600;
  9329  001A9A  0E80               	movlw	128
  9330  001A9C  6FCA               	movwf	_line_coding& (0+255),b
  9331  001A9E  0E25               	movlw	37
  9332  001AA0  6FCB               	movwf	(_line_coding+1)& (0+255),b
  9333  001AA2  0E00               	movlw	0
  9334  001AA4  6BCC               	clrf	(_line_coding+2)& (0+255),b
  9335  001AA6  6BCD               	clrf	(_line_coding+3)& (0+255),b
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;app_device_cdc_basic.c: 60: buttonPressed = 0;
  9339  001AA8  6B7F               	clrf	_buttonPressed& (0+255),b
  9340                           
  9341                           ; BSR set to: 0
  9342  001AAA  0012               	return		;funcret
  9343  001AAC                     __end_of_APP_DeviceCDCBasicDemoInitialize:
  9344                           	opt stack 0
  9345                           tblptru	equ	0xFF8
  9346                           tblptrh	equ	0xFF7
  9347                           tblptrl	equ	0xFF6
  9348                           tablat	equ	0xFF5
  9349                           prodh	equ	0xFF4
  9350                           prodl	equ	0xFF3
  9351                           intcon	equ	0xFF2
  9352                           postinc0	equ	0xFEE
  9353                           wreg	equ	0xFE8
  9354                           indf1	equ	0xFE7
  9355                           postdec1	equ	0xFE5
  9356                           fsr1h	equ	0xFE2
  9357                           fsr1l	equ	0xFE1
  9358                           indf2	equ	0xFDF
  9359                           postinc2	equ	0xFDE
  9360                           postdec2	equ	0xFDD
  9361                           plusw2	equ	0xFDB
  9362                           fsr2h	equ	0xFDA
  9363                           fsr2l	equ	0xFD9
  9364                           status	equ	0xFD8
  9365                           
  9366 ;; *************** function _USBCtrlTrfOutHandler *****************
  9367 ;; Defined at:
  9368 ;;		line 2538 in file "picLibs/usb_device.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9377 ;; Tracked objects:
  9378 ;;		On entry : 3F/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9382 ;;      Params:         0       0       0       0
  9383 ;;      Locals:         0       0       0       0
  9384 ;;      Temps:          0       0       0       0
  9385 ;;      Totals:         0       0       0       0
  9386 ;;Total ram usage:        0 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; Hardware stack levels required when called:    2
  9389 ;; This function calls:
  9390 ;;		_USBCtrlTrfRxService
  9391 ;; This function is called by:
  9392 ;;		_USBCtrlEPService
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396                           	psect	text53
  9397  0019E6                     __ptext53:
  9398                           	opt stack 0
  9399  0019E6                     _USBCtrlTrfOutHandler:
  9400                           	opt stack 21
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;incstack = 0
  9407  0019E6  0E02               	movlw	2
  9408  0019E8  1826               	xorwf	_controlTransferState,w,c	;volatile
  9409  0019EA  E102               	bnz	i2l644
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;usb_device.c: 2541: {
  9413                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9414  0019EC  EF9A  F005         	goto	_USBCtrlTrfRxService	;wreg free
  9415  0019F0                     i2l644:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;usb_device.c: 2544: else
  9419                           ;usb_device.c: 2545: {
  9420                           ;usb_device.c: 2548: controlTransferState = 0;
  9421  0019F0  6A26               	clrf	_controlTransferState,c	;volatile
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9425  0019F2  5022               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9426  0019F4  E106               	bnz	i2l646
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;usb_device.c: 2556: {
  9430                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9431                           
  9432                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9436  0019F6  EC8C  F007         	call	PL2	;call to abstracted procedure
  9437  0019FA  0E0C               	movlw	12
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9441  0019FC  ECE2  F005         	call	PL10	;call to abstracted procedure
  9442                           
  9443                           ;usb_device.c: 2561: }
  9444  001A00  0C00               	retlw	0
  9445  001A02                     i2l646:
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;usb_device.c: 2562: else
  9449                           ;usb_device.c: 2563: {
  9450                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9451  001A02  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9452  001A04  0012               	return		;funcret
  9453  001A06                     __end_of_USBCtrlTrfOutHandler:
  9454                           	opt stack 0
  9455                           tblptru	equ	0xFF8
  9456                           tblptrh	equ	0xFF7
  9457                           tblptrl	equ	0xFF6
  9458                           tablat	equ	0xFF5
  9459                           prodh	equ	0xFF4
  9460                           prodl	equ	0xFF3
  9461                           intcon	equ	0xFF2
  9462                           postinc0	equ	0xFEE
  9463                           wreg	equ	0xFE8
  9464                           indf1	equ	0xFE7
  9465                           postdec1	equ	0xFE5
  9466                           fsr1h	equ	0xFE2
  9467                           fsr1l	equ	0xFE1
  9468                           indf2	equ	0xFDF
  9469                           postinc2	equ	0xFDE
  9470                           postdec2	equ	0xFDD
  9471                           plusw2	equ	0xFDB
  9472                           fsr2h	equ	0xFDA
  9473                           fsr2l	equ	0xFD9
  9474                           status	equ	0xFD8
  9475                           
  9476 ;; *************** function _USBCtrlTrfRxService *****************
  9477 ;; Defined at:
  9478 ;;		line 1852 in file "picLibs/usb_device.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;		None
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;  byteToRead      1    1[COMRAM] unsigned char 
  9483 ;;  i               1    0[COMRAM] unsigned char 
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 3F/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9493 ;;      Params:         0       0       0       0
  9494 ;;      Locals:         2       0       0       0
  9495 ;;      Temps:          0       0       0       0
  9496 ;;      Totals:         2       0       0       0
  9497 ;;Total ram usage:        2 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    1
  9500 ;; This function calls:
  9501 ;;		_USBCtrlEPAllowStatusStage
  9502 ;; This function is called by:
  9503 ;;		_USBCtrlTrfOutHandler
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text54
  9508  000B34                     __ptext54:
  9509                           	opt stack 0
  9510  000B34                     _USBCtrlTrfRxService:
  9511                           	opt stack 21
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;usb_device.c: 1854: uint8_t byteToRead;
  9515                           ;usb_device.c: 1855: uint8_t i;
  9516                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9517                           
  9518                           ;incstack = 0
  9519  000B34  EE20 F001          	lfsr	2,1
  9520  000B38  ECE2  F008         	call	PL62	;call to abstracted procedure
  9521  000B3C  50DF               	movf	indf2,w,c
  9522  000B3E  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9526  000B40  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9527  000B42  5C05               	subwf	_outPipes+4,w,c	;volatile
  9528  000B44  0E00               	movlw	0
  9529  000B46  5806               	subwfb	_outPipes+5,w,c	;volatile
  9530  000B48  E202               	bc	i2l3577
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;usb_device.c: 1866: {
  9534                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9535  000B4A  C005  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9536  000B4E                     i2l3577:
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;usb_device.c: 1868: }
  9540                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9541  000B4E  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9542  000B50  5E05               	subwf	_outPipes+4,f,c	;volatile
  9543  000B52  0E00               	movlw	0
  9544  000B54  5A06               	subwfb	_outPipes+5,f,c	;volatile
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9548  000B56  6A2A               	clrf	USBCtrlTrfRxService@i,c
  9549  000B58  D007               	goto	i2l3587
  9550  000B5A                     i2l3581:
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;usb_device.c: 1875: {
  9554                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9555  000B5A  0E38               	movlw	56
  9556  000B5C  242A               	addwf	USBCtrlTrfRxService@i,w,c
  9557  000B5E  D844               	call	PL112	;call to abstracted procedure
  9558  000B60  5001               	movf	_outPipes,w,c	;volatile
  9559  000B62  D83D               	call	PL110	;call to abstracted procedure
  9560                           
  9561                           ; BSR set to: 0
  9562  000B64  2A01               	incf	_outPipes,f,c	;volatile
  9563                           
  9564                           ; BSR set to: 0
  9565  000B66  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  9566  000B68                     i2l3587:
  9567                           
  9568                           ; BSR set to: 0
  9569  000B68  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9570  000B6A  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  9571  000B6C  E3F6               	bnc	i2l3581
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;usb_device.c: 1877: }
  9575                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9576  000B6E  5005               	movf	_outPipes+4,w,c	;volatile
  9577  000B70  1006               	iorwf	_outPipes+5,w,c	;volatile
  9578  000B72  E014               	bz	i2l3603
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;usb_device.c: 1882: {
  9582                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9583  000B74  EE20 F001          	lfsr	2,1
  9584  000B78  D81B               	call	PL4	;call to abstracted procedure
  9585                           
  9586                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9587  000B7A  D81F               	call	PL6	;call to abstracted procedure
  9588  000B7C  D819               	call	PL4	;call to abstracted procedure
  9589  000B7E  0E38               	movlw	56
  9590  000B80  ECE7  F008         	call	PL64	;call to abstracted procedure
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9594  000B84  EC31  F00C         	call	PL28	;call to abstracted procedure
  9595  000B88  BCDF               	btfsc	indf2,6,c
  9596  000B8A  D004               	goto	i2l3599
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;usb_device.c: 1886: {
  9600                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9601  000B8C  D823               	call	PL12	;call to abstracted procedure
  9602  000B8E  0E48               	movlw	72
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9606  000B90  D819               	call	PL10	;call to abstracted procedure
  9607                           
  9608                           ;usb_device.c: 1889: }
  9609  000B92  0C00               	retlw	0
  9610  000B94                     i2l3599:
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;usb_device.c: 1890: else
  9614                           ;usb_device.c: 1891: {
  9615                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9616  000B94  D81F               	call	PL12	;call to abstracted procedure
  9617  000B96  0E08               	movlw	8
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9621  000B98  D815               	call	PL10	;call to abstracted procedure
  9622  000B9A  0C00               	retlw	0
  9623  000B9C                     i2l3603:
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;usb_device.c: 1896: else
  9627                           ;usb_device.c: 1897: {
  9628                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9629                           
  9630                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9634  000B9C  EC8C  F007         	call	PL2	;call to abstracted procedure
  9635  000BA0  0E04               	movlw	4
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9639  000BA2  D810               	call	PL10	;call to abstracted procedure
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;usb_device.c: 1926: }
  9643                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;usb_device.c: 1915: {
  9647                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9648  000BA4  9E04               	bcf	_outPipes+3,7,c	;volatile
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9652  000BA6  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9653  000BA8  B4D8               	btfsc	status,2,c
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;usb_device.c: 1942: {
  9657                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9658  000BAA  ECB0  F008         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9659  000BAE  0012               	return		;funcret
  9660  000BB0                     __end_of_USBCtrlTrfRxService:
  9661                           	opt stack 0
  9662  000BB0                     PL4:
  9663                           	opt stack 20
  9664  000BB0  5015               	movf	_pBDTEntryEP0OutNext,w,c
  9665  000BB2  26D9               	addwf	fsr2l,f,c
  9666  000BB4  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  9667  000BB6  22DA               	addwfc	fsr2h,f,c
  9668  000BB8  0012               	return	
  9669  000BBA                     __end_ofPL4:
  9670                           	opt stack 0
  9671  000BBA                     PL6:
  9672                           	opt stack 20
  9673  000BBA  0E08               	movlw	8
  9674  000BBC  6EDF               	movwf	indf2,c
  9675  000BBE  EE20 F002          	lfsr	2,2
  9676  000BC2  0C08               	retlw	8
  9677  000BC4                     __end_ofPL6:
  9678                           	opt stack 0
  9679  000BC4                     PL10:
  9680                           	opt stack 20
  9681  000BC4  6EDF               	movwf	indf2,c
  9682  000BC6  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9683  000BCA  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9684  000BCE  0E00               	movlw	0
  9685  000BD0  8EDB               	bsf	plusw2,7,c
  9686  000BD2  0C00               	retlw	0
  9687  000BD4                     __end_ofPL10:
  9688                           	opt stack 0
  9689  000BD4                     PL12:
  9690                           	opt stack 17
  9691  000BD4  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9692  000BD8  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9693  000BDC  0012               	return	
  9694  000BDE                     __end_ofPL12:
  9695                           	opt stack 0
  9696  000BDE                     PL110:
  9697                           	opt stack 18
  9698  000BDE  6EE1               	movwf	fsr1l,c
  9699  000BE0  6AE2               	clrf	fsr1h,c
  9700  000BE2  CFDF FFE7          	movff	indf2,indf1
  9701  000BE6  0012               	return	
  9702  000BE8                     __end_ofPL110:
  9703                           	opt stack 0
  9704  000BE8                     PL112:
  9705                           	opt stack 18
  9706  000BE8  6ED9               	movwf	fsr2l,c
  9707  000BEA  6ADA               	clrf	fsr2h,c
  9708  000BEC  0E02               	movlw	2
  9709  000BEE  22DA               	addwfc	fsr2h,f,c
  9710  000BF0  0C02               	retlw	2
  9711  000BF2                     __end_ofPL112:
  9712                           	opt stack 0
  9713                           tblptru	equ	0xFF8
  9714                           tblptrh	equ	0xFF7
  9715                           tblptrl	equ	0xFF6
  9716                           tablat	equ	0xFF5
  9717                           prodh	equ	0xFF4
  9718                           prodl	equ	0xFF3
  9719                           intcon	equ	0xFF2
  9720                           postinc0	equ	0xFEE
  9721                           wreg	equ	0xFE8
  9722                           indf1	equ	0xFE7
  9723                           postdec1	equ	0xFE5
  9724                           fsr1h	equ	0xFE2
  9725                           fsr1l	equ	0xFE1
  9726                           indf2	equ	0xFDF
  9727                           postinc2	equ	0xFDE
  9728                           postdec2	equ	0xFDD
  9729                           plusw2	equ	0xFDB
  9730                           fsr2h	equ	0xFDA
  9731                           fsr2l	equ	0xFD9
  9732                           status	equ	0xFD8
  9733                           
  9734 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9735 ;; Defined at:
  9736 ;;		line 1416 in file "picLibs/usb_device.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9750 ;;      Params:         0       0       0       0
  9751 ;;      Locals:         0       0       0       0
  9752 ;;      Temps:          0       0       0       0
  9753 ;;      Totals:         0       0       0       0
  9754 ;;Total ram usage:        0 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; This function calls:
  9757 ;;		Nothing
  9758 ;; This function is called by:
  9759 ;;		_USBDeviceTasks
  9760 ;;		_USBCtrlEPServiceComplete
  9761 ;;		_USBCtrlTrfRxService
  9762 ;; This function uses a non-reentrant model
  9763 ;;
  9764                           
  9765                           	psect	text55
  9766  001160                     __ptext55:
  9767                           	opt stack 0
  9768  001160                     _USBCtrlEPAllowStatusStage:
  9769                           	opt stack 21
  9770                           
  9771                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9772                           
  9773                           ;incstack = 0
  9774  001160  501F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  9775  001162  A4D8               	btfss	status,2,c
  9776  001164  0012               	return	
  9777                           
  9778                           ;usb_device.c: 1424: {
  9779                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9780  001166  0E01               	movlw	1
  9781  001168  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9782                           
  9783                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9784  00116A  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  9785  00116C  A4D8               	btfss	status,2,c
  9786  00116E  0012               	return	
  9787                           
  9788                           ;usb_device.c: 1427: {
  9789                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9790  001170  0E01               	movlw	1
  9791  001172  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9792                           
  9793                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9794  001174  0E02               	movlw	2
  9795  001176  1826               	xorwf	_controlTransferState,w,c	;volatile
  9796  001178  E10A               	bnz	i2l3303
  9797                           
  9798                           ;usb_device.c: 1433: {
  9799                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9800  00117A  EE20 F001          	lfsr	2,1
  9801  00117E  ECF8  F006         	call	PL66	;call to abstracted procedure
  9802  001182  6ADF               	clrf	indf2,c
  9803                           
  9804                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9805  001184  EC21  F008         	call	PL16	;call to abstracted procedure
  9806  001188  0E48               	movlw	72
  9807                           
  9808                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9809                           
  9810                           ;usb_device.c: 1437: }
  9811  00118A  EF19  F008         	goto	PL8	;call to abstracted procedure
  9812  00118E                     i2l3303:
  9813                           
  9814                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9815  00118E  0426               	decf	_controlTransferState,w,c	;volatile
  9816  001190  A4D8               	btfss	status,2,c
  9817  001192  0012               	return	
  9818                           
  9819                           ;usb_device.c: 1439: {
  9820                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9821  001194  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9822                           
  9823                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9824  001196  EE20 F001          	lfsr	2,1
  9825  00119A  D814               	call	PL62	;call to abstracted procedure
  9826                           
  9827                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  9828  00119C  ECDD  F005         	call	PL6	;call to abstracted procedure
  9829  0011A0  D811               	call	PL62	;call to abstracted procedure
  9830  0011A2  0E30               	movlw	48
  9831  0011A4  D814               	call	PL64	;call to abstracted procedure
  9832                           
  9833                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9834  0011A6  EC31  F00C         	call	PL28	;call to abstracted procedure
  9835  0011AA  0E04               	movlw	4
  9836  0011AC  6EDF               	movwf	indf2,c
  9837                           
  9838                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9839  0011AE  EC31  F00C         	call	PL28	;call to abstracted procedure
  9840  0011B2  0E00               	movlw	0
  9841  0011B4  8EDB               	bsf	plusw2,7,c
  9842                           
  9843                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9844  0011B6  0E01               	movlw	1
  9845  0011B8  6E22               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9846                           
  9847                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9848                           
  9849                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9850                           
  9851                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9852  0011BA  EC8C  F007         	call	PL2	;call to abstracted procedure
  9853  0011BE  0E80               	movlw	128
  9854  0011C0  6EDF               	movwf	indf2,c
  9855  0011C2  0C80               	retlw	128
  9856  0011C4                     __end_of_USBCtrlEPAllowStatusStage:
  9857                           	opt stack 0
  9858  0011C4                     PL62:
  9859                           	opt stack 17
  9860  0011C4  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
  9861  0011C6  26D9               	addwf	fsr2l,f,c
  9862  0011C8  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9863  0011CA  22DA               	addwfc	fsr2h,f,c
  9864  0011CC  0012               	return	
  9865  0011CE                     __end_ofPL62:
  9866                           	opt stack 0
  9867  0011CE                     PL64:
  9868                           	opt stack 21
  9869  0011CE  6EDE               	movwf	postinc2,c
  9870  0011D0  0E02               	movlw	2
  9871  0011D2  6EDD               	movwf	postdec2,c
  9872  0011D4  0C02               	retlw	2
  9873  0011D6                     __end_ofPL64:
  9874                           	opt stack 0
  9875                           tblptru	equ	0xFF8
  9876                           tblptrh	equ	0xFF7
  9877                           tblptrl	equ	0xFF6
  9878                           tablat	equ	0xFF5
  9879                           prodh	equ	0xFF4
  9880                           prodl	equ	0xFF3
  9881                           intcon	equ	0xFF2
  9882                           postinc0	equ	0xFEE
  9883                           wreg	equ	0xFE8
  9884                           indf1	equ	0xFE7
  9885                           postdec1	equ	0xFE5
  9886                           fsr1h	equ	0xFE2
  9887                           fsr1l	equ	0xFE1
  9888                           indf2	equ	0xFDF
  9889                           postinc2	equ	0xFDE
  9890                           postdec2	equ	0xFDD
  9891                           plusw2	equ	0xFDB
  9892                           fsr2h	equ	0xFDA
  9893                           fsr2l	equ	0xFD9
  9894                           status	equ	0xFD8
  9895                           
  9896 ;; *************** function _USBCtrlTrfInHandler *****************
  9897 ;; Defined at:
  9898 ;;		line 2592 in file "picLibs/usb_device.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;		None
  9901 ;; Auto vars:     Size  Location     Type
  9902 ;;  lastDTS         1    1[COMRAM] unsigned char 
  9903 ;; Return value:  Size  Location     Type
  9904 ;;                  1    wreg      void 
  9905 ;; Registers used:
  9906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9907 ;; Tracked objects:
  9908 ;;		On entry : 3F/0
  9909 ;;		On exit  : 3F/0
  9910 ;;		Unchanged: 0/0
  9911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9912 ;;      Params:         0       0       0       0
  9913 ;;      Locals:         1       0       0       0
  9914 ;;      Temps:          0       0       0       0
  9915 ;;      Totals:         1       0       0       0
  9916 ;;Total ram usage:        1 bytes
  9917 ;; Hardware stack levels used:    1
  9918 ;; Hardware stack levels required when called:    1
  9919 ;; This function calls:
  9920 ;;		_USBCtrlTrfTxService
  9921 ;; This function is called by:
  9922 ;;		_USBCtrlEPService
  9923 ;; This function uses a non-reentrant model
  9924 ;;
  9925                           
  9926                           	psect	text56
  9927  000FD6                     __ptext56:
  9928                           	opt stack 0
  9929  000FD6                     _USBCtrlTrfInHandler:
  9930                           	opt stack 0
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;usb_device.c: 2594: uint8_t lastDTS;
  9934                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9935                           
  9936                           ;incstack = 0
  9937  000FD6  D835               	call	PL16	;call to abstracted procedure
  9938  000FD8  0E00               	movlw	0
  9939  000FDA  BCDF               	btfsc	indf2,6,c
  9940  000FDC  0E01               	movlw	1
  9941  000FDE  6E2B               	movwf	USBCtrlTrfInHandler@lastDTS,c
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9945  000FE0  0E04               	movlw	4
  9946  000FE2  1A0F               	xorwf	_pBDTEntryIn,f,c
  9947  000FE4  5010               	movf	_pBDTEntryIn+1,w,c
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9951  000FE6  0E08               	movlw	8
  9952  000FE8  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  9953  000FEA  E10B               	bnz	i2l3785
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;usb_device.c: 2605: {
  9957                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9958  000FEC  0102               	movlb	2	; () banked
  9959  000FEE  5132               	movf	50,w,b	;volatile
  9960  000FF0  0B7F               	andlw	127
  9961  000FF2  010F               	movlb	15	; () banked
  9962  000FF4  6F5C               	movwf	92,b	;volatile
  9963                           
  9964                           ; BSR set to: 15
  9965                           ;usb_device.c: 2607: if(UADDR != 0u)
  9966  000FF6  515C               	movf	92,w,b
  9967                           
  9968                           ; BSR set to: 15
  9969                           ;usb_device.c: 2608: {
  9970                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9971  000FF8  0E10               	movlw	16
  9972  000FFA  B4D8               	btfsc	status,2,c
  9973                           
  9974                           ; BSR set to: 15
  9975                           ;usb_device.c: 2611: else
  9976                           ;usb_device.c: 2612: {
  9977                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9978  000FFC  0E04               	movlw	4
  9979                           
  9980                           ;usb_device.c: 2610: }
  9981  000FFE  0100               	movlb	0	; () banked
  9982  001000  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  9983  001002                     i2l3785:
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;usb_device.c: 2614: }
  9987                           ;usb_device.c: 2615: }
  9988                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9989  001002  0426               	decf	_controlTransferState,w,c	;volatile
  9990  001004  E112               	bnz	i2l654
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;usb_device.c: 2619: {
  9994                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
  9995  001006  D828               	call	PL44	;call to abstracted procedure
  9996  001008  D821               	call	PL38	;call to abstracted procedure
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10000  00100A  ECB1  F006         	call	_USBCtrlTrfTxService	;wreg free
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10004  00100E  0E02               	movlw	2
 10005  001010  1827               	xorwf	_shortPacketStatus,w,c	;volatile
 10006  001012  E103               	bnz	i2l3797
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;usb_device.c: 2628: {
 10010                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10011  001014  D816               	call	PL16	;call to abstracted procedure
 10012  001016  0E04               	movlw	4
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10016                           
 10017                           ;usb_device.c: 2633: }
 10018  001018  D00C               	goto	PL8	;call to abstracted procedure
 10019  00101A                     i2l3797:
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;usb_device.c: 2634: else
 10023                           ;usb_device.c: 2635: {
 10024                           ;usb_device.c: 2636: if(lastDTS == 0)
 10025  00101A  502B               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10026  00101C  E103               	bnz	i2l3803
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;usb_device.c: 2637: {
 10030                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10031  00101E  D811               	call	PL16	;call to abstracted procedure
 10032  001020  0E48               	movlw	72
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10036                           
 10037                           ;usb_device.c: 2640: }
 10038  001022  D007               	goto	PL8	;call to abstracted procedure
 10039  001024                     i2l3803:
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;usb_device.c: 2641: else
 10043                           ;usb_device.c: 2642: {
 10044                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10045  001024  D80E               	call	PL16	;call to abstracted procedure
 10046  001026  0E08               	movlw	8
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10050  001028  D004               	goto	PL8	;call to abstracted procedure
 10051  00102A                     i2l654:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;usb_device.c: 2648: else
 10055                           ;usb_device.c: 2649: {
 10056                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10057  00102A  BE04               	btfsc	_outPipes+3,7,c	;volatile
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;usb_device.c: 2658: }
 10061                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;usb_device.c: 2656: {
 10065                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10066  00102C  9E04               	bcf	_outPipes+3,7,c	;volatile
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;usb_device.c: 2660: }
 10070                           ;usb_device.c: 2662: controlTransferState = 0;
 10071  00102E  6A26               	clrf	_controlTransferState,c	;volatile
 10072                           
 10073                           ; BSR set to: 0
 10074  001030  0012               	return		;funcret
 10075  001032                     __end_of_USBCtrlTrfInHandler:
 10076                           	opt stack 0
 10077  001032                     PL8:
 10078                           	opt stack 20
 10079  001032  6EDF               	movwf	indf2,c
 10080  001034  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10081  001038  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10082  00103C  0E00               	movlw	0
 10083  00103E  8EDB               	bsf	plusw2,7,c
 10084  001040  0C00               	retlw	0
 10085  001042                     __end_ofPL8:
 10086                           	opt stack 0
 10087  001042                     PL16:
 10088                           	opt stack 24
 10089  001042  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10090  001046  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10091  00104A  0012               	return	
 10092  00104C                     __end_ofPL16:
 10093                           	opt stack 0
 10094  00104C                     PL38:
 10095                           	opt stack 20
 10096  00104C  22DA               	addwfc	fsr2h,f,c
 10097  00104E  0E38               	movlw	56
 10098  001050  6EDE               	movwf	postinc2,c
 10099  001052  0E02               	movlw	2
 10100  001054  6EDD               	movwf	postdec2,c
 10101  001056  0C02               	retlw	2
 10102  001058                     __end_ofPL38:
 10103                           	opt stack 0
 10104  001058                     PL44:
 10105                           	opt stack 20
 10106  001058  EE20 F002          	lfsr	2,2
 10107  00105C  500F               	movf	_pBDTEntryIn,w,c
 10108  00105E  26D9               	addwf	fsr2l,f,c
 10109  001060  5010               	movf	_pBDTEntryIn+1,w,c
 10110  001062  0012               	return	
 10111  001064                     __end_ofPL44:
 10112                           	opt stack 0
 10113                           tblptru	equ	0xFF8
 10114                           tblptrh	equ	0xFF7
 10115                           tblptrl	equ	0xFF6
 10116                           tablat	equ	0xFF5
 10117                           prodh	equ	0xFF4
 10118                           prodl	equ	0xFF3
 10119                           intcon	equ	0xFF2
 10120                           postinc0	equ	0xFEE
 10121                           wreg	equ	0xFE8
 10122                           indf1	equ	0xFE7
 10123                           postdec1	equ	0xFE5
 10124                           fsr1h	equ	0xFE2
 10125                           fsr1l	equ	0xFE1
 10126                           indf2	equ	0xFDF
 10127                           postinc2	equ	0xFDE
 10128                           postdec2	equ	0xFDD
 10129                           plusw2	equ	0xFDB
 10130                           fsr2h	equ	0xFDA
 10131                           fsr2l	equ	0xFD9
 10132                           status	equ	0xFD8
 10133                           
 10134 ;; *************** function _USBCtrlTrfTxService *****************
 10135 ;; Defined at:
 10136 ;;		line 1771 in file "picLibs/usb_device.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;		None
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  1    wreg      void 
 10143 ;; Registers used:
 10144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10145 ;; Tracked objects:
 10146 ;;		On entry : 3D/2
 10147 ;;		On exit  : 3F/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10150 ;;      Params:         0       0       0       0
 10151 ;;      Locals:         1       0       0       0
 10152 ;;      Temps:          0       0       0       0
 10153 ;;      Totals:         1       0       0       0
 10154 ;;Total ram usage:        1 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; This function calls:
 10157 ;;		Nothing
 10158 ;; This function is called by:
 10159 ;;		_USBCtrlEPAllowDataStage
 10160 ;;		_USBCtrlTrfInHandler
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164                           	psect	text57
 10165  000D62                     __ptext57:
 10166                           	opt stack 0
 10167  000D62                     _USBCtrlTrfTxService:
 10168                           	opt stack 20
 10169                           
 10170                           ;usb_device.c: 1773: uint8_t byteToSend;
 10171                           ;usb_device.c: 1777: byteToSend = 8;
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;incstack = 0
 10175  000D62  0E08               	movlw	8
 10176  000D64  6E2A               	movwf	USBCtrlTrfTxService@byteToSend,c
 10177                           
 10178                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10179  000D66  500E               	movf	_inPipes+5,w,c	;volatile
 10180  000D68  E10D               	bnz	i2l3251
 10181  000D6A  0E08               	movlw	8
 10182  000D6C  5C0D               	subwf	_inPipes+4,w,c	;volatile
 10183  000D6E  E20A               	bc	i2l3251
 10184                           
 10185                           ;usb_device.c: 1779: {
 10186                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10187  000D70  C00D  F02A         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10188                           
 10189                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10190  000D74  5027               	movf	_shortPacketStatus,w,c	;volatile
 10191  000D76  E102               	bnz	i2l3247
 10192                           
 10193                           ;usb_device.c: 1788: {
 10194                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10195  000D78  0E01               	movlw	1
 10196  000D7A  D003               	goto	L16
 10197  000D7C                     i2l3247:
 10198                           
 10199                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10200  000D7C  0427               	decf	_shortPacketStatus,w,c	;volatile
 10201  000D7E  E102               	bnz	i2l3251
 10202                           
 10203                           ;usb_device.c: 1792: {
 10204                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10205  000D80  0E02               	movlw	2
 10206  000D82                     L16:
 10207  000D82  6E27               	movwf	_shortPacketStatus,c	;volatile
 10208  000D84                     i2l3251:
 10209                           
 10210                           ;usb_device.c: 1794: }
 10211                           ;usb_device.c: 1795: }
 10212                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10213  000D84  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10214  000D86  5E0D               	subwf	_inPipes+4,f,c	;volatile
 10215  000D88  0E00               	movlw	0
 10216  000D8A  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 10217                           
 10218                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10219  000D8C  EE20 F001          	lfsr	2,1
 10220  000D90  D82F               	call	PL66	;call to abstracted procedure
 10221  000D92  C02A  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10222                           
 10223                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10224  000D96  0E38               	movlw	56
 10225  000D98  0100               	movlb	0	; () banked
 10226  000D9A  6F7A               	movwf	_pDst& (0+255),b
 10227  000D9C  0E02               	movlw	2
 10228  000D9E  6F7B               	movwf	(_pDst+1)& (0+255),b
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10232  000DA0  B00C               	btfsc	_inPipes+3,0,c	;volatile
 10233  000DA2  D01A               	goto	i2l3279
 10234  000DA4  D00B               	goto	i2l3269
 10235  000DA6                     i2l3261:
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;usb_device.c: 1812: {
 10239                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10240  000DA6  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10241  000DAA  D819               	call	PL54	;call to abstracted procedure
 10242  000DAC  64F7               	cpfsgt	tblptrh,c
 10243  000DAE  D003               	bra	i2u197_47
 10244  000DB0  0008               	tblrd		*
 10245  000DB2  50F5               	movf	tablat,w,c
 10246  000DB4  D002               	bra	i2u197_40
 10247  000DB6                     i2u197_47:
 10248  000DB6  EC1D  F005         	call	PL18	;call to abstracted procedure
 10249  000DBA                     i2u197_40:
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;usb_device.c: 1814: byteToSend--;
 10253  000DBA  D81F               	call	PL68	;call to abstracted procedure
 10254  000DBC                     i2l3269:
 10255                           
 10256                           ; BSR set to: 0
 10257  000DBC  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10258  000DBE  E1F3               	bnz	i2l3261
 10259  000DC0  0012               	return	
 10260  000DC2                     i2l3271:
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;usb_device.c: 1820: {
 10264                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10265  000DC2  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10266  000DC6  D80B               	call	PL54	;call to abstracted procedure
 10267  000DC8  64F7               	cpfsgt	tblptrh,c
 10268  000DCA  D003               	bra	i2u199_47
 10269  000DCC  0008               	tblrd		*
 10270  000DCE  50F5               	movf	tablat,w,c
 10271  000DD0  D002               	bra	i2u199_40
 10272  000DD2                     i2u199_47:
 10273  000DD2  EC1D  F005         	call	PL18	;call to abstracted procedure
 10274  000DD6                     i2u199_40:
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;usb_device.c: 1822: byteToSend--;
 10278  000DD6  D811               	call	PL68	;call to abstracted procedure
 10279  000DD8                     i2l3279:
 10280                           
 10281                           ; BSR set to: 0
 10282  000DD8  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10283  000DDA  E1F3               	bnz	i2l3271
 10284                           
 10285                           ; BSR set to: 0
 10286  000DDC  0012               	return		;funcret
 10287  000DDE                     __end_of_USBCtrlTrfTxService:
 10288                           	opt stack 0
 10289  000DDE                     PL54:
 10290                           	opt stack 20
 10291  000DDE  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10292  000DE2  6AF8               	clrf	tblptru,c
 10293  000DE4  C07A  FFD9         	movff	_pDst,fsr2l
 10294  000DE8  C07B  FFDA         	movff	_pDst+1,fsr2h
 10295  000DEC  0E02               	movlw	(high __ramtop+-1)
 10296  000DEE  0012               	return	
 10297  000DF0                     __end_ofPL54:
 10298                           	opt stack 0
 10299  000DF0                     PL66:
 10300                           	opt stack 21
 10301  000DF0  500F               	movf	_pBDTEntryIn,w,c
 10302  000DF2  26D9               	addwf	fsr2l,f,c
 10303  000DF4  5010               	movf	_pBDTEntryIn+1,w,c
 10304  000DF6  22DA               	addwfc	fsr2h,f,c
 10305  000DF8  0012               	return	
 10306  000DFA                     __end_ofPL66:
 10307                           	opt stack 0
 10308  000DFA                     PL68:
 10309                           	opt stack 20
 10310  000DFA  6EDF               	movwf	indf2,c
 10311  000DFC  4A09               	infsnz	_inPipes,f,c	;volatile
 10312  000DFE  2A0A               	incf	_inPipes+1,f,c	;volatile
 10313  000E00  0100               	movlb	0	; () banked
 10314  000E02  4B7A               	infsnz	_pDst& (0+255),f,b
 10315  000E04  2B7B               	incf	(_pDst+1)& (0+255),f,b
 10316  000E06  062A               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10317  000E08  0012               	return	
 10318  000E0A                     __end_ofPL68:
 10319                           	opt stack 0
 10320                           tblptru	equ	0xFF8
 10321                           tblptrh	equ	0xFF7
 10322                           tblptrl	equ	0xFF6
 10323                           tablat	equ	0xFF5
 10324                           prodh	equ	0xFF4
 10325                           prodl	equ	0xFF3
 10326                           intcon	equ	0xFF2
 10327                           postinc0	equ	0xFEE
 10328                           wreg	equ	0xFE8
 10329                           indf1	equ	0xFE7
 10330                           postdec1	equ	0xFE5
 10331                           fsr1h	equ	0xFE2
 10332                           fsr1l	equ	0xFE1
 10333                           indf2	equ	0xFDF
 10334                           postinc2	equ	0xFDE
 10335                           postdec2	equ	0xFDD
 10336                           plusw2	equ	0xFDB
 10337                           fsr2h	equ	0xFDA
 10338                           fsr2l	equ	0xFD9
 10339                           status	equ	0xFD8
 10340                           tblptru	equ	0xFF8
 10341                           tblptrh	equ	0xFF7
 10342                           tblptrl	equ	0xFF6
 10343                           tablat	equ	0xFF5
 10344                           prodh	equ	0xFF4
 10345                           prodl	equ	0xFF3
 10346                           intcon	equ	0xFF2
 10347                           postinc0	equ	0xFEE
 10348                           wreg	equ	0xFE8
 10349                           indf1	equ	0xFE7
 10350                           postdec1	equ	0xFE5
 10351                           fsr1h	equ	0xFE2
 10352                           fsr1l	equ	0xFE1
 10353                           indf2	equ	0xFDF
 10354                           postinc2	equ	0xFDE
 10355                           postdec2	equ	0xFDD
 10356                           plusw2	equ	0xFDB
 10357                           fsr2h	equ	0xFDA
 10358                           fsr2l	equ	0xFD9
 10359                           status	equ	0xFD8
 10360                           
 10361                           	psect	rparam
 10362  0000                     tblptru	equ	0xFF8
 10363                           tblptrh	equ	0xFF7
 10364                           tblptrl	equ	0xFF6
 10365                           tablat	equ	0xFF5
 10366                           prodh	equ	0xFF4
 10367                           prodl	equ	0xFF3
 10368                           intcon	equ	0xFF2
 10369                           postinc0	equ	0xFEE
 10370                           wreg	equ	0xFE8
 10371                           indf1	equ	0xFE7
 10372                           postdec1	equ	0xFE5
 10373                           fsr1h	equ	0xFE2
 10374                           fsr1l	equ	0xFE1
 10375                           indf2	equ	0xFDF
 10376                           postinc2	equ	0xFDE
 10377                           postdec2	equ	0xFDD
 10378                           plusw2	equ	0xFDB
 10379                           fsr2h	equ	0xFDA
 10380                           fsr2l	equ	0xFD9
 10381                           status	equ	0xFD8
 10382                           
 10383                           	psect	temp
 10384  000052                     btemp:
 10385                           	opt stack 0
 10386  000052                     	ds	1
 10387  0000                     int$flags	set	btemp
 10388                           tblptru	equ	0xFF8
 10389                           tblptrh	equ	0xFF7
 10390                           tblptrl	equ	0xFF6
 10391                           tablat	equ	0xFF5
 10392                           prodh	equ	0xFF4
 10393                           prodl	equ	0xFF3
 10394                           intcon	equ	0xFF2
 10395                           postinc0	equ	0xFEE
 10396                           wreg	equ	0xFE8
 10397                           indf1	equ	0xFE7
 10398                           postdec1	equ	0xFE5
 10399                           fsr1h	equ	0xFE2
 10400                           fsr1l	equ	0xFE1
 10401                           indf2	equ	0xFDF
 10402                           postinc2	equ	0xFDE
 10403                           postdec2	equ	0xFDD
 10404                           plusw2	equ	0xFDB
 10405                           fsr2h	equ	0xFDA
 10406                           fsr2l	equ	0xFD9
 10407                           status	equ	0xFD8
 10408                           tblptru	equ	0xFF8
 10409                           tblptrh	equ	0xFF7
 10410                           tblptrl	equ	0xFF6
 10411                           tablat	equ	0xFF5
 10412                           prodh	equ	0xFF4
 10413                           prodl	equ	0xFF3
 10414                           intcon	equ	0xFF2
 10415                           postinc0	equ	0xFEE
 10416                           wreg	equ	0xFE8
 10417                           indf1	equ	0xFE7
 10418                           postdec1	equ	0xFE5
 10419                           fsr1h	equ	0xFE2
 10420                           fsr1l	equ	0xFE1
 10421                           indf2	equ	0xFDF
 10422                           postinc2	equ	0xFDE
 10423                           postdec2	equ	0xFDD
 10424                           plusw2	equ	0xFDB
 10425                           fsr2h	equ	0xFDA
 10426                           fsr2l	equ	0xFD9
 10427                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    197
    Data        18
    BSS         220
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      81
    BANK0           160     26     159
    BANK1           256     10      74
    BANK2            64      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    putrsUSBUSART@data	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_2(CODE[31]), STR_1(CODE[3]), buttonMessage(BANK0[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_2(CODE[31]), STR_1(CODE[3]), buttonMessage(BANK0[18]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK0[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4447_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4447_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4447_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4447_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMh[64]), cdc_data_rx(BIGRAMh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2765$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2755$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2755$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2731$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2731$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2731$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2731$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_PIC18F26K40_readThreeBytes
    _getsUSBUSART->_USBTransferOnePacket
    _PIC18F26K40_readThreeBytes->_PIC18F26K40_sendByte
    _PIC18F26K40_loadPC->_PIC18F26K40_sendByte
    _PIC18F26K40_loadDataIntoNVM->_PIC18F26K40_sendByteMsbToLsb
    _PIC18F26K40_enterLowVoltageProg->_PIC18F26K40_sendByte
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_APP_DeviceCDCBasicDemoTasks

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12092
                                             24 BANK0      2     2      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK0      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                         10    10      0   10665
                                              0 BANK1     10    10      0
                   _BUTTON_IsPressed
                       _CDCTxService
    _PIC18F26K40_enterLowVoltageProg
     _PIC18F26K40_exitLowVoltageProg
        _PIC18F26K40_loadDataIntoNVM
                 _PIC18F26K40_loadPC
         _PIC18F26K40_readThreeBytes
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        7     5      2     476
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         3     1      2    2232
                                              9 BANK0      3     1      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_readThreeBytes                          18    14      4    1639
                                              6 BANK0     18    14      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadPC                                   8     4      4    1647
                                              6 BANK0      8     4      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadDataIntoNVM                         10     5      5     505
                                              4 BANK0     10     5      5
       _PIC18F26K40_sendByteMsbToLsb
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByteMsbToLsb                         4     4      0     130
                                              0 BANK0      4     4      0
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_exitLowVoltageProg                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_enterLowVoltageProg                      4     4      0    1405
                                              6 BANK0      4     4      0
               _PIC18F26K40_sendByte
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByte                                 6     5      1    1269
                                              0 BANK0      6     5      1
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (4) _PIC18F26K40_setTrisToOut                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2129
                                              9 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1928
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SYS_InterruptHigh                                   10    10      0   30325
                                             30 COMRAM    10    10      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       1     1      0   30325
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     1     1      0   17702
                                             28 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               0     0      0   17063
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   12982
                                             27 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 1     1      0    4487
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    4460
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3989
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                          _CDCInitEP
                 _USBCheckCDCRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (8) i2_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (9) i2_LED_Enable                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_BUTTON_Enable                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i2_USBTransferOnePacket                               9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (8) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (9) _LED_On                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _LED_Off                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _PIC18F26K40_enterLowVoltageProg
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
       _PIC18F26K40_setTrisToOut
     _PIC18F26K40_exitLowVoltageProg
     _PIC18F26K40_loadDataIntoNVM
       _PIC18F26K40_sendByteMsbToLsb
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_loadPC
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_readThreeBytes
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            1FF      0       0      12        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      A      4A       6       28.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      51       1       86.2%
BIGRAMh             40      0       0      11        0.0%
BITBANK2            40      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A       7        0.0%
DATA                 0      0     13A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 30 09:35:39 2017

                               _USB_SD_Ptr 0301                                         PL2 0F18  
                                       PL4 0BB0                                         PL6 0BBA  
                                       PL8 1032                                ?_LED_Enable 002A  
                            _USBDeviceInit 1400                         __size_of_CDCInitEP 0052  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                                      PL10 0BC4                                        PL20 0940  
                                      PL12 0BD4                                        PL30 1828  
                                      PL22 0538                                        PL14 090E  
                                      PL40 19BA                                        PL32 0A46  
                                      PL24 0AF4                                        PL16 1042  
                                      PL50 0E8E                                        PL42 0896  
                                      PL34 0968                                        PL26 0B00  
                                      PL18 0A3A                                        PL60 0574  
                                      PL52 0D2A                                        PL44 1058  
                                      PL36 0542                                        PL28 1862  
                                      PL70 08AC                                        PL62 11C4  
                                      PL54 0DDE                                        PL46 0B0C  
                                      PL38 104C                                __CFG_LVP$ON 000000  
                                      PL80 06BE                                        PL72 1388  
                                      PL64 11CE                                        PL56 0558  
                                      PL48 0A5E                                        PL90 0996  
                                      PL82 098C                                        PL74 1148  
                                      PL66 0DF0                                        PL58 056A  
                                      PL92 0D50                                        PL84 0D3E  
                                      PL76 0980                                        PL68 0DFA  
                                      PL94 0B20                                        PL86 0D46  
                                      PL78 0FCA                                        PL96 0EA2  
                                      PL88 07C2                                        PL98 16B4  
     USER_USB_CALLBACK_EVENT_HANDLER@event 0036       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0038  
                                      l101 15B8                                        l102 15BA  
                                      l124 16CE                                        l221 1A7C  
                                      l126 16F4                                        l127 16F6  
                                      l170 0588                                        l173 05AE  
              __end_of_USBStdGetDscHandler 0A3A                                        l281 18A6  
                                      l282 18AA                                        l283 18AE  
                                      l518 181C                                        l279 18A2  
                                      l519 181A                                        l822 0824  
                                      l808 1470                                        _BDT 000200  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                                      _UIE 000F60                                        _UIR 000F62  
                   _APP_LEDUpdateUSBStatus 12B8                                 _USBSuspend 19A4  
                             __CFG_BORV$30 000000                       USBStdSetCfgHandler@i 003E  
                                      prod 000FF3                                        wreg 000FE8  
                           _USBDeviceTasks 06CC                             _USBDeviceState 0081  
                             __CFG_FOSC$XT 000000                              _BUTTON_Enable 1ACA  
                    ??_USBCtrlTrfRxService 002A                   __size_ofi2_USBDeviceInit 0048  
                           ??_getsUSBUSART 00DE                                       PL100 123E  
                                     PL110 0BDE                                       PL102 0D58  
                                     PL112 0BE8                                       PL104 1A1C  
                                     PL114 08BC                                       PL106 1156  
                                     PL116 1AC4                                       PL108 0B2A  
                 USBEnableEndpoint@options 0032                            __end_of_LED_Off 1950  
               USBConfigureEndpoint@handle 0030                                       l5015 187E  
                                     l4521 1582                                       l4611 0C04  
                                     l4525 158C                                       l4613 0C0C  
                                     l4701 147A                                       l4527 1592  
                                     l4631 0C2E                                       l4801 0850  
                                     l4625 0C1E                                       l4803 0856  
                                     l4811 0868                                       l4731 134E  
                                     l4565 0AA0                                       l4821 087C  
                                     l4813 086C                                       l4629 0C28  
                                     l4725 133C                                       l4709 14AC  
                                     l4559 0A82                                       l4823 0892  
                                     l4671 14E4                                       l4639 0C76  
                                     l4735 1360                                       l4577 0AD6  
                                     l4673 14EA                                       l4729 134A  
                                     l4905 06BA                                       l4913 1A36  
                                     l4739 1384                                       l4755 1A58  
                                     l4835 18B2                                       l4843 196A  
                                     l4931 1424                                       l4773 07F6  
                                     l4765 07E6                                       l4861 05B0  
                                     l4909 1A2A                                       l4687 1A82  
                                     l4839 195A                                       l4793 083E  
                                     l4785 0828                                       l4769 07EE  
                                     l4881 062C                                       l4961 1438  
                                     l4937 094A                                       l4779 0816  
                                     l4867 05CC                                       l4869 05D6  
                                     l4895 0682                                       l4897 069A  
                                     l4899 069E                      ??i2_SYSTEM_Initialize 002B  
                                     STR_1 03E2                                       STR_2 03C6  
                                     u4067 188E                                       u3524 15AA  
                                     u3525 15A6                                       u4077 1514  
                                     u3710 14A8                                       u4087 171A  
                                     u3554 16E6                                       u3555 16E2  
                                     u3644 0C4E                                       u3645 0C48  
                                     u3717 14A4                                       u3860 084E  
                                     u3880 0866                                       u3867 084A  
                                     u3887 0862                      ??_USBCtrlTrfTxService 002A  
                                     _UCFG 000F61                                       _UEP0 000F53  
                                     _UEP1 000F54                                       _UEIE 000F5B  
                                     _UCON 000F64                                       _UEIR 000F5F  
                          _CDCDataInHandle 0076     USBStdFeatureReqHandler@current_ep_data 0042  
                                     _pDst 007A                                       _main 186C  
                 ??i2_USBTransferOnePacket 002E                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                            _USBDeviceAttach 1804  
                                     btemp 0052                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0062  
                 __size_ofi2_BUTTON_Enable 0006                              __CFG_IESO$OFF 000000  
               __end_of_USBCheckStdRequest 0FCA                     ??_USBCtrlTrfOutHandler 002C  
                             ___param_bank 000000                  ??_USBStdFeatureReqHandler 003E  
                   __size_of_putrsUSBUSART 005E                       _PIC18F26K40_sendByte 1578  
                 ??_USBStdGetStatusHandler 002A                             ?_USBDeviceInit 002A  
                            __CFG_PLLEN$ON 000000             PIC18F26K40_readThreeBytes@data 00E5  
                              _writeBuffer 0100                                      ?_main 002A  
        __size_of_USBCtrlEPServiceComplete 006A                                      _ANSEL 000F7E  
                   __end_of_USBDeviceTasks 07C2                  ?_USBCtrlEPServiceComplete 002A  
                                    i2l241 1900                                      i2l242 1904  
                                    i2l251 192C                                      i2l243 1908  
                                    i2l252 1930                                      i2l253 1934  
                                    i2l239 18FC                                      i2l249 1928  
                                    i2l281 18D4                                      i2l601 0A26  
                                    i2l282 18D8                                      i2l610 11E8  
                                    i2l283 18DC                                      i2l611 11EC  
                                    i2l702 04E8                                      i2l606 11DE  
                                    i2l279 18D0                                      i2l543 0EDE  
                                    i2l480 07BE                                      i2l609 122C  
                                    i2l481 076E                                      i2l619 185E  
                                    i2l644 19F0                                      i2l469 06F4  
                                    i2l654 102A                                      i2l646 1A02  
                                    i2l479 0768                                      i2l684 0400  
                                    i2l596 09F4                                      i2l668 0F52  
                                    i2l677 0F6E                                      i2l694 04A6  
                                    i2l599 0A22                                      i2l769 10A2  
                                    _UADDR 000F5C                             __CFG_BBSIZ$OFF 000000  
                                    _USTAT 000F63           __end_of_PIC18F26K40_setTrisToOut 1AE6  
                            __CFG_WRT0$OFF 000000         __size_of_USBCtrlEPAllowStatusStage 0064  
                            __CFG_WRT1$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             ?_BUTTON_Enable 002A  
                           __CFG_EBTR1$OFF 000000            __end_of_USBCtrlEPAllowDataStage 1578  
                                    _sd000 03C2                                      _sd001 037C  
                                    _sd002 0348                              __CFG_WRTB$OFF 000000  
           ?_USBIncrement1msInternalTimers 002A                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                               i2memset@p1 002A                  __size_of_BUTTON_IsPressed 001A  
                           __CFG_BOREN$OFF 000000                                      tablat 000FF5  
                      __size_of_LED_Enable 0030                                      plusw2 000FDB  
                        __end_of_CDCInitEP 1674                                      status 000FD8  
                             __end_ofPL100 1248                               __end_ofPL110 0BE8  
                             __end_ofPL102 0D62                               __end_ofPL112 0BF2  
                             __end_ofPL104 1A24                               __end_ofPL114 08C6  
                             __end_ofPL106 1160                               __end_ofPL116 1ACA  
                             __end_ofPL108 0B34                           __end_ofi2_memset 19A4  
                          putUSBUSART@data 00D3               __size_of_USBStdSetCfgHandler 0084  
                           __CFG_MCLRE$OFF 000000                            __initialization 15D0  
                    ?_PIC18F26K40_sendByte 00D3                               __end_of_main 189C  
              __size_of_PIC18F26K40_loadPC 003C                  __size_of_USBCtrlEPService 0070  
                                   ??_main 00EB                              __activetblptr 000002  
                          ?_USBDeviceTasks 002A                                ?_USBSuspend 002A  
                                ??_LED_Off 002A                               _cdc_mem_type 007C  
                            _putrsUSBUSART 1466                    __end_of_USBDeviceAttach 1828  
                         _CDCDataOutHandle 0078            PIC18F26K40_loadDataIntoNVM@data 00D7  
                                   _ANSELH 000F7F                            getsUSBUSART@len 00DD  
                   SYSTEM_Initialize@state 00D4                      __size_of_CDCTxService 00CA  
                                   i2l3041 190C                                     i2l3121 12F0  
                                   i2l3113 12D0                                     i2l3025 1122  
                                   i2l3035 1938                                     i2l3051 17EA  
                                   i2l3125 12FE                                     i2l3117 12E0  
                                   i2l3109 12C2                                     i2l3205 1A0A  
                                   i2l3303 118E                                     i2l3135 1318  
                                   i2l3047 17DC                                     i2l3071 0CB6  
                                   i2l3143 1070                                     i2l3215 1398  
                                   i2l4103 185C                                     _LED_On 18F8  
                                   i2l3129 130E                                     i2l3137 1322  
                                   i2l3161 1098                                     i2l3153 1086  
                                   i2l3065 18E0                                     i2l3209 1A16  
                                   i2l3217 13A2                                     i2l3251 0D84  
                                   i2l3171 10B6                                     i2l3147 107C  
                                   i2l3219 13AC                                     i2l3227 13B4  
                                   i2l3331 154E                                     i2l4123 12AA  
                                   i2l3261 0DA6                                     i2l3077 0CD2  
                                   i2l3405 0A2A                                     i2l4301 0710  
                           __CFG_WDTEN$OFF 000000                                     i2l3271 0DC2  
                                   i2l3247 0D7C                                     i2l3183 10CE  
                                   i2l3335 1562                                     i2l4143 08D6  
                                   i2l3089 0D0A                                     i2l3177 10C8  
                                   i2l3513 050E                                     i2l3417 11FA  
                                   i2l3603 0B9C                                     i2l3515 0514  
                                   i2l3507 04F4                                     i2l3427 121E  
                                   i2l3283 1984                                     i2l3355 0E2A  
                                   i2l4067 19DA                                     i2l4315 0732  
                                   i2l4307 0726                                     i2l3269 0DBC  
                                   i2l5061 13FC                                     i2l3461 0446  
                                   i2l3445 0402                                     i2l3533 0ECC  
                                   i2l4069 19DC                                     i2l4173 08E6  
                                   i2l4333 075C                                     i2l4325 0744  
                                   i2l3279 0DD8                                     i2l3287 1994  
                                   i2l4319 073A                                     i2l3385 09B0  
                                   i2l3377 0E74                                     i2l3625 0F5C  
                                   i2l3545 0EF0                                     i2l3553 0EFE  
                                   i2l3529 0EC6                                     i2l4361 07B6  
                                   i2l4353 078C                                     i2l4281 06EC  
                                   i2l4273 06E0                                     i2l3803 1024  
                                   i2l5059 13C8                                     i2l3475 0474  
                                   i2l3651 0F8A                                     i2l3581 0B5A  
                                   i2l3485 049A                                     i2l3469 0464  
                                   i2l3397 09F8                                     i2l3389 09C4  
                                   i2l3637 0F62                                     i2l3725 1762  
                                   i2l3733 1782                                     i2l3487 04B2  
                                   i2l3647 0F7E                                     i2l4359 07A2  
                                   i2l4295 0706                                     i2l3577 0B4E  
                                   i2l3497 04D2                                     i2l3587 0B68  
                                   i2l3499 04D8                                     i2l3599 0B94  
                                   i2l3785 1002                                     i2l3797 101A  
                            CDCTxService@i 00DC                   i2USBTransferOnePacket@ep 0030  
                        ??i2_USBDeviceInit 0032            __size_ofi2_USBTransferOnePacket 0080  
                        _shortPacketStatus 0027                             __CFG_XINST$OFF 000000  
             ??_PIC18F26K40_readThreeBytes 00DD                            USBDeviceTasks@i 0047  
              USBStdFeatureReqHandler@pUEP 0040                   USBTransferOnePacket@data 00D4  
               USBCtrlTrfInHandler@lastDTS 002B                            ??_USBDeviceInit 00DB  
                             ?_putUSBUSART 00D3                             __CFG_STVREN$ON 000000  
                     __end_of_getsUSBUSART 1388                          ??i2_BUTTON_Enable 002A  
                        _USBEnableEndpoint 17CE          APP_DeviceCDCBasicDemoTasks@a_2111 0144  
          __size_of_USBStdGetStatusHandler 0068                                     _memcpy 1750  
                            ?i2_LED_Enable 002A                                     _memset 1950  
                                   clear_0 15F6                                     clear_1 1602  
                                   clear_2 160E                PIC18F26K40_readThreeBytes@i 00EA  
              PIC18F26K40_readThreeBytes@j 00E9                         ?_USBEnableEndpoint 0032  
            __size_of_USBTransferOnePacket 0082                            ??_BUTTON_Enable 00D3  
                             _CDCTxService 07CC                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                             ?_putrsUSBUSART 00D3  
                      ??_USBEnableEndpoint 0033                                _CtrlTrfData 000238  
                          __CFG_HFOFST$OFF 000000                   _PIC18F26K40_setTrisToOut 1ADE  
             ?_APP_DeviceCDCBasicDemoTasks 002A        __size_of_PIC18F26K40_readThreeBytes 00B8  
                     _controlTransferState 0026                          _SYSTEM_Initialize 1A24  
                               __accesstop 0060                    __end_of__initialization 1614  
                       ?_SYSTEM_Initialize 002A                              ___rparam_used 000001  
                 __size_of_USBStallHandler 002A                        __size_of_USBSuspend 0016  
                   ??_PIC18F26K40_sendByte 00D4                             __pcstackCOMRAM 002A  
                __end_of_USBEnableEndpoint 1804                              __end_of_sd000 03C6  
                            __end_of_sd001 03B0                              __end_of_sd002 037C  
                             __pidataBANK0 1AAC                        ??_SYSTEM_Initialize 00D4  
                                LED_On@led 002A           __size_of_USBCtrlEPAllowDataStage 005A  
                           ??i2_LED_Enable 002A                               ??_LED_Enable 00D3  
            __size_of_USBConfigureEndpoint 0064                __end_of_USBCtrlTrfInHandler 1032  
                  ?_APP_LEDUpdateUSBStatus 002A                                 __end_ofPL2 0F46  
                               __end_ofPL4 0BBA                                 __end_ofPL6 0BC4  
                               __end_ofPL8 1042                     i2_USBTransferOnePacket 0CAA  
                          __CFG_PCLKEN$OFF 000000                                  ?i2_memset 002A  
                               _cdc_rx_len 001C                                 _cdc_tx_len 001B  
             ?_PIC18F26K40_loadDataIntoNVM 00D7                              _buttonMessage 00ED  
                 ??_USBCtrlTrfSetupHandler 0046                    _USBTicksSinceSuspendEnd 007D  
                         ?_USBDeviceAttach 002A                  __end_of_SYSTEM_Initialize 1A40  
                         _BUTTON_IsPressed 1A78                     _USBStdGetStatusHandler 11D6  
                            _buttonPressed 007F                                 __pbssBANK0 0060  
                               __pbssBANK1 0100                                    ?_LED_On 002A  
            ??_APP_DeviceCDCBasicDemoTasks 00EB   __end_of_APP_DeviceCDCBasicDemoInitialize 1AAC  
__size_of_APP_DeviceCDCBasicDemoInitialize 001A         ??_APP_DeviceCDCBasicDemoInitialize 002A  
        ?_APP_DeviceCDCBasicDemoInitialize 002A           _APP_DeviceCDCBasicDemoInitialize 1A92  
                       __end_of_LED_Enable 18CC                __size_of_USBWakeFromSuspend 0020  
                              _pBDTEntryIn 000F           __end_of_USBCtrlEPServiceComplete 0F18  
              __size_of_USBCheckCDCRequest 0080                       USBCtrlTrfRxService@i 002A  
                            LED_Enable@led 00D3             __end_of_APP_LEDUpdateUSBStatus 1328  
                                  ?_memcpy 002A               APP_DeviceCDCBasicDemoTasks@a 0140  
             APP_DeviceCDCBasicDemoTasks@i 0149                                    ?_memset 00D3  
                               _device_dsc 03B0                           _USBCtrlEPService 1248  
                               _ep_data_in 0073                __end_of_USBCtrlTrfRxService 0BB0  
                       _USBCheckStdRequest 0F46                          _configDescriptor1 0305  
                          ??_putrsUSBUSART 00D5                                    _LED_Off 1924  
              __end_ofi2_SYSTEM_Initialize 1A1C                                 ??i2_memset 0030  
              __end_of_USBCtrlTrfTxService 0DDE                        _USBStdSetCfgHandler 0E0A  
      PIC18F26K40_loadDataIntoNVM@tempData 00DD                            __CFG_USBDIV$OFF 000000  
                      ?_USBCheckStdRequest 002A               __size_of_USBStdGetDscHandler 009A  
            ??_PIC18F26K40_loadDataIntoNVM 00DC                                    _UIEbits 000F60  
                                  _UIRbits 000F62                            __size_of_LED_On 002C  
                            _cdc_trf_state 0080             APP_LEDUpdateUSBStatus@ledCount 0019  
       __end_of_PIC18F26K40_readThreeBytes 0CAA                 _PIC18F26K40_readThreeBytes 0BF2  
                                  _pCDCDst 006A                                    _pCDCSrc 006D  
                          __CFG_PWRTEN$OFF 000000                      __size_of_getsUSBUSART 0060  
                                  __Hparam 0000            ??_USBIncrement1msInternalTimers 002A  
                     ?_USBStdSetCfgHandler 002A                                  _CDCInitEP 1622  
                                  __Lparam 0000                 __size_of_USBEnableEndpoint 0036  
                               _readBuffer 0082                       ??_USBCheckStdRequest 0045  
            __size_of_USBCtrlTrfOutHandler 0020                           ??_USBDeviceTasks 0047  
                        ??_USBStallHandler 002A                               __psmallconst 0300  
     __size_of_APP_DeviceCDCBasicDemoTasks 0140                       __size_of_putUSBUSART 001C  
                                  __pcinit 15D0                         getsUSBUSART@buffer 00DC  
                          __size_of_memcpy 0042                            __size_of_memset 002A  
                __end_of_configDescriptor1 0348                                    __ramtop 0300  
                                  __ptext0 186C                                    __ptext1 1400  
                                  __ptext2 1950                                    __ptext3 1804  
                                  __ptext4 1A24                                    __ptext5 189C  
                                  __ptext6 1ACA                                    __ptext7 057E  
                                  __ptext8 1466                                    __ptext9 1A40  
                                  _inPipes 0009                _USBDeferOUTDataStagePackets 007E  
                             ??_USBSuspend 003E                            i2_USBDeviceInit 08C6  
                         i2USBDeviceInit@i 0032                      PIC18F26K40_sendByte@i 00D8  
                    PIC18F26K40_sendByte@j 00D7                         __end_of_USB_CD_Ptr 0305  
               __size_of_SYSTEM_Initialize 001C            __size_of_USBCtrlTrfSetupHandler 0040  
                     end_of_initialization 1614                               _getsUSBUSART 1328  
                     __end_ofi2_LED_Enable 18F8                         __end_of_USB_SD_Ptr 0304  
                                  memcpy@d 0030                                    memcpy@n 002E  
                                  memcpy@s 0032                        _pBDTEntryEP0OutNext 0015  
                                  memset@c 00D5                                    memset@n 00D7  
                                  memset@p 00D9                              __Lmediumconst 0000  
                          _USB1msTickCount 0066            _dummy_encapsulated_cmd_response 00C2  
                          i2_BUTTON_Enable 1ABE                   ?_USBStdFeatureReqHandler 002A  
                    ??_USBStdSetCfgHandler 003E                                 ?_CDCInitEP 002A  
                       __end_of_USBSuspend 19BA       __size_of_PIC18F26K40_loadDataIntoNVM 005A  
                  _USBCtrlEPAllowDataStage 151E                                    postdec1 000FE5  
                                  postdec2 000FDD                 __end_of_PIC18F26K40_loadPC 17CE  
                                  postinc0 000FEE                                    postinc2 000FDE  
                 PIC18F26K40_sendByte@info 00D6    __end_of_PIC18F26K40_enterLowVoltageProg 1750  
 __size_of_PIC18F26K40_enterLowVoltageProg 0046           ?_PIC18F26K40_enterLowVoltageProg 002A  
        ??_PIC18F26K40_enterLowVoltageProg 00D9            _PIC18F26K40_enterLowVoltageProg 170A  
                 _USBCtrlEPServiceComplete 0EAE                 _USBStatusStageEnabledFlag1 001F  
               _USBStatusStageEnabledFlag2 001E                         USBEnableEndpoint@p 0033  
                                _PORTAbits 000F80                                  _PORTCbits 000F82  
               ??_PIC18F26K40_setTrisToOut 00D3                                  _TRISCbits 000F94  
            PIC18F26K40_loadPC@tempAddress 00DD                         _BothEP0OutUOWNsSet 0022  
                USBConfigureEndpoint@EPNum 002F                 ?_USBCtrlEPAllowStatusStage 002A  
      USER_USB_CALLBACK_EVENT_HANDLER@size 003A    APP_DeviceCDCBasicDemoTasks@numBytesRead 0148  
                                _USTATcopy 0028            ?_PIC18F26K40_exitLowVoltageProg 002A  
         ??_PIC18F26K40_exitLowVoltageProg 00D3               __end_of_USBTransferOnePacket 0AF4  
                           __end_of_LED_On 1924                          putUSBUSART@length 00D5  
                   _USBCtrlTrfSetupHandler 1674                   __end_of_BUTTON_IsPressed 1A92  
                  ?i2_USBTransferOnePacket 002A                      __end_of_USBDeviceInit 1466  
    __end_of_USBIncrement1msInternalTimers 1A78     __size_of_USBIncrement1msInternalTimers 001C  
            _USBIncrement1msInternalTimers 1A5C                                 LED_Off@led 002A  
                  __end_ofi2_USBDeviceInit 090E                                  i2memset@c 002C  
                                i2memset@n 002E                                  i2memset@p 0030  
                           __end_of_memcpy 1792                         putrsUSBUSART@pData 00D7  
                           __end_of_memset 197A                          _USBBusIsSuspended 0024  
                              __end_ofPL10 0BD4                                __end_ofPL20 0968  
                              __end_ofPL12 0BDE                                __end_ofPL30 1838  
                              __end_ofPL22 0542                                __end_ofPL14 0940  
                              __end_ofPL40 19C6                                __end_ofPL32 0A5E  
                              __end_ofPL24 0B00                                __end_ofPL16 104C  
                              __end_ofPL50 0EA2                                __end_ofPL42 08AC  
                              __end_ofPL34 0980                                __end_ofPL26 0B0C  
                              __end_ofPL18 0A46                                __end_ofPL60 057E  
                              __end_ofPL52 0D3E                                __end_ofPL44 1064  
                              __end_ofPL36 0558                                __end_ofPL28 186C  
                              __end_ofPL70 08BC                                __end_ofPL62 11CE  
                              __end_ofPL54 0DF0                                __end_ofPL46 0B20  
                              __end_ofPL38 1058                                __end_ofPL80 06CC  
                              __end_ofPL72 1396                                __end_ofPL64 11D6  
                              __end_ofPL56 056A                                __end_ofPL48 0A72  
                              __end_ofPL90 09A0                                __end_ofPL82 0996  
                              __end_ofPL74 1156                                __end_ofPL66 0DFA  
                              __end_ofPL58 0574                                __end_ofPL92 0D58  
                              __end_ofPL84 0D46                                __end_ofPL76 098C  
                              __end_ofPL68 0E0A                                __end_ofPL94 0B2A  
                              __end_ofPL86 0D50                                __end_ofPL78 0FD6  
                              __end_ofPL96 0EAE                                __end_ofPL88 07CC  
                              __end_ofPL98 16C0                        start_initialization 15D0  
                  ?_USBStdGetStatusHandler 002A                   i2SYSTEM_Initialize@state 002B  
                    __end_of_BUTTON_Enable 1AD4              USBCtrlTrfRxService@byteToRead 002B  
                  __end_ofi2_BUTTON_Enable 1AC4                                _cdc_data_rx 000280  
                              _cdc_data_tx 000240                          __size_ofi2_memset 002A  
             __end_of_USBConfigureEndpoint 1148            __end_of_USBStdFeatureReqHandler 0538  
                                 ??_LED_On 002A          __end_of_USBCtrlEPAllowStatusStage 11C4  
                 __end_of_USBCtrlEPService 12B8                  ??_USBCtrlEPAllowDataStage 002B  
                              ??_CDCInitEP 0036                             USBDeviceInit@i 00DB  
                   _pBDTEntryEP0OutCurrent 0017                    USBTransferOnePacket@dir 00D3  
                  USBTransferOnePacket@len 00D6             __end_ofi2_USBTransferOnePacket 0D2A  
            __size_of_PIC18F26K40_sendByte 0058                        _USBStdGetDscHandler 09A0  
      PIC18F26K40_readThreeBytes@direction 00E4                                __pdataBANK0 00ED  
                                 ??_memcpy 0030                                   ??_memset 00D9  
                   BUTTON_IsPressed@button 00D3                     _USBActiveConfiguration 0029  
           __end_of_USBStdGetStatusHandler 123E                  PIC18F26K40_loadPC@address 00D9  
                                 ?_LED_Off 002A                                __pbssCOMRAM 0001  
                            __pcstackBANK0 00D3                              __pcstackBANK1 0140  
             __size_of_USBCtrlTrfInHandler 005C                      __size_ofi2_LED_Enable 002C  
                     ?_USBStdGetDscHandler 002A                 __end_of_USBWakeFromSuspend 19E6  
                          _USBStallHandler 1838                               _pBDTEntryOut 0060  
               __end_of_USBCheckCDCRequest 10E4                   __size_of_USBDeviceAttach 0024  
              ?_PIC18F26K40_readThreeBytes 00D9                      i2BUTTON_Enable@button 002A  
                                __pintcode 0008                               i2_LED_Enable 18CC  
                         ?i2_USBDeviceInit 002A                       _USBTransferOnePacket 0A72  
                              __smallconst 0300                      __end_of_putrsUSBUSART 14C4  
             __end_of_USBCtrlTrfOutHandler 1A06                      ??_USBStdGetDscHandler 002A  
                              _ep_data_out 0070                           ?i2_BUTTON_Enable 002A  
      __end_of_APP_DeviceCDCBasicDemoTasks 06BE                _APP_DeviceCDCBasicDemoTasks 057E  
             __size_of_USBCtrlTrfRxService 007C              USBConfigureEndpoint@direction 002A  
             __size_ofi2_SYSTEM_Initialize 0016               __size_of_USBCtrlTrfTxService 007C  
                                 _LATCbits 000F8B                 ??_USBCtrlEPServiceComplete 002B  
                                 _IPR2bits 000FA2                                   _PIE2bits 000FA0  
    PIC18F26K40_loadDataIntoNVM@IncreasePC 00DB       __end_of_PIC18F26K40_sendByteMsbToLsb 170A  
    __size_of_PIC18F26K40_sendByteMsbToLsb 004A               _PIC18F26K40_sendByteMsbToLsb 16C0  
                                 i2u212_40 09DE                                   i2u212_47 09DC  
                                 i2u213_40 09F0                                   i2u213_47 09EE  
                                 i2u215_40 0A1C                                   i2u215_47 0A1A  
                                 i2u185_40 12EA                                   _PIR2bits 000FA1  
                                 i2u197_40 0DBA                                   i2u197_47 0DB6  
                                 i2u199_40 0DD6                                   i2u199_47 0DD2  
                                 _RCONbits 000FD0                              ??_putUSBUSART 00D6  
                         __CFG_WDTPS$32768 000000                                   _UEP0bits 000F53  
               _USBDeferINDataStagePackets 001D                __size_of_USBCheckStdRequest 0084  
                                 _UCONbits 000F64                       _USBConfigureEndpoint 10E4  
         __size_of_USBStdFeatureReqHandler 0152                      ?_USBTransferOnePacket 00D3  
                          i2LED_Enable@led 002A                          _SYS_InterruptHigh 0008  
                            ?_CDCTxService 002A                               _RemoteWakeup 0025  
                                 i2_memset 197A        __end_of_PIC18F26K40_loadDataIntoNVM 151E  
              _PIC18F26K40_loadDataIntoNVM 14C4                         _PIC18F26K40_loadPC 1792  
                         __size_of_LED_Off 002C                         ?_SYS_InterruptHigh 002A  
                  __end_of_USBStallHandler 1862                                  copy_data0 15E4  
                        putrsUSBUSART@data 00D3                ??_USBCtrlEPAllowStatusStage 002A  
              __end_of_USBStdSetCfgHandler 0E8E                        ?_PIC18F26K40_loadPC 00D9  
                      ??_SYS_InterruptHigh 0048                         __end_of_device_dsc 03C2  
                 ??_APP_LEDUpdateUSBStatus 002B                    ?_USBCtrlTrfSetupHandler 002A  
                  USBStdGetStatusHandler@p 002A                                   __Hrparam 0000  
      PIC18F26K40_enterLowVoltageProg@code 00D9                                  memcpy@tmp 0034  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 00D9  
         PIC18F26K40_sendByteMsbToLsb@info 00D5              ?_PIC18F26K40_sendByteMsbToLsb 002A  
                                 _SetupPkt 000230                      ?_USBConfigureEndpoint 002A  
   __end_of_PIC18F26K40_exitLowVoltageProg 1ADE    __size_of_PIC18F26K40_exitLowVoltageProg 000A  
           _PIC18F26K40_exitLowVoltageProg 1AD4                          ??_USBDeviceAttach 00D3  
                        ?_BUTTON_IsPressed 002A                       ??_PIC18F26K40_loadPC 00DD  
                __end_of_SYS_InterruptHigh 0062                         ??_BUTTON_IsPressed 00D3  
                      __end_of_putUSBUSART 1A5C                                _line_coding 00CA  
                           ??_CDCTxService 00DC              PIC18F26K40_sendByte@direction 00D3  
                  __size_of_USBDeviceTasks 00F6                                   __ptext10 1328  
                                 __ptext11 0BF2                                   __ptext20 0A72  
                                 __ptext12 1792                                   __ptext21 1A78  
                                 __ptext13 14C4                                   __ptext30 1750  
                                 __ptext14 16C0                                   __ptext31 1674  
                                 __ptext23 06CC                                   __ptext15 1AD4  
                                 __ptext40 1396                                   __ptext32 0EAE  
                                 __ptext24 08C6                                   __ptext16 170A  
                                 __ptext41 1A06                                   __ptext33 151E  
                                 __ptext25 19C6                                   __ptext17 1578  
                                 __ptext50 18F8                                   __ptext42 18CC  
                                 __ptext34 0F46                                   __ptext26 19A4  
                                 __ptext18 1ADE                                   __ptext51 1924  
                                 __ptext43 1ABE                                   __ptext35 0E0A  
                                 __ptext27 1838                                   __ptext19 07CC  
                                 __ptext52 1A92                                   __ptext44 1064  
                                 __ptext36 197A                                   __ptext28 1A5C  
                                 __ptext53 19E6                                   __ptext45 1622  
                                 __ptext37 11D6                                   __ptext29 1248  
                                 __ptext54 0B34                                   __ptext46 0CAA  
                                 __ptext38 09A0                                   __ptext55 1160  
                                 __ptext47 17CE                                   __ptext39 03E6  
                                 __ptext56 0FD6                                   __ptext48 10E4  
                                 __ptext57 0D62                                   __ptext49 12B8  
        __size_of_PIC18F26K40_setTrisToOut 0008             __end_of_USBCtrlTrfSetupHandler 16B4  
                            __size_of_main 0030                          ?_USBCtrlEPService 002A  
                ?_PIC18F26K40_setTrisToOut 002A                         ??_USBCtrlEPService 0046  
                      _USBCtrlTrfInHandler 0FD6                        BUTTON_Enable@button 00D3  
                                 _outPipes 0001                       _USBCtrlTrfOutHandler 19E6  
                                 int$flags 0052                  _USBCtrlEPAllowStatusStage 1160  
                               _LED_Enable 189C                     ??_USBTransferOnePacket 00D7  
                         putrsUSBUSART@len 00D9                  _USBDeferStatusStagePacket 0020  
                 CDCTxService@byte_to_send 00DD                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002A                                   memcpy@d1 002A  
                                 memcpy@s1 002C              USBCtrlTrfTxService@byteToSend 002A  
             __end_of_PIC18F26K40_sendByte 15D0                                   memset@p1 00D3  
                         ?_USBStallHandler 002A                   USBStdFeatureReqHandler@p 0043  
                                 intlevel2 0000                     __size_of_USBDeviceInit 0066  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1400   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 006A  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 003C           ?_USER_USB_CALLBACK_EVENT_HANDLER 0036  
          _USER_USB_CALLBACK_EVENT_HANDLER 1396               i2USBTransferOnePacket@handle 0031  
          __size_of_APP_LEDUpdateUSBStatus 0070                 i2USBTransferOnePacket@data 002B  
                   ??_USBConfigureEndpoint 002B                      ?_USBCtrlTrfOutHandler 002A  
                   __size_of_BUTTON_Enable 000A                                _putUSBUSART 1A40  
                     __CFG_CPUDIV$NOCLKDIV 000000                        _USBCtrlTrfRxService 0B34  
                       _USBWakeFromSuspend 19C6                    _USBStdFeatureReqHandler 03E6  
                      i2_SYSTEM_Initialize 1A06                         _USBCheckCDCRequest 1064  
                      _USBCtrlTrfTxService 0D62                 __size_of_SYS_InterruptHigh 005A  
           ??_PIC18F26K40_sendByteMsbToLsb 00D3              PIC18F26K40_sendByteMsbToLsb@i 00D6  
                      ?_USBWakeFromSuspend 002A                      ??_USBCtrlTrfInHandler 002B  
                    _USBAlternateInterface 00D1                        ?_USBCheckCDCRequest 002A  
                i2USBTransferOnePacket@dir 002A                  i2USBTransferOnePacket@len 002D  
                      USBEnableEndpoint@ep 0035                            _endpoint_number 0023  
                     ?_USBCtrlTrfRxService 002A                              ?_getsUSBUSART 00DC  
                     ?i2_SYSTEM_Initialize 002A                   ?_USBCtrlEPAllowDataStage 002A  
                     ?_USBCtrlTrfTxService 002A               _USBStatusStageTimeoutCounter 0021  
     PIC18F26K40_readThreeBytes@IncreasePC 00D9                       ??_USBWakeFromSuspend 003E  
               USBTransferOnePacket@handle 00DA                       __end_of_CDCTxService 0896  
                     ??_USBCheckCDCRequest 002A                                 _USB_CD_Ptr 0304  
