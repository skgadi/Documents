

Microchip Technology PIC18 PRO Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 15 18:37:37 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	pa_nodes0,global,class=CODE,delta=1
    75                           	dabs	1,0x200,48,_BDT
    76                           	dabs	1,0x280,15,_cdc_data_rx
    77                           	dabs	1,0x240,15,_cdc_data_tx
    78                           	dabs	1,0x238,8,_CtrlTrfData
    79                           	dabs	1,0x230,8,_SetupPkt
    80  0000                     
    81                           ; Version 1.42
    82                           ; Generated 13/04/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F14K50 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     tblptru	equ	0xFF8
   116                           tblptrh	equ	0xFF7
   117                           tblptrl	equ	0xFF6
   118                           tablat	equ	0xFF5
   119                           prodh	equ	0xFF4
   120                           prodl	equ	0xFF3
   121                           intcon	equ	0xFF2
   122                           wreg	equ	0xFE8
   123                           indf1	equ	0xFE7
   124                           fsr1h	equ	0xFE2
   125                           fsr1l	equ	0xFE1
   126                           indf2	equ	0xFDF
   127                           postinc2	equ	0xFDE
   128                           postdec2	equ	0xFDD
   129                           plusw2	equ	0xFDB
   130                           fsr2h	equ	0xFDA
   131                           fsr2l	equ	0xFD9
   132                           status	equ	0xFD8
   133                           
   134                           	psect	idataBANK0
   135  001A5E                     __pidataBANK0:
   136                           	opt stack 0
   137                           
   138                           ;initializer for _buttonMessage
   139  001A5E  42                 	db	66
   140  001A5F  75                 	db	117
   141  001A60  74                 	db	116
   142  001A61  74                 	db	116
   143  001A62  6F                 	db	111
   144  001A63  6E                 	db	110
   145  001A64  20                 	db	32
   146  001A65  70                 	db	112
   147  001A66  72                 	db	114
   148  001A67  65                 	db	101
   149  001A68  73                 	db	115
   150  001A69  73                 	db	115
   151  001A6A  65                 	db	101
   152  001A6B  64                 	db	100
   153  001A6C  2E                 	db	46
   154  001A6D  0D                 	db	13
   155  001A6E  0A                 	db	10
   156  001A6F  00                 	db	0
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           prodh	equ	0xFF4
   162                           prodl	equ	0xFF3
   163                           intcon	equ	0xFF2
   164                           wreg	equ	0xFE8
   165                           indf1	equ	0xFE7
   166                           fsr1h	equ	0xFE2
   167                           fsr1l	equ	0xFE1
   168                           indf2	equ	0xFDF
   169                           postinc2	equ	0xFDE
   170                           postdec2	equ	0xFDD
   171                           plusw2	equ	0xFDB
   172                           fsr2h	equ	0xFDA
   173                           fsr2l	equ	0xFD9
   174                           status	equ	0xFD8
   175                           
   176                           	psect	smallconst
   177  000300                     __psmallconst:
   178                           	opt stack 0
   179  000300  00                 	db	0
   180  000301                     _USB_SD_Ptr:
   181                           	opt stack 0
   182  000301  C2                 	db	low _sd000
   183  000302  7C                 	db	low _sd001
   184  000303  48                 	db	low _sd002
   185  000304                     __end_of_USB_SD_Ptr:
   186                           	opt stack 0
   187  000304                     _USB_CD_Ptr:
   188                           	opt stack 0
   189  000304  05                 	db	low _configDescriptor1
   190  000305                     __end_of_USB_CD_Ptr:
   191                           	opt stack 0
   192  000305                     _configDescriptor1:
   193                           	opt stack 0
   194  000305  09                 	db	9
   195  000306  02                 	db	2
   196  000307  43                 	db	67
   197  000308  00                 	db	0
   198  000309  02                 	db	2
   199  00030A  01                 	db	1
   200  00030B  00                 	db	0
   201  00030C  C0                 	db	192
   202  00030D  32                 	db	50
   203  00030E  09                 	db	9
   204  00030F  04                 	db	4
   205  000310  00                 	db	0
   206  000311  00                 	db	0
   207  000312  01                 	db	1
   208  000313  02                 	db	2
   209  000314  02                 	db	2
   210  000315  01                 	db	1
   211  000316  00                 	db	0
   212  000317  05                 	db	5
   213  000318  24                 	db	36
   214  000319  00                 	db	0
   215  00031A  10                 	db	16
   216  00031B  01                 	db	1
   217  00031C  04                 	db	4
   218  00031D  24                 	db	36
   219  00031E  02                 	db	2
   220  00031F  02                 	db	2
   221  000320  05                 	db	5
   222  000321  24                 	db	36
   223  000322  06                 	db	6
   224  000323  00                 	db	0
   225  000324  01                 	db	1
   226  000325  05                 	db	5
   227  000326  24                 	db	36
   228  000327  01                 	db	1
   229  000328  00                 	db	0
   230  000329  01                 	db	1
   231  00032A  07                 	db	7
   232  00032B  05                 	db	5
   233  00032C  81                 	db	129
   234  00032D  03                 	db	3
   235  00032E  08                 	db	8
   236  00032F  00                 	db	0
   237  000330  02                 	db	2
   238  000331  09                 	db	9
   239  000332  04                 	db	4
   240  000333  01                 	db	1
   241  000334  00                 	db	0
   242  000335  02                 	db	2
   243  000336  0A                 	db	10
   244  000337  00                 	db	0
   245  000338  00                 	db	0
   246  000339  00                 	db	0
   247  00033A  07                 	db	7
   248  00033B  05                 	db	5
   249  00033C  02                 	db	2
   250  00033D  02                 	db	2
   251  00033E  40                 	db	64
   252  00033F  00                 	db	0
   253  000340  00                 	db	0
   254  000341  07                 	db	7
   255  000342  05                 	db	5
   256  000343  82                 	db	130
   257  000344  02                 	db	2
   258  000345  40                 	db	64
   259  000346  00                 	db	0
   260  000347  00                 	db	0
   261  000348                     __end_of_configDescriptor1:
   262                           	opt stack 0
   263  000348                     _sd002:
   264                           	opt stack 0
   265  000348  34                 	db	52
   266  000349  03                 	db	3
   267  00034A  0043               	dw	67
   268  00034C  0044               	dw	68
   269  00034E  0043               	dw	67
   270  000350  0020               	dw	32
   271  000352  0052               	dw	82
   272  000354  0053               	dw	83
   273  000356  002D               	dw	45
   274  000358  0032               	dw	50
   275  00035A  0033               	dw	51
   276  00035C  0032               	dw	50
   277  00035E  0020               	dw	32
   278  000360  0045               	dw	69
   279  000362  006D               	dw	109
   280  000364  0075               	dw	117
   281  000366  006C               	dw	108
   282  000368  0061               	dw	97
   283  00036A  0074               	dw	116
   284  00036C  0069               	dw	105
   285  00036E  006F               	dw	111
   286  000370  006E               	dw	110
   287  000372  0020               	dw	32
   288  000374  0044               	dw	68
   289  000376  0065               	dw	101
   290  000378  006D               	dw	109
   291  00037A  006F               	dw	111
   292  00037C                     __end_of_sd002:
   293                           	opt stack 0
   294  00037C                     _sd001:
   295                           	opt stack 0
   296  00037C  34                 	db	52
   297  00037D  03                 	db	3
   298  00037E  004D               	dw	77
   299  000380  0069               	dw	105
   300  000382  0063               	dw	99
   301  000384  0072               	dw	114
   302  000386  006F               	dw	111
   303  000388  0063               	dw	99
   304  00038A  0068               	dw	104
   305  00038C  0069               	dw	105
   306  00038E  0070               	dw	112
   307  000390  0020               	dw	32
   308  000392  0054               	dw	84
   309  000394  0065               	dw	101
   310  000396  0063               	dw	99
   311  000398  0068               	dw	104
   312  00039A  006E               	dw	110
   313  00039C  006F               	dw	111
   314  00039E  006C               	dw	108
   315  0003A0  006F               	dw	111
   316  0003A2  0067               	dw	103
   317  0003A4  0079               	dw	121
   318  0003A6  0020               	dw	32
   319  0003A8  0049               	dw	73
   320  0003AA  006E               	dw	110
   321  0003AC  0063               	dw	99
   322  0003AE  002E               	dw	46
   323  0003B0                     __end_of_sd001:
   324                           	opt stack 0
   325  0003B0                     _device_dsc:
   326                           	opt stack 0
   327  0003B0  12                 	db	18
   328  0003B1  01                 	db	1
   329  0003B2  0200               	dw	512
   330  0003B4  02                 	db	2
   331  0003B5  00                 	db	0
   332  0003B6  00                 	db	0
   333  0003B7  08                 	db	8
   334  0003B8  04D8               	dw	1240
   335  0003BA  000A               	dw	10
   336  0003BC  0100               	dw	256
   337  0003BE  01                 	db	1
   338  0003BF  02                 	db	2
   339  0003C0  00                 	db	0
   340  0003C1  01                 	db	1
   341  0003C2                     __end_of_device_dsc:
   342                           	opt stack 0
   343  0003C2                     _sd000:
   344                           	opt stack 0
   345  0003C2  04                 	db	4
   346  0003C3  03                 	db	3
   347  0003C4  0409               	dw	1033
   348  0003C6                     __end_of_sd000:
   349                           	opt stack 0
   350  0000                     _UEP0bits	set	3923
   351  0000                     _UADDR	set	3932
   352  0000                     _UEIE	set	3931
   353  0000                     _UEIR	set	3935
   354  0000                     _UEP1	set	3924
   355  0000                     _UEP0	set	3923
   356  0000                     _ANSELH	set	3967
   357  0000                     _ANSEL	set	3966
   358  0000                     _INTCONbits	set	4082
   359  0000                     _IPR2bits	set	4002
   360  0000                     _RCONbits	set	4048
   361  0000                     _UCON	set	3940
   362  0000                     _USTAT	set	3939
   363  0000                     _PIR2bits	set	4001
   364  0000                     _UIEbits	set	3936
   365  0000                     _UIRbits	set	3938
   366  0000                     _UIE	set	3936
   367  0000                     _UCFG	set	3937
   368  0000                     _UIR	set	3938
   369  0000                     _PIE2bits	set	4000
   370  0000                     _PORTAbits	set	3968
   371  0000                     _UCONbits	set	3940
   372  0000                     _PORTCbits	set	3970
   373  0000                     _LATCbits	set	3979
   374  0000                     _TRISCbits	set	3988
   375                           
   376                           ; #config settings
   377  0003C6  00                 	db	0	; dummy byte at the end
   378  0000                     tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           prodh	equ	0xFF4
   383                           prodl	equ	0xFF3
   384                           intcon	equ	0xFF2
   385                           wreg	equ	0xFE8
   386                           indf1	equ	0xFE7
   387                           fsr1h	equ	0xFE2
   388                           fsr1l	equ	0xFE1
   389                           indf2	equ	0xFDF
   390                           postinc2	equ	0xFDE
   391                           postdec2	equ	0xFDD
   392                           plusw2	equ	0xFDB
   393                           fsr2h	equ	0xFDA
   394                           fsr2l	equ	0xFD9
   395                           status	equ	0xFD8
   396                           
   397                           	psect	cinit
   398  001646                     __pcinit:
   399                           	opt stack 0
   400  001646                     start_initialization:
   401                           	opt stack 0
   402  001646                     __initialization:
   403                           	opt stack 0
   404                           
   405                           ; Initialize objects allocated to BANK0 (18 bytes)
   406                           ; load TBLPTR registers with __pidataBANK0
   407  001646  0E5E               	movlw	low __pidataBANK0
   408  001648  6EF6               	movwf	tblptrl,c
   409  00164A  0E1A               	movlw	high __pidataBANK0
   410  00164C  6EF7               	movwf	tblptrh,c
   411  00164E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   412  001650  6EF8               	movwf	tblptru,c
   413  001652  EE00  F0D0         	lfsr	0,__pdataBANK0
   414  001656  EE10 F012          	lfsr	1,18
   415  00165A                     copy_data0:
   416  00165A  0009               	tblrd		*+
   417  00165C  CFF5 FFEE          	movff	tablat,postinc0
   418  001660  50E5               	movf	postdec1,w,c
   419  001662  50E1               	movf	fsr1l,w,c
   420  001664  E1FA               	bnz	copy_data0
   421                           
   422                           ; Clear objects allocated to BANK0 (81 bytes)
   423  001666  EE00  F060         	lfsr	0,__pbssBANK0
   424  00166A  0E51               	movlw	81
   425  00166C                     clear_0:
   426  00166C  6AEE               	clrf	postinc0,c
   427  00166E  06E8               	decf	wreg,f,c
   428  001670  E1FD               	bnz	clear_0
   429                           
   430                           ; Clear objects allocated to COMRAM (41 bytes)
   431  001672  EE00  F001         	lfsr	0,__pbssCOMRAM
   432  001676  0E29               	movlw	41
   433  001678                     clear_1:
   434  001678  6AEE               	clrf	postinc0,c
   435  00167A  06E8               	decf	wreg,f,c
   436  00167C  E1FD               	bnz	clear_1
   437  00167E                     end_of_initialization:
   438                           	opt stack 0
   439  00167E                     __end_of__initialization:
   440                           	opt stack 0
   441  00167E  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   442  001680  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   443  001682  0E00               	movlw	low (__Lmediumconst shr (0+16))
   444  001684  6EF8               	movwf	tblptru,c
   445  001686  0100               	movlb	0
   446  001688  EF11  F00C         	goto	_main	;jump to C main() function
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           prodh	equ	0xFF4
   452                           prodl	equ	0xFF3
   453                           intcon	equ	0xFF2
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           indf1	equ	0xFE7
   457                           postdec1	equ	0xFE5
   458                           fsr1h	equ	0xFE2
   459                           fsr1l	equ	0xFE1
   460                           indf2	equ	0xFDF
   461                           postinc2	equ	0xFDE
   462                           postdec2	equ	0xFDD
   463                           plusw2	equ	0xFDB
   464                           fsr2h	equ	0xFDA
   465                           fsr2l	equ	0xFD9
   466                           status	equ	0xFD8
   467                           
   468                           	psect	bssCOMRAM
   469  000001                     __pbssCOMRAM:
   470                           	opt stack 0
   471  000001                     _outPipes:
   472                           	opt stack 0
   473  000001                     	ds	8
   474  000009                     _inPipes:
   475                           	opt stack 0
   476  000009                     	ds	6
   477  00000F                     _pBDTEntryIn:
   478                           	opt stack 0
   479  00000F                     	ds	6
   480  000015                     _pBDTEntryEP0OutNext:
   481                           	opt stack 0
   482  000015                     	ds	2
   483  000017                     _pBDTEntryEP0OutCurrent:
   484                           	opt stack 0
   485  000017                     	ds	2
   486  000019                     APP_LEDUpdateUSBStatus@ledCount:
   487                           	opt stack 0
   488  000019                     	ds	2
   489  00001B                     _cdc_tx_len:
   490                           	opt stack 0
   491  00001B                     	ds	1
   492  00001C                     _cdc_rx_len:
   493                           	opt stack 0
   494  00001C                     	ds	1
   495  00001D                     _USBDeferINDataStagePackets:
   496                           	opt stack 0
   497  00001D                     	ds	1
   498  00001E                     _USBStatusStageEnabledFlag2:
   499                           	opt stack 0
   500  00001E                     	ds	1
   501  00001F                     _USBStatusStageEnabledFlag1:
   502                           	opt stack 0
   503  00001F                     	ds	1
   504  000020                     _USBDeferStatusStagePacket:
   505                           	opt stack 0
   506  000020                     	ds	1
   507  000021                     _USBStatusStageTimeoutCounter:
   508                           	opt stack 0
   509  000021                     	ds	1
   510  000022                     _BothEP0OutUOWNsSet:
   511                           	opt stack 0
   512  000022                     	ds	1
   513  000023                     _endpoint_number:
   514                           	opt stack 0
   515  000023                     	ds	1
   516  000024                     _USBBusIsSuspended:
   517                           	opt stack 0
   518  000024                     	ds	1
   519  000025                     _RemoteWakeup:
   520                           	opt stack 0
   521  000025                     	ds	1
   522  000026                     _controlTransferState:
   523                           	opt stack 0
   524  000026                     	ds	1
   525  000027                     _shortPacketStatus:
   526                           	opt stack 0
   527  000027                     	ds	1
   528  000028                     _USTATcopy:
   529                           	opt stack 0
   530  000028                     	ds	1
   531  000029                     _USBActiveConfiguration:
   532                           	opt stack 0
   533  000029                     	ds	1
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           prodh	equ	0xFF4
   539                           prodl	equ	0xFF3
   540                           intcon	equ	0xFF2
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           indf1	equ	0xFE7
   544                           postdec1	equ	0xFE5
   545                           fsr1h	equ	0xFE2
   546                           fsr1l	equ	0xFE1
   547                           indf2	equ	0xFDF
   548                           postinc2	equ	0xFDE
   549                           postdec2	equ	0xFDD
   550                           plusw2	equ	0xFDB
   551                           fsr2h	equ	0xFDA
   552                           fsr2l	equ	0xFD9
   553                           status	equ	0xFD8
   554                           
   555                           	psect	bssBANK0
   556  000060                     __pbssBANK0:
   557                           	opt stack 0
   558  000060                     _pBDTEntryOut:
   559                           	opt stack 0
   560  000060                     	ds	6
   561  000066                     _USB1msTickCount:
   562                           	opt stack 0
   563  000066                     	ds	4
   564  00006A                     _pCDCDst:
   565                           	opt stack 0
   566  00006A                     	ds	3
   567  00006D                     _pCDCSrc:
   568                           	opt stack 0
   569  00006D                     	ds	3
   570  000070                     _ep_data_out:
   571                           	opt stack 0
   572  000070                     	ds	3
   573  000073                     _ep_data_in:
   574                           	opt stack 0
   575  000073                     	ds	3
   576  000076                     _CDCDataInHandle:
   577                           	opt stack 0
   578  000076                     	ds	2
   579  000078                     _CDCDataOutHandle:
   580                           	opt stack 0
   581  000078                     	ds	2
   582  00007A                     _pDst:
   583                           	opt stack 0
   584  00007A                     	ds	2
   585  00007C                     _cdc_mem_type:
   586                           	opt stack 0
   587  00007C                     	ds	1
   588  00007D                     _USBTicksSinceSuspendEnd:
   589                           	opt stack 0
   590  00007D                     	ds	1
   591  00007E                     _USBDeferOUTDataStagePackets:
   592                           	opt stack 0
   593  00007E                     	ds	1
   594  00007F                     _buttonPressed:
   595                           	opt stack 0
   596  00007F                     	ds	1
   597  000080                     _cdc_trf_state:
   598                           	opt stack 0
   599  000080                     	ds	1
   600  000081                     _USBDeviceState:
   601                           	opt stack 0
   602  000081                     	ds	1
   603  000082                     _writeBuffer:
   604                           	opt stack 0
   605  000082                     	ds	15
   606  000091                     _readBuffer:
   607                           	opt stack 0
   608  000091                     	ds	15
   609  0000A0                     _dummy_encapsulated_cmd_response:
   610                           	opt stack 0
   611  0000A0                     	ds	8
   612  0000A8                     _line_coding:
   613                           	opt stack 0
   614  0000A8                     	ds	7
   615  0000AF                     _USBAlternateInterface:
   616                           	opt stack 0
   617  0000AF                     	ds	2
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           prodh	equ	0xFF4
   623                           prodl	equ	0xFF3
   624                           intcon	equ	0xFF2
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           indf1	equ	0xFE7
   628                           postdec1	equ	0xFE5
   629                           fsr1h	equ	0xFE2
   630                           fsr1l	equ	0xFE1
   631                           indf2	equ	0xFDF
   632                           postinc2	equ	0xFDE
   633                           postdec2	equ	0xFDD
   634                           plusw2	equ	0xFDB
   635                           fsr2h	equ	0xFDA
   636                           fsr2l	equ	0xFD9
   637                           status	equ	0xFD8
   638                           
   639                           	psect	dataBANK0
   640  0000D0                     __pdataBANK0:
   641                           	opt stack 0
   642  0000D0                     _buttonMessage:
   643                           	opt stack 0
   644  0000D0                     	ds	18
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           prodh	equ	0xFF4
   650                           prodl	equ	0xFF3
   651                           intcon	equ	0xFF2
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           indf1	equ	0xFE7
   655                           postdec1	equ	0xFE5
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           indf2	equ	0xFDF
   659                           postinc2	equ	0xFDE
   660                           postdec2	equ	0xFDD
   661                           plusw2	equ	0xFDB
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8
   665                           
   666                           	psect	cstackBANK0
   667  0000B1                     __pcstackBANK0:
   668                           	opt stack 0
   669  0000B1                     ??_PIC18F26K40_sendByteMsbToLsb:
   670  0000B1                     ?_USBTransferOnePacket:
   671                           	opt stack 0
   672  0000B1                     PIC18F26K40_sendByte@direction:
   673                           	opt stack 0
   674  0000B1                     BUTTON_IsPressed@button:
   675                           	opt stack 0
   676  0000B1                     BUTTON_Enable@button:
   677                           	opt stack 0
   678  0000B1                     LED_Enable@led:
   679                           	opt stack 0
   680  0000B1                     USBTransferOnePacket@dir:
   681                           	opt stack 0
   682  0000B1                     putUSBUSART@data:
   683                           	opt stack 0
   684  0000B1                     putrsUSBUSART@data:
   685                           	opt stack 0
   686  0000B1                     memset@p1:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x0
   690  0000B1                     	ds	1
   691  0000B2                     ??_PIC18F26K40_sendByte:
   692  0000B2                     SYSTEM_Initialize@state:
   693                           	opt stack 0
   694  0000B2                     putUSBUSART@length:
   695                           	opt stack 0
   696  0000B2                     putrsUSBUSART@pData:
   697                           	opt stack 0
   698  0000B2                     USBTransferOnePacket@data:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x1
   702  0000B2                     	ds	1
   703  0000B3                     PIC18F26K40_sendByteMsbToLsb@info:
   704                           	opt stack 0
   705  0000B3                     putrsUSBUSART@len:
   706                           	opt stack 0
   707  0000B3                     memset@c:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x2
   711  0000B3                     	ds	1
   712  0000B4                     PIC18F26K40_sendByte@info:
   713                           	opt stack 0
   714  0000B4                     PIC18F26K40_sendByteMsbToLsb@i:
   715                           	opt stack 0
   716  0000B4                     USBTransferOnePacket@len:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x3
   720  0000B4                     	ds	1
   721  0000B5                     ??_USBTransferOnePacket:
   722  0000B5                     PIC18F26K40_sendByte@j:
   723                           	opt stack 0
   724  0000B5                     memset@n:
   725                           	opt stack 0
   726  0000B5                     PIC18F26K40_loadDataIntoNVM@data:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x4
   730  0000B5                     	ds	1
   731  0000B6                     PIC18F26K40_sendByte@i:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x5
   735  0000B6                     	ds	1
   736  0000B7                     ?_PIC18F26K40_readThreeBytes:
   737                           	opt stack 0
   738  0000B7                     PIC18F26K40_readThreeBytes@IncreasePC:
   739                           	opt stack 0
   740  0000B7                     USBTransferOnePacket@ep:
   741                           	opt stack 0
   742  0000B7                     memset@p:
   743                           	opt stack 0
   744  0000B7                     PIC18F26K40_enterLowVoltageProg@code:
   745                           	opt stack 0
   746  0000B7                     PIC18F26K40_loadPC@address:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x6
   750  0000B7                     	ds	1
   751  0000B8                     USBTransferOnePacket@handle:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x7
   755  0000B8                     	ds	1
   756  0000B9                     PIC18F26K40_loadDataIntoNVM@IncreasePC:
   757                           	opt stack 0
   758  0000B9                     USBDeviceInit@i:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x8
   762  0000B9                     	ds	1
   763  0000BA                     PIC18F26K40_loadDataIntoNVM@LatchType:
   764                           	opt stack 0
   765  0000BA                     getsUSBUSART@buffer:
   766                           	opt stack 0
   767  0000BA                     CDCTxService@i:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x9
   771  0000BA                     	ds	1
   772  0000BB                     ??_PIC18F26K40_readThreeBytes:
   773  0000BB                     ??_PIC18F26K40_loadDataIntoNVM:
   774  0000BB                     getsUSBUSART@len:
   775                           	opt stack 0
   776  0000BB                     CDCTxService@byte_to_send:
   777                           	opt stack 0
   778  0000BB                     PIC18F26K40_loadPC@tempAddress:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0xA
   782  0000BB                     	ds	1
   783  0000BC                     PIC18F26K40_loadDataIntoNVM@tempData:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0xB
   787  0000BC                     	ds	6
   788  0000C2                     PIC18F26K40_readThreeBytes@direction:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x11
   792  0000C2                     	ds	1
   793  0000C3                     PIC18F26K40_readThreeBytes@data:
   794                           	opt stack 0
   795                           
   796                           ; 4 bytes @ 0x12
   797  0000C3                     	ds	4
   798  0000C7                     PIC18F26K40_readThreeBytes@j:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x16
   802  0000C7                     	ds	1
   803  0000C8                     PIC18F26K40_readThreeBytes@i:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x17
   807  0000C8                     	ds	1
   808  0000C9                     APP_DeviceCDCBasicDemoTasks@numBytesRead:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x18
   812  0000C9                     	ds	1
   813  0000CA                     APP_DeviceCDCBasicDemoTasks@a:
   814                           	opt stack 0
   815                           
   816                           ; 4 bytes @ 0x19
   817  0000CA                     	ds	4
   818  0000CE                     ??_main:
   819                           
   820                           ; 1 bytes @ 0x1D
   821  0000CE                     	ds	2
   822                           tblptru	equ	0xFF8
   823                           tblptrh	equ	0xFF7
   824                           tblptrl	equ	0xFF6
   825                           tablat	equ	0xFF5
   826                           prodh	equ	0xFF4
   827                           prodl	equ	0xFF3
   828                           intcon	equ	0xFF2
   829                           postinc0	equ	0xFEE
   830                           wreg	equ	0xFE8
   831                           indf1	equ	0xFE7
   832                           postdec1	equ	0xFE5
   833                           fsr1h	equ	0xFE2
   834                           fsr1l	equ	0xFE1
   835                           indf2	equ	0xFDF
   836                           postinc2	equ	0xFDE
   837                           postdec2	equ	0xFDD
   838                           plusw2	equ	0xFDB
   839                           fsr2h	equ	0xFDA
   840                           fsr2l	equ	0xFD9
   841                           status	equ	0xFD8
   842                           
   843                           	psect	cstackCOMRAM
   844  00002A                     __pcstackCOMRAM:
   845                           	opt stack 0
   846  00002A                     ??_USBStdGetDscHandler:
   847  00002A                     ?i2_USBTransferOnePacket:
   848                           	opt stack 0
   849  00002A                     LED_On@led:
   850                           	opt stack 0
   851  00002A                     LED_Off@led:
   852                           	opt stack 0
   853  00002A                     USBConfigureEndpoint@direction:
   854                           	opt stack 0
   855  00002A                     USBCtrlTrfTxService@byteToSend:
   856                           	opt stack 0
   857  00002A                     USBCtrlTrfRxService@i:
   858                           	opt stack 0
   859  00002A                     i2BUTTON_Enable@button:
   860                           	opt stack 0
   861  00002A                     i2LED_Enable@led:
   862                           	opt stack 0
   863  00002A                     i2USBTransferOnePacket@dir:
   864                           	opt stack 0
   865  00002A                     USBStdGetStatusHandler@p:
   866                           	opt stack 0
   867  00002A                     memcpy@d1:
   868                           	opt stack 0
   869  00002A                     i2memset@p1:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x0
   873  00002A                     	ds	1
   874  00002B                     ??_USBConfigureEndpoint:
   875  00002B                     USBCtrlTrfRxService@byteToRead:
   876                           	opt stack 0
   877  00002B                     USBCtrlTrfInHandler@lastDTS:
   878                           	opt stack 0
   879  00002B                     i2SYSTEM_Initialize@state:
   880                           	opt stack 0
   881  00002B                     i2USBTransferOnePacket@data:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x1
   885  00002B                     	ds	1
   886  00002C                     memcpy@s1:
   887                           	opt stack 0
   888  00002C                     i2memset@c:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x2
   892  00002C                     	ds	1
   893  00002D                     i2USBTransferOnePacket@len:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x3
   897  00002D                     	ds	1
   898  00002E                     ??i2_USBTransferOnePacket:
   899  00002E                     memcpy@n:
   900                           	opt stack 0
   901  00002E                     i2memset@n:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x4
   905  00002E                     	ds	1
   906  00002F                     USBConfigureEndpoint@EPNum:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x5
   910  00002F                     	ds	1
   911  000030                     i2USBTransferOnePacket@ep:
   912                           	opt stack 0
   913  000030                     USBConfigureEndpoint@handle:
   914                           	opt stack 0
   915  000030                     memcpy@d:
   916                           	opt stack 0
   917  000030                     i2memset@p:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x6
   921  000030                     	ds	1
   922  000031                     i2USBTransferOnePacket@handle:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x7
   926  000031                     	ds	1
   927  000032                     USBEnableEndpoint@options:
   928                           	opt stack 0
   929  000032                     i2USBDeviceInit@i:
   930                           	opt stack 0
   931  000032                     memcpy@s:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x8
   935  000032                     	ds	1
   936  000033                     USBEnableEndpoint@p:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x9
   940  000033                     	ds	1
   941  000034                     memcpy@tmp:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0xA
   945  000034                     	ds	1
   946  000035                     USBEnableEndpoint@ep:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0xB
   950  000035                     	ds	1
   951  000036                     USER_USB_CALLBACK_EVENT_HANDLER@event:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0xC
   955  000036                     	ds	2
   956  000038                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0xE
   960  000038                     	ds	2
   961  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@size:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x10
   965  00003A                     	ds	2
   966  00003C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
   967                           
   968                           ; 1 bytes @ 0x12
   969  00003C                     	ds	2
   970  00003E                     ??_USBStdFeatureReqHandler:
   971  00003E                     USBStdSetCfgHandler@i:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x14
   975  00003E                     	ds	2
   976  000040                     USBStdFeatureReqHandler@pUEP:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x16
   980  000040                     	ds	2
   981  000042                     USBStdFeatureReqHandler@current_ep_data:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x18
   985  000042                     	ds	1
   986  000043                     USBStdFeatureReqHandler@p:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x19
   990  000043                     	ds	2
   991  000045                     ??_USBCheckStdRequest:
   992                           
   993                           ; 1 bytes @ 0x1B
   994  000045                     	ds	1
   995  000046                     ??_USBCtrlEPService:
   996  000046                     
   997                           ; 1 bytes @ 0x1C
   998  000046                     	ds	1
   999  000047                     USBDeviceTasks@i:
  1000                           	opt stack 0
  1001                           
  1002                           ; 1 bytes @ 0x1D
  1003  000047                     	ds	1
  1004  000048                     ??_SYS_InterruptHigh:
  1005                           
  1006                           ; 1 bytes @ 0x1E
  1007  000048                     	ds	10
  1008                           tblptru	equ	0xFF8
  1009                           tblptrh	equ	0xFF7
  1010                           tblptrl	equ	0xFF6
  1011                           tablat	equ	0xFF5
  1012                           prodh	equ	0xFF4
  1013                           prodl	equ	0xFF3
  1014                           intcon	equ	0xFF2
  1015                           postinc0	equ	0xFEE
  1016                           wreg	equ	0xFE8
  1017                           indf1	equ	0xFE7
  1018                           postdec1	equ	0xFE5
  1019                           fsr1h	equ	0xFE2
  1020                           fsr1l	equ	0xFE1
  1021                           indf2	equ	0xFDF
  1022                           postinc2	equ	0xFDE
  1023                           postdec2	equ	0xFDD
  1024                           plusw2	equ	0xFDB
  1025                           fsr2h	equ	0xFDA
  1026                           fsr2l	equ	0xFD9
  1027                           status	equ	0xFD8
  1028                           
  1029 ;;
  1030 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1031 ;;
  1032 ;; *************** function _main *****************
  1033 ;; Defined at:
  1034 ;;		line 12 in file "main.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0
  1050 ;;      Temps:          0       2       0       0       0
  1051 ;;      Totals:         0       2       0       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels required when called:   14
  1054 ;; This function calls:
  1055 ;;		_APP_DeviceCDCBasicDemoTasks
  1056 ;;		_SYSTEM_Initialize
  1057 ;;		_USBDeviceAttach
  1058 ;;		_USBDeviceInit
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text0
  1065  001822                     __ptext0:
  1066                           	opt stack 0
  1067  001822                     _main:
  1068                           	opt stack 17
  1069                           
  1070                           ;main.c: 13: ANSEL = ANSELH = 0;
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;incstack = 0
  1074  001822  6A7F               	clrf	3967,c	;volatile
  1075  001824  6A7E               	clrf	3966,c	;volatile
  1076                           
  1077                           ;main.c: 14: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1078  001826  0E00               	movlw	0
  1079  001828  ECED  F00C         	call	_SYSTEM_Initialize
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;main.c: 15: USBDeviceInit();
  1083  00182C  EC25  F00A         	call	_USBDeviceInit	;wreg free
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 16: USBDeviceAttach();
  1087  001830  ECC3  F00B         	call	_USBDeviceAttach	;wreg free
  1088  001834                     l5011:
  1089                           
  1090                           ;main.c: 18: ;
  1091                           ;main.c: 37: APP_DeviceCDCBasicDemoTasks();
  1092  001834  ECB0  F002         	call	_APP_DeviceCDCBasicDemoTasks	;wreg free
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;main.c: 38: _delay((unsigned long)((100)*(12000000/4000.0)));
  1096  001838  0E02               	movlw	2
  1097  00183A  0100               	movlb	0	; () banked
  1098  00183C  6FCF               	movwf	(??_main+1)& (0+255),b
  1099  00183E  0E86               	movlw	134
  1100  001840  6FCE               	movwf	??_main& (0+255),b
  1101  001842  0E99               	movlw	153
  1102  001844                     u4007:
  1103  001844  2EE8               	decfsz	wreg,f,c
  1104  001846  D7FE               	bra	u4007
  1105  001848  2FCE               	decfsz	??_main& (0+255),f,b
  1106  00184A  D7FC               	bra	u4007
  1107  00184C  2FCF               	decfsz	(??_main+1)& (0+255),f,b
  1108  00184E  D7FA               	bra	u4007
  1109  001850  D7F1               	goto	l5011
  1110  001852                     __end_of_main:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           prodh	equ	0xFF4
  1117                           prodl	equ	0xFF3
  1118                           intcon	equ	0xFF2
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           indf1	equ	0xFE7
  1122                           postdec1	equ	0xFE5
  1123                           fsr1h	equ	0xFE2
  1124                           fsr1l	equ	0xFE1
  1125                           indf2	equ	0xFDF
  1126                           postinc2	equ	0xFDE
  1127                           postdec2	equ	0xFDD
  1128                           plusw2	equ	0xFDB
  1129                           fsr2h	equ	0xFDA
  1130                           fsr2l	equ	0xFD9
  1131                           status	equ	0xFD8
  1132                           
  1133 ;; *************** function _USBDeviceInit *****************
  1134 ;; Defined at:
  1135 ;;		line 277 in file "picLibs/usb_device.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  i               1    8[BANK0 ] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 3F/0
  1146 ;;		On exit  : 3F/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       1       0       0       0
  1151 ;;      Temps:          0       0       0       0       0
  1152 ;;      Totals:         0       1       0       0       0
  1153 ;;Total ram usage:        1 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:   11
  1156 ;; This function calls:
  1157 ;;		_memset
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text1
  1164  00144A                     __ptext1:
  1165                           	opt stack 0
  1166  00144A                     _USBDeviceInit:
  1167                           	opt stack 0
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;usb_device.c: 279: uint8_t i;
  1171                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1172                           
  1173                           ;incstack = 0
  1174                           
  1175                           ;usb_device.c: 285: ;
  1176                           ;usb_device.c: 288: {UEIR = 0;};
  1177                           
  1178                           ;usb_device.c: 291: {UIR = 0;};
  1179                           
  1180                           ;usb_device.c: 294: UEP0 = 0;
  1181  00144A  EC2A  F004         	call	PL80	;call to abstracted procedure
  1182                           
  1183                           ; BSR set to: 15
  1184                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1185  00144E  0E54               	movlw	84
  1186  001450  0100               	movlb	0	; () banked
  1187  001452  6FB1               	movwf	memset@p1& (0+255),b
  1188  001454  0E0F               	movlw	15
  1189  001456  6FB2               	movwf	(memset@p1+1)& (0+255),b
  1190  001458  6BB4               	clrf	(memset@c+1)& (0+255),b
  1191  00145A  6BB3               	clrf	memset@c& (0+255),b
  1192  00145C  6BB6               	clrf	(memset@n+1)& (0+255),b
  1193  00145E  0E02               	movlw	2
  1194  001460  6FB5               	movwf	memset@n& (0+255),b
  1195  001462  EC83  F00C         	call	_memset	;wreg free
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1199                           
  1200                           ; BSR set to: 0
  1201                           
  1202                           ; BSR set to: 15
  1203  001466  ECD5  F00B         	call	PL36	;call to abstracted procedure
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;usb_device.c: 301: ;
  1207                           ;usb_device.c: 304: ;
  1208                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1209  00146A  0100               	movlb	0	; () banked
  1210  00146C  6BB9               	clrf	USBDeviceInit@i& (0+255),b
  1211  00146E                     l4927:
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;usb_device.c: 308: {
  1215                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1216  00146E  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1217  001470  EC1E  F004         	call	PL40	;call to abstracted procedure
  1218                           
  1219                           ; BSR set to: 0
  1220  001474  2BB9               	incf	USBDeviceInit@i& (0+255),f,b
  1221                           
  1222                           ; BSR set to: 0
  1223  001476  0E0B               	movlw	11
  1224  001478  65B9               	cpfsgt	USBDeviceInit@i& (0+255),b
  1225  00147A  D7F9               	goto	l4927
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;usb_device.c: 310: }
  1229                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1230                           
  1231                           ;usb_device.c: 316: UADDR = 0x00;
  1232                           
  1233                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1234                           
  1235                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1236                           
  1237                           ;usb_device.c: 326: {
  1238                           ;usb_device.c: 327: (UIR &= 0xF7);
  1239                           
  1240                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1241                           
  1242                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1243                           
  1244                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1245                           
  1246                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1247                           
  1248                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1249                           
  1250                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1251                           
  1252                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1253                           
  1254                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1258  00147C  EC0A  F004         	call	PL20	;call to abstracted procedure
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1262  001480  6BB9               	clrf	USBDeviceInit@i& (0+255),b
  1263  001482                     l4957:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;usb_device.c: 346: {
  1267                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1268  001482  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1269  001484  ECB3  F005         	call	PL32	;call to abstracted procedure
  1270  001488  6ADE               	clrf	postinc2,c
  1271  00148A  6ADD               	clrf	postdec2,c
  1272                           
  1273                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1274  00148C  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1275  00148E  ECAD  F005         	call	PL28	;call to abstracted procedure
  1276  001492  6ADE               	clrf	postinc2,c
  1277  001494  6ADD               	clrf	postdec2,c
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1281  001496  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1282  001498  EC30  F004         	call	PL90	;call to abstracted procedure
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1286  00149C  51B9               	movf	USBDeviceInit@i& (0+255),w,b
  1287  00149E  EC35  F004         	call	PL96	;call to abstracted procedure
  1288                           
  1289                           ; BSR set to: 0
  1290  0014A2  2BB9               	incf	USBDeviceInit@i& (0+255),f,b
  1291                           
  1292                           ; BSR set to: 0
  1293  0014A4  0E02               	movlw	2
  1294  0014A6  65B9               	cpfsgt	USBDeviceInit@i& (0+255),b
  1295  0014A8  D7EC               	goto	l4957
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;usb_device.c: 351: }
  1299                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1300  0014AA  0E08               	movlw	8
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1304                           
  1305                           ; BSR set to: 15
  1306                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1307                           
  1308                           ; BSR set to: 2
  1309                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1310                           
  1311                           ; BSR set to: 2
  1312                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1313                           
  1314                           ; BSR set to: 2
  1315                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1316                           
  1317                           ; BSR set to: 2
  1318                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1319                           
  1320                           ; BSR set to: 2
  1321                           ;usb_device.c: 366: USB1msTickCount = 0;
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1328                           
  1329                           ; BSR set to: 0
  1330  0014AC  EFF1  F003         	goto	PL14	;call to abstracted procedure
  1331  0014B0                     __end_of_USBDeviceInit:
  1332                           	opt stack 0
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           prodh	equ	0xFF4
  1338                           prodl	equ	0xFF3
  1339                           intcon	equ	0xFF2
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           indf1	equ	0xFE7
  1343                           postdec1	equ	0xFE5
  1344                           fsr1h	equ	0xFE2
  1345                           fsr1l	equ	0xFE1
  1346                           indf2	equ	0xFDF
  1347                           postinc2	equ	0xFDE
  1348                           postdec2	equ	0xFDD
  1349                           plusw2	equ	0xFDB
  1350                           fsr2h	equ	0xFDA
  1351                           fsr2l	equ	0xFD9
  1352                           status	equ	0xFD8
  1353                           
  1354 ;; *************** function _memset *****************
  1355 ;; Defined at:
  1356 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  p1              2    0[BANK0 ] PTR void 
  1359 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1360 ;;  c               2    2[BANK0 ] int 
  1361 ;;  n               2    4[BANK0 ] unsigned int 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  p               2    6[BANK0 ] PTR unsigned char 
  1364 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2    0[BANK0 ] PTR void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 3F/0
  1371 ;;		On exit  : 3F/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1374 ;;      Params:         0       6       0       0       0
  1375 ;;      Locals:         0       2       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         0       8       0       0       0
  1378 ;;Total ram usage:        8 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:   10
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_USBDeviceInit
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text2
  1389  001906                     __ptext2:
  1390                           	opt stack 0
  1391  001906                     _memset:
  1392                           	opt stack 19
  1393                           
  1394                           ; BSR set to: 0
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;incstack = 0
  1398  001906  C0B1  F0B7         	movff	memset@p1,memset@p
  1399  00190A  C0B2  F0B8         	movff	memset@p1+1,memset@p+1
  1400  00190E  D008               	goto	l4833
  1401  001910                     l4829:
  1402                           
  1403                           ; BSR set to: 0
  1404  001910  C0B7  FFD9         	movff	memset@p,fsr2l
  1405  001914  C0B8  FFDA         	movff	memset@p+1,fsr2h
  1406  001918  C0B3  FFDF         	movff	memset@c,indf2
  1407                           
  1408                           ; BSR set to: 0
  1409  00191C  4BB7               	infsnz	memset@p& (0+255),f,b
  1410  00191E  2BB8               	incf	(memset@p+1)& (0+255),f,b
  1411  001920                     l4833:
  1412                           
  1413                           ; BSR set to: 0
  1414  001920  07B5               	decf	memset@n& (0+255),f,b
  1415  001922  A0D8               	btfss	status,0,c
  1416  001924  07B6               	decf	(memset@n+1)& (0+255),f,b
  1417  001926  29B5               	incf	memset@n& (0+255),w,b
  1418  001928  E1F3               	bnz	l4829
  1419  00192A  29B6               	incf	(memset@n+1)& (0+255),w,b
  1420  00192C  E1F1               	bnz	l4829
  1421                           
  1422                           ; BSR set to: 0
  1423  00192E  0012               	return		;funcret
  1424  001930                     __end_of_memset:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           prodh	equ	0xFF4
  1431                           prodl	equ	0xFF3
  1432                           intcon	equ	0xFF2
  1433                           postinc0	equ	0xFEE
  1434                           wreg	equ	0xFE8
  1435                           indf1	equ	0xFE7
  1436                           postdec1	equ	0xFE5
  1437                           fsr1h	equ	0xFE2
  1438                           fsr1l	equ	0xFE1
  1439                           indf2	equ	0xFDF
  1440                           postinc2	equ	0xFDE
  1441                           postdec2	equ	0xFDD
  1442                           plusw2	equ	0xFDB
  1443                           fsr2h	equ	0xFDA
  1444                           fsr2l	equ	0xFD9
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _USBDeviceAttach *****************
  1448 ;; Defined at:
  1449 ;;		line 1352 in file "picLibs/usb_device.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2
  1458 ;; Tracked objects:
  1459 ;;		On entry : 3F/0
  1460 ;;		On exit  : 3F/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:   10
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text3
  1478  001786                     __ptext3:
  1479                           	opt stack 0
  1480  001786                     _USBDeviceAttach:
  1481                           	opt stack 20
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;usb_device.c: 1356: {
  1485                           ;usb_device.c: 1357: if(1 == 1)
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;incstack = 0
  1489  001786  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1490  001788  A4D8               	btfss	status,2,c
  1491  00178A  0012               	return	
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;usb_device.c: 1358: {
  1495                           ;usb_device.c: 1360: UCON = 0;
  1496  00178C  6A64               	clrf	3940,c	;volatile
  1497                           
  1498                           ;usb_device.c: 1363: UIE = 0;
  1499  00178E  6A60               	clrf	3936,c	;volatile
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1503  001790  D80C               	call	PL36	;call to abstracted procedure
  1504                           
  1505                           ; BSR set to: 15
  1506                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1507  001792  8ED0               	bsf	4048,7,c	;volatile
  1508                           
  1509                           ; BSR set to: 15
  1510  001794  84A2               	bsf	4002,2,c	;volatile
  1511                           
  1512                           ; BSR set to: 15
  1513  001796  84A0               	bsf	4000,2,c	;volatile
  1514                           
  1515                           ; BSR set to: 15
  1516  001798  8EF2               	bsf	intcon,7,c	;volatile
  1517                           
  1518                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1519  00179A  D001               	goto	l448
  1520  00179C                     l449:
  1521  00179C  8664               	bsf	3940,3,c	;volatile
  1522  00179E                     l448:
  1523  00179E  A664               	btfss	3940,3,c	;volatile
  1524  0017A0  D7FD               	goto	l449
  1525                           
  1526                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1527  0017A2  0E01               	movlw	1
  1528  0017A4  0100               	movlb	0	; () banked
  1529  0017A6  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  1530                           
  1531                           ; BSR set to: 0
  1532  0017A8  0C01               	retlw	1	;funcret
  1533  0017AA                     __end_of_USBDeviceAttach:
  1534                           	opt stack 0
  1535  0017AA                     PL36:
  1536                           	opt stack 19
  1537  0017AA  0E16               	movlw	22
  1538  0017AC  6E61               	movwf	3937,c	;volatile
  1539  0017AE  0E9F               	movlw	159
  1540  0017B0  010F               	movlb	15	; () banked
  1541  0017B2  6F5B               	movwf	91,b	;volatile
  1542  0017B4  0E7B               	movlw	123
  1543  0017B6  6E60               	movwf	3936,c	;volatile
  1544  0017B8  0C7B               	retlw	123
  1545  0017BA                     __end_ofPL36:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           intcon	equ	0xFF2
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           indf1	equ	0xFE7
  1557                           postdec1	equ	0xFE5
  1558                           fsr1h	equ	0xFE2
  1559                           fsr1l	equ	0xFE1
  1560                           indf2	equ	0xFDF
  1561                           postinc2	equ	0xFDE
  1562                           postdec2	equ	0xFDD
  1563                           plusw2	equ	0xFDB
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _SYSTEM_Initialize *****************
  1569 ;; Defined at:
  1570 ;;		line 66 in file "picLibs/system.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  state           1    wreg     enum E3329
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  state           1    1[BANK0 ] enum E3329
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 3F/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         0       1       0       0       0
  1586 ;;      Temps:          0       0       0       0       0
  1587 ;;      Totals:         0       1       0       0       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:   11
  1591 ;; This function calls:
  1592 ;;		_BUTTON_Enable
  1593 ;;		_LED_Enable
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text4
  1600  0019DA                     __ptext4:
  1601                           	opt stack 0
  1602  0019DA                     _SYSTEM_Initialize:
  1603                           	opt stack 19
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;incstack = 0
  1607                           ;SYSTEM_Initialize@state stored from wreg
  1608  0019DA  0100               	movlb	0	; () banked
  1609  0019DC  6FB2               	movwf	SYSTEM_Initialize@state& (0+255),b
  1610                           
  1611                           ;system.c: 68: switch(state)
  1612  0019DE  D006               	goto	l4909
  1613  0019E0                     l4905:
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;system.c: 71: LED_Enable(LED_D1);
  1617  0019E0  0E01               	movlw	1
  1618  0019E2  EC29  F00C         	call	_LED_Enable
  1619                           
  1620                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  1621  0019E6  0E01               	movlw	1
  1622  0019E8  EF3E  F00D         	goto	_BUTTON_Enable
  1623  0019EC                     l4909:
  1624  0019EC  0100               	movlb	0	; () banked
  1625  0019EE  51B2               	movf	SYSTEM_Initialize@state& (0+255),w,b
  1626                           
  1627                           ; Switch size 1, requested type "space"
  1628                           ; Number of cases is 3, Range of values is 0 to 2
  1629                           ; switch strategies available:
  1630                           ; Name         Instructions Cycles
  1631                           ; simple_byte           10     6 (average)
  1632                           ;	Chosen strategy is simple_byte
  1633  0019F0  E0F7               	bz	l4905
  1634  0019F2  EFE9  F00C         	goto	PL104	;call to abstracted procedure
  1635  0019F6                     __end_of_SYSTEM_Initialize:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           prodh	equ	0xFF4
  1642                           prodl	equ	0xFF3
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           indf1	equ	0xFE7
  1647                           postdec1	equ	0xFE5
  1648                           fsr1h	equ	0xFE2
  1649                           fsr1l	equ	0xFE1
  1650                           indf2	equ	0xFDF
  1651                           postinc2	equ	0xFDE
  1652                           postdec2	equ	0xFDD
  1653                           plusw2	equ	0xFDB
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _LED_Enable *****************
  1659 ;; Defined at:
  1660 ;;		line 220 in file "picLibs/leds.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  led             1    wreg     enum E2
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  led             1    0[BANK0 ] enum E2
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 3F/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         0       1       0       0       0
  1676 ;;      Temps:          0       0       0       0       0
  1677 ;;      Totals:         0       1       0       0       0
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:   10
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_SYSTEM_Initialize
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text5
  1689  001852                     __ptext5:
  1690                           	opt stack 0
  1691  001852                     _LED_Enable:
  1692                           	opt stack 19
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;incstack = 0
  1696                           ;LED_Enable@led stored from wreg
  1697  001852  0100               	movlb	0	; () banked
  1698  001854  6FB1               	movwf	LED_Enable@led& (0+255),b
  1699                           
  1700                           ;leds.c: 222: switch(led)
  1701  001856  D008               	goto	l4825
  1702  001858                     l209:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  1706  001858  9094               	bcf	3988,0,c	;volatile
  1707                           
  1708                           ;leds.c: 226: break;
  1709  00185A  0012               	return	
  1710  00185C                     l211:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  1714  00185C  9294               	bcf	3988,1,c	;volatile
  1715                           
  1716                           ;leds.c: 230: break;
  1717  00185E  0012               	return	
  1718  001860                     l212:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  1722  001860  9494               	bcf	3988,2,c	;volatile
  1723                           
  1724                           ;leds.c: 234: break;
  1725  001862  0012               	return	
  1726  001864                     l213:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  1730  001864  9694               	bcf	3988,3,c	;volatile
  1731                           
  1732                           ;leds.c: 238: break;
  1733  001866  0012               	return	
  1734  001868                     l4825:
  1735  001868  0100               	movlb	0	; () banked
  1736  00186A  51B1               	movf	LED_Enable@led& (0+255),w,b
  1737                           
  1738                           ; Switch size 1, requested type "space"
  1739                           ; Number of cases is 5, Range of values is 0 to 4
  1740                           ; switch strategies available:
  1741                           ; Name         Instructions Cycles
  1742                           ; simple_byte           16     9 (average)
  1743                           ;	Chosen strategy is simple_byte
  1744  00186C  B4D8               	btfsc	status,2,c
  1745  00186E  0012               	return	
  1746  001870  0A01               	xorlw	1	; case 1
  1747  001872  E0F2               	bz	l209
  1748  001874  0A03               	xorlw	3	; case 2
  1749  001876  E0F2               	bz	l211
  1750  001878  0A01               	xorlw	1	; case 3
  1751  00187A  E0F2               	bz	l212
  1752  00187C  0A07               	xorlw	7	; case 4
  1753  00187E  E0F2               	bz	l213
  1754                           
  1755                           ; BSR set to: 0
  1756  001880  0012               	return		;funcret
  1757  001882                     __end_of_LED_Enable:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           postinc0	equ	0xFEE
  1767                           wreg	equ	0xFE8
  1768                           indf1	equ	0xFE7
  1769                           postdec1	equ	0xFE5
  1770                           fsr1h	equ	0xFE2
  1771                           fsr1l	equ	0xFE1
  1772                           indf2	equ	0xFDF
  1773                           postinc2	equ	0xFDE
  1774                           postdec2	equ	0xFDD
  1775                           plusw2	equ	0xFDB
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _BUTTON_Enable *****************
  1781 ;; Defined at:
  1782 ;;		line 85 in file "picLibs/buttons.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  button          1    wreg     enum E3304
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  button          1    0[BANK0 ] enum E3304
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 3F/0
  1793 ;;		On exit  : 3F/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1796 ;;      Params:         0       0       0       0       0
  1797 ;;      Locals:         0       1       0       0       0
  1798 ;;      Temps:          0       0       0       0       0
  1799 ;;      Totals:         0       1       0       0       0
  1800 ;;Total ram usage:        1 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:   10
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_SYSTEM_Initialize
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text6
  1811  001A7C                     __ptext6:
  1812                           	opt stack 0
  1813  001A7C                     _BUTTON_Enable:
  1814                           	opt stack 19
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;incstack = 0
  1818                           ;BUTTON_Enable@button stored from wreg
  1819  001A7C  6FB1               	movwf	BUTTON_Enable@button& (0+255),b
  1820                           
  1821                           ;buttons.c: 87: switch(button)
  1822  001A7E  0100               	movlb	0	; () banked
  1823  001A80  51B1               	movf	BUTTON_Enable@button& (0+255),w,b
  1824                           
  1825                           ; Switch size 1, requested type "space"
  1826                           ; Number of cases is 2, Range of values is 0 to 1
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            7     4 (average)
  1830                           ;	Chosen strategy is simple_byte
  1831  001A82  EF3B  F00D         	goto	PL120	;call to abstracted procedure
  1832  001A86                     __end_of_BUTTON_Enable:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           prodh	equ	0xFF4
  1839                           prodl	equ	0xFF3
  1840                           intcon	equ	0xFF2
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           indf1	equ	0xFE7
  1844                           postdec1	equ	0xFE5
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           indf2	equ	0xFDF
  1848                           postinc2	equ	0xFDE
  1849                           postdec2	equ	0xFDD
  1850                           plusw2	equ	0xFDB
  1851                           fsr2h	equ	0xFDA
  1852                           fsr2l	equ	0xFD9
  1853                           status	equ	0xFD8
  1854                           
  1855 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  1856 ;; Defined at:
  1857 ;;		line 77 in file "picLibs/app_device_cdc_basic.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  a               4   25[BANK0 ] struct _DWORD_VAL
  1862 ;;  numBytesRead    1   24[BANK0 ] unsigned char 
  1863 ;;  i               1    0        unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 3F/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         0       5       0       0       0
  1875 ;;      Temps:          0       0       0       0       0
  1876 ;;      Totals:         0       5       0       0       0
  1877 ;;Total ram usage:        5 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:   13
  1880 ;; This function calls:
  1881 ;;		_BUTTON_IsPressed
  1882 ;;		_CDCTxService
  1883 ;;		_PIC18F26K40_enterLowVoltageProg
  1884 ;;		_PIC18F26K40_exitLowVoltageProg
  1885 ;;		_PIC18F26K40_loadDataIntoNVM
  1886 ;;		_PIC18F26K40_loadPC
  1887 ;;		_PIC18F26K40_readThreeBytes
  1888 ;;		_getsUSBUSART
  1889 ;;		_putUSBUSART
  1890 ;;		_putrsUSBUSART
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text7
  1897  000560                     __ptext7:
  1898                           	opt stack 0
  1899  000560                     _APP_DeviceCDCBasicDemoTasks:
  1900                           	opt stack 17
  1901                           
  1902                           ;app_device_cdc_basic.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;incstack = 0
  1906  000560  0E20               	movlw	32
  1907  000562  0100               	movlb	0	; () banked
  1908  000564  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  1909  000566  D001               	goto	l101
  1910  000568  0C20               	retlw	32
  1911  00056A                     l101:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;app_device_cdc_basic.c: 85: }
  1915                           ;app_device_cdc_basic.c: 91: if( UCONbits.SUSPND== 1 )
  1916  00056A  B264               	btfsc	3940,1,c	;volatile
  1917  00056C  0012               	return	
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;app_device_cdc_basic.c: 94: }
  1921                           ;app_device_cdc_basic.c: 99: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  1922  00056E  0E01               	movlw	1
  1923  000570  EC09  F00D         	call	_BUTTON_IsPressed
  1924  000574  06E8               	decf	wreg,f,c
  1925  000576  E10B               	bnz	l104
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;app_device_cdc_basic.c: 100: {
  1929                           ;app_device_cdc_basic.c: 104: if(buttonPressed == 0)
  1930  000578  517F               	movf	_buttonPressed& (0+255),w,b
  1931  00057A  E10A               	bnz	l4851
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;app_device_cdc_basic.c: 105: {
  1935                           ;app_device_cdc_basic.c: 108: if((cdc_trf_state == 0) == 1)
  1936  00057C  5180               	movf	_cdc_trf_state& (0+255),w,b
  1937  00057E  E108               	bnz	l4851
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;app_device_cdc_basic.c: 109: {
  1941                           ;app_device_cdc_basic.c: 110: putrsUSBUSART(buttonMessage);
  1942  000580  0ED0               	movlw	low _buttonMessage
  1943  000582  6FB1               	movwf	putrsUSBUSART@data& (0+255),b
  1944  000584  ECDD  F00B         	call	_putrsUSBUSART	;wreg free
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;app_device_cdc_basic.c: 111: buttonPressed = 1;
  1948  000588  0E01               	movlw	1
  1949  00058A  6F7F               	movwf	_buttonPressed& (0+255),b
  1950  00058C  D001               	goto	l4851
  1951  00058E                     l104:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;app_device_cdc_basic.c: 115: else
  1955                           ;app_device_cdc_basic.c: 116: {
  1956                           ;app_device_cdc_basic.c: 120: buttonPressed = 0;
  1957  00058E  6B7F               	clrf	_buttonPressed& (0+255),b
  1958  000590                     l4851:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;app_device_cdc_basic.c: 121: }
  1962                           ;app_device_cdc_basic.c: 126: if( (cdc_trf_state == 0) == 1) {
  1963  000590  5180               	movf	_cdc_trf_state& (0+255),w,b
  1964  000592  E002 EFA3  F004    	bnz	_CDCTxService
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;app_device_cdc_basic.c: 127: uint8_t i;
  1968                           ;app_device_cdc_basic.c: 128: uint8_t numBytesRead;
  1969                           ;app_device_cdc_basic.c: 129: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  1970  000598  0E91               	movlw	low _readBuffer
  1971  00059A  6FBA               	movwf	getsUSBUSART@buffer& (0+255),b
  1972  00059C  0E0F               	movlw	15
  1973  00059E  6FBB               	movwf	getsUSBUSART@len& (0+255),b
  1974  0005A0  ECB9  F009         	call	_getsUSBUSART	;wreg free
  1975  0005A4  6FC9               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),b
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;app_device_cdc_basic.c: 130: if(numBytesRead > 0) {
  1979  0005A6  51C9               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  1980  0005A8  E102 EFA3  F004    	bz	_CDCTxService
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;app_device_cdc_basic.c: 131: DWORD_VAL a;
  1984                           ;app_device_cdc_basic.c: 132: PIC18F26K40_enterLowVoltageProg();
  1985  0005AE  EC46  F00B         	call	_PIC18F26K40_enterLowVoltageProg	;wreg free
  1986                           
  1987                           ;app_device_cdc_basic.c: 133: switch (readBuffer[0]) {
  1988  0005B2  D032               	goto	l4895
  1989  0005B4                     l111:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;app_device_cdc_basic.c: 135: a.v[3] = 0;
  1993                           
  1994                           ;app_device_cdc_basic.c: 136: a.v[2] = readBuffer[1];
  1995                           
  1996                           ;app_device_cdc_basic.c: 137: a.v[1] = readBuffer[2];
  1997                           
  1998                           ;app_device_cdc_basic.c: 138: a.v[0] = readBuffer[3];
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;app_device_cdc_basic.c: 139: PIC18F26K40_loadPC(a);
  2002  0005B4  D843               	call	PL12	;call to abstracted procedure
  2003  0005B6  EC8A  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2004                           
  2005                           ;app_device_cdc_basic.c: 140: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2006  0005BA  0E00               	movlw	0
  2007  0005BC  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2008  0005BE  ECCD  F005         	call	_PIC18F26K40_readThreeBytes
  2009  0005C2  D85E               	call	PL60	;call to abstracted procedure
  2010                           
  2011                           ;app_device_cdc_basic.c: 141: writeBuffer[0] = a.v[1];
  2012  0005C4  C0CB  F082         	movff	APP_DeviceCDCBasicDemoTasks@a+1,_writeBuffer
  2013                           
  2014                           ;app_device_cdc_basic.c: 142: writeBuffer[1] = a.v[0];
  2015  0005C8  C0CA  F083         	movff	APP_DeviceCDCBasicDemoTasks@a,_writeBuffer+1
  2016                           
  2017                           ;app_device_cdc_basic.c: 143: break;
  2018  0005CC  D02C               	goto	l4897
  2019  0005CE                     l113:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;app_device_cdc_basic.c: 145: a.v[3] = 0;
  2023                           
  2024                           ;app_device_cdc_basic.c: 146: a.v[2] = readBuffer[1];
  2025                           
  2026                           ;app_device_cdc_basic.c: 147: a.v[1] = readBuffer[2];
  2027                           
  2028                           ;app_device_cdc_basic.c: 148: a.v[0] = readBuffer[3];
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;app_device_cdc_basic.c: 149: PIC18F26K40_loadPC(a);
  2032  0005CE  D836               	call	PL12	;call to abstracted procedure
  2033  0005D0  EC8A  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;app_device_cdc_basic.c: 150: a.v[3] = 0x0;
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;app_device_cdc_basic.c: 151: a.v[2] = 0x0;
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;app_device_cdc_basic.c: 152: a.v[1] = readBuffer[4];
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;app_device_cdc_basic.c: 153: a.v[0] = readBuffer[5];
  2046                           
  2047                           ;app_device_cdc_basic.c: 154: PIC18F26K40_loadDataIntoNVM(a, FALSE, EXTERNALLY);
  2048  0005D4  D843               	call	PL22	;call to abstracted procedure
  2049  0005D6  ECD9  F006         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2050                           
  2051                           ;app_device_cdc_basic.c: 155: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2052  0005DA  D85B               	call	PL118	;call to abstracted procedure
  2053  0005DC  ECCD  F005         	call	_PIC18F26K40_readThreeBytes
  2054  0005E0  D7F0               	goto	L1
  2055  0005E2                     l114:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;app_device_cdc_basic.c: 160: a.v[3] = 0;
  2059                           
  2060                           ;app_device_cdc_basic.c: 161: a.v[2] = readBuffer[1];
  2061                           
  2062                           ;app_device_cdc_basic.c: 162: a.v[1] = readBuffer[2];
  2063                           
  2064                           ;app_device_cdc_basic.c: 163: a.v[0] = readBuffer[3];
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;app_device_cdc_basic.c: 164: PIC18F26K40_loadPC(a);
  2068  0005E2  D82C               	call	PL12	;call to abstracted procedure
  2069  0005E4  EC8A  F00B         	call	_PIC18F26K40_loadPC	;wreg free
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;app_device_cdc_basic.c: 165: a.v[3] = 0x0;
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;app_device_cdc_basic.c: 166: a.v[2] = 0x0;
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;app_device_cdc_basic.c: 167: a.v[1] = readBuffer[4];
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;app_device_cdc_basic.c: 168: a.v[0] = readBuffer[5];
  2082                           
  2083                           ;app_device_cdc_basic.c: 169: PIC18F26K40_loadDataIntoNVM(a, FALSE, EXTERNALLY);
  2084  0005E8  D839               	call	PL22	;call to abstracted procedure
  2085  0005EA  ECD9  F006         	call	_PIC18F26K40_loadDataIntoNVM	;wreg free
  2086                           
  2087                           ;app_device_cdc_basic.c: 170: a = PIC18F26K40_readThreeBytes(MSBTOLSB, FALSE);
  2088  0005EE  D851               	call	PL118	;call to abstracted procedure
  2089  0005F0  ECCD  F005         	call	_PIC18F26K40_readThreeBytes
  2090  0005F4  D845               	call	PL60	;call to abstracted procedure
  2091                           
  2092                           ;app_device_cdc_basic.c: 171: if ((a.v[0] == readBuffer[5]) && (a.v[1] == readBuffer[4])
      +                          )
  2093  0005F6  0100               	movlb	0	; () banked
  2094  0005F8  51CA               	movf	APP_DeviceCDCBasicDemoTasks@a& (0+255),w,b
  2095  0005FA  1996               	xorwf	(_readBuffer+5)& (0+255),w,b
  2096  0005FC  E106               	bnz	l115
  2097                           
  2098                           ; BSR set to: 0
  2099  0005FE  5195               	movf	(_readBuffer+4)& (0+255),w,b
  2100  000600  19CB               	xorwf	(APP_DeviceCDCBasicDemoTasks@a+1)& (0+255),w,b
  2101  000602  E103               	bnz	l115
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;app_device_cdc_basic.c: 172: writeBuffer[0] = 0x01;
  2105  000604  0E01               	movlw	1
  2106  000606  6F82               	movwf	_writeBuffer& (0+255),b
  2107  000608  D00E               	goto	l4897
  2108  00060A                     l115:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;app_device_cdc_basic.c: 173: else
  2112                           ;app_device_cdc_basic.c: 174: writeBuffer[0] = 0x00;
  2113  00060A  6B82               	clrf	_writeBuffer& (0+255),b
  2114  00060C  D00C               	goto	l4897
  2115  00060E                     l117:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;app_device_cdc_basic.c: 177: writeBuffer[0] = readBuffer[0];
  2119  00060E  C091  F082         	movff	_readBuffer,_writeBuffer
  2120                           
  2121                           ;app_device_cdc_basic.c: 178: writeBuffer[1] = readBuffer[1];
  2122  000612  C092  F083         	movff	_readBuffer+1,_writeBuffer+1
  2123                           
  2124                           ;app_device_cdc_basic.c: 179: }
  2125  000616  D007               	goto	l4897
  2126  000618                     l4895:
  2127                           
  2128                           ; BSR set to: 0
  2129  000618  5191               	movf	_readBuffer& (0+255),w,b
  2130                           
  2131                           ; Switch size 1, requested type "space"
  2132                           ; Number of cases is 3, Range of values is 0 to 2
  2133                           ; switch strategies available:
  2134                           ; Name         Instructions Cycles
  2135                           ; simple_byte           10     6 (average)
  2136                           ;	Chosen strategy is simple_byte
  2137  00061A  E0CC               	bz	l111
  2138  00061C  0A01               	xorlw	1	; case 1
  2139  00061E  E0D7               	bz	l113
  2140  000620  0A03               	xorlw	3	; case 2
  2141  000622  E0DF               	bz	l114
  2142  000624  D7F4               	goto	l117
  2143  000626                     l4897:
  2144                           
  2145                           ;app_device_cdc_basic.c: 180: PIC18F26K40_exitLowVoltageProg();
  2146  000626  EC43  F00D         	call	_PIC18F26K40_exitLowVoltageProg	;wreg free
  2147                           
  2148                           ;app_device_cdc_basic.c: 181: putUSBUSART(writeBuffer,numBytesRead);
  2149  00062A  0E82               	movlw	low _writeBuffer
  2150  00062C  0100               	movlb	0	; () banked
  2151  00062E  6FB1               	movwf	putUSBUSART@data& (0+255),b
  2152  000630  C0C9  F0B2         	movff	APP_DeviceCDCBasicDemoTasks@numBytesRead,putUSBUSART@length
  2153  000634  EC23  F00D         	call	_putUSBUSART	;wreg free
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;app_device_cdc_basic.c: 182: }
  2157                           ;app_device_cdc_basic.c: 183: }
  2158                           ;app_device_cdc_basic.c: 184: CDCTxService();
  2159  000638  EFA3  F004         	goto	_CDCTxService	;wreg free
  2160  00063C                     __end_of_APP_DeviceCDCBasicDemoTasks:
  2161                           	opt stack 0
  2162  00063C                     PL12:
  2163                           	opt stack 17
  2164  00063C  6BCD               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2165  00063E  C092  F0CC         	movff	_readBuffer+1,APP_DeviceCDCBasicDemoTasks@a+2
  2166  000642  C093  F0CB         	movff	_readBuffer+2,APP_DeviceCDCBasicDemoTasks@a+1
  2167  000646  C094  F0CA         	movff	_readBuffer+3,APP_DeviceCDCBasicDemoTasks@a
  2168  00064A  C0CA  F0B7         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadPC@address
  2169  00064E  C0CB  F0B8         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadPC@address+1
  2170  000652  C0CC  F0B9         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadPC@address+2
  2171  000656  C0CD  F0BA         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadPC@address+3
  2172  00065A  0012               	return	
  2173  00065C                     __end_ofPL12:
  2174                           	opt stack 0
  2175  00065C                     PL22:
  2176                           	opt stack 17
  2177  00065C  6BCD               	clrf	(APP_DeviceCDCBasicDemoTasks@a+3)& (0+255),b
  2178  00065E  6BCC               	clrf	(APP_DeviceCDCBasicDemoTasks@a+2)& (0+255),b
  2179  000660  C095  F0CB         	movff	_readBuffer+4,APP_DeviceCDCBasicDemoTasks@a+1
  2180  000664  C096  F0CA         	movff	_readBuffer+5,APP_DeviceCDCBasicDemoTasks@a
  2181  000668  C0CA  F0B5         	movff	APP_DeviceCDCBasicDemoTasks@a,PIC18F26K40_loadDataIntoNVM@data
  2182  00066C  C0CB  F0B6         	movff	APP_DeviceCDCBasicDemoTasks@a+1,PIC18F26K40_loadDataIntoNVM@data+1
  2183  000670  C0CC  F0B7         	movff	APP_DeviceCDCBasicDemoTasks@a+2,PIC18F26K40_loadDataIntoNVM@data+2
  2184  000674  C0CD  F0B8         	movff	APP_DeviceCDCBasicDemoTasks@a+3,PIC18F26K40_loadDataIntoNVM@data+3
  2185  000678  6BB9               	clrf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),b
  2186  00067A  0E01               	movlw	1
  2187  00067C  6FBA               	movwf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),b
  2188  00067E  0C01               	retlw	1
  2189  000680                     __end_ofPL22:
  2190                           	opt stack 0
  2191  000680                     PL60:
  2192                           	opt stack 17
  2193  000680  C0B7  F0CA         	movff	?_PIC18F26K40_readThreeBytes,APP_DeviceCDCBasicDemoTasks@a
  2194  000684  C0B8  F0CB         	movff	?_PIC18F26K40_readThreeBytes+1,APP_DeviceCDCBasicDemoTasks@a+1
  2195  000688  C0B9  F0CC         	movff	?_PIC18F26K40_readThreeBytes+2,APP_DeviceCDCBasicDemoTasks@a+2
  2196  00068C  C0BA  F0CD         	movff	?_PIC18F26K40_readThreeBytes+3,APP_DeviceCDCBasicDemoTasks@a+3
  2197  000690  0012               	return	
  2198  000692                     __end_ofPL60:
  2199                           	opt stack 0
  2200  000692                     PL118:
  2201                           	opt stack 17
  2202  000692  0E00               	movlw	0
  2203  000694  0100               	movlb	0	; () banked
  2204  000696  6FB7               	movwf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),b
  2205  000698  0C00               	retlw	0
  2206  00069A                     __end_ofPL118:
  2207                           	opt stack 0
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           prodh	equ	0xFF4
  2213                           prodl	equ	0xFF3
  2214                           intcon	equ	0xFF2
  2215                           postinc0	equ	0xFEE
  2216                           wreg	equ	0xFE8
  2217                           indf1	equ	0xFE7
  2218                           postdec1	equ	0xFE5
  2219                           fsr1h	equ	0xFE2
  2220                           fsr1l	equ	0xFE1
  2221                           indf2	equ	0xFDF
  2222                           postinc2	equ	0xFDE
  2223                           postdec2	equ	0xFDD
  2224                           plusw2	equ	0xFDB
  2225                           fsr2h	equ	0xFDA
  2226                           fsr2l	equ	0xFD9
  2227                           status	equ	0xFD8
  2228                           
  2229 ;; *************** function _putrsUSBUSART *****************
  2230 ;; Defined at:
  2231 ;;		line 726 in file "picLibs/usb_device_cdc.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  data            1    0[BANK0 ] PTR const unsigned char 
  2234 ;;		 -> buttonMessage(18), 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  len             1    2[BANK0 ] unsigned char 
  2237 ;;  pData           1    1[BANK0 ] PTR const unsigned char 
  2238 ;;		 -> buttonMessage(18), 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2243 ;; Tracked objects:
  2244 ;;		On entry : 3F/0
  2245 ;;		On exit  : 3F/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2248 ;;      Params:         0       1       0       0       0
  2249 ;;      Locals:         0       2       0       0       0
  2250 ;;      Temps:          0       0       0       0       0
  2251 ;;      Totals:         0       3       0       0       0
  2252 ;;Total ram usage:        3 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:   10
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_APP_DeviceCDCBasicDemoTasks
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text8
  2263  0017BA                     __ptext8:
  2264                           	opt stack 0
  2265  0017BA                     _putrsUSBUSART:
  2266                           	opt stack 19
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;usb_device_cdc.c: 728: uint8_t len;
  2270                           ;usb_device_cdc.c: 729: const const char *pData;
  2271                           ;usb_device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;incstack = 0
  2275  0017BA  94A0               	bcf	4000,2,c	;volatile
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  2279  0017BC  5180               	movf	_cdc_trf_state& (0+255),w,b
  2280  0017BE  E002               	bz	l738
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;usb_device_cdc.c: 756: {
  2284                           ;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  2285  0017C0  84A0               	bsf	4000,2,c	;volatile
  2286                           
  2287                           ;usb_device_cdc.c: 758: return;
  2288  0017C2  0012               	return	
  2289  0017C4                     l738:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;usb_device_cdc.c: 759: }
  2293                           ;usb_device_cdc.c: 765: len = 0;
  2294  0017C4  6BB3               	clrf	putrsUSBUSART@len& (0+255),b
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;usb_device_cdc.c: 766: pData = data;
  2298  0017C6  C0B1  F0B2         	movff	putrsUSBUSART@data,putrsUSBUSART@pData
  2299  0017CA                     l4691:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;usb_device_cdc.c: 768: {
  2303                           ;usb_device_cdc.c: 769: len++;
  2304  0017CA  2BB3               	incf	putrsUSBUSART@len& (0+255),f,b
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;usb_device_cdc.c: 770: if(len == 255) break;
  2308  0017CC  29B3               	incf	putrsUSBUSART@len& (0+255),w,b
  2309  0017CE  E006               	bz	l4699
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;usb_device_cdc.c: 771: }while(*pData++);
  2313  0017D0  2BB2               	incf	putrsUSBUSART@pData& (0+255),f,b
  2314  0017D2  05B2               	decf	putrsUSBUSART@pData& (0+255),w,b
  2315  0017D4  6ED9               	movwf	fsr2l,c
  2316  0017D6  6ADA               	clrf	fsr2h,c
  2317  0017D8  50DF               	movf	indf2,w,c
  2318  0017DA  E1F7               	bnz	l4691
  2319  0017DC                     l4699:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  2323  0017DC  C0B1  F06D         	movff	putrsUSBUSART@data,_pCDCSrc
  2324                           
  2325                           ; BSR set to: 0
  2326  0017E0  C0B3  F01B         	movff	putrsUSBUSART@len,_cdc_tx_len
  2327                           
  2328                           ; BSR set to: 0
  2329  0017E4  6B7C               	clrf	_cdc_mem_type& (0+255),b
  2330                           
  2331                           ; BSR set to: 0
  2332  0017E6  0E01               	movlw	1
  2333  0017E8  6F80               	movwf	_cdc_trf_state& (0+255),b
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  2337  0017EA  84A0               	bsf	4000,2,c	;volatile
  2338                           
  2339                           ; BSR set to: 0
  2340  0017EC  0C01               	retlw	1	;funcret
  2341  0017EE                     __end_of_putrsUSBUSART:
  2342                           	opt stack 0
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           prodh	equ	0xFF4
  2348                           prodl	equ	0xFF3
  2349                           intcon	equ	0xFF2
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           indf1	equ	0xFE7
  2353                           postdec1	equ	0xFE5
  2354                           fsr1h	equ	0xFE2
  2355                           fsr1l	equ	0xFE1
  2356                           indf2	equ	0xFDF
  2357                           postinc2	equ	0xFDE
  2358                           postdec2	equ	0xFDD
  2359                           plusw2	equ	0xFDB
  2360                           fsr2h	equ	0xFDA
  2361                           fsr2l	equ	0xFD9
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _putUSBUSART *****************
  2365 ;; Defined at:
  2366 ;;		line 556 in file "picLibs/usb_device_cdc.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  data            1    0[BANK0 ] PTR unsigned char 
  2369 ;;		 -> writeBuffer(15), 
  2370 ;;  length          1    1[BANK0 ] unsigned char 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 3F/0
  2379 ;;		On exit  : 3F/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2382 ;;      Params:         0       2       0       0       0
  2383 ;;      Locals:         0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0
  2385 ;;      Totals:         0       2       0       0       0
  2386 ;;Total ram usage:        2 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:   10
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_APP_DeviceCDCBasicDemoTasks
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text9
  2397  001A46                     __ptext9:
  2398                           	opt stack 0
  2399  001A46                     _putUSBUSART:
  2400                           	opt stack 19
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;incstack = 0
  2407  001A46  94A0               	bcf	4000,2,c	;volatile
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2411  001A48  5180               	movf	_cdc_trf_state& (0+255),w,b
  2412  001A4A  E107               	bnz	l4745
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;usb_device_cdc.c: 583: {
  2416                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2417  001A4C  C0B1  F06D         	movff	putUSBUSART@data,_pCDCSrc
  2418                           
  2419                           ; BSR set to: 0
  2420  001A50  C0B2  F01B         	movff	putUSBUSART@length,_cdc_tx_len
  2421                           
  2422                           ; BSR set to: 0
  2423  001A54  0E01               	movlw	1
  2424  001A56  6F7C               	movwf	_cdc_mem_type& (0+255),b
  2425                           
  2426                           ; BSR set to: 0
  2427  001A58  6F80               	movwf	_cdc_trf_state& (0+255),b
  2428  001A5A                     l4745:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;usb_device_cdc.c: 585: }
  2432                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2433  001A5A  84A0               	bsf	4000,2,c	;volatile
  2434                           
  2435                           ; BSR set to: 0
  2436  001A5C  0012               	return		;funcret
  2437  001A5E                     __end_of_putUSBUSART:
  2438                           	opt stack 0
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           intcon	equ	0xFF2
  2446                           postinc0	equ	0xFEE
  2447                           wreg	equ	0xFE8
  2448                           indf1	equ	0xFE7
  2449                           postdec1	equ	0xFE5
  2450                           fsr1h	equ	0xFE2
  2451                           fsr1l	equ	0xFE1
  2452                           indf2	equ	0xFDF
  2453                           postinc2	equ	0xFDE
  2454                           postdec2	equ	0xFDD
  2455                           plusw2	equ	0xFDB
  2456                           fsr2h	equ	0xFDA
  2457                           fsr2l	equ	0xFD9
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _getsUSBUSART *****************
  2461 ;; Defined at:
  2462 ;;		line 485 in file "picLibs/usb_device_cdc.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  buffer          1    9[BANK0 ] PTR unsigned char 
  2465 ;;		 -> readBuffer(15), 
  2466 ;;  len             1   10[BANK0 ] unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      unsigned char 
  2471 ;; Registers used:
  2472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 3F/0
  2475 ;;		On exit  : 3F/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2478 ;;      Params:         0       2       0       0       0
  2479 ;;      Locals:         0       0       0       0       0
  2480 ;;      Temps:          0       1       0       0       0
  2481 ;;      Totals:         0       3       0       0       0
  2482 ;;Total ram usage:        3 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:   11
  2485 ;; This function calls:
  2486 ;;		_USBTransferOnePacket
  2487 ;; This function is called by:
  2488 ;;		_APP_DeviceCDCBasicDemoTasks
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text10
  2493  001372                     __ptext10:
  2494                           	opt stack 0
  2495  001372                     _getsUSBUSART:
  2496                           	opt stack 18
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;incstack = 0
  2503  001372  6A1C               	clrf	_cdc_rx_len,c
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2507  001374  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2508  001376  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  2509  001378  E006               	bz	l4715
  2510                           
  2511                           ; BSR set to: 0
  2512  00137A  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2513  00137E  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2514  001382  BEDF               	btfsc	indf2,7,c
  2515  001384  D024               	goto	l4729
  2516  001386                     l4715:
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;usb_device_cdc.c: 490: {
  2520                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2521  001386  D825               	call	PL76	;call to abstracted procedure
  2522  001388  51BB               	movf	getsUSBUSART@len& (0+255),w,b
  2523  00138A  5CDE               	subwf	postinc2,w,c
  2524  00138C  E203               	bc	l4719
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2528  00138E  D821               	call	PL76	;call to abstracted procedure
  2529  001390  50DF               	movf	indf2,w,c
  2530  001392  6FBB               	movwf	getsUSBUSART@len& (0+255),b
  2531  001394                     l4719:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2535  001394  6A1C               	clrf	_cdc_rx_len,c
  2536  001396  D009               	goto	l4725
  2537  001398                     l4721:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2541  001398  0E80               	movlw	128
  2542  00139A  241C               	addwf	_cdc_rx_len,w,c
  2543  00139C  EC67  F005         	call	PL112	;call to abstracted procedure
  2544  0013A0  51BA               	movf	getsUSBUSART@buffer& (0+255),w,b
  2545  0013A2  241C               	addwf	_cdc_rx_len,w,c
  2546  0013A4  EC62  F005         	call	PL110	;call to abstracted procedure
  2547                           
  2548                           ; BSR set to: 0
  2549  0013A8  2A1C               	incf	_cdc_rx_len,f,c
  2550  0013AA                     l4725:
  2551                           
  2552                           ; BSR set to: 0
  2553  0013AA  51BB               	movf	getsUSBUSART@len& (0+255),w,b
  2554  0013AC  5C1C               	subwf	_cdc_rx_len,w,c
  2555  0013AE  E3F4               	bnc	l4721
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2559  0013B0  0E00               	movlw	0
  2560  0013B2  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  2561  0013B4  0E80               	movlw	128
  2562  0013B6  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  2563  0013B8  0E02               	movlw	2
  2564  0013BA  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  2565  0013BC  0E0F               	movlw	15
  2566  0013BE  6FB4               	movwf	USBTransferOnePacket@len& (0+255),b
  2567  0013C0  0E02               	movlw	2
  2568  0013C2  EC6C  F005         	call	_USBTransferOnePacket
  2569  0013C6  C0B1  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  2570  0013CA  C0B2  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  2571  0013CE                     l4729:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;usb_device_cdc.c: 510: }
  2575                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2576  0013CE  501C               	movf	_cdc_rx_len,w,c
  2577                           
  2578                           ; BSR set to: 0
  2579  0013D0  0012               	return		;funcret
  2580  0013D2                     __end_of_getsUSBUSART:
  2581                           	opt stack 0
  2582  0013D2                     PL76:
  2583                           	opt stack 18
  2584  0013D2  EE20 F001          	lfsr	2,1
  2585  0013D6  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  2586  0013D8  26D9               	addwf	fsr2l,f,c
  2587  0013DA  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  2588  0013DC  22DA               	addwfc	fsr2h,f,c
  2589  0013DE  0012               	return	
  2590  0013E0                     __end_ofPL76:
  2591                           	opt stack 0
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           prodh	equ	0xFF4
  2597                           prodl	equ	0xFF3
  2598                           intcon	equ	0xFF2
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           indf1	equ	0xFE7
  2602                           postdec1	equ	0xFE5
  2603                           fsr1h	equ	0xFE2
  2604                           fsr1l	equ	0xFE1
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           postdec2	equ	0xFDD
  2608                           plusw2	equ	0xFDB
  2609                           fsr2h	equ	0xFDA
  2610                           fsr2l	equ	0xFD9
  2611                           status	equ	0xFD8
  2612                           
  2613 ;; *************** function _PIC18F26K40_readThreeBytes *****************
  2614 ;; Defined at:
  2615 ;;		line 53 in file "libs/progPIC18F26K40.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  direction       1    wreg     enum E4265
  2618 ;;  IncreasePC      1    6[BANK0 ] enum E4064
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  direction       1   17[BANK0 ] enum E4265
  2621 ;;  data            4   18[BANK0 ] struct _DWORD_VAL
  2622 ;;  i               1   23[BANK0 ] unsigned char 
  2623 ;;  j               1   22[BANK0 ] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  4    6[BANK0 ] struct _DWORD_VAL
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 3F/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2633 ;;      Params:         0       4       0       0       0
  2634 ;;      Locals:         0       7       0       0       0
  2635 ;;      Temps:          0       7       0       0       0
  2636 ;;      Totals:         0      18       0       0       0
  2637 ;;Total ram usage:       18 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:   12
  2640 ;; This function calls:
  2641 ;;		_PIC18F26K40_sendByte
  2642 ;; This function is called by:
  2643 ;;		_APP_DeviceCDCBasicDemoTasks
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text11
  2648  000B9A                     __ptext11:
  2649                           	opt stack 0
  2650  000B9A                     _PIC18F26K40_readThreeBytes:
  2651                           	opt stack 17
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;incstack = 0
  2655                           ;PIC18F26K40_readThreeBytes@direction stored from wreg
  2656  000B9A  6FC2               	movwf	PIC18F26K40_readThreeBytes@direction& (0+255),b
  2657                           
  2658                           ;progPIC18F26K40.c: 54: if (IncreasePC)
  2659  000B9C  0100               	movlb	0	; () banked
  2660  000B9E  51B7               	movf	PIC18F26K40_readThreeBytes@IncreasePC& (0+255),w,b
  2661  000BA0  E005               	bz	l4585
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;progPIC18F26K40.c: 55: PIC18F26K40_sendByte(0xFE, MSBTOLSB);
  2665  000BA2  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2666  000BA4  0EFE               	movlw	254
  2667  000BA6  EC58  F00A         	call	_PIC18F26K40_sendByte
  2668  000BAA  D004               	goto	l4587
  2669  000BAC                     l4585:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;progPIC18F26K40.c: 56: else
  2673                           ;progPIC18F26K40.c: 57: PIC18F26K40_sendByte(0xFC, MSBTOLSB);
  2674  000BAC  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2675  000BAE  0EFC               	movlw	252
  2676  000BB0  EC58  F00A         	call	_PIC18F26K40_sendByte
  2677  000BB4                     l4587:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;progPIC18F26K40.c: 58: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2681  000BB4  D000               	nop2		;2 cycle nop
  2682  000BB6  F000               	nop	
  2683                           
  2684                           ;progPIC18F26K40.c: 59: DWORD_VAL data;
  2685                           ;progPIC18F26K40.c: 60: data.Val = 0x000000;
  2686  000BB8  0100               	movlb	0	; () banked
  2687  000BBA  6BC3               	clrf	PIC18F26K40_readThreeBytes@data& (0+255),b
  2688  000BBC  6BC4               	clrf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),b
  2689  000BBE  6BC5               	clrf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),b
  2690  000BC0  6BC6               	clrf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),b
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;progPIC18F26K40.c: 61: BYTE i, j;
  2694                           ;progPIC18F26K40.c: 62: TRISCbits.TRISC6 = 1;
  2695  000BC2  8C94               	bsf	3988,6,c	;volatile
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;progPIC18F26K40.c: 63: for (i = 0; i < 23; i++) {
  2699  000BC4  6BC8               	clrf	PIC18F26K40_readThreeBytes@i& (0+255),b
  2700  000BC6                     l4599:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;progPIC18F26K40.c: 64: if (direction)
  2704  000BC6  51C2               	movf	PIC18F26K40_readThreeBytes@direction& (0+255),w,b
  2705  000BC8  E003               	bz	l4603
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;progPIC18F26K40.c: 65: j = i;
  2709  000BCA  C0C8  F0C7         	movff	PIC18F26K40_readThreeBytes@i,PIC18F26K40_readThreeBytes@j
  2710  000BCE  D003               	goto	l4605
  2711  000BD0                     l4603:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;progPIC18F26K40.c: 66: else
  2715                           ;progPIC18F26K40.c: 67: j = 22-i;
  2716  000BD0  51C8               	movf	PIC18F26K40_readThreeBytes@i& (0+255),w,b
  2717  000BD2  0816               	sublw	22
  2718  000BD4  6FC7               	movwf	PIC18F26K40_readThreeBytes@j& (0+255),b
  2719  000BD6                     l4605:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;progPIC18F26K40.c: 68: LATCbits.LATC5 = 1;
  2723  000BD6  8A8B               	bsf	3979,5,c	;volatile
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;progPIC18F26K40.c: 69: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2727  000BD8  D000               	nop2		;2 cycle nop
  2728  000BDA  F000               	nop	
  2729                           
  2730                           ;progPIC18F26K40.c: 70: if (PORTCbits.RC6 == 1)
  2731  000BDC  AC82               	btfss	3970,6,c	;volatile
  2732  000BDE  D01F               	goto	l4613
  2733                           
  2734                           ;progPIC18F26K40.c: 71: data.Val = data.Val | ((DWORD)(0x1<<j));
  2735  000BE0  C0C7  F0BB         	movff	PIC18F26K40_readThreeBytes@j,??_PIC18F26K40_readThreeBytes
  2736  000BE4  0E01               	movlw	1
  2737  000BE6  0100               	movlb	0	; () banked
  2738  000BE8  6FBC               	movwf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),b
  2739  000BEA  6BBD               	clrf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),b
  2740  000BEC  2BBB               	incf	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2741  000BEE  D003               	goto	u3604
  2742  000BF0                     u3605:
  2743  000BF0  90D8               	bcf	status,0,c
  2744  000BF2  37BC               	rlcf	(??_PIC18F26K40_readThreeBytes+1)& (0+255),f,b
  2745  000BF4  37BD               	rlcf	(??_PIC18F26K40_readThreeBytes+2)& (0+255),f,b
  2746  000BF6                     u3604:
  2747  000BF6  2FBB               	decfsz	??_PIC18F26K40_readThreeBytes& (0+255),f,b
  2748  000BF8  D7FB               	goto	u3605
  2749  000BFA  C0BC  F0BE         	movff	??_PIC18F26K40_readThreeBytes+1,??_PIC18F26K40_readThreeBytes+3
  2750  000BFE  C0BD  F0BF         	movff	??_PIC18F26K40_readThreeBytes+2,??_PIC18F26K40_readThreeBytes+4
  2751  000C02  0E00               	movlw	0
  2752  000C04  0100               	movlb	0	; () banked
  2753  000C06  BFBF               	btfsc	(??_PIC18F26K40_readThreeBytes+4)& (0+255),7,b
  2754  000C08  0EFF               	movlw	255
  2755  000C0A  6FC0               	movwf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),b
  2756  000C0C  6FC1               	movwf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),b
  2757  000C0E  51BE               	movf	(??_PIC18F26K40_readThreeBytes+3)& (0+255),w,b
  2758  000C10  13C3               	iorwf	PIC18F26K40_readThreeBytes@data& (0+255),f,b
  2759  000C12  51BF               	movf	(??_PIC18F26K40_readThreeBytes+4)& (0+255),w,b
  2760  000C14  13C4               	iorwf	(PIC18F26K40_readThreeBytes@data+1)& (0+255),f,b
  2761  000C16  51C0               	movf	(??_PIC18F26K40_readThreeBytes+5)& (0+255),w,b
  2762  000C18  13C5               	iorwf	(PIC18F26K40_readThreeBytes@data+2)& (0+255),f,b
  2763  000C1A  51C1               	movf	(??_PIC18F26K40_readThreeBytes+6)& (0+255),w,b
  2764  000C1C  13C6               	iorwf	(PIC18F26K40_readThreeBytes@data+3)& (0+255),f,b
  2765  000C1E                     l4613:
  2766                           
  2767                           ;progPIC18F26K40.c: 72: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2768  000C1E  D000               	nop2		;2 cycle nop
  2769  000C20  F000               	nop	
  2770                           
  2771                           ;progPIC18F26K40.c: 73: LATCbits.LATC5 = 0;
  2772  000C22  9A8B               	bcf	3979,5,c	;volatile
  2773                           
  2774                           ;progPIC18F26K40.c: 74: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2775  000C24  D000               	nop2		;2 cycle nop
  2776  000C26  F000               	nop	
  2777  000C28  0100               	movlb	0	; () banked
  2778  000C2A  2BC8               	incf	PIC18F26K40_readThreeBytes@i& (0+255),f,b
  2779                           
  2780                           ; BSR set to: 0
  2781  000C2C  0E16               	movlw	22
  2782  000C2E  65C8               	cpfsgt	PIC18F26K40_readThreeBytes@i& (0+255),b
  2783  000C30  D7CA               	goto	l4599
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;progPIC18F26K40.c: 75: }
  2787                           ;progPIC18F26K40.c: 76: LATCbits.LATC5 = 1;
  2788  000C32  8A8B               	bsf	3979,5,c	;volatile
  2789                           
  2790                           ;progPIC18F26K40.c: 77: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2791  000C34  D000               	nop2		;2 cycle nop
  2792  000C36  F000               	nop	
  2793                           
  2794                           ;progPIC18F26K40.c: 78: LATCbits.LATC5 = 0;
  2795  000C38  9A8B               	bcf	3979,5,c	;volatile
  2796                           
  2797                           ;progPIC18F26K40.c: 79: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2798  000C3A  D000               	nop2		;2 cycle nop
  2799  000C3C  F000               	nop	
  2800                           
  2801                           ;progPIC18F26K40.c: 81: TRISCbits.TRISC6 = 0;
  2802  000C3E  9C94               	bcf	3988,6,c	;volatile
  2803                           
  2804                           ;progPIC18F26K40.c: 82: return data;
  2805  000C40  C0C3  F0B7         	movff	PIC18F26K40_readThreeBytes@data,?_PIC18F26K40_readThreeBytes
  2806  000C44  C0C4  F0B8         	movff	PIC18F26K40_readThreeBytes@data+1,?_PIC18F26K40_readThreeBytes+1
  2807  000C48  C0C5  F0B9         	movff	PIC18F26K40_readThreeBytes@data+2,?_PIC18F26K40_readThreeBytes+2
  2808  000C4C  C0C6  F0BA         	movff	PIC18F26K40_readThreeBytes@data+3,?_PIC18F26K40_readThreeBytes+3
  2809  000C50  0C16               	retlw	22	;funcret
  2810  000C52                     __end_of_PIC18F26K40_readThreeBytes:
  2811                           	opt stack 0
  2812                           tblptru	equ	0xFF8
  2813                           tblptrh	equ	0xFF7
  2814                           tblptrl	equ	0xFF6
  2815                           tablat	equ	0xFF5
  2816                           prodh	equ	0xFF4
  2817                           prodl	equ	0xFF3
  2818                           intcon	equ	0xFF2
  2819                           postinc0	equ	0xFEE
  2820                           wreg	equ	0xFE8
  2821                           indf1	equ	0xFE7
  2822                           postdec1	equ	0xFE5
  2823                           fsr1h	equ	0xFE2
  2824                           fsr1l	equ	0xFE1
  2825                           indf2	equ	0xFDF
  2826                           postinc2	equ	0xFDE
  2827                           postdec2	equ	0xFDD
  2828                           plusw2	equ	0xFDB
  2829                           fsr2h	equ	0xFDA
  2830                           fsr2l	equ	0xFD9
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _PIC18F26K40_loadPC *****************
  2834 ;; Defined at:
  2835 ;;		line 86 in file "libs/progPIC18F26K40.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  address         4    6[BANK0 ] struct _DWORD_VAL
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  tempAddress     4   10[BANK0 ] struct _DWORD_VAL
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 3F/0
  2846 ;;		On exit  : 3F/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2849 ;;      Params:         0       4       0       0       0
  2850 ;;      Locals:         0       4       0       0       0
  2851 ;;      Temps:          0       0       0       0       0
  2852 ;;      Totals:         0       8       0       0       0
  2853 ;;Total ram usage:        8 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:   12
  2856 ;; This function calls:
  2857 ;;		_PIC18F26K40_sendByte
  2858 ;; This function is called by:
  2859 ;;		_APP_DeviceCDCBasicDemoTasks
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text12
  2864  001714                     __ptext12:
  2865                           	opt stack 0
  2866  001714                     _PIC18F26K40_loadPC:
  2867                           	opt stack 17
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;progPIC18F26K40.c: 87: DWORD_VAL tempAddress;
  2871                           ;progPIC18F26K40.c: 88: tempAddress.Val= (address.Val<<1);
  2872                           
  2873                           ;incstack = 0
  2874  001714  90D8               	bcf	status,0,c
  2875  001716  35B7               	rlcf	PIC18F26K40_loadPC@address& (0+255),w,b
  2876  001718  6FBB               	movwf	PIC18F26K40_loadPC@tempAddress& (0+255),b
  2877  00171A  35B8               	rlcf	(PIC18F26K40_loadPC@address+1)& (0+255),w,b
  2878  00171C  6FBC               	movwf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),b
  2879  00171E  35B9               	rlcf	(PIC18F26K40_loadPC@address+2)& (0+255),w,b
  2880  001720  6FBD               	movwf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),b
  2881  001722  35BA               	rlcf	(PIC18F26K40_loadPC@address+3)& (0+255),w,b
  2882  001724  6FBE               	movwf	(PIC18F26K40_loadPC@tempAddress+3)& (0+255),b
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;progPIC18F26K40.c: 89: tempAddress.bits.b0 = 0;
  2886  001726  91BB               	bcf	PIC18F26K40_loadPC@tempAddress& (0+255),0,b
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;progPIC18F26K40.c: 90: tempAddress.bits.b23 = 0;
  2890  001728  9FBD               	bcf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),7,b
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;progPIC18F26K40.c: 91: PIC18F26K40_sendByte(0x80, MSBTOLSB);
  2894  00172A  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2895  00172C  0E80               	movlw	128
  2896  00172E  EC58  F00A         	call	_PIC18F26K40_sendByte
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;progPIC18F26K40.c: 92: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2900  001732  D000               	nop2		;2 cycle nop
  2901  001734  F000               	nop	
  2902                           
  2903                           ;progPIC18F26K40.c: 93: PIC18F26K40_sendByte(tempAddress.v[2], MSBTOLSB);
  2904  001736  0100               	movlb	0	; () banked
  2905  001738  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2906  00173A  51BD               	movf	(PIC18F26K40_loadPC@tempAddress+2)& (0+255),w,b
  2907  00173C  EC58  F00A         	call	_PIC18F26K40_sendByte
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;progPIC18F26K40.c: 94: PIC18F26K40_sendByte(tempAddress.v[1], MSBTOLSB);
  2911  001740  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2912  001742  51BC               	movf	(PIC18F26K40_loadPC@tempAddress+1)& (0+255),w,b
  2913  001744  EC58  F00A         	call	_PIC18F26K40_sendByte
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;progPIC18F26K40.c: 95: PIC18F26K40_sendByte(tempAddress.v[0], MSBTOLSB);
  2917  001748  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  2918  00174A  51BB               	movf	PIC18F26K40_loadPC@tempAddress& (0+255),w,b
  2919  00174C  EF58  F00A         	goto	_PIC18F26K40_sendByte
  2920  001750                     __end_of_PIC18F26K40_loadPC:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           prodh	equ	0xFF4
  2927                           prodl	equ	0xFF3
  2928                           intcon	equ	0xFF2
  2929                           postinc0	equ	0xFEE
  2930                           wreg	equ	0xFE8
  2931                           indf1	equ	0xFE7
  2932                           postdec1	equ	0xFE5
  2933                           fsr1h	equ	0xFE2
  2934                           fsr1l	equ	0xFE1
  2935                           indf2	equ	0xFDF
  2936                           postinc2	equ	0xFDE
  2937                           postdec2	equ	0xFDD
  2938                           plusw2	equ	0xFDB
  2939                           fsr2h	equ	0xFDA
  2940                           fsr2l	equ	0xFD9
  2941                           status	equ	0xFD8
  2942                           
  2943 ;; *************** function _PIC18F26K40_loadDataIntoNVM *****************
  2944 ;; Defined at:
  2945 ;;		line 98 in file "libs/progPIC18F26K40.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  data            4    4[BANK0 ] struct _DWORD_VAL
  2948 ;;  IncreasePC      1    8[BANK0 ] enum E4064
  2949 ;;  LatchType       1    9[BANK0 ] enum E4265
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  tempData        4   11[BANK0 ] struct _DWORD_VAL
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 3F/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  2961 ;;      Params:         0       6       0       0       0
  2962 ;;      Locals:         0       4       0       0       0
  2963 ;;      Temps:          0       1       0       0       0
  2964 ;;      Totals:         0      11       0       0       0
  2965 ;;Total ram usage:       11 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:   12
  2968 ;; This function calls:
  2969 ;;		_PIC18F26K40_sendByteMsbToLsb
  2970 ;; This function is called by:
  2971 ;;		_APP_DeviceCDCBasicDemoTasks
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text13
  2976  000DB2                     __ptext13:
  2977                           	opt stack 0
  2978  000DB2                     _PIC18F26K40_loadDataIntoNVM:
  2979                           	opt stack 17
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;progPIC18F26K40.c: 99: DWORD_VAL tempData;
  2983                           ;progPIC18F26K40.c: 100: tempData.Val = (data.Val <<1 );
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;incstack = 0
  2987  000DB2  90D8               	bcf	status,0,c
  2988  000DB4  35B5               	rlcf	PIC18F26K40_loadDataIntoNVM@data& (0+255),w,b
  2989  000DB6  6FBC               	movwf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),b
  2990  000DB8  35B6               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+1)& (0+255),w,b
  2991  000DBA  6FBD               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),b
  2992  000DBC  35B7               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+2)& (0+255),w,b
  2993  000DBE  6FBE               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),b
  2994  000DC0  35B8               	rlcf	(PIC18F26K40_loadDataIntoNVM@data+3)& (0+255),w,b
  2995  000DC2  6FBF               	movwf	(PIC18F26K40_loadDataIntoNVM@tempData+3)& (0+255),b
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;progPIC18F26K40.c: 101: tempData.bits.b0 = 0;
  2999  000DC4  91BC               	bcf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),0,b
  3000                           
  3001                           ;progPIC18F26K40.c: 102: if (IncreasePC==TRUE)
  3002  000DC6  05B9               	decf	PIC18F26K40_loadDataIntoNVM@IncreasePC& (0+255),w,b
  3003  000DC8  E104               	bnz	l4645
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;progPIC18F26K40.c: 103: PIC18F26K40_sendByteMsbToLsb(0x02);
  3007  000DCA  0E02               	movlw	2
  3008  000DCC  ECFE  F00A         	call	_PIC18F26K40_sendByteMsbToLsb
  3009  000DD0  D003               	goto	l4647
  3010  000DD2                     l4645:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;progPIC18F26K40.c: 104: else
  3014                           ;progPIC18F26K40.c: 105: PIC18F26K40_sendByteMsbToLsb(0x00);
  3015  000DD2  0E00               	movlw	0
  3016  000DD4  ECFE  F00A         	call	_PIC18F26K40_sendByteMsbToLsb
  3017  000DD8                     l4647:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;progPIC18F26K40.c: 106: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3021  000DD8  D000               	nop2		;2 cycle nop
  3022  000DDA  F000               	nop	
  3023                           
  3024                           ;progPIC18F26K40.c: 107: PIC18F26K40_sendByteMsbToLsb(tempData.v[2]);
  3025  000DDC  0100               	movlb	0	; () banked
  3026  000DDE  51BE               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+2)& (0+255),w,b
  3027  000DE0  ECFE  F00A         	call	_PIC18F26K40_sendByteMsbToLsb
  3028                           
  3029                           ;progPIC18F26K40.c: 108: PIC18F26K40_sendByteMsbToLsb(tempData.v[1]);
  3030  000DE4  51BD               	movf	(PIC18F26K40_loadDataIntoNVM@tempData+1)& (0+255),w,b
  3031  000DE6  ECFE  F00A         	call	_PIC18F26K40_sendByteMsbToLsb
  3032                           
  3033                           ;progPIC18F26K40.c: 109: PIC18F26K40_sendByteMsbToLsb(tempData.v[0]);
  3034  000DEA  51BC               	movf	PIC18F26K40_loadDataIntoNVM@tempData& (0+255),w,b
  3035  000DEC  ECFE  F00A         	call	_PIC18F26K40_sendByteMsbToLsb
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;progPIC18F26K40.c: 110: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3039  000DF0  D000               	nop2		;2 cycle nop
  3040  000DF2  F000               	nop	
  3041                           
  3042                           ;progPIC18F26K40.c: 111: switch (LatchType) {
  3043  000DF4  D02B               	goto	l4667
  3044  000DF6                     l4651:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;progPIC18F26K40.c: 114: PIC18F26K40_sendByteMsbToLsb(0xE0);
  3048  000DF6  0EE0               	movlw	224
  3049  000DF8  ECFE  F00A         	call	_PIC18F26K40_sendByteMsbToLsb
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;progPIC18F26K40.c: 115: _delay((unsigned long)((10)*(12000000/4000.0)));
  3053  000DFC  0E27               	movlw	39
  3054  000DFE  0100               	movlb	0	; () banked
  3055  000E00  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3056  000E02  0EF5               	movlw	245
  3057  000E04                     u4017:
  3058  000E04  2EE8               	decfsz	wreg,f,c
  3059  000E06  D7FE               	bra	u4017
  3060  000E08  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3061  000E0A  D7FC               	bra	u4017
  3062                           
  3063                           ;progPIC18F26K40.c: 116: break;
  3064  000E0C  0012               	return	
  3065  000E0E                     l4655:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;progPIC18F26K40.c: 118: PIC18F26K40_sendByteMsbToLsb(0xC0);
  3069  000E0E  0EC0               	movlw	192
  3070  000E10  ECFE  F00A         	call	_PIC18F26K40_sendByteMsbToLsb
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;progPIC18F26K40.c: 119: (_delay((unsigned long)((2)*(12000000/4000.0))));
  3074  000E14  0E08               	movlw	8
  3075  000E16  0100               	movlb	0	; () banked
  3076  000E18  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3077  000E1A  0EC9               	movlw	201
  3078  000E1C                     u4027:
  3079  000E1C  2EE8               	decfsz	wreg,f,c
  3080  000E1E  D7FE               	bra	u4027
  3081  000E20  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3082  000E22  D7FC               	bra	u4027
  3083  000E24  D000               	nop2	
  3084                           
  3085                           ;progPIC18F26K40.c: 120: (_delay((unsigned long)((100)*(12000000/4000000.0))));
  3086  000E26  0E64               	movlw	100
  3087  000E28                     u4037:
  3088  000E28  2EE8               	decfsz	wreg,f,c
  3089  000E2A  D7FE               	bra	u4037
  3090                           
  3091                           ;progPIC18F26K40.c: 121: PIC18F26K40_sendByteMsbToLsb(0x82);
  3092  000E2C  0E82               	movlw	130
  3093  000E2E  ECFE  F00A         	call	_PIC18F26K40_sendByteMsbToLsb
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;progPIC18F26K40.c: 122: (_delay((unsigned long)((2)*(12000000/4000.0))));
  3097  000E32  0E08               	movlw	8
  3098  000E34  0100               	movlb	0	; () banked
  3099  000E36  6FBB               	movwf	??_PIC18F26K40_loadDataIntoNVM& (0+255),b
  3100  000E38  0EC9               	movlw	201
  3101  000E3A                     u4047:
  3102  000E3A  2EE8               	decfsz	wreg,f,c
  3103  000E3C  D7FE               	bra	u4047
  3104  000E3E  2FBB               	decfsz	??_PIC18F26K40_loadDataIntoNVM& (0+255),f,b
  3105  000E40  D7FC               	bra	u4047
  3106  000E42  D000               	nop2	
  3107                           
  3108                           ;progPIC18F26K40.c: 123: (_delay((unsigned long)((100)*(12000000/4000000.0))));
  3109  000E44  0E64               	movlw	100
  3110  000E46                     u4057:
  3111  000E46  2EE8               	decfsz	wreg,f,c
  3112  000E48  D7FE               	bra	u4057
  3113                           
  3114                           ;progPIC18F26K40.c: 124: break;
  3115  000E4A  0012               	return	
  3116  000E4C                     l4667:
  3117  000E4C  0100               	movlb	0	; () banked
  3118  000E4E  51BA               	movf	PIC18F26K40_loadDataIntoNVM@LatchType& (0+255),w,b
  3119                           
  3120                           ; Switch size 1, requested type "space"
  3121                           ; Number of cases is 2, Range of values is 0 to 1
  3122                           ; switch strategies available:
  3123                           ; Name         Instructions Cycles
  3124                           ; simple_byte            7     4 (average)
  3125                           ;	Chosen strategy is simple_byte
  3126  000E50  E0D2               	bz	l4651
  3127  000E52  0A01               	xorlw	1	; case 1
  3128  000E54  E0DC               	bz	l4655
  3129  000E56  0012               	return		;funcret
  3130  000E58                     __end_of_PIC18F26K40_loadDataIntoNVM:
  3131                           	opt stack 0
  3132                           tblptru	equ	0xFF8
  3133                           tblptrh	equ	0xFF7
  3134                           tblptrl	equ	0xFF6
  3135                           tablat	equ	0xFF5
  3136                           prodh	equ	0xFF4
  3137                           prodl	equ	0xFF3
  3138                           intcon	equ	0xFF2
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           indf1	equ	0xFE7
  3142                           postdec1	equ	0xFE5
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           indf2	equ	0xFDF
  3146                           postinc2	equ	0xFDE
  3147                           postdec2	equ	0xFDD
  3148                           plusw2	equ	0xFDB
  3149                           fsr2h	equ	0xFDA
  3150                           fsr2l	equ	0xFD9
  3151                           status	equ	0xFD8
  3152                           
  3153 ;; *************** function _PIC18F26K40_sendByteMsbToLsb *****************
  3154 ;; Defined at:
  3155 ;;		line 128 in file "libs/progPIC18F26K40.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  info            1    wreg     unsigned char 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  info            1    2[BANK0 ] unsigned char 
  3160 ;;  i               1    3[BANK0 ] char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 3F/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3170 ;;      Params:         0       0       0       0       0
  3171 ;;      Locals:         0       2       0       0       0
  3172 ;;      Temps:          0       2       0       0       0
  3173 ;;      Totals:         0       4       0       0       0
  3174 ;;Total ram usage:        4 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:   11
  3177 ;; This function calls:
  3178 ;;		_PIC18F26K40_setTrisToOut
  3179 ;; This function is called by:
  3180 ;;		_PIC18F26K40_loadDataIntoNVM
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text14
  3185  0015FC                     __ptext14:
  3186                           	opt stack 0
  3187  0015FC                     _PIC18F26K40_sendByteMsbToLsb:
  3188                           	opt stack 17
  3189                           
  3190                           ;incstack = 0
  3191                           ;PIC18F26K40_sendByteMsbToLsb@info stored from wreg
  3192  0015FC  0100               	movlb	0	; () banked
  3193  0015FE  6FB3               	movwf	PIC18F26K40_sendByteMsbToLsb@info& (0+255),b
  3194                           
  3195                           ;progPIC18F26K40.c: 129: PIC18F26K40_setTrisToOut ();
  3196  001600  EC48  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3197                           
  3198                           ;progPIC18F26K40.c: 130: for (INT8 i = 7; i >= 0; i--) {
  3199  001604  0E07               	movlw	7
  3200  001606  0100               	movlb	0	; () banked
  3201  001608  6FB4               	movwf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),b
  3202  00160A                     l55:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;progPIC18F26K40.c: 131: LATCbits.LATC5 = 1;
  3206  00160A  8A8B               	bsf	3979,5,c	;volatile
  3207                           
  3208                           ;progPIC18F26K40.c: 132: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3209  00160C  D000               	nop2		;2 cycle nop
  3210  00160E  F000               	nop	
  3211                           
  3212                           ;progPIC18F26K40.c: 133: if ((info >> i) & 0x01)
  3213  001610  C0B4  F0B1         	movff	PIC18F26K40_sendByteMsbToLsb@i,??_PIC18F26K40_sendByteMsbToLsb
  3214  001614  C0B3  F0B2         	movff	PIC18F26K40_sendByteMsbToLsb@info,??_PIC18F26K40_sendByteMsbToLsb+1
  3215  001618  0100               	movlb	0	; () banked
  3216  00161A  2BB1               	incf	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3217  00161C  D002               	goto	u3514
  3218  00161E                     u3515:
  3219  00161E  90D8               	bcf	status,0,c
  3220  001620  33B2               	rrcf	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),f,b
  3221  001622                     u3514:
  3222  001622  2FB1               	decfsz	??_PIC18F26K40_sendByteMsbToLsb& (0+255),f,b
  3223  001624  D7FC               	goto	u3515
  3224  001626  0100               	movlb	0	; () banked
  3225  001628  A1B2               	btfss	(??_PIC18F26K40_sendByteMsbToLsb+1)& (0+255),0,b
  3226  00162A  D002               	goto	l57
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;progPIC18F26K40.c: 134: LATCbits.LATC6 = 1;
  3230  00162C  8C8B               	bsf	3979,6,c	;volatile
  3231  00162E  D001               	goto	l58
  3232  001630                     l57:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;progPIC18F26K40.c: 135: else
  3236                           ;progPIC18F26K40.c: 136: LATCbits.LATC6 = 0;
  3237  001630  9C8B               	bcf	3979,6,c	;volatile
  3238  001632                     l58:
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;progPIC18F26K40.c: 137: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3242  001632  D000               	nop2		;2 cycle nop
  3243  001634  F000               	nop	
  3244                           
  3245                           ;progPIC18F26K40.c: 138: LATCbits.LATC5 = 0;
  3246  001636  9A8B               	bcf	3979,5,c	;volatile
  3247                           
  3248                           ;progPIC18F26K40.c: 139: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3249  001638  D000               	nop2		;2 cycle nop
  3250  00163A  F000               	nop	
  3251  00163C  0100               	movlb	0	; () banked
  3252  00163E  07B4               	decf	PIC18F26K40_sendByteMsbToLsb@i& (0+255),f,b
  3253                           
  3254                           ; BSR set to: 0
  3255  001640  BFB4               	btfsc	PIC18F26K40_sendByteMsbToLsb@i& (0+255),7,b
  3256                           
  3257                           ; BSR set to: 0
  3258  001642  0012               	return		;funcret
  3259  001644  D7E2               	goto	l55
  3260  001646                     __end_of_PIC18F26K40_sendByteMsbToLsb:
  3261                           	opt stack 0
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           prodh	equ	0xFF4
  3267                           prodl	equ	0xFF3
  3268                           intcon	equ	0xFF2
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           indf1	equ	0xFE7
  3272                           postdec1	equ	0xFE5
  3273                           fsr1h	equ	0xFE2
  3274                           fsr1l	equ	0xFE1
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           postdec2	equ	0xFDD
  3278                           plusw2	equ	0xFDB
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _PIC18F26K40_exitLowVoltageProg *****************
  3284 ;; Defined at:
  3285 ;;		line 27 in file "libs/progPIC18F26K40.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		None
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3299 ;;      Params:         0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0
  3302 ;;      Totals:         0       0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:   10
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_APP_DeviceCDCBasicDemoTasks
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text15
  3314  001A86                     __ptext15:
  3315                           	opt stack 0
  3316  001A86                     _PIC18F26K40_exitLowVoltageProg:
  3317                           	opt stack 19
  3318                           
  3319                           ;progPIC18F26K40.c: 28: TRISCbits.TRISC7 = 0;
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;incstack = 0
  3323  001A86  9E94               	bcf	3988,7,c	;volatile
  3324                           
  3325                           ;progPIC18F26K40.c: 29: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3326  001A88  D000               	nop2		;2 cycle nop
  3327  001A8A  F000               	nop	
  3328                           
  3329                           ;progPIC18F26K40.c: 30: LATCbits.LATC7 = 1;
  3330  001A8C  8E8B               	bsf	3979,7,c	;volatile
  3331  001A8E  0012               	return		;funcret
  3332  001A90                     __end_of_PIC18F26K40_exitLowVoltageProg:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           intcon	equ	0xFF2
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           indf1	equ	0xFE7
  3344                           postdec1	equ	0xFE5
  3345                           fsr1h	equ	0xFE2
  3346                           fsr1l	equ	0xFE1
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           plusw2	equ	0xFDB
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8
  3354                           
  3355 ;; *************** function _PIC18F26K40_enterLowVoltageProg *****************
  3356 ;; Defined at:
  3357 ;;		line 10 in file "libs/progPIC18F26K40.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  code            4    6[BANK0 ] struct _DWORD_VAL
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 3F/0
  3368 ;;		On exit  : 3F/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3371 ;;      Params:         0       0       0       0       0
  3372 ;;      Locals:         0       4       0       0       0
  3373 ;;      Temps:          0       0       0       0       0
  3374 ;;      Totals:         0       4       0       0       0
  3375 ;;Total ram usage:        4 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:   12
  3378 ;; This function calls:
  3379 ;;		_PIC18F26K40_sendByte
  3380 ;;		_PIC18F26K40_setTrisToOut
  3381 ;; This function is called by:
  3382 ;;		_APP_DeviceCDCBasicDemoTasks
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text16
  3387  00168C                     __ptext16:
  3388                           	opt stack 0
  3389  00168C                     _PIC18F26K40_enterLowVoltageProg:
  3390                           	opt stack 17
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;progPIC18F26K40.c: 11: PIC18F26K40_setTrisToOut ();
  3394                           
  3395                           ;incstack = 0
  3396  00168C  EC48  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3397                           
  3398                           ;progPIC18F26K40.c: 12: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3399  001690  D000               	nop2		;2 cycle nop
  3400  001692  F000               	nop	
  3401                           
  3402                           ;progPIC18F26K40.c: 14: LATCbits.LATC7 = 0;
  3403  001694  9E8B               	bcf	3979,7,c	;volatile
  3404                           
  3405                           ;progPIC18F26K40.c: 15: LATCbits.LATC6 = 0;
  3406  001696  9C8B               	bcf	3979,6,c	;volatile
  3407                           
  3408                           ;progPIC18F26K40.c: 16: LATCbits.LATC5 = 0;
  3409  001698  9A8B               	bcf	3979,5,c	;volatile
  3410                           
  3411                           ;progPIC18F26K40.c: 17: (_delay((unsigned long)((250)*(12000000/4000000.0))));
  3412  00169A  0EFA               	movlw	250
  3413  00169C                     u4067:
  3414  00169C  2EE8               	decfsz	wreg,f,c
  3415  00169E  D7FE               	bra	u4067
  3416                           
  3417                           ;progPIC18F26K40.c: 19: DWORD_VAL code;
  3418                           ;progPIC18F26K40.c: 20: code.Val = (0x4d434850);
  3419  0016A0  0E50               	movlw	80
  3420  0016A2  0100               	movlb	0	; () banked
  3421  0016A4  6FB7               	movwf	PIC18F26K40_enterLowVoltageProg@code& (0+255),b
  3422  0016A6  0E48               	movlw	72
  3423  0016A8  6FB8               	movwf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),b
  3424  0016AA  0E43               	movlw	67
  3425  0016AC  6FB9               	movwf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),b
  3426  0016AE  0E4D               	movlw	77
  3427  0016B0  6FBA               	movwf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;progPIC18F26K40.c: 21: PIC18F26K40_sendByte(code.v[3], MSBTOLSB);
  3431  0016B2  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3432  0016B4  51BA               	movf	(PIC18F26K40_enterLowVoltageProg@code+3)& (0+255),w,b
  3433  0016B6  EC58  F00A         	call	_PIC18F26K40_sendByte
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;progPIC18F26K40.c: 22: PIC18F26K40_sendByte(code.v[2], MSBTOLSB);
  3437  0016BA  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3438  0016BC  51B9               	movf	(PIC18F26K40_enterLowVoltageProg@code+2)& (0+255),w,b
  3439  0016BE  EC58  F00A         	call	_PIC18F26K40_sendByte
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;progPIC18F26K40.c: 23: PIC18F26K40_sendByte(code.v[1], MSBTOLSB);
  3443  0016C2  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3444  0016C4  51B8               	movf	(PIC18F26K40_enterLowVoltageProg@code+1)& (0+255),w,b
  3445  0016C6  EC58  F00A         	call	_PIC18F26K40_sendByte
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;progPIC18F26K40.c: 24: PIC18F26K40_sendByte(code.v[0], MSBTOLSB);
  3449  0016CA  6BB1               	clrf	PIC18F26K40_sendByte@direction& (0+255),b
  3450  0016CC  51B7               	movf	PIC18F26K40_enterLowVoltageProg@code& (0+255),w,b
  3451  0016CE  EF58  F00A         	goto	_PIC18F26K40_sendByte
  3452  0016D2                     __end_of_PIC18F26K40_enterLowVoltageProg:
  3453                           	opt stack 0
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           prodh	equ	0xFF4
  3459                           prodl	equ	0xFF3
  3460                           intcon	equ	0xFF2
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           indf1	equ	0xFE7
  3464                           postdec1	equ	0xFE5
  3465                           fsr1h	equ	0xFE2
  3466                           fsr1l	equ	0xFE1
  3467                           indf2	equ	0xFDF
  3468                           postinc2	equ	0xFDE
  3469                           postdec2	equ	0xFDD
  3470                           plusw2	equ	0xFDB
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _PIC18F26K40_sendByte *****************
  3476 ;; Defined at:
  3477 ;;		line 33 in file "libs/progPIC18F26K40.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  info            1    wreg     unsigned char 
  3480 ;;  direction       1    0[BANK0 ] enum E4265
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  info            1    3[BANK0 ] unsigned char 
  3483 ;;  i               1    5[BANK0 ] unsigned char 
  3484 ;;  j               1    4[BANK0 ] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 3F/0
  3491 ;;		On exit  : 3F/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3494 ;;      Params:         0       1       0       0       0
  3495 ;;      Locals:         0       3       0       0       0
  3496 ;;      Temps:          0       2       0       0       0
  3497 ;;      Totals:         0       6       0       0       0
  3498 ;;Total ram usage:        6 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:   11
  3501 ;; This function calls:
  3502 ;;		_PIC18F26K40_setTrisToOut
  3503 ;; This function is called by:
  3504 ;;		_PIC18F26K40_enterLowVoltageProg
  3505 ;;		_PIC18F26K40_readThreeBytes
  3506 ;;		_PIC18F26K40_loadPC
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text17
  3511  0014B0                     __ptext17:
  3512                           	opt stack 0
  3513  0014B0                     _PIC18F26K40_sendByte:
  3514                           	opt stack 17
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;incstack = 0
  3518                           ;PIC18F26K40_sendByte@info stored from wreg
  3519  0014B0  6FB4               	movwf	PIC18F26K40_sendByte@info& (0+255),b
  3520                           
  3521                           ;progPIC18F26K40.c: 34: PIC18F26K40_setTrisToOut ();
  3522  0014B2  EC48  F00D         	call	_PIC18F26K40_setTrisToOut	;wreg free
  3523                           
  3524                           ;progPIC18F26K40.c: 35: BYTE i, j;
  3525                           ;progPIC18F26K40.c: 36: for (i = 0; i < 8; i++) {
  3526  0014B6  0100               	movlb	0	; () banked
  3527  0014B8  6BB6               	clrf	PIC18F26K40_sendByte@i& (0+255),b
  3528  0014BA                     l4495:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;progPIC18F26K40.c: 37: if (direction)
  3532  0014BA  51B1               	movf	PIC18F26K40_sendByte@direction& (0+255),w,b
  3533  0014BC  E003               	bz	l4499
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;progPIC18F26K40.c: 38: j = i;
  3537  0014BE  C0B6  F0B5         	movff	PIC18F26K40_sendByte@i,PIC18F26K40_sendByte@j
  3538  0014C2  D003               	goto	l4501
  3539  0014C4                     l4499:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;progPIC18F26K40.c: 39: else
  3543                           ;progPIC18F26K40.c: 40: j = 7-i;
  3544  0014C4  51B6               	movf	PIC18F26K40_sendByte@i& (0+255),w,b
  3545  0014C6  0807               	sublw	7
  3546  0014C8  6FB5               	movwf	PIC18F26K40_sendByte@j& (0+255),b
  3547  0014CA                     l4501:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;progPIC18F26K40.c: 41: LATCbits.LATC5 = 1;
  3551  0014CA  8A8B               	bsf	3979,5,c	;volatile
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;progPIC18F26K40.c: 42: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3555  0014CC  D000               	nop2		;2 cycle nop
  3556  0014CE  F000               	nop	
  3557                           
  3558                           ;progPIC18F26K40.c: 43: if ((info >> j) & 0x01)
  3559  0014D0  C0B5  F0B2         	movff	PIC18F26K40_sendByte@j,??_PIC18F26K40_sendByte
  3560  0014D4  C0B4  F0B3         	movff	PIC18F26K40_sendByte@info,??_PIC18F26K40_sendByte+1
  3561  0014D8  0100               	movlb	0	; () banked
  3562  0014DA  2BB2               	incf	??_PIC18F26K40_sendByte& (0+255),f,b
  3563  0014DC  D002               	goto	u3484
  3564  0014DE                     u3485:
  3565  0014DE  90D8               	bcf	status,0,c
  3566  0014E0  33B3               	rrcf	(??_PIC18F26K40_sendByte+1)& (0+255),f,b
  3567  0014E2                     u3484:
  3568  0014E2  2FB2               	decfsz	??_PIC18F26K40_sendByte& (0+255),f,b
  3569  0014E4  D7FC               	goto	u3485
  3570  0014E6  0100               	movlb	0	; () banked
  3571  0014E8  A1B3               	btfss	(??_PIC18F26K40_sendByte+1)& (0+255),0,b
  3572  0014EA  D002               	goto	l28
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;progPIC18F26K40.c: 44: LATCbits.LATC6 = 1;
  3576  0014EC  8C8B               	bsf	3979,6,c	;volatile
  3577  0014EE  D001               	goto	l29
  3578  0014F0                     l28:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;progPIC18F26K40.c: 45: else
  3582                           ;progPIC18F26K40.c: 46: LATCbits.LATC6 = 0;
  3583  0014F0  9C8B               	bcf	3979,6,c	;volatile
  3584  0014F2                     l29:
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;progPIC18F26K40.c: 47: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3588  0014F2  D000               	nop2		;2 cycle nop
  3589  0014F4  F000               	nop	
  3590                           
  3591                           ;progPIC18F26K40.c: 48: LATCbits.LATC5 = 0;
  3592  0014F6  9A8B               	bcf	3979,5,c	;volatile
  3593                           
  3594                           ;progPIC18F26K40.c: 49: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3595  0014F8  D000               	nop2		;2 cycle nop
  3596  0014FA  F000               	nop	
  3597  0014FC  0100               	movlb	0	; () banked
  3598  0014FE  2BB6               	incf	PIC18F26K40_sendByte@i& (0+255),f,b
  3599                           
  3600                           ; BSR set to: 0
  3601  001500  0E07               	movlw	7
  3602  001502  65B6               	cpfsgt	PIC18F26K40_sendByte@i& (0+255),b
  3603  001504  D7DA               	goto	l4495
  3604  001506  0C07               	retlw	7
  3605  001508                     __end_of_PIC18F26K40_sendByte:
  3606                           	opt stack 0
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodh	equ	0xFF4
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           indf1	equ	0xFE7
  3617                           postdec1	equ	0xFE5
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           indf2	equ	0xFDF
  3621                           postinc2	equ	0xFDE
  3622                           postdec2	equ	0xFDD
  3623                           plusw2	equ	0xFDB
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function _PIC18F26K40_setTrisToOut *****************
  3629 ;; Defined at:
  3630 ;;		line 4 in file "libs/progPIC18F26K40.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		None
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3644 ;;      Params:         0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:   10
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_PIC18F26K40_enterLowVoltageProg
  3655 ;;		_PIC18F26K40_sendByte
  3656 ;;		_PIC18F26K40_sendByteMsbToLsb
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text18
  3661  001A90                     __ptext18:
  3662                           	opt stack 0
  3663  001A90                     _PIC18F26K40_setTrisToOut:
  3664                           	opt stack 17
  3665                           
  3666                           ;progPIC18F26K40.c: 5: TRISCbits.TRISC7 = 0;
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;incstack = 0
  3670  001A90  9E94               	bcf	3988,7,c	;volatile
  3671                           
  3672                           ;progPIC18F26K40.c: 6: TRISCbits.TRISC6 = 0;
  3673  001A92  9C94               	bcf	3988,6,c	;volatile
  3674                           
  3675                           ;progPIC18F26K40.c: 7: TRISCbits.TRISC5 = 0;
  3676  001A94  9A94               	bcf	3988,5,c	;volatile
  3677  001A96  0012               	return		;funcret
  3678  001A98                     __end_of_PIC18F26K40_setTrisToOut:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           tblptrh	equ	0xFF7
  3682                           tblptrl	equ	0xFF6
  3683                           tablat	equ	0xFF5
  3684                           prodh	equ	0xFF4
  3685                           prodl	equ	0xFF3
  3686                           intcon	equ	0xFF2
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           indf1	equ	0xFE7
  3690                           postdec1	equ	0xFE5
  3691                           fsr1h	equ	0xFE2
  3692                           fsr1l	equ	0xFE1
  3693                           indf2	equ	0xFDF
  3694                           postinc2	equ	0xFDE
  3695                           postdec2	equ	0xFDD
  3696                           plusw2	equ	0xFDB
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           status	equ	0xFD8
  3700                           
  3701 ;; *************** function _CDCTxService *****************
  3702 ;; Defined at:
  3703 ;;		line 836 in file "picLibs/usb_device_cdc.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  3708 ;;  i               1    9[BANK0 ] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 3F/0
  3715 ;;		On exit  : 3F/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  3718 ;;      Params:         0       0       0       0       0
  3719 ;;      Locals:         0       2       0       0       0
  3720 ;;      Temps:          0       0       0       0       0
  3721 ;;      Totals:         0       2       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:   11
  3725 ;; This function calls:
  3726 ;;		_USBTransferOnePacket
  3727 ;; This function is called by:
  3728 ;;		_APP_DeviceCDCBasicDemoTasks
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text19
  3733  000946                     __ptext19:
  3734                           	opt stack 0
  3735  000946                     _CDCTxService:
  3736                           	opt stack 18
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3740                           ;usb_device_cdc.c: 839: uint8_t i;
  3741                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3742                           
  3743                           ;incstack = 0
  3744  000946  94A0               	bcf	4000,2,c	;volatile
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;usb_device_cdc.c: 843: {};
  3748                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3749  000948  5176               	movf	_CDCDataInHandle& (0+255),w,b
  3750  00094A  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3751  00094C  E008               	bz	l4755
  3752                           
  3753                           ; BSR set to: 0
  3754  00094E  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
  3755  000952  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3756  000956  AEDF               	btfss	indf2,7,c
  3757  000958  D002               	goto	l4755
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;usb_device_cdc.c: 846: {
  3761                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3762  00095A  84A0               	bsf	4000,2,c	;volatile
  3763                           
  3764                           ;usb_device_cdc.c: 848: return;
  3765  00095C  0012               	return	
  3766  00095E                     l4755:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;usb_device_cdc.c: 849: }
  3770                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3771  00095E  0E03               	movlw	3
  3772  000960  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3773  000962  E101               	bnz	l4759
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3777  000964  6B80               	clrf	_cdc_trf_state& (0+255),b
  3778  000966                     l4759:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3782  000966  5180               	movf	_cdc_trf_state& (0+255),w,b
  3783  000968  E102               	bnz	l4763
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;usb_device_cdc.c: 863: {
  3787                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3788  00096A  84A0               	bsf	4000,2,c	;volatile
  3789                           
  3790                           ;usb_device_cdc.c: 865: return;
  3791  00096C  0012               	return	
  3792  00096E                     l4763:
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;usb_device_cdc.c: 866: }
  3796                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3797  00096E  0E02               	movlw	2
  3798  000970  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  3799  000972  E10D               	bnz	l4769
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;usb_device_cdc.c: 872: {
  3803                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3804  000974  0E01               	movlw	1
  3805  000976  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  3806  000978  0E00               	movlw	0
  3807  00097A  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  3808  00097C  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3809  00097E  6FB4               	movwf	USBTransferOnePacket@len& (0+255),b
  3810  000980  0E02               	movlw	2
  3811  000982  EC6C  F005         	call	_USBTransferOnePacket
  3812  000986  D841               	call	PL114	;call to abstracted procedure
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3816  000988  0E03               	movlw	3
  3817  00098A  6F80               	movwf	_cdc_trf_state& (0+255),b
  3818                           
  3819                           ;usb_device_cdc.c: 876: }
  3820  00098C  D02E               	goto	l4813
  3821  00098E                     l4769:
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3825  00098E  0580               	decf	_cdc_trf_state& (0+255),w,b
  3826  000990  E12C               	bnz	l4813
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;usb_device_cdc.c: 878: {
  3830                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3831  000992  0E0F               	movlw	15
  3832  000994  641B               	cpfsgt	_cdc_tx_len,c
  3833  000996  D002               	goto	l752
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3837  000998  6FBB               	movwf	CDCTxService@byte_to_send& (0+255),b
  3838  00099A  D002               	goto	l4775
  3839  00099C                     l752:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;usb_device_cdc.c: 884: else
  3843                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3844  00099C  C01B  F0BB         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3845  0009A0                     l4775:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3849  0009A0  51BB               	movf	CDCTxService@byte_to_send& (0+255),w,b
  3850  0009A2  5E1B               	subwf	_cdc_tx_len,f,c
  3851                           
  3852                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3853  0009A4  0E40               	movlw	64
  3854  0009A6  6F6A               	movwf	_pCDCDst& (0+255),b
  3855  0009A8  0E02               	movlw	2
  3856  0009AA  6F6B               	movwf	(_pCDCDst+1)& (0+255),b
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3860  0009AC  C0BB  F0BA         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3864  0009B0  517C               	movf	_cdc_mem_type& (0+255),w,b
  3865  0009B2  E002               	bz	l4791
  3866  0009B4  D005               	goto	l4801
  3867  0009B6                     l4783:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;usb_device_cdc.c: 898: {
  3871                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;usb_device_cdc.c: 902: i--;
  3881  0009B6  D81B               	call	PL26	;call to abstracted procedure
  3882  0009B8                     l4791:
  3883                           
  3884                           ; BSR set to: 0
  3885  0009B8  51BA               	movf	CDCTxService@i& (0+255),w,b
  3886  0009BA  E004               	bz	l4803
  3887  0009BC  D7FC               	goto	l4783
  3888  0009BE                     l4793:
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;usb_device_cdc.c: 908: {
  3892                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;usb_device_cdc.c: 912: i--;
  3902  0009BE  D817               	call	PL26	;call to abstracted procedure
  3903  0009C0                     l4801:
  3904                           
  3905                           ; BSR set to: 0
  3906  0009C0  51BA               	movf	CDCTxService@i& (0+255),w,b
  3907  0009C2  E1FD               	bnz	l4793
  3908  0009C4                     l4803:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;usb_device_cdc.c: 913: }
  3912                           ;usb_device_cdc.c: 914: }
  3913                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  3914  0009C4  501B               	movf	_cdc_tx_len,w,c
  3915  0009C6  E106               	bnz	l4811
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;usb_device_cdc.c: 921: {
  3919                           ;usb_device_cdc.c: 922: if(byte_to_send == 15)
  3920  0009C8  0E0F               	movlw	15
  3921  0009CA  19BB               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  3925  0009CC  0E02               	movlw	2
  3926  0009CE  A4D8               	btfss	status,2,c
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;usb_device_cdc.c: 924: else
  3930                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  3931  0009D0  0E03               	movlw	3
  3932  0009D2  6F80               	movwf	_cdc_trf_state& (0+255),b
  3933  0009D4                     l4811:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;usb_device_cdc.c: 926: }
  3937                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3938  0009D4  0E01               	movlw	1
  3939  0009D6  6FB1               	movwf	USBTransferOnePacket@dir& (0+255),b
  3940  0009D8  0E40               	movlw	64
  3941  0009DA  6FB2               	movwf	USBTransferOnePacket@data& (0+255),b
  3942  0009DC  0E02               	movlw	2
  3943  0009DE  6FB3               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3944  0009E0  C0BB  F0B4         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3945  0009E4  EC6C  F005         	call	_USBTransferOnePacket
  3946  0009E8  D810               	call	PL114	;call to abstracted procedure
  3947  0009EA                     l4813:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;usb_device_cdc.c: 929: }
  3951                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  3952  0009EA  84A0               	bsf	4000,2,c	;volatile
  3953                           
  3954                           ; BSR set to: 0
  3955  0009EC  0012               	return		;funcret
  3956  0009EE                     __end_of_CDCTxService:
  3957                           	opt stack 0
  3958  0009EE                     PL26:
  3959                           	opt stack 18
  3960  0009EE  516D               	movf	_pCDCSrc& (0+255),w,b
  3961  0009F0  6ED9               	movwf	fsr2l,c
  3962  0009F2  6ADA               	clrf	fsr2h,c
  3963  0009F4  C06A  FFE1         	movff	_pCDCDst,fsr1l
  3964  0009F8  C06B  FFE2         	movff	_pCDCDst+1,fsr1h
  3965  0009FC  CFDF FFE7          	movff	indf2,indf1
  3966  000A00  4B6A               	infsnz	_pCDCDst& (0+255),f,b
  3967  000A02  2B6B               	incf	(_pCDCDst+1)& (0+255),f,b
  3968  000A04  2B6D               	incf	_pCDCSrc& (0+255),f,b
  3969  000A06  07BA               	decf	CDCTxService@i& (0+255),f,b
  3970  000A08  0012               	return	
  3971  000A0A                     __end_ofPL26:
  3972                           	opt stack 0
  3973  000A0A                     PL114:
  3974                           	opt stack 18
  3975  000A0A  C0B1  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3976  000A0E  C0B2  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3977  000A12  0012               	return	
  3978  000A14                     __end_ofPL114:
  3979                           	opt stack 0
  3980                           tblptru	equ	0xFF8
  3981                           tblptrh	equ	0xFF7
  3982                           tblptrl	equ	0xFF6
  3983                           tablat	equ	0xFF5
  3984                           prodh	equ	0xFF4
  3985                           prodl	equ	0xFF3
  3986                           intcon	equ	0xFF2
  3987                           postinc0	equ	0xFEE
  3988                           wreg	equ	0xFE8
  3989                           indf1	equ	0xFE7
  3990                           postdec1	equ	0xFE5
  3991                           fsr1h	equ	0xFE2
  3992                           fsr1l	equ	0xFE1
  3993                           indf2	equ	0xFDF
  3994                           postinc2	equ	0xFDE
  3995                           postdec2	equ	0xFDD
  3996                           plusw2	equ	0xFDB
  3997                           fsr2h	equ	0xFDA
  3998                           fsr2l	equ	0xFD9
  3999                           status	equ	0xFD8
  4000                           
  4001 ;; *************** function _USBTransferOnePacket *****************
  4002 ;; Defined at:
  4003 ;;		line 995 in file "picLibs/usb_device.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  ep              1    wreg     unsigned char 
  4006 ;;  dir             1    0[BANK0 ] unsigned char 
  4007 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4008 ;;		 -> cdc_data_tx(15), cdc_data_rx(15), NULL(0), 
  4009 ;;  len             1    3[BANK0 ] unsigned char 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  ep              1    6[BANK0 ] unsigned char 
  4012 ;;  handle          2    7[BANK0 ] PTR volatile struct __BD
  4013 ;;		 -> RAM(767), NULL(0), BDT(48), 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  2    0[BANK0 ] PTR void 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4018 ;; Tracked objects:
  4019 ;;		On entry : 3F/0
  4020 ;;		On exit  : 3F/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4023 ;;      Params:         0       4       0       0       0
  4024 ;;      Locals:         0       3       0       0       0
  4025 ;;      Temps:          0       2       0       0       0
  4026 ;;      Totals:         0       9       0       0       0
  4027 ;;Total ram usage:        9 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:   10
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_getsUSBUSART
  4034 ;;		_CDCTxService
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text20
  4039  000AD8                     __ptext20:
  4040                           	opt stack 0
  4041  000AD8                     _USBTransferOnePacket:
  4042                           	opt stack 18
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;incstack = 0
  4046                           ;USBTransferOnePacket@ep stored from wreg
  4047  000AD8  6FB7               	movwf	USBTransferOnePacket@ep& (0+255),b
  4048                           
  4049                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4050                           ;usb_device.c: 1000: if(dir != 0)
  4051  000ADA  0100               	movlb	0	; () banked
  4052  000ADC  51B1               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4053  000ADE  E004               	bz	l4533
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;usb_device.c: 1001: {
  4057                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4058  000AE0  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4059  000AE2  EC73  F006         	call	PL84	;call to abstracted procedure
  4060  000AE6  D003               	goto	L3
  4061  000AE8                     l4533:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;usb_device.c: 1005: else
  4065                           ;usb_device.c: 1006: {
  4066                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4067  000AE8  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4068  000AEA  EC7C  F006         	call	PL92	;call to abstracted procedure
  4069  000AEE                     L3:
  4070  000AEE  6ED9               	movwf	fsr2l,c
  4071  000AF0  6ADA               	clrf	fsr2h,c
  4072  000AF2  CFDE F0B8          	movff	postinc2,USBTransferOnePacket@handle
  4073  000AF6  CFDD F0B9          	movff	postdec2,USBTransferOnePacket@handle+1
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;usb_device.c: 1009: }
  4077                           ;usb_device.c: 1013: if(handle == 0)
  4078  000AFA  51B8               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4079  000AFC  11B9               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4080  000AFE  E103               	bnz	l4539
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;usb_device.c: 1014: {
  4084                           ;usb_device.c: 1015: return 0;
  4085  000B00  6BB1               	clrf	?_USBTransferOnePacket& (0+255),b
  4086  000B02  6BB2               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  4087  000B04  0012               	return	
  4088  000B06                     l4539:
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;usb_device.c: 1016: }
  4092                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4093  000B06  EE20 F002          	lfsr	2,2
  4094  000B0A  D842               	call	PL108	;call to abstracted procedure
  4095  000B0C  C0B2  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4096  000B10  C0B3  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4097                           
  4098                           ;usb_device.c: 1030: handle->CNT = len;
  4099  000B14  EE20 F001          	lfsr	2,1
  4100  000B18  D83B               	call	PL108	;call to abstracted procedure
  4101  000B1A  C0B4  FFDF         	movff	USBTransferOnePacket@len,indf2
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4105  000B1E  D833               	call	PL94	;call to abstracted procedure
  4106  000B20  0E40               	movlw	64
  4107  000B22  16DF               	andwf	indf2,f,c
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4111  000B24  D830               	call	PL94	;call to abstracted procedure
  4112  000B26  0E00               	movlw	0
  4113  000B28  86DB               	bsf	plusw2,3,c
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4117  000B2A  D82D               	call	PL94	;call to abstracted procedure
  4118  000B2C  8EDB               	bsf	plusw2,7,c
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;usb_device.c: 1036: if(dir != 0)
  4122  000B2E  51B1               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4123  000B30  E005               	bz	l4551
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;usb_device.c: 1037: {
  4127                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4128  000B32  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4129  000B34  D818               	call	PL32	;call to abstracted procedure
  4130  000B36  D81D               	call	PL50	;call to abstracted procedure
  4131  000B38  0F0F               	addlw	low _pBDTEntryIn
  4132  000B3A  D004               	goto	L4
  4133  000B3C                     l4551:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;usb_device.c: 1041: else
  4137                           ;usb_device.c: 1042: {
  4138                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4139  000B3C  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4140  000B3E  D80D               	call	PL28	;call to abstracted procedure
  4141  000B40  D818               	call	PL50	;call to abstracted procedure
  4142  000B42  0F60               	addlw	low _pBDTEntryOut
  4143  000B44                     L4:
  4144  000B44  6ED9               	movwf	fsr2l,c
  4145  000B46  6ADA               	clrf	fsr2h,c
  4146  000B48  C0B5  FFDE         	movff	??_USBTransferOnePacket,postinc2
  4147  000B4C  C0B6  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;usb_device.c: 1045: }
  4151                           ;usb_device.c: 1046: return (void*)handle;
  4152  000B50  C0B8  F0B1         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4153  000B54  C0B9  F0B2         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4154                           
  4155                           ; BSR set to: 0
  4156  000B58  0012               	return		;funcret
  4157  000B5A                     __end_of_USBTransferOnePacket:
  4158                           	opt stack 0
  4159  000B5A                     PL28:
  4160                           	opt stack 19
  4161  000B5A  0D02               	mullw	2
  4162  000B5C  50F3               	movf	prodl,w,c
  4163  000B5E  0F60               	addlw	low _pBDTEntryOut
  4164  000B60  6ED9               	movwf	fsr2l,c
  4165  000B62  6ADA               	clrf	fsr2h,c
  4166  000B64  0012               	return	
  4167  000B66                     __end_ofPL28:
  4168                           	opt stack 0
  4169  000B66                     PL32:
  4170                           	opt stack 19
  4171  000B66  0D02               	mullw	2
  4172  000B68  50F3               	movf	prodl,w,c
  4173  000B6A  0F0F               	addlw	low _pBDTEntryIn
  4174  000B6C  6ED9               	movwf	fsr2l,c
  4175  000B6E  6ADA               	clrf	fsr2h,c
  4176  000B70  0012               	return	
  4177  000B72                     __end_ofPL32:
  4178                           	opt stack 0
  4179  000B72                     PL50:
  4180                           	opt stack 18
  4181  000B72  CFDE F0B5          	movff	postinc2,??_USBTransferOnePacket
  4182  000B76  CFDD F0B6          	movff	postdec2,??_USBTransferOnePacket+1
  4183  000B7A  0E04               	movlw	4
  4184  000B7C  1BB5               	xorwf	??_USBTransferOnePacket& (0+255),f,b
  4185  000B7E  51B7               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4186  000B80  0D02               	mullw	2
  4187  000B82  50F3               	movf	prodl,w,c
  4188  000B84  0012               	return	
  4189  000B86                     __end_ofPL50:
  4190                           	opt stack 0
  4191  000B86                     PL94:
  4192                           	opt stack 18
  4193  000B86  C0B8  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4194  000B8A  C0B9  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4195  000B8E  0012               	return	
  4196  000B90                     __end_ofPL94:
  4197                           	opt stack 0
  4198  000B90                     PL108:
  4199                           	opt stack 18
  4200  000B90  51B8               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4201  000B92  26D9               	addwf	fsr2l,f,c
  4202  000B94  51B9               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4203  000B96  22DA               	addwfc	fsr2h,f,c
  4204  000B98  0012               	return	
  4205  000B9A                     __end_ofPL108:
  4206                           	opt stack 0
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           intcon	equ	0xFF2
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           indf1	equ	0xFE7
  4217                           postdec1	equ	0xFE5
  4218                           fsr1h	equ	0xFE2
  4219                           fsr1l	equ	0xFE1
  4220                           indf2	equ	0xFDF
  4221                           postinc2	equ	0xFDE
  4222                           postdec2	equ	0xFDD
  4223                           plusw2	equ	0xFDB
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function _BUTTON_IsPressed *****************
  4229 ;; Defined at:
  4230 ;;		line 55 in file "picLibs/buttons.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  button          1    wreg     enum E3304
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  button          1    0[BANK0 ] enum E3304
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 3F/0
  4241 ;;		On exit  : 3F/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4244 ;;      Params:         0       0       0       0       0
  4245 ;;      Locals:         0       1       0       0       0
  4246 ;;      Temps:          0       0       0       0       0
  4247 ;;      Totals:         0       1       0       0       0
  4248 ;;Total ram usage:        1 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:   10
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_APP_DeviceCDCBasicDemoTasks
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text21
  4259  001A12                     __ptext21:
  4260                           	opt stack 0
  4261  001A12                     _BUTTON_IsPressed:
  4262                           	opt stack 19
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;incstack = 0
  4266                           ;BUTTON_IsPressed@button stored from wreg
  4267  001A12  6FB1               	movwf	BUTTON_IsPressed@button& (0+255),b
  4268                           
  4269                           ;buttons.c: 57: switch(button)
  4270  001A14  D003               	goto	l4677
  4271  001A16                     l151:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4275  001A16  A680               	btfss	3968,3,c	;volatile
  4276  001A18  0C01               	retlw	1
  4277  001A1A  0C00               	retlw	0
  4278  001A1C                     l4677:
  4279  001A1C  0100               	movlb	0	; () banked
  4280  001A1E  51B1               	movf	BUTTON_IsPressed@button& (0+255),w,b
  4281                           
  4282                           ; Switch size 1, requested type "space"
  4283                           ; Number of cases is 2, Range of values is 0 to 1
  4284                           ; switch strategies available:
  4285                           ; Name         Instructions Cycles
  4286                           ; simple_byte            7     4 (average)
  4287                           ;	Chosen strategy is simple_byte
  4288  001A20  B4D8               	btfsc	status,2,c
  4289  001A22  0C00               	retlw	0
  4290  001A24  0A01               	xorlw	1	; case 1
  4291  001A26  A4D8               	btfss	status,2,c
  4292  001A28  0C00               	retlw	0
  4293  001A2A  D7F5               	goto	l151
  4294  001A2C                     __end_of_BUTTON_IsPressed:
  4295                           	opt stack 0
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           prodh	equ	0xFF4
  4301                           prodl	equ	0xFF3
  4302                           intcon	equ	0xFF2
  4303                           postinc0	equ	0xFEE
  4304                           wreg	equ	0xFE8
  4305                           indf1	equ	0xFE7
  4306                           postdec1	equ	0xFE5
  4307                           fsr1h	equ	0xFE2
  4308                           fsr1l	equ	0xFE1
  4309                           indf2	equ	0xFDF
  4310                           postinc2	equ	0xFDE
  4311                           postdec2	equ	0xFDD
  4312                           plusw2	equ	0xFDB
  4313                           fsr2h	equ	0xFDA
  4314                           fsr2l	equ	0xFD9
  4315                           status	equ	0xFD8
  4316                           
  4317 ;; *************** function _SYS_InterruptHigh *****************
  4318 ;; Defined at:
  4319 ;;		line 86 in file "picLibs/system.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4333 ;;      Params:         0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0
  4335 ;;      Temps:         10       0       0       0       0
  4336 ;;      Totals:        10       0       0       0       0
  4337 ;;Total ram usage:       10 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    9
  4340 ;; This function calls:
  4341 ;;		_USBDeviceTasks
  4342 ;; This function is called by:
  4343 ;;		Interrupt level 2
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	intcode
  4348  000008                     __pintcode:
  4349                           	opt stack 0
  4350  000008                     _SYS_InterruptHigh:
  4351                           	opt stack 17
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;incstack = 0
  4355  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4356  00000A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh
  4357  00000E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+1
  4358  000012  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+2
  4359  000016  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+3
  4360  00001A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+4
  4361  00001E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+5
  4362  000022  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+6
  4363  000026  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+7
  4364  00002A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+8
  4365  00002E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+9
  4366                           
  4367                           ;system.c: 89: USBDeviceTasks();
  4368  000032  EC4D  F003         	call	_USBDeviceTasks	;wreg free
  4369  000036  C051  FFF5         	movff	??_SYS_InterruptHigh+9,tablat
  4370  00003A  C050  FFF8         	movff	??_SYS_InterruptHigh+8,tblptru
  4371  00003E  C04F  FFF7         	movff	??_SYS_InterruptHigh+7,tblptrh
  4372  000042  C04E  FFF6         	movff	??_SYS_InterruptHigh+6,tblptrl
  4373  000046  C04D  FFF4         	movff	??_SYS_InterruptHigh+5,prodh
  4374  00004A  C04C  FFF3         	movff	??_SYS_InterruptHigh+4,prodl
  4375  00004E  C04B  FFDA         	movff	??_SYS_InterruptHigh+3,fsr2h
  4376  000052  C04A  FFD9         	movff	??_SYS_InterruptHigh+2,fsr2l
  4377  000056  C049  FFE2         	movff	??_SYS_InterruptHigh+1,fsr1h
  4378  00005A  C048  FFE1         	movff	??_SYS_InterruptHigh,fsr1l
  4379  00005E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4380  000060  0011               	retfie		f
  4381  000062                     __end_of_SYS_InterruptHigh:
  4382                           	opt stack 0
  4383                           tblptru	equ	0xFF8
  4384                           tblptrh	equ	0xFF7
  4385                           tblptrl	equ	0xFF6
  4386                           tablat	equ	0xFF5
  4387                           prodh	equ	0xFF4
  4388                           prodl	equ	0xFF3
  4389                           intcon	equ	0xFF2
  4390                           postinc0	equ	0xFEE
  4391                           wreg	equ	0xFE8
  4392                           indf1	equ	0xFE7
  4393                           postdec1	equ	0xFE5
  4394                           fsr1h	equ	0xFE2
  4395                           fsr1l	equ	0xFE1
  4396                           indf2	equ	0xFDF
  4397                           postinc2	equ	0xFDE
  4398                           postdec2	equ	0xFDD
  4399                           plusw2	equ	0xFDB
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           status	equ	0xFD8
  4403                           
  4404 ;; *************** function _USBDeviceTasks *****************
  4405 ;; Defined at:
  4406 ;;		line 477 in file "picLibs/usb_device.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  i               1   29[COMRAM] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4420 ;;      Params:         0       0       0       0       0
  4421 ;;      Locals:         1       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0
  4423 ;;      Totals:         1       0       0       0       0
  4424 ;;Total ram usage:        1 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    8
  4427 ;; This function calls:
  4428 ;;		_USBCtrlEPAllowStatusStage
  4429 ;;		_USBCtrlEPService
  4430 ;;		_USBIncrement1msInternalTimers
  4431 ;;		_USBStallHandler
  4432 ;;		_USBSuspend
  4433 ;;		_USBWakeFromSuspend
  4434 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4435 ;;		i2_USBDeviceInit
  4436 ;; This function is called by:
  4437 ;;		_SYS_InterruptHigh
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text23
  4442  00069A                     __ptext23:
  4443                           	opt stack 0
  4444  00069A                     _USBDeviceTasks:
  4445                           	opt stack 17
  4446                           
  4447                           ;usb_device.c: 479: uint8_t i;
  4448                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4449                           
  4450                           ;incstack = 0
  4451  00069A  0100               	movlb	0	; () banked
  4452  00069C  0581               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4453  00069E  E107               	bnz	i2l4247
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;usb_device.c: 591: {
  4457                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4458  0006A0  BA64               	btfsc	3940,5,c	;volatile
  4459  0006A2  D005               	goto	i2l4247
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;usb_device.c: 602: {
  4463                           ;usb_device.c: 608: {UIR = 0;};
  4464  0006A4  6A62               	clrf	3938,c	;volatile
  4465                           
  4466                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4467  0006A6  8060               	bsf	3936,0,c	;volatile
  4468                           
  4469                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4470  0006A8  8860               	bsf	3936,4,c	;volatile
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4474  0006AA  0E02               	movlw	2
  4475  0006AC  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4476  0006AE                     i2l4247:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;usb_device.c: 617: }
  4480                           ;usb_device.c: 618: }
  4481                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4482  0006AE  B462               	btfsc	3938,2,c	;volatile
  4483                           
  4484                           ; BSR set to: 0
  4485  0006B0  A460               	btfss	3936,2,c	;volatile
  4486  0006B2  D003               	goto	i2l4255
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;usb_device.c: 635: {
  4490                           ;usb_device.c: 636: (UIR &= 0xFB);
  4491  0006B4  9462               	bcf	3938,2,c	;volatile
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;usb_device.c: 640: USBWakeFromSuspend();
  4495  0006B6  ECBE  F00C         	call	_USBWakeFromSuspend	;wreg free
  4496  0006BA                     i2l4255:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;usb_device.c: 642: }
  4500                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4501  0006BA  A264               	btfss	3940,1,c	;volatile
  4502  0006BC  D002               	goto	i2l399
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;usb_device.c: 648: {
  4506                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  4507  0006BE  94A1               	bcf	4001,2,c	;volatile
  4508                           
  4509                           ;usb_device.c: 650: return;
  4510  0006C0  0012               	return	
  4511  0006C2                     i2l399:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;usb_device.c: 651: }
  4515                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4516  0006C2  B062               	btfsc	3938,0,c	;volatile
  4517                           
  4518                           ; BSR set to: 0
  4519  0006C4  A060               	btfss	3936,0,c	;volatile
  4520  0006C6  D006               	goto	i2l4269
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;usb_device.c: 664: {
  4524                           ;usb_device.c: 665: USBDeviceInit();
  4525  0006C8  ECCD  F003         	call	i2_USBDeviceInit	;wreg free
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4529  0006CC  84A0               	bsf	4000,2,c	;volatile
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4533  0006CE  0E04               	movlw	4
  4534  0006D0  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;usb_device.c: 681: (UIR &= 0xFE);
  4538  0006D2  9062               	bcf	3938,0,c	;volatile
  4539  0006D4                     i2l4269:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;usb_device.c: 682: }
  4543                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4544  0006D4  B862               	btfsc	3938,4,c	;volatile
  4545                           
  4546                           ; BSR set to: 0
  4547  0006D6  A860               	btfss	3936,4,c	;volatile
  4548  0006D8  D002               	goto	i2l4275
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;usb_device.c: 688: {
  4552                           ;usb_device.c: 694: USBSuspend();
  4553  0006DA  ECAD  F00C         	call	_USBSuspend	;wreg free
  4554  0006DE                     i2l4275:
  4555                           
  4556                           ;usb_device.c: 696: }
  4557                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4558  0006DE  AC62               	btfss	3938,6,c	;volatile
  4559  0006E0  D013               	goto	i2l4293
  4560                           
  4561                           ;usb_device.c: 709: {
  4562                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4563  0006E2  AC60               	btfss	3936,6,c	;volatile
  4564  0006E4  D007               	goto	i2l4281
  4565                           
  4566                           ;usb_device.c: 712: {
  4567                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4568  0006E6  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4569  0006E8  0E73               	movlw	115
  4570  0006EA  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4571  0006EC  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4572  0006EE  D850               	call	PL88	;call to abstracted procedure
  4573  0006F0  ECF0  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4574  0006F4                     i2l4281:
  4575                           
  4576                           ;usb_device.c: 714: }
  4577                           ;usb_device.c: 715: (UIR &= 0xBF);
  4578  0006F4  9C62               	bcf	3938,6,c	;volatile
  4579                           
  4580                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4581  0006F6  ECFB  F00C         	call	_USBIncrement1msInternalTimers	;wreg free
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4585  0006FA  5021               	movf	_USBStatusStageTimeoutCounter,w,c
  4586  0006FC  E001               	bz	i2l4289
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;usb_device.c: 736: {
  4590                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4591  0006FE  0621               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  4592  000700                     i2l4289:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;usb_device.c: 738: }
  4596                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4597  000700  5021               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  4598  000702  E102               	bnz	i2l4293
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;usb_device.c: 745: {
  4602                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4603  000704  EC10  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  4604  000708                     i2l4293:
  4605                           
  4606                           ;usb_device.c: 747: }
  4607                           ;usb_device.c: 749: }
  4608                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4609  000708  BA62               	btfsc	3938,5,c	;volatile
  4610  00070A  AA60               	btfss	3936,5,c	;volatile
  4611  00070C  D002               	goto	i2l4299
  4612                           
  4613                           ;usb_device.c: 752: {
  4614                           ;usb_device.c: 753: USBStallHandler();
  4615  00070E  ECF7  F00B         	call	_USBStallHandler	;wreg free
  4616  000712                     i2l4299:
  4617                           
  4618                           ;usb_device.c: 754: }
  4619                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4620  000712  B262               	btfsc	3938,1,c	;volatile
  4621  000714  A260               	btfss	3936,1,c	;volatile
  4622  000716  D009               	goto	i2l4307
  4623                           
  4624                           ;usb_device.c: 757: {
  4625                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4626  000718  0E7F               	movlw	127
  4627  00071A  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4628  00071C  6836               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4629  00071E  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4630  000720  D837               	call	PL88	;call to abstracted procedure
  4631  000722  ECF0  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4632                           
  4633                           ;usb_device.c: 759: {UEIR = 0;};
  4634  000726  010F               	movlb	15	; () banked
  4635  000728  6B5F               	clrf	95,b	;volatile
  4636  00072A                     i2l4307:
  4637                           
  4638                           ;usb_device.c: 767: }
  4639                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4640  00072A  0E04               	movlw	4
  4641  00072C  0100               	movlb	0	; () banked
  4642  00072E  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  4643  000730  D002               	goto	i2l409
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;usb_device.c: 775: {
  4647                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  4648  000732  94A1               	bcf	4001,2,c	;volatile
  4649                           
  4650                           ;usb_device.c: 777: return;
  4651  000734  0C04               	retlw	4
  4652  000736                     i2l409:
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;usb_device.c: 778: }
  4656                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4657  000736  A660               	btfss	3936,3,c	;volatile
  4658  000738  D029               	goto	i2l410
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;usb_device.c: 784: {
  4662                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4663  00073A  6A47               	clrf	USBDeviceTasks@i,c
  4664  00073C                     i2l411:
  4665                           
  4666                           ;usb_device.c: 786: {
  4667                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4668  00073C  A662               	btfss	3938,3,c	;volatile
  4669  00073E  D026               	goto	i2l410
  4670                           
  4671                           ;usb_device.c: 788: {
  4672                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4673  000740  CF63 F028          	movff	3939,_USTATcopy	;volatile
  4674                           
  4675                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4676  000744  3028               	rrcf	_USTATcopy,w,c	;volatile
  4677  000746  32E8               	rrcf	wreg,f,c
  4678  000748  32E8               	rrcf	wreg,f,c
  4679  00074A  0B0F               	andlw	15
  4680  00074C  6E23               	movwf	_endpoint_number,c	;volatile
  4681                           
  4682                           ;usb_device.c: 793: (UIR &= 0xF7);
  4683  00074E  9662               	bcf	3938,3,c	;volatile
  4684                           
  4685                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4686  000750  B428               	btfsc	_USTATcopy,2,c	;volatile
  4687  000752  D003               	goto	i2l4327
  4688                           
  4689                           ;usb_device.c: 799: {
  4690                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4691  000754  5023               	movf	_endpoint_number,w,c
  4692  000756  0F70               	addlw	low _ep_data_out
  4693  000758  D002               	goto	L5
  4694  00075A                     i2l4327:
  4695                           
  4696                           ;usb_device.c: 802: else
  4697                           ;usb_device.c: 803: {
  4698                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4699  00075A  5023               	movf	_endpoint_number,w,c
  4700  00075C  0F73               	addlw	low _ep_data_in
  4701  00075E                     L5:
  4702  00075E  6ED9               	movwf	fsr2l,c
  4703  000760  6ADA               	clrf	fsr2h,c
  4704  000762  0100               	movlb	0	; () banked
  4705  000764  70DF               	btg	indf2,0,c
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;usb_device.c: 805: }
  4709                           ;usb_device.c: 810: if(endpoint_number == 0)
  4710  000766  5023               	movf	_endpoint_number,w,c	;volatile
  4711  000768  E103               	bnz	i2l4333
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;usb_device.c: 811: {
  4715                           ;usb_device.c: 812: USBCtrlEPService();
  4716  00076A  EC49  F009         	call	_USBCtrlEPService	;wreg free
  4717                           
  4718                           ;usb_device.c: 813: }
  4719  00076E  D00A               	goto	i2l4335
  4720  000770                     i2l4333:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;usb_device.c: 814: else
  4724                           ;usb_device.c: 815: {
  4725                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4726  000770  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4727  000772  0E72               	movlw	114
  4728  000774  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4729  000776  0E28               	movlw	low _USTATcopy
  4730  000778  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  4731  00077A  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4732  00077C  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4733  00077E  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4734  000780  ECF0  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4735  000784                     i2l4335:
  4736  000784  2A47               	incf	USBDeviceTasks@i,f,c
  4737  000786  0E03               	movlw	3
  4738  000788  6447               	cpfsgt	USBDeviceTasks@i,c
  4739  00078A  D7D8               	goto	i2l411
  4740  00078C                     i2l410:
  4741                           
  4742                           ;usb_device.c: 822: }
  4743                           ;usb_device.c: 823: }
  4744                           ;usb_device.c: 824: }
  4745                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  4746  00078C  94A1               	bcf	4001,2,c	;volatile
  4747  00078E  0012               	return		;funcret
  4748  000790                     __end_of_USBDeviceTasks:
  4749                           	opt stack 0
  4750  000790                     PL88:
  4751                           	opt stack 17
  4752  000790  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  4753  000792  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  4754  000794  0E01               	movlw	1
  4755  000796  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  4756  000798  0C01               	retlw	1
  4757  00079A                     __end_ofPL88:
  4758                           	opt stack 0
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           prodh	equ	0xFF4
  4764                           prodl	equ	0xFF3
  4765                           intcon	equ	0xFF2
  4766                           postinc0	equ	0xFEE
  4767                           wreg	equ	0xFE8
  4768                           indf1	equ	0xFE7
  4769                           postdec1	equ	0xFE5
  4770                           fsr1h	equ	0xFE2
  4771                           fsr1l	equ	0xFE1
  4772                           indf2	equ	0xFDF
  4773                           postinc2	equ	0xFDE
  4774                           postdec2	equ	0xFDD
  4775                           plusw2	equ	0xFDB
  4776                           fsr2h	equ	0xFDA
  4777                           fsr2l	equ	0xFD9
  4778                           status	equ	0xFD8
  4779                           
  4780 ;; *************** function i2_USBDeviceInit *****************
  4781 ;; Defined at:
  4782 ;;		line 277 in file "picLibs/usb_device.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 3F/0
  4793 ;;		On exit  : 3F/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  4796 ;;      Params:         0       0       0       0       0
  4797 ;;      Locals:         1       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0
  4799 ;;      Totals:         1       0       0       0       0
  4800 ;;Total ram usage:        1 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    1
  4803 ;; This function calls:
  4804 ;;		i2_memset
  4805 ;; This function is called by:
  4806 ;;		_USBDeviceTasks
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text24
  4811  00079A                     __ptext24:
  4812                           	opt stack 0
  4813  00079A                     i2_USBDeviceInit:
  4814                           	opt stack 0
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;usb_device.c: 279: uint8_t i;
  4818                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4819                           
  4820                           ;incstack = 0
  4821                           
  4822                           ;usb_device.c: 285: ;
  4823                           ;usb_device.c: 288: {UEIR = 0;};
  4824                           
  4825                           ;usb_device.c: 291: {UIR = 0;};
  4826                           
  4827                           ;usb_device.c: 294: UEP0 = 0;
  4828  00079A  D85C               	call	PL80	;call to abstracted procedure
  4829                           
  4830                           ; BSR set to: 15
  4831                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  4832  00079C  EC6E  F007         	call	PL54	;call to abstracted procedure
  4833  0007A0  EC98  F00C         	call	i2_memset	;wreg free
  4834                           
  4835                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4836                           
  4837                           ; BSR set to: 15
  4838  0007A4  ECD5  F00B         	call	PL36	;call to abstracted procedure
  4839                           
  4840                           ; BSR set to: 15
  4841                           ;usb_device.c: 301: ;
  4842                           ;usb_device.c: 304: ;
  4843                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4844  0007A8  6A32               	clrf	i2USBDeviceInit@i,c
  4845  0007AA                     i2l4111:
  4846                           
  4847                           ;usb_device.c: 308: {
  4848                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4849  0007AA  5032               	movf	i2USBDeviceInit@i,w,c
  4850  0007AC  D847               	call	PL40	;call to abstracted procedure
  4851  0007AE  2A32               	incf	i2USBDeviceInit@i,f,c
  4852  0007B0  0E0B               	movlw	11
  4853  0007B2  6432               	cpfsgt	i2USBDeviceInit@i,c
  4854  0007B4  D7FA               	goto	i2l4111
  4855                           
  4856                           ;usb_device.c: 310: }
  4857                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4858                           
  4859                           ;usb_device.c: 316: UADDR = 0x00;
  4860                           
  4861                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4862                           
  4863                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4864                           
  4865                           ;usb_device.c: 326: {
  4866                           ;usb_device.c: 327: (UIR &= 0xF7);
  4867                           
  4868                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4869                           
  4870                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4871                           
  4872                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4873                           
  4874                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4875                           
  4876                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4877                           
  4878                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4879                           
  4880                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4881                           
  4882                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4886  0007B6  D82E               	call	PL20	;call to abstracted procedure
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4890  0007B8  6A32               	clrf	i2USBDeviceInit@i,c
  4891  0007BA                     i2l4141:
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;usb_device.c: 346: {
  4895                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4896  0007BA  5032               	movf	i2USBDeviceInit@i,w,c
  4897  0007BC  ECB3  F005         	call	PL32	;call to abstracted procedure
  4898  0007C0  6ADE               	clrf	postinc2,c
  4899  0007C2  6ADD               	clrf	postdec2,c
  4900                           
  4901                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4902  0007C4  5032               	movf	i2USBDeviceInit@i,w,c
  4903  0007C6  ECAD  F005         	call	PL28	;call to abstracted procedure
  4904  0007CA  6ADE               	clrf	postinc2,c
  4905  0007CC  6ADD               	clrf	postdec2,c
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4909  0007CE  5032               	movf	i2USBDeviceInit@i,w,c
  4910  0007D0  D847               	call	PL90	;call to abstracted procedure
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4914  0007D2  5032               	movf	i2USBDeviceInit@i,w,c
  4915  0007D4  D84A               	call	PL96	;call to abstracted procedure
  4916                           
  4917                           ; BSR set to: 0
  4918  0007D6  2A32               	incf	i2USBDeviceInit@i,f,c
  4919                           
  4920                           ; BSR set to: 0
  4921  0007D8  0E02               	movlw	2
  4922  0007DA  6432               	cpfsgt	i2USBDeviceInit@i,c
  4923  0007DC  D7EE               	goto	i2l4141
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;usb_device.c: 351: }
  4927                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4928  0007DE  0E08               	movlw	8
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4932                           
  4933                           ; BSR set to: 15
  4934                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  4935                           
  4936                           ; BSR set to: 2
  4937                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4938                           
  4939                           ; BSR set to: 2
  4940                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4941                           
  4942                           ; BSR set to: 2
  4943                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4944                           
  4945                           ; BSR set to: 2
  4946                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4947                           
  4948                           ; BSR set to: 2
  4949                           ;usb_device.c: 366: USB1msTickCount = 0;
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4956                           
  4957                           ; BSR set to: 0
  4958  0007E0  D000               	goto	PL14	;call to abstracted procedure
  4959  0007E2                     __end_ofi2_USBDeviceInit:
  4960                           	opt stack 0
  4961  0007E2                     PL14:
  4962                           	opt stack 19
  4963  0007E2  6E0F               	movwf	_pBDTEntryIn,c
  4964  0007E4  0E02               	movlw	2
  4965  0007E6  6E10               	movwf	_pBDTEntryIn+1,c
  4966  0007E8  0E16               	movlw	22
  4967  0007EA  010F               	movlb	15	; () banked
  4968  0007EC  6F53               	movwf	83,b	;volatile
  4969  0007EE  0E02               	movlw	2
  4970  0007F0  0102               	movlb	2	; () banked
  4971  0007F2  6F03               	movwf	3,b	;volatile
  4972  0007F4  0E30               	movlw	48
  4973  0007F6  6F02               	movwf	2,b	;volatile
  4974  0007F8  0E08               	movlw	8
  4975  0007FA  6F01               	movwf	1,b	;volatile
  4976  0007FC  0E04               	movlw	4
  4977  0007FE  6F00               	movwf	0,b	;volatile
  4978  000800  8F00               	bsf	0,7,b	;volatile
  4979  000802  6A29               	clrf	_USBActiveConfiguration,c	;volatile
  4980  000804  0100               	movlb	0	; () banked
  4981  000806  6B66               	clrf	_USB1msTickCount& (0+255),b	;volatile
  4982  000808  6B67               	clrf	(_USB1msTickCount+1)& (0+255),b	;volatile
  4983  00080A  6B68               	clrf	(_USB1msTickCount+2)& (0+255),b	;volatile
  4984  00080C  6B69               	clrf	(_USB1msTickCount+3)& (0+255),b	;volatile
  4985  00080E  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  4986  000810  6B81               	clrf	_USBDeviceState& (0+255),b	;volatile
  4987  000812  0012               	return		;funcret
  4988  000814                     __end_ofPL14:
  4989                           	opt stack 0
  4990  000814                     PL20:
  4991                           	opt stack 19
  4992  000814  8C64               	bsf	3940,6,c	;volatile
  4993  000816  010F               	movlb	15	; () banked
  4994  000818  6B5C               	clrf	92,b	;volatile
  4995  00081A  9864               	bcf	3940,4,c	;volatile
  4996  00081C  9C64               	bcf	3940,6,c	;volatile
  4997  00081E                     l4933:
  4998  00081E  9662               	bcf	3938,3,c	;volatile
  4999  000820  6A0C               	clrf	_inPipes+3,c	;volatile
  5000  000822  6A04               	clrf	_outPipes+3,c	;volatile
  5001  000824  6A05               	clrf	_outPipes+4,c	;volatile
  5002  000826  6A06               	clrf	_outPipes+5,c	;volatile
  5003  000828  B662               	btfsc	3938,3,c	;volatile
  5004  00082A  D7F9               	goto	l4933
  5005  00082C  0E01               	movlw	1
  5006  00082E  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5007  000830  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5008  000832  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5009  000834  0100               	movlb	0	; () banked
  5010  000836  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5011  000838  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5012  00083A  0012               	return	
  5013  00083C                     __end_ofPL20:
  5014                           	opt stack 0
  5015  00083C                     PL40:
  5016                           	opt stack 19
  5017  00083C  0D04               	mullw	4
  5018  00083E  0E00               	movlw	0
  5019  000840  24F3               	addwf	prodl,w,c
  5020  000842  6ED9               	movwf	fsr2l,c
  5021  000844  0E02               	movlw	2
  5022  000846  20F4               	addwfc	prodh,w,c
  5023  000848  6EDA               	movwf	fsr2h,c
  5024  00084A  6ADE               	clrf	postinc2,c
  5025  00084C  6ADE               	clrf	postinc2,c
  5026  00084E  6ADE               	clrf	postinc2,c
  5027  000850  6ADD               	clrf	postdec2,c
  5028  000852  0012               	return	
  5029  000854                     __end_ofPL40:
  5030                           	opt stack 0
  5031  000854                     PL80:
  5032                           	opt stack 19
  5033  000854  94A0               	bcf	4000,2,c	;volatile
  5034  000856  010F               	movlb	15	; () banked
  5035  000858  6B5F               	clrf	95,b	;volatile
  5036  00085A  6A62               	clrf	3938,c	;volatile
  5037  00085C  6B53               	clrf	83,b	;volatile
  5038  00085E  0012               	return	
  5039  000860                     __end_ofPL80:
  5040                           	opt stack 0
  5041  000860                     PL90:
  5042                           	opt stack 19
  5043  000860  0F73               	addlw	low _ep_data_in
  5044  000862  6ED9               	movwf	fsr2l,c
  5045  000864  6ADA               	clrf	fsr2h,c
  5046  000866  6ADF               	clrf	indf2,c
  5047  000868  0012               	return	
  5048  00086A                     __end_ofPL90:
  5049                           	opt stack 0
  5050  00086A                     PL96:
  5051                           	opt stack 19
  5052  00086A  0F70               	addlw	low _ep_data_out
  5053  00086C  6ED9               	movwf	fsr2l,c
  5054  00086E  6ADA               	clrf	fsr2h,c
  5055  000870  6ADF               	clrf	indf2,c
  5056  000872  0012               	return	
  5057  000874                     __end_ofPL96:
  5058                           	opt stack 0
  5059                           tblptru	equ	0xFF8
  5060                           tblptrh	equ	0xFF7
  5061                           tblptrl	equ	0xFF6
  5062                           tablat	equ	0xFF5
  5063                           prodh	equ	0xFF4
  5064                           prodl	equ	0xFF3
  5065                           intcon	equ	0xFF2
  5066                           postinc0	equ	0xFEE
  5067                           wreg	equ	0xFE8
  5068                           indf1	equ	0xFE7
  5069                           postdec1	equ	0xFE5
  5070                           fsr1h	equ	0xFE2
  5071                           fsr1l	equ	0xFE1
  5072                           indf2	equ	0xFDF
  5073                           postinc2	equ	0xFDE
  5074                           postdec2	equ	0xFDD
  5075                           plusw2	equ	0xFDB
  5076                           fsr2h	equ	0xFDA
  5077                           fsr2l	equ	0xFD9
  5078                           status	equ	0xFD8
  5079                           
  5080 ;; *************** function _USBWakeFromSuspend *****************
  5081 ;; Defined at:
  5082 ;;		line 2303 in file "picLibs/usb_device.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 3F/0
  5093 ;;		On exit  : 3F/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5096 ;;      Params:         0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0
  5099 ;;      Totals:         0       0       0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    4
  5103 ;; This function calls:
  5104 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5105 ;; This function is called by:
  5106 ;;		_USBDeviceTasks
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text25
  5111  00197C                     __ptext25:
  5112                           	opt stack 0
  5113  00197C                     _USBWakeFromSuspend:
  5114                           	opt stack 20
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;incstack = 0
  5121  00197C  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5125  00197E  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5126  001980  0E74               	movlw	116
  5127  001982  ECB8  F00C         	call	PL46	;call to abstracted procedure
  5128  001986  ECF0  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5129                           
  5130                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5131  00198A  9264               	bcf	3940,1,c	;volatile
  5132                           
  5133                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5134  00198C  9460               	bcf	3936,2,c	;volatile
  5135                           
  5136                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5137  00198E  D001               	goto	i2l4037
  5138  001990                     i2l4035:
  5139                           
  5140                           ;usb_device.c: 2343: {
  5141                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5142  001990  9462               	bcf	3938,2,c	;volatile
  5143  001992                     i2l4037:
  5144  001992  B462               	btfsc	3938,2,c	;volatile
  5145  001994  D7FD               	goto	i2l4035
  5146                           
  5147                           ;usb_device.c: 2345: }
  5148                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5149  001996  0100               	movlb	0	; () banked
  5150  001998  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5151                           
  5152                           ; BSR set to: 0
  5153  00199A  0012               	return		;funcret
  5154  00199C                     __end_of_USBWakeFromSuspend:
  5155                           	opt stack 0
  5156                           tblptru	equ	0xFF8
  5157                           tblptrh	equ	0xFF7
  5158                           tblptrl	equ	0xFF6
  5159                           tablat	equ	0xFF5
  5160                           prodh	equ	0xFF4
  5161                           prodl	equ	0xFF3
  5162                           intcon	equ	0xFF2
  5163                           postinc0	equ	0xFEE
  5164                           wreg	equ	0xFE8
  5165                           indf1	equ	0xFE7
  5166                           postdec1	equ	0xFE5
  5167                           fsr1h	equ	0xFE2
  5168                           fsr1l	equ	0xFE1
  5169                           indf2	equ	0xFDF
  5170                           postinc2	equ	0xFDE
  5171                           postdec2	equ	0xFDD
  5172                           plusw2	equ	0xFDB
  5173                           fsr2h	equ	0xFDA
  5174                           fsr2l	equ	0xFD9
  5175                           status	equ	0xFD8
  5176                           
  5177 ;; *************** function _USBSuspend *****************
  5178 ;; Defined at:
  5179 ;;		line 2245 in file "picLibs/usb_device.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 3F/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5193 ;;      Params:         0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0
  5196 ;;      Totals:         0       0       0       0       0
  5197 ;;Total ram usage:        0 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    4
  5200 ;; This function calls:
  5201 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5202 ;; This function is called by:
  5203 ;;		_USBDeviceTasks
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text26
  5208  00195A                     __ptext26:
  5209                           	opt stack 0
  5210  00195A                     _USBSuspend:
  5211                           	opt stack 20
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;incstack = 0
  5218  00195A  8460               	bsf	3936,2,c	;volatile
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5222  00195C  9862               	bcf	3938,4,c	;volatile
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5226  00195E  8264               	bsf	3940,1,c	;volatile
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5230  001960  0E01               	movlw	1
  5231  001962  6E24               	movwf	_USBBusIsSuspended,c	;volatile
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5235  001964  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5239  001966  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5240  001968  0E75               	movlw	117
  5241  00196A  D802               	call	PL46	;call to abstracted procedure
  5242  00196C  EFF0  F009         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5243  001970                     __end_of_USBSuspend:
  5244                           	opt stack 0
  5245  001970                     PL46:
  5246                           	opt stack 20
  5247  001970  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5248  001972  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5249  001974  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5250  001976  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5251  001978  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5252  00197A  0012               	return	
  5253  00197C                     __end_ofPL46:
  5254                           	opt stack 0
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           intcon	equ	0xFF2
  5262                           postinc0	equ	0xFEE
  5263                           wreg	equ	0xFE8
  5264                           indf1	equ	0xFE7
  5265                           postdec1	equ	0xFE5
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           indf2	equ	0xFDF
  5269                           postinc2	equ	0xFDE
  5270                           postdec2	equ	0xFDD
  5271                           plusw2	equ	0xFDB
  5272                           fsr2h	equ	0xFDA
  5273                           fsr2l	equ	0xFD9
  5274                           status	equ	0xFD8
  5275                           
  5276 ;; *************** function _USBStallHandler *****************
  5277 ;; Defined at:
  5278 ;;		line 2202 in file "picLibs/usb_device.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 3F/F
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5292 ;;      Params:         0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0
  5294 ;;      Temps:          1       0       0       0       0
  5295 ;;      Totals:         1       0       0       0       0
  5296 ;;Total ram usage:        1 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_USBDeviceTasks
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text27
  5306  0017EE                     __ptext27:
  5307                           	opt stack 0
  5308  0017EE                     _USBStallHandler:
  5309                           	opt stack 24
  5310                           
  5311                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5312                           
  5313                           ;incstack = 0
  5314  0017EE  010F               	movlb	15	; () banked
  5315  0017F0  A153               	btfss	83,0,b	;volatile
  5316  0017F2  D010               	goto	i2l549
  5317                           
  5318                           ; BSR set to: 15
  5319                           ;usb_device.c: 2215: {
  5320                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5321  0017F4  D811               	call	PL34	;call to abstracted procedure
  5322  0017F6  0E80               	movlw	128
  5323  0017F8  18DE               	xorwf	postinc2,w,c
  5324  0017FA  E10B               	bnz	i2l4071
  5325                           
  5326                           ; BSR set to: 15
  5327  0017FC  EC48  F008         	call	PL16	;call to abstracted procedure
  5328  001800  0E84               	movlw	132
  5329  001802  18DE               	xorwf	postinc2,w,c
  5330  001804  E106               	bnz	i2l4071
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;usb_device.c: 2218: {
  5334                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5335  001806  D808               	call	PL34	;call to abstracted procedure
  5336  001808  0E0C               	movlw	12
  5337  00180A  6EDF               	movwf	indf2,c
  5338                           
  5339                           ; BSR set to: 15
  5340                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5341  00180C  D805               	call	PL34	;call to abstracted procedure
  5342  00180E  0E00               	movlw	0
  5343  001810  8EDB               	bsf	plusw2,7,c
  5344  001812                     i2l4071:
  5345                           
  5346                           ; BSR set to: 15
  5347                           ;usb_device.c: 2222: }
  5348                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5349  001812  9153               	bcf	83,0,b	;volatile
  5350  001814                     i2l549:
  5351                           
  5352                           ; BSR set to: 15
  5353                           ;usb_device.c: 2224: }
  5354                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5355  001814  9A62               	bcf	3938,5,c	;volatile
  5356                           
  5357                           ; BSR set to: 15
  5358  001816  0012               	return		;funcret
  5359  001818                     __end_of_USBStallHandler:
  5360                           	opt stack 0
  5361  001818                     PL34:
  5362                           	opt stack 24
  5363  001818  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5364  00181C  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5365  001820  0012               	return	
  5366  001822                     __end_ofPL34:
  5367                           	opt stack 0
  5368                           tblptru	equ	0xFF8
  5369                           tblptrh	equ	0xFF7
  5370                           tblptrl	equ	0xFF6
  5371                           tablat	equ	0xFF5
  5372                           prodh	equ	0xFF4
  5373                           prodl	equ	0xFF3
  5374                           intcon	equ	0xFF2
  5375                           postinc0	equ	0xFEE
  5376                           wreg	equ	0xFE8
  5377                           indf1	equ	0xFE7
  5378                           postdec1	equ	0xFE5
  5379                           fsr1h	equ	0xFE2
  5380                           fsr1l	equ	0xFE1
  5381                           indf2	equ	0xFDF
  5382                           postinc2	equ	0xFDE
  5383                           postdec2	equ	0xFDD
  5384                           plusw2	equ	0xFDB
  5385                           fsr2h	equ	0xFDA
  5386                           fsr2l	equ	0xFD9
  5387                           status	equ	0xFD8
  5388                           
  5389 ;; *************** function _USBIncrement1msInternalTimers *****************
  5390 ;; Defined at:
  5391 ;;		line 3025 in file "picLibs/usb_device.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 3F/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5405 ;;      Params:         0       0       0       0       0
  5406 ;;      Locals:         0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0
  5408 ;;      Totals:         0       0       0       0       0
  5409 ;;Total ram usage:        0 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_USBDeviceTasks
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text28
  5419  0019F6                     __ptext28:
  5420                           	opt stack 0
  5421  0019F6                     _USBIncrement1msInternalTimers:
  5422                           	opt stack 24
  5423                           
  5424                           ;usb_device.c: 3033: USB1msTickCount++;
  5425                           
  5426                           ; BSR set to: 15
  5427                           ;incstack = 0
  5428  0019F6  0100               	movlb	0	; () banked
  5429  0019F8  2B66               	incf	_USB1msTickCount& (0+255),f,b	;volatile
  5430  0019FA  0E00               	movlw	0
  5431  0019FC  2367               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  5432  0019FE  2368               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  5433  001A00  2369               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5437  001A02  5024               	movf	_USBBusIsSuspended,w,c	;volatile
  5438  001A04  A4D8               	btfss	status,2,c
  5439  001A06  0012               	return	
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;usb_device.c: 3035: {
  5443                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5444  001A08  2B7D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5448  001A0A  517D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  5449  001A0C  B4D8               	btfsc	status,2,c
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;usb_device.c: 3039: {
  5453                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5454  001A0E  697D               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5455                           
  5456                           ; BSR set to: 0
  5457  001A10  0012               	return		;funcret
  5458  001A12                     __end_of_USBIncrement1msInternalTimers:
  5459                           	opt stack 0
  5460                           tblptru	equ	0xFF8
  5461                           tblptrh	equ	0xFF7
  5462                           tblptrl	equ	0xFF6
  5463                           tablat	equ	0xFF5
  5464                           prodh	equ	0xFF4
  5465                           prodl	equ	0xFF3
  5466                           intcon	equ	0xFF2
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           indf1	equ	0xFE7
  5470                           postdec1	equ	0xFE5
  5471                           fsr1h	equ	0xFE2
  5472                           fsr1l	equ	0xFE1
  5473                           indf2	equ	0xFDF
  5474                           postinc2	equ	0xFDE
  5475                           postdec2	equ	0xFDD
  5476                           plusw2	equ	0xFDB
  5477                           fsr2h	equ	0xFDA
  5478                           fsr2l	equ	0xFD9
  5479                           status	equ	0xFD8
  5480                           
  5481 ;; *************** function _USBCtrlEPService *****************
  5482 ;; Defined at:
  5483 ;;		line 2372 in file "picLibs/usb_device.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;		None
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  1    wreg      void 
  5490 ;; Registers used:
  5491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5492 ;; Tracked objects:
  5493 ;;		On entry : 3F/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5497 ;;      Params:         0       0       0       0       0
  5498 ;;      Locals:         0       0       0       0       0
  5499 ;;      Temps:          1       0       0       0       0
  5500 ;;      Totals:         1       0       0       0       0
  5501 ;;Total ram usage:        1 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    7
  5504 ;; This function calls:
  5505 ;;		_USBCtrlTrfInHandler
  5506 ;;		_USBCtrlTrfOutHandler
  5507 ;;		_USBCtrlTrfSetupHandler
  5508 ;;		_memcpy
  5509 ;; This function is called by:
  5510 ;;		_USBDeviceTasks
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text29
  5515  001292                     __ptext29:
  5516                           	opt stack 0
  5517  001292                     _USBCtrlEPService:
  5518                           	opt stack 17
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;incstack = 0
  5525  001292  0E2D               	movlw	45
  5526  001294  6E21               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5530  001296  C028  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5531  00129A  0EFD               	movlw	253
  5532  00129C  1646               	andwf	??_USBCtrlEPService,f,c
  5533  00129E  E12A               	bnz	i2l4091
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;usb_device.c: 2383: {
  5537                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5538  0012A0  90D8               	bcf	status,0,c
  5539  0012A2  3028               	rrcf	_USTATcopy,w,c	;volatile
  5540  0012A4  0B3F               	andlw	63
  5541  0012A6  0D04               	mullw	4
  5542  0012A8  0E00               	movlw	0
  5543  0012AA  24F3               	addwf	prodl,w,c
  5544  0012AC  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  5545  0012AE  0E02               	movlw	2
  5546  0012B0  20F4               	addwfc	prodh,w,c
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5550  0012B2  EC78  F007         	call	PL100	;call to abstracted procedure
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5554  0012B6  0E04               	movlw	4
  5555  0012B8  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
  5556  0012BA  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5560  0012BC  EC0C  F00C         	call	PL34	;call to abstracted procedure
  5561  0012C0  30DF               	rrcf	indf2,w,c
  5562  0012C2  32E8               	rrcf	wreg,f,c
  5563  0012C4  0B0F               	andlw	15
  5564  0012C6  0A0D               	xorlw	13
  5565  0012C8  E002 EFCE  F00C    	bnz	_USBCtrlTrfOutHandler
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;usb_device.c: 2400: {
  5569                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  5570  0012CE  0E30               	movlw	48
  5571  0012D0  6E2A               	movwf	memcpy@d1,c
  5572  0012D2  0E02               	movlw	2
  5573  0012D4  6E2B               	movwf	memcpy@d1+1,c
  5574  0012D6  EE20 F002          	lfsr	2,2
  5575  0012DA  EC44  F009         	call	PL74	;call to abstracted procedure
  5576  0012DE  CFDE F02C          	movff	postinc2,memcpy@s1
  5577  0012E2  CFDD F02D          	movff	postdec2,memcpy@s1+1
  5578  0012E6  6A2F               	clrf	memcpy@n+1,c
  5579  0012E8  0E08               	movlw	8
  5580  0012EA  6E2E               	movwf	memcpy@n,c
  5581  0012EC  EC69  F00B         	call	_memcpy	;wreg free
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5585  0012F0  EFD8  F00A         	goto	_USBCtrlTrfSetupHandler	;wreg free
  5586  0012F4                     i2l4091:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5590  0012F4  5028               	movf	_USTATcopy,w,c	;volatile
  5591  0012F6  0BFD               	andlw	253
  5592  0012F8  0A04               	xorlw	4
  5593  0012FA  B4D8               	btfsc	status,2,c
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;usb_device.c: 2417: {
  5597                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5598  0012FC  EC12  F008         	call	_USBCtrlTrfInHandler	;wreg free
  5599  001300  0012               	return		;funcret
  5600  001302                     __end_of_USBCtrlEPService:
  5601                           	opt stack 0
  5602                           tblptru	equ	0xFF8
  5603                           tblptrh	equ	0xFF7
  5604                           tblptrl	equ	0xFF6
  5605                           tablat	equ	0xFF5
  5606                           prodh	equ	0xFF4
  5607                           prodl	equ	0xFF3
  5608                           intcon	equ	0xFF2
  5609                           postinc0	equ	0xFEE
  5610                           wreg	equ	0xFE8
  5611                           indf1	equ	0xFE7
  5612                           postdec1	equ	0xFE5
  5613                           fsr1h	equ	0xFE2
  5614                           fsr1l	equ	0xFE1
  5615                           indf2	equ	0xFDF
  5616                           postinc2	equ	0xFDE
  5617                           postdec2	equ	0xFDD
  5618                           plusw2	equ	0xFDB
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _memcpy *****************
  5624 ;; Defined at:
  5625 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  d1              2    0[COMRAM] PTR void 
  5628 ;;		 -> SetupPkt(8), 
  5629 ;;  s1              2    2[COMRAM] PTR const void 
  5630 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5631 ;;  n               2    4[COMRAM] unsigned int 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5634 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  5635 ;;  d               2    6[COMRAM] PTR unsigned char 
  5636 ;;		 -> SetupPkt(8), 
  5637 ;;  tmp             1   10[COMRAM] unsigned char 
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  2    0[COMRAM] PTR void 
  5640 ;; Registers used:
  5641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5642 ;; Tracked objects:
  5643 ;;		On entry : 3F/0
  5644 ;;		On exit  : 3F/0
  5645 ;;		Unchanged: 3F/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5647 ;;      Params:         6       0       0       0       0
  5648 ;;      Locals:         5       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0
  5650 ;;      Totals:        11       0       0       0       0
  5651 ;;Total ram usage:       11 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_USBCtrlEPService
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text30
  5661  0016D2                     __ptext30:
  5662                           	opt stack 0
  5663  0016D2                     _memcpy:
  5664                           	opt stack 23
  5665                           
  5666                           ; BSR set to: 0
  5667                           
  5668                           ;incstack = 0
  5669  0016D2  C02C  F032         	movff	memcpy@s1,memcpy@s
  5670  0016D6  C02D  F033         	movff	memcpy@s1+1,memcpy@s+1
  5671  0016DA  C02A  F030         	movff	memcpy@d1,memcpy@d
  5672  0016DE  C02B  F031         	movff	memcpy@d1+1,memcpy@d+1
  5673  0016E2  D010               	goto	i2l3685
  5674  0016E4                     i2l3677:
  5675                           
  5676                           ; BSR set to: 0
  5677  0016E4  C032  FFD9         	movff	memcpy@s,fsr2l
  5678  0016E8  C033  FFDA         	movff	memcpy@s+1,fsr2h
  5679  0016EC  50DF               	movf	indf2,w,c
  5680  0016EE  6E34               	movwf	memcpy@tmp,c
  5681                           
  5682                           ; BSR set to: 0
  5683  0016F0  4A32               	infsnz	memcpy@s,f,c
  5684  0016F2  2A33               	incf	memcpy@s+1,f,c
  5685                           
  5686                           ; BSR set to: 0
  5687  0016F4  C030  FFD9         	movff	memcpy@d,fsr2l
  5688  0016F8  C031  FFDA         	movff	memcpy@d+1,fsr2h
  5689  0016FC  C034  FFDF         	movff	memcpy@tmp,indf2
  5690                           
  5691                           ; BSR set to: 0
  5692  001700  4A30               	infsnz	memcpy@d,f,c
  5693  001702  2A31               	incf	memcpy@d+1,f,c
  5694  001704                     i2l3685:
  5695                           
  5696                           ; BSR set to: 0
  5697  001704  062E               	decf	memcpy@n,f,c
  5698  001706  A0D8               	btfss	status,0,c
  5699  001708  062F               	decf	memcpy@n+1,f,c
  5700  00170A  282E               	incf	memcpy@n,w,c
  5701  00170C  E1EB               	bnz	i2l3677
  5702  00170E  282F               	incf	memcpy@n+1,w,c
  5703  001710  E1E9               	bnz	i2l3677
  5704                           
  5705                           ; BSR set to: 0
  5706  001712  0012               	return		;funcret
  5707  001714                     __end_of_memcpy:
  5708                           	opt stack 0
  5709                           tblptru	equ	0xFF8
  5710                           tblptrh	equ	0xFF7
  5711                           tblptrl	equ	0xFF6
  5712                           tablat	equ	0xFF5
  5713                           prodh	equ	0xFF4
  5714                           prodl	equ	0xFF3
  5715                           intcon	equ	0xFF2
  5716                           postinc0	equ	0xFEE
  5717                           wreg	equ	0xFE8
  5718                           indf1	equ	0xFE7
  5719                           postdec1	equ	0xFE5
  5720                           fsr1h	equ	0xFE2
  5721                           fsr1l	equ	0xFE1
  5722                           indf2	equ	0xFDF
  5723                           postinc2	equ	0xFDE
  5724                           postdec2	equ	0xFDD
  5725                           plusw2	equ	0xFDB
  5726                           fsr2h	equ	0xFDA
  5727                           fsr2l	equ	0xFD9
  5728                           status	equ	0xFD8
  5729                           
  5730 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5731 ;; Defined at:
  5732 ;;		line 2465 in file "picLibs/usb_device.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 3F/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5746 ;;      Params:         0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0
  5749 ;;      Totals:         0       0       0       0       0
  5750 ;;Total ram usage:        0 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:    6
  5753 ;; This function calls:
  5754 ;;		_USBCheckStdRequest
  5755 ;;		_USBCtrlEPServiceComplete
  5756 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5757 ;; This function is called by:
  5758 ;;		_USBCtrlEPService
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text31
  5763  0015B0                     __ptext31:
  5764                           	opt stack 0
  5765  0015B0                     _USBCtrlTrfSetupHandler:
  5766                           	opt stack 17
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;incstack = 0
  5773  0015B0  6A27               	clrf	_shortPacketStatus,c	;volatile
  5774                           
  5775                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5776  0015B2  6A20               	clrf	_USBDeferStatusStagePacket,c	;volatile
  5777                           
  5778                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5779  0015B4  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5780                           
  5781                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5782  0015B6  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5783                           
  5784                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5785  0015B8  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  5786                           
  5787                           ;usb_device.c: 2475: controlTransferState = 0;
  5788  0015BA  6A26               	clrf	_controlTransferState,c	;volatile
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5792  0015BC  EC48  F008         	call	PL16	;call to abstracted procedure
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5796  0015C0  D817               	call	PL98	;call to abstracted procedure
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5800  0015C2  EC48  F008         	call	PL16	;call to abstracted procedure
  5801                           
  5802                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5803  0015C6  D814               	call	PL98	;call to abstracted procedure
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5807  0015C8  EC58  F005         	call	PL18	;call to abstracted procedure
  5808  0015CC  0E7F               	movlw	127
  5809  0015CE  16DF               	andwf	indf2,f,c
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5813  0015D0  6A0C               	clrf	_inPipes+3,c	;volatile
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5817  0015D2  6A0D               	clrf	_inPipes+4,c	;volatile
  5818  0015D4  6A0E               	clrf	_inPipes+5,c	;volatile
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5822  0015D6  6A04               	clrf	_outPipes+3,c	;volatile
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5826  0015D8  6A05               	clrf	_outPipes+4,c	;volatile
  5827  0015DA  6A06               	clrf	_outPipes+5,c	;volatile
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;usb_device.c: 2500: USBCheckStdRequest();
  5831  0015DC  ECCA  F007         	call	_USBCheckStdRequest	;wreg free
  5832                           
  5833                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5834  0015E0  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5835  0015E2  0E03               	movlw	3
  5836  0015E4  ECB8  F00C         	call	PL46	;call to abstracted procedure
  5837  0015E8  ECF0  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5838                           
  5839                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5840  0015EC  EF7E  F007         	goto	_USBCtrlEPServiceComplete	;wreg free
  5841  0015F0                     __end_of_USBCtrlTrfSetupHandler:
  5842                           	opt stack 0
  5843  0015F0                     PL98:
  5844                           	opt stack 17
  5845  0015F0  0E7F               	movlw	127
  5846  0015F2  16DF               	andwf	indf2,f,c
  5847  0015F4  0E04               	movlw	4
  5848  0015F6  1A0F               	xorwf	_pBDTEntryIn,f,c
  5849  0015F8  5010               	movf	_pBDTEntryIn+1,w,c
  5850  0015FA  0012               	return	
  5851  0015FC                     __end_ofPL98:
  5852                           	opt stack 0
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           prodh	equ	0xFF4
  5858                           prodl	equ	0xFF3
  5859                           intcon	equ	0xFF2
  5860                           postinc0	equ	0xFEE
  5861                           wreg	equ	0xFE8
  5862                           indf1	equ	0xFE7
  5863                           postdec1	equ	0xFE5
  5864                           fsr1h	equ	0xFE2
  5865                           fsr1l	equ	0xFE1
  5866                           indf2	equ	0xFDF
  5867                           postinc2	equ	0xFDE
  5868                           postdec2	equ	0xFDD
  5869                           plusw2	equ	0xFDB
  5870                           fsr2h	equ	0xFDA
  5871                           fsr2l	equ	0xFD9
  5872                           status	equ	0xFD8
  5873                           
  5874 ;; *************** function _USBCtrlEPServiceComplete *****************
  5875 ;; Defined at:
  5876 ;;		line 1616 in file "picLibs/usb_device.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  5890 ;;      Params:         0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0
  5893 ;;      Totals:         0       0       0       0       0
  5894 ;;Total ram usage:        0 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:    2
  5897 ;; This function calls:
  5898 ;;		_USBCtrlEPAllowDataStage
  5899 ;;		_USBCtrlEPAllowStatusStage
  5900 ;; This function is called by:
  5901 ;;		_USBCtrlTrfSetupHandler
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text32
  5906  000EFC                     __ptext32:
  5907                           	opt stack 0
  5908  000EFC                     _USBCtrlEPServiceComplete:
  5909                           	opt stack 20
  5910                           
  5911                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5912                           
  5913                           ;incstack = 0
  5914  000EFC  9864               	bcf	3940,4,c	;volatile
  5915                           
  5916                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5917  000EFE  BE0C               	btfsc	_inPipes+3,7,c	;volatile
  5918  000F00  D015               	goto	i2l473
  5919                           
  5920                           ;usb_device.c: 1629: {
  5921                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5922  000F02  AE04               	btfss	_outPipes+3,7,c	;volatile
  5923  000F04  D00A               	goto	i2l3485
  5924                           
  5925                           ;usb_device.c: 1631: {
  5926                           ;usb_device.c: 1632: controlTransferState = 2;
  5927  000F06  0E02               	movlw	2
  5928  000F08  6E26               	movwf	_controlTransferState,c	;volatile
  5929                           
  5930                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5931  000F0A  0100               	movlb	0	; () banked
  5932  000F0C  517E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  5933  000F0E  E102               	bnz	i2l3481
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;usb_device.c: 1644: {
  5937                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5938  000F10  EC84  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  5939  000F14                     i2l3481:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;usb_device.c: 1646: }
  5943                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5944  000F14  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5948  000F16  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  5949                           
  5950                           ;usb_device.c: 1652: }
  5951  000F18  0012               	return	
  5952  000F1A                     i2l3485:
  5953                           
  5954                           ;usb_device.c: 1653: else
  5955                           ;usb_device.c: 1654: {
  5956                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5957                           
  5958                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5959                           
  5960                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5961  000F1A  D825               	call	PL2	;call to abstracted procedure
  5962  000F1C  0E0C               	movlw	12
  5963                           
  5964                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5965  000F1E  EC50  F005         	call	PL10	;call to abstracted procedure
  5966                           
  5967                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5968  000F22  EC48  F008         	call	PL16	;call to abstracted procedure
  5969  000F26  0E04               	movlw	4
  5970                           
  5971                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5972  000F28  EF40  F008         	goto	PL8	;call to abstracted procedure
  5973  000F2C                     i2l473:
  5974                           
  5975                           ;usb_device.c: 1667: else
  5976                           ;usb_device.c: 1668: {
  5977                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5978  000F2C  0102               	movlb	2	; () banked
  5979  000F2E  AF30               	btfss	48,7,b	;volatile
  5980  000F30  D00D               	goto	i2l3505
  5981                           
  5982                           ; BSR set to: 2
  5983                           ;usb_device.c: 1670: {
  5984                           ;usb_device.c: 1671: controlTransferState = 1;
  5985  000F32  0E01               	movlw	1
  5986  000F34  6E26               	movwf	_controlTransferState,c	;volatile
  5987                           
  5988                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5989  000F36  501D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  5990  000F38  E102               	bnz	i2l3497
  5991                           
  5992                           ; BSR set to: 2
  5993                           ;usb_device.c: 1686: {
  5994                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5995  000F3A  EC84  F00A         	call	_USBCtrlEPAllowDataStage	;wreg free
  5996  000F3E                     i2l3497:
  5997                           
  5998                           ;usb_device.c: 1688: }
  5999                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6000  000F3E  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6001                           
  6002                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6003  000F40  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6004                           
  6005                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6006  000F42  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6007  000F44  A4D8               	btfss	status,2,c
  6008  000F46  0012               	return	
  6009                           
  6010                           ;usb_device.c: 1713: {
  6011                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6012  000F48  EF10  F009         	goto	_USBCtrlEPAllowStatusStage	;wreg free
  6013  000F4C                     i2l3505:
  6014                           
  6015                           ; BSR set to: 2
  6016                           ;usb_device.c: 1717: else
  6017                           ;usb_device.c: 1718: {
  6018                           ;usb_device.c: 1729: controlTransferState = 2;
  6019  000F4C  0E02               	movlw	2
  6020  000F4E  6E26               	movwf	_controlTransferState,c	;volatile
  6021                           
  6022                           ; BSR set to: 2
  6023                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6024                           
  6025                           ; BSR set to: 2
  6026                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6027                           
  6028                           ; BSR set to: 2
  6029                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6030  000F50  D80A               	call	PL2	;call to abstracted procedure
  6031  000F52  0E04               	movlw	4
  6032                           
  6033                           ; BSR set to: 2
  6034                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6035  000F54  EC50  F005         	call	PL10	;call to abstracted procedure
  6036                           
  6037                           ; BSR set to: 2
  6038                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6039  000F58  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6040                           
  6041                           ; BSR set to: 2
  6042                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6043  000F5A  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6044                           
  6045                           ; BSR set to: 2
  6046                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6047  000F5C  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6048  000F5E  E102 EF10  F009    	bz	_USBCtrlEPAllowStatusStage
  6049  000F64  0012               	return	
  6050  000F66                     __end_of_USBCtrlEPServiceComplete:
  6051                           	opt stack 0
  6052  000F66                     PL2:
  6053                           	opt stack 20
  6054  000F66  EE20 F001          	lfsr	2,1
  6055  000F6A  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6056  000F6C  26D9               	addwf	fsr2l,f,c
  6057  000F6E  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6058  000F70  22DA               	addwfc	fsr2h,f,c
  6059  000F72  0E08               	movlw	8
  6060  000F74  6EDF               	movwf	indf2,c
  6061  000F76  EE20 F002          	lfsr	2,2
  6062  000F7A  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6063  000F7C  26D9               	addwf	fsr2l,f,c
  6064  000F7E  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6065  000F80  22DA               	addwfc	fsr2h,f,c
  6066  000F82  0E30               	movlw	48
  6067  000F84  6EDE               	movwf	postinc2,c
  6068  000F86  0E02               	movlw	2
  6069  000F88  6EDD               	movwf	postdec2,c
  6070  000F8A  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6071  000F8E  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6072  000F92  0C02               	retlw	2
  6073  000F94                     __end_ofPL2:
  6074                           	opt stack 0
  6075                           tblptru	equ	0xFF8
  6076                           tblptrh	equ	0xFF7
  6077                           tblptrl	equ	0xFF6
  6078                           tablat	equ	0xFF5
  6079                           prodh	equ	0xFF4
  6080                           prodl	equ	0xFF3
  6081                           intcon	equ	0xFF2
  6082                           postinc0	equ	0xFEE
  6083                           wreg	equ	0xFE8
  6084                           indf1	equ	0xFE7
  6085                           postdec1	equ	0xFE5
  6086                           fsr1h	equ	0xFE2
  6087                           fsr1l	equ	0xFE1
  6088                           indf2	equ	0xFDF
  6089                           postinc2	equ	0xFDE
  6090                           postdec2	equ	0xFDD
  6091                           plusw2	equ	0xFDB
  6092                           fsr2h	equ	0xFDA
  6093                           fsr2l	equ	0xFD9
  6094                           status	equ	0xFD8
  6095                           
  6096 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6097 ;; Defined at:
  6098 ;;		line 1488 in file "picLibs/usb_device.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      void 
  6105 ;; Registers used:
  6106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 3D/0
  6109 ;;		On exit  : 3F/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6112 ;;      Params:         0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0
  6115 ;;      Totals:         0       0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    1
  6119 ;; This function calls:
  6120 ;;		_USBCtrlTrfTxService
  6121 ;; This function is called by:
  6122 ;;		_USBCtrlEPServiceComplete
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text33
  6127  001508                     __ptext33:
  6128                           	opt stack 0
  6129  001508                     _USBCtrlEPAllowDataStage:
  6130                           	opt stack 20
  6131                           
  6132                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6133                           
  6134                           ;incstack = 0
  6135  001508  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6136                           
  6137                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6138  00150A  0100               	movlb	0	; () banked
  6139  00150C  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6143  00150E  0E02               	movlw	2
  6144  001510  1826               	xorwf	_controlTransferState,w,c	;volatile
  6145  001512  E110               	bnz	i2l3283
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;usb_device.c: 1494: {
  6149                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6150  001514  EE20 F001          	lfsr	2,1
  6151  001518  EC46  F005         	call	PL4	;call to abstracted procedure
  6152                           
  6153                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  6154  00151C  EC4B  F005         	call	PL6	;call to abstracted procedure
  6155  001520  EC46  F005         	call	PL4	;call to abstracted procedure
  6156  001524  EC5D  F005         	call	PL68	;call to abstracted procedure
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6160  001528  EC58  F005         	call	PL18	;call to abstracted procedure
  6161  00152C  0E48               	movlw	72
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6165  00152E  EC50  F005         	call	PL10	;call to abstracted procedure
  6166                           
  6167                           ;usb_device.c: 1500: }
  6168  001532  0C00               	retlw	0
  6169  001534                     i2l3283:
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;usb_device.c: 1501: else
  6173                           ;usb_device.c: 1502: {
  6174                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6175  001534  500D               	movf	_inPipes+4,w,c	;volatile
  6176  001536  0102               	movlb	2	; () banked
  6177  001538  5D36               	subwf	54,w,b	;volatile
  6178  00153A  500E               	movf	_inPipes+5,w,c	;volatile
  6179  00153C  5937               	subwfb	55,w,b	;volatile
  6180  00153E  E204               	bc	i2l3287
  6181                           
  6182                           ; BSR set to: 2
  6183                           ;usb_device.c: 1506: {
  6184                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6185  001540  C236 F00D          	movff	566,_inPipes+4	;volatile
  6186  001544  C237 F00E          	movff	567,_inPipes+5	;volatile
  6187  001548                     i2l3287:
  6188                           
  6189                           ; BSR set to: 2
  6190                           ;usb_device.c: 1508: }
  6191                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6192  001548  EC85  F006         	call	_USBCtrlTrfTxService	;wreg free
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  6196  00154C  EC53  F008         	call	PL48	;call to abstracted procedure
  6197  001550  EC4D  F008         	call	PL44	;call to abstracted procedure
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6201  001554  EC48  F008         	call	PL16	;call to abstracted procedure
  6202  001558  0E48               	movlw	72
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6206                           
  6207                           ; BSR set to: 0
  6208  00155A  EF40  F008         	goto	PL8	;call to abstracted procedure
  6209  00155E                     __end_of_USBCtrlEPAllowDataStage:
  6210                           	opt stack 0
  6211                           tblptru	equ	0xFF8
  6212                           tblptrh	equ	0xFF7
  6213                           tblptrl	equ	0xFF6
  6214                           tablat	equ	0xFF5
  6215                           prodh	equ	0xFF4
  6216                           prodl	equ	0xFF3
  6217                           intcon	equ	0xFF2
  6218                           postinc0	equ	0xFEE
  6219                           wreg	equ	0xFE8
  6220                           indf1	equ	0xFE7
  6221                           postdec1	equ	0xFE5
  6222                           fsr1h	equ	0xFE2
  6223                           fsr1l	equ	0xFE1
  6224                           indf2	equ	0xFDF
  6225                           postinc2	equ	0xFDE
  6226                           postdec2	equ	0xFDD
  6227                           plusw2	equ	0xFDB
  6228                           fsr2h	equ	0xFDA
  6229                           fsr2l	equ	0xFD9
  6230                           status	equ	0xFD8
  6231                           
  6232 ;; *************** function _USBCheckStdRequest *****************
  6233 ;; Defined at:
  6234 ;;		line 2686 in file "picLibs/usb_device.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;		None
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      void 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 3F/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6248 ;;      Params:         0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0
  6250 ;;      Temps:          1       0       0       0       0
  6251 ;;      Totals:         1       0       0       0       0
  6252 ;;Total ram usage:        1 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    5
  6255 ;; This function calls:
  6256 ;;		_USBStdFeatureReqHandler
  6257 ;;		_USBStdGetDscHandler
  6258 ;;		_USBStdGetStatusHandler
  6259 ;;		_USBStdSetCfgHandler
  6260 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6261 ;; This function is called by:
  6262 ;;		_USBCtrlTrfSetupHandler
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text34
  6267  000F94                     __ptext34:
  6268                           	opt stack 0
  6269  000F94                     _USBCheckStdRequest:
  6270                           	opt stack 17
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;incstack = 0
  6277  000F94  0102               	movlb	2	; () banked
  6278  000F96  3930               	swapf	48,w,b	;volatile
  6279  000F98  32E8               	rrcf	wreg,f,c
  6280  000F9A  0B03               	andlw	3
  6281  000F9C  E01D               	bz	i2l3603
  6282  000F9E  0012               	return	
  6283  000FA0                     i2l598:
  6284                           
  6285                           ; BSR set to: 2
  6286                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6287  000FA0  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6288                           
  6289                           ; BSR set to: 2
  6290                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6291  000FA2  0E08               	movlw	8
  6292  000FA4  0100               	movlb	0	; () banked
  6293  000FA6  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6294                           
  6295                           ;usb_device.c: 2696: break;
  6296  000FA8  0C08               	retlw	8
  6297  000FAA                     i2l3577:
  6298                           
  6299                           ; BSR set to: 2
  6300                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6301  000FAA  0E29               	movlw	low _USBActiveConfiguration
  6302  000FAC  6E09               	movwf	_inPipes,c	;volatile
  6303                           
  6304                           ; BSR set to: 2
  6305                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6306                           
  6307                           ; BSR set to: 2
  6308                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6309                           
  6310                           ; BSR set to: 2
  6311                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6312                           
  6313                           ;usb_device.c: 2708: break;
  6314  000FAE  D034               	goto	PL82	;call to abstracted procedure
  6315  000FB0                     i2l3589:
  6316                           
  6317                           ; BSR set to: 2
  6318                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6319  000FB0  5134               	movf	52,w,b	;volatile
  6320  000FB2  0FAF               	addlw	low _USBAlternateInterface
  6321  000FB4  6E45               	movwf	??_USBCheckStdRequest& (0+255),c
  6322  000FB6  C045  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  6323                           
  6324                           ; BSR set to: 2
  6325                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6326                           
  6327                           ; BSR set to: 2
  6328                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6329                           
  6330                           ; BSR set to: 2
  6331                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6332                           
  6333                           ;usb_device.c: 2721: break;
  6334  000FBA  D02E               	goto	PL82	;call to abstracted procedure
  6335  000FBC                     i2l607:
  6336                           
  6337                           ; BSR set to: 2
  6338                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6339  000FBC  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6340                           
  6341                           ; BSR set to: 2
  6342                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6343  000FBE  5134               	movf	52,w,b	;volatile
  6344  000FC0  0FAF               	addlw	low _USBAlternateInterface
  6345  000FC2  6ED9               	movwf	fsr2l,c
  6346  000FC4  6ADA               	clrf	fsr2h,c
  6347  000FC6  C232 FFDF          	movff	562,indf2	;volatile
  6348                           
  6349                           ;usb_device.c: 2725: break;
  6350  000FCA  0012               	return	
  6351  000FCC                     i2l3599:
  6352                           
  6353                           ; BSR set to: 2
  6354                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6355  000FCC  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6356  000FCE  0E02               	movlw	2
  6357  000FD0  ECB8  F00C         	call	PL46	;call to abstracted procedure
  6358  000FD4  EFF0  F009         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6359  000FD8                     i2l3603:
  6360                           
  6361                           ; BSR set to: 2
  6362  000FD8  5131               	movf	49,w,b	;volatile
  6363                           
  6364                           ; Switch size 1, requested type "space"
  6365                           ; Number of cases is 11, Range of values is 0 to 12
  6366                           ; switch strategies available:
  6367                           ; Name         Instructions Cycles
  6368                           ; simple_byte           34    18 (average)
  6369                           ;	Chosen strategy is simple_byte
  6370  000FDA  E102 EFD7  F008    	bz	_USBStdGetStatusHandler
  6371  000FE0  0A01               	xorlw	1	; case 1
  6372  000FE2  E102 EFE4  F001    	bz	_USBStdFeatureReqHandler
  6373  000FE8  0A02               	xorlw	2	; case 3
  6374  000FEA  E102 EFE4  F001    	bz	_USBStdFeatureReqHandler
  6375  000FF0  0A06               	xorlw	6	; case 5
  6376  000FF2  E0D6               	bz	i2l598
  6377  000FF4  0A03               	xorlw	3	; case 6
  6378  000FF6  E102 EF3A  F004    	bz	_USBStdGetDscHandler
  6379  000FFC  0A01               	xorlw	1	; case 7
  6380  000FFE  E0E6               	bz	i2l3599
  6381  001000  0A0F               	xorlw	15	; case 8
  6382  001002  E0D3               	bz	i2l3577
  6383  001004  0A01               	xorlw	1	; case 9
  6384  001006  E102 EF2C  F007    	bz	_USBStdSetCfgHandler
  6385  00100C  0A03               	xorlw	3	; case 10
  6386  00100E  E0D0               	bz	i2l3589
  6387  001010  0A01               	xorlw	1	; case 11
  6388  001012  E0D4               	bz	i2l607
  6389  001014  0A07               	xorlw	7	; case 12
  6390  001016  0012               	return	
  6391  001018                     __end_of_USBCheckStdRequest:
  6392                           	opt stack 0
  6393  001018                     PL82:
  6394                           	opt stack 17
  6395  001018  6A0A               	clrf	_inPipes+1,c	;volatile
  6396  00101A  800C               	bsf	_inPipes+3,0,c	;volatile
  6397  00101C  0E01               	movlw	1
  6398  00101E  6E0D               	movwf	_inPipes+4,c	;volatile
  6399  001020  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6400  001022  0C01               	retlw	1
  6401  001024                     __end_ofPL82:
  6402                           	opt stack 0
  6403                           tblptru	equ	0xFF8
  6404                           tblptrh	equ	0xFF7
  6405                           tblptrl	equ	0xFF6
  6406                           tablat	equ	0xFF5
  6407                           prodh	equ	0xFF4
  6408                           prodl	equ	0xFF3
  6409                           intcon	equ	0xFF2
  6410                           postinc0	equ	0xFEE
  6411                           wreg	equ	0xFE8
  6412                           indf1	equ	0xFE7
  6413                           postdec1	equ	0xFE5
  6414                           fsr1h	equ	0xFE2
  6415                           fsr1l	equ	0xFE1
  6416                           indf2	equ	0xFDF
  6417                           postinc2	equ	0xFDE
  6418                           postdec2	equ	0xFDD
  6419                           plusw2	equ	0xFDB
  6420                           fsr2h	equ	0xFDA
  6421                           fsr2l	equ	0xFD9
  6422                           status	equ	0xFD8
  6423                           
  6424 ;; *************** function _USBStdSetCfgHandler *****************
  6425 ;; Defined at:
  6426 ;;		line 1968 in file "picLibs/usb_device.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;		None
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  i               1   20[COMRAM] unsigned char 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      void 
  6433 ;; Registers used:
  6434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 3D/2
  6437 ;;		On exit  : 3F/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6440 ;;      Params:         0       0       0       0       0
  6441 ;;      Locals:         1       0       0       0       0
  6442 ;;      Temps:          0       0       0       0       0
  6443 ;;      Totals:         1       0       0       0       0
  6444 ;;Total ram usage:        1 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    4
  6447 ;; This function calls:
  6448 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6449 ;;		i2_memset
  6450 ;; This function is called by:
  6451 ;;		_USBCheckStdRequest
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text35
  6456  000E58                     __ptext35:
  6457                           	opt stack 0
  6458  000E58                     _USBStdSetCfgHandler:
  6459                           	opt stack 17
  6460                           
  6461                           ;usb_device.c: 1970: uint8_t i;
  6462                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6463                           
  6464                           ;incstack = 0
  6465  000E58  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6466                           
  6467                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  6468  000E5A  D840               	call	PL54	;call to abstracted procedure
  6469  000E5C  EC98  F00C         	call	i2_memset	;wreg free
  6470                           
  6471                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6472  000E60  6A2A               	clrf	i2memset@p1,c
  6473  000E62  0E02               	movlw	2
  6474  000E64  6E2B               	movwf	i2memset@p1+1,c
  6475  000E66  6A2D               	clrf	i2memset@c+1,c
  6476  000E68  6A2C               	clrf	i2memset@c,c
  6477  000E6A  6A2F               	clrf	i2memset@n+1,c
  6478  000E6C  0E30               	movlw	48
  6479  000E6E  6E2E               	movwf	i2memset@n,c
  6480  000E70  EC98  F00C         	call	i2_memset	;wreg free
  6481                           
  6482                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6483  000E74  8C64               	bsf	3940,6,c	;volatile
  6484                           
  6485                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6486  000E76  6A3E               	clrf	USBStdSetCfgHandler@i,c
  6487  000E78                     i2l3307:
  6488                           
  6489                           ;usb_device.c: 1988: {
  6490                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6491  000E78  503E               	movf	USBStdSetCfgHandler@i,w,c
  6492  000E7A  EC30  F004         	call	PL90	;call to abstracted procedure
  6493                           
  6494                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6495  000E7E  503E               	movf	USBStdSetCfgHandler@i,w,c
  6496  000E80  EC35  F004         	call	PL96	;call to abstracted procedure
  6497  000E84  2A3E               	incf	USBStdSetCfgHandler@i,f,c
  6498  000E86  0E02               	movlw	2
  6499  000E88  643E               	cpfsgt	USBStdSetCfgHandler@i,c
  6500  000E8A  D7F6               	goto	i2l3307
  6501                           
  6502                           ;usb_device.c: 1991: }
  6503                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6504  000E8C  0EAF               	movlw	low _USBAlternateInterface
  6505  000E8E  6E2A               	movwf	i2memset@p1,c
  6506  000E90  6A2B               	clrf	i2memset@p1+1,c
  6507  000E92  6A2D               	clrf	i2memset@c+1,c
  6508  000E94  6A2C               	clrf	i2memset@c,c
  6509  000E96  6A2F               	clrf	i2memset@n+1,c
  6510  000E98  0E02               	movlw	2
  6511  000E9A  6E2E               	movwf	i2memset@n,c
  6512  000E9C  EC98  F00C         	call	i2_memset	;wreg free
  6513                           
  6514                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6515  000EA0  9C64               	bcf	3940,6,c	;volatile
  6516                           
  6517                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6518  000EA2  0E08               	movlw	8
  6519  000EA4  6E0F               	movwf	_pBDTEntryIn,c
  6520  000EA6  0E02               	movlw	2
  6521  000EA8  6E10               	movwf	_pBDTEntryIn+1,c
  6522                           
  6523                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6524  000EAA  0E00               	movlw	0
  6525  000EAC  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  6526  000EAE  0E02               	movlw	2
  6527                           
  6528                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6529  000EB0  D81F               	call	PL100	;call to abstracted procedure
  6530                           
  6531                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6532  000EB2  C232 F029          	movff	562,_USBActiveConfiguration	;volatile
  6533                           
  6534                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6535  000EB6  5029               	movf	_USBActiveConfiguration,w,c	;volatile
  6536  000EB8  E104               	bnz	i2l3329
  6537                           
  6538                           ;usb_device.c: 2010: {
  6539                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6540  000EBA  0E10               	movlw	16
  6541  000EBC  0100               	movlb	0	; () banked
  6542  000EBE  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6543                           
  6544                           ;usb_device.c: 2013: }
  6545  000EC0  0C10               	retlw	16
  6546  000EC2                     i2l3329:
  6547                           
  6548                           ;usb_device.c: 2014: else
  6549                           ;usb_device.c: 2015: {
  6550                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6551  000EC2  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6552  000EC4  0E01               	movlw	1
  6553  000EC6  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6554  000EC8  0E29               	movlw	low _USBActiveConfiguration
  6555  000ECA  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6556  000ECC  ECC8  F003         	call	PL88	;call to abstracted procedure
  6557  000ED0  ECF0  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6558                           
  6559                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6560  000ED4  0E20               	movlw	32
  6561  000ED6  0100               	movlb	0	; () banked
  6562  000ED8  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6563                           
  6564                           ; BSR set to: 0
  6565  000EDA  0C20               	retlw	32	;funcret
  6566  000EDC                     __end_of_USBStdSetCfgHandler:
  6567                           	opt stack 0
  6568  000EDC                     PL54:
  6569                           	opt stack 23
  6570  000EDC  0E54               	movlw	84
  6571  000EDE  6E2A               	movwf	i2memset@p1,c
  6572  000EE0  0E0F               	movlw	15
  6573  000EE2  6E2B               	movwf	i2memset@p1+1,c
  6574  000EE4  6A2D               	clrf	i2memset@c+1,c
  6575  000EE6  6A2C               	clrf	i2memset@c,c
  6576  000EE8  6A2F               	clrf	i2memset@n+1,c
  6577  000EEA  0E02               	movlw	2
  6578  000EEC  6E2E               	movwf	i2memset@n,c
  6579  000EEE  0C02               	retlw	2
  6580  000EF0                     __end_ofPL54:
  6581                           	opt stack 0
  6582  000EF0                     PL100:
  6583                           	opt stack 17
  6584  000EF0  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
  6585  000EF2  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6586  000EF6  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6587  000EFA  0012               	return	
  6588  000EFC                     __end_ofPL100:
  6589                           	opt stack 0
  6590                           tblptru	equ	0xFF8
  6591                           tblptrh	equ	0xFF7
  6592                           tblptrl	equ	0xFF6
  6593                           tablat	equ	0xFF5
  6594                           prodh	equ	0xFF4
  6595                           prodl	equ	0xFF3
  6596                           intcon	equ	0xFF2
  6597                           postinc0	equ	0xFEE
  6598                           wreg	equ	0xFE8
  6599                           indf1	equ	0xFE7
  6600                           postdec1	equ	0xFE5
  6601                           fsr1h	equ	0xFE2
  6602                           fsr1l	equ	0xFE1
  6603                           indf2	equ	0xFDF
  6604                           postinc2	equ	0xFDE
  6605                           postdec2	equ	0xFDD
  6606                           plusw2	equ	0xFDB
  6607                           fsr2h	equ	0xFDA
  6608                           fsr2l	equ	0xFD9
  6609                           status	equ	0xFD8
  6610                           
  6611 ;; *************** function i2_memset *****************
  6612 ;; Defined at:
  6613 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  p1              2    0[COMRAM] PTR void 
  6616 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6617 ;;  c               2    2[COMRAM] int 
  6618 ;;  n               2    4[COMRAM] unsigned int 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  memset          2    6[COMRAM] PTR unsigned char 
  6621 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  2    0[COMRAM] PTR void 
  6624 ;; Registers used:
  6625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/F
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6631 ;;      Params:         6       0       0       0       0
  6632 ;;      Locals:         2       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0
  6634 ;;      Totals:         8       0       0       0       0
  6635 ;;Total ram usage:        8 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_USBStdSetCfgHandler
  6641 ;;		i2_USBDeviceInit
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text36
  6646  001930                     __ptext36:
  6647                           	opt stack 0
  6648  001930                     i2_memset:
  6649                           	opt stack 23
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;incstack = 0
  6653  001930  C02A  F030         	movff	i2memset@p1,i2memset@p
  6654  001934  C02B  F031         	movff	i2memset@p1+1,i2memset@p+1
  6655  001938  D008               	goto	i2l3239
  6656  00193A                     i2l3235:
  6657  00193A  C030  FFD9         	movff	i2memset@p,fsr2l
  6658  00193E  C031  FFDA         	movff	i2memset@p+1,fsr2h
  6659  001942  C02C  FFDF         	movff	i2memset@c,indf2
  6660  001946  4A30               	infsnz	i2memset@p,f,c
  6661  001948  2A31               	incf	i2memset@p+1,f,c
  6662  00194A                     i2l3239:
  6663  00194A  062E               	decf	i2memset@n,f,c
  6664  00194C  A0D8               	btfss	status,0,c
  6665  00194E  062F               	decf	i2memset@n+1,f,c
  6666  001950  282E               	incf	i2memset@n,w,c
  6667  001952  E1F3               	bnz	i2l3235
  6668  001954  282F               	incf	i2memset@n+1,w,c
  6669  001956  E1F1               	bnz	i2l3235
  6670  001958  0012               	return		;funcret
  6671  00195A                     __end_ofi2_memset:
  6672                           	opt stack 0
  6673                           tblptru	equ	0xFF8
  6674                           tblptrh	equ	0xFF7
  6675                           tblptrl	equ	0xFF6
  6676                           tablat	equ	0xFF5
  6677                           prodh	equ	0xFF4
  6678                           prodl	equ	0xFF3
  6679                           intcon	equ	0xFF2
  6680                           postinc0	equ	0xFEE
  6681                           wreg	equ	0xFE8
  6682                           indf1	equ	0xFE7
  6683                           postdec1	equ	0xFE5
  6684                           fsr1h	equ	0xFE2
  6685                           fsr1l	equ	0xFE1
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           postdec2	equ	0xFDD
  6689                           plusw2	equ	0xFDB
  6690                           fsr2h	equ	0xFDA
  6691                           fsr2l	equ	0xFD9
  6692                           status	equ	0xFD8
  6693                           
  6694 ;; *************** function _USBStdGetStatusHandler *****************
  6695 ;; Defined at:
  6696 ;;		line 2129 in file "picLibs/usb_device.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;  p               2    0[COMRAM] PTR struct __BDT
  6701 ;;		 -> RAM(767), NULL(0), BDT(48), 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  1    wreg      void 
  6704 ;; Registers used:
  6705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6706 ;; Tracked objects:
  6707 ;;		On entry : 3D/2
  6708 ;;		On exit  : 3F/2
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6711 ;;      Params:         0       0       0       0       0
  6712 ;;      Locals:         2       0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0
  6714 ;;      Totals:         2       0       0       0       0
  6715 ;;Total ram usage:        2 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_USBCheckStdRequest
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text37
  6725  0011AE                     __ptext37:
  6726                           	opt stack 0
  6727  0011AE                     _USBStdGetStatusHandler:
  6728                           	opt stack 21
  6729                           
  6730                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6731                           
  6732                           ;incstack = 0
  6733  0011AE  0102               	movlb	2	; () banked
  6734  0011B0  6B38               	clrf	56,b	;volatile
  6735                           
  6736                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6737  0011B2  6B39               	clrf	57,b	;volatile
  6738                           
  6739                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6740  0011B4  D020               	goto	i2l3379
  6741  0011B6                     i2l536:
  6742                           
  6743                           ; BSR set to: 2
  6744                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6745  0011B6  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6746                           
  6747                           ; BSR set to: 2
  6748                           ;usb_device.c: 2145: }
  6749                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6750                           
  6751                           ;usb_device.c: 2142: if(0 == 1)
  6752  0011B8  0425               	decf	_RemoteWakeup,w,c	;volatile
  6753  0011BA  E124               	bnz	i2l539
  6754                           
  6755                           ; BSR set to: 2
  6756                           ;usb_device.c: 2148: {
  6757                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6758  0011BC  8338               	bsf	56,1,b	;volatile
  6759  0011BE  D022               	goto	i2l539
  6760  0011C0                     i2l540:
  6761                           
  6762                           ; BSR set to: 2
  6763                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6764  0011C0  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6765                           
  6766                           ;usb_device.c: 2154: break;
  6767  0011C2  D020               	goto	i2l539
  6768  0011C4                     i2l541:
  6769                           
  6770                           ; BSR set to: 2
  6771                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6772  0011C4  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6773                           
  6774                           ;usb_device.c: 2160: {
  6775                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6776                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6777  0011C6  BF34               	btfsc	52,7,b	;volatile
  6778  0011C8  D004               	goto	i2l3369
  6779                           
  6780                           ; BSR set to: 2
  6781                           ;usb_device.c: 2164: {
  6782                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6783  0011CA  ECA6  F002         	call	PL64	;call to abstracted procedure
  6784  0011CE  0F60               	addlw	low _pBDTEntryOut
  6785  0011D0  D003               	goto	L6
  6786  0011D2                     i2l3369:
  6787                           
  6788                           ; BSR set to: 2
  6789                           ;usb_device.c: 2167: else
  6790                           ;usb_device.c: 2168: {
  6791                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6792  0011D2  ECA6  F002         	call	PL64	;call to abstracted procedure
  6793  0011D6  0F0F               	addlw	low _pBDTEntryIn
  6794  0011D8                     L6:
  6795  0011D8  6ED9               	movwf	fsr2l,c
  6796  0011DA  6ADA               	clrf	fsr2h,c
  6797  0011DC  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  6798  0011E0  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  6799                           
  6800                           ; BSR set to: 2
  6801                           ;usb_device.c: 2170: }
  6802                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6803  0011E4  D818               	call	PL116	;call to abstracted procedure
  6804  0011E6  AEDF               	btfss	indf2,7,c
  6805  0011E8  D00D               	goto	i2l539
  6806                           
  6807                           ; BSR set to: 2
  6808  0011EA  D815               	call	PL116	;call to abstracted procedure
  6809  0011EC  A4DF               	btfss	indf2,2,c
  6810  0011EE  D00A               	goto	i2l539
  6811                           
  6812                           ; BSR set to: 2
  6813                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6814  0011F0  0E01               	movlw	1
  6815  0011F2  6F38               	movwf	56,b	;volatile
  6816  0011F4  D007               	goto	i2l539
  6817  0011F6                     i2l3379:
  6818                           
  6819                           ; BSR set to: 2
  6820  0011F6  5130               	movf	48,w,b	;volatile
  6821  0011F8  0B1F               	andlw	31
  6822                           
  6823                           ; Switch size 1, requested type "space"
  6824                           ; Number of cases is 3, Range of values is 0 to 2
  6825                           ; switch strategies available:
  6826                           ; Name         Instructions Cycles
  6827                           ; simple_byte           10     6 (average)
  6828                           ;	Chosen strategy is simple_byte
  6829  0011FA  E0DD               	bz	i2l536
  6830  0011FC  0A01               	xorlw	1	; case 1
  6831  0011FE  E0E0               	bz	i2l540
  6832  001200  0A03               	xorlw	3	; case 2
  6833  001202  E0E0               	bz	i2l541
  6834  001204                     i2l539:
  6835                           
  6836                           ; BSR set to: 2
  6837                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6838  001204  AE0C               	btfss	_inPipes+3,7,c	;volatile
  6839  001206  0012               	return	
  6840                           
  6841                           ; BSR set to: 2
  6842                           ;usb_device.c: 2179: {
  6843                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6844  001208  0E38               	movlw	56
  6845  00120A  6E09               	movwf	_inPipes,c	;volatile
  6846  00120C  0E02               	movlw	2
  6847  00120E  6E0A               	movwf	_inPipes+1,c	;volatile
  6848                           
  6849                           ; BSR set to: 2
  6850                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6851  001210  800C               	bsf	_inPipes+3,0,c	;volatile
  6852                           
  6853                           ; BSR set to: 2
  6854                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6855  001212  6E0D               	movwf	_inPipes+4,c	;volatile
  6856                           
  6857                           ; BSR set to: 2
  6858  001214  0C02               	retlw	2	;funcret
  6859  001216                     __end_of_USBStdGetStatusHandler:
  6860                           	opt stack 0
  6861  001216                     PL116:
  6862                           	opt stack 21
  6863  001216  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6864  00121A  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6865  00121E  0012               	return	
  6866  001220                     __end_ofPL116:
  6867                           	opt stack 0
  6868                           tblptru	equ	0xFF8
  6869                           tblptrh	equ	0xFF7
  6870                           tblptrl	equ	0xFF6
  6871                           tablat	equ	0xFF5
  6872                           prodh	equ	0xFF4
  6873                           prodl	equ	0xFF3
  6874                           intcon	equ	0xFF2
  6875                           postinc0	equ	0xFEE
  6876                           wreg	equ	0xFE8
  6877                           indf1	equ	0xFE7
  6878                           postdec1	equ	0xFE5
  6879                           fsr1h	equ	0xFE2
  6880                           fsr1l	equ	0xFE1
  6881                           indf2	equ	0xFDF
  6882                           postinc2	equ	0xFDE
  6883                           postdec2	equ	0xFDD
  6884                           plusw2	equ	0xFDB
  6885                           fsr2h	equ	0xFDA
  6886                           fsr2l	equ	0xFD9
  6887                           status	equ	0xFD8
  6888                           
  6889 ;; *************** function _USBStdGetDscHandler *****************
  6890 ;; Defined at:
  6891 ;;		line 2043 in file "picLibs/usb_device.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;		None
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      void 
  6898 ;; Registers used:
  6899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6900 ;; Tracked objects:
  6901 ;;		On entry : 3D/2
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  6905 ;;      Params:         0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0
  6907 ;;      Temps:          2       0       0       0       0
  6908 ;;      Totals:         2       0       0       0       0
  6909 ;;Total ram usage:        2 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_USBCheckStdRequest
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text38
  6919  000874                     __ptext38:
  6920                           	opt stack 0
  6921  000874                     _USBStdGetDscHandler:
  6922                           	opt stack 21
  6923                           
  6924                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6925                           
  6926                           ; BSR set to: 2
  6927                           ;incstack = 0
  6928  000874  0E80               	movlw	128
  6929  000876  0102               	movlb	2	; () banked
  6930  000878  1930               	xorwf	48,w,b	;volatile
  6931  00087A  A4D8               	btfss	status,2,c
  6932  00087C  0012               	return	
  6933                           
  6934                           ; BSR set to: 2
  6935                           ;usb_device.c: 2046: {
  6936                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6937  00087E  0EC0               	movlw	192
  6938  000880  6E0C               	movwf	_inPipes+3,c	;volatile
  6939                           
  6940                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6941  000882  D03D               	goto	i2l3357
  6942  000884                     i2l3337:
  6943                           
  6944                           ; BSR set to: 2
  6945                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6946  000884  0EB0               	movlw	low _device_dsc
  6947  000886  6E09               	movwf	_inPipes,c	;volatile
  6948  000888  5009               	movf	_inPipes,w,c	;volatile
  6949  00088A  A4D8               	btfss	status,2,c
  6950  00088C  0E03               	movlw	high __smallconst
  6951  00088E  6E0A               	movwf	_inPipes+1,c	;volatile
  6952                           
  6953                           ; BSR set to: 2
  6954                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6955  000890  6A0E               	clrf	_inPipes+5,c	;volatile
  6956  000892  0E12               	movlw	18
  6957  000894  6E0D               	movwf	_inPipes+4,c	;volatile
  6958                           
  6959                           ;usb_device.c: 2058: break;
  6960  000896  0C12               	retlw	18
  6961  000898                     i2l3341:
  6962                           
  6963                           ; BSR set to: 2
  6964                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6965  000898  5132               	movf	50,w,b	;volatile
  6966  00089A  E116               	bnz	i2l526
  6967                           
  6968                           ; BSR set to: 2
  6969                           ;usb_device.c: 2064: {
  6970                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6971  00089C  5132               	movf	50,w,b	;volatile
  6972  00089E  0F04               	addlw	low _USB_CD_Ptr
  6973  0008A0  D848               	call	PL52	;call to abstracted procedure
  6974                           
  6975                           ; BSR set to: 2
  6976                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6977  0008A2  0E02               	movlw	2
  6978  0008A4  D83A               	call	PL38	;call to abstracted procedure
  6979  0008A6  64F7               	cpfsgt	tblptrh,c
  6980  0008A8  D003               	bra	i2u210_47
  6981  0008AA  0008               	tblrd		*
  6982  0008AC  50F5               	movf	tablat,w,c
  6983  0008AE  D001               	bra	i2u210_40
  6984  0008B0                     i2u210_47:
  6985  0008B0  D82E               	call	PL30	;call to abstracted procedure
  6986  0008B2                     i2u210_40:
  6987  0008B2  6E0D               	movwf	_inPipes+4,c	;volatile
  6988                           
  6989                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6990  0008B4  0E03               	movlw	3
  6991  0008B6  D831               	call	PL38	;call to abstracted procedure
  6992  0008B8  64F7               	cpfsgt	tblptrh,c
  6993  0008BA  D003               	bra	i2u211_47
  6994  0008BC  0008               	tblrd		*
  6995  0008BE  50F5               	movf	tablat,w,c
  6996  0008C0  D001               	bra	i2u211_40
  6997  0008C2                     i2u211_47:
  6998  0008C2  D825               	call	PL30	;call to abstracted procedure
  6999  0008C4                     i2u211_40:
  7000  0008C4  6E0E               	movwf	_inPipes+5,c	;volatile
  7001                           
  7002                           ;usb_device.c: 2076: }
  7003  0008C6  0012               	return	
  7004  0008C8                     i2l526:
  7005                           
  7006                           ; BSR set to: 2
  7007                           ;usb_device.c: 2077: else
  7008                           ;usb_device.c: 2078: {
  7009                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7010  0008C8  6A0C               	clrf	_inPipes+3,c	;volatile
  7011  0008CA  0012               	return	
  7012  0008CC                     i2l3349:
  7013                           
  7014                           ; BSR set to: 2
  7015                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7016  0008CC  0E03               	movlw	3
  7017  0008CE  6132               	cpfslt	50,b	;volatile
  7018  0008D0  D012               	goto	i2l529
  7019                           
  7020                           ; BSR set to: 2
  7021                           ;usb_device.c: 2087: {
  7022                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7023  0008D2  5132               	movf	50,w,b	;volatile
  7024  0008D4  0F01               	addlw	low _USB_SD_Ptr
  7025  0008D6  D82D               	call	PL52	;call to abstracted procedure
  7026                           
  7027                           ; BSR set to: 2
  7028                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7029  0008D8  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
  7030  0008DC  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7031  0008E0  6AF8               	clrf	tblptru,c
  7032  0008E2  0E02               	movlw	(high __ramtop+-1)
  7033  0008E4  64F7               	cpfsgt	tblptrh,c
  7034  0008E6  D003               	bra	i2u213_47
  7035  0008E8  0008               	tblrd		*
  7036  0008EA  50F5               	movf	tablat,w,c
  7037  0008EC  D001               	bra	i2u213_40
  7038  0008EE                     i2u213_47:
  7039  0008EE  D80F               	call	PL30	;call to abstracted procedure
  7040  0008F0                     i2u213_40:
  7041  0008F0  6E0D               	movwf	_inPipes+4,c	;volatile
  7042  0008F2  6A0E               	clrf	_inPipes+5,c	;volatile
  7043                           
  7044                           ;usb_device.c: 2092: }
  7045  0008F4  0012               	return	
  7046  0008F6                     i2l529:
  7047                           
  7048                           ; BSR set to: 2
  7049                           ;usb_device.c: 2102: else
  7050                           ;usb_device.c: 2103: {
  7051                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7052  0008F6  6A0C               	clrf	_inPipes+3,c	;volatile
  7053  0008F8  0012               	return	
  7054  0008FA                     i2l531:
  7055                           
  7056                           ; BSR set to: 2
  7057                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7058  0008FA  6A0C               	clrf	_inPipes+3,c	;volatile
  7059                           
  7060                           ;usb_device.c: 2109: break;
  7061  0008FC  0012               	return	
  7062  0008FE                     i2l3357:
  7063                           
  7064                           ; BSR set to: 2
  7065  0008FE  5133               	movf	51,w,b	;volatile
  7066                           
  7067                           ; Switch size 1, requested type "space"
  7068                           ; Number of cases is 3, Range of values is 1 to 3
  7069                           ; switch strategies available:
  7070                           ; Name         Instructions Cycles
  7071                           ; simple_byte           10     6 (average)
  7072                           ;	Chosen strategy is simple_byte
  7073  000900  0A01               	xorlw	1	; case 1
  7074  000902  E0C0               	bz	i2l3337
  7075  000904  0A03               	xorlw	3	; case 2
  7076  000906  E0C8               	bz	i2l3341
  7077  000908  0A01               	xorlw	1	; case 3
  7078  00090A  E0E0               	bz	i2l3349
  7079  00090C  D7F6               	goto	i2l531
  7080  00090E                     __end_of_USBStdGetDscHandler:
  7081                           	opt stack 0
  7082  00090E                     PL30:
  7083                           	opt stack 21
  7084  00090E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7085  000912  CFF7 FFE2          	movff	tblptrh,fsr1h
  7086  000916  50E7               	movf	indf1,w,c
  7087  000918  0012               	return	
  7088  00091A                     __end_ofPL30:
  7089                           	opt stack 0
  7090  00091A                     PL38:
  7091                           	opt stack 21
  7092  00091A  2409               	addwf	_inPipes,w,c	;volatile
  7093  00091C  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7094  00091E  0E00               	movlw	0
  7095  000920  200A               	addwfc	_inPipes+1,w,c	;volatile
  7096  000922  6E2B               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7097  000924  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7098  000928  C02B  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7099  00092C  6AF8               	clrf	tblptru,c
  7100  00092E  0E02               	movlw	(high __ramtop+-1)
  7101  000930  0012               	return	
  7102  000932                     __end_ofPL38:
  7103                           	opt stack 0
  7104  000932                     PL52:
  7105                           	opt stack 21
  7106  000932  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7107  000934  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7108  000938                     	if	1	;There is more than 1 active tblptr byte
  7109  000938  0E03               	movlw	high __smallconst
  7110  00093A  6EF7               	movwf	tblptrh,c
  7111  00093C                     	endif
  7112  00093C                     	if	0	;tblptru may be non-zero
  7113  00093C                     	endif
  7114  00093C                     	if	0	;tblptru may be non-zero
  7115  00093C                     	endif
  7116  00093C  0009               	tblrd		*+
  7117  00093E  CFF5 F009          	movff	tablat,_inPipes	;volatile
  7118  000942  6E0A               	movwf	_inPipes+1,c	;volatile
  7119  000944  0012               	return	
  7120  000946                     __end_ofPL52:
  7121                           	opt stack 0
  7122                           tblptru	equ	0xFF8
  7123                           tblptrh	equ	0xFF7
  7124                           tblptrl	equ	0xFF6
  7125                           tablat	equ	0xFF5
  7126                           prodh	equ	0xFF4
  7127                           prodl	equ	0xFF3
  7128                           intcon	equ	0xFF2
  7129                           postinc0	equ	0xFEE
  7130                           wreg	equ	0xFE8
  7131                           indf1	equ	0xFE7
  7132                           postdec1	equ	0xFE5
  7133                           fsr1h	equ	0xFE2
  7134                           fsr1l	equ	0xFE1
  7135                           indf2	equ	0xFDF
  7136                           postinc2	equ	0xFDE
  7137                           postdec2	equ	0xFDD
  7138                           plusw2	equ	0xFDB
  7139                           fsr2h	equ	0xFDA
  7140                           fsr2l	equ	0xFD9
  7141                           status	equ	0xFD8
  7142                           
  7143 ;; *************** function _USBStdFeatureReqHandler *****************
  7144 ;; Defined at:
  7145 ;;		line 2754 in file "picLibs/usb_device.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  p               2   25[COMRAM] PTR struct __BDT
  7150 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7151 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  7152 ;;		 -> UEP0(1), 
  7153 ;;  current_ep_d    1   24[COMRAM] struct .
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 3D/2
  7160 ;;		On exit  : 3D/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7163 ;;      Params:         0       0       0       0       0
  7164 ;;      Locals:         5       0       0       0       0
  7165 ;;      Temps:          2       0       0       0       0
  7166 ;;      Totals:         7       0       0       0       0
  7167 ;;Total ram usage:        7 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    4
  7170 ;; This function calls:
  7171 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7172 ;; This function is called by:
  7173 ;;		_USBCheckStdRequest
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           	psect	text39
  7178  0003C8                     __ptext39:
  7179                           	opt stack 0
  7180  0003C8                     _USBStdFeatureReqHandler:
  7181                           	opt stack 17
  7182                           
  7183                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7184                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7185                           ;usb_device.c: 2761: unsigned char* pUEP;
  7186                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7187                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7188                           
  7189                           ;incstack = 0
  7190  0003C8  0102               	movlb	2	; () banked
  7191  0003CA  0532               	decf	50,w,b	;volatile
  7192  0003CC  E10B               	bnz	i2l3397
  7193                           
  7194                           ; BSR set to: 2
  7195  0003CE  5130               	movf	48,w,b	;volatile
  7196  0003D0  0B1F               	andlw	31
  7197  0003D2  E108               	bnz	i2l3397
  7198                           
  7199                           ; BSR set to: 2
  7200                           ;usb_device.c: 2801: {
  7201                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7202  0003D4  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7203                           
  7204                           ; BSR set to: 2
  7205                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7206  0003D6  0E03               	movlw	3
  7207  0003D8  1931               	xorwf	49,w,b	;volatile
  7208  0003DA  E103               	bnz	i2l614
  7209                           
  7210                           ; BSR set to: 2
  7211                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7212  0003DC  0E01               	movlw	1
  7213  0003DE  6E25               	movwf	_RemoteWakeup,c	;volatile
  7214  0003E0  D001               	goto	i2l3397
  7215  0003E2                     i2l614:
  7216                           
  7217                           ; BSR set to: 2
  7218                           ;usb_device.c: 2805: else
  7219                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7220  0003E2  6A25               	clrf	_RemoteWakeup,c	;volatile
  7221  0003E4                     i2l3397:
  7222                           
  7223                           ; BSR set to: 2
  7224                           ;usb_device.c: 2807: }
  7225                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7226                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7227                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7228                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7229  0003E4  5132               	movf	50,w,b	;volatile
  7230  0003E6  A4D8               	btfss	status,2,c
  7231  0003E8  0012               	return	
  7232                           
  7233                           ; BSR set to: 2
  7234  0003EA  5130               	movf	48,w,b	;volatile
  7235  0003EC  0B1F               	andlw	31
  7236  0003EE  0A02               	xorlw	2
  7237  0003F0  A4D8               	btfss	status,2,c
  7238  0003F2  0012               	return	
  7239                           
  7240                           ; BSR set to: 2
  7241  0003F4  5134               	movf	52,w,b	;volatile
  7242  0003F6  0B0F               	andlw	15
  7243  0003F8  B4D8               	btfsc	status,2,c
  7244  0003FA  0012               	return	
  7245                           
  7246                           ; BSR set to: 2
  7247  0003FC  5134               	movf	52,w,b	;volatile
  7248  0003FE  0B0F               	andlw	15
  7249  000400  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7250  000402  0E03               	movlw	3
  7251  000404  603E               	cpfslt	??_USBStdFeatureReqHandler,c
  7252  000406  0C03               	retlw	3
  7253                           
  7254                           ; BSR set to: 2
  7255  000408  0E20               	movlw	32
  7256  00040A  0100               	movlb	0	; () banked
  7257  00040C  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7258  00040E  A4D8               	btfss	status,2,c
  7259  000410  0012               	return	
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;usb_device.c: 2814: {
  7263                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7264  000412  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7265                           
  7266                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7267  000414  0102               	movlb	2	; () banked
  7268  000416  BF34               	btfsc	52,7,b	;volatile
  7269  000418  D007               	goto	i2l3413
  7270                           
  7271                           ; BSR set to: 2
  7272                           ;usb_device.c: 2821: {
  7273                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7274  00041A  5134               	movf	52,w,b	;volatile
  7275  00041C  0B0F               	andlw	15
  7276  00041E  ECAD  F005         	call	PL28	;call to abstracted procedure
  7277                           
  7278                           ; BSR set to: 2
  7279                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7280  000422  D88B               	call	PL62	;call to abstracted procedure
  7281  000424  0F70               	addlw	low _ep_data_out
  7282  000426  D006               	goto	L7
  7283  000428                     i2l3413:
  7284                           
  7285                           ; BSR set to: 2
  7286                           ;usb_device.c: 2825: else
  7287                           ;usb_device.c: 2826: {
  7288                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7289  000428  5134               	movf	52,w,b	;volatile
  7290  00042A  0B0F               	andlw	15
  7291  00042C  ECB3  F005         	call	PL32	;call to abstracted procedure
  7292                           
  7293                           ; BSR set to: 2
  7294                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7295  000430  D884               	call	PL62	;call to abstracted procedure
  7296  000432  0F73               	addlw	low _ep_data_in
  7297  000434                     L7:
  7298  000434  6ED9               	movwf	fsr2l,c
  7299  000436  6ADA               	clrf	fsr2h,c
  7300  000438  50DF               	movf	indf2,w,c
  7301  00043A  6E42               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7302                           
  7303                           ; BSR set to: 2
  7304                           ;usb_device.c: 2829: }
  7305                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7306  00043C  B042               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7307  00043E  D003               	goto	i2l3421
  7308                           
  7309                           ; BSR set to: 2
  7310                           ;usb_device.c: 2836: {
  7311                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7312  000440  0EFB               	movlw	251
  7313  000442  1643               	andwf	USBStdFeatureReqHandler@p,f,c
  7314  000444  D002               	goto	L8
  7315  000446                     i2l3421:
  7316                           
  7317                           ; BSR set to: 2
  7318                           ;usb_device.c: 2839: else
  7319                           ;usb_device.c: 2840: {
  7320                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7321  000446  0E04               	movlw	4
  7322  000448  1243               	iorwf	USBStdFeatureReqHandler@p,f,c
  7323  00044A                     L8:
  7324  00044A  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7325                           
  7326                           ; BSR set to: 2
  7327                           ;usb_device.c: 2842: }
  7328                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7329  00044C  BF34               	btfsc	52,7,b	;volatile
  7330  00044E  D003               	goto	i2l3427
  7331                           
  7332                           ; BSR set to: 2
  7333                           ;usb_device.c: 2848: {
  7334                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7335  000450  D87D               	call	PL64	;call to abstracted procedure
  7336  000452  0F60               	addlw	low _pBDTEntryOut
  7337  000454  D002               	goto	L9
  7338  000456                     i2l3427:
  7339                           
  7340                           ; BSR set to: 2
  7341                           ;usb_device.c: 2851: else
  7342                           ;usb_device.c: 2852: {
  7343                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7344  000456  D87A               	call	PL64	;call to abstracted procedure
  7345  000458  0F0F               	addlw	low _pBDTEntryIn
  7346  00045A                     L9:
  7347  00045A  6ED9               	movwf	fsr2l,c
  7348  00045C  6ADA               	clrf	fsr2h,c
  7349  00045E  C043  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7350  000462  C044  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7351                           
  7352                           ; BSR set to: 2
  7353                           ;usb_device.c: 2854: }
  7354                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7355  000466  0E03               	movlw	3
  7356  000468  1931               	xorwf	49,w,b	;volatile
  7357  00046A  E114               	bnz	i2l3439
  7358                           
  7359                           ; BSR set to: 2
  7360                           ;usb_device.c: 2858: {
  7361                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7362  00046C  D856               	call	PL24	;call to abstracted procedure
  7363  00046E  AEDF               	btfss	indf2,7,c
  7364  000470  D00B               	goto	i2l624
  7365                           
  7366                           ; BSR set to: 2
  7367                           ;usb_device.c: 2860: {
  7368                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7369  000472  BF34               	btfsc	52,7,b	;volatile
  7370  000474  D003               	goto	i2l3437
  7371                           
  7372                           ; BSR set to: 2
  7373                           ;usb_device.c: 2864: {
  7374                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7375  000476  D86F               	call	PL66	;call to abstracted procedure
  7376  000478  0F70               	addlw	low _ep_data_out
  7377  00047A  D002               	goto	L10
  7378  00047C                     i2l3437:
  7379                           
  7380                           ; BSR set to: 2
  7381                           ;usb_device.c: 2867: else
  7382                           ;usb_device.c: 2868: {
  7383                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7384  00047C  D86C               	call	PL66	;call to abstracted procedure
  7385  00047E  0F73               	addlw	low _ep_data_in
  7386  000480                     L10:
  7387  000480  6ED9               	movwf	fsr2l,c
  7388  000482  6ADA               	clrf	fsr2h,c
  7389  000484  0100               	movlb	0	; () banked
  7390  000486  82DF               	bsf	indf2,1,c
  7391  000488                     i2l624:
  7392                           
  7393                           ;usb_device.c: 2870: }
  7394                           ;usb_device.c: 2871: }
  7395                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7396  000488  D848               	call	PL24	;call to abstracted procedure
  7397  00048A  0E00               	movlw	0
  7398  00048C  84DB               	bsf	plusw2,2,c
  7399                           
  7400                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7401  00048E  D845               	call	PL24	;call to abstracted procedure
  7402  000490  8EDB               	bsf	plusw2,7,c
  7403                           
  7404                           ;usb_device.c: 2876: }
  7405  000492  0C00               	retlw	0
  7406  000494                     i2l3439:
  7407                           
  7408                           ; BSR set to: 2
  7409                           ;usb_device.c: 2877: else
  7410                           ;usb_device.c: 2878: {
  7411                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7412  000494  0E04               	movlw	4
  7413  000496  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7414  000498  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7415                           
  7416                           ; BSR set to: 2
  7417                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7418  00049A  D83F               	call	PL24	;call to abstracted procedure
  7419  00049C  AEDF               	btfss	indf2,7,c
  7420  00049E  D00A               	goto	i2l3449
  7421                           
  7422                           ; BSR set to: 2
  7423                           ;usb_device.c: 2885: {
  7424                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7425  0004A0  D83C               	call	PL24	;call to abstracted procedure
  7426  0004A2  0E7F               	movlw	127
  7427  0004A4  16DF               	andwf	indf2,f,c
  7428                           
  7429                           ; BSR set to: 2
  7430                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7431  0004A6  D839               	call	PL24	;call to abstracted procedure
  7432  0004A8  0E00               	movlw	0
  7433  0004AA  8CDB               	bsf	plusw2,6,c
  7434                           
  7435                           ; BSR set to: 2
  7436                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7437  0004AC  D83B               	call	PL42	;call to abstracted procedure
  7438  0004AE  ECF0  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7439                           
  7440                           ;usb_device.c: 2891: }
  7441  0004B2  D003               	goto	i2l3451
  7442  0004B4                     i2l3449:
  7443                           
  7444                           ; BSR set to: 2
  7445                           ;usb_device.c: 2892: else
  7446                           ;usb_device.c: 2893: {
  7447                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7448  0004B4  D832               	call	PL24	;call to abstracted procedure
  7449  0004B6  0E00               	movlw	0
  7450  0004B8  8CDB               	bsf	plusw2,6,c
  7451  0004BA                     i2l3451:
  7452                           
  7453                           ;usb_device.c: 2896: }
  7454                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7455  0004BA  0E04               	movlw	4
  7456  0004BC  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7457  0004BE  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7458                           
  7459                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7460  0004C0  B242               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7461  0004C2  D003               	goto	i2l632
  7462  0004C4  D82A               	call	PL24	;call to abstracted procedure
  7463  0004C6  AEDF               	btfss	indf2,7,c
  7464  0004C8  D013               	goto	i2l3465
  7465  0004CA                     i2l632:
  7466                           
  7467                           ;usb_device.c: 2907: {
  7468                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7469  0004CA  0102               	movlb	2	; () banked
  7470  0004CC  BF34               	btfsc	52,7,b	;volatile
  7471  0004CE  D003               	goto	i2l3459
  7472                           
  7473                           ; BSR set to: 2
  7474                           ;usb_device.c: 2909: {
  7475                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7476  0004D0  D842               	call	PL66	;call to abstracted procedure
  7477  0004D2  0F70               	addlw	low _ep_data_out
  7478  0004D4  D002               	goto	L11
  7479  0004D6                     i2l3459:
  7480                           
  7481                           ; BSR set to: 2
  7482                           ;usb_device.c: 2912: else
  7483                           ;usb_device.c: 2913: {
  7484                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7485  0004D6  D83F               	call	PL66	;call to abstracted procedure
  7486  0004D8  0F73               	addlw	low _ep_data_in
  7487  0004DA                     L11:
  7488  0004DA  6ED9               	movwf	fsr2l,c
  7489  0004DC  6ADA               	clrf	fsr2h,c
  7490  0004DE  0100               	movlb	0	; () banked
  7491  0004E0  92DF               	bcf	indf2,1,c
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;usb_device.c: 2915: }
  7495                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7496  0004E2  D81B               	call	PL24	;call to abstracted procedure
  7497  0004E4  0E3B               	movlw	59
  7498  0004E6  16DF               	andwf	indf2,f,c
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7502  0004E8  D81D               	call	PL42	;call to abstracted procedure
  7503  0004EA  ECF0  F009         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7504                           
  7505                           ;usb_device.c: 2921: }
  7506  0004EE  D003               	goto	i2l3467
  7507  0004F0                     i2l3465:
  7508                           
  7509                           ;usb_device.c: 2922: else
  7510                           ;usb_device.c: 2923: {
  7511                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7512  0004F0  D814               	call	PL24	;call to abstracted procedure
  7513  0004F2  0E3B               	movlw	59
  7514  0004F4  16DF               	andwf	indf2,f,c
  7515  0004F6                     i2l3467:
  7516                           
  7517                           ;usb_device.c: 2926: }
  7518                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7519  0004F6  0102               	movlb	2	; () banked
  7520  0004F8  5134               	movf	52,w,b	;volatile
  7521  0004FA  0B0F               	andlw	15
  7522  0004FC  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7523  0004FE  6A3F               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  7524  000500  0E53               	movlw	83
  7525  000502  243E               	addwf	??_USBStdFeatureReqHandler,w,c
  7526  000504  6E40               	movwf	USBStdFeatureReqHandler@pUEP,c
  7527  000506  0E0F               	movlw	15
  7528  000508  203F               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  7529  00050A  6E41               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7530                           
  7531                           ; BSR set to: 2
  7532                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7533  00050C  C040  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7534  000510  C041  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7535  000514  0EFE               	movlw	254
  7536  000516  16DF               	andwf	indf2,f,c
  7537  000518  0CFE               	retlw	254	;funcret
  7538  00051A                     __end_of_USBStdFeatureReqHandler:
  7539                           	opt stack 0
  7540  00051A                     PL24:
  7541                           	opt stack 17
  7542  00051A  C043  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7543  00051E  C044  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7544  000522  0012               	return	
  7545  000524                     __end_ofPL24:
  7546                           	opt stack 0
  7547  000524                     PL42:
  7548                           	opt stack 17
  7549  000524  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7550  000526  0E05               	movlw	5
  7551  000528  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7552  00052A  C043  F038         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7553  00052E  C044  F039         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7554  000532  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7555  000534  0E02               	movlw	2
  7556  000536  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7557  000538  0C02               	retlw	2
  7558  00053A                     __end_ofPL42:
  7559                           	opt stack 0
  7560  00053A                     PL62:
  7561                           	opt stack 17
  7562  00053A  CFDE F043          	movff	postinc2,USBStdFeatureReqHandler@p
  7563  00053E  CFDD F044          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7564  000542  5134               	movf	52,w,b	;volatile
  7565  000544  0B0F               	andlw	15
  7566  000546  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7567  000548  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7568  00054A  0012               	return	
  7569  00054C                     __end_ofPL62:
  7570                           	opt stack 0
  7571  00054C                     PL64:
  7572                           	opt stack 21
  7573  00054C  5134               	movf	52,w,b	;volatile
  7574  00054E  0B0F               	andlw	15
  7575  000550  0D02               	mullw	2
  7576  000552  50F3               	movf	prodl,w,c
  7577  000554  0012               	return	
  7578  000556                     __end_ofPL64:
  7579                           	opt stack 0
  7580  000556                     PL66:
  7581                           	opt stack 17
  7582  000556  5134               	movf	52,w,b	;volatile
  7583  000558  0B0F               	andlw	15
  7584  00055A  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7585  00055C  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7586  00055E  0012               	return	
  7587  000560                     __end_ofPL66:
  7588                           	opt stack 0
  7589                           tblptru	equ	0xFF8
  7590                           tblptrh	equ	0xFF7
  7591                           tblptrl	equ	0xFF6
  7592                           tablat	equ	0xFF5
  7593                           prodh	equ	0xFF4
  7594                           prodl	equ	0xFF3
  7595                           intcon	equ	0xFF2
  7596                           postinc0	equ	0xFEE
  7597                           wreg	equ	0xFE8
  7598                           indf1	equ	0xFE7
  7599                           postdec1	equ	0xFE5
  7600                           fsr1h	equ	0xFE2
  7601                           fsr1l	equ	0xFE1
  7602                           indf2	equ	0xFDF
  7603                           postinc2	equ	0xFDE
  7604                           postdec2	equ	0xFDD
  7605                           plusw2	equ	0xFDB
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7611 ;; Defined at:
  7612 ;;		line 51 in file "picLibs/usb_events.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  event           2   12[COMRAM] enum E3370
  7615 ;;  pdata           2   14[COMRAM] PTR void 
  7616 ;;		 -> RAM(767), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7617 ;;		 -> BDT(48), 
  7618 ;;  size            2   16[COMRAM] unsigned int 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;		None
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1    wreg      unsigned char 
  7623 ;; Registers used:
  7624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7630 ;;      Params:         6       0       0       0       0
  7631 ;;      Locals:         0       0       0       0       0
  7632 ;;      Temps:          2       0       0       0       0
  7633 ;;      Totals:         8       0       0       0       0
  7634 ;;Total ram usage:        8 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    3
  7637 ;; This function calls:
  7638 ;;		_APP_DeviceCDCBasicDemoInitialize
  7639 ;;		_APP_LEDUpdateUSBStatus
  7640 ;;		_CDCInitEP
  7641 ;;		_USBCheckCDCRequest
  7642 ;;		i2_SYSTEM_Initialize
  7643 ;; This function is called by:
  7644 ;;		_USBDeviceTasks
  7645 ;;		_USBStdSetCfgHandler
  7646 ;;		_USBSuspend
  7647 ;;		_USBWakeFromSuspend
  7648 ;;		_USBCtrlTrfSetupHandler
  7649 ;;		_USBCheckStdRequest
  7650 ;;		_USBStdFeatureReqHandler
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text40
  7655  0013E0                     __ptext40:
  7656                           	opt stack 0
  7657  0013E0                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7658                           	opt stack 21
  7659                           
  7660                           ;usb_events.c: 53: switch( (int) event )
  7661                           
  7662                           ;incstack = 0
  7663  0013E0  D00E               	goto	i2l3179
  7664  0013E2                     i2l3167:
  7665                           
  7666                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  7667  0013E2  EC81  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7668                           
  7669                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7670  0013E6  0E01               	movlw	1
  7671  0013E8  EFDE  F00C         	goto	i2_SYSTEM_Initialize
  7672  0013EC                     i2l3169:
  7673                           
  7674                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  7675  0013EC  EC81  F009         	call	_APP_LEDUpdateUSBStatus	;wreg free
  7676                           
  7677                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7678  0013F0  0E02               	movlw	2
  7679  0013F2  EFDE  F00C         	goto	i2_SYSTEM_Initialize
  7680  0013F6                     i2l3171:
  7681                           
  7682                           ;usb_events.c: 91: CDCInitEP();
  7683  0013F6  ECAF  F00A         	call	_CDCInitEP	;wreg free
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;usb_events.c: 92: APP_DeviceCDCBasicDemoInitialize();
  7687  0013FA  EF16  F00D         	goto	_APP_DeviceCDCBasicDemoInitialize	;wreg free
  7688  0013FE                     i2l3179:
  7689  0013FE  C036  F03C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7690  001402  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7691                           
  7692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7693                           ; Switch size 1, requested type "space"
  7694                           ; Number of cases is 2, Range of values is 0 to 127
  7695                           ; switch strategies available:
  7696                           ; Name         Instructions Cycles
  7697                           ; simple_byte            7     4 (average)
  7698                           ;	Chosen strategy is simple_byte
  7699  001406  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  7700  001408  E004               	bz	i2l5055
  7701  00140A  0A7F               	xorlw	127	; case 127
  7702  00140C  A4D8               	btfss	status,2,c
  7703  00140E  0012               	return	
  7704  001410  D01A               	goto	i2l5057
  7705  001412                     i2l5055:
  7706                           
  7707                           ; Switch size 1, requested type "space"
  7708                           ; Number of cases is 8, Range of values is 1 to 117
  7709                           ; switch strategies available:
  7710                           ; Name         Instructions Cycles
  7711                           ; simple_byte           25    13 (average)
  7712                           ;	Chosen strategy is simple_byte
  7713  001412  503C               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7714  001414  0A01               	xorlw	1	; case 1
  7715  001416  E0EF               	bz	i2l3171
  7716  001418  0A03               	xorlw	3	; case 2
  7717  00141A  B4D8               	btfsc	status,2,c
  7718  00141C  0012               	return	
  7719  00141E  0A01               	xorlw	1	; case 3
  7720  001420  E102 EF59  F008    	bz	_USBCheckCDCRequest
  7721  001426  0A06               	xorlw	6	; case 5
  7722  001428  B4D8               	btfsc	status,2,c
  7723  00142A  0012               	return	
  7724  00142C  0A77               	xorlw	119	; case 114
  7725  00142E  B4D8               	btfsc	status,2,c
  7726  001430  0012               	return	
  7727  001432  0A01               	xorlw	1	; case 115
  7728  001434  E102 EF81  F009    	bz	_APP_LEDUpdateUSBStatus
  7729  00143A  0A07               	xorlw	7	; case 116
  7730  00143C  E0D7               	bz	i2l3169
  7731  00143E  0A01               	xorlw	1	; case 117
  7732  001440  A4D8               	btfss	status,2,c
  7733  001442  0012               	return	
  7734  001444  D7CE               	goto	i2l3167
  7735  001446                     i2l5057:
  7736                           
  7737                           ; Switch size 1, requested type "space"
  7738                           ; Number of cases is 1, Range of values is 255 to 255
  7739                           ; switch strategies available:
  7740                           ; Name         Instructions Cycles
  7741                           ; simple_byte            4     3 (average)
  7742                           ;	Chosen strategy is simple_byte
  7743  001446  1C3C               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  7744  001448  0012               	return	
  7745  00144A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7746                           	opt stack 0
  7747                           tblptru	equ	0xFF8
  7748                           tblptrh	equ	0xFF7
  7749                           tblptrl	equ	0xFF6
  7750                           tablat	equ	0xFF5
  7751                           prodh	equ	0xFF4
  7752                           prodl	equ	0xFF3
  7753                           intcon	equ	0xFF2
  7754                           postinc0	equ	0xFEE
  7755                           wreg	equ	0xFE8
  7756                           indf1	equ	0xFE7
  7757                           postdec1	equ	0xFE5
  7758                           fsr1h	equ	0xFE2
  7759                           fsr1l	equ	0xFE1
  7760                           indf2	equ	0xFDF
  7761                           postinc2	equ	0xFDE
  7762                           postdec2	equ	0xFDD
  7763                           plusw2	equ	0xFDB
  7764                           fsr2h	equ	0xFDA
  7765                           fsr2l	equ	0xFD9
  7766                           status	equ	0xFD8
  7767                           
  7768 ;; *************** function i2_SYSTEM_Initialize *****************
  7769 ;; Defined at:
  7770 ;;		line 66 in file "picLibs/system.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  state           1    wreg     enum E3329
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;  state           1    1[COMRAM] enum E3329
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7784 ;;      Params:         0       0       0       0       0
  7785 ;;      Locals:         1       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0
  7787 ;;      Totals:         1       0       0       0       0
  7788 ;;Total ram usage:        1 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    1
  7791 ;; This function calls:
  7792 ;;		i2_BUTTON_Enable
  7793 ;;		i2_LED_Enable
  7794 ;; This function is called by:
  7795 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text41
  7800  0019BC                     __ptext41:
  7801                           	opt stack 0
  7802  0019BC                     i2_SYSTEM_Initialize:
  7803                           	opt stack 22
  7804                           
  7805                           ;incstack = 0
  7806                           ;i2SYSTEM_Initialize@state stored from wreg
  7807  0019BC  6E2B               	movwf	i2SYSTEM_Initialize@state,c
  7808                           
  7809                           ;system.c: 68: switch(state)
  7810  0019BE  D006               	goto	i2l3161
  7811  0019C0                     i2l3157:
  7812                           
  7813                           ;system.c: 71: LED_Enable(LED_D1);
  7814  0019C0  0E01               	movlw	1
  7815  0019C2  EC41  F00C         	call	i2_LED_Enable
  7816                           
  7817                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  7818  0019C6  0E01               	movlw	1
  7819  0019C8  EF38  F00D         	goto	i2_BUTTON_Enable
  7820  0019CC                     i2l3161:
  7821  0019CC  502B               	movf	i2SYSTEM_Initialize@state,w,c
  7822                           
  7823                           ; Switch size 1, requested type "space"
  7824                           ; Number of cases is 3, Range of values is 0 to 2
  7825                           ; switch strategies available:
  7826                           ; Name         Instructions Cycles
  7827                           ; simple_byte           10     6 (average)
  7828                           ;	Chosen strategy is simple_byte
  7829  0019CE  E0F8               	bz	i2l3157
  7830  0019D0  D000               	goto	PL104	;call to abstracted procedure
  7831  0019D2                     __end_ofi2_SYSTEM_Initialize:
  7832                           	opt stack 0
  7833  0019D2                     PL104:
  7834                           	opt stack 19
  7835  0019D2  0A01               	xorlw	1	; case 1
  7836  0019D4  A4D8               	btfss	status,2,c
  7837  0019D6  0A03               	xorlw	3	; case 2
  7838  0019D8  0012               	return	
  7839  0019DA                     __end_ofPL104:
  7840                           	opt stack 0
  7841                           tblptru	equ	0xFF8
  7842                           tblptrh	equ	0xFF7
  7843                           tblptrl	equ	0xFF6
  7844                           tablat	equ	0xFF5
  7845                           prodh	equ	0xFF4
  7846                           prodl	equ	0xFF3
  7847                           intcon	equ	0xFF2
  7848                           postinc0	equ	0xFEE
  7849                           wreg	equ	0xFE8
  7850                           indf1	equ	0xFE7
  7851                           postdec1	equ	0xFE5
  7852                           fsr1h	equ	0xFE2
  7853                           fsr1l	equ	0xFE1
  7854                           indf2	equ	0xFDF
  7855                           postinc2	equ	0xFDE
  7856                           postdec2	equ	0xFDD
  7857                           plusw2	equ	0xFDB
  7858                           fsr2h	equ	0xFDA
  7859                           fsr2l	equ	0xFD9
  7860                           status	equ	0xFD8
  7861                           
  7862 ;; *************** function i2_LED_Enable *****************
  7863 ;; Defined at:
  7864 ;;		line 220 in file "picLibs/leds.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  led             1    wreg     enum E2
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  led             1    0[COMRAM] enum E2
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2, status,0
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7878 ;;      Params:         0       0       0       0       0
  7879 ;;      Locals:         1       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0
  7881 ;;      Totals:         1       0       0       0       0
  7882 ;;Total ram usage:        1 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		i2_SYSTEM_Initialize
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           	psect	text42
  7892  001882                     __ptext42:
  7893                           	opt stack 0
  7894  001882                     i2_LED_Enable:
  7895                           	opt stack 22
  7896                           
  7897                           ;incstack = 0
  7898                           ;i2LED_Enable@led stored from wreg
  7899  001882  6E2A               	movwf	i2LED_Enable@led,c
  7900                           
  7901                           ;leds.c: 222: switch(led)
  7902  001884  D008               	goto	i2l3017
  7903  001886                     i2l209:
  7904                           
  7905                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  7906  001886  9094               	bcf	3988,0,c	;volatile
  7907                           
  7908                           ;leds.c: 226: break;
  7909  001888  0012               	return	
  7910  00188A                     i2l211:
  7911                           
  7912                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  7913  00188A  9294               	bcf	3988,1,c	;volatile
  7914                           
  7915                           ;leds.c: 230: break;
  7916  00188C  0012               	return	
  7917  00188E                     i2l212:
  7918                           
  7919                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  7920  00188E  9494               	bcf	3988,2,c	;volatile
  7921                           
  7922                           ;leds.c: 234: break;
  7923  001890  0012               	return	
  7924  001892                     i2l213:
  7925                           
  7926                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  7927  001892  9694               	bcf	3988,3,c	;volatile
  7928                           
  7929                           ;leds.c: 238: break;
  7930  001894  0012               	return	
  7931  001896                     i2l3017:
  7932  001896  502A               	movf	i2LED_Enable@led,w,c
  7933                           
  7934                           ; Switch size 1, requested type "space"
  7935                           ; Number of cases is 5, Range of values is 0 to 4
  7936                           ; switch strategies available:
  7937                           ; Name         Instructions Cycles
  7938                           ; simple_byte           16     9 (average)
  7939                           ;	Chosen strategy is simple_byte
  7940  001898  B4D8               	btfsc	status,2,c
  7941  00189A  0012               	return	
  7942  00189C  0A01               	xorlw	1	; case 1
  7943  00189E  E0F3               	bz	i2l209
  7944  0018A0  0A03               	xorlw	3	; case 2
  7945  0018A2  E0F3               	bz	i2l211
  7946  0018A4  0A01               	xorlw	1	; case 3
  7947  0018A6  E0F3               	bz	i2l212
  7948  0018A8  0A07               	xorlw	7	; case 4
  7949  0018AA  E0F3               	bz	i2l213
  7950  0018AC  0012               	return		;funcret
  7951  0018AE                     __end_ofi2_LED_Enable:
  7952                           	opt stack 0
  7953                           tblptru	equ	0xFF8
  7954                           tblptrh	equ	0xFF7
  7955                           tblptrl	equ	0xFF6
  7956                           tablat	equ	0xFF5
  7957                           prodh	equ	0xFF4
  7958                           prodl	equ	0xFF3
  7959                           intcon	equ	0xFF2
  7960                           postinc0	equ	0xFEE
  7961                           wreg	equ	0xFE8
  7962                           indf1	equ	0xFE7
  7963                           postdec1	equ	0xFE5
  7964                           fsr1h	equ	0xFE2
  7965                           fsr1l	equ	0xFE1
  7966                           indf2	equ	0xFDF
  7967                           postinc2	equ	0xFDE
  7968                           postdec2	equ	0xFDD
  7969                           plusw2	equ	0xFDB
  7970                           fsr2h	equ	0xFDA
  7971                           fsr2l	equ	0xFD9
  7972                           status	equ	0xFD8
  7973                           
  7974 ;; *************** function i2_BUTTON_Enable *****************
  7975 ;; Defined at:
  7976 ;;		line 85 in file "picLibs/buttons.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  button          1    wreg     enum E3304
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  button          1    0[COMRAM] enum E3304
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      void 
  7983 ;; Registers used:
  7984 ;;		wreg, status,2, status,0
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  7990 ;;      Params:         0       0       0       0       0
  7991 ;;      Locals:         1       0       0       0       0
  7992 ;;      Temps:          0       0       0       0       0
  7993 ;;      Totals:         1       0       0       0       0
  7994 ;;Total ram usage:        1 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; This function calls:
  7997 ;;		Nothing
  7998 ;; This function is called by:
  7999 ;;		i2_SYSTEM_Initialize
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text43
  8004  001A70                     __ptext43:
  8005                           	opt stack 0
  8006  001A70                     i2_BUTTON_Enable:
  8007                           	opt stack 22
  8008                           
  8009                           ;incstack = 0
  8010                           ;i2BUTTON_Enable@button stored from wreg
  8011  001A70  6E2A               	movwf	i2BUTTON_Enable@button,c
  8012                           
  8013                           ;buttons.c: 87: switch(button)
  8014  001A72  502A               	movf	i2BUTTON_Enable@button,w,c
  8015                           
  8016                           ; Switch size 1, requested type "space"
  8017                           ; Number of cases is 2, Range of values is 0 to 1
  8018                           ; switch strategies available:
  8019                           ; Name         Instructions Cycles
  8020                           ; simple_byte            7     4 (average)
  8021                           ;	Chosen strategy is simple_byte
  8022  001A74  D000               	goto	PL120	;call to abstracted procedure
  8023  001A76                     __end_ofi2_BUTTON_Enable:
  8024                           	opt stack 0
  8025  001A76                     PL120:
  8026                           	opt stack 19
  8027  001A76  A4D8               	btfss	status,2,c
  8028  001A78  0A01               	xorlw	1	; case 1
  8029  001A7A  0012               	return	
  8030  001A7C                     __end_ofPL120:
  8031                           	opt stack 0
  8032                           tblptru	equ	0xFF8
  8033                           tblptrh	equ	0xFF7
  8034                           tblptrl	equ	0xFF6
  8035                           tablat	equ	0xFF5
  8036                           prodh	equ	0xFF4
  8037                           prodl	equ	0xFF3
  8038                           intcon	equ	0xFF2
  8039                           postinc0	equ	0xFEE
  8040                           wreg	equ	0xFE8
  8041                           indf1	equ	0xFE7
  8042                           postdec1	equ	0xFE5
  8043                           fsr1h	equ	0xFE2
  8044                           fsr1l	equ	0xFE1
  8045                           indf2	equ	0xFDF
  8046                           postinc2	equ	0xFDE
  8047                           postdec2	equ	0xFDD
  8048                           plusw2	equ	0xFDB
  8049                           fsr2h	equ	0xFDA
  8050                           fsr2l	equ	0xFD9
  8051                           status	equ	0xFD8
  8052                           
  8053 ;; *************** function _USBCheckCDCRequest *****************
  8054 ;; Defined at:
  8055 ;;		line 147 in file "picLibs/usb_device_cdc.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;		None
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 3F/2
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8069 ;;      Params:         0       0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0
  8071 ;;      Temps:          0       0       0       0       0
  8072 ;;      Totals:         0       0       0       0       0
  8073 ;;Total ram usage:        0 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text44
  8083  0010B2                     __ptext44:
  8084                           	opt stack 0
  8085  0010B2                     _USBCheckCDCRequest:
  8086                           	opt stack 23
  8087                           
  8088                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8089                           
  8090                           ;incstack = 0
  8091  0010B2  0102               	movlb	2	; () banked
  8092  0010B4  5130               	movf	48,w,b	;volatile
  8093  0010B6  0B1F               	andlw	31
  8094  0010B8  06E8               	decf	wreg,f,c
  8095  0010BA  E001               	bz	i2l3095
  8096  0010BC  0012               	return	
  8097  0010BE                     i2l3095:
  8098                           
  8099                           ; BSR set to: 2
  8100                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8101  0010BE  3930               	swapf	48,w,b	;volatile
  8102  0010C0  32E8               	rrcf	wreg,f,c
  8103  0010C2  0B03               	andlw	3
  8104  0010C4  06E8               	decf	wreg,f,c
  8105  0010C6  E001               	bz	i2l3099
  8106  0010C8  0012               	return	
  8107  0010CA                     i2l3099:
  8108                           
  8109                           ; BSR set to: 2
  8110                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8111                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8112  0010CA  5134               	movf	52,w,b	;volatile
  8113  0010CC  E027               	bz	i2l3135
  8114                           
  8115                           ; BSR set to: 2
  8116  0010CE  0534               	decf	52,w,b	;volatile
  8117  0010D0  E025               	bz	i2l3135
  8118  0010D2  0012               	return	
  8119  0010D4                     i2l3105:
  8120                           
  8121                           ; BSR set to: 2
  8122                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8123  0010D4  0EA0               	movlw	low _dummy_encapsulated_cmd_response
  8124  0010D6  6E09               	movwf	_inPipes,c	;volatile
  8125  0010D8  6A0A               	clrf	_inPipes+1,c	;volatile
  8126                           
  8127                           ; BSR set to: 2
  8128                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8129  0010DA  6A0E               	clrf	_inPipes+5,c	;volatile
  8130  0010DC  0E08               	movlw	8
  8131  0010DE  6E0D               	movwf	_inPipes+4,c	;volatile
  8132                           
  8133                           ; BSR set to: 2
  8134                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8135  0010E0  800C               	bsf	_inPipes+3,0,c	;volatile
  8136                           
  8137                           ; BSR set to: 2
  8138                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8139  0010E2  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8140                           
  8141                           ;usb_device_cdc.c: 175: break;
  8142  0010E4  0C08               	retlw	8
  8143  0010E6                     i2l3113:
  8144                           
  8145                           ; BSR set to: 2
  8146                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8147  0010E6  0EA0               	movlw	low _dummy_encapsulated_cmd_response
  8148  0010E8  6E09               	movwf	_inPipes,c	;volatile
  8149  0010EA  6A0A               	clrf	_inPipes+1,c	;volatile
  8150                           
  8151                           ; BSR set to: 2
  8152                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8153  0010EC  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8154                           
  8155                           ;usb_device_cdc.c: 180: break;
  8156  0010EE  0012               	return	
  8157  0010F0                     i2l699:
  8158                           
  8159                           ; BSR set to: 2
  8160                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8161  0010F0  C236 F005          	movff	566,_outPipes+4	;volatile
  8162  0010F4  C237 F006          	movff	567,_outPipes+5	;volatile
  8163                           
  8164                           ; BSR set to: 2
  8165                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8166  0010F8  0EA8               	movlw	low _line_coding
  8167  0010FA  6E01               	movwf	_outPipes,c	;volatile
  8168                           
  8169                           ; BSR set to: 2
  8170                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8171  0010FC  6A07               	clrf	_outPipes+6,c	;volatile
  8172  0010FE  6A08               	clrf	_outPipes+7,c	;volatile
  8173                           
  8174                           ; BSR set to: 2
  8175                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8176  001100  8E04               	bsf	_outPipes+3,7,c	;volatile
  8177                           
  8178                           ;usb_device_cdc.c: 189: break;
  8179  001102  0012               	return	
  8180  001104                     i2l3123:
  8181                           
  8182                           ; BSR set to: 2
  8183                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8184  001104  0EA8               	movlw	low _line_coding
  8185  001106  6E09               	movwf	_inPipes,c	;volatile
  8186  001108  6A0A               	clrf	_inPipes+1,c	;volatile
  8187                           
  8188                           ; BSR set to: 2
  8189  00110A  6A0E               	clrf	_inPipes+5,c	;volatile
  8190  00110C  0E07               	movlw	7
  8191  00110E  6E0D               	movwf	_inPipes+4,c	;volatile
  8192                           
  8193                           ; BSR set to: 2
  8194  001110  0EC1               	movlw	193
  8195  001112  6E0C               	movwf	_inPipes+3,c	;volatile
  8196                           
  8197                           ;usb_device_cdc.c: 196: break;
  8198  001114  0CC1               	retlw	193
  8199  001116                     i2l3129:
  8200                           
  8201                           ; BSR set to: 2
  8202                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8203  001116  5132               	movf	50,w,b	;volatile
  8204                           
  8205                           ; BSR set to: 2
  8206                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8207  001118  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8208                           
  8209                           ;usb_device_cdc.c: 232: break;
  8210  00111A  0012               	return	
  8211  00111C                     i2l3135:
  8212                           
  8213                           ; BSR set to: 2
  8214  00111C  5131               	movf	49,w,b	;volatile
  8215                           
  8216                           ; Switch size 1, requested type "space"
  8217                           ; Number of cases is 5, Range of values is 0 to 34
  8218                           ; switch strategies available:
  8219                           ; Name         Instructions Cycles
  8220                           ; simple_byte           16     9 (average)
  8221                           ;	Chosen strategy is simple_byte
  8222  00111E  E0DA               	bz	i2l3105
  8223  001120  0A01               	xorlw	1	; case 1
  8224  001122  E0E1               	bz	i2l3113
  8225  001124  0A21               	xorlw	33	; case 32
  8226  001126  E0E4               	bz	i2l699
  8227  001128  0A01               	xorlw	1	; case 33
  8228  00112A  E0EC               	bz	i2l3123
  8229  00112C  0A03               	xorlw	3	; case 34
  8230  00112E  E0F3               	bz	i2l3129
  8231                           
  8232                           ; BSR set to: 2
  8233  001130  0012               	return		;funcret
  8234  001132                     __end_of_USBCheckCDCRequest:
  8235                           	opt stack 0
  8236                           tblptru	equ	0xFF8
  8237                           tblptrh	equ	0xFF7
  8238                           tblptrl	equ	0xFF6
  8239                           tablat	equ	0xFF5
  8240                           prodh	equ	0xFF4
  8241                           prodl	equ	0xFF3
  8242                           intcon	equ	0xFF2
  8243                           postinc0	equ	0xFEE
  8244                           wreg	equ	0xFE8
  8245                           indf1	equ	0xFE7
  8246                           postdec1	equ	0xFE5
  8247                           fsr1h	equ	0xFE2
  8248                           fsr1l	equ	0xFE1
  8249                           indf2	equ	0xFDF
  8250                           postinc2	equ	0xFDE
  8251                           postdec2	equ	0xFDD
  8252                           plusw2	equ	0xFDB
  8253                           fsr2h	equ	0xFDA
  8254                           fsr2l	equ	0xFD9
  8255                           status	equ	0xFD8
  8256                           
  8257 ;; *************** function _CDCInitEP *****************
  8258 ;; Defined at:
  8259 ;;		line 294 in file "picLibs/usb_device_cdc.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 3F/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8273 ;;      Params:         0       0       0       0       0
  8274 ;;      Locals:         0       0       0       0       0
  8275 ;;      Temps:          0       0       0       0       0
  8276 ;;      Totals:         0       0       0       0       0
  8277 ;;Total ram usage:        0 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    2
  8280 ;; This function calls:
  8281 ;;		_USBEnableEndpoint
  8282 ;;		i2_USBTransferOnePacket
  8283 ;; This function is called by:
  8284 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text45
  8289  00155E                     __ptext45:
  8290                           	opt stack 0
  8291  00155E                     _CDCInitEP:
  8292                           	opt stack 21
  8293                           
  8294                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8295                           
  8296                           ; BSR set to: 2
  8297                           ;incstack = 0
  8298  00155E  0100               	movlb	0	; () banked
  8299  001560  6BA8               	clrf	_line_coding& (0+255),b
  8300  001562  0E4B               	movlw	75
  8301  001564  6FA9               	movwf	(_line_coding+1)& (0+255),b
  8302  001566  6BAA               	clrf	(_line_coding+2)& (0+255),b
  8303  001568  6BAB               	clrf	(_line_coding+3)& (0+255),b
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8307  00156A  6BAC               	clrf	(_line_coding+4)& (0+255),b
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8311  00156C  6BAD               	clrf	(_line_coding+5)& (0+255),b
  8312                           
  8313                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8314  00156E  0E08               	movlw	8
  8315  001570  6FAE               	movwf	(_line_coding+6)& (0+255),b
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8319  001572  6A1C               	clrf	_cdc_rx_len,c
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8323  001574  0E1A               	movlw	26
  8324  001576  6E32               	movwf	USBEnableEndpoint@options,c
  8325  001578  0E01               	movlw	1
  8326  00157A  ECA8  F00B         	call	_USBEnableEndpoint
  8327                           
  8328                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8329  00157E  0E1E               	movlw	30
  8330  001580  6E32               	movwf	USBEnableEndpoint@options,c
  8331  001582  0E02               	movlw	2
  8332  001584  ECA8  F00B         	call	_USBEnableEndpoint
  8333                           
  8334                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8335  001588  0E00               	movlw	0
  8336  00158A  6E2A               	movwf	i2USBTransferOnePacket@dir,c
  8337  00158C  0E80               	movlw	128
  8338  00158E  6E2B               	movwf	i2USBTransferOnePacket@data,c
  8339  001590  0E02               	movlw	2
  8340  001592  6E2C               	movwf	i2USBTransferOnePacket@data+1,c
  8341  001594  0E0F               	movlw	15
  8342  001596  6E2D               	movwf	i2USBTransferOnePacket@len,c
  8343  001598  0E02               	movlw	2
  8344  00159A  EC29  F006         	call	i2_USBTransferOnePacket
  8345  00159E  C02A  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  8346  0015A2  C02B  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8347                           
  8348                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8349  0015A6  0100               	movlb	0	; () banked
  8350  0015A8  6B76               	clrf	_CDCDataInHandle& (0+255),b
  8351  0015AA  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
  8352                           
  8353                           ; BSR set to: 0
  8354                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8355  0015AC  6B80               	clrf	_cdc_trf_state& (0+255),b
  8356                           
  8357                           ; BSR set to: 0
  8358  0015AE  0012               	return		;funcret
  8359  0015B0                     __end_of_CDCInitEP:
  8360                           	opt stack 0
  8361                           tblptru	equ	0xFF8
  8362                           tblptrh	equ	0xFF7
  8363                           tblptrl	equ	0xFF6
  8364                           tablat	equ	0xFF5
  8365                           prodh	equ	0xFF4
  8366                           prodl	equ	0xFF3
  8367                           intcon	equ	0xFF2
  8368                           postinc0	equ	0xFEE
  8369                           wreg	equ	0xFE8
  8370                           indf1	equ	0xFE7
  8371                           postdec1	equ	0xFE5
  8372                           fsr1h	equ	0xFE2
  8373                           fsr1l	equ	0xFE1
  8374                           indf2	equ	0xFDF
  8375                           postinc2	equ	0xFDE
  8376                           postdec2	equ	0xFDD
  8377                           plusw2	equ	0xFDB
  8378                           fsr2h	equ	0xFDA
  8379                           fsr2l	equ	0xFD9
  8380                           status	equ	0xFD8
  8381                           
  8382 ;; *************** function i2_USBTransferOnePacket *****************
  8383 ;; Defined at:
  8384 ;;		line 995 in file "picLibs/usb_device.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;  ep              1    wreg     unsigned char 
  8387 ;;  dir             1    0[COMRAM] unsigned char 
  8388 ;;  data            2    1[COMRAM] PTR unsigned char 
  8389 ;;		 -> cdc_data_tx(15), cdc_data_rx(15), NULL(0), 
  8390 ;;  len             1    3[COMRAM] unsigned char 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  ep              1    6[COMRAM] unsigned char 
  8393 ;;  USBTransferO    2    7[COMRAM] PTR volatile struct __BD
  8394 ;;		 -> RAM(767), NULL(0), BDT(48), 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  2    0[COMRAM] PTR void 
  8397 ;; Registers used:
  8398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8404 ;;      Params:         4       0       0       0       0
  8405 ;;      Locals:         3       0       0       0       0
  8406 ;;      Temps:          2       0       0       0       0
  8407 ;;      Totals:         9       0       0       0       0
  8408 ;;Total ram usage:        9 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_CDCInitEP
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text46
  8418  000C52                     __ptext46:
  8419                           	opt stack 0
  8420  000C52                     i2_USBTransferOnePacket:
  8421                           	opt stack 22
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;incstack = 0
  8425                           ;i2USBTransferOnePacket@ep stored from wreg
  8426  000C52  6E30               	movwf	i2USBTransferOnePacket@ep,c
  8427                           
  8428                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8429                           ;usb_device.c: 1000: if(dir != 0)
  8430  000C54  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8431  000C56  E003               	bz	i2l3023
  8432                           
  8433                           ;usb_device.c: 1001: {
  8434                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8435  000C58  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8436  000C5A  D845               	call	PL84	;call to abstracted procedure
  8437  000C5C  D002               	goto	L12
  8438  000C5E                     i2l3023:
  8439                           
  8440                           ;usb_device.c: 1005: else
  8441                           ;usb_device.c: 1006: {
  8442                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8443  000C5E  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8444  000C60  D84B               	call	PL92	;call to abstracted procedure
  8445  000C62                     L12:
  8446  000C62  6ED9               	movwf	fsr2l,c
  8447  000C64  6ADA               	clrf	fsr2h,c
  8448  000C66  CFDE F031          	movff	postinc2,i2USBTransferOnePacket@handle
  8449  000C6A  CFDD F032          	movff	postdec2,i2USBTransferOnePacket@handle+1
  8450                           
  8451                           ;usb_device.c: 1009: }
  8452                           ;usb_device.c: 1013: if(handle == 0)
  8453  000C6E  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8454  000C70  1032               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  8455  000C72  E103               	bnz	i2l3029
  8456                           
  8457                           ;usb_device.c: 1014: {
  8458                           ;usb_device.c: 1015: return 0;
  8459  000C74  6A2A               	clrf	?i2_USBTransferOnePacket,c
  8460  000C76  6A2B               	clrf	?i2_USBTransferOnePacket+1,c
  8461  000C78  0012               	return	
  8462  000C7A                     i2l3029:
  8463                           
  8464                           ;usb_device.c: 1016: }
  8465                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8466  000C7A  EE20 F002          	lfsr	2,2
  8467  000C7E  D840               	call	PL102	;call to abstracted procedure
  8468  000C80  C02B  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  8469  000C84  C02C  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  8470                           
  8471                           ;usb_device.c: 1030: handle->CNT = len;
  8472  000C88  EE20 F001          	lfsr	2,1
  8473  000C8C  D839               	call	PL102	;call to abstracted procedure
  8474  000C8E  C02D  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  8475                           
  8476                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8477  000C92  D82D               	call	PL86	;call to abstracted procedure
  8478  000C94  0E40               	movlw	64
  8479  000C96  16DF               	andwf	indf2,f,c
  8480                           
  8481                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8482  000C98  D82A               	call	PL86	;call to abstracted procedure
  8483  000C9A  0E00               	movlw	0
  8484  000C9C  86DB               	bsf	plusw2,3,c
  8485                           
  8486                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8487  000C9E  D827               	call	PL86	;call to abstracted procedure
  8488  000CA0  8EDB               	bsf	plusw2,7,c
  8489                           
  8490                           ;usb_device.c: 1036: if(dir != 0)
  8491  000CA2  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8492  000CA4  E006               	bz	i2l3041
  8493                           
  8494                           ;usb_device.c: 1037: {
  8495                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8496  000CA6  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8497  000CA8  ECB3  F005         	call	PL32	;call to abstracted procedure
  8498  000CAC  D812               	call	PL56	;call to abstracted procedure
  8499  000CAE  0F0F               	addlw	low _pBDTEntryIn
  8500  000CB0  D005               	goto	L13
  8501  000CB2                     i2l3041:
  8502                           
  8503                           ;usb_device.c: 1041: else
  8504                           ;usb_device.c: 1042: {
  8505                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8506  000CB2  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8507  000CB4  ECAD  F005         	call	PL28	;call to abstracted procedure
  8508  000CB8  D80C               	call	PL56	;call to abstracted procedure
  8509  000CBA  0F60               	addlw	low _pBDTEntryOut
  8510  000CBC                     L13:
  8511  000CBC  6ED9               	movwf	fsr2l,c
  8512  000CBE  6ADA               	clrf	fsr2h,c
  8513  000CC0  C02E  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
  8514  000CC4  C02F  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
  8515                           
  8516                           ;usb_device.c: 1045: }
  8517                           ;usb_device.c: 1046: return (void*)handle;
  8518  000CC8  C031  F02A         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  8519  000CCC  C032  F02B         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  8520  000CD0  0012               	return		;funcret
  8521  000CD2                     __end_ofi2_USBTransferOnePacket:
  8522                           	opt stack 0
  8523  000CD2                     PL56:
  8524                           	opt stack 22
  8525  000CD2  CFDE F02E          	movff	postinc2,??i2_USBTransferOnePacket
  8526  000CD6  CFDD F02F          	movff	postdec2,??i2_USBTransferOnePacket+1
  8527  000CDA  0E04               	movlw	4
  8528  000CDC  1A2E               	xorwf	??i2_USBTransferOnePacket,f,c
  8529  000CDE  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8530  000CE0  0D02               	mullw	2
  8531  000CE2  50F3               	movf	prodl,w,c
  8532  000CE4  0012               	return	
  8533  000CE6                     __end_ofPL56:
  8534                           	opt stack 0
  8535  000CE6                     PL84:
  8536                           	opt stack 18
  8537  000CE6  0D02               	mullw	2
  8538  000CE8  50F3               	movf	prodl,w,c
  8539  000CEA  0F0F               	addlw	low _pBDTEntryIn
  8540  000CEC  0012               	return	
  8541  000CEE                     __end_ofPL84:
  8542                           	opt stack 0
  8543  000CEE                     PL86:
  8544                           	opt stack 22
  8545  000CEE  C031  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  8546  000CF2  C032  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  8547  000CF6  0012               	return	
  8548  000CF8                     __end_ofPL86:
  8549                           	opt stack 0
  8550  000CF8                     PL92:
  8551                           	opt stack 18
  8552  000CF8  0D02               	mullw	2
  8553  000CFA  50F3               	movf	prodl,w,c
  8554  000CFC  0F60               	addlw	low _pBDTEntryOut
  8555  000CFE  0012               	return	
  8556  000D00                     __end_ofPL92:
  8557                           	opt stack 0
  8558  000D00                     PL102:
  8559                           	opt stack 22
  8560  000D00  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8561  000D02  26D9               	addwf	fsr2l,f,c
  8562  000D04  5032               	movf	i2USBTransferOnePacket@handle+1,w,c
  8563  000D06  22DA               	addwfc	fsr2h,f,c
  8564  000D08  0012               	return	
  8565  000D0A                     __end_ofPL102:
  8566                           	opt stack 0
  8567                           tblptru	equ	0xFF8
  8568                           tblptrh	equ	0xFF7
  8569                           tblptrl	equ	0xFF6
  8570                           tablat	equ	0xFF5
  8571                           prodh	equ	0xFF4
  8572                           prodl	equ	0xFF3
  8573                           intcon	equ	0xFF2
  8574                           postinc0	equ	0xFEE
  8575                           wreg	equ	0xFE8
  8576                           indf1	equ	0xFE7
  8577                           postdec1	equ	0xFE5
  8578                           fsr1h	equ	0xFE2
  8579                           fsr1l	equ	0xFE1
  8580                           indf2	equ	0xFDF
  8581                           postinc2	equ	0xFDE
  8582                           postdec2	equ	0xFDD
  8583                           plusw2	equ	0xFDB
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           
  8588 ;; *************** function _USBEnableEndpoint *****************
  8589 ;; Defined at:
  8590 ;;		line 878 in file "picLibs/usb_device.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  ep              1    wreg     unsigned char 
  8593 ;;  options         1    8[COMRAM] unsigned char 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  ep              1   11[COMRAM] unsigned char 
  8596 ;;  p               2    9[COMRAM] PTR unsigned char 
  8597 ;;		 -> UEP0(1), 
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8607 ;;      Params:         1       0       0       0       0
  8608 ;;      Locals:         3       0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0
  8610 ;;      Totals:         4       0       0       0       0
  8611 ;;Total ram usage:        4 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:    1
  8614 ;; This function calls:
  8615 ;;		_USBConfigureEndpoint
  8616 ;; This function is called by:
  8617 ;;		_CDCInitEP
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text47
  8622  001750                     __ptext47:
  8623                           	opt stack 0
  8624  001750                     _USBEnableEndpoint:
  8625                           	opt stack 21
  8626                           
  8627                           ;incstack = 0
  8628                           ;USBEnableEndpoint@ep stored from wreg
  8629  001750  6E35               	movwf	USBEnableEndpoint@ep,c
  8630                           
  8631                           ;usb_device.c: 880: unsigned char* p;
  8632                           ;usb_device.c: 884: if(options & 0x04)
  8633  001752  A432               	btfss	USBEnableEndpoint@options,2,c
  8634  001754  D004               	goto	i2l2999
  8635                           
  8636                           ;usb_device.c: 885: {
  8637                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8638  001756  6A2A               	clrf	USBConfigureEndpoint@direction,c
  8639  001758  5035               	movf	USBEnableEndpoint@ep,w,c
  8640  00175A  EC99  F008         	call	_USBConfigureEndpoint
  8641  00175E                     i2l2999:
  8642                           
  8643                           ;usb_device.c: 887: }
  8644                           ;usb_device.c: 888: if(options & 0x02)
  8645  00175E  A232               	btfss	USBEnableEndpoint@options,1,c
  8646  001760  D005               	goto	i2l3003
  8647                           
  8648                           ;usb_device.c: 889: {
  8649                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8650  001762  0E01               	movlw	1
  8651  001764  6E2A               	movwf	USBConfigureEndpoint@direction,c
  8652  001766  5035               	movf	USBEnableEndpoint@ep,w,c
  8653  001768  EC99  F008         	call	_USBConfigureEndpoint
  8654  00176C                     i2l3003:
  8655                           
  8656                           ;usb_device.c: 891: }
  8657                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8658  00176C  0E53               	movlw	83
  8659  00176E  2435               	addwf	USBEnableEndpoint@ep,w,c
  8660  001770  6E33               	movwf	USBEnableEndpoint@p,c
  8661  001772  6A34               	clrf	USBEnableEndpoint@p+1,c
  8662  001774  0E0F               	movlw	15
  8663  001776  2234               	addwfc	USBEnableEndpoint@p+1,f,c
  8664                           
  8665                           ;usb_device.c: 901: *p = options;
  8666  001778  C033  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8667  00177C  C034  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8668  001780  C032  FFDF         	movff	USBEnableEndpoint@options,indf2
  8669  001784  0C0F               	retlw	15	;funcret
  8670  001786                     __end_of_USBEnableEndpoint:
  8671                           	opt stack 0
  8672                           tblptru	equ	0xFF8
  8673                           tblptrh	equ	0xFF7
  8674                           tblptrl	equ	0xFF6
  8675                           tablat	equ	0xFF5
  8676                           prodh	equ	0xFF4
  8677                           prodl	equ	0xFF3
  8678                           intcon	equ	0xFF2
  8679                           postinc0	equ	0xFEE
  8680                           wreg	equ	0xFE8
  8681                           indf1	equ	0xFE7
  8682                           postdec1	equ	0xFE5
  8683                           fsr1h	equ	0xFE2
  8684                           fsr1l	equ	0xFE1
  8685                           indf2	equ	0xFDF
  8686                           postinc2	equ	0xFDE
  8687                           postdec2	equ	0xFDD
  8688                           plusw2	equ	0xFDB
  8689                           fsr2h	equ	0xFDA
  8690                           fsr2l	equ	0xFD9
  8691                           status	equ	0xFD8
  8692                           
  8693 ;; *************** function _USBConfigureEndpoint *****************
  8694 ;; Defined at:
  8695 ;;		line 1543 in file "picLibs/usb_device.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  EPNum           1    wreg     unsigned char 
  8698 ;;  direction       1    0[COMRAM] unsigned char 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  EPNum           1    5[COMRAM] unsigned char 
  8701 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  8702 ;;		 -> BDT(48), 
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  1    wreg      void 
  8705 ;; Registers used:
  8706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8712 ;;      Params:         1       0       0       0       0
  8713 ;;      Locals:         3       0       0       0       0
  8714 ;;      Temps:          4       0       0       0       0
  8715 ;;      Totals:         8       0       0       0       0
  8716 ;;Total ram usage:        8 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_USBEnableEndpoint
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text48
  8726  001132                     __ptext48:
  8727                           	opt stack 0
  8728  001132                     _USBConfigureEndpoint:
  8729                           	opt stack 21
  8730                           
  8731                           ;incstack = 0
  8732                           ;USBConfigureEndpoint@EPNum stored from wreg
  8733  001132  6E2F               	movwf	USBConfigureEndpoint@EPNum,c
  8734                           
  8735                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8736                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8737  001134  6A30               	clrf	USBConfigureEndpoint@handle,c
  8738  001136  0E02               	movlw	2
  8739  001138  6E31               	movwf	USBConfigureEndpoint@handle+1,c
  8740                           
  8741                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8742  00113A  502A               	movf	USBConfigureEndpoint@direction,w,c
  8743  00113C  6E2B               	movwf	??_USBConfigureEndpoint& (0+255),c
  8744  00113E  6A2C               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  8745  001140  90D8               	bcf	status,0,c
  8746  001142  362B               	rlcf	??_USBConfigureEndpoint,f,c
  8747  001144  362C               	rlcf	??_USBConfigureEndpoint+1,f,c
  8748  001146  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8749  001148  6E2D               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  8750  00114A  6A2E               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  8751  00114C  D824               	call	PL78	;call to abstracted procedure
  8752  00114E  502B               	movf	??_USBConfigureEndpoint,w,c
  8753  001150  262D               	addwf	??_USBConfigureEndpoint+2,f,c
  8754  001152  502C               	movf	??_USBConfigureEndpoint+1,w,c
  8755  001154  222E               	addwfc	??_USBConfigureEndpoint+3,f,c
  8756  001156  D81F               	call	PL78	;call to abstracted procedure
  8757  001158  502D               	movf	??_USBConfigureEndpoint+2,w,c
  8758  00115A  2630               	addwf	USBConfigureEndpoint@handle,f,c
  8759  00115C  502E               	movf	??_USBConfigureEndpoint+3,w,c
  8760  00115E  2231               	addwfc	USBConfigureEndpoint@handle+1,f,c
  8761                           
  8762                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8763  001160  D821               	call	PL106	;call to abstracted procedure
  8764  001162  9EDF               	bcf	indf2,7,c
  8765                           
  8766                           ;usb_device.c: 1557: if(direction == 0)
  8767  001164  502A               	movf	USBConfigureEndpoint@direction,w,c
  8768  001166  E104               	bnz	i2l2977
  8769                           
  8770                           ;usb_device.c: 1558: {
  8771                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8772  001168  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8773  00116A  EC7C  F006         	call	PL92	;call to abstracted procedure
  8774  00116E  D003               	goto	L14
  8775  001170                     i2l2977:
  8776                           
  8777                           ;usb_device.c: 1561: else
  8778                           ;usb_device.c: 1562: {
  8779                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8780  001170  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  8781  001172  EC73  F006         	call	PL84	;call to abstracted procedure
  8782  001176                     L14:
  8783  001176  6ED9               	movwf	fsr2l,c
  8784  001178  6ADA               	clrf	fsr2h,c
  8785  00117A  C030  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8786  00117E  C031  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8787                           
  8788                           ;usb_device.c: 1564: }
  8789                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8790  001182  D810               	call	PL106	;call to abstracted procedure
  8791  001184  9CDF               	bcf	indf2,6,c
  8792                           
  8793                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8794  001186  EE20 F004          	lfsr	2,4
  8795  00118A  5030               	movf	USBConfigureEndpoint@handle,w,c
  8796  00118C  26D9               	addwf	fsr2l,f,c
  8797  00118E  5031               	movf	USBConfigureEndpoint@handle+1,w,c
  8798  001190  22DA               	addwfc	fsr2h,f,c
  8799  001192  8CDF               	bsf	indf2,6,c
  8800  001194  0012               	return		;funcret
  8801  001196                     __end_of_USBConfigureEndpoint:
  8802                           	opt stack 0
  8803  001196                     PL78:
  8804                           	opt stack 21
  8805  001196  90D8               	bcf	status,0,c
  8806  001198  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8807  00119A  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8808  00119C  90D8               	bcf	status,0,c
  8809  00119E  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  8810  0011A0  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  8811  0011A2  0012               	return	
  8812  0011A4                     __end_ofPL78:
  8813                           	opt stack 0
  8814  0011A4                     PL106:
  8815                           	opt stack 21
  8816  0011A4  C030  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8817  0011A8  C031  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8818  0011AC  0012               	return	
  8819  0011AE                     __end_ofPL106:
  8820                           	opt stack 0
  8821                           tblptru	equ	0xFF8
  8822                           tblptrh	equ	0xFF7
  8823                           tblptrl	equ	0xFF6
  8824                           tablat	equ	0xFF5
  8825                           prodh	equ	0xFF4
  8826                           prodl	equ	0xFF3
  8827                           intcon	equ	0xFF2
  8828                           postinc0	equ	0xFEE
  8829                           wreg	equ	0xFE8
  8830                           indf1	equ	0xFE7
  8831                           postdec1	equ	0xFE5
  8832                           fsr1h	equ	0xFE2
  8833                           fsr1l	equ	0xFE1
  8834                           indf2	equ	0xFDF
  8835                           postinc2	equ	0xFDE
  8836                           postdec2	equ	0xFDD
  8837                           plusw2	equ	0xFDB
  8838                           fsr2h	equ	0xFDA
  8839                           fsr2l	equ	0xFD9
  8840                           status	equ	0xFD8
  8841                           
  8842 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8843 ;; Defined at:
  8844 ;;		line 50 in file "picLibs/app_led_usb_status.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  8858 ;;      Params:         0       0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0
  8860 ;;      Temps:          0       0       0       0       0
  8861 ;;      Totals:         0       0       0       0       0
  8862 ;;Total ram usage:        0 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    1
  8865 ;; This function calls:
  8866 ;;		_LED_Off
  8867 ;;		_LED_On
  8868 ;; This function is called by:
  8869 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text49
  8874  001302                     __ptext49:
  8875                           	opt stack 0
  8876  001302                     _APP_LEDUpdateUSBStatus:
  8877                           	opt stack 22
  8878                           
  8879                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  8880                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  8881                           
  8882                           ;incstack = 0
  8883  001302  A264               	btfss	3940,1,c	;volatile
  8884  001304  D02E               	goto	i2l3087
  8885                           
  8886                           ;app_led_usb_status.c: 55: {
  8887                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  8888  001306  0E01               	movlw	1
  8889  001308  EF6D  F00C         	goto	_LED_Off
  8890  00130C                     i2l3061:
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  8894  00130C  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8895  00130E  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8896  001310  E104               	bnz	i2l3065
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;app_led_usb_status.c: 66: {
  8900                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  8901  001312  0E01               	movlw	1
  8902  001314  EC57  F00C         	call	_LED_On
  8903                           
  8904                           ;app_led_usb_status.c: 68: }
  8905  001318  D029               	goto	i2l3089
  8906  00131A                     i2l3065:
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  8910  00131A  0E4B               	movlw	75
  8911  00131C  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8912  00131E  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8913  001320  E104               	bnz	i2l3069
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;app_led_usb_status.c: 70: {
  8917                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  8918  001322  0E01               	movlw	1
  8919  001324  EC6D  F00C         	call	_LED_Off
  8920                           
  8921                           ;app_led_usb_status.c: 72: }
  8922  001328  D021               	goto	i2l3089
  8923  00132A                     i2l3069:
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  8927  00132A  501A               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8928  00132C  E103               	bnz	i2u183_40
  8929  00132E  0E97               	movlw	151
  8930  001330  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8931  001332  E31C               	bnc	i2l3089
  8932  001334                     i2u183_40:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;app_led_usb_status.c: 74: {
  8936                           ;app_led_usb_status.c: 75: ledCount = 0;
  8937  001334  6A19               	clrf	APP_LEDUpdateUSBStatus@ledCount,c
  8938  001336  6A1A               	clrf	APP_LEDUpdateUSBStatus@ledCount+1,c
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;app_led_usb_status.c: 76: }
  8942                           ;app_led_usb_status.c: 77: break;
  8943  001338  D019               	goto	i2l3089
  8944  00133A                     i2l3073:
  8945                           
  8946                           ; BSR set to: 0
  8947                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  8948  00133A  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8949  00133C  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8950  00133E  E104               	bnz	i2l3077
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;app_led_usb_status.c: 83: {
  8954                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  8955  001340  0E01               	movlw	1
  8956  001342  EC57  F00C         	call	_LED_On
  8957                           
  8958                           ;app_led_usb_status.c: 85: }
  8959  001346  D012               	goto	i2l3089
  8960  001348                     i2l3077:
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  8964  001348  0E32               	movlw	50
  8965  00134A  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8966  00134C  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8967  00134E  E104               	bnz	i2l3081
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;app_led_usb_status.c: 87: {
  8971                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  8972  001350  0E01               	movlw	1
  8973  001352  EC6D  F00C         	call	_LED_Off
  8974                           
  8975                           ;app_led_usb_status.c: 89: }
  8976  001356  D00A               	goto	i2l3089
  8977  001358                     i2l3081:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  8981  001358  0EB7               	movlw	183
  8982  00135A  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  8983  00135C  0E03               	movlw	3
  8984  00135E  581A               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  8985  001360  D7E8               	goto	L15
  8986  001362                     i2l3087:
  8987  001362  0100               	movlb	0	; () banked
  8988  001364  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  8989                           
  8990                           ; Switch size 1, requested type "space"
  8991                           ; Number of cases is 1, Range of values is 32 to 32
  8992                           ; switch strategies available:
  8993                           ; Name         Instructions Cycles
  8994                           ; simple_byte            4     3 (average)
  8995                           ;	Chosen strategy is simple_byte
  8996  001366  0A20               	xorlw	32	; case 32
  8997  001368  E0D1               	bz	i2l3061
  8998  00136A  D7E7               	goto	i2l3073
  8999  00136C                     i2l3089:
  9000                           
  9001                           ;app_led_usb_status.c: 98: ledCount++;
  9002  00136C  4A19               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
  9003  00136E  2A1A               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
  9004  001370  0012               	return		;funcret
  9005  001372                     __end_of_APP_LEDUpdateUSBStatus:
  9006                           	opt stack 0
  9007                           tblptru	equ	0xFF8
  9008                           tblptrh	equ	0xFF7
  9009                           tblptrl	equ	0xFF6
  9010                           tablat	equ	0xFF5
  9011                           prodh	equ	0xFF4
  9012                           prodl	equ	0xFF3
  9013                           intcon	equ	0xFF2
  9014                           postinc0	equ	0xFEE
  9015                           wreg	equ	0xFE8
  9016                           indf1	equ	0xFE7
  9017                           postdec1	equ	0xFE5
  9018                           fsr1h	equ	0xFE2
  9019                           fsr1l	equ	0xFE1
  9020                           indf2	equ	0xFDF
  9021                           postinc2	equ	0xFDE
  9022                           postdec2	equ	0xFDD
  9023                           plusw2	equ	0xFDB
  9024                           fsr2h	equ	0xFDA
  9025                           fsr2l	equ	0xFD9
  9026                           status	equ	0xFD8
  9027                           
  9028 ;; *************** function _LED_On *****************
  9029 ;; Defined at:
  9030 ;;		line 59 in file "picLibs/leds.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  led             1    wreg     enum E2
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  led             1    0[COMRAM] enum E2
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      void 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2, status,0
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9044 ;;      Params:         0       0       0       0       0
  9045 ;;      Locals:         1       0       0       0       0
  9046 ;;      Temps:          0       0       0       0       0
  9047 ;;      Totals:         1       0       0       0       0
  9048 ;;Total ram usage:        1 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_APP_LEDUpdateUSBStatus
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text50
  9058  0018AE                     __ptext50:
  9059                           	opt stack 0
  9060  0018AE                     _LED_On:
  9061                           	opt stack 22
  9062                           
  9063                           ;incstack = 0
  9064                           ;LED_On@led stored from wreg
  9065  0018AE  6E2A               	movwf	LED_On@led,c
  9066                           
  9067                           ;leds.c: 61: switch(led)
  9068  0018B0  D008               	goto	i2l2993
  9069  0018B2                     i2l169:
  9070                           
  9071                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9072  0018B2  808B               	bsf	3979,0,c	;volatile
  9073                           
  9074                           ;leds.c: 65: break;
  9075  0018B4  0012               	return	
  9076  0018B6                     i2l171:
  9077                           
  9078                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9079  0018B6  828B               	bsf	3979,1,c	;volatile
  9080                           
  9081                           ;leds.c: 69: break;
  9082  0018B8  0012               	return	
  9083  0018BA                     i2l172:
  9084                           
  9085                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9086  0018BA  848B               	bsf	3979,2,c	;volatile
  9087                           
  9088                           ;leds.c: 73: break;
  9089  0018BC  0012               	return	
  9090  0018BE                     i2l173:
  9091                           
  9092                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9093  0018BE  868B               	bsf	3979,3,c	;volatile
  9094                           
  9095                           ;leds.c: 77: break;
  9096  0018C0  0012               	return	
  9097  0018C2                     i2l2993:
  9098  0018C2  502A               	movf	LED_On@led,w,c
  9099                           
  9100                           ; Switch size 1, requested type "space"
  9101                           ; Number of cases is 5, Range of values is 0 to 4
  9102                           ; switch strategies available:
  9103                           ; Name         Instructions Cycles
  9104                           ; simple_byte           16     9 (average)
  9105                           ;	Chosen strategy is simple_byte
  9106  0018C4  B4D8               	btfsc	status,2,c
  9107  0018C6  0012               	return	
  9108  0018C8  0A01               	xorlw	1	; case 1
  9109  0018CA  E0F3               	bz	i2l169
  9110  0018CC  0A03               	xorlw	3	; case 2
  9111  0018CE  E0F3               	bz	i2l171
  9112  0018D0  0A01               	xorlw	1	; case 3
  9113  0018D2  E0F3               	bz	i2l172
  9114  0018D4  0A07               	xorlw	7	; case 4
  9115  0018D6  E0F3               	bz	i2l173
  9116  0018D8  0012               	return		;funcret
  9117  0018DA                     __end_of_LED_On:
  9118                           	opt stack 0
  9119                           tblptru	equ	0xFF8
  9120                           tblptrh	equ	0xFF7
  9121                           tblptrl	equ	0xFF6
  9122                           tablat	equ	0xFF5
  9123                           prodh	equ	0xFF4
  9124                           prodl	equ	0xFF3
  9125                           intcon	equ	0xFF2
  9126                           postinc0	equ	0xFEE
  9127                           wreg	equ	0xFE8
  9128                           indf1	equ	0xFE7
  9129                           postdec1	equ	0xFE5
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           indf2	equ	0xFDF
  9133                           postinc2	equ	0xFDE
  9134                           postdec2	equ	0xFDD
  9135                           plusw2	equ	0xFDB
  9136                           fsr2h	equ	0xFDA
  9137                           fsr2l	equ	0xFD9
  9138                           status	equ	0xFD8
  9139                           
  9140 ;; *************** function _LED_Off *****************
  9141 ;; Defined at:
  9142 ;;		line 100 in file "picLibs/leds.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  led             1    wreg     enum E2
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  led             1    0[COMRAM] enum E2
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1    wreg      void 
  9149 ;; Registers used:
  9150 ;;		wreg, status,2, status,0
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9156 ;;      Params:         0       0       0       0       0
  9157 ;;      Locals:         1       0       0       0       0
  9158 ;;      Temps:          0       0       0       0       0
  9159 ;;      Totals:         1       0       0       0       0
  9160 ;;Total ram usage:        1 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_APP_LEDUpdateUSBStatus
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text51
  9170  0018DA                     __ptext51:
  9171                           	opt stack 0
  9172  0018DA                     _LED_Off:
  9173                           	opt stack 22
  9174                           
  9175                           ;incstack = 0
  9176                           ;LED_Off@led stored from wreg
  9177  0018DA  6E2A               	movwf	LED_Off@led,c
  9178                           
  9179                           ;leds.c: 102: switch(led)
  9180  0018DC  D008               	goto	i2l2987
  9181  0018DE                     i2l179:
  9182                           
  9183                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9184  0018DE  908B               	bcf	3979,0,c	;volatile
  9185                           
  9186                           ;leds.c: 106: break;
  9187  0018E0  0012               	return	
  9188  0018E2                     i2l181:
  9189                           
  9190                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9191  0018E2  928B               	bcf	3979,1,c	;volatile
  9192                           
  9193                           ;leds.c: 110: break;
  9194  0018E4  0012               	return	
  9195  0018E6                     i2l182:
  9196                           
  9197                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9198  0018E6  948B               	bcf	3979,2,c	;volatile
  9199                           
  9200                           ;leds.c: 114: break;
  9201  0018E8  0012               	return	
  9202  0018EA                     i2l183:
  9203                           
  9204                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9205  0018EA  968B               	bcf	3979,3,c	;volatile
  9206                           
  9207                           ;leds.c: 118: break;
  9208  0018EC  0012               	return	
  9209  0018EE                     i2l2987:
  9210  0018EE  502A               	movf	LED_Off@led,w,c
  9211                           
  9212                           ; Switch size 1, requested type "space"
  9213                           ; Number of cases is 5, Range of values is 0 to 4
  9214                           ; switch strategies available:
  9215                           ; Name         Instructions Cycles
  9216                           ; simple_byte           16     9 (average)
  9217                           ;	Chosen strategy is simple_byte
  9218  0018F0  B4D8               	btfsc	status,2,c
  9219  0018F2  0012               	return	
  9220  0018F4  0A01               	xorlw	1	; case 1
  9221  0018F6  E0F3               	bz	i2l179
  9222  0018F8  0A03               	xorlw	3	; case 2
  9223  0018FA  E0F3               	bz	i2l181
  9224  0018FC  0A01               	xorlw	1	; case 3
  9225  0018FE  E0F3               	bz	i2l182
  9226  001900  0A07               	xorlw	7	; case 4
  9227  001902  E0F3               	bz	i2l183
  9228  001904  0012               	return		;funcret
  9229  001906                     __end_of_LED_Off:
  9230                           	opt stack 0
  9231                           tblptru	equ	0xFF8
  9232                           tblptrh	equ	0xFF7
  9233                           tblptrl	equ	0xFF6
  9234                           tablat	equ	0xFF5
  9235                           prodh	equ	0xFF4
  9236                           prodl	equ	0xFF3
  9237                           intcon	equ	0xFF2
  9238                           postinc0	equ	0xFEE
  9239                           wreg	equ	0xFE8
  9240                           indf1	equ	0xFE7
  9241                           postdec1	equ	0xFE5
  9242                           fsr1h	equ	0xFE2
  9243                           fsr1l	equ	0xFE1
  9244                           indf2	equ	0xFDF
  9245                           postinc2	equ	0xFDE
  9246                           postdec2	equ	0xFDD
  9247                           plusw2	equ	0xFDB
  9248                           fsr2h	equ	0xFDA
  9249                           fsr2l	equ	0xFD9
  9250                           status	equ	0xFD8
  9251                           
  9252 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  9253 ;; Defined at:
  9254 ;;		line 53 in file "picLibs/app_device_cdc_basic.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;		None
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;		None
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		wreg, status,2
  9263 ;; Tracked objects:
  9264 ;;		On entry : 3F/0
  9265 ;;		On exit  : 3F/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9268 ;;      Params:         0       0       0       0       0
  9269 ;;      Locals:         0       0       0       0       0
  9270 ;;      Temps:          0       0       0       0       0
  9271 ;;      Totals:         0       0       0       0       0
  9272 ;;Total ram usage:        0 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; This function calls:
  9275 ;;		Nothing
  9276 ;; This function is called by:
  9277 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9278 ;; This function uses a non-reentrant model
  9279 ;;
  9280                           
  9281                           	psect	text52
  9282  001A2C                     __ptext52:
  9283                           	opt stack 0
  9284  001A2C                     _APP_DeviceCDCBasicDemoInitialize:
  9285                           	opt stack 23
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;app_device_cdc_basic.c: 55: line_coding.bCharFormat = 0;
  9289                           
  9290                           ;incstack = 0
  9291  001A2C  6BAC               	clrf	(_line_coding+4)& (0+255),b
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;app_device_cdc_basic.c: 56: line_coding.bDataBits = 8;
  9295  001A2E  0E08               	movlw	8
  9296  001A30  6FAE               	movwf	(_line_coding+6)& (0+255),b
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;app_device_cdc_basic.c: 57: line_coding.bParityType = 0;
  9300  001A32  6BAD               	clrf	(_line_coding+5)& (0+255),b
  9301                           
  9302                           ;app_device_cdc_basic.c: 58: line_coding.dwDTERate = 9600;
  9303  001A34  0E80               	movlw	128
  9304  001A36  6FA8               	movwf	_line_coding& (0+255),b
  9305  001A38  0E25               	movlw	37
  9306  001A3A  6FA9               	movwf	(_line_coding+1)& (0+255),b
  9307  001A3C  0E00               	movlw	0
  9308  001A3E  6BAA               	clrf	(_line_coding+2)& (0+255),b
  9309  001A40  6BAB               	clrf	(_line_coding+3)& (0+255),b
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;app_device_cdc_basic.c: 60: buttonPressed = 0;
  9313  001A42  6B7F               	clrf	_buttonPressed& (0+255),b
  9314                           
  9315                           ; BSR set to: 0
  9316  001A44  0012               	return		;funcret
  9317  001A46                     __end_of_APP_DeviceCDCBasicDemoInitialize:
  9318                           	opt stack 0
  9319                           tblptru	equ	0xFF8
  9320                           tblptrh	equ	0xFF7
  9321                           tblptrl	equ	0xFF6
  9322                           tablat	equ	0xFF5
  9323                           prodh	equ	0xFF4
  9324                           prodl	equ	0xFF3
  9325                           intcon	equ	0xFF2
  9326                           postinc0	equ	0xFEE
  9327                           wreg	equ	0xFE8
  9328                           indf1	equ	0xFE7
  9329                           postdec1	equ	0xFE5
  9330                           fsr1h	equ	0xFE2
  9331                           fsr1l	equ	0xFE1
  9332                           indf2	equ	0xFDF
  9333                           postinc2	equ	0xFDE
  9334                           postdec2	equ	0xFDD
  9335                           plusw2	equ	0xFDB
  9336                           fsr2h	equ	0xFDA
  9337                           fsr2l	equ	0xFD9
  9338                           status	equ	0xFD8
  9339                           
  9340 ;; *************** function _USBCtrlTrfOutHandler *****************
  9341 ;; Defined at:
  9342 ;;		line 2538 in file "picLibs/usb_device.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 3F/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9356 ;;      Params:         0       0       0       0       0
  9357 ;;      Locals:         0       0       0       0       0
  9358 ;;      Temps:          0       0       0       0       0
  9359 ;;      Totals:         0       0       0       0       0
  9360 ;;Total ram usage:        0 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    2
  9363 ;; This function calls:
  9364 ;;		_USBCtrlTrfRxService
  9365 ;; This function is called by:
  9366 ;;		_USBCtrlEPService
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text53
  9371  00199C                     __ptext53:
  9372                           	opt stack 0
  9373  00199C                     _USBCtrlTrfOutHandler:
  9374                           	opt stack 21
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;incstack = 0
  9381  00199C  0E02               	movlw	2
  9382  00199E  1826               	xorwf	_controlTransferState,w,c	;volatile
  9383  0019A0  E102               	bnz	i2l574
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;usb_device.c: 2541: {
  9387                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9388  0019A2  EF0A  F005         	goto	_USBCtrlTrfRxService	;wreg free
  9389  0019A6                     i2l574:
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;usb_device.c: 2544: else
  9393                           ;usb_device.c: 2545: {
  9394                           ;usb_device.c: 2548: controlTransferState = 0;
  9395  0019A6  6A26               	clrf	_controlTransferState,c	;volatile
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9399  0019A8  5022               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9400  0019AA  E106               	bnz	i2l576
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;usb_device.c: 2556: {
  9404                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9405                           
  9406                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9410  0019AC  ECB3  F007         	call	PL2	;call to abstracted procedure
  9411  0019B0  0E0C               	movlw	12
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9415  0019B2  EC50  F005         	call	PL10	;call to abstracted procedure
  9416                           
  9417                           ;usb_device.c: 2561: }
  9418  0019B6  0C00               	retlw	0
  9419  0019B8                     i2l576:
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;usb_device.c: 2562: else
  9423                           ;usb_device.c: 2563: {
  9424                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9425  0019B8  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9426  0019BA  0012               	return		;funcret
  9427  0019BC                     __end_of_USBCtrlTrfOutHandler:
  9428                           	opt stack 0
  9429                           tblptru	equ	0xFF8
  9430                           tblptrh	equ	0xFF7
  9431                           tblptrl	equ	0xFF6
  9432                           tablat	equ	0xFF5
  9433                           prodh	equ	0xFF4
  9434                           prodl	equ	0xFF3
  9435                           intcon	equ	0xFF2
  9436                           postinc0	equ	0xFEE
  9437                           wreg	equ	0xFE8
  9438                           indf1	equ	0xFE7
  9439                           postdec1	equ	0xFE5
  9440                           fsr1h	equ	0xFE2
  9441                           fsr1l	equ	0xFE1
  9442                           indf2	equ	0xFDF
  9443                           postinc2	equ	0xFDE
  9444                           postdec2	equ	0xFDD
  9445                           plusw2	equ	0xFDB
  9446                           fsr2h	equ	0xFDA
  9447                           fsr2l	equ	0xFD9
  9448                           status	equ	0xFD8
  9449                           
  9450 ;; *************** function _USBCtrlTrfRxService *****************
  9451 ;; Defined at:
  9452 ;;		line 1852 in file "picLibs/usb_device.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  byteToRead      1    1[COMRAM] unsigned char 
  9457 ;;  i               1    0[COMRAM] unsigned char 
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9462 ;; Tracked objects:
  9463 ;;		On entry : 3F/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9467 ;;      Params:         0       0       0       0       0
  9468 ;;      Locals:         2       0       0       0       0
  9469 ;;      Temps:          0       0       0       0       0
  9470 ;;      Totals:         2       0       0       0       0
  9471 ;;Total ram usage:        2 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    1
  9474 ;; This function calls:
  9475 ;;		_USBCtrlEPAllowStatusStage
  9476 ;; This function is called by:
  9477 ;;		_USBCtrlTrfOutHandler
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text54
  9482  000A14                     __ptext54:
  9483                           	opt stack 0
  9484  000A14                     _USBCtrlTrfRxService:
  9485                           	opt stack 21
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;usb_device.c: 1854: uint8_t byteToRead;
  9489                           ;usb_device.c: 1855: uint8_t i;
  9490                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9491                           
  9492                           ;incstack = 0
  9493  000A14  EE20 F001          	lfsr	2,1
  9494  000A18  EC44  F009         	call	PL74	;call to abstracted procedure
  9495  000A1C  50DF               	movf	indf2,w,c
  9496  000A1E  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9500  000A20  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9501  000A22  5C05               	subwf	_outPipes+4,w,c	;volatile
  9502  000A24  0E00               	movlw	0
  9503  000A26  5806               	subwfb	_outPipes+5,w,c	;volatile
  9504  000A28  E202               	bc	i2l3529
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;usb_device.c: 1866: {
  9508                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9509  000A2A  C005  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9510  000A2E                     i2l3529:
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;usb_device.c: 1868: }
  9514                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9515  000A2E  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9516  000A30  5E05               	subwf	_outPipes+4,f,c	;volatile
  9517  000A32  0E00               	movlw	0
  9518  000A34  5A06               	subwfb	_outPipes+5,f,c	;volatile
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9522  000A36  6A2A               	clrf	USBCtrlTrfRxService@i,c
  9523  000A38  D007               	goto	i2l3539
  9524  000A3A                     i2l3533:
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;usb_device.c: 1875: {
  9528                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9529  000A3A  0E38               	movlw	56
  9530  000A3C  242A               	addwf	USBCtrlTrfRxService@i,w,c
  9531  000A3E  D847               	call	PL112	;call to abstracted procedure
  9532  000A40  5001               	movf	_outPipes,w,c	;volatile
  9533  000A42  D840               	call	PL110	;call to abstracted procedure
  9534                           
  9535                           ; BSR set to: 0
  9536  000A44  2A01               	incf	_outPipes,f,c	;volatile
  9537                           
  9538                           ; BSR set to: 0
  9539  000A46  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  9540  000A48                     i2l3539:
  9541                           
  9542                           ; BSR set to: 0
  9543  000A48  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9544  000A4A  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  9545  000A4C  E3F6               	bnc	i2l3533
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;usb_device.c: 1877: }
  9549                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9550  000A4E  5005               	movf	_outPipes+4,w,c	;volatile
  9551  000A50  1006               	iorwf	_outPipes+5,w,c	;volatile
  9552  000A52  E012               	bz	i2l3555
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;usb_device.c: 1882: {
  9556                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9557  000A54  EE20 F001          	lfsr	2,1
  9558  000A58  D819               	call	PL4	;call to abstracted procedure
  9559                           
  9560                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9561  000A5A  D81D               	call	PL6	;call to abstracted procedure
  9562  000A5C  D817               	call	PL4	;call to abstracted procedure
  9563  000A5E  D82D               	call	PL68	;call to abstracted procedure
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9567  000A60  EC0C  F00C         	call	PL34	;call to abstracted procedure
  9568  000A64  BCDF               	btfsc	indf2,6,c
  9569  000A66  D004               	goto	i2l3551
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;usb_device.c: 1886: {
  9573                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9574  000A68  D823               	call	PL18	;call to abstracted procedure
  9575  000A6A  0E48               	movlw	72
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9579  000A6C  D819               	call	PL10	;call to abstracted procedure
  9580                           
  9581                           ;usb_device.c: 1889: }
  9582  000A6E  0C00               	retlw	0
  9583  000A70                     i2l3551:
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;usb_device.c: 1890: else
  9587                           ;usb_device.c: 1891: {
  9588                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9589  000A70  D81F               	call	PL18	;call to abstracted procedure
  9590  000A72  0E08               	movlw	8
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9594  000A74  D815               	call	PL10	;call to abstracted procedure
  9595  000A76  0C00               	retlw	0
  9596  000A78                     i2l3555:
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;usb_device.c: 1896: else
  9600                           ;usb_device.c: 1897: {
  9601                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9602                           
  9603                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9607  000A78  ECB3  F007         	call	PL2	;call to abstracted procedure
  9608  000A7C  0E04               	movlw	4
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9612  000A7E  D810               	call	PL10	;call to abstracted procedure
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;usb_device.c: 1926: }
  9616                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;usb_device.c: 1915: {
  9620                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9621  000A80  9E04               	bcf	_outPipes+3,7,c	;volatile
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9625  000A82  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  9626  000A84  B4D8               	btfsc	status,2,c
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;usb_device.c: 1942: {
  9630                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9631  000A86  EC10  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9632  000A8A  0012               	return		;funcret
  9633  000A8C                     __end_of_USBCtrlTrfRxService:
  9634                           	opt stack 0
  9635  000A8C                     PL4:
  9636                           	opt stack 20
  9637  000A8C  5015               	movf	_pBDTEntryEP0OutNext,w,c
  9638  000A8E  26D9               	addwf	fsr2l,f,c
  9639  000A90  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  9640  000A92  22DA               	addwfc	fsr2h,f,c
  9641  000A94  0012               	return	
  9642  000A96                     __end_ofPL4:
  9643                           	opt stack 0
  9644  000A96                     PL6:
  9645                           	opt stack 20
  9646  000A96  0E08               	movlw	8
  9647  000A98  6EDF               	movwf	indf2,c
  9648  000A9A  EE20 F002          	lfsr	2,2
  9649  000A9E  0C08               	retlw	8
  9650  000AA0                     __end_ofPL6:
  9651                           	opt stack 0
  9652  000AA0                     PL10:
  9653                           	opt stack 20
  9654  000AA0  6EDF               	movwf	indf2,c
  9655  000AA2  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9656  000AA6  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9657  000AAA  0E00               	movlw	0
  9658  000AAC  8EDB               	bsf	plusw2,7,c
  9659  000AAE  0C00               	retlw	0
  9660  000AB0                     __end_ofPL10:
  9661                           	opt stack 0
  9662  000AB0                     PL18:
  9663                           	opt stack 17
  9664  000AB0  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9665  000AB4  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9666  000AB8  0012               	return	
  9667  000ABA                     __end_ofPL18:
  9668                           	opt stack 0
  9669  000ABA                     PL68:
  9670                           	opt stack 20
  9671  000ABA  0E38               	movlw	56
  9672  000ABC  6EDE               	movwf	postinc2,c
  9673  000ABE  0E02               	movlw	2
  9674  000AC0  6EDD               	movwf	postdec2,c
  9675  000AC2  0C02               	retlw	2
  9676  000AC4                     __end_ofPL68:
  9677                           	opt stack 0
  9678  000AC4                     PL110:
  9679                           	opt stack 18
  9680  000AC4  6EE1               	movwf	fsr1l,c
  9681  000AC6  6AE2               	clrf	fsr1h,c
  9682  000AC8  CFDF FFE7          	movff	indf2,indf1
  9683  000ACC  0012               	return	
  9684  000ACE                     __end_ofPL110:
  9685                           	opt stack 0
  9686  000ACE                     PL112:
  9687                           	opt stack 18
  9688  000ACE  6ED9               	movwf	fsr2l,c
  9689  000AD0  6ADA               	clrf	fsr2h,c
  9690  000AD2  0E02               	movlw	2
  9691  000AD4  22DA               	addwfc	fsr2h,f,c
  9692  000AD6  0C02               	retlw	2
  9693  000AD8                     __end_ofPL112:
  9694                           	opt stack 0
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           prodh	equ	0xFF4
  9700                           prodl	equ	0xFF3
  9701                           intcon	equ	0xFF2
  9702                           postinc0	equ	0xFEE
  9703                           wreg	equ	0xFE8
  9704                           indf1	equ	0xFE7
  9705                           postdec1	equ	0xFE5
  9706                           fsr1h	equ	0xFE2
  9707                           fsr1l	equ	0xFE1
  9708                           indf2	equ	0xFDF
  9709                           postinc2	equ	0xFDE
  9710                           postdec2	equ	0xFDD
  9711                           plusw2	equ	0xFDB
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9717 ;; Defined at:
  9718 ;;		line 1416 in file "picLibs/usb_device.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9732 ;;      Params:         0       0       0       0       0
  9733 ;;      Locals:         0       0       0       0       0
  9734 ;;      Temps:          0       0       0       0       0
  9735 ;;      Totals:         0       0       0       0       0
  9736 ;;Total ram usage:        0 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; This function calls:
  9739 ;;		Nothing
  9740 ;; This function is called by:
  9741 ;;		_USBDeviceTasks
  9742 ;;		_USBCtrlEPServiceComplete
  9743 ;;		_USBCtrlTrfRxService
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text55
  9748  001220                     __ptext55:
  9749                           	opt stack 0
  9750  001220                     _USBCtrlEPAllowStatusStage:
  9751                           	opt stack 21
  9752                           
  9753                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9754                           
  9755                           ;incstack = 0
  9756  001220  501F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
  9757  001222  A4D8               	btfss	status,2,c
  9758  001224  0012               	return	
  9759                           
  9760                           ;usb_device.c: 1424: {
  9761                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9762  001226  0E01               	movlw	1
  9763  001228  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9764                           
  9765                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9766  00122A  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
  9767  00122C  A4D8               	btfss	status,2,c
  9768  00122E  0012               	return	
  9769                           
  9770                           ;usb_device.c: 1427: {
  9771                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9772  001230  0E01               	movlw	1
  9773  001232  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9774                           
  9775                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9776  001234  0E02               	movlw	2
  9777  001236  1826               	xorwf	_controlTransferState,w,c	;volatile
  9778  001238  E10A               	bnz	i2l3255
  9779                           
  9780                           ;usb_device.c: 1433: {
  9781                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9782  00123A  EE20 F001          	lfsr	2,1
  9783  00123E  ECCC  F006         	call	PL70	;call to abstracted procedure
  9784  001242  6ADF               	clrf	indf2,c
  9785                           
  9786                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9787  001244  EC48  F008         	call	PL16	;call to abstracted procedure
  9788  001248  0E48               	movlw	72
  9789                           
  9790                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9791                           
  9792                           ;usb_device.c: 1437: }
  9793  00124A  EF40  F008         	goto	PL8	;call to abstracted procedure
  9794  00124E                     i2l3255:
  9795                           
  9796                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9797  00124E  0426               	decf	_controlTransferState,w,c	;volatile
  9798  001250  A4D8               	btfss	status,2,c
  9799  001252  0012               	return	
  9800                           
  9801                           ;usb_device.c: 1439: {
  9802                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9803  001254  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9804                           
  9805                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9806  001256  EE20 F001          	lfsr	2,1
  9807  00125A  D816               	call	PL74	;call to abstracted procedure
  9808                           
  9809                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  9810  00125C  EC4B  F005         	call	PL6	;call to abstracted procedure
  9811  001260  D813               	call	PL74	;call to abstracted procedure
  9812  001262  0E30               	movlw	48
  9813  001264  6EDE               	movwf	postinc2,c
  9814  001266  0E02               	movlw	2
  9815  001268  6EDD               	movwf	postdec2,c
  9816                           
  9817                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9818  00126A  EC0C  F00C         	call	PL34	;call to abstracted procedure
  9819  00126E  0E04               	movlw	4
  9820  001270  6EDF               	movwf	indf2,c
  9821                           
  9822                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9823  001272  EC0C  F00C         	call	PL34	;call to abstracted procedure
  9824  001276  0E00               	movlw	0
  9825  001278  8EDB               	bsf	plusw2,7,c
  9826                           
  9827                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9828  00127A  0E01               	movlw	1
  9829  00127C  6E22               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9830                           
  9831                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9832                           
  9833                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9834                           
  9835                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9836  00127E  ECB3  F007         	call	PL2	;call to abstracted procedure
  9837  001282  0E80               	movlw	128
  9838  001284  6EDF               	movwf	indf2,c
  9839  001286  0C80               	retlw	128
  9840  001288                     __end_of_USBCtrlEPAllowStatusStage:
  9841                           	opt stack 0
  9842  001288                     PL74:
  9843                           	opt stack 17
  9844  001288  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
  9845  00128A  26D9               	addwf	fsr2l,f,c
  9846  00128C  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9847  00128E  22DA               	addwfc	fsr2h,f,c
  9848  001290  0012               	return	
  9849  001292                     __end_ofPL74:
  9850                           	opt stack 0
  9851                           tblptru	equ	0xFF8
  9852                           tblptrh	equ	0xFF7
  9853                           tblptrl	equ	0xFF6
  9854                           tablat	equ	0xFF5
  9855                           prodh	equ	0xFF4
  9856                           prodl	equ	0xFF3
  9857                           intcon	equ	0xFF2
  9858                           postinc0	equ	0xFEE
  9859                           wreg	equ	0xFE8
  9860                           indf1	equ	0xFE7
  9861                           postdec1	equ	0xFE5
  9862                           fsr1h	equ	0xFE2
  9863                           fsr1l	equ	0xFE1
  9864                           indf2	equ	0xFDF
  9865                           postinc2	equ	0xFDE
  9866                           postdec2	equ	0xFDD
  9867                           plusw2	equ	0xFDB
  9868                           fsr2h	equ	0xFDA
  9869                           fsr2l	equ	0xFD9
  9870                           status	equ	0xFD8
  9871                           
  9872 ;; *************** function _USBCtrlTrfInHandler *****************
  9873 ;; Defined at:
  9874 ;;		line 2592 in file "picLibs/usb_device.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;		None
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  lastDTS         1    1[COMRAM] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      void 
  9881 ;; Registers used:
  9882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9883 ;; Tracked objects:
  9884 ;;		On entry : 3F/0
  9885 ;;		On exit  : 3F/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
  9888 ;;      Params:         0       0       0       0       0
  9889 ;;      Locals:         1       0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0
  9891 ;;      Totals:         1       0       0       0       0
  9892 ;;Total ram usage:        1 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:    1
  9895 ;; This function calls:
  9896 ;;		_USBCtrlTrfTxService
  9897 ;; This function is called by:
  9898 ;;		_USBCtrlEPService
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           	psect	text56
  9903  001024                     __ptext56:
  9904                           	opt stack 0
  9905  001024                     _USBCtrlTrfInHandler:
  9906                           	opt stack 0
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;usb_device.c: 2594: uint8_t lastDTS;
  9910                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9911                           
  9912                           ;incstack = 0
  9913  001024  D835               	call	PL16	;call to abstracted procedure
  9914  001026  0E00               	movlw	0
  9915  001028  BCDF               	btfsc	indf2,6,c
  9916  00102A  0E01               	movlw	1
  9917  00102C  6E2B               	movwf	USBCtrlTrfInHandler@lastDTS,c
  9918                           
  9919                           ; BSR set to: 0
  9920                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9921  00102E  0E04               	movlw	4
  9922  001030  1A0F               	xorwf	_pBDTEntryIn,f,c
  9923  001032  5010               	movf	_pBDTEntryIn+1,w,c
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9927  001034  0E08               	movlw	8
  9928  001036  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  9929  001038  E10B               	bnz	i2l3737
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;usb_device.c: 2605: {
  9933                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9934  00103A  0102               	movlb	2	; () banked
  9935  00103C  5132               	movf	50,w,b	;volatile
  9936  00103E  0B7F               	andlw	127
  9937  001040  010F               	movlb	15	; () banked
  9938  001042  6F5C               	movwf	92,b	;volatile
  9939                           
  9940                           ; BSR set to: 15
  9941                           ;usb_device.c: 2607: if(UADDR != 0u)
  9942  001044  515C               	movf	92,w,b
  9943                           
  9944                           ; BSR set to: 15
  9945                           ;usb_device.c: 2608: {
  9946                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9947  001046  0E10               	movlw	16
  9948  001048  B4D8               	btfsc	status,2,c
  9949                           
  9950                           ; BSR set to: 15
  9951                           ;usb_device.c: 2611: else
  9952                           ;usb_device.c: 2612: {
  9953                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9954  00104A  0E04               	movlw	4
  9955                           
  9956                           ;usb_device.c: 2610: }
  9957  00104C  0100               	movlb	0	; () banked
  9958  00104E  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  9959  001050                     i2l3737:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;usb_device.c: 2614: }
  9963                           ;usb_device.c: 2615: }
  9964                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9965  001050  0426               	decf	_controlTransferState,w,c	;volatile
  9966  001052  E112               	bnz	i2l584
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;usb_device.c: 2619: {
  9970                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
  9971  001054  D828               	call	PL48	;call to abstracted procedure
  9972  001056  D821               	call	PL44	;call to abstracted procedure
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9976  001058  EC85  F006         	call	_USBCtrlTrfTxService	;wreg free
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9980  00105C  0E02               	movlw	2
  9981  00105E  1827               	xorwf	_shortPacketStatus,w,c	;volatile
  9982  001060  E103               	bnz	i2l3749
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;usb_device.c: 2628: {
  9986                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  9987  001062  D816               	call	PL16	;call to abstracted procedure
  9988  001064  0E04               	movlw	4
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9992                           
  9993                           ;usb_device.c: 2633: }
  9994  001066  D00C               	goto	PL8	;call to abstracted procedure
  9995  001068                     i2l3749:
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;usb_device.c: 2634: else
  9999                           ;usb_device.c: 2635: {
 10000                           ;usb_device.c: 2636: if(lastDTS == 0)
 10001  001068  502B               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10002  00106A  E103               	bnz	i2l3755
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;usb_device.c: 2637: {
 10006                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10007  00106C  D811               	call	PL16	;call to abstracted procedure
 10008  00106E  0E48               	movlw	72
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10012                           
 10013                           ;usb_device.c: 2640: }
 10014  001070  D007               	goto	PL8	;call to abstracted procedure
 10015  001072                     i2l3755:
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;usb_device.c: 2641: else
 10019                           ;usb_device.c: 2642: {
 10020                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10021  001072  D80E               	call	PL16	;call to abstracted procedure
 10022  001074  0E08               	movlw	8
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10026  001076  D004               	goto	PL8	;call to abstracted procedure
 10027  001078                     i2l584:
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;usb_device.c: 2648: else
 10031                           ;usb_device.c: 2649: {
 10032                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10033  001078  BE04               	btfsc	_outPipes+3,7,c	;volatile
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;usb_device.c: 2658: }
 10037                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;usb_device.c: 2656: {
 10041                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10042  00107A  9E04               	bcf	_outPipes+3,7,c	;volatile
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;usb_device.c: 2660: }
 10046                           ;usb_device.c: 2662: controlTransferState = 0;
 10047  00107C  6A26               	clrf	_controlTransferState,c	;volatile
 10048                           
 10049                           ; BSR set to: 0
 10050  00107E  0012               	return		;funcret
 10051  001080                     __end_of_USBCtrlTrfInHandler:
 10052                           	opt stack 0
 10053  001080                     PL8:
 10054                           	opt stack 20
 10055  001080  6EDF               	movwf	indf2,c
 10056  001082  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10057  001086  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10058  00108A  0E00               	movlw	0
 10059  00108C  8EDB               	bsf	plusw2,7,c
 10060  00108E  0C00               	retlw	0
 10061  001090                     __end_ofPL8:
 10062                           	opt stack 0
 10063  001090                     PL16:
 10064                           	opt stack 24
 10065  001090  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10066  001094  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10067  001098  0012               	return	
 10068  00109A                     __end_ofPL16:
 10069                           	opt stack 0
 10070  00109A                     PL44:
 10071                           	opt stack 20
 10072  00109A  22DA               	addwfc	fsr2h,f,c
 10073  00109C  0E38               	movlw	56
 10074  00109E  6EDE               	movwf	postinc2,c
 10075  0010A0  0E02               	movlw	2
 10076  0010A2  6EDD               	movwf	postdec2,c
 10077  0010A4  0C02               	retlw	2
 10078  0010A6                     __end_ofPL44:
 10079                           	opt stack 0
 10080  0010A6                     PL48:
 10081                           	opt stack 20
 10082  0010A6  EE20 F002          	lfsr	2,2
 10083  0010AA  500F               	movf	_pBDTEntryIn,w,c
 10084  0010AC  26D9               	addwf	fsr2l,f,c
 10085  0010AE  5010               	movf	_pBDTEntryIn+1,w,c
 10086  0010B0  0012               	return	
 10087  0010B2                     __end_ofPL48:
 10088                           	opt stack 0
 10089                           tblptru	equ	0xFF8
 10090                           tblptrh	equ	0xFF7
 10091                           tblptrl	equ	0xFF6
 10092                           tablat	equ	0xFF5
 10093                           prodh	equ	0xFF4
 10094                           prodl	equ	0xFF3
 10095                           intcon	equ	0xFF2
 10096                           postinc0	equ	0xFEE
 10097                           wreg	equ	0xFE8
 10098                           indf1	equ	0xFE7
 10099                           postdec1	equ	0xFE5
 10100                           fsr1h	equ	0xFE2
 10101                           fsr1l	equ	0xFE1
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           postdec2	equ	0xFDD
 10105                           plusw2	equ	0xFDB
 10106                           fsr2h	equ	0xFDA
 10107                           fsr2l	equ	0xFD9
 10108                           status	equ	0xFD8
 10109                           
 10110 ;; *************** function _USBCtrlTrfTxService *****************
 10111 ;; Defined at:
 10112 ;;		line 1771 in file "picLibs/usb_device.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10121 ;; Tracked objects:
 10122 ;;		On entry : 3D/2
 10123 ;;		On exit  : 3F/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2l  BANK2h
 10126 ;;      Params:         0       0       0       0       0
 10127 ;;      Locals:         1       0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0
 10129 ;;      Totals:         1       0       0       0       0
 10130 ;;Total ram usage:        1 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; This function calls:
 10133 ;;		Nothing
 10134 ;; This function is called by:
 10135 ;;		_USBCtrlEPAllowDataStage
 10136 ;;		_USBCtrlTrfInHandler
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text57
 10141  000D0A                     __ptext57:
 10142                           	opt stack 0
 10143  000D0A                     _USBCtrlTrfTxService:
 10144                           	opt stack 20
 10145                           
 10146                           ;usb_device.c: 1773: uint8_t byteToSend;
 10147                           ;usb_device.c: 1777: byteToSend = 8;
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;incstack = 0
 10151  000D0A  0E08               	movlw	8
 10152  000D0C  6E2A               	movwf	USBCtrlTrfTxService@byteToSend,c
 10153                           
 10154                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10155  000D0E  500E               	movf	_inPipes+5,w,c	;volatile
 10156  000D10  E10D               	bnz	i2l3203
 10157  000D12  0E08               	movlw	8
 10158  000D14  5C0D               	subwf	_inPipes+4,w,c	;volatile
 10159  000D16  E20A               	bc	i2l3203
 10160                           
 10161                           ;usb_device.c: 1779: {
 10162                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10163  000D18  C00D  F02A         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10164                           
 10165                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10166  000D1C  5027               	movf	_shortPacketStatus,w,c	;volatile
 10167  000D1E  E102               	bnz	i2l3199
 10168                           
 10169                           ;usb_device.c: 1788: {
 10170                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10171  000D20  0E01               	movlw	1
 10172  000D22  D003               	goto	L17
 10173  000D24                     i2l3199:
 10174                           
 10175                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10176  000D24  0427               	decf	_shortPacketStatus,w,c	;volatile
 10177  000D26  E102               	bnz	i2l3203
 10178                           
 10179                           ;usb_device.c: 1792: {
 10180                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10181  000D28  0E02               	movlw	2
 10182  000D2A                     L17:
 10183  000D2A  6E27               	movwf	_shortPacketStatus,c	;volatile
 10184  000D2C                     i2l3203:
 10185                           
 10186                           ;usb_device.c: 1794: }
 10187                           ;usb_device.c: 1795: }
 10188                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10189  000D2C  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10190  000D2E  5E0D               	subwf	_inPipes+4,f,c	;volatile
 10191  000D30  0E00               	movlw	0
 10192  000D32  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 10193                           
 10194                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10195  000D34  EE20 F001          	lfsr	2,1
 10196  000D38  D82F               	call	PL70	;call to abstracted procedure
 10197  000D3A  C02A  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10198                           
 10199                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10200  000D3E  0E38               	movlw	56
 10201  000D40  0100               	movlb	0	; () banked
 10202  000D42  6F7A               	movwf	_pDst& (0+255),b
 10203  000D44  0E02               	movlw	2
 10204  000D46  6F7B               	movwf	(_pDst+1)& (0+255),b
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10208  000D48  B00C               	btfsc	_inPipes+3,0,c	;volatile
 10209  000D4A  D01A               	goto	i2l3231
 10210  000D4C  D00B               	goto	i2l3221
 10211  000D4E                     i2l3213:
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;usb_device.c: 1812: {
 10215                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10216  000D4E  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10217  000D52  D819               	call	PL58	;call to abstracted procedure
 10218  000D54  64F7               	cpfsgt	tblptrh,c
 10219  000D56  D003               	bra	i2u195_47
 10220  000D58  0008               	tblrd		*
 10221  000D5A  50F5               	movf	tablat,w,c
 10222  000D5C  D002               	bra	i2u195_40
 10223  000D5E                     i2u195_47:
 10224  000D5E  EC87  F004         	call	PL30	;call to abstracted procedure
 10225  000D62                     i2u195_40:
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;usb_device.c: 1814: byteToSend--;
 10229  000D62  D81F               	call	PL72	;call to abstracted procedure
 10230  000D64                     i2l3221:
 10231                           
 10232                           ; BSR set to: 0
 10233  000D64  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10234  000D66  E1F3               	bnz	i2l3213
 10235  000D68  0012               	return	
 10236  000D6A                     i2l3223:
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;usb_device.c: 1820: {
 10240                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10241  000D6A  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10242  000D6E  D80B               	call	PL58	;call to abstracted procedure
 10243  000D70  64F7               	cpfsgt	tblptrh,c
 10244  000D72  D003               	bra	i2u197_47
 10245  000D74  0008               	tblrd		*
 10246  000D76  50F5               	movf	tablat,w,c
 10247  000D78  D002               	bra	i2u197_40
 10248  000D7A                     i2u197_47:
 10249  000D7A  EC87  F004         	call	PL30	;call to abstracted procedure
 10250  000D7E                     i2u197_40:
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;usb_device.c: 1822: byteToSend--;
 10254  000D7E  D811               	call	PL72	;call to abstracted procedure
 10255  000D80                     i2l3231:
 10256                           
 10257                           ; BSR set to: 0
 10258  000D80  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10259  000D82  E1F3               	bnz	i2l3223
 10260                           
 10261                           ; BSR set to: 0
 10262  000D84  0012               	return		;funcret
 10263  000D86                     __end_of_USBCtrlTrfTxService:
 10264                           	opt stack 0
 10265  000D86                     PL58:
 10266                           	opt stack 20
 10267  000D86  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10268  000D8A  6AF8               	clrf	tblptru,c
 10269  000D8C  C07A  FFD9         	movff	_pDst,fsr2l
 10270  000D90  C07B  FFDA         	movff	_pDst+1,fsr2h
 10271  000D94  0E02               	movlw	(high __ramtop+-1)
 10272  000D96  0012               	return	
 10273  000D98                     __end_ofPL58:
 10274                           	opt stack 0
 10275  000D98                     PL70:
 10276                           	opt stack 21
 10277  000D98  500F               	movf	_pBDTEntryIn,w,c
 10278  000D9A  26D9               	addwf	fsr2l,f,c
 10279  000D9C  5010               	movf	_pBDTEntryIn+1,w,c
 10280  000D9E  22DA               	addwfc	fsr2h,f,c
 10281  000DA0  0012               	return	
 10282  000DA2                     __end_ofPL70:
 10283                           	opt stack 0
 10284  000DA2                     PL72:
 10285                           	opt stack 20
 10286  000DA2  6EDF               	movwf	indf2,c
 10287  000DA4  4A09               	infsnz	_inPipes,f,c	;volatile
 10288  000DA6  2A0A               	incf	_inPipes+1,f,c	;volatile
 10289  000DA8  0100               	movlb	0	; () banked
 10290  000DAA  4B7A               	infsnz	_pDst& (0+255),f,b
 10291  000DAC  2B7B               	incf	(_pDst+1)& (0+255),f,b
 10292  000DAE  062A               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10293  000DB0  0012               	return	
 10294  000DB2                     __end_ofPL72:
 10295                           	opt stack 0
 10296                           tblptru	equ	0xFF8
 10297                           tblptrh	equ	0xFF7
 10298                           tblptrl	equ	0xFF6
 10299                           tablat	equ	0xFF5
 10300                           prodh	equ	0xFF4
 10301                           prodl	equ	0xFF3
 10302                           intcon	equ	0xFF2
 10303                           postinc0	equ	0xFEE
 10304                           wreg	equ	0xFE8
 10305                           indf1	equ	0xFE7
 10306                           postdec1	equ	0xFE5
 10307                           fsr1h	equ	0xFE2
 10308                           fsr1l	equ	0xFE1
 10309                           indf2	equ	0xFDF
 10310                           postinc2	equ	0xFDE
 10311                           postdec2	equ	0xFDD
 10312                           plusw2	equ	0xFDB
 10313                           fsr2h	equ	0xFDA
 10314                           fsr2l	equ	0xFD9
 10315                           status	equ	0xFD8
 10316                           tblptru	equ	0xFF8
 10317                           tblptrh	equ	0xFF7
 10318                           tblptrl	equ	0xFF6
 10319                           tablat	equ	0xFF5
 10320                           prodh	equ	0xFF4
 10321                           prodl	equ	0xFF3
 10322                           intcon	equ	0xFF2
 10323                           postinc0	equ	0xFEE
 10324                           wreg	equ	0xFE8
 10325                           indf1	equ	0xFE7
 10326                           postdec1	equ	0xFE5
 10327                           fsr1h	equ	0xFE2
 10328                           fsr1l	equ	0xFE1
 10329                           indf2	equ	0xFDF
 10330                           postinc2	equ	0xFDE
 10331                           postdec2	equ	0xFDD
 10332                           plusw2	equ	0xFDB
 10333                           fsr2h	equ	0xFDA
 10334                           fsr2l	equ	0xFD9
 10335                           status	equ	0xFD8
 10336                           
 10337                           	psect	rparam
 10338  0000                     tblptru	equ	0xFF8
 10339                           tblptrh	equ	0xFF7
 10340                           tblptrl	equ	0xFF6
 10341                           tablat	equ	0xFF5
 10342                           prodh	equ	0xFF4
 10343                           prodl	equ	0xFF3
 10344                           intcon	equ	0xFF2
 10345                           postinc0	equ	0xFEE
 10346                           wreg	equ	0xFE8
 10347                           indf1	equ	0xFE7
 10348                           postdec1	equ	0xFE5
 10349                           fsr1h	equ	0xFE2
 10350                           fsr1l	equ	0xFE1
 10351                           indf2	equ	0xFDF
 10352                           postinc2	equ	0xFDE
 10353                           postdec2	equ	0xFDD
 10354                           plusw2	equ	0xFDB
 10355                           fsr2h	equ	0xFDA
 10356                           fsr2l	equ	0xFD9
 10357                           status	equ	0xFD8
 10358                           
 10359                           	psect	temp
 10360  000052                     btemp:
 10361                           	opt stack 0
 10362  000052                     	ds	1
 10363  0000                     int$flags	set	btemp
 10364                           tblptru	equ	0xFF8
 10365                           tblptrh	equ	0xFF7
 10366                           tblptrl	equ	0xFF6
 10367                           tablat	equ	0xFF5
 10368                           prodh	equ	0xFF4
 10369                           prodl	equ	0xFF3
 10370                           intcon	equ	0xFF2
 10371                           postinc0	equ	0xFEE
 10372                           wreg	equ	0xFE8
 10373                           indf1	equ	0xFE7
 10374                           postdec1	equ	0xFE5
 10375                           fsr1h	equ	0xFE2
 10376                           fsr1l	equ	0xFE1
 10377                           indf2	equ	0xFDF
 10378                           postinc2	equ	0xFDE
 10379                           postdec2	equ	0xFDD
 10380                           plusw2	equ	0xFDB
 10381                           fsr2h	equ	0xFDA
 10382                           fsr2l	equ	0xFD9
 10383                           status	equ	0xFD8
 10384                           tblptru	equ	0xFF8
 10385                           tblptrh	equ	0xFF7
 10386                           tblptrl	equ	0xFF6
 10387                           tablat	equ	0xFF5
 10388                           prodh	equ	0xFF4
 10389                           prodl	equ	0xFF3
 10390                           intcon	equ	0xFF2
 10391                           postinc0	equ	0xFEE
 10392                           wreg	equ	0xFE8
 10393                           indf1	equ	0xFE7
 10394                           postdec1	equ	0xFE5
 10395                           fsr1h	equ	0xFE2
 10396                           fsr1l	equ	0xFE1
 10397                           indf2	equ	0xFDF
 10398                           postinc2	equ	0xFDE
 10399                           postdec2	equ	0xFDD
 10400                           plusw2	equ	0xFDB
 10401                           fsr2h	equ	0xFDA
 10402                           fsr2l	equ	0xFD9
 10403                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    197
    Data        18
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      81
    BANK0           160     31     130
    BANK1           256      0       0
    BANK2l           49      0       0
    BANK2h          113      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[767]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[767]), SetupPkt(BIGRAMhl[8]), 

    putrsUSBUSART@data	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK0[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK0[18]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 15
		 -> writeBuffer(BANK0[15]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 15
		 -> readBuffer(BANK0[15]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3760_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3760_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3760_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3760_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 15
		 -> cdc_data_tx(BIGRAMhl[15]), cdc_data_rx(BIGRAMhl[15]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2078$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2068$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2068$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2044$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2044$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2044$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2044$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_APP_DeviceCDCBasicDemoTasks
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_PIC18F26K40_readThreeBytes
    _getsUSBUSART->_USBTransferOnePacket
    _PIC18F26K40_readThreeBytes->_PIC18F26K40_sendByte
    _PIC18F26K40_loadPC->_PIC18F26K40_sendByte
    _PIC18F26K40_loadDataIntoNVM->_PIC18F26K40_sendByteMsbToLsb
    _PIC18F26K40_enterLowVoltageProg->_PIC18F26K40_sendByte
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2l

    None.

Critical Paths under _SYS_InterruptHigh in BANK2l

    None.

Critical Paths under _main in BANK2h

    None.

Critical Paths under _SYS_InterruptHigh in BANK2h

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13306
                                             29 BANK0      2     2      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK0      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                          6     6      0   11879
                                             24 BANK0      5     5      0
                   _BUTTON_IsPressed
                       _CDCTxService
    _PIC18F26K40_enterLowVoltageProg
     _PIC18F26K40_exitLowVoltageProg
        _PIC18F26K40_loadDataIntoNVM
                 _PIC18F26K40_loadPC
         _PIC18F26K40_readThreeBytes
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        3     2      1     268
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          2     0      2     270
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         3     1      2    2232
                                              9 BANK0      3     1      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_readThreeBytes                          18    14      4    1847
                                              6 BANK0     18    14      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadPC                                   8     4      4    1751
                                              6 BANK0      8     4      4
               _PIC18F26K40_sendByte
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_loadDataIntoNVM                         11     5      6     952
                                              4 BANK0     11     5      6
       _PIC18F26K40_sendByteMsbToLsb
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByteMsbToLsb                         4     4      0     130
                                              0 BANK0      4     4      0
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_exitLowVoltageProg                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIC18F26K40_enterLowVoltageProg                      4     4      0    1405
                                              6 BANK0      4     4      0
               _PIC18F26K40_sendByte
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (3) _PIC18F26K40_sendByte                                 6     5      1    1269
                                              0 BANK0      6     5      1
           _PIC18F26K40_setTrisToOut
 ---------------------------------------------------------------------------------
 (4) _PIC18F26K40_setTrisToOut                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2129
                                              9 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1928
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SYS_InterruptHigh                                   10    10      0   30325
                                             30 COMRAM    10    10      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       1     1      0   30325
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     1     1      0   17702
                                             28 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               0     0      0   17063
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   12982
                                             27 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 1     1      0    4487
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    4460
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3989
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                          _CDCInitEP
                 _USBCheckCDCRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (8) i2_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (9) i2_LED_Enable                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_BUTTON_Enable                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i2_USBTransferOnePacket                               9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (8) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (9) _LED_On                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _LED_Off                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _PIC18F26K40_enterLowVoltageProg
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
       _PIC18F26K40_setTrisToOut
     _PIC18F26K40_exitLowVoltageProg
     _PIC18F26K40_loadDataIntoNVM
       _PIC18F26K40_sendByteMsbToLsb
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_loadPC
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _PIC18F26K40_readThreeBytes
       _PIC18F26K40_sendByte
         _PIC18F26K40_setTrisToOut
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            1FF      0       0      14        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1F      82       4       81.3%
BIGRAMhh            71      0       0      12        0.0%
BITBANK2h           71      0       0       9        0.0%
BANK2h              71      0       0      10        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      51       1       86.2%
BIGRAMhl            31      0       0      13        0.0%
BITBANK2l           31      0       0      11        0.0%
BANK2l              31      0       0       7        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3       8        0.0%
DATA                 0      0      D3      15        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 15 18:37:37 2017

                               _USB_SD_Ptr 0301                                         PL2 0F66  
                                       PL4 0A8C                                         PL6 0A96  
                                       PL8 1080                                         l28 14F0  
                                       l29 14F2                                         l55 160A  
                                       l57 1630                                         l58 1632  
                              ?_LED_Enable 002A                              _USBDeviceInit 144A  
                       __size_of_CDCInitEP 0052                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                                        PL10 0AA0  
                                      PL20 0814                                        PL12 063C  
                                      PL30 090E                                        PL22 065C  
                                      PL14 07E2                                        PL40 083C  
                                      PL32 0B66                                        PL24 051A  
                                      PL16 1090                                        PL50 0B72  
                                      PL42 0524                                        PL34 1818  
                                      PL26 09EE                                        PL18 0AB0  
                                      PL60 0680                                        PL52 0932  
                                      PL44 109A                                        PL36 17AA  
                                      PL28 0B5A                                        PL70 0D98  
                                      PL62 053A                                        PL54 0EDC  
                                      PL46 1970                                        PL38 091A  
                              __CFG_LVP$ON 000000                                        PL80 0854  
                                      PL72 0DA2                                        PL64 054C  
                                      PL56 0CD2                                        PL48 10A6  
                                      PL90 0860                                        PL82 1018  
                                      PL74 1288                                        PL66 0556  
                                      PL58 0D86                                        PL92 0CF8  
                                      PL84 0CE6                                        PL76 13D2  
                                      PL68 0ABA                                        PL94 0B86  
                                      PL86 0CEE                                        PL78 1196  
                                      PL96 086A                                        PL88 0790  
                                      PL98 15F0       USER_USB_CALLBACK_EVENT_HANDLER@event 0036  
     USER_USB_CALLBACK_EVENT_HANDLER@pdata 0038                                        l101 056A  
                                      l111 05B4                                        l104 058E  
                                      l113 05CE                                        l114 05E2  
                                      l115 060A                                        l211 185C  
                                      l212 1860                                        l117 060E  
                                      l213 1864                                        l151 1A16  
                                      l209 1858                __end_of_USBStdGetDscHandler 090E  
                                      l448 179E                                        l449 179C  
                                      l752 099C                                        l738 17C4  
                                      _BDT 000200                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                                        _UIE 000F60  
                                      _UIR 000F62                     _APP_LEDUpdateUSBStatus 1302  
                               _USBSuspend 195A                               __CFG_BORV$30 000000  
                     USBStdSetCfgHandler@i 003E                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 069A  
                           _USBDeviceState 0081                               __CFG_FOSC$XT 000000  
                            _BUTTON_Enable 1A7C                      ??_USBCtrlTrfRxService 002A  
                 __size_ofi2_USBDeviceInit 0048                             ??_getsUSBUSART 00BC  
                                     PL100 0EF0                                       PL110 0AC4  
                                     PL102 0D00                                       PL120 1A76  
                                     PL112 0ACE                                       PL104 19D2  
                                     PL114 0A0A                                       PL106 11A4  
                                     PL116 1216                                       PL108 0B90  
                                     PL118 0692                   USBEnableEndpoint@options 0032  
                          __end_of_LED_Off 1906                                       l5011 1834  
               USBConfigureEndpoint@handle 0030                                       l4501 14CA  
                                     l4603 0BD0                                       l4533 0AE8  
                                     l4613 0C1E                                       l4605 0BD6  
                                     l4551 0B3C                                       l4801 09C0  
                                     l4721 1398                                       l4539 0B06  
                                     l4811 09D4                                       l4803 09C4  
                                     l4651 0DF6                                       l4715 1386  
                                     l4813 09EA                                       l4645 0DD2  
                                     l4725 13AA                                       l4495 14BA  
                                     l4655 0E0E                                       l4647 0DD8  
                                     l4719 1394                                       l4585 0BAC  
                                     l4729 13CE                                       l4745 1A5A  
                                     l4825 1868                                       l4905 19E0  
                                     l4833 1920                                       l4763 096E  
                                     l4755 095E                                       l4499 14C4  
                                     l4667 0E4C                                       l4587 0BB4  
                                     l4691 17CA                                       l4851 0590  
                                     l4677 1A1C                                       l4909 19EC  
                                     l4829 1910                                       l4933 081E  
                                     l4783 09B6                                       l4791 09B8  
                                     l4775 09A0                                       l4759 0966  
                                     l4599 0BC6                                       l4927 146E  
                                     l4793 09BE                                       l4769 098E  
                                     l4699 17DC                                       l4957 1482  
                                     l4895 0618                                       l4897 0626  
                    ??i2_SYSTEM_Initialize 002B                                       u4007 1844  
                                     u4017 0E04                                       u4027 0E1C  
                                     u4037 0E28                                       u4047 0E3A  
                                     u4057 0E46                                       u3514 1622  
                                     u4067 169C                                       u3515 161E  
                                     u3604 0BF6                                       u3605 0BF0  
                                     u3484 14E2                                       u3485 14DE  
                    ??_USBCtrlTrfTxService 002A                                       _UCFG 000F61  
                                     _UEP0 000F53                                       _UEP1 000F54  
                                     _UEIE 000F5B                                       _UCON 000F64  
                                     _UEIR 000F5F                            _CDCDataInHandle 0076  
   USBStdFeatureReqHandler@current_ep_data 0042                                       _pDst 007A  
                                     _main 1822                   ??i2_USBTransferOnePacket 002E  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                          _USBDeviceAttach 1786                                       btemp 0052  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0062                   __size_ofi2_BUTTON_Enable 0006  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 1018  
                   ??_USBCtrlTrfOutHandler 002C                               ___param_bank 000000  
                ??_USBStdFeatureReqHandler 003E                     __size_of_putrsUSBUSART 0034  
                     _PIC18F26K40_sendByte 14B0                   ??_USBStdGetStatusHandler 002A  
                           ?_USBDeviceInit 002A                              __CFG_PLLEN$ON 000000  
           PIC18F26K40_readThreeBytes@data 00C3                                _writeBuffer 0082  
                                    ?_main 002A          __size_of_USBCtrlEPServiceComplete 006A  
                                    _ANSEL 000F7E                     __end_of_USBDeviceTasks 0790  
                ?_USBCtrlEPServiceComplete 002A                                      i2l211 188A  
                                    i2l212 188E                                      i2l213 1892  
                                    i2l209 1886                                      i2l410 078C  
                                    i2l171 18B6                                      i2l411 073C  
                                    i2l172 18BA                                      i2l181 18E2  
                                    i2l173 18BE                                      i2l182 18E6  
                                    i2l183 18EA                                      i2l169 18B2  
                                    i2l409 0736                                      i2l179 18DE  
                                    i2l531 08FA                                      i2l540 11C0  
                                    i2l541 11C4                                      i2l614 03E2  
                                    i2l526 08C8                                      i2l607 0FBC  
                                    i2l632 04CA                                      i2l624 0488  
                                    i2l536 11B6                                      i2l529 08F6  
                                    i2l473 0F2C                                      i2l539 1204  
                                    i2l549 1814                                      i2l574 19A6  
                                    i2l399 06C2                                      i2l584 1078  
                                    i2l576 19B8                                      i2l598 0FA0  
                                    _UADDR 000F5C                                      i2l699 10F0  
                           __CFG_BBSIZ$OFF 000000                                      _USTAT 000F63  
         __end_of_PIC18F26K40_setTrisToOut 1A98                              __CFG_WRT0$OFF 000000  
       __size_of_USBCtrlEPAllowStatusStage 0068                              __CFG_WRT1$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           ?_BUTTON_Enable 002A                             __CFG_EBTR1$OFF 000000  
          __end_of_USBCtrlEPAllowDataStage 155E                                      _sd000 03C2  
                                    _sd001 037C                                      _sd002 0348  
                            __CFG_WRTB$OFF 000000             ?_USBIncrement1msInternalTimers 002A  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                                 i2memset@p1 002A  
                __size_of_BUTTON_IsPressed 001A                             __CFG_BOREN$OFF 000000  
                                    tablat 000FF5                        __size_of_LED_Enable 0030  
                                    plusw2 000FDB                          __end_of_CDCInitEP 15B0  
                                    status 000FD8                               __end_ofPL100 0EFC  
                             __end_ofPL110 0ACE                               __end_ofPL102 0D0A  
                             __end_ofPL120 1A7C                               __end_ofPL112 0AD8  
                             __end_ofPL104 19DA                               __end_ofPL114 0A14  
                             __end_ofPL106 11AE                               __end_ofPL116 1220  
                             __end_ofPL108 0B9A                               __end_ofPL118 069A  
                         __end_ofi2_memset 195A                            putUSBUSART@data 00B1  
             __size_of_USBStdSetCfgHandler 0084                             __CFG_MCLRE$OFF 000000  
                          __initialization 1646                      ?_PIC18F26K40_sendByte 00B1  
                             __end_of_main 1852                __size_of_PIC18F26K40_loadPC 003C  
                __size_of_USBCtrlEPService 0070                                     ??_main 00CE  
                            __activetblptr 000002                            ?_USBDeviceTasks 002A  
                              ?_USBSuspend 002A                                  ??_LED_Off 002A  
                             _cdc_mem_type 007C                              _putrsUSBUSART 17BA  
                  __end_of_USBDeviceAttach 17AA                           _CDCDataOutHandle 0078  
          PIC18F26K40_loadDataIntoNVM@data 00B5                                     _ANSELH 000F7F  
                          getsUSBUSART@len 00BB                     SYSTEM_Initialize@state 00B2  
                    __size_of_CDCTxService 00A8                                     i2l3003 176C  
                                   i2l3023 0C5E                                     i2l3041 0CB2  
                                   i2l3113 10E6                                     i2l3105 10D4  
                                   i2l3017 1896                                     i2l3203 0D2C  
                                   i2l3123 1104                                     i2l3213 0D4E  
                                   i2l3221 0D64                                     i2l3061 130C  
                                   i2l3029 0C7A                                     i2l3223 0D6A  
                                   i2l3231 0D80                                     i2l3135 111C  
                                   i2l4111 07AA                                     _LED_On 18AE  
                                   i2l3081 1358                                     i2l3073 133A  
                                   i2l3065 131A                                     i2l3129 1116  
                                   i2l3161 19CC                                     i2l3171 13F6  
                                   i2l3235 193A                                     i2l3307 0E78  
                                   i2l4035 1990                                     i2l3077 1348  
                                   i2l3069 132A                                     i2l3157 19C0  
                                   i2l3421 0446                                     i2l3413 0428  
                                   i2l3341 0898                                     i2l4037 1992  
                                   i2l4141 07BA                             __CFG_WDTEN$OFF 000000  
                                   i2l3255 124E                                     i2l3087 1362  
                                   i2l3095 10BE                                     i2l3167 13E2  
                                   i2l3239 194A                                     i2l4071 1812  
                                   i2l3089 136C                                     i2l3169 13EC  
                                   i2l3337 0884                                     i2l3329 0EC2  
                                   i2l3505 0F4C                                     i2l3099 10CA  
                                   i2l3179 13FE                                     i2l3451 04BA  
                                   i2l3427 0456                                     i2l3603 0FD8  
                                   i2l3283 1534                                     i2l4091 12F4  
                                   i2l4307 072A                                     i2l3533 0A3A  
                                   i2l3437 047C                                     i2l3349 08CC  
                                   i2l3357 08FE                                     i2l4333 0770  
                                   i2l3199 0D24                                     i2l3551 0A70  
                                   i2l5055 1412                                     i2l3439 0494  
                                   i2l3287 1548                                     i2l4335 0784  
                                   i2l4327 075A                                     i2l4255 06BA  
                                   i2l4247 06AE                                     i2l3529 0A2E  
                                   i2l5057 1446                                     i2l3465 04F0  
                                   i2l3449 04B4                                     i2l3369 11D2  
                                   i2l3481 0F14                                     i2l4281 06F4  
                                   i2l3555 0A78                                     i2l3539 0A48  
                                   i2l3467 04F6                                     i2l3459 04D6  
                                   i2l3379 11F6                                     i2l4275 06DE  
                                   i2l3397 03E4                                     i2l3485 0F1A  
                                   i2l4293 0708                                     i2l4269 06D4  
                                   i2l3737 1050                                     i2l3577 0FAA  
                                   i2l3497 0F3E                                     i2l4289 0700  
                                   i2l3755 1072                                     i2l4299 0712  
                                   i2l3749 1068                                     i2l3589 0FB0  
                                   i2l3677 16E4                                     i2l3685 1704  
                                   i2l3599 0FCC                                     i2l2993 18C2  
                                   i2l2977 1170                                     i2l2987 18EE  
                                   i2l2999 175E                              CDCTxService@i 00BA  
                 i2USBTransferOnePacket@ep 0030                          ??i2_USBDeviceInit 0032  
          __size_ofi2_USBTransferOnePacket 0080                          _shortPacketStatus 0027  
                           __CFG_XINST$OFF 000000               ??_PIC18F26K40_readThreeBytes 00BB  
                          USBDeviceTasks@i 0047                USBStdFeatureReqHandler@pUEP 0040  
                 USBTransferOnePacket@data 00B2                 USBCtrlTrfInHandler@lastDTS 002B  
                          ??_USBDeviceInit 00B9                               ?_putUSBUSART 00B1  
                           __CFG_STVREN$ON 000000                       __end_of_getsUSBUSART 13D2  
                        ??i2_BUTTON_Enable 002A                          _USBEnableEndpoint 1750  
          __size_of_USBStdGetStatusHandler 0068                                     _memcpy 16D2  
                            ?i2_LED_Enable 002A                                     _memset 1906  
                                   clear_0 166C                                     clear_1 1678  
              PIC18F26K40_readThreeBytes@i 00C8                PIC18F26K40_readThreeBytes@j 00C7  
                       ?_USBEnableEndpoint 0032              __size_of_USBTransferOnePacket 0082  
                          ??_BUTTON_Enable 00B1                               _CDCTxService 0946  
                             __mediumconst 0000                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                           ?_putrsUSBUSART 00B1                        ??_USBEnableEndpoint 0033  
                              _CtrlTrfData 000238                            __CFG_HFOFST$OFF 000000  
                 _PIC18F26K40_setTrisToOut 1A90               ?_APP_DeviceCDCBasicDemoTasks 002A  
      __size_of_PIC18F26K40_readThreeBytes 00B8                       _controlTransferState 0026  
                        _SYSTEM_Initialize 19DA                                 __accesstop 0060  
                  __end_of__initialization 167E                         ?_SYSTEM_Initialize 002A  
                            ___rparam_used 000001                   __size_of_USBStallHandler 002A  
                      __size_of_USBSuspend 0016                     ??_PIC18F26K40_sendByte 00B2  
                           __pcstackCOMRAM 002A                  __end_of_USBEnableEndpoint 1786  
                            __end_of_sd000 03C6                              __end_of_sd001 03B0  
                            __end_of_sd002 037C                               __pidataBANK0 1A5E  
                      ??_SYSTEM_Initialize 00B2                                  LED_On@led 002A  
         __size_of_USBCtrlEPAllowDataStage 0056                             ??i2_LED_Enable 002A  
                             ??_LED_Enable 00B1              __size_of_USBConfigureEndpoint 0064  
              __end_of_USBCtrlTrfInHandler 1080                    ?_APP_LEDUpdateUSBStatus 002A  
                               __end_ofPL2 0F94                                 __end_ofPL4 0A96  
                               __end_ofPL6 0AA0                                 __end_ofPL8 1090  
                   i2_USBTransferOnePacket 0C52                            __CFG_PCLKEN$OFF 000000  
                                ?i2_memset 002A                                 _cdc_rx_len 001C  
                               _cdc_tx_len 001B               ?_PIC18F26K40_loadDataIntoNVM 00B5  
                            _buttonMessage 00D0                   ??_USBCtrlTrfSetupHandler 0046  
                  _USBTicksSinceSuspendEnd 007D                           ?_USBDeviceAttach 002A  
                __end_of_SYSTEM_Initialize 19F6                           _BUTTON_IsPressed 1A12  
                   _USBStdGetStatusHandler 11AE                              _buttonPressed 007F  
                               __pbssBANK0 0060                                    ?_LED_On 002A  
            ??_APP_DeviceCDCBasicDemoTasks 00C9   __end_of_APP_DeviceCDCBasicDemoInitialize 1A46  
__size_of_APP_DeviceCDCBasicDemoInitialize 001A         ??_APP_DeviceCDCBasicDemoInitialize 002A  
        ?_APP_DeviceCDCBasicDemoInitialize 002A           _APP_DeviceCDCBasicDemoInitialize 1A2C  
                       __end_of_LED_Enable 1882                __size_of_USBWakeFromSuspend 0020  
                              _pBDTEntryIn 000F           __end_of_USBCtrlEPServiceComplete 0F66  
              __size_of_USBCheckCDCRequest 0080                       USBCtrlTrfRxService@i 002A  
                            LED_Enable@led 00B1             __end_of_APP_LEDUpdateUSBStatus 1372  
                                  ?_memcpy 002A               APP_DeviceCDCBasicDemoTasks@a 00CA  
                                  ?_memset 00B1                                 _device_dsc 03B0  
                         _USBCtrlEPService 1292                                 _ep_data_in 0073  
              __end_of_USBCtrlTrfRxService 0A8C                         _USBCheckStdRequest 0F94  
                        _configDescriptor1 0305                            ??_putrsUSBUSART 00B2  
                                  _LED_Off 18DA                __end_ofi2_SYSTEM_Initialize 19D2  
                               ??i2_memset 0030                __end_of_USBCtrlTrfTxService 0D86  
                      _USBStdSetCfgHandler 0E58        PIC18F26K40_loadDataIntoNVM@tempData 00BC  
                          __CFG_USBDIV$OFF 000000                        ?_USBCheckStdRequest 002A  
             __size_of_USBStdGetDscHandler 009A              ??_PIC18F26K40_loadDataIntoNVM 00BB  
                                  _UIEbits 000F60                                    _UIRbits 000F62  
                          __size_of_LED_On 002C                              _cdc_trf_state 0080  
           APP_LEDUpdateUSBStatus@ledCount 0019         __end_of_PIC18F26K40_readThreeBytes 0C52  
               _PIC18F26K40_readThreeBytes 0B9A                                    _pCDCDst 006A  
                                  _pCDCSrc 006D                            __CFG_PWRTEN$OFF 000000  
                    __size_of_getsUSBUSART 0060                                    __Hparam 0000  
          ??_USBIncrement1msInternalTimers 002A                       ?_USBStdSetCfgHandler 002A  
                                _CDCInitEP 155E                                    __Lparam 0000  
               __size_of_USBEnableEndpoint 0036                                 _readBuffer 0091  
                     ??_USBCheckStdRequest 0045              __size_of_USBCtrlTrfOutHandler 0020  
                         ??_USBDeviceTasks 0047                          ??_USBStallHandler 002A  
                             __psmallconst 0300       __size_of_APP_DeviceCDCBasicDemoTasks 00DC  
                     __size_of_putUSBUSART 0018                                    __pcinit 1646  
                       getsUSBUSART@buffer 00BA                            __size_of_memcpy 0042  
                          __size_of_memset 002A                  __end_of_configDescriptor1 0348  
                                  __ramtop 0300                                    __ptext0 1822  
                                  __ptext1 144A                                    __ptext2 1906  
                                  __ptext3 1786                                    __ptext4 19DA  
                                  __ptext5 1852                                    __ptext6 1A7C  
                                  __ptext7 0560                                    __ptext8 17BA  
                                  __ptext9 1A46                                    _inPipes 0009  
              _USBDeferOUTDataStagePackets 007E                               ??_USBSuspend 003E  
                          i2_USBDeviceInit 079A                           i2USBDeviceInit@i 0032  
                    PIC18F26K40_sendByte@i 00B6                      PIC18F26K40_sendByte@j 00B5  
                       __end_of_USB_CD_Ptr 0305                 __size_of_SYSTEM_Initialize 001C  
          __size_of_USBCtrlTrfSetupHandler 0040                       end_of_initialization 167E  
                             _getsUSBUSART 1372                       __end_ofi2_LED_Enable 18AE  
                       __end_of_USB_SD_Ptr 0304                                    memcpy@d 0030  
                                  memcpy@n 002E                                    memcpy@s 0032  
                      _pBDTEntryEP0OutNext 0015                                    memset@c 00B3  
                                  memset@n 00B5                                    memset@p 00B7  
                            __Lmediumconst 0000                            _USB1msTickCount 0066  
          _dummy_encapsulated_cmd_response 00A0                            i2_BUTTON_Enable 1A70  
                 ?_USBStdFeatureReqHandler 002A                      ??_USBStdSetCfgHandler 003E  
                               ?_CDCInitEP 002A                         __end_of_USBSuspend 1970  
     __size_of_PIC18F26K40_loadDataIntoNVM 00A6                    _USBCtrlEPAllowDataStage 1508  
                                  postdec1 000FE5                                    postdec2 000FDD  
               __end_of_PIC18F26K40_loadPC 1750                                    postinc0 000FEE  
                                  postinc2 000FDE                   PIC18F26K40_sendByte@info 00B4  
  __end_of_PIC18F26K40_enterLowVoltageProg 16D2   __size_of_PIC18F26K40_enterLowVoltageProg 0046  
         ?_PIC18F26K40_enterLowVoltageProg 002A          ??_PIC18F26K40_enterLowVoltageProg 00B7  
          _PIC18F26K40_enterLowVoltageProg 168C                   _USBCtrlEPServiceComplete 0EFC  
               _USBStatusStageEnabledFlag1 001F                 _USBStatusStageEnabledFlag2 001E  
                       USBEnableEndpoint@p 0033                                  _PORTAbits 000F80  
                                _PORTCbits 000F82                 ??_PIC18F26K40_setTrisToOut 00B1  
                                _TRISCbits 000F94              PIC18F26K40_loadPC@tempAddress 00BB  
                       _BothEP0OutUOWNsSet 0022                  USBConfigureEndpoint@EPNum 002F  
               ?_USBCtrlEPAllowStatusStage 002A        USER_USB_CALLBACK_EVENT_HANDLER@size 003A  
  APP_DeviceCDCBasicDemoTasks@numBytesRead 00C9                                  _USTATcopy 0028  
          ?_PIC18F26K40_exitLowVoltageProg 002A           ??_PIC18F26K40_exitLowVoltageProg 00B1  
             __end_of_USBTransferOnePacket 0B5A                             __end_of_LED_On 18DA  
                        putUSBUSART@length 00B2                     _USBCtrlTrfSetupHandler 15B0  
                 __end_of_BUTTON_IsPressed 1A2C                    ?i2_USBTransferOnePacket 002A  
                    __end_of_USBDeviceInit 14B0      __end_of_USBIncrement1msInternalTimers 1A12  
   __size_of_USBIncrement1msInternalTimers 001C              _USBIncrement1msInternalTimers 19F6  
                               LED_Off@led 002A                    __end_ofi2_USBDeviceInit 07E2  
                                i2memset@c 002C                                  i2memset@n 002E  
                                i2memset@p 0030                             __end_of_memcpy 1714  
                       putrsUSBUSART@pData 00B2                             __end_of_memset 1930  
                        _USBBusIsSuspended 0024                                __end_ofPL10 0AB0  
                              __end_ofPL20 083C                                __end_ofPL12 065C  
                              __end_ofPL30 091A                                __end_ofPL22 0680  
                              __end_ofPL14 0814                                __end_ofPL40 0854  
                              __end_ofPL32 0B72                                __end_ofPL24 0524  
                              __end_ofPL16 109A                                __end_ofPL50 0B86  
                              __end_ofPL42 053A                                __end_ofPL34 1822  
                              __end_ofPL26 0A0A                                __end_ofPL18 0ABA  
                              __end_ofPL60 0692                                __end_ofPL52 0946  
                              __end_ofPL44 10A6                                __end_ofPL36 17BA  
                              __end_ofPL28 0B66                                __end_ofPL70 0DA2  
                              __end_ofPL62 054C                                __end_ofPL54 0EF0  
                              __end_ofPL46 197C                                __end_ofPL38 0932  
                              __end_ofPL80 0860                                __end_ofPL72 0DB2  
                              __end_ofPL64 0556                                __end_ofPL56 0CE6  
                              __end_ofPL48 10B2                                __end_ofPL90 086A  
                              __end_ofPL82 1024                                __end_ofPL74 1292  
                              __end_ofPL66 0560                                __end_ofPL58 0D98  
                              __end_ofPL92 0D00                                __end_ofPL84 0CEE  
                              __end_ofPL76 13E0                                __end_ofPL68 0AC4  
                              __end_ofPL94 0B90                                __end_ofPL86 0CF8  
                              __end_ofPL78 11A4                                __end_ofPL96 0874  
                              __end_ofPL88 079A                                __end_ofPL98 15FC  
                      start_initialization 1646                    ?_USBStdGetStatusHandler 002A  
     PIC18F26K40_loadDataIntoNVM@LatchType 00BA                   i2SYSTEM_Initialize@state 002B  
                    __end_of_BUTTON_Enable 1A86              USBCtrlTrfRxService@byteToRead 002B  
                  __end_ofi2_BUTTON_Enable 1A76                                _cdc_data_rx 000280  
                              _cdc_data_tx 000240                          __size_ofi2_memset 002A  
             __end_of_USBConfigureEndpoint 1196            __end_of_USBStdFeatureReqHandler 051A  
                                 ??_LED_On 002A          __end_of_USBCtrlEPAllowStatusStage 1288  
                 __end_of_USBCtrlEPService 1302                  ??_USBCtrlEPAllowDataStage 002B  
                              ??_CDCInitEP 0036                             USBDeviceInit@i 00B9  
                   _pBDTEntryEP0OutCurrent 0017                    USBTransferOnePacket@dir 00B1  
                  USBTransferOnePacket@len 00B4             __end_ofi2_USBTransferOnePacket 0CD2  
            __size_of_PIC18F26K40_sendByte 0058                        _USBStdGetDscHandler 0874  
      PIC18F26K40_readThreeBytes@direction 00C2                                __pdataBANK0 00D0  
                                 ??_memcpy 0030                                   ??_memset 00B7  
                   BUTTON_IsPressed@button 00B1                     _USBActiveConfiguration 0029  
           __end_of_USBStdGetStatusHandler 1216                  PIC18F26K40_loadPC@address 00B7  
                                 ?_LED_Off 002A                                __pbssCOMRAM 0001  
                            __pcstackBANK0 00B1               __size_of_USBCtrlTrfInHandler 005C  
                    __size_ofi2_LED_Enable 002C                       ?_USBStdGetDscHandler 002A  
               __end_of_USBWakeFromSuspend 199C                            _USBStallHandler 17EE  
                             _pBDTEntryOut 0060                 __end_of_USBCheckCDCRequest 1132  
                 __size_of_USBDeviceAttach 0024                ?_PIC18F26K40_readThreeBytes 00B7  
                    i2BUTTON_Enable@button 002A                                  __pintcode 0008  
                             i2_LED_Enable 1882                           ?i2_USBDeviceInit 002A  
                     _USBTransferOnePacket 0AD8                                __smallconst 0300  
                    __end_of_putrsUSBUSART 17EE               __end_of_USBCtrlTrfOutHandler 19BC  
                    ??_USBStdGetDscHandler 002A                                _ep_data_out 0070  
                         ?i2_BUTTON_Enable 002A        __end_of_APP_DeviceCDCBasicDemoTasks 063C  
              _APP_DeviceCDCBasicDemoTasks 0560               __size_of_USBCtrlTrfRxService 0078  
            USBConfigureEndpoint@direction 002A               __size_ofi2_SYSTEM_Initialize 0016  
             __size_of_USBCtrlTrfTxService 007C                                   _LATCbits 000F8B  
               ??_USBCtrlEPServiceComplete 002B                                   _IPR2bits 000FA2  
                                 _PIE2bits 000FA0      PIC18F26K40_loadDataIntoNVM@IncreasePC 00B9  
                                 i2u210_40 08B2       __end_of_PIC18F26K40_sendByteMsbToLsb 1646  
    __size_of_PIC18F26K40_sendByteMsbToLsb 004A               _PIC18F26K40_sendByteMsbToLsb 15FC  
                                 i2u210_47 08B0                                   i2u211_40 08C4  
                                 i2u211_47 08C2                                   i2u213_40 08F0  
                                 i2u213_47 08EE                                   i2u183_40 1334  
                                 i2u195_40 0D62                                   _PIR2bits 000FA1  
                                 i2u195_47 0D5E                                   i2u197_40 0D7E  
                                 i2u197_47 0D7A                                   _RCONbits 000FD0  
                            ??_putUSBUSART 00B3                           __CFG_WDTPS$32768 000000  
                                 _UEP0bits 000F53                 _USBDeferINDataStagePackets 001D  
              __size_of_USBCheckStdRequest 0084                                   _UCONbits 000F64  
                     _USBConfigureEndpoint 1132           __size_of_USBStdFeatureReqHandler 0152  
                    ?_USBTransferOnePacket 00B1                            i2LED_Enable@led 002A  
                        _SYS_InterruptHigh 0008                              ?_CDCTxService 002A  
                             _RemoteWakeup 0025                                   i2_memset 1930  
      __end_of_PIC18F26K40_loadDataIntoNVM 0E58                _PIC18F26K40_loadDataIntoNVM 0DB2  
                       _PIC18F26K40_loadPC 1714                           __size_of_LED_Off 002C  
                       ?_SYS_InterruptHigh 002A                    __end_of_USBStallHandler 1818  
                                copy_data0 165A                          putrsUSBUSART@data 00B1  
              ??_USBCtrlEPAllowStatusStage 002A                __end_of_USBStdSetCfgHandler 0EDC  
                      ?_PIC18F26K40_loadPC 00B7                        ??_SYS_InterruptHigh 0048  
                       __end_of_device_dsc 03C2                   ??_APP_LEDUpdateUSBStatus 002B  
                  ?_USBCtrlTrfSetupHandler 002A                    USBStdGetStatusHandler@p 002A  
                                 __Hrparam 0000        PIC18F26K40_enterLowVoltageProg@code 00B7  
                                memcpy@tmp 0034                                   __Lrparam 0000  
                   USBTransferOnePacket@ep 00B7           PIC18F26K40_sendByteMsbToLsb@info 00B3  
            ?_PIC18F26K40_sendByteMsbToLsb 002A                                   _SetupPkt 000230  
                    ?_USBConfigureEndpoint 002A     __end_of_PIC18F26K40_exitLowVoltageProg 1A90  
  __size_of_PIC18F26K40_exitLowVoltageProg 000A             _PIC18F26K40_exitLowVoltageProg 1A86  
                        ??_USBDeviceAttach 00B1                          ?_BUTTON_IsPressed 002A  
                     ??_PIC18F26K40_loadPC 00BB                  __end_of_SYS_InterruptHigh 0062  
                       ??_BUTTON_IsPressed 00B1                        __end_of_putUSBUSART 1A5E  
                              _line_coding 00A8                             ??_CDCTxService 00BA  
            PIC18F26K40_sendByte@direction 00B1                    __size_of_USBDeviceTasks 00F6  
                                 __ptext10 1372                                   __ptext11 0B9A  
                                 __ptext20 0AD8                                   __ptext12 1714  
                                 __ptext21 1A12                                   __ptext13 0DB2  
                                 __ptext30 16D2                                   __ptext14 15FC  
                                 __ptext31 15B0                                   __ptext23 069A  
                                 __ptext15 1A86                                   __ptext40 13E0  
                                 __ptext32 0EFC                                   __ptext24 079A  
                                 __ptext16 168C                                   __ptext41 19BC  
                                 __ptext33 1508                                   __ptext25 197C  
                                 __ptext17 14B0                                   __ptext50 18AE  
                                 __ptext42 1882                                   __ptext34 0F94  
                                 __ptext26 195A                                   __ptext18 1A90  
                                 __ptext51 18DA                                   __ptext43 1A70  
                                 __ptext35 0E58                                   __ptext27 17EE  
                                 __ptext19 0946                                   __ptext52 1A2C  
                                 __ptext44 10B2                                   __ptext36 1930  
                                 __ptext28 19F6                                   __ptext53 199C  
                                 __ptext45 155E                                   __ptext37 11AE  
                                 __ptext29 1292                                   __ptext54 0A14  
                                 __ptext46 0C52                                   __ptext38 0874  
                                 __ptext55 1220                                   __ptext47 1750  
                                 __ptext39 03C8                                   __ptext56 1024  
                                 __ptext48 1132                                   __ptext57 0D0A  
                                 __ptext49 1302          __size_of_PIC18F26K40_setTrisToOut 0008  
           __end_of_USBCtrlTrfSetupHandler 15F0                              __size_of_main 0030  
                        ?_USBCtrlEPService 002A                  ?_PIC18F26K40_setTrisToOut 002A  
                       ??_USBCtrlEPService 0046                        _USBCtrlTrfInHandler 1024  
                      BUTTON_Enable@button 00B1                                   _outPipes 0001  
                     _USBCtrlTrfOutHandler 199C                                   int$flags 0052  
                _USBCtrlEPAllowStatusStage 1220                                 _LED_Enable 1852  
                   ??_USBTransferOnePacket 00B5                           putrsUSBUSART@len 00B3  
                _USBDeferStatusStagePacket 0020                   CDCTxService@byte_to_send 00BB  
                               _INTCONbits 000FF2                       ?_USBCtrlTrfInHandler 002A  
                                 memcpy@d1 002A                                   memcpy@s1 002C  
            USBCtrlTrfTxService@byteToSend 002A               __end_of_PIC18F26K40_sendByte 1508  
                                 memset@p1 00B1                           ?_USBStallHandler 002A  
                 USBStdFeatureReqHandler@p 0043                                   intlevel2 0000  
                   __size_of_USBDeviceInit 0066    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 144A  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 006A          ??_USER_USB_CALLBACK_EVENT_HANDLER 003C  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 0036            _USER_USB_CALLBACK_EVENT_HANDLER 13E0  
             i2USBTransferOnePacket@handle 0031            __size_of_APP_LEDUpdateUSBStatus 0070  
               i2USBTransferOnePacket@data 002B                     ??_USBConfigureEndpoint 002B  
                    ?_USBCtrlTrfOutHandler 002A                     __size_of_BUTTON_Enable 000A  
                              _putUSBUSART 1A46                       __CFG_CPUDIV$NOCLKDIV 000000  
                      _USBCtrlTrfRxService 0A14                         _USBWakeFromSuspend 197C  
                  _USBStdFeatureReqHandler 03C8                        i2_SYSTEM_Initialize 19BC  
                       _USBCheckCDCRequest 10B2                        _USBCtrlTrfTxService 0D0A  
               __size_of_SYS_InterruptHigh 005A             ??_PIC18F26K40_sendByteMsbToLsb 00B1  
            PIC18F26K40_sendByteMsbToLsb@i 00B4                        ?_USBWakeFromSuspend 002A  
                    ??_USBCtrlTrfInHandler 002B                      _USBAlternateInterface 00AF  
                      ?_USBCheckCDCRequest 002A                  i2USBTransferOnePacket@dir 002A  
                i2USBTransferOnePacket@len 002D                        USBEnableEndpoint@ep 0035  
                          _endpoint_number 0023                       ?_USBCtrlTrfRxService 002A  
                            ?_getsUSBUSART 00BA                       ?i2_SYSTEM_Initialize 002A  
                 ?_USBCtrlEPAllowDataStage 002A                       ?_USBCtrlTrfTxService 002A  
             _USBStatusStageTimeoutCounter 0021       PIC18F26K40_readThreeBytes@IncreasePC 00B7  
                     ??_USBWakeFromSuspend 003E                 USBTransferOnePacket@handle 00B8  
                     __end_of_CDCTxService 09EE                       ??_USBCheckCDCRequest 002A  
                               _USB_CD_Ptr 0304  
