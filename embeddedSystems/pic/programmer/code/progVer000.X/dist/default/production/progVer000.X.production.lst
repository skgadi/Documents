

Microchip Technology PIC18 PRO Macro Assembler V1.42 build -159332390 
                                                                                               Wed May 31 18:09:35 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	pa_nodes0,global,class=CODE,delta=1
    80                           	dabs	1,0x200,48,_BDT
    81                           	dabs	1,0x280,64,_cdc_data_rx
    82                           	dabs	1,0x240,64,_cdc_data_tx
    83                           	dabs	1,0x238,8,_CtrlTrfData
    84                           	dabs	1,0x230,8,_SetupPkt
    85  0000                     
    86                           ; Version 1.42
    87                           ; Generated 13/04/2017 GMT
    88                           ; 
    89                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F14K50 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           tblptrl	equ	0xFF6
   123                           tablat	equ	0xFF5
   124                           prodh	equ	0xFF4
   125                           prodl	equ	0xFF3
   126                           intcon	equ	0xFF2
   127                           wreg	equ	0xFE8
   128                           indf1	equ	0xFE7
   129                           fsr1h	equ	0xFE2
   130                           fsr1l	equ	0xFE1
   131                           indf2	equ	0xFDF
   132                           postinc2	equ	0xFDE
   133                           postdec2	equ	0xFDD
   134                           plusw2	equ	0xFDB
   135                           fsr2h	equ	0xFDA
   136                           fsr2l	equ	0xFD9
   137                           status	equ	0xFD8
   138                           
   139                           	psect	idataBANK0
   140  001BBC                     __pidataBANK0:
   141                           	opt stack 0
   142                           
   143                           ;initializer for _buttonMessage
   144  001BBC  42                 	db	66
   145  001BBD  75                 	db	117
   146  001BBE  74                 	db	116
   147  001BBF  74                 	db	116
   148  001BC0  6F                 	db	111
   149  001BC1  6E                 	db	110
   150  001BC2  20                 	db	32
   151  001BC3  70                 	db	112
   152  001BC4  72                 	db	114
   153  001BC5  65                 	db	101
   154  001BC6  73                 	db	115
   155  001BC7  73                 	db	115
   156  001BC8  65                 	db	101
   157  001BC9  64                 	db	100
   158  001BCA  2E                 	db	46
   159  001BCB  0D                 	db	13
   160  001BCC  0A                 	db	10
   161  001BCD  00                 	db	0
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           prodh	equ	0xFF4
   167                           prodl	equ	0xFF3
   168                           intcon	equ	0xFF2
   169                           wreg	equ	0xFE8
   170                           indf1	equ	0xFE7
   171                           fsr1h	equ	0xFE2
   172                           fsr1l	equ	0xFE1
   173                           indf2	equ	0xFDF
   174                           postinc2	equ	0xFDE
   175                           postdec2	equ	0xFDD
   176                           plusw2	equ	0xFDB
   177                           fsr2h	equ	0xFDA
   178                           fsr2l	equ	0xFD9
   179                           status	equ	0xFD8
   180                           
   181                           	psect	smallconst
   182  000300                     __psmallconst:
   183                           	opt stack 0
   184  000300  00                 	db	0
   185  000301                     _USB_SD_Ptr:
   186                           	opt stack 0
   187  000301  C2                 	db	low _sd000
   188  000302  7C                 	db	low _sd001
   189  000303  48                 	db	low _sd002
   190  000304                     __end_of_USB_SD_Ptr:
   191                           	opt stack 0
   192  000304                     _USB_CD_Ptr:
   193                           	opt stack 0
   194  000304  05                 	db	low _configDescriptor1
   195  000305                     __end_of_USB_CD_Ptr:
   196                           	opt stack 0
   197  000305                     _configDescriptor1:
   198                           	opt stack 0
   199  000305  09                 	db	9
   200  000306  02                 	db	2
   201  000307  43                 	db	67
   202  000308  00                 	db	0
   203  000309  02                 	db	2
   204  00030A  01                 	db	1
   205  00030B  00                 	db	0
   206  00030C  C0                 	db	192
   207  00030D  32                 	db	50
   208  00030E  09                 	db	9
   209  00030F  04                 	db	4
   210  000310  00                 	db	0
   211  000311  00                 	db	0
   212  000312  01                 	db	1
   213  000313  02                 	db	2
   214  000314  02                 	db	2
   215  000315  01                 	db	1
   216  000316  00                 	db	0
   217  000317  05                 	db	5
   218  000318  24                 	db	36
   219  000319  00                 	db	0
   220  00031A  10                 	db	16
   221  00031B  01                 	db	1
   222  00031C  04                 	db	4
   223  00031D  24                 	db	36
   224  00031E  02                 	db	2
   225  00031F  02                 	db	2
   226  000320  05                 	db	5
   227  000321  24                 	db	36
   228  000322  06                 	db	6
   229  000323  00                 	db	0
   230  000324  01                 	db	1
   231  000325  05                 	db	5
   232  000326  24                 	db	36
   233  000327  01                 	db	1
   234  000328  00                 	db	0
   235  000329  01                 	db	1
   236  00032A  07                 	db	7
   237  00032B  05                 	db	5
   238  00032C  81                 	db	129
   239  00032D  03                 	db	3
   240  00032E  08                 	db	8
   241  00032F  00                 	db	0
   242  000330  02                 	db	2
   243  000331  09                 	db	9
   244  000332  04                 	db	4
   245  000333  01                 	db	1
   246  000334  00                 	db	0
   247  000335  02                 	db	2
   248  000336  0A                 	db	10
   249  000337  00                 	db	0
   250  000338  00                 	db	0
   251  000339  00                 	db	0
   252  00033A  07                 	db	7
   253  00033B  05                 	db	5
   254  00033C  02                 	db	2
   255  00033D  02                 	db	2
   256  00033E  40                 	db	64
   257  00033F  00                 	db	0
   258  000340  00                 	db	0
   259  000341  07                 	db	7
   260  000342  05                 	db	5
   261  000343  82                 	db	130
   262  000344  02                 	db	2
   263  000345  40                 	db	64
   264  000346  00                 	db	0
   265  000347  00                 	db	0
   266  000348                     __end_of_configDescriptor1:
   267                           	opt stack 0
   268  000348                     _sd002:
   269                           	opt stack 0
   270  000348  34                 	db	52
   271  000349  03                 	db	3
   272  00034A  0043               	dw	67
   273  00034C  0044               	dw	68
   274  00034E  0043               	dw	67
   275  000350  0020               	dw	32
   276  000352  0052               	dw	82
   277  000354  0053               	dw	83
   278  000356  002D               	dw	45
   279  000358  0032               	dw	50
   280  00035A  0033               	dw	51
   281  00035C  0032               	dw	50
   282  00035E  0020               	dw	32
   283  000360  0045               	dw	69
   284  000362  006D               	dw	109
   285  000364  0075               	dw	117
   286  000366  006C               	dw	108
   287  000368  0061               	dw	97
   288  00036A  0074               	dw	116
   289  00036C  0069               	dw	105
   290  00036E  006F               	dw	111
   291  000370  006E               	dw	110
   292  000372  0020               	dw	32
   293  000374  0044               	dw	68
   294  000376  0065               	dw	101
   295  000378  006D               	dw	109
   296  00037A  006F               	dw	111
   297  00037C                     __end_of_sd002:
   298                           	opt stack 0
   299  00037C                     _sd001:
   300                           	opt stack 0
   301  00037C  34                 	db	52
   302  00037D  03                 	db	3
   303  00037E  004D               	dw	77
   304  000380  0069               	dw	105
   305  000382  0063               	dw	99
   306  000384  0072               	dw	114
   307  000386  006F               	dw	111
   308  000388  0063               	dw	99
   309  00038A  0068               	dw	104
   310  00038C  0069               	dw	105
   311  00038E  0070               	dw	112
   312  000390  0020               	dw	32
   313  000392  0054               	dw	84
   314  000394  0065               	dw	101
   315  000396  0063               	dw	99
   316  000398  0068               	dw	104
   317  00039A  006E               	dw	110
   318  00039C  006F               	dw	111
   319  00039E  006C               	dw	108
   320  0003A0  006F               	dw	111
   321  0003A2  0067               	dw	103
   322  0003A4  0079               	dw	121
   323  0003A6  0020               	dw	32
   324  0003A8  0049               	dw	73
   325  0003AA  006E               	dw	110
   326  0003AC  0063               	dw	99
   327  0003AE  002E               	dw	46
   328  0003B0                     __end_of_sd001:
   329                           	opt stack 0
   330  0003B0                     _device_dsc:
   331                           	opt stack 0
   332  0003B0  12                 	db	18
   333  0003B1  01                 	db	1
   334  0003B2  0200               	dw	512
   335  0003B4  02                 	db	2
   336  0003B5  00                 	db	0
   337  0003B6  00                 	db	0
   338  0003B7  08                 	db	8
   339  0003B8  04D8               	dw	1240
   340  0003BA  000A               	dw	10
   341  0003BC  0100               	dw	256
   342  0003BE  01                 	db	1
   343  0003BF  02                 	db	2
   344  0003C0  00                 	db	0
   345  0003C1  01                 	db	1
   346  0003C2                     __end_of_device_dsc:
   347                           	opt stack 0
   348  0003C2                     _sd000:
   349                           	opt stack 0
   350  0003C2  04                 	db	4
   351  0003C3  03                 	db	3
   352  0003C4  0409               	dw	1033
   353  0003C6                     __end_of_sd000:
   354                           	opt stack 0
   355  0000                     _UEP0bits	set	3923
   356  0000                     _UADDR	set	3932
   357  0000                     _UEIE	set	3931
   358  0000                     _UEIR	set	3935
   359  0000                     _UEP1	set	3924
   360  0000                     _UEP0	set	3923
   361  0000                     _PORTCbits	set	3970
   362  0000                     _LATBbits	set	3978
   363  0000                     _TRISBbits	set	3987
   364  0000                     _ANSELH	set	3967
   365  0000                     _ANSEL	set	3966
   366  0000                     _INTCONbits	set	4082
   367  0000                     _IPR2bits	set	4002
   368  0000                     _RCONbits	set	4048
   369  0000                     _UCON	set	3940
   370  0000                     _USTAT	set	3939
   371  0000                     _PIR2bits	set	4001
   372  0000                     _UIEbits	set	3936
   373  0000                     _UIRbits	set	3938
   374  0000                     _UIE	set	3936
   375  0000                     _UCFG	set	3937
   376  0000                     _UIR	set	3938
   377  0000                     _PIE2bits	set	4000
   378  0000                     _TRISCbits	set	3988
   379  0000                     _LATCbits	set	3979
   380  0000                     _PORTAbits	set	3968
   381  0000                     _UCONbits	set	3940
   382  0003C6                     STR_1:
   383                           
   384                           ; BSR set to: 0
   385  0003C6  41                 	db	65	;'A'
   386  0003C7  20                 	db	32
   387  0003C8  70                 	db	112	;'p'
   388  0003C9  72                 	db	114	;'r'
   389  0003CA  65                 	db	101	;'e'
   390  0003CB  73                 	db	115	;'s'
   391  0003CC  73                 	db	115	;'s'
   392  0003CD  65                 	db	101	;'e'
   393  0003CE  64                 	db	100	;'d'
   394  0003CF  0A                 	db	10
   395  0003D0  0D                 	db	13
   396  0003D1  00                 	db	0
   397                           
   398                           ; #config settings
   399  0003D2  00                 	db	0	; dummy byte at the end
   400  0000                     tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           prodh	equ	0xFF4
   405                           prodl	equ	0xFF3
   406                           intcon	equ	0xFF2
   407                           wreg	equ	0xFE8
   408                           indf1	equ	0xFE7
   409                           fsr1h	equ	0xFE2
   410                           fsr1l	equ	0xFE1
   411                           indf2	equ	0xFDF
   412                           postinc2	equ	0xFDE
   413                           postdec2	equ	0xFDD
   414                           plusw2	equ	0xFDB
   415                           fsr2h	equ	0xFDA
   416                           fsr2l	equ	0xFD9
   417                           status	equ	0xFD8
   418                           
   419                           	psect	cinit
   420  00177C                     __pcinit:
   421                           	opt stack 0
   422  00177C                     start_initialization:
   423                           	opt stack 0
   424  00177C                     __initialization:
   425                           	opt stack 0
   426                           
   427                           ; Initialize objects allocated to BANK0 (18 bytes)
   428                           ; load TBLPTR registers with __pidataBANK0
   429  00177C  0EBC               	movlw	low __pidataBANK0
   430  00177E  6EF6               	movwf	tblptrl,c
   431  001780  0E1B               	movlw	high __pidataBANK0
   432  001782  6EF7               	movwf	tblptrh,c
   433  001784  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   434  001786  6EF8               	movwf	tblptru,c
   435  001788  EE00  F0ED         	lfsr	0,__pdataBANK0
   436  00178C  EE10 F012          	lfsr	1,18
   437  001790                     copy_data0:
   438  001790  0009               	tblrd		*+
   439  001792  CFF5 FFEE          	movff	tablat,postinc0
   440  001796  50E5               	movf	postdec1,w,c
   441  001798  50E1               	movf	fsr1l,w,c
   442  00179A  E1FA               	bnz	copy_data0
   443                           
   444                           ; Clear objects allocated to BANK1 (64 bytes)
   445  00179C  EE01  F000         	lfsr	0,__pbssBANK1
   446  0017A0  0E40               	movlw	64
   447  0017A2                     clear_0:
   448  0017A2  6AEE               	clrf	postinc0,c
   449  0017A4  06E8               	decf	wreg,f,c
   450  0017A6  E1FD               	bnz	clear_0
   451                           
   452                           ; Clear objects allocated to BANK0 (115 bytes)
   453  0017A8  EE00  F060         	lfsr	0,__pbssBANK0
   454  0017AC  0E73               	movlw	115
   455  0017AE                     clear_1:
   456  0017AE  6AEE               	clrf	postinc0,c
   457  0017B0  06E8               	decf	wreg,f,c
   458  0017B2  E1FD               	bnz	clear_1
   459                           
   460                           ; Clear objects allocated to COMRAM (41 bytes)
   461  0017B4  EE00  F001         	lfsr	0,__pbssCOMRAM
   462  0017B8  0E29               	movlw	41
   463  0017BA                     clear_2:
   464  0017BA  6AEE               	clrf	postinc0,c
   465  0017BC  06E8               	decf	wreg,f,c
   466  0017BE  E1FD               	bnz	clear_2
   467  0017C0                     end_of_initialization:
   468                           	opt stack 0
   469  0017C0                     __end_of__initialization:
   470                           	opt stack 0
   471  0017C0  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   472  0017C2  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   473  0017C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   474  0017C6  6EF8               	movwf	tblptru,c
   475  0017C8  0100               	movlb	0
   476  0017CA  EFA6  F00C         	goto	_main	;jump to C main() function
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           prodh	equ	0xFF4
   482                           prodl	equ	0xFF3
   483                           intcon	equ	0xFF2
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           indf1	equ	0xFE7
   487                           postdec1	equ	0xFE5
   488                           fsr1h	equ	0xFE2
   489                           fsr1l	equ	0xFE1
   490                           indf2	equ	0xFDF
   491                           postinc2	equ	0xFDE
   492                           postdec2	equ	0xFDD
   493                           plusw2	equ	0xFDB
   494                           fsr2h	equ	0xFDA
   495                           fsr2l	equ	0xFD9
   496                           status	equ	0xFD8
   497                           
   498                           	psect	bssCOMRAM
   499  000001                     __pbssCOMRAM:
   500                           	opt stack 0
   501  000001                     _outPipes:
   502                           	opt stack 0
   503  000001                     	ds	8
   504  000009                     _inPipes:
   505                           	opt stack 0
   506  000009                     	ds	6
   507  00000F                     _pBDTEntryIn:
   508                           	opt stack 0
   509  00000F                     	ds	6
   510  000015                     _pBDTEntryEP0OutNext:
   511                           	opt stack 0
   512  000015                     	ds	2
   513  000017                     _pBDTEntryEP0OutCurrent:
   514                           	opt stack 0
   515  000017                     	ds	2
   516  000019                     APP_LEDUpdateUSBStatus@ledCount:
   517                           	opt stack 0
   518  000019                     	ds	2
   519  00001B                     _cdc_tx_len:
   520                           	opt stack 0
   521  00001B                     	ds	1
   522  00001C                     _cdc_rx_len:
   523                           	opt stack 0
   524  00001C                     	ds	1
   525  00001D                     _USBDeferINDataStagePackets:
   526                           	opt stack 0
   527  00001D                     	ds	1
   528  00001E                     _USBStatusStageEnabledFlag2:
   529                           	opt stack 0
   530  00001E                     	ds	1
   531  00001F                     _USBStatusStageEnabledFlag1:
   532                           	opt stack 0
   533  00001F                     	ds	1
   534  000020                     _USBDeferStatusStagePacket:
   535                           	opt stack 0
   536  000020                     	ds	1
   537  000021                     _USBStatusStageTimeoutCounter:
   538                           	opt stack 0
   539  000021                     	ds	1
   540  000022                     _BothEP0OutUOWNsSet:
   541                           	opt stack 0
   542  000022                     	ds	1
   543  000023                     _endpoint_number:
   544                           	opt stack 0
   545  000023                     	ds	1
   546  000024                     _USBBusIsSuspended:
   547                           	opt stack 0
   548  000024                     	ds	1
   549  000025                     _RemoteWakeup:
   550                           	opt stack 0
   551  000025                     	ds	1
   552  000026                     _controlTransferState:
   553                           	opt stack 0
   554  000026                     	ds	1
   555  000027                     _shortPacketStatus:
   556                           	opt stack 0
   557  000027                     	ds	1
   558  000028                     _USTATcopy:
   559                           	opt stack 0
   560  000028                     	ds	1
   561  000029                     _USBActiveConfiguration:
   562                           	opt stack 0
   563  000029                     	ds	1
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           prodh	equ	0xFF4
   569                           prodl	equ	0xFF3
   570                           intcon	equ	0xFF2
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           indf1	equ	0xFE7
   574                           postdec1	equ	0xFE5
   575                           fsr1h	equ	0xFE2
   576                           fsr1l	equ	0xFE1
   577                           indf2	equ	0xFDF
   578                           postinc2	equ	0xFDE
   579                           postdec2	equ	0xFDD
   580                           plusw2	equ	0xFDB
   581                           fsr2h	equ	0xFDA
   582                           fsr2l	equ	0xFD9
   583                           status	equ	0xFD8
   584                           
   585                           	psect	bssBANK0
   586  000060                     __pbssBANK0:
   587                           	opt stack 0
   588  000060                     _pBDTEntryOut:
   589                           	opt stack 0
   590  000060                     	ds	6
   591  000066                     _USB1msTickCount:
   592                           	opt stack 0
   593  000066                     	ds	4
   594  00006A                     _pCDCDst:
   595                           	opt stack 0
   596  00006A                     	ds	3
   597  00006D                     _pCDCSrc:
   598                           	opt stack 0
   599  00006D                     	ds	3
   600  000070                     _ep_data_out:
   601                           	opt stack 0
   602  000070                     	ds	3
   603  000073                     _ep_data_in:
   604                           	opt stack 0
   605  000073                     	ds	3
   606  000076                     _CDCDataInHandle:
   607                           	opt stack 0
   608  000076                     	ds	2
   609  000078                     _CDCDataOutHandle:
   610                           	opt stack 0
   611  000078                     	ds	2
   612  00007A                     _pDst:
   613                           	opt stack 0
   614  00007A                     	ds	2
   615  00007C                     _cdc_mem_type:
   616                           	opt stack 0
   617  00007C                     	ds	1
   618  00007D                     _USBTicksSinceSuspendEnd:
   619                           	opt stack 0
   620  00007D                     	ds	1
   621  00007E                     _USBDeferOUTDataStagePackets:
   622                           	opt stack 0
   623  00007E                     	ds	1
   624  00007F                     _buttonPressed:
   625                           	opt stack 0
   626  00007F                     	ds	1
   627  000080                     _cdc_trf_state:
   628                           	opt stack 0
   629  000080                     	ds	1
   630  000081                     _USBDeviceState:
   631                           	opt stack 0
   632  000081                     	ds	1
   633  000082                     _readBuffer:
   634                           	opt stack 0
   635  000082                     	ds	64
   636  0000C2                     _dummy_encapsulated_cmd_response:
   637                           	opt stack 0
   638  0000C2                     	ds	8
   639  0000CA                     _line_coding:
   640                           	opt stack 0
   641  0000CA                     	ds	7
   642  0000D1                     _USBAlternateInterface:
   643                           	opt stack 0
   644  0000D1                     	ds	2
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           prodh	equ	0xFF4
   650                           prodl	equ	0xFF3
   651                           intcon	equ	0xFF2
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           indf1	equ	0xFE7
   655                           postdec1	equ	0xFE5
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           indf2	equ	0xFDF
   659                           postinc2	equ	0xFDE
   660                           postdec2	equ	0xFDD
   661                           plusw2	equ	0xFDB
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8
   665                           
   666                           	psect	dataBANK0
   667  0000ED                     __pdataBANK0:
   668                           	opt stack 0
   669  0000ED                     _buttonMessage:
   670                           	opt stack 0
   671  0000ED                     	ds	18
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           prodh	equ	0xFF4
   677                           prodl	equ	0xFF3
   678                           intcon	equ	0xFF2
   679                           postinc0	equ	0xFEE
   680                           wreg	equ	0xFE8
   681                           indf1	equ	0xFE7
   682                           postdec1	equ	0xFE5
   683                           fsr1h	equ	0xFE2
   684                           fsr1l	equ	0xFE1
   685                           indf2	equ	0xFDF
   686                           postinc2	equ	0xFDE
   687                           postdec2	equ	0xFDD
   688                           plusw2	equ	0xFDB
   689                           fsr2h	equ	0xFDA
   690                           fsr2l	equ	0xFD9
   691                           status	equ	0xFD8
   692                           
   693                           	psect	bssBANK1
   694  000100                     __pbssBANK1:
   695                           	opt stack 0
   696  000100                     _writeBuffer:
   697                           	opt stack 0
   698  000100                     	ds	64
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           prodh	equ	0xFF4
   704                           prodl	equ	0xFF3
   705                           intcon	equ	0xFF2
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           indf1	equ	0xFE7
   709                           postdec1	equ	0xFE5
   710                           fsr1h	equ	0xFE2
   711                           fsr1l	equ	0xFE1
   712                           indf2	equ	0xFDF
   713                           postinc2	equ	0xFDE
   714                           postdec2	equ	0xFDD
   715                           plusw2	equ	0xFDB
   716                           fsr2h	equ	0xFDA
   717                           fsr2l	equ	0xFD9
   718                           status	equ	0xFD8
   719                           
   720                           	psect	cstackBANK1
   721  000140                     __pcstackBANK1:
   722                           	opt stack 0
   723  000140                     APP_DeviceCDCBasicDemoTasks@eepromAddress:
   724                           	opt stack 0
   725                           
   726                           ; 4 bytes @ 0x0
   727  000140                     	ds	4
   728  000144                     APP_DeviceCDCBasicDemoTasks@eepromAddress_297:
   729                           	opt stack 0
   730                           
   731                           ; 4 bytes @ 0x4
   732  000144                     	ds	4
   733  000148                     APP_DeviceCDCBasicDemoTasks@numBytesRead:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x8
   737  000148                     	ds	1
   738  000149                     APP_DeviceCDCBasicDemoTasks@i:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x9
   742  000149                     	ds	1
   743  00014A                     ??_main:
   744                           
   745                           ; 1 bytes @ 0xA
   746  00014A                     	ds	2
   747                           tblptru	equ	0xFF8
   748                           tblptrh	equ	0xFF7
   749                           tblptrl	equ	0xFF6
   750                           tablat	equ	0xFF5
   751                           prodh	equ	0xFF4
   752                           prodl	equ	0xFF3
   753                           intcon	equ	0xFF2
   754                           postinc0	equ	0xFEE
   755                           wreg	equ	0xFE8
   756                           indf1	equ	0xFE7
   757                           postdec1	equ	0xFE5
   758                           fsr1h	equ	0xFE2
   759                           fsr1l	equ	0xFE1
   760                           indf2	equ	0xFDF
   761                           postinc2	equ	0xFDE
   762                           postdec2	equ	0xFDD
   763                           plusw2	equ	0xFDB
   764                           fsr2h	equ	0xFDA
   765                           fsr2l	equ	0xFD9
   766                           status	equ	0xFD8
   767                           
   768                           	psect	cstackBANK0
   769  0000D3                     __pcstackBANK0:
   770                           	opt stack 0
   771  0000D3                     ??_enterLowVoltageICSP:
   772  0000D3                     ?_USBTransferOnePacket:
   773                           	opt stack 0
   774  0000D3                     ?_generateReadPulses:
   775                           	opt stack 0
   776  0000D3                     BUTTON_IsPressed@button:
   777                           	opt stack 0
   778  0000D3                     BUTTON_Enable@button:
   779                           	opt stack 0
   780  0000D3                     LED_Enable@led:
   781                           	opt stack 0
   782  0000D3                     USBTransferOnePacket@dir:
   783                           	opt stack 0
   784  0000D3                     putUSBUSART@data:
   785                           	opt stack 0
   786  0000D3                     putrsUSBUSART@data:
   787                           	opt stack 0
   788  0000D3                     generateWritePulses@command:
   789                           	opt stack 0
   790  0000D3                     generateReadPulses@command:
   791                           	opt stack 0
   792  0000D3                     memset@p1:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x0
   796  0000D3                     	ds	1
   797  0000D4                     SYSTEM_Initialize@state:
   798                           	opt stack 0
   799  0000D4                     USBTransferOnePacket@data:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x1
   803  0000D4                     	ds	1
   804  0000D5                     ??_putrsUSBUSART:
   805  0000D5                     ??_generateReadPulses:
   806  0000D5                     putUSBUSART@length:
   807                           	opt stack 0
   808  0000D5                     generateWritePulses@payLoadMsb:
   809                           	opt stack 0
   810  0000D5                     memset@c:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x2
   814  0000D5                     	ds	1
   815  0000D6                     USBTransferOnePacket@len:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x3
   819  0000D6                     	ds	1
   820  0000D7                     ??_USBTransferOnePacket:
   821  0000D7                     putrsUSBUSART@pData:
   822                           	opt stack 0
   823  0000D7                     generateWritePulses@payLoadLsb:
   824                           	opt stack 0
   825  0000D7                     memset@n:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x4
   829  0000D7                     	ds	1
   830  0000D8                     generateReadPulses@OUT:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x5
   834  0000D8                     	ds	1
   835  0000D9                     ??_generateWritePulses:
   836  0000D9                     USBTransferOnePacket@ep:
   837                           	opt stack 0
   838  0000D9                     putrsUSBUSART@len:
   839                           	opt stack 0
   840  0000D9                     memset@p:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x6
   844  0000D9                     	ds	1
   845  0000DA                     generateReadPulses@i:
   846                           	opt stack 0
   847  0000DA                     USBTransferOnePacket@handle:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x7
   851  0000DA                     	ds	1
   852  0000DB                     USBDeviceInit@i:
   853                           	opt stack 0
   854  0000DB                     generateReadPulses@i_3316:
   855                           	opt stack 0
   856                           
   857                           ; 1 bytes @ 0x8
   858  0000DB                     	ds	1
   859  0000DC                     getsUSBUSART@buffer:
   860                           	opt stack 0
   861  0000DC                     CDCTxService@i:
   862                           	opt stack 0
   863  0000DC                     generateWritePulses@i:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x9
   867  0000DC                     	ds	1
   868  0000DD                     getsUSBUSART@len:
   869                           	opt stack 0
   870  0000DD                     CDCTxService@byte_to_send:
   871                           	opt stack 0
   872  0000DD                     generateWritePulses@i_3288:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0xA
   876  0000DD                     	ds	1
   877  0000DE                     generateWritePulses@i_3289:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0xB
   881  0000DE                     	ds	1
   882  0000DF                     readEepromByte@address:
   883                           	opt stack 0
   884  0000DF                     writeEepromByte@address:
   885                           	opt stack 0
   886                           
   887                           ; 4 bytes @ 0xC
   888  0000DF                     	ds	4
   889  0000E3                     writeEepromByte@data:
   890                           	opt stack 0
   891  0000E3                     readEepromByte@Data:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x10
   895  0000E3                     	ds	1
   896  0000E4                     writeEepromByte@i:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x11
   900  0000E4                     	ds	2
   901  0000E6                     writeEepromByte@Data:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x13
   905  0000E6                     	ds	2
   906  0000E8                     writeEepromByte@Success:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x15
   910  0000E8                     	ds	1
   911  0000E9                     ??_APP_DeviceCDCBasicDemoTasks:
   912                           
   913                           ; 1 bytes @ 0x16
   914  0000E9                     	ds	4
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           prodh	equ	0xFF4
   920                           prodl	equ	0xFF3
   921                           intcon	equ	0xFF2
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           indf1	equ	0xFE7
   925                           postdec1	equ	0xFE5
   926                           fsr1h	equ	0xFE2
   927                           fsr1l	equ	0xFE1
   928                           indf2	equ	0xFDF
   929                           postinc2	equ	0xFDE
   930                           postdec2	equ	0xFDD
   931                           plusw2	equ	0xFDB
   932                           fsr2h	equ	0xFDA
   933                           fsr2l	equ	0xFD9
   934                           status	equ	0xFD8
   935                           
   936                           	psect	cstackCOMRAM
   937  00002A                     __pcstackCOMRAM:
   938                           	opt stack 0
   939  00002A                     ??_USBStdGetDscHandler:
   940  00002A                     ?i2_USBTransferOnePacket:
   941                           	opt stack 0
   942  00002A                     LED_On@led:
   943                           	opt stack 0
   944  00002A                     LED_Off@led:
   945                           	opt stack 0
   946  00002A                     USBConfigureEndpoint@direction:
   947                           	opt stack 0
   948  00002A                     USBCtrlTrfTxService@byteToSend:
   949                           	opt stack 0
   950  00002A                     USBCtrlTrfRxService@i:
   951                           	opt stack 0
   952  00002A                     i2BUTTON_Enable@button:
   953                           	opt stack 0
   954  00002A                     i2LED_Enable@led:
   955                           	opt stack 0
   956  00002A                     i2USBTransferOnePacket@dir:
   957                           	opt stack 0
   958  00002A                     USBStdGetStatusHandler@p:
   959                           	opt stack 0
   960  00002A                     memcpy@d1:
   961                           	opt stack 0
   962  00002A                     i2memset@p1:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0x0
   966  00002A                     	ds	1
   967  00002B                     ??_USBConfigureEndpoint:
   968  00002B                     USBCtrlTrfRxService@byteToRead:
   969                           	opt stack 0
   970  00002B                     USBCtrlTrfInHandler@lastDTS:
   971                           	opt stack 0
   972  00002B                     i2SYSTEM_Initialize@state:
   973                           	opt stack 0
   974  00002B                     i2USBTransferOnePacket@data:
   975                           	opt stack 0
   976                           
   977                           ; 2 bytes @ 0x1
   978  00002B                     	ds	1
   979  00002C                     memcpy@s1:
   980                           	opt stack 0
   981  00002C                     i2memset@c:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x2
   985  00002C                     	ds	1
   986  00002D                     i2USBTransferOnePacket@len:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x3
   990  00002D                     	ds	1
   991  00002E                     ??i2_USBTransferOnePacket:
   992  00002E                     memcpy@n:
   993                           	opt stack 0
   994  00002E                     i2memset@n:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x4
   998  00002E                     	ds	1
   999  00002F                     USBConfigureEndpoint@EPNum:
  1000                           	opt stack 0
  1001                           
  1002                           ; 1 bytes @ 0x5
  1003  00002F                     	ds	1
  1004  000030                     i2USBTransferOnePacket@ep:
  1005                           	opt stack 0
  1006  000030                     USBConfigureEndpoint@handle:
  1007                           	opt stack 0
  1008  000030                     memcpy@d:
  1009                           	opt stack 0
  1010  000030                     i2memset@p:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x6
  1014  000030                     	ds	1
  1015  000031                     i2USBTransferOnePacket@handle:
  1016                           	opt stack 0
  1017                           
  1018                           ; 2 bytes @ 0x7
  1019  000031                     	ds	1
  1020  000032                     USBEnableEndpoint@options:
  1021                           	opt stack 0
  1022  000032                     i2USBDeviceInit@i:
  1023                           	opt stack 0
  1024  000032                     memcpy@s:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x8
  1028  000032                     	ds	1
  1029  000033                     USBEnableEndpoint@p:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x9
  1033  000033                     	ds	1
  1034  000034                     memcpy@tmp:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0xA
  1038  000034                     	ds	1
  1039  000035                     USBEnableEndpoint@ep:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0xB
  1043  000035                     	ds	1
  1044  000036                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0xC
  1048  000036                     	ds	2
  1049  000038                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0xE
  1053  000038                     	ds	2
  1054  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x10
  1058  00003A                     	ds	2
  1059  00003C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1060                           
  1061                           ; 1 bytes @ 0x12
  1062  00003C                     	ds	2
  1063  00003E                     ??_USBStdFeatureReqHandler:
  1064  00003E                     USBStdSetCfgHandler@i:
  1065                           	opt stack 0
  1066                           
  1067                           ; 1 bytes @ 0x14
  1068  00003E                     	ds	2
  1069  000040                     USBStdFeatureReqHandler@pUEP:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x16
  1073  000040                     	ds	2
  1074  000042                     USBStdFeatureReqHandler@current_ep_data:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x18
  1078  000042                     	ds	1
  1079  000043                     USBStdFeatureReqHandler@p:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x19
  1083  000043                     	ds	2
  1084  000045                     ??_USBCheckStdRequest:
  1085                           
  1086                           ; 1 bytes @ 0x1B
  1087  000045                     	ds	1
  1088  000046                     ??_USBCtrlEPService:
  1089  000046                     
  1090                           ; 1 bytes @ 0x1C
  1091  000046                     	ds	1
  1092  000047                     USBDeviceTasks@i:
  1093                           	opt stack 0
  1094                           
  1095                           ; 1 bytes @ 0x1D
  1096  000047                     	ds	1
  1097  000048                     ??_SYS_InterruptHigh:
  1098                           
  1099                           ; 1 bytes @ 0x1E
  1100  000048                     	ds	10
  1101                           tblptru	equ	0xFF8
  1102                           tblptrh	equ	0xFF7
  1103                           tblptrl	equ	0xFF6
  1104                           tablat	equ	0xFF5
  1105                           prodh	equ	0xFF4
  1106                           prodl	equ	0xFF3
  1107                           intcon	equ	0xFF2
  1108                           postinc0	equ	0xFEE
  1109                           wreg	equ	0xFE8
  1110                           indf1	equ	0xFE7
  1111                           postdec1	equ	0xFE5
  1112                           fsr1h	equ	0xFE2
  1113                           fsr1l	equ	0xFE1
  1114                           indf2	equ	0xFDF
  1115                           postinc2	equ	0xFDE
  1116                           postdec2	equ	0xFDD
  1117                           plusw2	equ	0xFDB
  1118                           fsr2h	equ	0xFDA
  1119                           fsr2l	equ	0xFD9
  1120                           status	equ	0xFD8
  1121                           
  1122 ;;
  1123 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1124 ;;
  1125 ;; *************** function _main *****************
  1126 ;; Defined at:
  1127 ;;		line 12 in file "main.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1141 ;;      Params:         0       0       0       0
  1142 ;;      Locals:         0       0       0       0
  1143 ;;      Temps:          0       0       2       0
  1144 ;;      Totals:         0       0       2       0
  1145 ;;Total ram usage:        2 bytes
  1146 ;; Hardware stack levels required when called:   15
  1147 ;; This function calls:
  1148 ;;		_APP_DeviceCDCBasicDemoTasks
  1149 ;;		_SYSTEM_Initialize
  1150 ;;		_USBDeviceAttach
  1151 ;;		_USBDeviceInit
  1152 ;; This function is called by:
  1153 ;;		Startup code after reset
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text0
  1158  00194C                     __ptext0:
  1159                           	opt stack 0
  1160  00194C                     _main:
  1161                           	opt stack 16
  1162                           
  1163                           ;main.c: 13: ANSEL = ANSELH = 0;
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;incstack = 0
  1167  00194C  6A7F               	clrf	3967,c	;volatile
  1168  00194E  6A7E               	clrf	3966,c	;volatile
  1169                           
  1170                           ;main.c: 14: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1171  001950  0E00               	movlw	0
  1172  001952  EC9A  F00D         	call	_SYSTEM_Initialize
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;main.c: 15: USBDeviceInit();
  1176  001956  EC2F  F00B         	call	_USBDeviceInit	;wreg free
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;main.c: 16: USBDeviceAttach();
  1180  00195A  EC72  F00C         	call	_USBDeviceAttach	;wreg free
  1181  00195E                     l5080:
  1182                           
  1183                           ;main.c: 18: ;
  1184                           ;main.c: 37: APP_DeviceCDCBasicDemoTasks();
  1185  00195E  ECB6  F002         	call	_APP_DeviceCDCBasicDemoTasks	;wreg free
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 38: _delay((unsigned long)((100)*(12000000/4000.0)));
  1189  001962  0E02               	movlw	2
  1190  001964  0101               	movlb	1	; () banked
  1191  001966  6F4B               	movwf	(??_main+1)& (0+255),b
  1192  001968  0E86               	movlw	134
  1193  00196A  6F4A               	movwf	??_main& (0+255),b
  1194  00196C  0E99               	movlw	153
  1195  00196E                     u4217:
  1196  00196E  2EE8               	decfsz	wreg,f,c
  1197  001970  D7FE               	bra	u4217
  1198  001972  2F4A               	decfsz	??_main& (0+255),f,b
  1199  001974  D7FC               	bra	u4217
  1200  001976  2F4B               	decfsz	(??_main+1)& (0+255),f,b
  1201  001978  D7FA               	bra	u4217
  1202  00197A  D7F1               	goto	l5080
  1203  00197C                     __end_of_main:
  1204                           	opt stack 0
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           prodh	equ	0xFF4
  1210                           prodl	equ	0xFF3
  1211                           intcon	equ	0xFF2
  1212                           postinc0	equ	0xFEE
  1213                           wreg	equ	0xFE8
  1214                           indf1	equ	0xFE7
  1215                           postdec1	equ	0xFE5
  1216                           fsr1h	equ	0xFE2
  1217                           fsr1l	equ	0xFE1
  1218                           indf2	equ	0xFDF
  1219                           postinc2	equ	0xFDE
  1220                           postdec2	equ	0xFDD
  1221                           plusw2	equ	0xFDB
  1222                           fsr2h	equ	0xFDA
  1223                           fsr2l	equ	0xFD9
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _USBDeviceInit *****************
  1227 ;; Defined at:
  1228 ;;		line 277 in file "picLibs/usb_device.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  i               1    8[BANK0 ] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 3F/0
  1239 ;;		On exit  : 3F/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1242 ;;      Params:         0       0       0       0
  1243 ;;      Locals:         0       1       0       0
  1244 ;;      Temps:          0       0       0       0
  1245 ;;      Totals:         0       1       0       0
  1246 ;;Total ram usage:        1 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:   11
  1249 ;; This function calls:
  1250 ;;		_memset
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text1
  1257  00165E                     __ptext1:
  1258                           	opt stack 0
  1259  00165E                     _USBDeviceInit:
  1260                           	opt stack 0
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;usb_device.c: 279: uint8_t i;
  1264                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1265                           
  1266                           ;incstack = 0
  1267                           
  1268                           ;usb_device.c: 285: ;
  1269                           ;usb_device.c: 288: {UEIR = 0;};
  1270                           
  1271                           ;usb_device.c: 291: {UIR = 0;};
  1272                           
  1273                           ;usb_device.c: 294: UEP0 = 0;
  1274  00165E  EC36  F005         	call	PL90	;call to abstracted procedure
  1275                           
  1276                           ; BSR set to: 15
  1277                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1278  001662  0E54               	movlw	84
  1279  001664  0100               	movlb	0	; () banked
  1280  001666  6FD3               	movwf	memset@p1& (0+255),b
  1281  001668  0E0F               	movlw	15
  1282  00166A  6FD4               	movwf	(memset@p1+1)& (0+255),b
  1283  00166C  6BD6               	clrf	(memset@c+1)& (0+255),b
  1284  00166E  6BD5               	clrf	memset@c& (0+255),b
  1285  001670  6BD8               	clrf	(memset@n+1)& (0+255),b
  1286  001672  0E02               	movlw	2
  1287  001674  6FD7               	movwf	memset@n& (0+255),b
  1288  001676  EC30  F00D         	call	_memset	;wreg free
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1292                           
  1293                           ; BSR set to: 0
  1294                           
  1295                           ; BSR set to: 15
  1296  00167A  EC84  F00C         	call	PL36	;call to abstracted procedure
  1297                           
  1298                           ; BSR set to: 15
  1299                           ;usb_device.c: 301: ;
  1300                           ;usb_device.c: 304: ;
  1301                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1302  00167E  0100               	movlb	0	; () banked
  1303  001680  6BDB               	clrf	USBDeviceInit@i& (0+255),b
  1304  001682                     l4996:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;usb_device.c: 308: {
  1308                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1309  001682  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1310  001684  EC2A  F005         	call	PL42	;call to abstracted procedure
  1311                           
  1312                           ; BSR set to: 0
  1313  001688  2BDB               	incf	USBDeviceInit@i& (0+255),f,b
  1314                           
  1315                           ; BSR set to: 0
  1316  00168A  0E0B               	movlw	11
  1317  00168C  65DB               	cpfsgt	USBDeviceInit@i& (0+255),b
  1318  00168E  D7F9               	goto	l4996
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;usb_device.c: 310: }
  1322                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1323                           
  1324                           ;usb_device.c: 316: UADDR = 0x00;
  1325                           
  1326                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1327                           
  1328                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1329                           
  1330                           ;usb_device.c: 326: {
  1331                           ;usb_device.c: 327: (UIR &= 0xF7);
  1332                           
  1333                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1334                           
  1335                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1336                           
  1337                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1338                           
  1339                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1340                           
  1341                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1342                           
  1343                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1344                           
  1345                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1346                           
  1347                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1351  001690  EC16  F005         	call	PL22	;call to abstracted procedure
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1355  001694  6BDB               	clrf	USBDeviceInit@i& (0+255),b
  1356  001696                     l5026:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;usb_device.c: 346: {
  1360                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1361  001696  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1362  001698  EC5A  F006         	call	PL30	;call to abstracted procedure
  1363  00169C  6ADE               	clrf	postinc2,c
  1364  00169E  6ADD               	clrf	postdec2,c
  1365                           
  1366                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1367  0016A0  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1368  0016A2  EC60  F006         	call	PL34	;call to abstracted procedure
  1369  0016A6  6ADE               	clrf	postinc2,c
  1370  0016A8  6ADD               	clrf	postdec2,c
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1374  0016AA  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1375  0016AC  EC3C  F005         	call	PL100	;call to abstracted procedure
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1379  0016B0  51DB               	movf	USBDeviceInit@i& (0+255),w,b
  1380  0016B2  EC41  F005         	call	PL108	;call to abstracted procedure
  1381                           
  1382                           ; BSR set to: 0
  1383  0016B6  2BDB               	incf	USBDeviceInit@i& (0+255),f,b
  1384                           
  1385                           ; BSR set to: 0
  1386  0016B8  0E02               	movlw	2
  1387  0016BA  65DB               	cpfsgt	USBDeviceInit@i& (0+255),b
  1388  0016BC  D7EC               	goto	l5026
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;usb_device.c: 351: }
  1392                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1393  0016BE  0E08               	movlw	8
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1397                           
  1398                           ; BSR set to: 15
  1399                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1400                           
  1401                           ; BSR set to: 2
  1402                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1403                           
  1404                           ; BSR set to: 2
  1405                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1406                           
  1407                           ; BSR set to: 2
  1408                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1409                           
  1410                           ; BSR set to: 2
  1411                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1412                           
  1413                           ; BSR set to: 2
  1414                           ;usb_device.c: 366: USB1msTickCount = 0;
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1421                           
  1422                           ; BSR set to: 0
  1423  0016C0  EFFD  F004         	goto	PL12	;call to abstracted procedure
  1424  0016C4                     __end_of_USBDeviceInit:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           prodh	equ	0xFF4
  1431                           prodl	equ	0xFF3
  1432                           intcon	equ	0xFF2
  1433                           postinc0	equ	0xFEE
  1434                           wreg	equ	0xFE8
  1435                           indf1	equ	0xFE7
  1436                           postdec1	equ	0xFE5
  1437                           fsr1h	equ	0xFE2
  1438                           fsr1l	equ	0xFE1
  1439                           indf2	equ	0xFDF
  1440                           postinc2	equ	0xFDE
  1441                           postdec2	equ	0xFDD
  1442                           plusw2	equ	0xFDB
  1443                           fsr2h	equ	0xFDA
  1444                           fsr2l	equ	0xFD9
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _memset *****************
  1448 ;; Defined at:
  1449 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  p1              2    0[BANK0 ] PTR void 
  1452 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1453 ;;  c               2    2[BANK0 ] int 
  1454 ;;  n               2    4[BANK0 ] unsigned int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  p               2    6[BANK0 ] PTR unsigned char 
  1457 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    0[BANK0 ] PTR void 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 3F/0
  1464 ;;		On exit  : 3F/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1467 ;;      Params:         0       6       0       0
  1468 ;;      Locals:         0       2       0       0
  1469 ;;      Temps:          0       0       0       0
  1470 ;;      Totals:         0       8       0       0
  1471 ;;Total ram usage:        8 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:   10
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_USBDeviceInit
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text2
  1482  001A60                     __ptext2:
  1483                           	opt stack 0
  1484  001A60                     _memset:
  1485                           	opt stack 19
  1486                           
  1487                           ; BSR set to: 0
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;incstack = 0
  1491  001A60  C0D3  F0D9         	movff	memset@p1,memset@p
  1492  001A64  C0D4  F0DA         	movff	memset@p1+1,memset@p+1
  1493  001A68  D008               	goto	l4922
  1494  001A6A                     l4918:
  1495                           
  1496                           ; BSR set to: 0
  1497  001A6A  C0D9  FFD9         	movff	memset@p,fsr2l
  1498  001A6E  C0DA  FFDA         	movff	memset@p+1,fsr2h
  1499  001A72  C0D5  FFDF         	movff	memset@c,indf2
  1500                           
  1501                           ; BSR set to: 0
  1502  001A76  4BD9               	infsnz	memset@p& (0+255),f,b
  1503  001A78  2BDA               	incf	(memset@p+1)& (0+255),f,b
  1504  001A7A                     l4922:
  1505                           
  1506                           ; BSR set to: 0
  1507  001A7A  07D7               	decf	memset@n& (0+255),f,b
  1508  001A7C  A0D8               	btfss	status,0,c
  1509  001A7E  07D8               	decf	(memset@n+1)& (0+255),f,b
  1510  001A80  29D7               	incf	memset@n& (0+255),w,b
  1511  001A82  E1F3               	bnz	l4918
  1512  001A84  29D8               	incf	(memset@n+1)& (0+255),w,b
  1513  001A86  E1F1               	bnz	l4918
  1514                           
  1515                           ; BSR set to: 0
  1516  001A88  0012               	return		;funcret
  1517  001A8A                     __end_of_memset:
  1518                           	opt stack 0
  1519                           tblptru	equ	0xFF8
  1520                           tblptrh	equ	0xFF7
  1521                           tblptrl	equ	0xFF6
  1522                           tablat	equ	0xFF5
  1523                           prodh	equ	0xFF4
  1524                           prodl	equ	0xFF3
  1525                           intcon	equ	0xFF2
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           indf1	equ	0xFE7
  1529                           postdec1	equ	0xFE5
  1530                           fsr1h	equ	0xFE2
  1531                           fsr1l	equ	0xFE1
  1532                           indf2	equ	0xFDF
  1533                           postinc2	equ	0xFDE
  1534                           postdec2	equ	0xFDD
  1535                           plusw2	equ	0xFDB
  1536                           fsr2h	equ	0xFDA
  1537                           fsr2l	equ	0xFD9
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _USBDeviceAttach *****************
  1541 ;; Defined at:
  1542 ;;		line 1352 in file "picLibs/usb_device.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2
  1551 ;; Tracked objects:
  1552 ;;		On entry : 3F/0
  1553 ;;		On exit  : 3F/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1556 ;;      Params:         0       0       0       0
  1557 ;;      Locals:         0       0       0       0
  1558 ;;      Temps:          0       0       0       0
  1559 ;;      Totals:         0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:   10
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text3
  1571  0018E4                     __ptext3:
  1572                           	opt stack 0
  1573  0018E4                     _USBDeviceAttach:
  1574                           	opt stack 20
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;usb_device.c: 1356: {
  1578                           ;usb_device.c: 1357: if(1 == 1)
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;incstack = 0
  1582  0018E4  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  1583  0018E6  A4D8               	btfss	status,2,c
  1584  0018E8  0012               	return	
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;usb_device.c: 1358: {
  1588                           ;usb_device.c: 1360: UCON = 0;
  1589  0018EA  6A64               	clrf	3940,c	;volatile
  1590                           
  1591                           ;usb_device.c: 1363: UIE = 0;
  1592  0018EC  6A60               	clrf	3936,c	;volatile
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1596  0018EE  D80C               	call	PL36	;call to abstracted procedure
  1597                           
  1598                           ; BSR set to: 15
  1599                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1600  0018F0  8ED0               	bsf	4048,7,c	;volatile
  1601                           
  1602                           ; BSR set to: 15
  1603  0018F2  84A2               	bsf	4002,2,c	;volatile
  1604                           
  1605                           ; BSR set to: 15
  1606  0018F4  84A0               	bsf	4000,2,c	;volatile
  1607                           
  1608                           ; BSR set to: 15
  1609  0018F6  8EF2               	bsf	intcon,7,c	;volatile
  1610                           
  1611                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1612  0018F8  D001               	goto	l384
  1613  0018FA                     l385:
  1614  0018FA  8664               	bsf	3940,3,c	;volatile
  1615  0018FC                     l384:
  1616  0018FC  A664               	btfss	3940,3,c	;volatile
  1617  0018FE  D7FD               	goto	l385
  1618                           
  1619                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1620  001900  0E01               	movlw	1
  1621  001902  0100               	movlb	0	; () banked
  1622  001904  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  1623                           
  1624                           ; BSR set to: 0
  1625  001906  0C01               	retlw	1	;funcret
  1626  001908                     __end_of_USBDeviceAttach:
  1627                           	opt stack 0
  1628  001908                     PL36:
  1629                           	opt stack 19
  1630  001908  0E16               	movlw	22
  1631  00190A  6E61               	movwf	3937,c	;volatile
  1632  00190C  0E9F               	movlw	159
  1633  00190E  010F               	movlb	15	; () banked
  1634  001910  6F5B               	movwf	91,b	;volatile
  1635  001912  0E7B               	movlw	123
  1636  001914  6E60               	movwf	3936,c	;volatile
  1637  001916  0C7B               	retlw	123
  1638  001918                     __end_ofPL36:
  1639                           	opt stack 0
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           prodh	equ	0xFF4
  1645                           prodl	equ	0xFF3
  1646                           intcon	equ	0xFF2
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           indf1	equ	0xFE7
  1650                           postdec1	equ	0xFE5
  1651                           fsr1h	equ	0xFE2
  1652                           fsr1l	equ	0xFE1
  1653                           indf2	equ	0xFDF
  1654                           postinc2	equ	0xFDE
  1655                           postdec2	equ	0xFDD
  1656                           plusw2	equ	0xFDB
  1657                           fsr2h	equ	0xFDA
  1658                           fsr2l	equ	0xFD9
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _SYSTEM_Initialize *****************
  1662 ;; Defined at:
  1663 ;;		line 66 in file "picLibs/system.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  state           1    wreg     enum E3329
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  state           1    1[BANK0 ] enum E3329
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 3F/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1677 ;;      Params:         0       0       0       0
  1678 ;;      Locals:         0       1       0       0
  1679 ;;      Temps:          0       0       0       0
  1680 ;;      Totals:         0       1       0       0
  1681 ;;Total ram usage:        1 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:   11
  1684 ;; This function calls:
  1685 ;;		_BUTTON_Enable
  1686 ;;		_LED_Enable
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text4
  1693  001B34                     __ptext4:
  1694                           	opt stack 0
  1695  001B34                     _SYSTEM_Initialize:
  1696                           	opt stack 19
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;incstack = 0
  1700                           ;SYSTEM_Initialize@state stored from wreg
  1701  001B34  0100               	movlb	0	; () banked
  1702  001B36  6FD4               	movwf	SYSTEM_Initialize@state& (0+255),b
  1703                           
  1704                           ;system.c: 68: switch(state)
  1705  001B38  D006               	goto	l4978
  1706  001B3A                     l4974:
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;system.c: 71: LED_Enable(LED_D1);
  1710  001B3A  0E01               	movlw	1
  1711  001B3C  ECBE  F00C         	call	_LED_Enable
  1712                           
  1713                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  1714  001B40  0E01               	movlw	1
  1715  001B42  EFF4  F00D         	goto	_BUTTON_Enable
  1716  001B46                     l4978:
  1717  001B46  0100               	movlb	0	; () banked
  1718  001B48  51D4               	movf	SYSTEM_Initialize@state& (0+255),w,b
  1719                           
  1720                           ; Switch size 1, requested type "space"
  1721                           ; Number of cases is 3, Range of values is 0 to 2
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte           10     6 (average)
  1725                           ;	Chosen strategy is simple_byte
  1726  001B4A  E0F7               	bz	l4974
  1727  001B4C  EF96  F00D         	goto	PL116	;call to abstracted procedure
  1728  001B50                     __end_of_SYSTEM_Initialize:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           prodh	equ	0xFF4
  1735                           prodl	equ	0xFF3
  1736                           intcon	equ	0xFF2
  1737                           postinc0	equ	0xFEE
  1738                           wreg	equ	0xFE8
  1739                           indf1	equ	0xFE7
  1740                           postdec1	equ	0xFE5
  1741                           fsr1h	equ	0xFE2
  1742                           fsr1l	equ	0xFE1
  1743                           indf2	equ	0xFDF
  1744                           postinc2	equ	0xFDE
  1745                           postdec2	equ	0xFDD
  1746                           plusw2	equ	0xFDB
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _LED_Enable *****************
  1752 ;; Defined at:
  1753 ;;		line 220 in file "picLibs/leds.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  led             1    wreg     enum E2
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  led             1    0[BANK0 ] enum E2
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 3F/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1767 ;;      Params:         0       0       0       0
  1768 ;;      Locals:         0       1       0       0
  1769 ;;      Temps:          0       0       0       0
  1770 ;;      Totals:         0       1       0       0
  1771 ;;Total ram usage:        1 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:   10
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_SYSTEM_Initialize
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text5
  1782  00197C                     __ptext5:
  1783                           	opt stack 0
  1784  00197C                     _LED_Enable:
  1785                           	opt stack 19
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;incstack = 0
  1789                           ;LED_Enable@led stored from wreg
  1790  00197C  0100               	movlb	0	; () banked
  1791  00197E  6FD3               	movwf	LED_Enable@led& (0+255),b
  1792                           
  1793                           ;leds.c: 222: switch(led)
  1794  001980  D008               	goto	l4914
  1795  001982                     l145:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  1799  001982  9094               	bcf	3988,0,c	;volatile
  1800                           
  1801                           ;leds.c: 226: break;
  1802  001984  0012               	return	
  1803  001986                     l147:
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  1807  001986  9294               	bcf	3988,1,c	;volatile
  1808                           
  1809                           ;leds.c: 230: break;
  1810  001988  0012               	return	
  1811  00198A                     l148:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  1815  00198A  9494               	bcf	3988,2,c	;volatile
  1816                           
  1817                           ;leds.c: 234: break;
  1818  00198C  0012               	return	
  1819  00198E                     l149:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  1823  00198E  9694               	bcf	3988,3,c	;volatile
  1824                           
  1825                           ;leds.c: 238: break;
  1826  001990  0012               	return	
  1827  001992                     l4914:
  1828  001992  0100               	movlb	0	; () banked
  1829  001994  51D3               	movf	LED_Enable@led& (0+255),w,b
  1830                           
  1831                           ; Switch size 1, requested type "space"
  1832                           ; Number of cases is 5, Range of values is 0 to 4
  1833                           ; switch strategies available:
  1834                           ; Name         Instructions Cycles
  1835                           ; simple_byte           16     9 (average)
  1836                           ;	Chosen strategy is simple_byte
  1837  001996  B4D8               	btfsc	status,2,c
  1838  001998  0012               	return	
  1839  00199A  0A01               	xorlw	1	; case 1
  1840  00199C  E0F2               	bz	l145
  1841  00199E  0A03               	xorlw	3	; case 2
  1842  0019A0  E0F2               	bz	l147
  1843  0019A2  0A01               	xorlw	1	; case 3
  1844  0019A4  E0F2               	bz	l148
  1845  0019A6  0A07               	xorlw	7	; case 4
  1846  0019A8  E0F2               	bz	l149
  1847                           
  1848                           ; BSR set to: 0
  1849  0019AA  0012               	return		;funcret
  1850  0019AC                     __end_of_LED_Enable:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           prodh	equ	0xFF4
  1857                           prodl	equ	0xFF3
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           indf1	equ	0xFE7
  1862                           postdec1	equ	0xFE5
  1863                           fsr1h	equ	0xFE2
  1864                           fsr1l	equ	0xFE1
  1865                           indf2	equ	0xFDF
  1866                           postinc2	equ	0xFDE
  1867                           postdec2	equ	0xFDD
  1868                           plusw2	equ	0xFDB
  1869                           fsr2h	equ	0xFDA
  1870                           fsr2l	equ	0xFD9
  1871                           status	equ	0xFD8
  1872                           
  1873 ;; *************** function _BUTTON_Enable *****************
  1874 ;; Defined at:
  1875 ;;		line 85 in file "picLibs/buttons.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  button          1    wreg     enum E3304
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  button          1    0[BANK0 ] enum E3304
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0
  1884 ;; Tracked objects:
  1885 ;;		On entry : 3F/0
  1886 ;;		On exit  : 3F/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1889 ;;      Params:         0       0       0       0
  1890 ;;      Locals:         0       1       0       0
  1891 ;;      Temps:          0       0       0       0
  1892 ;;      Totals:         0       1       0       0
  1893 ;;Total ram usage:        1 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:   10
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_SYSTEM_Initialize
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text6
  1904  001BE8                     __ptext6:
  1905                           	opt stack 0
  1906  001BE8                     _BUTTON_Enable:
  1907                           	opt stack 19
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;incstack = 0
  1911                           ;BUTTON_Enable@button stored from wreg
  1912  001BE8  6FD3               	movwf	BUTTON_Enable@button& (0+255),b
  1913                           
  1914                           ;buttons.c: 87: switch(button)
  1915  001BEA  0100               	movlb	0	; () banked
  1916  001BEC  51D3               	movf	BUTTON_Enable@button& (0+255),w,b
  1917                           
  1918                           ; Switch size 1, requested type "space"
  1919                           ; Number of cases is 2, Range of values is 0 to 1
  1920                           ; switch strategies available:
  1921                           ; Name         Instructions Cycles
  1922                           ; simple_byte            7     4 (average)
  1923                           ;	Chosen strategy is simple_byte
  1924  001BEE  EFF1  F00D         	goto	PL132	;call to abstracted procedure
  1925  001BF2                     __end_of_BUTTON_Enable:
  1926                           	opt stack 0
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           prodh	equ	0xFF4
  1932                           prodl	equ	0xFF3
  1933                           intcon	equ	0xFF2
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           indf1	equ	0xFE7
  1937                           postdec1	equ	0xFE5
  1938                           fsr1h	equ	0xFE2
  1939                           fsr1l	equ	0xFE1
  1940                           indf2	equ	0xFDF
  1941                           postinc2	equ	0xFDE
  1942                           postdec2	equ	0xFDD
  1943                           plusw2	equ	0xFDB
  1944                           fsr2h	equ	0xFDA
  1945                           fsr2l	equ	0xFD9
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  1949 ;; Defined at:
  1950 ;;		line 77 in file "picLibs/app_device_cdc_basic.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  eepromAddres    4    4[BANK1 ] struct _DWORD_VAL
  1955 ;;  eepromAddres    4    0[BANK1 ] struct _DWORD_VAL
  1956 ;;  i               1    9[BANK1 ] unsigned char 
  1957 ;;  numBytesRead    1    8[BANK1 ] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 3F/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1967 ;;      Params:         0       0       0       0
  1968 ;;      Locals:         0       0      10       0
  1969 ;;      Temps:          0       4       0       0
  1970 ;;      Totals:         0       4      10       0
  1971 ;;Total ram usage:       14 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:   14
  1974 ;; This function calls:
  1975 ;;		_BUTTON_IsPressed
  1976 ;;		_CDCTxService
  1977 ;;		_getsUSBUSART
  1978 ;;		_putUSBUSART
  1979 ;;		_putrsUSBUSART
  1980 ;;		_readEepromByte
  1981 ;;		_writeEepromByte
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text7
  1988  00056C                     __ptext7:
  1989                           	opt stack 0
  1990  00056C                     _APP_DeviceCDCBasicDemoTasks:
  1991                           	opt stack 16
  1992                           
  1993                           ;app_device_cdc_basic.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;incstack = 0
  1997  00056C  0E20               	movlw	32
  1998  00056E  0100               	movlb	0	; () banked
  1999  000570  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  2000  000572  D001               	goto	l36
  2001  000574  0C20               	retlw	32
  2002  000576                     l36:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;app_device_cdc_basic.c: 85: }
  2006                           ;app_device_cdc_basic.c: 91: if( UCONbits.SUSPND== 1 )
  2007  000576  B264               	btfsc	3940,1,c	;volatile
  2008  000578  0012               	return	
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;app_device_cdc_basic.c: 94: }
  2012                           ;app_device_cdc_basic.c: 99: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  2013  00057A  0E01               	movlw	1
  2014  00057C  ECC4  F00D         	call	_BUTTON_IsPressed
  2015  000580  06E8               	decf	wreg,f,c
  2016  000582  E10C               	bnz	l39
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;app_device_cdc_basic.c: 100: {
  2020                           ;app_device_cdc_basic.c: 104: if(buttonPressed == 0)
  2021  000584  517F               	movf	_buttonPressed& (0+255),w,b
  2022  000586  E10B               	bnz	l4940
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;app_device_cdc_basic.c: 105: {
  2026                           ;app_device_cdc_basic.c: 108: if((cdc_trf_state == 0) == 1)
  2027  000588  5180               	movf	_cdc_trf_state& (0+255),w,b
  2028  00058A  E109               	bnz	l4940
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;app_device_cdc_basic.c: 109: {
  2032                           ;app_device_cdc_basic.c: 110: putrsUSBUSART(buttonMessage);
  2033  00058C  0EED               	movlw	low _buttonMessage
  2034  00058E  6FD3               	movwf	putrsUSBUSART@data& (0+255),b
  2035  000590  6BD4               	clrf	(putrsUSBUSART@data+1)& (0+255),b
  2036  000592  EC62  F00B         	call	_putrsUSBUSART	;wreg free
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;app_device_cdc_basic.c: 111: buttonPressed = 1;
  2040  000596  0E01               	movlw	1
  2041  000598  6F7F               	movwf	_buttonPressed& (0+255),b
  2042  00059A  D001               	goto	l4940
  2043  00059C                     l39:
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;app_device_cdc_basic.c: 115: else
  2047                           ;app_device_cdc_basic.c: 116: {
  2048                           ;app_device_cdc_basic.c: 120: buttonPressed = 0;
  2049  00059C  6B7F               	clrf	_buttonPressed& (0+255),b
  2050  00059E                     l4940:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;app_device_cdc_basic.c: 121: }
  2054                           ;app_device_cdc_basic.c: 126: if( (cdc_trf_state == 0) == 1)
  2055  00059E  5180               	movf	_cdc_trf_state& (0+255),w,b
  2056  0005A0  E002 EF5C  F004    	bnz	_CDCTxService
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;app_device_cdc_basic.c: 127: {
  2060                           ;app_device_cdc_basic.c: 128: uint8_t i;
  2061                           ;app_device_cdc_basic.c: 129: uint8_t numBytesRead;
  2062                           ;app_device_cdc_basic.c: 131: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  2063  0005A6  0E82               	movlw	low _readBuffer
  2064  0005A8  6FDC               	movwf	getsUSBUSART@buffer& (0+255),b
  2065  0005AA  0E40               	movlw	64
  2066  0005AC  6FDD               	movwf	getsUSBUSART@len& (0+255),b
  2067  0005AE  ECC3  F00A         	call	_getsUSBUSART	;wreg free
  2068  0005B2  0101               	movlb	1	; () banked
  2069  0005B4  6F48               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),b
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;app_device_cdc_basic.c: 134: for(i=0; i<numBytesRead; i++)
  2073  0005B6  6B49               	clrf	APP_DeviceCDCBasicDemoTasks@i& (0+255),b
  2074  0005B8  D05C               	goto	l4964
  2075  0005BA                     l4946:
  2076                           
  2077                           ; BSR set to: 1
  2078                           ;app_device_cdc_basic.c: 142: case 0x0D:
  2079                           ;app_device_cdc_basic.c: 143: writeBuffer[i] = readBuffer[i];
  2080  0005BA  D86B               	call	PL102	;call to abstracted procedure
  2081  0005BC  0E00               	movlw	low _writeBuffer
  2082  0005BE  2549               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2083  0005C0  6EE1               	movwf	fsr1l,c
  2084  0005C2  6AE2               	clrf	fsr1h,c
  2085  0005C4  0E01               	movlw	high _writeBuffer
  2086  0005C6  22E2               	addwfc	fsr1h,f,c
  2087  0005C8  CFDF FFE7          	movff	indf2,indf1
  2088                           
  2089                           ;app_device_cdc_basic.c: 144: break;
  2090  0005CC  D050               	goto	l4962
  2091  0005CE                     l4948:
  2092                           
  2093                           ; BSR set to: 1
  2094                           ;app_device_cdc_basic.c: 146: putrsUSBUSART("A pressed\n\r");
  2095  0005CE  0EC6               	movlw	low STR_1
  2096  0005D0  0100               	movlb	0	; () banked
  2097  0005D2  6FD3               	movwf	putrsUSBUSART@data& (0+255),b
  2098  0005D4  51D3               	movf	putrsUSBUSART@data& (0+255),w,b
  2099  0005D6  A4D8               	btfss	status,2,c
  2100  0005D8  0E03               	movlw	high __smallconst
  2101  0005DA  6FD4               	movwf	(putrsUSBUSART@data+1)& (0+255),b
  2102  0005DC  EC62  F00B         	call	_putrsUSBUSART	;wreg free
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;app_device_cdc_basic.c: 147: MEMORY_ADDRESS eepromAddress;
  2106                           ;app_device_cdc_basic.c: 148: eepromAddress.Val = 0x00;
  2107  0005E0  0101               	movlb	1	; () banked
  2108  0005E2  6B40               	clrf	APP_DeviceCDCBasicDemoTasks@eepromAddress& (0+255),b
  2109  0005E4  6B41               	clrf	(APP_DeviceCDCBasicDemoTasks@eepromAddress+1)& (0+255),b
  2110  0005E6  6B42               	clrf	(APP_DeviceCDCBasicDemoTasks@eepromAddress+2)& (0+255),b
  2111  0005E8  6B43               	clrf	(APP_DeviceCDCBasicDemoTasks@eepromAddress+3)& (0+255),b
  2112                           
  2113                           ; BSR set to: 1
  2114                           ;app_device_cdc_basic.c: 149: writeEepromByte(eepromAddress, 7);
  2115  0005EA  C140  F0DF         	movff	APP_DeviceCDCBasicDemoTasks@eepromAddress,writeEepromByte@address
  2116  0005EE  C141  F0E0         	movff	APP_DeviceCDCBasicDemoTasks@eepromAddress+1,writeEepromByte@address+1
  2117  0005F2  C142  F0E1         	movff	APP_DeviceCDCBasicDemoTasks@eepromAddress+2,writeEepromByte@address+2
  2118  0005F6  C143  F0E2         	movff	APP_DeviceCDCBasicDemoTasks@eepromAddress+3,writeEepromByte@address+3
  2119  0005FA  0E07               	movlw	7
  2120  0005FC  0100               	movlb	0	; () banked
  2121  0005FE  6FE3               	movwf	writeEepromByte@data& (0+255),b
  2122  000600  EC4E  F003         	call	_writeEepromByte	;wreg free
  2123                           
  2124                           ;app_device_cdc_basic.c: 150: break;
  2125  000604  D034               	goto	l4962
  2126  000606                     l4954:
  2127                           
  2128                           ; BSR set to: 1
  2129                           ;app_device_cdc_basic.c: 153: MEMORY_ADDRESS eepromAddress;
  2130                           ;app_device_cdc_basic.c: 154: eepromAddress.Val = readBuffer[i]-0x30;
  2131  000606  0ED0               	movlw	208
  2132  000608  0100               	movlb	0	; () banked
  2133  00060A  6FE9               	movwf	??_APP_DeviceCDCBasicDemoTasks& (0+255),b
  2134  00060C  69EA               	setf	(??_APP_DeviceCDCBasicDemoTasks+1)& (0+255),b
  2135  00060E  0101               	movlb	1	; () banked
  2136  000610  D840               	call	PL102	;call to abstracted procedure
  2137  000612  50DF               	movf	indf2,w,c
  2138  000614  0100               	movlb	0	; () banked
  2139  000616  6FEB               	movwf	(??_APP_DeviceCDCBasicDemoTasks+2)& (0+255),b
  2140  000618  6BEC               	clrf	(??_APP_DeviceCDCBasicDemoTasks+3)& (0+255),b
  2141  00061A  51E9               	movf	??_APP_DeviceCDCBasicDemoTasks& (0+255),w,b
  2142  00061C  27EB               	addwf	(??_APP_DeviceCDCBasicDemoTasks+2)& (0+255),f,b
  2143  00061E  51EA               	movf	(??_APP_DeviceCDCBasicDemoTasks+1)& (0+255),w,b
  2144  000620  23EC               	addwfc	(??_APP_DeviceCDCBasicDemoTasks+3)& (0+255),f,b
  2145  000622  C0EB  F144         	movff	??_APP_DeviceCDCBasicDemoTasks+2,APP_DeviceCDCBasicDemoTasks@eepromAddress_297
  2146  000626  C0EC  F145         	movff	??_APP_DeviceCDCBasicDemoTasks+3,APP_DeviceCDCBasicDemoTasks@eepromAddress_297+1
  2147  00062A  0101               	movlb	1	; () banked
  2148  00062C  0E00               	movlw	0
  2149  00062E  BF45               	btfsc	(APP_DeviceCDCBasicDemoTasks@eepromAddress_297+1)& (0+255),7,b
  2150  000630  0EFF               	movlw	-1
  2151  000632  6F46               	movwf	(APP_DeviceCDCBasicDemoTasks@eepromAddress_297+2)& (0+255),b
  2152  000634  6F47               	movwf	(APP_DeviceCDCBasicDemoTasks@eepromAddress_297+3)& (0+255),b
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;app_device_cdc_basic.c: 155: writeBuffer[i] = readEepromByte(eepromAddress)+0x30;
  2156  000636  0E00               	movlw	low _writeBuffer
  2157  000638  2549               	addwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2158  00063A  6ED9               	movwf	fsr2l,c
  2159  00063C  6ADA               	clrf	fsr2h,c
  2160  00063E  0E01               	movlw	high _writeBuffer
  2161  000640  22DA               	addwfc	fsr2h,f,c
  2162  000642  C144  F0DF         	movff	APP_DeviceCDCBasicDemoTasks@eepromAddress_297,readEepromByte@address
  2163  000646  C145  F0E0         	movff	APP_DeviceCDCBasicDemoTasks@eepromAddress_297+1,readEepromByte@address+1
  2164  00064A  C146  F0E1         	movff	APP_DeviceCDCBasicDemoTasks@eepromAddress_297+2,readEepromByte@address+2
  2165  00064E  C147  F0E2         	movff	APP_DeviceCDCBasicDemoTasks@eepromAddress_297+3,readEepromByte@address+3
  2166  000652  ECD9  F006         	call	_readEepromByte	;wreg free
  2167  000656  0F30               	addlw	48
  2168  000658  6EDF               	movwf	indf2,c
  2169                           
  2170                           ;app_device_cdc_basic.c: 156: break;
  2171  00065A  D009               	goto	l4962
  2172  00065C                     l4960:
  2173                           
  2174                           ; BSR set to: 1
  2175  00065C  D81A               	call	PL102	;call to abstracted procedure
  2176  00065E  50DF               	movf	indf2,w,c
  2177                           
  2178                           ; Switch size 1, requested type "space"
  2179                           ; Number of cases is 3, Range of values is 10 to 65
  2180                           ; switch strategies available:
  2181                           ; Name         Instructions Cycles
  2182                           ; simple_byte           10     6 (average)
  2183                           ;	Chosen strategy is simple_byte
  2184  000660  0A0A               	xorlw	10	; case 10
  2185  000662  E0AB               	bz	l4946
  2186  000664  0A07               	xorlw	7	; case 13
  2187  000666  E0A9               	bz	l4946
  2188  000668  0A4C               	xorlw	76	; case 65
  2189  00066A  E0B1               	bz	l4948
  2190  00066C  D7CC               	goto	l4954
  2191  00066E                     l4962:
  2192  00066E  0101               	movlb	1	; () banked
  2193  000670  2B49               	incf	APP_DeviceCDCBasicDemoTasks@i& (0+255),f,b
  2194  000672                     l4964:
  2195                           
  2196                           ; BSR set to: 1
  2197  000672  5148               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2198  000674  5D49               	subwf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2199  000676  E3F2               	bnc	l4960
  2200                           
  2201                           ; BSR set to: 1
  2202                           ;app_device_cdc_basic.c: 167: }
  2203                           ;app_device_cdc_basic.c: 169: if(numBytesRead > 0)
  2204  000678  5148               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead& (0+255),w,b
  2205  00067A  E009               	bz	l4970
  2206                           
  2207                           ; BSR set to: 1
  2208                           ;app_device_cdc_basic.c: 170: {
  2209                           ;app_device_cdc_basic.c: 174: putUSBUSART(writeBuffer,numBytesRead);
  2210  00067C  0E00               	movlw	low _writeBuffer
  2211  00067E  0100               	movlb	0	; () banked
  2212  000680  6FD3               	movwf	putUSBUSART@data& (0+255),b
  2213  000682  0E01               	movlw	high _writeBuffer
  2214  000684  6FD4               	movwf	(putUSBUSART@data+1)& (0+255),b
  2215  000686  C148  F0D5         	movff	APP_DeviceCDCBasicDemoTasks@numBytesRead,putUSBUSART@length
  2216  00068A  ECA8  F00D         	call	_putUSBUSART	;wreg free
  2217  00068E                     l4970:
  2218                           
  2219                           ;app_device_cdc_basic.c: 175: }
  2220                           ;app_device_cdc_basic.c: 176: }
  2221                           ;app_device_cdc_basic.c: 178: CDCTxService();
  2222  00068E  EF5C  F004         	goto	_CDCTxService	;wreg free
  2223  000692                     __end_of_APP_DeviceCDCBasicDemoTasks:
  2224                           	opt stack 0
  2225  000692                     PL102:
  2226                           	opt stack 16
  2227  000692  5149               	movf	APP_DeviceCDCBasicDemoTasks@i& (0+255),w,b
  2228  000694  0F82               	addlw	low _readBuffer
  2229  000696  6ED9               	movwf	fsr2l,c
  2230  000698  6ADA               	clrf	fsr2h,c
  2231  00069A  0012               	return	
  2232  00069C                     __end_ofPL102:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           prodh	equ	0xFF4
  2239                           prodl	equ	0xFF3
  2240                           intcon	equ	0xFF2
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           indf1	equ	0xFE7
  2244                           postdec1	equ	0xFE5
  2245                           fsr1h	equ	0xFE2
  2246                           fsr1l	equ	0xFE1
  2247                           indf2	equ	0xFDF
  2248                           postinc2	equ	0xFDE
  2249                           postdec2	equ	0xFDD
  2250                           plusw2	equ	0xFDB
  2251                           fsr2h	equ	0xFDA
  2252                           fsr2l	equ	0xFD9
  2253                           status	equ	0xFD8
  2254                           
  2255 ;; *************** function _writeEepromByte *****************
  2256 ;; Defined at:
  2257 ;;		line 139 in file "libs/programming.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  address         4   12[BANK0 ] struct _DWORD_VAL
  2260 ;;  data            1   16[BANK0 ] unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  Data            2   19[BANK0 ] struct _WORD_VAL
  2263 ;;  i               2   17[BANK0 ] unsigned int 
  2264 ;;  Success         1   21[BANK0 ] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 3F/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2274 ;;      Params:         0       5       0       0
  2275 ;;      Locals:         0       5       0       0
  2276 ;;      Temps:          0       0       0       0
  2277 ;;      Totals:         0      10       0       0
  2278 ;;Total ram usage:       10 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:   13
  2281 ;; This function calls:
  2282 ;;		_enterICSP
  2283 ;;		_exitICSP
  2284 ;;		_generateReadPulses
  2285 ;;		_generateWritePulses
  2286 ;; This function is called by:
  2287 ;;		_APP_DeviceCDCBasicDemoTasks
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text8
  2292  00069C                     __ptext8:
  2293                           	opt stack 0
  2294  00069C                     _writeEepromByte:
  2295                           	opt stack 16
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;programming.c: 140: UINT i=0;
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;incstack = 0
  2302  00069C  6BE4               	clrf	writeEepromByte@i& (0+255),b
  2303  00069E  6BE5               	clrf	(writeEepromByte@i+1)& (0+255),b
  2304                           
  2305                           ;programming.c: 141: BYTE Success = 0x00;
  2306  0006A0  6BE8               	clrf	writeEepromByte@Success& (0+255),b
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;programming.c: 142: enterICSP();
  2310  0006A2  EC00  F00E         	call	_enterICSP	;wreg free
  2311                           
  2312                           ;programming.c: 143: generateWritePulses(0, 0x9E, 0xA6);
  2313  0006A6  0100               	movlb	0	; () banked
  2314  0006A8  EC25  F007         	call	PL62	;call to abstracted procedure
  2315  0006AC  D873               	call	PL26	;call to abstracted procedure
  2316  0006AE  EC46  F005         	call	_generateWritePulses	;wreg free
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;programming.c: 144: generateWritePulses(0, 0x9C, 0xA6);
  2320  0006B2  EC29  F007         	call	PL66	;call to abstracted procedure
  2321  0006B6  D86E               	call	PL26	;call to abstracted procedure
  2322  0006B8  EC46  F005         	call	_generateWritePulses	;wreg free
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;programming.c: 145: generateWritePulses(0, 0x0E, address.v[0]);
  2326  0006BC  D877               	call	PL32	;call to abstracted procedure
  2327  0006BE  C0DF  F0D7         	movff	writeEepromByte@address,generateWritePulses@payLoadLsb
  2328  0006C2  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2329  0006C4  EC46  F005         	call	_generateWritePulses	;wreg free
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;programming.c: 146: generateWritePulses(0, 0x6E, 0xA9);
  2333  0006C8  D85E               	call	PL18	;call to abstracted procedure
  2334  0006CA  0EA9               	movlw	169
  2335  0006CC  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2336  0006CE  EC46  F005         	call	_generateWritePulses	;wreg free
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;programming.c: 147: generateWritePulses(0, 0x0E, address.v[1]);
  2340  0006D2  D86C               	call	PL32	;call to abstracted procedure
  2341  0006D4  C0E0  F0D7         	movff	writeEepromByte@address+1,generateWritePulses@payLoadLsb
  2342  0006D8  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2343  0006DA  EC46  F005         	call	_generateWritePulses	;wreg free
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;programming.c: 148: generateWritePulses(0, 0x6E, 0xAA);
  2347  0006DE  D853               	call	PL18	;call to abstracted procedure
  2348  0006E0  0EAA               	movlw	170
  2349  0006E2  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2350  0006E4  EC46  F005         	call	_generateWritePulses	;wreg free
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;programming.c: 149: generateWritePulses(0, 0x0E, data);
  2354  0006E8  D861               	call	PL32	;call to abstracted procedure
  2355  0006EA  C0E3  F0D7         	movff	writeEepromByte@data,generateWritePulses@payLoadLsb
  2356  0006EE  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2357  0006F0  EC46  F005         	call	_generateWritePulses	;wreg free
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;programming.c: 150: generateWritePulses(0, 0x6E, 0xA8);
  2361  0006F4  D848               	call	PL18	;call to abstracted procedure
  2362  0006F6  0EA8               	movlw	168
  2363  0006F8  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2364  0006FA  EC46  F005         	call	_generateWritePulses	;wreg free
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;programming.c: 151: generateWritePulses(0, 0x84, 0xA6);
  2368  0006FE  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2369  000700  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2370  000702  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2371  000704  0E84               	movlw	132
  2372  000706  D846               	call	PL26	;call to abstracted procedure
  2373  000708  EC46  F005         	call	_generateWritePulses	;wreg free
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;programming.c: 152: generateWritePulses(0, 0x82, 0xA6);
  2377  00070C  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2378  00070E  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2379  000710  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2380  000712  0E82               	movlw	130
  2381  000714  D83F               	call	PL26	;call to abstracted procedure
  2382  000716  EC46  F005         	call	_generateWritePulses	;wreg free
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;programming.c: 153: generateWritePulses(0, 0x00, 0x00);
  2386  00071A  D841               	call	PL28	;call to abstracted procedure
  2387  00071C  EC46  F005         	call	_generateWritePulses	;wreg free
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;programming.c: 154: generateWritePulses(0, 0x00, 0x00);
  2391  000720  D83E               	call	PL28	;call to abstracted procedure
  2392  000722  EC46  F005         	call	_generateWritePulses	;wreg free
  2393  000726                     l4766:
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;programming.c: 156: generateWritePulses(0, 0x50, 0xA6);
  2397  000726  EC2D  F007         	call	PL88	;call to abstracted procedure
  2398  00072A  D834               	call	PL26	;call to abstracted procedure
  2399  00072C  EC46  F005         	call	_generateWritePulses	;wreg free
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;programming.c: 157: generateWritePulses(0, 0x6E, 0xF5);
  2403  000730  D82A               	call	PL18	;call to abstracted procedure
  2404  000732  0EF5               	movlw	245
  2405  000734  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2406  000736  EC46  F005         	call	_generateWritePulses	;wreg free
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;programming.c: 158: generateWritePulses(0, 0x00, 0x00);
  2410  00073A  D831               	call	PL28	;call to abstracted procedure
  2411  00073C  EC46  F005         	call	_generateWritePulses	;wreg free
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;programming.c: 159: WORD_VAL Data = generateReadPulses (0x02);
  2415  000740  EC31  F007         	call	PL134	;call to abstracted procedure
  2416  000744  EC37  F008         	call	_generateReadPulses	;wreg free
  2417  000748  C0D3  F0E6         	movff	?_generateReadPulses,writeEepromByte@Data
  2418  00074C  C0D4  F0E7         	movff	?_generateReadPulses+1,writeEepromByte@Data+1
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;programming.c: 160: if (Data.v[1] == 0x00)
  2422  000750  51E7               	movf	(writeEepromByte@Data+1)& (0+255),w,b
  2423  000752  E102               	bnz	l4778
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;programming.c: 161: Success = TRUE;
  2427  000754  0E01               	movlw	1
  2428  000756  6FE8               	movwf	writeEepromByte@Success& (0+255),b
  2429  000758                     l4778:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;programming.c: 162: i++;
  2433  000758  4BE4               	infsnz	writeEepromByte@i& (0+255),f,b
  2434  00075A  2BE5               	incf	(writeEepromByte@i+1)& (0+255),f,b
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;programming.c: 163: } while ((!Success) && (i<5));
  2438  00075C  51E8               	movf	writeEepromByte@Success& (0+255),w,b
  2439  00075E  E105               	bnz	l819
  2440                           
  2441                           ; BSR set to: 0
  2442  000760  51E5               	movf	(writeEepromByte@i+1)& (0+255),w,b
  2443  000762  E103               	bnz	u3910
  2444  000764  0E05               	movlw	5
  2445  000766  5DE4               	subwf	writeEepromByte@i& (0+255),w,b
  2446  000768  E3DE               	bnc	l4766
  2447  00076A                     u3910:
  2448  00076A                     l819:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;programming.c: 164: LATBbits.LATB6 = 0;
  2452  00076A  9C8A               	bcf	3978,6,c	;volatile
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;programming.c: 165: (_delay((unsigned long)((100)*(12000000/4000000.0))));
  2456  00076C  0E64               	movlw	100
  2457  00076E                     u4227:
  2458  00076E  2EE8               	decfsz	wreg,f,c
  2459  000770  D7FE               	bra	u4227
  2460                           
  2461                           ;programming.c: 166: generateWritePulses(0, 0x94, 0xA6);
  2462  000772  0100               	movlb	0	; () banked
  2463  000774  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2464  000776  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2465  000778  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2466  00077A  0E94               	movlw	148
  2467  00077C  D80B               	call	PL26	;call to abstracted procedure
  2468  00077E  EC46  F005         	call	_generateWritePulses	;wreg free
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;programming.c: 167: exitICSP();
  2472  000782  EFFE  F00D         	goto	_exitICSP	;wreg free
  2473  000786                     __end_of_writeEepromByte:
  2474                           	opt stack 0
  2475  000786                     PL18:
  2476                           	opt stack 16
  2477  000786  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2478  000788  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2479  00078A  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2480  00078C  0E6E               	movlw	110
  2481  00078E  6FD5               	movwf	generateWritePulses@payLoadMsb& (0+255),b
  2482  000790  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2483  000792  0C6E               	retlw	110
  2484  000794                     __end_ofPL18:
  2485                           	opt stack 0
  2486  000794                     PL26:
  2487                           	opt stack 16
  2488  000794  6FD5               	movwf	generateWritePulses@payLoadMsb& (0+255),b
  2489  000796  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2490  000798  0EA6               	movlw	166
  2491  00079A  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2492  00079C  0CA6               	retlw	166
  2493  00079E                     __end_ofPL26:
  2494                           	opt stack 0
  2495  00079E                     PL28:
  2496                           	opt stack 16
  2497  00079E  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2498  0007A0  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2499  0007A2  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2500  0007A4  6BD5               	clrf	generateWritePulses@payLoadMsb& (0+255),b
  2501  0007A6  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2502  0007A8  6BD7               	clrf	generateWritePulses@payLoadLsb& (0+255),b
  2503  0007AA  0012               	return	
  2504  0007AC                     __end_ofPL28:
  2505                           	opt stack 0
  2506  0007AC                     PL32:
  2507                           	opt stack 16
  2508  0007AC  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2509  0007AE  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2510  0007B0  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2511  0007B2  0E0E               	movlw	14
  2512  0007B4  6FD5               	movwf	generateWritePulses@payLoadMsb& (0+255),b
  2513  0007B6  0C0E               	retlw	14
  2514  0007B8                     __end_ofPL32:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           prodh	equ	0xFF4
  2521                           prodl	equ	0xFF3
  2522                           intcon	equ	0xFF2
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           indf1	equ	0xFE7
  2526                           postdec1	equ	0xFE5
  2527                           fsr1h	equ	0xFE2
  2528                           fsr1l	equ	0xFE1
  2529                           indf2	equ	0xFDF
  2530                           postinc2	equ	0xFDE
  2531                           postdec2	equ	0xFDD
  2532                           plusw2	equ	0xFDB
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _readEepromByte *****************
  2538 ;; Defined at:
  2539 ;;		line 122 in file "libs/programming.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  address         4   12[BANK0 ] struct _DWORD_VAL
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  Data            2   16[BANK0 ] struct _WORD_VAL
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      unsigned char 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 3F/1
  2550 ;;		On exit  : 3F/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2553 ;;      Params:         0       4       0       0
  2554 ;;      Locals:         0       2       0       0
  2555 ;;      Temps:          0       0       0       0
  2556 ;;      Totals:         0       6       0       0
  2557 ;;Total ram usage:        6 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:   13
  2560 ;; This function calls:
  2561 ;;		_enterICSP
  2562 ;;		_exitICSP
  2563 ;;		_generateReadPulses
  2564 ;;		_generateWritePulses
  2565 ;; This function is called by:
  2566 ;;		_APP_DeviceCDCBasicDemoTasks
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text9
  2571  000DB2                     __ptext9:
  2572                           	opt stack 0
  2573  000DB2                     _readEepromByte:
  2574                           	opt stack 16
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;programming.c: 123: enterICSP();
  2578                           
  2579                           ;incstack = 0
  2580  000DB2  EC00  F00E         	call	_enterICSP	;wreg free
  2581                           
  2582                           ;programming.c: 124: generateWritePulses(0, 0x9E, 0xA6);
  2583  000DB6  0100               	movlb	0	; () banked
  2584  000DB8  D848               	call	PL62	;call to abstracted procedure
  2585  000DBA  ECCA  F003         	call	PL26	;call to abstracted procedure
  2586  000DBE  EC46  F005         	call	_generateWritePulses	;wreg free
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;programming.c: 125: generateWritePulses(0, 0x9C, 0xA6);
  2590  000DC2  D847               	call	PL66	;call to abstracted procedure
  2591  000DC4  ECCA  F003         	call	PL26	;call to abstracted procedure
  2592  000DC8  EC46  F005         	call	_generateWritePulses	;wreg free
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;programming.c: 126: generateWritePulses(0, 0x0E, address.v[0]);
  2596  000DCC  ECD6  F003         	call	PL32	;call to abstracted procedure
  2597  000DD0  C0DF  F0D7         	movff	readEepromByte@address,generateWritePulses@payLoadLsb
  2598  000DD4  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2599  000DD6  EC46  F005         	call	_generateWritePulses	;wreg free
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;programming.c: 127: generateWritePulses(0, 0x6E, 0xA9);
  2603  000DDA  ECC3  F003         	call	PL18	;call to abstracted procedure
  2604  000DDE  0EA9               	movlw	169
  2605  000DE0  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2606  000DE2  EC46  F005         	call	_generateWritePulses	;wreg free
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;programming.c: 128: generateWritePulses(0, 0x0E, address.v[1]);
  2610  000DE6  ECD6  F003         	call	PL32	;call to abstracted procedure
  2611  000DEA  C0E0  F0D7         	movff	readEepromByte@address+1,generateWritePulses@payLoadLsb
  2612  000DEE  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2613  000DF0  EC46  F005         	call	_generateWritePulses	;wreg free
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;programming.c: 129: generateWritePulses(0, 0x6E, 0xAA);
  2617  000DF4  ECC3  F003         	call	PL18	;call to abstracted procedure
  2618  000DF8  0EAA               	movlw	170
  2619  000DFA  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2620  000DFC  EC46  F005         	call	_generateWritePulses	;wreg free
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;programming.c: 130: generateWritePulses(0, 0x80, 0xA6);
  2624  000E00  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2625  000E02  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2626  000E04  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2627  000E06  0E80               	movlw	128
  2628  000E08  ECCA  F003         	call	PL26	;call to abstracted procedure
  2629  000E0C  EC46  F005         	call	_generateWritePulses	;wreg free
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;programming.c: 131: generateWritePulses(0, 0x50, 0xA8);
  2633  000E10  D824               	call	PL88	;call to abstracted procedure
  2634  000E12  6FD5               	movwf	generateWritePulses@payLoadMsb& (0+255),b
  2635  000E14  6BD8               	clrf	(generateWritePulses@payLoadLsb+1)& (0+255),b
  2636  000E16  0EA8               	movlw	168
  2637  000E18  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2638  000E1A  EC46  F005         	call	_generateWritePulses	;wreg free
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;programming.c: 132: generateWritePulses(0, 0x6E, 0xF5);
  2642  000E1E  ECC3  F003         	call	PL18	;call to abstracted procedure
  2643  000E22  0EF5               	movlw	245
  2644  000E24  6FD7               	movwf	generateWritePulses@payLoadLsb& (0+255),b
  2645  000E26  EC46  F005         	call	_generateWritePulses	;wreg free
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;programming.c: 133: generateWritePulses(0, 0x00, 0x00);
  2649  000E2A  ECCF  F003         	call	PL28	;call to abstracted procedure
  2650  000E2E  EC46  F005         	call	_generateWritePulses	;wreg free
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;programming.c: 134: WORD_VAL Data = generateReadPulses (0x02);
  2654  000E32  D817               	call	PL134	;call to abstracted procedure
  2655  000E34  EC37  F008         	call	_generateReadPulses	;wreg free
  2656  000E38  C0D3  F0E3         	movff	?_generateReadPulses,readEepromByte@Data
  2657  000E3C  C0D4  F0E4         	movff	?_generateReadPulses+1,readEepromByte@Data+1
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;programming.c: 135: exitICSP();
  2661  000E40  ECFE  F00D         	call	_exitICSP	;wreg free
  2662                           
  2663                           ;programming.c: 136: return Data.v[1];
  2664  000E44  0100               	movlb	0	; () banked
  2665  000E46  51E4               	movf	(readEepromByte@Data+1)& (0+255),w,b
  2666                           
  2667                           ; BSR set to: 0
  2668  000E48  0012               	return		;funcret
  2669  000E4A                     __end_of_readEepromByte:
  2670                           	opt stack 0
  2671  000E4A                     PL62:
  2672                           	opt stack 16
  2673  000E4A  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2674  000E4C  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2675  000E4E  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2676  000E50  0C9E               	retlw	158
  2677  000E52                     __end_ofPL62:
  2678                           	opt stack 0
  2679  000E52                     PL66:
  2680                           	opt stack 16
  2681  000E52  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2682  000E54  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2683  000E56  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2684  000E58  0C9C               	retlw	156
  2685  000E5A                     __end_ofPL66:
  2686                           	opt stack 0
  2687  000E5A                     PL88:
  2688                           	opt stack 16
  2689  000E5A  6BD4               	clrf	(generateWritePulses@command+1)& (0+255),b
  2690  000E5C  6BD3               	clrf	generateWritePulses@command& (0+255),b
  2691  000E5E  6BD6               	clrf	(generateWritePulses@payLoadMsb+1)& (0+255),b
  2692  000E60  0C50               	retlw	80
  2693  000E62                     __end_ofPL88:
  2694                           	opt stack 0
  2695  000E62                     PL134:
  2696                           	opt stack 16
  2697  000E62  6BD4               	clrf	(generateReadPulses@command+1)& (0+255),b
  2698  000E64  0E02               	movlw	2
  2699  000E66  6FD3               	movwf	generateReadPulses@command& (0+255),b
  2700  000E68  0C02               	retlw	2
  2701  000E6A                     __end_ofPL134:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           indf1	equ	0xFE7
  2713                           postdec1	equ	0xFE5
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           indf2	equ	0xFDF
  2717                           postinc2	equ	0xFDE
  2718                           postdec2	equ	0xFDD
  2719                           plusw2	equ	0xFDB
  2720                           fsr2h	equ	0xFDA
  2721                           fsr2l	equ	0xFD9
  2722                           status	equ	0xFD8
  2723                           
  2724 ;; *************** function _generateWritePulses *****************
  2725 ;; Defined at:
  2726 ;;		line 55 in file "libs/programming.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  command         2    0[BANK0 ] unsigned int 
  2729 ;;  payLoadMsb      2    2[BANK0 ] unsigned int 
  2730 ;;  payLoadLsb      2    4[BANK0 ] unsigned int 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  i               1   11[BANK0 ] unsigned char 
  2733 ;;  i               1   10[BANK0 ] unsigned char 
  2734 ;;  i               1    9[BANK0 ] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 3F/0
  2741 ;;		On exit  : 3F/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2744 ;;      Params:         0       6       0       0
  2745 ;;      Locals:         0       3       0       0
  2746 ;;      Temps:          0       3       0       0
  2747 ;;      Totals:         0      12       0       0
  2748 ;;Total ram usage:       12 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:   10
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_readEepromByte
  2755 ;;		_writeEepromByte
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text10
  2760  000A8C                     __ptext10:
  2761                           	opt stack 0
  2762  000A8C                     _generateWritePulses:
  2763                           	opt stack 18
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;programming.c: 56: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;incstack = 0
  2770  000A8C  D000               	nop2		;2 cycle nop
  2771  000A8E  F000               	nop	
  2772                           
  2773                           ;programming.c: 57: for (BYTE i = 0; i < 4; i++) {
  2774  000A90  0100               	movlb	0	; () banked
  2775  000A92  6BDC               	clrf	generateWritePulses@i& (0+255),b
  2776  000A94                     l787:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;programming.c: 58: LATBbits.LATB6 = 1;
  2780  000A94  8C8A               	bsf	3978,6,c	;volatile
  2781                           
  2782                           ;programming.c: 59: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2783  000A96  D000               	nop2		;2 cycle nop
  2784  000A98  F000               	nop	
  2785                           
  2786                           ;programming.c: 60: if ((command >> i) & 0x01)
  2787  000A9A  C0DC  F0D9         	movff	generateWritePulses@i,??_generateWritePulses
  2788  000A9E  C0D3  F0DA         	movff	generateWritePulses@command,??_generateWritePulses+1
  2789  000AA2  C0D4  F0DB         	movff	generateWritePulses@command+1,??_generateWritePulses+2
  2790  000AA6  0100               	movlb	0	; () banked
  2791  000AA8  2BD9               	incf	??_generateWritePulses& (0+255),f,b
  2792  000AAA  D001               	goto	u3644
  2793  000AAC                     u3645:
  2794  000AAC  D855               	call	PL130	;call to abstracted procedure
  2795  000AAE                     u3644:
  2796  000AAE  2FD9               	decfsz	??_generateWritePulses& (0+255),f,b
  2797  000AB0  D7FD               	goto	u3645
  2798  000AB2  0100               	movlb	0	; () banked
  2799  000AB4  A1DA               	btfss	(??_generateWritePulses+1)& (0+255),0,b
  2800  000AB6  D002               	goto	l789
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;programming.c: 61: LATCbits.LATC4 = 1;
  2804  000AB8  888B               	bsf	3979,4,c	;volatile
  2805  000ABA  D001               	goto	l790
  2806  000ABC                     l789:
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;programming.c: 62: else
  2810                           ;programming.c: 63: LATCbits.LATC4 = 0;
  2811  000ABC  988B               	bcf	3979,4,c	;volatile
  2812  000ABE                     l790:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;programming.c: 64: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2816  000ABE  D000               	nop2		;2 cycle nop
  2817  000AC0  F000               	nop	
  2818                           
  2819                           ;programming.c: 65: LATBbits.LATB6 = 0;
  2820  000AC2  9C8A               	bcf	3978,6,c	;volatile
  2821                           
  2822                           ;programming.c: 66: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2823  000AC4  D000               	nop2		;2 cycle nop
  2824  000AC6  F000               	nop	
  2825  000AC8  0100               	movlb	0	; () banked
  2826  000ACA  2BDC               	incf	generateWritePulses@i& (0+255),f,b
  2827                           
  2828                           ; BSR set to: 0
  2829  000ACC  0E03               	movlw	3
  2830  000ACE  65DC               	cpfsgt	generateWritePulses@i& (0+255),b
  2831  000AD0  D7E1               	goto	l787
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;programming.c: 67: }
  2835                           ;programming.c: 68: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2836  000AD2  D000               	nop2		;2 cycle nop
  2837  000AD4  F000               	nop	
  2838                           
  2839                           ;programming.c: 69: for (BYTE i = 0; i < 8; i++) {
  2840  000AD6  6BDD               	clrf	generateWritePulses@i_3288& (0+255),b
  2841  000AD8                     l791:
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;programming.c: 70: LATBbits.LATB6 = 1;
  2845  000AD8  8C8A               	bsf	3978,6,c	;volatile
  2846                           
  2847                           ;programming.c: 71: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2848  000ADA  D000               	nop2		;2 cycle nop
  2849  000ADC  F000               	nop	
  2850                           
  2851                           ;programming.c: 72: if ((payLoadLsb >> i) & 0x01)
  2852  000ADE  C0DD  F0D9         	movff	generateWritePulses@i_3288,??_generateWritePulses
  2853  000AE2  C0D7  F0DA         	movff	generateWritePulses@payLoadLsb,??_generateWritePulses+1
  2854  000AE6  C0D8  F0DB         	movff	generateWritePulses@payLoadLsb+1,??_generateWritePulses+2
  2855  000AEA  0100               	movlb	0	; () banked
  2856  000AEC  2BD9               	incf	??_generateWritePulses& (0+255),f,b
  2857  000AEE  D001               	goto	u3674
  2858  000AF0                     u3675:
  2859  000AF0  D833               	call	PL130	;call to abstracted procedure
  2860  000AF2                     u3674:
  2861  000AF2  2FD9               	decfsz	??_generateWritePulses& (0+255),f,b
  2862  000AF4  D7FD               	goto	u3675
  2863  000AF6  0100               	movlb	0	; () banked
  2864  000AF8  A1DA               	btfss	(??_generateWritePulses+1)& (0+255),0,b
  2865  000AFA  D002               	goto	l793
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;programming.c: 73: LATCbits.LATC4 = 1;
  2869  000AFC  888B               	bsf	3979,4,c	;volatile
  2870  000AFE  D001               	goto	l794
  2871  000B00                     l793:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;programming.c: 74: else
  2875                           ;programming.c: 75: LATCbits.LATC4 = 0;
  2876  000B00  988B               	bcf	3979,4,c	;volatile
  2877  000B02                     l794:
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;programming.c: 76: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2881  000B02  D000               	nop2		;2 cycle nop
  2882  000B04  F000               	nop	
  2883                           
  2884                           ;programming.c: 77: LATBbits.LATB6 = 0;
  2885  000B06  9C8A               	bcf	3978,6,c	;volatile
  2886                           
  2887                           ;programming.c: 78: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2888  000B08  D000               	nop2		;2 cycle nop
  2889  000B0A  F000               	nop	
  2890  000B0C  0100               	movlb	0	; () banked
  2891  000B0E  2BDD               	incf	generateWritePulses@i_3288& (0+255),f,b
  2892                           
  2893                           ; BSR set to: 0
  2894  000B10  0E07               	movlw	7
  2895  000B12  65DD               	cpfsgt	generateWritePulses@i_3288& (0+255),b
  2896  000B14  D7E1               	goto	l791
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;programming.c: 79: }
  2900                           ;programming.c: 80: for (BYTE i = 0; i < 8; i++) {
  2901  000B16  6BDE               	clrf	generateWritePulses@i_3289& (0+255),b
  2902  000B18                     l795:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;programming.c: 81: LATBbits.LATB6 = 1;
  2906  000B18  8C8A               	bsf	3978,6,c	;volatile
  2907                           
  2908                           ;programming.c: 82: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2909  000B1A  D000               	nop2		;2 cycle nop
  2910  000B1C  F000               	nop	
  2911                           
  2912                           ;programming.c: 83: if ((payLoadMsb >> i) & 0x01)
  2913  000B1E  C0DE  F0D9         	movff	generateWritePulses@i_3289,??_generateWritePulses
  2914  000B22  C0D5  F0DA         	movff	generateWritePulses@payLoadMsb,??_generateWritePulses+1
  2915  000B26  C0D6  F0DB         	movff	generateWritePulses@payLoadMsb+1,??_generateWritePulses+2
  2916  000B2A  0100               	movlb	0	; () banked
  2917  000B2C  2BD9               	incf	??_generateWritePulses& (0+255),f,b
  2918  000B2E  D001               	goto	u3704
  2919  000B30                     u3705:
  2920  000B30  D813               	call	PL130	;call to abstracted procedure
  2921  000B32                     u3704:
  2922  000B32  2FD9               	decfsz	??_generateWritePulses& (0+255),f,b
  2923  000B34  D7FD               	goto	u3705
  2924  000B36  0100               	movlb	0	; () banked
  2925  000B38  A1DA               	btfss	(??_generateWritePulses+1)& (0+255),0,b
  2926  000B3A  D002               	goto	l797
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;programming.c: 84: LATCbits.LATC4 = 1;
  2930  000B3C  888B               	bsf	3979,4,c	;volatile
  2931  000B3E  D001               	goto	l798
  2932  000B40                     l797:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;programming.c: 85: else
  2936                           ;programming.c: 86: LATCbits.LATC4 = 0;
  2937  000B40  988B               	bcf	3979,4,c	;volatile
  2938  000B42                     l798:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;programming.c: 87: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2942  000B42  D000               	nop2		;2 cycle nop
  2943  000B44  F000               	nop	
  2944                           
  2945                           ;programming.c: 88: LATBbits.LATB6 = 0;
  2946  000B46  9C8A               	bcf	3978,6,c	;volatile
  2947                           
  2948                           ;programming.c: 89: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  2949  000B48  D000               	nop2		;2 cycle nop
  2950  000B4A  F000               	nop	
  2951  000B4C  0100               	movlb	0	; () banked
  2952  000B4E  2BDE               	incf	generateWritePulses@i_3289& (0+255),f,b
  2953                           
  2954                           ; BSR set to: 0
  2955  000B50  0E07               	movlw	7
  2956  000B52  65DE               	cpfsgt	generateWritePulses@i_3289& (0+255),b
  2957  000B54  D7E1               	goto	l795
  2958  000B56  0C07               	retlw	7
  2959  000B58                     __end_of_generateWritePulses:
  2960                           	opt stack 0
  2961  000B58                     PL130:
  2962                           	opt stack 18
  2963  000B58  90D8               	bcf	status,0,c
  2964  000B5A  33DB               	rrcf	(??_generateWritePulses+2)& (0+255),f,b
  2965  000B5C  33DA               	rrcf	(??_generateWritePulses+1)& (0+255),f,b
  2966  000B5E  0012               	return	
  2967  000B60                     __end_ofPL130:
  2968                           	opt stack 0
  2969                           tblptru	equ	0xFF8
  2970                           tblptrh	equ	0xFF7
  2971                           tblptrl	equ	0xFF6
  2972                           tablat	equ	0xFF5
  2973                           prodh	equ	0xFF4
  2974                           prodl	equ	0xFF3
  2975                           intcon	equ	0xFF2
  2976                           postinc0	equ	0xFEE
  2977                           wreg	equ	0xFE8
  2978                           indf1	equ	0xFE7
  2979                           postdec1	equ	0xFE5
  2980                           fsr1h	equ	0xFE2
  2981                           fsr1l	equ	0xFE1
  2982                           indf2	equ	0xFDF
  2983                           postinc2	equ	0xFDE
  2984                           postdec2	equ	0xFDD
  2985                           plusw2	equ	0xFDB
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990 ;; *************** function _generateReadPulses *****************
  2991 ;; Defined at:
  2992 ;;		line 93 in file "libs/programming.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  command         2    0[BANK0 ] unsigned int 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  i               1    8[BANK0 ] unsigned char 
  2997 ;;  i               1    7[BANK0 ] unsigned char 
  2998 ;;  OUT             2    5[BANK0 ] struct _WORD_VAL
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2    0[BANK0 ] struct _WORD_VAL
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 3F/0
  3005 ;;		On exit  : 3F/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3008 ;;      Params:         0       2       0       0
  3009 ;;      Locals:         0       4       0       0
  3010 ;;      Temps:          0       3       0       0
  3011 ;;      Totals:         0       9       0       0
  3012 ;;Total ram usage:        9 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:   10
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_readEepromByte
  3019 ;;		_writeEepromByte
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text11
  3024  00106E                     __ptext11:
  3025                           	opt stack 0
  3026  00106E                     _generateReadPulses:
  3027                           	opt stack 18
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;programming.c: 94: WORD_VAL OUT;
  3031                           ;programming.c: 95: OUT.Val = 0x0000;
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;incstack = 0
  3035  00106E  6BD8               	clrf	generateReadPulses@OUT& (0+255),b
  3036  001070  6BD9               	clrf	(generateReadPulses@OUT+1)& (0+255),b
  3037                           
  3038                           ;programming.c: 96: for (BYTE i = 0; i < 4; i++) {
  3039  001072  6BDA               	clrf	generateReadPulses@i& (0+255),b
  3040  001074                     l802:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;programming.c: 97: LATBbits.LATB6 = 1;
  3044  001074  8C8A               	bsf	3978,6,c	;volatile
  3045                           
  3046                           ;programming.c: 98: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3047  001076  D000               	nop2		;2 cycle nop
  3048  001078  F000               	nop	
  3049                           
  3050                           ;programming.c: 99: if ((command >> i) & 0x01)
  3051  00107A  C0DA  F0D5         	movff	generateReadPulses@i,??_generateReadPulses
  3052  00107E  C0D3  F0D6         	movff	generateReadPulses@command,??_generateReadPulses+1
  3053  001082  C0D4  F0D7         	movff	generateReadPulses@command+1,??_generateReadPulses+2
  3054  001086  0100               	movlb	0	; () banked
  3055  001088  2BD5               	incf	??_generateReadPulses& (0+255),f,b
  3056  00108A  D003               	goto	u3734
  3057  00108C                     u3735:
  3058  00108C  90D8               	bcf	status,0,c
  3059  00108E  33D7               	rrcf	(??_generateReadPulses+2)& (0+255),f,b
  3060  001090  33D6               	rrcf	(??_generateReadPulses+1)& (0+255),f,b
  3061  001092                     u3734:
  3062  001092  2FD5               	decfsz	??_generateReadPulses& (0+255),f,b
  3063  001094  D7FB               	goto	u3735
  3064  001096  0100               	movlb	0	; () banked
  3065  001098  A1D6               	btfss	(??_generateReadPulses+1)& (0+255),0,b
  3066  00109A  D002               	goto	l804
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;programming.c: 100: LATCbits.LATC4 = 1;
  3070  00109C  888B               	bsf	3979,4,c	;volatile
  3071  00109E  D001               	goto	l805
  3072  0010A0                     l804:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;programming.c: 101: else
  3076                           ;programming.c: 102: LATCbits.LATC4 = 0;
  3077  0010A0  988B               	bcf	3979,4,c	;volatile
  3078  0010A2                     l805:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;programming.c: 103: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3082  0010A2  D000               	nop2		;2 cycle nop
  3083  0010A4  F000               	nop	
  3084                           
  3085                           ;programming.c: 104: LATBbits.LATB6 = 0;
  3086  0010A6  9C8A               	bcf	3978,6,c	;volatile
  3087                           
  3088                           ;programming.c: 105: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3089  0010A8  D000               	nop2		;2 cycle nop
  3090  0010AA  F000               	nop	
  3091  0010AC  0100               	movlb	0	; () banked
  3092  0010AE  2BDA               	incf	generateReadPulses@i& (0+255),f,b
  3093                           
  3094                           ; BSR set to: 0
  3095  0010B0  0E03               	movlw	3
  3096  0010B2  65DA               	cpfsgt	generateReadPulses@i& (0+255),b
  3097  0010B4  D7DF               	goto	l802
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;programming.c: 106: }
  3101                           ;programming.c: 107: TRISCbits.TRISC4 = 1;
  3102  0010B6  8894               	bsf	3988,4,c	;volatile
  3103                           
  3104                           ;programming.c: 108: for (BYTE i = 0; i < 16; i++) {
  3105  0010B8  6BDB               	clrf	generateReadPulses@i_3316& (0+255),b
  3106  0010BA                     l806:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;programming.c: 109: LATBbits.LATB6 = 1;
  3110  0010BA  8C8A               	bsf	3978,6,c	;volatile
  3111                           
  3112                           ;programming.c: 110: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3113  0010BC  D000               	nop2		;2 cycle nop
  3114  0010BE  F000               	nop	
  3115                           
  3116                           ;programming.c: 111: if (PORTCbits.RC4 == 1)
  3117  0010C0  A882               	btfss	3970,4,c	;volatile
  3118  0010C2  D014               	goto	l4664
  3119                           
  3120                           ;programming.c: 112: OUT.Val = OUT.Val | ((WORD)(0x0001<<i));
  3121  0010C4  C0DB  F0D5         	movff	generateReadPulses@i_3316,??_generateReadPulses
  3122  0010C8  0E01               	movlw	1
  3123  0010CA  0100               	movlb	0	; () banked
  3124  0010CC  6FD6               	movwf	(??_generateReadPulses+1)& (0+255),b
  3125  0010CE  6BD7               	clrf	(??_generateReadPulses+2)& (0+255),b
  3126  0010D0  2BD5               	incf	??_generateReadPulses& (0+255),f,b
  3127  0010D2  D003               	goto	u3774
  3128  0010D4                     u3775:
  3129  0010D4  90D8               	bcf	status,0,c
  3130  0010D6  37D6               	rlcf	(??_generateReadPulses+1)& (0+255),f,b
  3131  0010D8  37D7               	rlcf	(??_generateReadPulses+2)& (0+255),f,b
  3132  0010DA                     u3774:
  3133  0010DA  2FD5               	decfsz	??_generateReadPulses& (0+255),f,b
  3134  0010DC  D7FB               	goto	u3775
  3135  0010DE  0100               	movlb	0	; () banked
  3136  0010E0  51D8               	movf	generateReadPulses@OUT& (0+255),w,b
  3137  0010E2  11D6               	iorwf	(??_generateReadPulses+1)& (0+255),w,b
  3138  0010E4  6FD8               	movwf	generateReadPulses@OUT& (0+255),b
  3139  0010E6  51D9               	movf	(generateReadPulses@OUT+1)& (0+255),w,b
  3140  0010E8  11D7               	iorwf	(??_generateReadPulses+2)& (0+255),w,b
  3141  0010EA  6FD9               	movwf	(generateReadPulses@OUT+1)& (0+255),b
  3142  0010EC                     l4664:
  3143                           
  3144                           ;programming.c: 113: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3145  0010EC  D000               	nop2		;2 cycle nop
  3146  0010EE  F000               	nop	
  3147                           
  3148                           ;programming.c: 114: LATBbits.LATB6 = 0;
  3149  0010F0  9C8A               	bcf	3978,6,c	;volatile
  3150                           
  3151                           ;programming.c: 115: (_delay((unsigned long)((1)*(12000000/4000000.0))));
  3152  0010F2  D000               	nop2		;2 cycle nop
  3153  0010F4  F000               	nop	
  3154  0010F6  0100               	movlb	0	; () banked
  3155  0010F8  2BDB               	incf	generateReadPulses@i_3316& (0+255),f,b
  3156                           
  3157                           ; BSR set to: 0
  3158  0010FA  0E0F               	movlw	15
  3159  0010FC  65DB               	cpfsgt	generateReadPulses@i_3316& (0+255),b
  3160  0010FE  D7DD               	goto	l806
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;programming.c: 116: }
  3164                           ;programming.c: 117: TRISCbits.TRISC4 = 0;
  3165  001100  9894               	bcf	3988,4,c	;volatile
  3166                           
  3167                           ;programming.c: 118: return OUT;
  3168  001102  C0D8  F0D3         	movff	generateReadPulses@OUT,?_generateReadPulses
  3169  001106  C0D9  F0D4         	movff	generateReadPulses@OUT+1,?_generateReadPulses+1
  3170                           
  3171                           ; BSR set to: 0
  3172  00110A  0C0F               	retlw	15	;funcret
  3173  00110C                     __end_of_generateReadPulses:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           wreg	equ	0xFE8
  3184                           indf1	equ	0xFE7
  3185                           postdec1	equ	0xFE5
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           indf2	equ	0xFDF
  3189                           postinc2	equ	0xFDE
  3190                           postdec2	equ	0xFDD
  3191                           plusw2	equ	0xFDB
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _exitICSP *****************
  3197 ;; Defined at:
  3198 ;;		line 48 in file "libs/programming.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 3F/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3212 ;;      Params:         0       0       0       0
  3213 ;;      Locals:         0       0       0       0
  3214 ;;      Temps:          0       0       0       0
  3215 ;;      Totals:         0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:   12
  3219 ;; This function calls:
  3220 ;;		_exitHighVoltageICSP
  3221 ;;		_exitLowVoltageICSP
  3222 ;; This function is called by:
  3223 ;;		_readEepromByte
  3224 ;;		_writeEepromByte
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text12
  3229  001BFC                     __ptext12:
  3230                           	opt stack 0
  3231  001BFC                     _exitICSP:
  3232                           	opt stack 16
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;programming.c: 50: exitLowVoltageICSP();
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;incstack = 0
  3239  001BFC  EFE7  F00D         	goto	_exitLowVoltageICSP	;wreg free
  3240  001C00                     __end_of_exitICSP:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           postinc0	equ	0xFEE
  3250                           wreg	equ	0xFE8
  3251                           indf1	equ	0xFE7
  3252                           postdec1	equ	0xFE5
  3253                           fsr1h	equ	0xFE2
  3254                           fsr1l	equ	0xFE1
  3255                           indf2	equ	0xFDF
  3256                           postinc2	equ	0xFDE
  3257                           postdec2	equ	0xFDD
  3258                           plusw2	equ	0xFDB
  3259                           fsr2h	equ	0xFDA
  3260                           fsr2l	equ	0xFD9
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function _exitLowVoltageICSP *****************
  3264 ;; Defined at:
  3265 ;;		line 25 in file "libs/programming.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 3F/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3279 ;;      Params:         0       0       0       0
  3280 ;;      Locals:         0       0       0       0
  3281 ;;      Temps:          0       0       0       0
  3282 ;;      Totals:         0       0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:   11
  3286 ;; This function calls:
  3287 ;;		_setTrisToOut
  3288 ;; This function is called by:
  3289 ;;		_exitICSP
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text13
  3294  001BCE                     __ptext13:
  3295                           	opt stack 0
  3296  001BCE                     _exitLowVoltageICSP:
  3297                           	opt stack 16
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;programming.c: 26: setTrisToOut ();
  3301                           
  3302                           ;incstack = 0
  3303  001BCE  ECF9  F00D         	call	_setTrisToOut	;wreg free
  3304                           
  3305                           ;programming.c: 27: LATCbits.LATC4 = 0;
  3306  001BD2  988B               	bcf	3979,4,c	;volatile
  3307                           
  3308                           ;programming.c: 28: LATBbits.LATB6 = 0;
  3309  001BD4  9C8A               	bcf	3978,6,c	;volatile
  3310                           
  3311                           ;programming.c: 30: LATCbits.LATC6 = 0;
  3312                           
  3313                           ;programming.c: 29: (_delay((unsigned long)((0)*(12000000/4000000.0))));
  3314  001BD6  9C8B               	bcf	3979,6,c	;volatile
  3315                           
  3316                           ;programming.c: 32: LATBbits.LATB5 = 0;
  3317                           
  3318                           ;programming.c: 31: (_delay((unsigned long)((0)*(12000000/4000000.0))));
  3319  001BD8  9A8A               	bcf	3978,5,c	;volatile
  3320  001BDA  0012               	return		;funcret
  3321  001BDC                     __end_of_exitLowVoltageICSP:
  3322                           	opt stack 0
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           prodh	equ	0xFF4
  3328                           prodl	equ	0xFF3
  3329                           intcon	equ	0xFF2
  3330                           postinc0	equ	0xFEE
  3331                           wreg	equ	0xFE8
  3332                           indf1	equ	0xFE7
  3333                           postdec1	equ	0xFE5
  3334                           fsr1h	equ	0xFE2
  3335                           fsr1l	equ	0xFE1
  3336                           indf2	equ	0xFDF
  3337                           postinc2	equ	0xFDE
  3338                           postdec2	equ	0xFDD
  3339                           plusw2	equ	0xFDB
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           
  3344 ;; *************** function _exitHighVoltageICSP *****************
  3345 ;; Defined at:
  3346 ;;		line 38 in file "libs/programming.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		None
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3360 ;;      Params:         0       0       0       0
  3361 ;;      Locals:         0       0       0       0
  3362 ;;      Temps:          0       0       0       0
  3363 ;;      Totals:         0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:   10
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_exitICSP
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text14
  3375  001C04                     __ptext14:
  3376                           	opt stack 0
  3377  001C04                     _exitHighVoltageICSP:
  3378                           	opt stack 17
  3379                           
  3380                           ;incstack = 0
  3381  001C04  0012               	return		;funcret
  3382  001C06                     __end_of_exitHighVoltageICSP:
  3383                           	opt stack 0
  3384                           tblptru	equ	0xFF8
  3385                           tblptrh	equ	0xFF7
  3386                           tblptrl	equ	0xFF6
  3387                           tablat	equ	0xFF5
  3388                           prodh	equ	0xFF4
  3389                           prodl	equ	0xFF3
  3390                           intcon	equ	0xFF2
  3391                           postinc0	equ	0xFEE
  3392                           wreg	equ	0xFE8
  3393                           indf1	equ	0xFE7
  3394                           postdec1	equ	0xFE5
  3395                           fsr1h	equ	0xFE2
  3396                           fsr1l	equ	0xFE1
  3397                           indf2	equ	0xFDF
  3398                           postinc2	equ	0xFDE
  3399                           postdec2	equ	0xFDD
  3400                           plusw2	equ	0xFDB
  3401                           fsr2h	equ	0xFDA
  3402                           fsr2l	equ	0xFD9
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _enterICSP *****************
  3406 ;; Defined at:
  3407 ;;		line 42 in file "libs/programming.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 3E/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3421 ;;      Params:         0       0       0       0
  3422 ;;      Locals:         0       0       0       0
  3423 ;;      Temps:          0       0       0       0
  3424 ;;      Totals:         0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:   12
  3428 ;; This function calls:
  3429 ;;		_enterHighVoltageICSP
  3430 ;;		_enterLowVoltageICSP
  3431 ;; This function is called by:
  3432 ;;		_readEepromByte
  3433 ;;		_writeEepromByte
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text15
  3438  001C00                     __ptext15:
  3439                           	opt stack 0
  3440  001C00                     _enterICSP:
  3441                           	opt stack 16
  3442                           
  3443                           ;programming.c: 44: enterLowVoltageICSP();
  3444                           
  3445                           ;incstack = 0
  3446  001C00  EFD6  F00C         	goto	_enterLowVoltageICSP	;wreg free
  3447  001C04                     __end_of_enterICSP:
  3448                           	opt stack 0
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           prodh	equ	0xFF4
  3454                           prodl	equ	0xFF3
  3455                           intcon	equ	0xFF2
  3456                           postinc0	equ	0xFEE
  3457                           wreg	equ	0xFE8
  3458                           indf1	equ	0xFE7
  3459                           postdec1	equ	0xFE5
  3460                           fsr1h	equ	0xFE2
  3461                           fsr1l	equ	0xFE1
  3462                           indf2	equ	0xFDF
  3463                           postinc2	equ	0xFDE
  3464                           postdec2	equ	0xFDD
  3465                           plusw2	equ	0xFDB
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _enterLowVoltageICSP *****************
  3471 ;; Defined at:
  3472 ;;		line 11 in file "libs/programming.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 3E/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3486 ;;      Params:         0       0       0       0
  3487 ;;      Locals:         0       0       0       0
  3488 ;;      Temps:          0       1       0       0
  3489 ;;      Totals:         0       1       0       0
  3490 ;;Total ram usage:        1 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:   11
  3493 ;; This function calls:
  3494 ;;		_setTrisToOut
  3495 ;; This function is called by:
  3496 ;;		_enterICSP
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text16
  3501  0019AC                     __ptext16:
  3502                           	opt stack 0
  3503  0019AC                     _enterLowVoltageICSP:
  3504                           	opt stack 16
  3505                           
  3506                           ;programming.c: 12: setTrisToOut ();
  3507                           
  3508                           ;incstack = 0
  3509  0019AC  ECF9  F00D         	call	_setTrisToOut	;wreg free
  3510                           
  3511                           ;programming.c: 14: LATCbits.LATC6 = 0;
  3512  0019B0  9C8B               	bcf	3979,6,c	;volatile
  3513                           
  3514                           ;programming.c: 15: LATCbits.LATC4 = 0;
  3515  0019B2  988B               	bcf	3979,4,c	;volatile
  3516                           
  3517                           ;programming.c: 16: LATBbits.LATB6 = 0;
  3518  0019B4  9C8A               	bcf	3978,6,c	;volatile
  3519                           
  3520                           ;programming.c: 17: LATBbits.LATB5 = 0;
  3521  0019B6  9A8A               	bcf	3978,5,c	;volatile
  3522                           
  3523                           ;programming.c: 18: _delay((unsigned long)((1)*(12000000/4000.0)));
  3524  0019B8  0E04               	movlw	4
  3525  0019BA  0100               	movlb	0	; () banked
  3526  0019BC  6FD3               	movwf	??_enterLowVoltageICSP& (0+255),b
  3527  0019BE  0EE4               	movlw	228
  3528  0019C0                     u4237:
  3529  0019C0  2EE8               	decfsz	wreg,f,c
  3530  0019C2  D7FE               	bra	u4237
  3531  0019C4  2FD3               	decfsz	??_enterLowVoltageICSP& (0+255),f,b
  3532  0019C6  D7FC               	bra	u4237
  3533  0019C8  F000               	nop	
  3534                           
  3535                           ;programming.c: 19: LATBbits.LATB5 = 1;
  3536  0019CA  8A8A               	bsf	3978,5,c	;volatile
  3537                           
  3538                           ;programming.c: 20: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3539  0019CC  D000               	nop2		;2 cycle nop
  3540  0019CE  D000               	nop2		;2 cycle nop
  3541  0019D0  D000               	nop2		;2 cycle nop
  3542                           
  3543                           ;programming.c: 21: LATCbits.LATC6 = 1;
  3544  0019D2  8C8B               	bsf	3979,6,c	;volatile
  3545                           
  3546                           ;programming.c: 22: (_delay((unsigned long)((2)*(12000000/4000000.0))));
  3547  0019D4  D000               	nop2		;2 cycle nop
  3548  0019D6  D000               	nop2		;2 cycle nop
  3549  0019D8  D000               	nop2		;2 cycle nop
  3550  0019DA  0012               	return		;funcret
  3551  0019DC                     __end_of_enterLowVoltageICSP:
  3552                           	opt stack 0
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           intcon	equ	0xFF2
  3560                           postinc0	equ	0xFEE
  3561                           wreg	equ	0xFE8
  3562                           indf1	equ	0xFE7
  3563                           postdec1	equ	0xFE5
  3564                           fsr1h	equ	0xFE2
  3565                           fsr1l	equ	0xFE1
  3566                           indf2	equ	0xFDF
  3567                           postinc2	equ	0xFDE
  3568                           postdec2	equ	0xFDD
  3569                           plusw2	equ	0xFDB
  3570                           fsr2h	equ	0xFDA
  3571                           fsr2l	equ	0xFD9
  3572                           status	equ	0xFD8
  3573                           
  3574 ;; *************** function _setTrisToOut *****************
  3575 ;; Defined at:
  3576 ;;		line 4 in file "libs/programming.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		None
  3585 ;; Tracked objects:
  3586 ;;		On entry : 3E/0
  3587 ;;		On exit  : 3E/0
  3588 ;;		Unchanged: 3E/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3590 ;;      Params:         0       0       0       0
  3591 ;;      Locals:         0       0       0       0
  3592 ;;      Temps:          0       0       0       0
  3593 ;;      Totals:         0       0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:   10
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_enterLowVoltageICSP
  3601 ;;		_exitLowVoltageICSP
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text17
  3606  001BF2                     __ptext17:
  3607                           	opt stack 0
  3608  001BF2                     _setTrisToOut:
  3609                           	opt stack 16
  3610                           
  3611                           ;programming.c: 5: TRISCbits.TRISC6 = 0;
  3612                           
  3613                           ;incstack = 0
  3614  001BF2  9C94               	bcf	3988,6,c	;volatile
  3615                           
  3616                           ;programming.c: 6: TRISCbits.TRISC4 = 0;
  3617  001BF4  9894               	bcf	3988,4,c	;volatile
  3618                           
  3619                           ;programming.c: 7: TRISBbits.TRISB6 = 0;
  3620  001BF6  9C93               	bcf	3987,6,c	;volatile
  3621                           
  3622                           ;programming.c: 8: TRISBbits.TRISB5 = 0;
  3623  001BF8  9A93               	bcf	3987,5,c	;volatile
  3624  001BFA  0012               	return		;funcret
  3625  001BFC                     __end_of_setTrisToOut:
  3626                           	opt stack 0
  3627                           tblptru	equ	0xFF8
  3628                           tblptrh	equ	0xFF7
  3629                           tblptrl	equ	0xFF6
  3630                           tablat	equ	0xFF5
  3631                           prodh	equ	0xFF4
  3632                           prodl	equ	0xFF3
  3633                           intcon	equ	0xFF2
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           indf1	equ	0xFE7
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           indf2	equ	0xFDF
  3641                           postinc2	equ	0xFDE
  3642                           postdec2	equ	0xFDD
  3643                           plusw2	equ	0xFDB
  3644                           fsr2h	equ	0xFDA
  3645                           fsr2l	equ	0xFD9
  3646                           status	equ	0xFD8
  3647                           
  3648 ;; *************** function _enterHighVoltageICSP *****************
  3649 ;; Defined at:
  3650 ;;		line 34 in file "libs/programming.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		None
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3664 ;;      Params:         0       0       0       0
  3665 ;;      Locals:         0       0       0       0
  3666 ;;      Temps:          0       0       0       0
  3667 ;;      Totals:         0       0       0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:   10
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_enterICSP
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text18
  3679  001C06                     __ptext18:
  3680                           	opt stack 0
  3681  001C06                     _enterHighVoltageICSP:
  3682                           	opt stack 17
  3683                           
  3684                           ;incstack = 0
  3685  001C06  0012               	return		;funcret
  3686  001C08                     __end_of_enterHighVoltageICSP:
  3687                           	opt stack 0
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           prodh	equ	0xFF4
  3693                           prodl	equ	0xFF3
  3694                           intcon	equ	0xFF2
  3695                           postinc0	equ	0xFEE
  3696                           wreg	equ	0xFE8
  3697                           indf1	equ	0xFE7
  3698                           postdec1	equ	0xFE5
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           plusw2	equ	0xFDB
  3705                           fsr2h	equ	0xFDA
  3706                           fsr2l	equ	0xFD9
  3707                           status	equ	0xFD8
  3708                           
  3709 ;; *************** function _putrsUSBUSART *****************
  3710 ;; Defined at:
  3711 ;;		line 726 in file "picLibs/usb_device_cdc.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  data            2    0[BANK0 ] PTR const unsigned char 
  3714 ;;		 -> STR_1(12), buttonMessage(18), 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  pData           2    4[BANK0 ] PTR const unsigned char 
  3717 ;;		 -> STR_1(12), buttonMessage(18), 
  3718 ;;  len             1    6[BANK0 ] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3723 ;; Tracked objects:
  3724 ;;		On entry : 3F/0
  3725 ;;		On exit  : 3F/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3728 ;;      Params:         0       2       0       0
  3729 ;;      Locals:         0       3       0       0
  3730 ;;      Temps:          0       2       0       0
  3731 ;;      Totals:         0       7       0       0
  3732 ;;Total ram usage:        7 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:   10
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_APP_DeviceCDCBasicDemoTasks
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text19
  3743  0016C4                     __ptext19:
  3744                           	opt stack 0
  3745  0016C4                     _putrsUSBUSART:
  3746                           	opt stack 19
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;usb_device_cdc.c: 728: uint8_t len;
  3750                           ;usb_device_cdc.c: 729: const const char *pData;
  3751                           ;usb_device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  3752                           
  3753                           ;incstack = 0
  3754  0016C4  94A0               	bcf	4000,2,c	;volatile
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  3758  0016C6  5180               	movf	_cdc_trf_state& (0+255),w,b
  3759  0016C8  E002               	bz	l674
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;usb_device_cdc.c: 756: {
  3763                           ;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  3764  0016CA  84A0               	bsf	4000,2,c	;volatile
  3765                           
  3766                           ;usb_device_cdc.c: 758: return;
  3767  0016CC  0012               	return	
  3768  0016CE                     l674:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;usb_device_cdc.c: 759: }
  3772                           ;usb_device_cdc.c: 765: len = 0;
  3773  0016CE  6BD9               	clrf	putrsUSBUSART@len& (0+255),b
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;usb_device_cdc.c: 766: pData = data;
  3777  0016D0  C0D3  F0D7         	movff	putrsUSBUSART@data,putrsUSBUSART@pData
  3778  0016D4  C0D4  F0D8         	movff	putrsUSBUSART@data+1,putrsUSBUSART@pData+1
  3779  0016D8                     l4696:
  3780                           
  3781                           ;usb_device_cdc.c: 768: {
  3782                           ;usb_device_cdc.c: 769: len++;
  3783  0016D8  0100               	movlb	0	; () banked
  3784  0016DA  2BD9               	incf	putrsUSBUSART@len& (0+255),f,b
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;usb_device_cdc.c: 770: if(len == 255) break;
  3788  0016DC  29D9               	incf	putrsUSBUSART@len& (0+255),w,b
  3789  0016DE  E015               	bz	l4704
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;usb_device_cdc.c: 771: }while(*pData++);
  3793  0016E0  51D7               	movf	putrsUSBUSART@pData& (0+255),w,b
  3794  0016E2  6FD5               	movwf	??_putrsUSBUSART& (0+255),b
  3795  0016E4  51D8               	movf	(putrsUSBUSART@pData+1)& (0+255),w,b
  3796  0016E6  6FD6               	movwf	(??_putrsUSBUSART+1)& (0+255),b
  3797  0016E8  4BD7               	infsnz	putrsUSBUSART@pData& (0+255),f,b
  3798  0016EA  2BD8               	incf	(putrsUSBUSART@pData+1)& (0+255),f,b
  3799  0016EC  C0D5  FFF6         	movff	??_putrsUSBUSART,tblptrl
  3800  0016F0  C0D6  FFF7         	movff	??_putrsUSBUSART+1,tblptrh
  3801  0016F4  6AF8               	clrf	tblptru,c
  3802  0016F6  0E02               	movlw	(high __ramtop+-1)
  3803  0016F8  64F7               	cpfsgt	tblptrh,c
  3804  0016FA  D003               	bra	u3837
  3805  0016FC  0008               	tblrd		*
  3806  0016FE  50F5               	movf	tablat,w,c
  3807  001700  D002               	bra	u3830
  3808  001702                     u3837:
  3809  001702  ECFD  F005         	call	PL20	;call to abstracted procedure
  3810  001706                     u3830:
  3811  001706  0900               	iorlw	0
  3812  001708  E1E7               	bnz	l4696
  3813  00170A                     l4704:
  3814                           
  3815                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  3816  00170A  C0D3  F06D         	movff	putrsUSBUSART@data,_pCDCSrc
  3817  00170E  C0D4  F06E         	movff	putrsUSBUSART@data+1,_pCDCSrc+1
  3818  001712  C0D9  F01B         	movff	putrsUSBUSART@len,_cdc_tx_len
  3819  001716  0100               	movlb	0	; () banked
  3820  001718  6B7C               	clrf	_cdc_mem_type& (0+255),b
  3821                           
  3822                           ; BSR set to: 0
  3823  00171A  0E01               	movlw	1
  3824  00171C  6F80               	movwf	_cdc_trf_state& (0+255),b
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  3828  00171E  84A0               	bsf	4000,2,c	;volatile
  3829                           
  3830                           ; BSR set to: 0
  3831  001720  0C01               	retlw	1	;funcret
  3832  001722                     __end_of_putrsUSBUSART:
  3833                           	opt stack 0
  3834                           tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           prodh	equ	0xFF4
  3839                           prodl	equ	0xFF3
  3840                           intcon	equ	0xFF2
  3841                           postinc0	equ	0xFEE
  3842                           wreg	equ	0xFE8
  3843                           indf1	equ	0xFE7
  3844                           postdec1	equ	0xFE5
  3845                           fsr1h	equ	0xFE2
  3846                           fsr1l	equ	0xFE1
  3847                           indf2	equ	0xFDF
  3848                           postinc2	equ	0xFDE
  3849                           postdec2	equ	0xFDD
  3850                           plusw2	equ	0xFDB
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function _putUSBUSART *****************
  3856 ;; Defined at:
  3857 ;;		line 556 in file "picLibs/usb_device_cdc.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  data            2    0[BANK0 ] PTR unsigned char 
  3860 ;;		 -> writeBuffer(64), 
  3861 ;;  length          1    2[BANK0 ] unsigned char 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 3F/0
  3870 ;;		On exit  : 3F/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3873 ;;      Params:         0       3       0       0
  3874 ;;      Locals:         0       0       0       0
  3875 ;;      Temps:          0       0       0       0
  3876 ;;      Totals:         0       3       0       0
  3877 ;;Total ram usage:        3 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:   10
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_APP_DeviceCDCBasicDemoTasks
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text20
  3888  001B50                     __ptext20:
  3889                           	opt stack 0
  3890  001B50                     _putUSBUSART:
  3891                           	opt stack 19
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;incstack = 0
  3898  001B50  94A0               	bcf	4000,2,c	;volatile
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  3902  001B52  5180               	movf	_cdc_trf_state& (0+255),w,b
  3903  001B54  E109               	bnz	l4834
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;usb_device_cdc.c: 583: {
  3907                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3908  001B56  C0D3  F06D         	movff	putUSBUSART@data,_pCDCSrc
  3909  001B5A  C0D4  F06E         	movff	putUSBUSART@data+1,_pCDCSrc+1
  3910                           
  3911                           ; BSR set to: 0
  3912  001B5E  C0D5  F01B         	movff	putUSBUSART@length,_cdc_tx_len
  3913                           
  3914                           ; BSR set to: 0
  3915  001B62  0E01               	movlw	1
  3916  001B64  6F7C               	movwf	_cdc_mem_type& (0+255),b
  3917                           
  3918                           ; BSR set to: 0
  3919  001B66  6F80               	movwf	_cdc_trf_state& (0+255),b
  3920  001B68                     l4834:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;usb_device_cdc.c: 585: }
  3924                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  3925  001B68  84A0               	bsf	4000,2,c	;volatile
  3926                           
  3927                           ; BSR set to: 0
  3928  001B6A  0012               	return		;funcret
  3929  001B6C                     __end_of_putUSBUSART:
  3930                           	opt stack 0
  3931                           tblptru	equ	0xFF8
  3932                           tblptrh	equ	0xFF7
  3933                           tblptrl	equ	0xFF6
  3934                           tablat	equ	0xFF5
  3935                           prodh	equ	0xFF4
  3936                           prodl	equ	0xFF3
  3937                           intcon	equ	0xFF2
  3938                           postinc0	equ	0xFEE
  3939                           wreg	equ	0xFE8
  3940                           indf1	equ	0xFE7
  3941                           postdec1	equ	0xFE5
  3942                           fsr1h	equ	0xFE2
  3943                           fsr1l	equ	0xFE1
  3944                           indf2	equ	0xFDF
  3945                           postinc2	equ	0xFDE
  3946                           postdec2	equ	0xFDD
  3947                           plusw2	equ	0xFDB
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function _getsUSBUSART *****************
  3953 ;; Defined at:
  3954 ;;		line 485 in file "picLibs/usb_device_cdc.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  buffer          1    9[BANK0 ] PTR unsigned char 
  3957 ;;		 -> readBuffer(64), 
  3958 ;;  len             1   10[BANK0 ] unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      unsigned char 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 3F/0
  3967 ;;		On exit  : 3F/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3970 ;;      Params:         0       2       0       0
  3971 ;;      Locals:         0       0       0       0
  3972 ;;      Temps:          0       1       0       0
  3973 ;;      Totals:         0       3       0       0
  3974 ;;Total ram usage:        3 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:   11
  3977 ;; This function calls:
  3978 ;;		_USBTransferOnePacket
  3979 ;; This function is called by:
  3980 ;;		_APP_DeviceCDCBasicDemoTasks
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text21
  3985  001586                     __ptext21:
  3986                           	opt stack 0
  3987  001586                     _getsUSBUSART:
  3988                           	opt stack 18
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;incstack = 0
  3995  001586  6A1C               	clrf	_cdc_rx_len,c
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  3999  001588  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  4000  00158A  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  4001  00158C  E006               	bz	l4720
  4002                           
  4003                           ; BSR set to: 0
  4004  00158E  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
  4005  001592  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  4006  001596  BEDF               	btfsc	indf2,7,c
  4007  001598  D024               	goto	l4734
  4008  00159A                     l4720:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;usb_device_cdc.c: 490: {
  4012                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  4013  00159A  D825               	call	PL84	;call to abstracted procedure
  4014  00159C  51DD               	movf	getsUSBUSART@len& (0+255),w,b
  4015  00159E  5CDE               	subwf	postinc2,w,c
  4016  0015A0  E203               	bc	l4724
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  4020  0015A2  D821               	call	PL84	;call to abstracted procedure
  4021  0015A4  50DF               	movf	indf2,w,c
  4022  0015A6  6FDD               	movwf	getsUSBUSART@len& (0+255),b
  4023  0015A8                     l4724:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  4027  0015A8  6A1C               	clrf	_cdc_rx_len,c
  4028  0015AA  D009               	goto	l4730
  4029  0015AC                     l4726:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  4033  0015AC  0E80               	movlw	128
  4034  0015AE  241C               	addwf	_cdc_rx_len,w,c
  4035  0015B0  ECD4  F006         	call	PL124	;call to abstracted procedure
  4036  0015B4  51DC               	movf	getsUSBUSART@buffer& (0+255),w,b
  4037  0015B6  241C               	addwf	_cdc_rx_len,w,c
  4038  0015B8  ECCF  F006         	call	PL122	;call to abstracted procedure
  4039                           
  4040                           ; BSR set to: 0
  4041  0015BC  2A1C               	incf	_cdc_rx_len,f,c
  4042  0015BE                     l4730:
  4043                           
  4044                           ; BSR set to: 0
  4045  0015BE  51DD               	movf	getsUSBUSART@len& (0+255),w,b
  4046  0015C0  5C1C               	subwf	_cdc_rx_len,w,c
  4047  0015C2  E3F4               	bnc	l4726
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  4051  0015C4  0E00               	movlw	0
  4052  0015C6  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  4053  0015C8  0E80               	movlw	128
  4054  0015CA  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  4055  0015CC  0E02               	movlw	2
  4056  0015CE  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4057  0015D0  0E40               	movlw	64
  4058  0015D2  6FD6               	movwf	USBTransferOnePacket@len& (0+255),b
  4059  0015D4  0E02               	movlw	2
  4060  0015D6  EC19  F006         	call	_USBTransferOnePacket
  4061  0015DA  C0D3  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  4062  0015DE  C0D4  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  4063  0015E2                     l4734:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;usb_device_cdc.c: 510: }
  4067                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  4068  0015E2  501C               	movf	_cdc_rx_len,w,c
  4069                           
  4070                           ; BSR set to: 0
  4071  0015E4  0012               	return		;funcret
  4072  0015E6                     __end_of_getsUSBUSART:
  4073                           	opt stack 0
  4074  0015E6                     PL84:
  4075                           	opt stack 18
  4076  0015E6  EE20 F001          	lfsr	2,1
  4077  0015EA  5178               	movf	_CDCDataOutHandle& (0+255),w,b
  4078  0015EC  26D9               	addwf	fsr2l,f,c
  4079  0015EE  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  4080  0015F0  22DA               	addwfc	fsr2h,f,c
  4081  0015F2  0012               	return	
  4082  0015F4                     __end_ofPL84:
  4083                           	opt stack 0
  4084                           tblptru	equ	0xFF8
  4085                           tblptrh	equ	0xFF7
  4086                           tblptrl	equ	0xFF6
  4087                           tablat	equ	0xFF5
  4088                           prodh	equ	0xFF4
  4089                           prodl	equ	0xFF3
  4090                           intcon	equ	0xFF2
  4091                           postinc0	equ	0xFEE
  4092                           wreg	equ	0xFE8
  4093                           indf1	equ	0xFE7
  4094                           postdec1	equ	0xFE5
  4095                           fsr1h	equ	0xFE2
  4096                           fsr1l	equ	0xFE1
  4097                           indf2	equ	0xFDF
  4098                           postinc2	equ	0xFDE
  4099                           postdec2	equ	0xFDD
  4100                           plusw2	equ	0xFDB
  4101                           fsr2h	equ	0xFDA
  4102                           fsr2l	equ	0xFD9
  4103                           status	equ	0xFD8
  4104                           
  4105 ;; *************** function _CDCTxService *****************
  4106 ;; Defined at:
  4107 ;;		line 836 in file "picLibs/usb_device_cdc.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
  4112 ;;  i               1    9[BANK0 ] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 3E/0
  4119 ;;		On exit  : 3F/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4122 ;;      Params:         0       0       0       0
  4123 ;;      Locals:         0       2       0       0
  4124 ;;      Temps:          0       0       0       0
  4125 ;;      Totals:         0       2       0       0
  4126 ;;Total ram usage:        2 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:   11
  4129 ;; This function calls:
  4130 ;;		_USBTransferOnePacket
  4131 ;; This function is called by:
  4132 ;;		_APP_DeviceCDCBasicDemoTasks
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text22
  4137  0008B8                     __ptext22:
  4138                           	opt stack 0
  4139  0008B8                     _CDCTxService:
  4140                           	opt stack 18
  4141                           
  4142                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  4143                           ;usb_device_cdc.c: 839: uint8_t i;
  4144                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;incstack = 0
  4148  0008B8  94A0               	bcf	4000,2,c	;volatile
  4149                           
  4150                           ;usb_device_cdc.c: 843: {};
  4151                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  4152  0008BA  0100               	movlb	0	; () banked
  4153  0008BC  5176               	movf	_CDCDataInHandle& (0+255),w,b
  4154  0008BE  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  4155  0008C0  E008               	bz	l4844
  4156                           
  4157                           ; BSR set to: 0
  4158  0008C2  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
  4159  0008C6  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  4160  0008CA  AEDF               	btfss	indf2,7,c
  4161  0008CC  D002               	goto	l4844
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;usb_device_cdc.c: 846: {
  4165                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  4166  0008CE  84A0               	bsf	4000,2,c	;volatile
  4167                           
  4168                           ;usb_device_cdc.c: 848: return;
  4169  0008D0  0012               	return	
  4170  0008D2                     l4844:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;usb_device_cdc.c: 849: }
  4174                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  4175  0008D2  0E03               	movlw	3
  4176  0008D4  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  4177  0008D6  E101               	bnz	l4848
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  4181  0008D8  6B80               	clrf	_cdc_trf_state& (0+255),b
  4182  0008DA                     l4848:
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  4186  0008DA  5180               	movf	_cdc_trf_state& (0+255),w,b
  4187  0008DC  E102               	bnz	l4852
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;usb_device_cdc.c: 863: {
  4191                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  4192  0008DE  84A0               	bsf	4000,2,c	;volatile
  4193                           
  4194                           ;usb_device_cdc.c: 865: return;
  4195  0008E0  0012               	return	
  4196  0008E2                     l4852:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;usb_device_cdc.c: 866: }
  4200                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  4201  0008E2  0E02               	movlw	2
  4202  0008E4  1980               	xorwf	_cdc_trf_state& (0+255),w,b
  4203  0008E6  E10D               	bnz	l4858
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;usb_device_cdc.c: 872: {
  4207                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  4208  0008E8  0E01               	movlw	1
  4209  0008EA  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  4210  0008EC  0E00               	movlw	0
  4211  0008EE  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  4212  0008F0  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4213  0008F2  6FD6               	movwf	USBTransferOnePacket@len& (0+255),b
  4214  0008F4  0E02               	movlw	2
  4215  0008F6  EC19  F006         	call	_USBTransferOnePacket
  4216  0008FA  D856               	call	PL126	;call to abstracted procedure
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  4220  0008FC  0E03               	movlw	3
  4221  0008FE  6F80               	movwf	_cdc_trf_state& (0+255),b
  4222                           
  4223                           ;usb_device_cdc.c: 876: }
  4224  000900  D03E               	goto	l4902
  4225  000902                     l4858:
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  4229  000902  0580               	decf	_cdc_trf_state& (0+255),w,b
  4230  000904  E13C               	bnz	l4902
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;usb_device_cdc.c: 878: {
  4234                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  4235  000906  0E40               	movlw	64
  4236  000908  641B               	cpfsgt	_cdc_tx_len,c
  4237  00090A  D002               	goto	l688
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  4241  00090C  6FDD               	movwf	CDCTxService@byte_to_send& (0+255),b
  4242  00090E  D002               	goto	l4864
  4243  000910                     l688:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;usb_device_cdc.c: 884: else
  4247                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  4248  000910  C01B  F0DD         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  4249  000914                     l4864:
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  4253  000914  51DD               	movf	CDCTxService@byte_to_send& (0+255),w,b
  4254  000916  5E1B               	subwf	_cdc_tx_len,f,c
  4255                           
  4256                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  4257  000918  0E40               	movlw	64
  4258  00091A  6F6A               	movwf	_pCDCDst& (0+255),b
  4259  00091C  0E02               	movlw	2
  4260  00091E  6F6B               	movwf	(_pCDCDst+1)& (0+255),b
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;usb_device_cdc.c: 894: i = byte_to_send;
  4264  000920  C0DD  F0DC         	movff	CDCTxService@byte_to_send,CDCTxService@i
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  4268  000924  517C               	movf	_cdc_mem_type& (0+255),w,b
  4269  000926  E00A               	bz	l4880
  4270  000928  D015               	goto	l4890
  4271  00092A                     l4872:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;usb_device_cdc.c: 898: {
  4275                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  4276  00092A  D82B               	call	PL48	;call to abstracted procedure
  4277  00092C  64F7               	cpfsgt	tblptrh,c
  4278  00092E  D003               	bra	u4017
  4279  000930  0008               	tblrd		*
  4280  000932  50F5               	movf	tablat,w,c
  4281  000934  D002               	bra	u4010
  4282  000936                     u4017:
  4283  000936  ECFD  F005         	call	PL20	;call to abstracted procedure
  4284  00093A                     u4010:
  4285                           
  4286                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;usb_device_cdc.c: 902: i--;
  4293  00093A  D82E               	call	PL78	;call to abstracted procedure
  4294  00093C                     l4880:
  4295                           
  4296                           ; BSR set to: 0
  4297  00093C  51DC               	movf	CDCTxService@i& (0+255),w,b
  4298  00093E  E00C               	bz	l4892
  4299  000940  D7F4               	goto	l4872
  4300  000942                     l4882:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;usb_device_cdc.c: 908: {
  4304                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  4305  000942  D81F               	call	PL48	;call to abstracted procedure
  4306  000944  64F7               	cpfsgt	tblptrh,c
  4307  000946  D003               	bra	u4037
  4308  000948  0008               	tblrd		*
  4309  00094A  50F5               	movf	tablat,w,c
  4310  00094C  D002               	bra	u4030
  4311  00094E                     u4037:
  4312  00094E  ECFD  F005         	call	PL20	;call to abstracted procedure
  4313  000952                     u4030:
  4314                           
  4315                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;usb_device_cdc.c: 912: i--;
  4322  000952  D822               	call	PL78	;call to abstracted procedure
  4323  000954                     l4890:
  4324                           
  4325                           ; BSR set to: 0
  4326  000954  51DC               	movf	CDCTxService@i& (0+255),w,b
  4327  000956  E1F5               	bnz	l4882
  4328  000958                     l4892:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;usb_device_cdc.c: 913: }
  4332                           ;usb_device_cdc.c: 914: }
  4333                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  4334  000958  501B               	movf	_cdc_tx_len,w,c
  4335  00095A  E106               	bnz	l4900
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;usb_device_cdc.c: 921: {
  4339                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  4340  00095C  0E40               	movlw	64
  4341  00095E  19DD               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  4345  000960  0E02               	movlw	2
  4346  000962  A4D8               	btfss	status,2,c
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;usb_device_cdc.c: 924: else
  4350                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  4351  000964  0E03               	movlw	3
  4352  000966  6F80               	movwf	_cdc_trf_state& (0+255),b
  4353  000968                     l4900:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;usb_device_cdc.c: 926: }
  4357                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4358  000968  0E01               	movlw	1
  4359  00096A  6FD3               	movwf	USBTransferOnePacket@dir& (0+255),b
  4360  00096C  0E40               	movlw	64
  4361  00096E  6FD4               	movwf	USBTransferOnePacket@data& (0+255),b
  4362  000970  0E02               	movlw	2
  4363  000972  6FD5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4364  000974  C0DD  F0D6         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  4365  000978  EC19  F006         	call	_USBTransferOnePacket
  4366  00097C  D815               	call	PL126	;call to abstracted procedure
  4367  00097E                     l4902:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;usb_device_cdc.c: 929: }
  4371                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  4372  00097E  84A0               	bsf	4000,2,c	;volatile
  4373                           
  4374                           ; BSR set to: 0
  4375  000980  0012               	return		;funcret
  4376  000982                     __end_of_CDCTxService:
  4377                           	opt stack 0
  4378  000982                     PL48:
  4379                           	opt stack 18
  4380  000982  C06D  FFF6         	movff	_pCDCSrc,tblptrl
  4381  000986  C06E  FFF7         	movff	_pCDCSrc+1,tblptrh
  4382  00098A  6AF8               	clrf	tblptru,c
  4383  00098C  C06A  FFD9         	movff	_pCDCDst,fsr2l
  4384  000990  C06B  FFDA         	movff	_pCDCDst+1,fsr2h
  4385  000994  0E02               	movlw	(high __ramtop+-1)
  4386  000996  0012               	return	
  4387  000998                     __end_ofPL48:
  4388                           	opt stack 0
  4389  000998                     PL78:
  4390                           	opt stack 18
  4391  000998  6EDF               	movwf	indf2,c
  4392  00099A  0100               	movlb	0	; () banked
  4393  00099C  4B6A               	infsnz	_pCDCDst& (0+255),f,b
  4394  00099E  2B6B               	incf	(_pCDCDst+1)& (0+255),f,b
  4395  0009A0  4B6D               	infsnz	_pCDCSrc& (0+255),f,b
  4396  0009A2  2B6E               	incf	(_pCDCSrc+1)& (0+255),f,b
  4397  0009A4  07DC               	decf	CDCTxService@i& (0+255),f,b
  4398  0009A6  0012               	return	
  4399  0009A8                     __end_ofPL78:
  4400                           	opt stack 0
  4401  0009A8                     PL126:
  4402                           	opt stack 18
  4403  0009A8  C0D3  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  4404  0009AC  C0D4  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  4405  0009B0  0012               	return	
  4406  0009B2                     __end_ofPL126:
  4407                           	opt stack 0
  4408                           tblptru	equ	0xFF8
  4409                           tblptrh	equ	0xFF7
  4410                           tblptrl	equ	0xFF6
  4411                           tablat	equ	0xFF5
  4412                           prodh	equ	0xFF4
  4413                           prodl	equ	0xFF3
  4414                           intcon	equ	0xFF2
  4415                           postinc0	equ	0xFEE
  4416                           wreg	equ	0xFE8
  4417                           indf1	equ	0xFE7
  4418                           postdec1	equ	0xFE5
  4419                           fsr1h	equ	0xFE2
  4420                           fsr1l	equ	0xFE1
  4421                           indf2	equ	0xFDF
  4422                           postinc2	equ	0xFDE
  4423                           postdec2	equ	0xFDD
  4424                           plusw2	equ	0xFDB
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8
  4428                           
  4429 ;; *************** function _USBTransferOnePacket *****************
  4430 ;; Defined at:
  4431 ;;		line 995 in file "picLibs/usb_device.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  ep              1    wreg     unsigned char 
  4434 ;;  dir             1    0[BANK0 ] unsigned char 
  4435 ;;  data            2    1[BANK0 ] PTR unsigned char 
  4436 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4437 ;;  len             1    3[BANK0 ] unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  ep              1    6[BANK0 ] unsigned char 
  4440 ;;  handle          2    7[BANK0 ] PTR volatile struct __BD
  4441 ;;		 -> RAM(767), NULL(0), BDT(48), 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  2    0[BANK0 ] PTR void 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4446 ;; Tracked objects:
  4447 ;;		On entry : 3F/0
  4448 ;;		On exit  : 3F/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4451 ;;      Params:         0       4       0       0
  4452 ;;      Locals:         0       3       0       0
  4453 ;;      Temps:          0       2       0       0
  4454 ;;      Totals:         0       9       0       0
  4455 ;;Total ram usage:        9 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:   10
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_getsUSBUSART
  4462 ;;		_CDCTxService
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text23
  4467  000C32                     __ptext23:
  4468                           	opt stack 0
  4469  000C32                     _USBTransferOnePacket:
  4470                           	opt stack 18
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;incstack = 0
  4474                           ;USBTransferOnePacket@ep stored from wreg
  4475  000C32  6FD9               	movwf	USBTransferOnePacket@ep& (0+255),b
  4476                           
  4477                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4478                           ;usb_device.c: 1000: if(dir != 0)
  4479  000C34  0100               	movlb	0	; () banked
  4480  000C36  51D3               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4481  000C38  E004               	bz	l4574
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;usb_device.c: 1001: {
  4485                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4486  000C3A  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4487  000C3C  EC7F  F007         	call	PL94	;call to abstracted procedure
  4488  000C40  D003               	goto	L2
  4489  000C42                     l4574:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;usb_device.c: 1005: else
  4493                           ;usb_device.c: 1006: {
  4494                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4495  000C42  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4496  000C44  EC88  F007         	call	PL104	;call to abstracted procedure
  4497  000C48                     L2:
  4498  000C48  6ED9               	movwf	fsr2l,c
  4499  000C4A  6ADA               	clrf	fsr2h,c
  4500  000C4C  CFDE F0DA          	movff	postinc2,USBTransferOnePacket@handle
  4501  000C50  CFDD F0DB          	movff	postdec2,USBTransferOnePacket@handle+1
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;usb_device.c: 1009: }
  4505                           ;usb_device.c: 1013: if(handle == 0)
  4506  000C54  51DA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4507  000C56  11DB               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4508  000C58  E103               	bnz	l4580
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;usb_device.c: 1014: {
  4512                           ;usb_device.c: 1015: return 0;
  4513  000C5A  6BD3               	clrf	?_USBTransferOnePacket& (0+255),b
  4514  000C5C  6BD4               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  4515  000C5E  0012               	return	
  4516  000C60                     l4580:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;usb_device.c: 1016: }
  4520                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  4521  000C60  EE20 F002          	lfsr	2,2
  4522  000C64  D842               	call	PL120	;call to abstracted procedure
  4523  000C66  C0D4  FFDE         	movff	USBTransferOnePacket@data,postinc2
  4524  000C6A  C0D5  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  4525                           
  4526                           ;usb_device.c: 1030: handle->CNT = len;
  4527  000C6E  EE20 F001          	lfsr	2,1
  4528  000C72  D83B               	call	PL120	;call to abstracted procedure
  4529  000C74  C0D6  FFDF         	movff	USBTransferOnePacket@len,indf2
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4533  000C78  D833               	call	PL106	;call to abstracted procedure
  4534  000C7A  0E40               	movlw	64
  4535  000C7C  16DF               	andwf	indf2,f,c
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4539  000C7E  D830               	call	PL106	;call to abstracted procedure
  4540  000C80  0E00               	movlw	0
  4541  000C82  86DB               	bsf	plusw2,3,c
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4545  000C84  D82D               	call	PL106	;call to abstracted procedure
  4546  000C86  8EDB               	bsf	plusw2,7,c
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;usb_device.c: 1036: if(dir != 0)
  4550  000C88  51D3               	movf	USBTransferOnePacket@dir& (0+255),w,b
  4551  000C8A  E005               	bz	l4592
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;usb_device.c: 1037: {
  4555                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4556  000C8C  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4557  000C8E  D812               	call	PL30	;call to abstracted procedure
  4558  000C90  D81D               	call	PL54	;call to abstracted procedure
  4559  000C92  0F0F               	addlw	low _pBDTEntryIn
  4560  000C94  D004               	goto	L3
  4561  000C96                     l4592:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;usb_device.c: 1041: else
  4565                           ;usb_device.c: 1042: {
  4566                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4567  000C96  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4568  000C98  D813               	call	PL34	;call to abstracted procedure
  4569  000C9A  D818               	call	PL54	;call to abstracted procedure
  4570  000C9C  0F60               	addlw	low _pBDTEntryOut
  4571  000C9E                     L3:
  4572  000C9E  6ED9               	movwf	fsr2l,c
  4573  000CA0  6ADA               	clrf	fsr2h,c
  4574  000CA2  C0D7  FFDE         	movff	??_USBTransferOnePacket,postinc2
  4575  000CA6  C0D8  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;usb_device.c: 1045: }
  4579                           ;usb_device.c: 1046: return (void*)handle;
  4580  000CAA  C0DA  F0D3         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  4581  000CAE  C0DB  F0D4         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  4582                           
  4583                           ; BSR set to: 0
  4584  000CB2  0012               	return		;funcret
  4585  000CB4                     __end_of_USBTransferOnePacket:
  4586                           	opt stack 0
  4587  000CB4                     PL30:
  4588                           	opt stack 19
  4589  000CB4  0D02               	mullw	2
  4590  000CB6  50F3               	movf	prodl,w,c
  4591  000CB8  0F0F               	addlw	low _pBDTEntryIn
  4592  000CBA  6ED9               	movwf	fsr2l,c
  4593  000CBC  6ADA               	clrf	fsr2h,c
  4594  000CBE  0012               	return	
  4595  000CC0                     __end_ofPL30:
  4596                           	opt stack 0
  4597  000CC0                     PL34:
  4598                           	opt stack 19
  4599  000CC0  0D02               	mullw	2
  4600  000CC2  50F3               	movf	prodl,w,c
  4601  000CC4  0F60               	addlw	low _pBDTEntryOut
  4602  000CC6  6ED9               	movwf	fsr2l,c
  4603  000CC8  6ADA               	clrf	fsr2h,c
  4604  000CCA  0012               	return	
  4605  000CCC                     __end_ofPL34:
  4606                           	opt stack 0
  4607  000CCC                     PL54:
  4608                           	opt stack 18
  4609  000CCC  CFDE F0D7          	movff	postinc2,??_USBTransferOnePacket
  4610  000CD0  CFDD F0D8          	movff	postdec2,??_USBTransferOnePacket+1
  4611  000CD4  0E04               	movlw	4
  4612  000CD6  1BD7               	xorwf	??_USBTransferOnePacket& (0+255),f,b
  4613  000CD8  51D9               	movf	USBTransferOnePacket@ep& (0+255),w,b
  4614  000CDA  0D02               	mullw	2
  4615  000CDC  50F3               	movf	prodl,w,c
  4616  000CDE  0012               	return	
  4617  000CE0                     __end_ofPL54:
  4618                           	opt stack 0
  4619  000CE0                     PL106:
  4620                           	opt stack 18
  4621  000CE0  C0DA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  4622  000CE4  C0DB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  4623  000CE8  0012               	return	
  4624  000CEA                     __end_ofPL106:
  4625                           	opt stack 0
  4626  000CEA                     PL120:
  4627                           	opt stack 18
  4628  000CEA  51DA               	movf	USBTransferOnePacket@handle& (0+255),w,b
  4629  000CEC  26D9               	addwf	fsr2l,f,c
  4630  000CEE  51DB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  4631  000CF0  22DA               	addwfc	fsr2h,f,c
  4632  000CF2  0012               	return	
  4633  000CF4                     __end_ofPL120:
  4634                           	opt stack 0
  4635                           tblptru	equ	0xFF8
  4636                           tblptrh	equ	0xFF7
  4637                           tblptrl	equ	0xFF6
  4638                           tablat	equ	0xFF5
  4639                           prodh	equ	0xFF4
  4640                           prodl	equ	0xFF3
  4641                           intcon	equ	0xFF2
  4642                           postinc0	equ	0xFEE
  4643                           wreg	equ	0xFE8
  4644                           indf1	equ	0xFE7
  4645                           postdec1	equ	0xFE5
  4646                           fsr1h	equ	0xFE2
  4647                           fsr1l	equ	0xFE1
  4648                           indf2	equ	0xFDF
  4649                           postinc2	equ	0xFDE
  4650                           postdec2	equ	0xFDD
  4651                           plusw2	equ	0xFDB
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function _BUTTON_IsPressed *****************
  4657 ;; Defined at:
  4658 ;;		line 55 in file "picLibs/buttons.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  button          1    wreg     enum E3304
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  button          1    0[BANK0 ] enum E3304
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      unsigned char 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 3F/0
  4669 ;;		On exit  : 3F/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4672 ;;      Params:         0       0       0       0
  4673 ;;      Locals:         0       1       0       0
  4674 ;;      Temps:          0       0       0       0
  4675 ;;      Totals:         0       1       0       0
  4676 ;;Total ram usage:        1 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:   10
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_APP_DeviceCDCBasicDemoTasks
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text24
  4687  001B88                     __ptext24:
  4688                           	opt stack 0
  4689  001B88                     _BUTTON_IsPressed:
  4690                           	opt stack 19
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;incstack = 0
  4694                           ;BUTTON_IsPressed@button stored from wreg
  4695  001B88  6FD3               	movwf	BUTTON_IsPressed@button& (0+255),b
  4696                           
  4697                           ;buttons.c: 57: switch(button)
  4698  001B8A  D003               	goto	l4682
  4699  001B8C                     l87:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4703  001B8C  A680               	btfss	3968,3,c	;volatile
  4704  001B8E  0C01               	retlw	1
  4705  001B90  0C00               	retlw	0
  4706  001B92                     l4682:
  4707  001B92  0100               	movlb	0	; () banked
  4708  001B94  51D3               	movf	BUTTON_IsPressed@button& (0+255),w,b
  4709                           
  4710                           ; Switch size 1, requested type "space"
  4711                           ; Number of cases is 2, Range of values is 0 to 1
  4712                           ; switch strategies available:
  4713                           ; Name         Instructions Cycles
  4714                           ; simple_byte            7     4 (average)
  4715                           ;	Chosen strategy is simple_byte
  4716  001B96  B4D8               	btfsc	status,2,c
  4717  001B98  0C00               	retlw	0
  4718  001B9A  0A01               	xorlw	1	; case 1
  4719  001B9C  A4D8               	btfss	status,2,c
  4720  001B9E  0C00               	retlw	0
  4721  001BA0  D7F5               	goto	l87
  4722  001BA2                     __end_of_BUTTON_IsPressed:
  4723                           	opt stack 0
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           prodh	equ	0xFF4
  4729                           prodl	equ	0xFF3
  4730                           intcon	equ	0xFF2
  4731                           postinc0	equ	0xFEE
  4732                           wreg	equ	0xFE8
  4733                           indf1	equ	0xFE7
  4734                           postdec1	equ	0xFE5
  4735                           fsr1h	equ	0xFE2
  4736                           fsr1l	equ	0xFE1
  4737                           indf2	equ	0xFDF
  4738                           postinc2	equ	0xFDE
  4739                           postdec2	equ	0xFDD
  4740                           plusw2	equ	0xFDB
  4741                           fsr2h	equ	0xFDA
  4742                           fsr2l	equ	0xFD9
  4743                           status	equ	0xFD8
  4744                           
  4745 ;; *************** function _SYS_InterruptHigh *****************
  4746 ;; Defined at:
  4747 ;;		line 86 in file "picLibs/system.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4761 ;;      Params:         0       0       0       0
  4762 ;;      Locals:         0       0       0       0
  4763 ;;      Temps:         10       0       0       0
  4764 ;;      Totals:        10       0       0       0
  4765 ;;Total ram usage:       10 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    9
  4768 ;; This function calls:
  4769 ;;		_USBDeviceTasks
  4770 ;; This function is called by:
  4771 ;;		Interrupt level 2
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	intcode
  4776  000008                     __pintcode:
  4777                           	opt stack 0
  4778  000008                     _SYS_InterruptHigh:
  4779                           	opt stack 16
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;incstack = 0
  4783  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4784  00000A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh
  4785  00000E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+1
  4786  000012  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+2
  4787  000016  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+3
  4788  00001A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+4
  4789  00001E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+5
  4790  000022  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+6
  4791  000026  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+7
  4792  00002A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+8
  4793  00002E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+9
  4794                           
  4795                           ;system.c: 89: USBDeviceTasks();
  4796  000032  ECDC  F003         	call	_USBDeviceTasks	;wreg free
  4797  000036  C051  FFF5         	movff	??_SYS_InterruptHigh+9,tablat
  4798  00003A  C050  FFF8         	movff	??_SYS_InterruptHigh+8,tblptru
  4799  00003E  C04F  FFF7         	movff	??_SYS_InterruptHigh+7,tblptrh
  4800  000042  C04E  FFF6         	movff	??_SYS_InterruptHigh+6,tblptrl
  4801  000046  C04D  FFF4         	movff	??_SYS_InterruptHigh+5,prodh
  4802  00004A  C04C  FFF3         	movff	??_SYS_InterruptHigh+4,prodl
  4803  00004E  C04B  FFDA         	movff	??_SYS_InterruptHigh+3,fsr2h
  4804  000052  C04A  FFD9         	movff	??_SYS_InterruptHigh+2,fsr2l
  4805  000056  C049  FFE2         	movff	??_SYS_InterruptHigh+1,fsr1h
  4806  00005A  C048  FFE1         	movff	??_SYS_InterruptHigh,fsr1l
  4807  00005E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4808  000060  0011               	retfie		f
  4809  000062                     __end_of_SYS_InterruptHigh:
  4810                           	opt stack 0
  4811                           tblptru	equ	0xFF8
  4812                           tblptrh	equ	0xFF7
  4813                           tblptrl	equ	0xFF6
  4814                           tablat	equ	0xFF5
  4815                           prodh	equ	0xFF4
  4816                           prodl	equ	0xFF3
  4817                           intcon	equ	0xFF2
  4818                           postinc0	equ	0xFEE
  4819                           wreg	equ	0xFE8
  4820                           indf1	equ	0xFE7
  4821                           postdec1	equ	0xFE5
  4822                           fsr1h	equ	0xFE2
  4823                           fsr1l	equ	0xFE1
  4824                           indf2	equ	0xFDF
  4825                           postinc2	equ	0xFDE
  4826                           postdec2	equ	0xFDD
  4827                           plusw2	equ	0xFDB
  4828                           fsr2h	equ	0xFDA
  4829                           fsr2l	equ	0xFD9
  4830                           status	equ	0xFD8
  4831                           
  4832 ;; *************** function _USBDeviceTasks *****************
  4833 ;; Defined at:
  4834 ;;		line 477 in file "picLibs/usb_device.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;		None
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;  i               1   29[COMRAM] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4848 ;;      Params:         0       0       0       0
  4849 ;;      Locals:         1       0       0       0
  4850 ;;      Temps:          0       0       0       0
  4851 ;;      Totals:         1       0       0       0
  4852 ;;Total ram usage:        1 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    8
  4855 ;; This function calls:
  4856 ;;		_USBCtrlEPAllowStatusStage
  4857 ;;		_USBCtrlEPService
  4858 ;;		_USBIncrement1msInternalTimers
  4859 ;;		_USBStallHandler
  4860 ;;		_USBSuspend
  4861 ;;		_USBWakeFromSuspend
  4862 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4863 ;;		i2_USBDeviceInit
  4864 ;; This function is called by:
  4865 ;;		_SYS_InterruptHigh
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text26
  4870  0007B8                     __ptext26:
  4871                           	opt stack 0
  4872  0007B8                     _USBDeviceTasks:
  4873                           	opt stack 16
  4874                           
  4875                           ;usb_device.c: 479: uint8_t i;
  4876                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4877                           
  4878                           ;incstack = 0
  4879  0007B8  0100               	movlb	0	; () banked
  4880  0007BA  0581               	decf	_USBDeviceState& (0+255),w,b	;volatile
  4881  0007BC  E107               	bnz	i2l4296
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;usb_device.c: 591: {
  4885                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4886  0007BE  BA64               	btfsc	3940,5,c	;volatile
  4887  0007C0  D005               	goto	i2l4296
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;usb_device.c: 602: {
  4891                           ;usb_device.c: 608: {UIR = 0;};
  4892  0007C2  6A62               	clrf	3938,c	;volatile
  4893                           
  4894                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4895  0007C4  8060               	bsf	3936,0,c	;volatile
  4896                           
  4897                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4898  0007C6  8860               	bsf	3936,4,c	;volatile
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4902  0007C8  0E02               	movlw	2
  4903  0007CA  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4904  0007CC                     i2l4296:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;usb_device.c: 617: }
  4908                           ;usb_device.c: 618: }
  4909                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4910  0007CC  B462               	btfsc	3938,2,c	;volatile
  4911                           
  4912                           ; BSR set to: 0
  4913  0007CE  A460               	btfss	3936,2,c	;volatile
  4914  0007D0  D003               	goto	i2l4304
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;usb_device.c: 635: {
  4918                           ;usb_device.c: 636: (UIR &= 0xFB);
  4919  0007D2  9462               	bcf	3938,2,c	;volatile
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;usb_device.c: 640: USBWakeFromSuspend();
  4923  0007D4  EC6B  F00D         	call	_USBWakeFromSuspend	;wreg free
  4924  0007D8                     i2l4304:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;usb_device.c: 642: }
  4928                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4929  0007D8  A264               	btfss	3940,1,c	;volatile
  4930  0007DA  D002               	goto	i2l335
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;usb_device.c: 648: {
  4934                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  4935  0007DC  94A1               	bcf	4001,2,c	;volatile
  4936                           
  4937                           ;usb_device.c: 650: return;
  4938  0007DE  0012               	return	
  4939  0007E0                     i2l335:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;usb_device.c: 651: }
  4943                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4944  0007E0  B062               	btfsc	3938,0,c	;volatile
  4945                           
  4946                           ; BSR set to: 0
  4947  0007E2  A060               	btfss	3936,0,c	;volatile
  4948  0007E4  D006               	goto	i2l4318
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;usb_device.c: 664: {
  4952                           ;usb_device.c: 665: USBDeviceInit();
  4953  0007E6  ECD9  F004         	call	i2_USBDeviceInit	;wreg free
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4957  0007EA  84A0               	bsf	4000,2,c	;volatile
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4961  0007EC  0E04               	movlw	4
  4962  0007EE  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;usb_device.c: 681: (UIR &= 0xFE);
  4966  0007F0  9062               	bcf	3938,0,c	;volatile
  4967  0007F2                     i2l4318:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;usb_device.c: 682: }
  4971                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4972  0007F2  B862               	btfsc	3938,4,c	;volatile
  4973                           
  4974                           ; BSR set to: 0
  4975  0007F4  A860               	btfss	3936,4,c	;volatile
  4976  0007F6  D002               	goto	i2l4324
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;usb_device.c: 688: {
  4980                           ;usb_device.c: 694: USBSuspend();
  4981  0007F8  EC5A  F00D         	call	_USBSuspend	;wreg free
  4982  0007FC                     i2l4324:
  4983                           
  4984                           ;usb_device.c: 696: }
  4985                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4986  0007FC  AC62               	btfss	3938,6,c	;volatile
  4987  0007FE  D013               	goto	i2l4342
  4988                           
  4989                           ;usb_device.c: 709: {
  4990                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4991  000800  AC60               	btfss	3936,6,c	;volatile
  4992  000802  D007               	goto	i2l4330
  4993                           
  4994                           ;usb_device.c: 712: {
  4995                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4996  000804  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  4997  000806  0E73               	movlw	115
  4998  000808  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  4999  00080A  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5000  00080C  D850               	call	PL98	;call to abstracted procedure
  5001  00080E  ECFA  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5002  000812                     i2l4330:
  5003                           
  5004                           ;usb_device.c: 714: }
  5005                           ;usb_device.c: 715: (UIR &= 0xBF);
  5006  000812  9C62               	bcf	3938,6,c	;volatile
  5007                           
  5008                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  5009  000814  ECB6  F00D         	call	_USBIncrement1msInternalTimers	;wreg free
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  5013  000818  5021               	movf	_USBStatusStageTimeoutCounter,w,c
  5014  00081A  E001               	bz	i2l4338
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;usb_device.c: 736: {
  5018                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  5019  00081C  0621               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  5020  00081E                     i2l4338:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;usb_device.c: 738: }
  5024                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  5025  00081E  5021               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  5026  000820  E102               	bnz	i2l4342
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;usb_device.c: 745: {
  5030                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  5031  000822  ECDF  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5032  000826                     i2l4342:
  5033                           
  5034                           ;usb_device.c: 747: }
  5035                           ;usb_device.c: 749: }
  5036                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  5037  000826  BA62               	btfsc	3938,5,c	;volatile
  5038  000828  AA60               	btfss	3936,5,c	;volatile
  5039  00082A  D002               	goto	i2l4348
  5040                           
  5041                           ;usb_device.c: 752: {
  5042                           ;usb_device.c: 753: USBStallHandler();
  5043  00082C  EC8C  F00C         	call	_USBStallHandler	;wreg free
  5044  000830                     i2l4348:
  5045                           
  5046                           ;usb_device.c: 754: }
  5047                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  5048  000830  B262               	btfsc	3938,1,c	;volatile
  5049  000832  A260               	btfss	3936,1,c	;volatile
  5050  000834  D009               	goto	i2l4356
  5051                           
  5052                           ;usb_device.c: 757: {
  5053                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  5054  000836  0E7F               	movlw	127
  5055  000838  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5056  00083A  6836               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5057  00083C  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5058  00083E  D837               	call	PL98	;call to abstracted procedure
  5059  000840  ECFA  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5060                           
  5061                           ;usb_device.c: 759: {UEIR = 0;};
  5062  000844  010F               	movlb	15	; () banked
  5063  000846  6B5F               	clrf	95,b	;volatile
  5064  000848                     i2l4356:
  5065                           
  5066                           ;usb_device.c: 767: }
  5067                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  5068  000848  0E04               	movlw	4
  5069  00084A  0100               	movlb	0	; () banked
  5070  00084C  6181               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  5071  00084E  D002               	goto	i2l345
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;usb_device.c: 775: {
  5075                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  5076  000850  94A1               	bcf	4001,2,c	;volatile
  5077                           
  5078                           ;usb_device.c: 777: return;
  5079  000852  0C04               	retlw	4
  5080  000854                     i2l345:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;usb_device.c: 778: }
  5084                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  5085  000854  A660               	btfss	3936,3,c	;volatile
  5086  000856  D029               	goto	i2l346
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;usb_device.c: 784: {
  5090                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  5091  000858  6A47               	clrf	USBDeviceTasks@i,c
  5092  00085A                     i2l347:
  5093                           
  5094                           ;usb_device.c: 786: {
  5095                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  5096  00085A  A662               	btfss	3938,3,c	;volatile
  5097  00085C  D026               	goto	i2l346
  5098                           
  5099                           ;usb_device.c: 788: {
  5100                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  5101  00085E  CF63 F028          	movff	3939,_USTATcopy	;volatile
  5102                           
  5103                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  5104  000862  3028               	rrcf	_USTATcopy,w,c	;volatile
  5105  000864  32E8               	rrcf	wreg,f,c
  5106  000866  32E8               	rrcf	wreg,f,c
  5107  000868  0B0F               	andlw	15
  5108  00086A  6E23               	movwf	_endpoint_number,c	;volatile
  5109                           
  5110                           ;usb_device.c: 793: (UIR &= 0xF7);
  5111  00086C  9662               	bcf	3938,3,c	;volatile
  5112                           
  5113                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  5114  00086E  B428               	btfsc	_USTATcopy,2,c	;volatile
  5115  000870  D003               	goto	i2l4376
  5116                           
  5117                           ;usb_device.c: 799: {
  5118                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5119  000872  5023               	movf	_endpoint_number,w,c
  5120  000874  0F70               	addlw	low _ep_data_out
  5121  000876  D002               	goto	L4
  5122  000878                     i2l4376:
  5123                           
  5124                           ;usb_device.c: 802: else
  5125                           ;usb_device.c: 803: {
  5126                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5127  000878  5023               	movf	_endpoint_number,w,c
  5128  00087A  0F73               	addlw	low _ep_data_in
  5129  00087C                     L4:
  5130  00087C  6ED9               	movwf	fsr2l,c
  5131  00087E  6ADA               	clrf	fsr2h,c
  5132  000880  0100               	movlb	0	; () banked
  5133  000882  70DF               	btg	indf2,0,c
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;usb_device.c: 805: }
  5137                           ;usb_device.c: 810: if(endpoint_number == 0)
  5138  000884  5023               	movf	_endpoint_number,w,c	;volatile
  5139  000886  E103               	bnz	i2l4382
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;usb_device.c: 811: {
  5143                           ;usb_device.c: 812: USBCtrlEPService();
  5144  000888  EC53  F00A         	call	_USBCtrlEPService	;wreg free
  5145                           
  5146                           ;usb_device.c: 813: }
  5147  00088C  D00A               	goto	i2l4384
  5148  00088E                     i2l4382:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;usb_device.c: 814: else
  5152                           ;usb_device.c: 815: {
  5153                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5154  00088E  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5155  000890  0E72               	movlw	114
  5156  000892  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5157  000894  0E28               	movlw	low _USTATcopy
  5158  000896  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5159  000898  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5160  00089A  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5161  00089C  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5162  00089E  ECFA  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5163  0008A2                     i2l4384:
  5164  0008A2  2A47               	incf	USBDeviceTasks@i,f,c
  5165  0008A4  0E03               	movlw	3
  5166  0008A6  6447               	cpfsgt	USBDeviceTasks@i,c
  5167  0008A8  D7D8               	goto	i2l347
  5168  0008AA                     i2l346:
  5169                           
  5170                           ;usb_device.c: 822: }
  5171                           ;usb_device.c: 823: }
  5172                           ;usb_device.c: 824: }
  5173                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  5174  0008AA  94A1               	bcf	4001,2,c	;volatile
  5175  0008AC  0012               	return		;funcret
  5176  0008AE                     __end_of_USBDeviceTasks:
  5177                           	opt stack 0
  5178  0008AE                     PL98:
  5179                           	opt stack 16
  5180  0008AE  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5181  0008B0  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5182  0008B2  0E01               	movlw	1
  5183  0008B4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5184  0008B6  0C01               	retlw	1
  5185  0008B8                     __end_ofPL98:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           tblptrh	equ	0xFF7
  5189                           tblptrl	equ	0xFF6
  5190                           tablat	equ	0xFF5
  5191                           prodh	equ	0xFF4
  5192                           prodl	equ	0xFF3
  5193                           intcon	equ	0xFF2
  5194                           postinc0	equ	0xFEE
  5195                           wreg	equ	0xFE8
  5196                           indf1	equ	0xFE7
  5197                           postdec1	equ	0xFE5
  5198                           fsr1h	equ	0xFE2
  5199                           fsr1l	equ	0xFE1
  5200                           indf2	equ	0xFDF
  5201                           postinc2	equ	0xFDE
  5202                           postdec2	equ	0xFDD
  5203                           plusw2	equ	0xFDB
  5204                           fsr2h	equ	0xFDA
  5205                           fsr2l	equ	0xFD9
  5206                           status	equ	0xFD8
  5207                           
  5208 ;; *************** function i2_USBDeviceInit *****************
  5209 ;; Defined at:
  5210 ;;		line 277 in file "picLibs/usb_device.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;		None
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      void 
  5217 ;; Registers used:
  5218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 3F/0
  5221 ;;		On exit  : 3F/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5224 ;;      Params:         0       0       0       0
  5225 ;;      Locals:         1       0       0       0
  5226 ;;      Temps:          0       0       0       0
  5227 ;;      Totals:         1       0       0       0
  5228 ;;Total ram usage:        1 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    1
  5231 ;; This function calls:
  5232 ;;		i2_memset
  5233 ;; This function is called by:
  5234 ;;		_USBDeviceTasks
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           	psect	text27
  5239  0009B2                     __ptext27:
  5240                           	opt stack 0
  5241  0009B2                     i2_USBDeviceInit:
  5242                           	opt stack 0
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;usb_device.c: 279: uint8_t i;
  5246                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5247                           
  5248                           ;incstack = 0
  5249                           
  5250                           ;usb_device.c: 285: ;
  5251                           ;usb_device.c: 288: {UEIR = 0;};
  5252                           
  5253                           ;usb_device.c: 291: {UIR = 0;};
  5254                           
  5255                           ;usb_device.c: 294: UEP0 = 0;
  5256  0009B2  D85C               	call	PL90	;call to abstracted procedure
  5257                           
  5258                           ; BSR set to: 15
  5259                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  5260  0009B4  EC27  F008         	call	PL58	;call to abstracted procedure
  5261  0009B8  EC45  F00D         	call	i2_memset	;wreg free
  5262                           
  5263                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5264                           
  5265                           ; BSR set to: 15
  5266  0009BC  EC84  F00C         	call	PL36	;call to abstracted procedure
  5267                           
  5268                           ; BSR set to: 15
  5269                           ;usb_device.c: 301: ;
  5270                           ;usb_device.c: 304: ;
  5271                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5272  0009C0  6A32               	clrf	i2USBDeviceInit@i,c
  5273  0009C2                     i2l4180:
  5274                           
  5275                           ;usb_device.c: 308: {
  5276                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5277  0009C2  5032               	movf	i2USBDeviceInit@i,w,c
  5278  0009C4  D847               	call	PL42	;call to abstracted procedure
  5279  0009C6  2A32               	incf	i2USBDeviceInit@i,f,c
  5280  0009C8  0E0B               	movlw	11
  5281  0009CA  6432               	cpfsgt	i2USBDeviceInit@i,c
  5282  0009CC  D7FA               	goto	i2l4180
  5283                           
  5284                           ;usb_device.c: 310: }
  5285                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5286                           
  5287                           ;usb_device.c: 316: UADDR = 0x00;
  5288                           
  5289                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5290                           
  5291                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5292                           
  5293                           ;usb_device.c: 326: {
  5294                           ;usb_device.c: 327: (UIR &= 0xF7);
  5295                           
  5296                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5297                           
  5298                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5299                           
  5300                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5301                           
  5302                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5303                           
  5304                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5305                           
  5306                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5307                           
  5308                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5309                           
  5310                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5314  0009CE  D82E               	call	PL22	;call to abstracted procedure
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5318  0009D0  6A32               	clrf	i2USBDeviceInit@i,c
  5319  0009D2                     i2l4210:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;usb_device.c: 346: {
  5323                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5324  0009D2  5032               	movf	i2USBDeviceInit@i,w,c
  5325  0009D4  EC5A  F006         	call	PL30	;call to abstracted procedure
  5326  0009D8  6ADE               	clrf	postinc2,c
  5327  0009DA  6ADD               	clrf	postdec2,c
  5328                           
  5329                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5330  0009DC  5032               	movf	i2USBDeviceInit@i,w,c
  5331  0009DE  EC60  F006         	call	PL34	;call to abstracted procedure
  5332  0009E2  6ADE               	clrf	postinc2,c
  5333  0009E4  6ADD               	clrf	postdec2,c
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5337  0009E6  5032               	movf	i2USBDeviceInit@i,w,c
  5338  0009E8  D847               	call	PL100	;call to abstracted procedure
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5342  0009EA  5032               	movf	i2USBDeviceInit@i,w,c
  5343  0009EC  D84A               	call	PL108	;call to abstracted procedure
  5344                           
  5345                           ; BSR set to: 0
  5346  0009EE  2A32               	incf	i2USBDeviceInit@i,f,c
  5347                           
  5348                           ; BSR set to: 0
  5349  0009F0  0E02               	movlw	2
  5350  0009F2  6432               	cpfsgt	i2USBDeviceInit@i,c
  5351  0009F4  D7EE               	goto	i2l4210
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;usb_device.c: 351: }
  5355                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5356  0009F6  0E08               	movlw	8
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5360                           
  5361                           ; BSR set to: 15
  5362                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  5363                           
  5364                           ; BSR set to: 2
  5365                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5366                           
  5367                           ; BSR set to: 2
  5368                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5369                           
  5370                           ; BSR set to: 2
  5371                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5372                           
  5373                           ; BSR set to: 2
  5374                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5375                           
  5376                           ; BSR set to: 2
  5377                           ;usb_device.c: 366: USB1msTickCount = 0;
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5384                           
  5385                           ; BSR set to: 0
  5386  0009F8  D000               	goto	PL12	;call to abstracted procedure
  5387  0009FA                     __end_ofi2_USBDeviceInit:
  5388                           	opt stack 0
  5389  0009FA                     PL12:
  5390                           	opt stack 19
  5391  0009FA  6E0F               	movwf	_pBDTEntryIn,c
  5392  0009FC  0E02               	movlw	2
  5393  0009FE  6E10               	movwf	_pBDTEntryIn+1,c
  5394  000A00  0E16               	movlw	22
  5395  000A02  010F               	movlb	15	; () banked
  5396  000A04  6F53               	movwf	83,b	;volatile
  5397  000A06  0E02               	movlw	2
  5398  000A08  0102               	movlb	2	; () banked
  5399  000A0A  6F03               	movwf	3,b	;volatile
  5400  000A0C  0E30               	movlw	48
  5401  000A0E  6F02               	movwf	2,b	;volatile
  5402  000A10  0E08               	movlw	8
  5403  000A12  6F01               	movwf	1,b	;volatile
  5404  000A14  0E04               	movlw	4
  5405  000A16  6F00               	movwf	0,b	;volatile
  5406  000A18  8F00               	bsf	0,7,b	;volatile
  5407  000A1A  6A29               	clrf	_USBActiveConfiguration,c	;volatile
  5408  000A1C  0100               	movlb	0	; () banked
  5409  000A1E  6B66               	clrf	_USB1msTickCount& (0+255),b	;volatile
  5410  000A20  6B67               	clrf	(_USB1msTickCount+1)& (0+255),b	;volatile
  5411  000A22  6B68               	clrf	(_USB1msTickCount+2)& (0+255),b	;volatile
  5412  000A24  6B69               	clrf	(_USB1msTickCount+3)& (0+255),b	;volatile
  5413  000A26  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5414  000A28  6B81               	clrf	_USBDeviceState& (0+255),b	;volatile
  5415  000A2A  0012               	return		;funcret
  5416  000A2C                     __end_ofPL12:
  5417                           	opt stack 0
  5418  000A2C                     PL22:
  5419                           	opt stack 19
  5420  000A2C  8C64               	bsf	3940,6,c	;volatile
  5421  000A2E  010F               	movlb	15	; () banked
  5422  000A30  6B5C               	clrf	92,b	;volatile
  5423  000A32  9864               	bcf	3940,4,c	;volatile
  5424  000A34  9C64               	bcf	3940,6,c	;volatile
  5425  000A36                     l5002:
  5426  000A36  9662               	bcf	3938,3,c	;volatile
  5427  000A38  6A0C               	clrf	_inPipes+3,c	;volatile
  5428  000A3A  6A04               	clrf	_outPipes+3,c	;volatile
  5429  000A3C  6A05               	clrf	_outPipes+4,c	;volatile
  5430  000A3E  6A06               	clrf	_outPipes+5,c	;volatile
  5431  000A40  B662               	btfsc	3938,3,c	;volatile
  5432  000A42  D7F9               	goto	l5002
  5433  000A44  0E01               	movlw	1
  5434  000A46  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5435  000A48  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5436  000A4A  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  5437  000A4C  0100               	movlb	0	; () banked
  5438  000A4E  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5439  000A50  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5440  000A52  0012               	return	
  5441  000A54                     __end_ofPL22:
  5442                           	opt stack 0
  5443  000A54                     PL42:
  5444                           	opt stack 19
  5445  000A54  0D04               	mullw	4
  5446  000A56  0E00               	movlw	0
  5447  000A58  24F3               	addwf	prodl,w,c
  5448  000A5A  6ED9               	movwf	fsr2l,c
  5449  000A5C  0E02               	movlw	2
  5450  000A5E  20F4               	addwfc	prodh,w,c
  5451  000A60  6EDA               	movwf	fsr2h,c
  5452  000A62  6ADE               	clrf	postinc2,c
  5453  000A64  6ADE               	clrf	postinc2,c
  5454  000A66  6ADE               	clrf	postinc2,c
  5455  000A68  6ADD               	clrf	postdec2,c
  5456  000A6A  0012               	return	
  5457  000A6C                     __end_ofPL42:
  5458                           	opt stack 0
  5459  000A6C                     PL90:
  5460                           	opt stack 19
  5461  000A6C  94A0               	bcf	4000,2,c	;volatile
  5462  000A6E  010F               	movlb	15	; () banked
  5463  000A70  6B5F               	clrf	95,b	;volatile
  5464  000A72  6A62               	clrf	3938,c	;volatile
  5465  000A74  6B53               	clrf	83,b	;volatile
  5466  000A76  0012               	return	
  5467  000A78                     __end_ofPL90:
  5468                           	opt stack 0
  5469  000A78                     PL100:
  5470                           	opt stack 19
  5471  000A78  0F73               	addlw	low _ep_data_in
  5472  000A7A  6ED9               	movwf	fsr2l,c
  5473  000A7C  6ADA               	clrf	fsr2h,c
  5474  000A7E  6ADF               	clrf	indf2,c
  5475  000A80  0012               	return	
  5476  000A82                     __end_ofPL100:
  5477                           	opt stack 0
  5478  000A82                     PL108:
  5479                           	opt stack 19
  5480  000A82  0F70               	addlw	low _ep_data_out
  5481  000A84  6ED9               	movwf	fsr2l,c
  5482  000A86  6ADA               	clrf	fsr2h,c
  5483  000A88  6ADF               	clrf	indf2,c
  5484  000A8A  0012               	return	
  5485  000A8C                     __end_ofPL108:
  5486                           	opt stack 0
  5487                           tblptru	equ	0xFF8
  5488                           tblptrh	equ	0xFF7
  5489                           tblptrl	equ	0xFF6
  5490                           tablat	equ	0xFF5
  5491                           prodh	equ	0xFF4
  5492                           prodl	equ	0xFF3
  5493                           intcon	equ	0xFF2
  5494                           postinc0	equ	0xFEE
  5495                           wreg	equ	0xFE8
  5496                           indf1	equ	0xFE7
  5497                           postdec1	equ	0xFE5
  5498                           fsr1h	equ	0xFE2
  5499                           fsr1l	equ	0xFE1
  5500                           indf2	equ	0xFDF
  5501                           postinc2	equ	0xFDE
  5502                           postdec2	equ	0xFDD
  5503                           plusw2	equ	0xFDB
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _USBWakeFromSuspend *****************
  5509 ;; Defined at:
  5510 ;;		line 2303 in file "picLibs/usb_device.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 3F/0
  5521 ;;		On exit  : 3F/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5524 ;;      Params:         0       0       0       0
  5525 ;;      Locals:         0       0       0       0
  5526 ;;      Temps:          0       0       0       0
  5527 ;;      Totals:         0       0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    4
  5531 ;; This function calls:
  5532 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5533 ;; This function is called by:
  5534 ;;		_USBDeviceTasks
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text28
  5539  001AD6                     __ptext28:
  5540                           	opt stack 0
  5541  001AD6                     _USBWakeFromSuspend:
  5542                           	opt stack 19
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;incstack = 0
  5549  001AD6  6A24               	clrf	_USBBusIsSuspended,c	;volatile
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5553  001AD8  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5554  001ADA  0E74               	movlw	116
  5555  001ADC  EC65  F00D         	call	PL46	;call to abstracted procedure
  5556  001AE0  ECFA  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5557                           
  5558                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5559  001AE4  9264               	bcf	3940,1,c	;volatile
  5560                           
  5561                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5562  001AE6  9460               	bcf	3936,2,c	;volatile
  5563                           
  5564                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5565  001AE8  D001               	goto	i2l4106
  5566  001AEA                     i2l4104:
  5567                           
  5568                           ;usb_device.c: 2343: {
  5569                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5570  001AEA  9462               	bcf	3938,2,c	;volatile
  5571  001AEC                     i2l4106:
  5572  001AEC  B462               	btfsc	3938,2,c	;volatile
  5573  001AEE  D7FD               	goto	i2l4104
  5574                           
  5575                           ;usb_device.c: 2345: }
  5576                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5577  001AF0  0100               	movlb	0	; () banked
  5578  001AF2  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5579                           
  5580                           ; BSR set to: 0
  5581  001AF4  0012               	return		;funcret
  5582  001AF6                     __end_of_USBWakeFromSuspend:
  5583                           	opt stack 0
  5584                           tblptru	equ	0xFF8
  5585                           tblptrh	equ	0xFF7
  5586                           tblptrl	equ	0xFF6
  5587                           tablat	equ	0xFF5
  5588                           prodh	equ	0xFF4
  5589                           prodl	equ	0xFF3
  5590                           intcon	equ	0xFF2
  5591                           postinc0	equ	0xFEE
  5592                           wreg	equ	0xFE8
  5593                           indf1	equ	0xFE7
  5594                           postdec1	equ	0xFE5
  5595                           fsr1h	equ	0xFE2
  5596                           fsr1l	equ	0xFE1
  5597                           indf2	equ	0xFDF
  5598                           postinc2	equ	0xFDE
  5599                           postdec2	equ	0xFDD
  5600                           plusw2	equ	0xFDB
  5601                           fsr2h	equ	0xFDA
  5602                           fsr2l	equ	0xFD9
  5603                           status	equ	0xFD8
  5604                           
  5605 ;; *************** function _USBSuspend *****************
  5606 ;; Defined at:
  5607 ;;		line 2245 in file "picLibs/usb_device.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 3F/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5621 ;;      Params:         0       0       0       0
  5622 ;;      Locals:         0       0       0       0
  5623 ;;      Temps:          0       0       0       0
  5624 ;;      Totals:         0       0       0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    4
  5628 ;; This function calls:
  5629 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5630 ;; This function is called by:
  5631 ;;		_USBDeviceTasks
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text29
  5636  001AB4                     __ptext29:
  5637                           	opt stack 0
  5638  001AB4                     _USBSuspend:
  5639                           	opt stack 19
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;incstack = 0
  5646  001AB4  8460               	bsf	3936,2,c	;volatile
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5650  001AB6  9862               	bcf	3938,4,c	;volatile
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5654  001AB8  8264               	bsf	3940,1,c	;volatile
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5658  001ABA  0E01               	movlw	1
  5659  001ABC  6E24               	movwf	_USBBusIsSuspended,c	;volatile
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5663  001ABE  6B7D               	clrf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5667  001AC0  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  5668  001AC2  0E75               	movlw	117
  5669  001AC4  D802               	call	PL46	;call to abstracted procedure
  5670  001AC6  EFFA  F00A         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5671  001ACA                     __end_of_USBSuspend:
  5672                           	opt stack 0
  5673  001ACA                     PL46:
  5674                           	opt stack 19
  5675  001ACA  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  5676  001ACC  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  5677  001ACE  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  5678  001AD0  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  5679  001AD2  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  5680  001AD4  0012               	return	
  5681  001AD6                     __end_ofPL46:
  5682                           	opt stack 0
  5683                           tblptru	equ	0xFF8
  5684                           tblptrh	equ	0xFF7
  5685                           tblptrl	equ	0xFF6
  5686                           tablat	equ	0xFF5
  5687                           prodh	equ	0xFF4
  5688                           prodl	equ	0xFF3
  5689                           intcon	equ	0xFF2
  5690                           postinc0	equ	0xFEE
  5691                           wreg	equ	0xFE8
  5692                           indf1	equ	0xFE7
  5693                           postdec1	equ	0xFE5
  5694                           fsr1h	equ	0xFE2
  5695                           fsr1l	equ	0xFE1
  5696                           indf2	equ	0xFDF
  5697                           postinc2	equ	0xFDE
  5698                           postdec2	equ	0xFDD
  5699                           plusw2	equ	0xFDB
  5700                           fsr2h	equ	0xFDA
  5701                           fsr2l	equ	0xFD9
  5702                           status	equ	0xFD8
  5703                           
  5704 ;; *************** function _USBStallHandler *****************
  5705 ;; Defined at:
  5706 ;;		line 2202 in file "picLibs/usb_device.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 3F/F
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5720 ;;      Params:         0       0       0       0
  5721 ;;      Locals:         0       0       0       0
  5722 ;;      Temps:          1       0       0       0
  5723 ;;      Totals:         1       0       0       0
  5724 ;;Total ram usage:        1 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_USBDeviceTasks
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text30
  5734  001918                     __ptext30:
  5735                           	opt stack 0
  5736  001918                     _USBStallHandler:
  5737                           	opt stack 23
  5738                           
  5739                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5740                           
  5741                           ;incstack = 0
  5742  001918  010F               	movlb	15	; () banked
  5743  00191A  A153               	btfss	83,0,b	;volatile
  5744  00191C  D010               	goto	i2l485
  5745                           
  5746                           ; BSR set to: 15
  5747                           ;usb_device.c: 2215: {
  5748                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5749  00191E  D811               	call	PL38	;call to abstracted procedure
  5750  001920  0E80               	movlw	128
  5751  001922  18DE               	xorwf	postinc2,w,c
  5752  001924  E10B               	bnz	i2l4140
  5753                           
  5754                           ; BSR set to: 15
  5755  001926  EC50  F009         	call	PL14	;call to abstracted procedure
  5756  00192A  0E84               	movlw	132
  5757  00192C  18DE               	xorwf	postinc2,w,c
  5758  00192E  E106               	bnz	i2l4140
  5759                           
  5760                           ; BSR set to: 15
  5761                           ;usb_device.c: 2218: {
  5762                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5763  001930  D808               	call	PL38	;call to abstracted procedure
  5764  001932  0E0C               	movlw	12
  5765  001934  6EDF               	movwf	indf2,c
  5766                           
  5767                           ; BSR set to: 15
  5768                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5769  001936  D805               	call	PL38	;call to abstracted procedure
  5770  001938  0E00               	movlw	0
  5771  00193A  8EDB               	bsf	plusw2,7,c
  5772  00193C                     i2l4140:
  5773                           
  5774                           ; BSR set to: 15
  5775                           ;usb_device.c: 2222: }
  5776                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5777  00193C  9153               	bcf	83,0,b	;volatile
  5778  00193E                     i2l485:
  5779                           
  5780                           ; BSR set to: 15
  5781                           ;usb_device.c: 2224: }
  5782                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5783  00193E  9A62               	bcf	3938,5,c	;volatile
  5784                           
  5785                           ; BSR set to: 15
  5786  001940  0012               	return		;funcret
  5787  001942                     __end_of_USBStallHandler:
  5788                           	opt stack 0
  5789  001942                     PL38:
  5790                           	opt stack 23
  5791  001942  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  5792  001946  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  5793  00194A  0012               	return	
  5794  00194C                     __end_ofPL38:
  5795                           	opt stack 0
  5796                           tblptru	equ	0xFF8
  5797                           tblptrh	equ	0xFF7
  5798                           tblptrl	equ	0xFF6
  5799                           tablat	equ	0xFF5
  5800                           prodh	equ	0xFF4
  5801                           prodl	equ	0xFF3
  5802                           intcon	equ	0xFF2
  5803                           postinc0	equ	0xFEE
  5804                           wreg	equ	0xFE8
  5805                           indf1	equ	0xFE7
  5806                           postdec1	equ	0xFE5
  5807                           fsr1h	equ	0xFE2
  5808                           fsr1l	equ	0xFE1
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           postdec2	equ	0xFDD
  5812                           plusw2	equ	0xFDB
  5813                           fsr2h	equ	0xFDA
  5814                           fsr2l	equ	0xFD9
  5815                           status	equ	0xFD8
  5816                           
  5817 ;; *************** function _USBIncrement1msInternalTimers *****************
  5818 ;; Defined at:
  5819 ;;		line 3025 in file "picLibs/usb_device.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;		None
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  1    wreg      void 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 3F/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5833 ;;      Params:         0       0       0       0
  5834 ;;      Locals:         0       0       0       0
  5835 ;;      Temps:          0       0       0       0
  5836 ;;      Totals:         0       0       0       0
  5837 ;;Total ram usage:        0 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_USBDeviceTasks
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text31
  5847  001B6C                     __ptext31:
  5848                           	opt stack 0
  5849  001B6C                     _USBIncrement1msInternalTimers:
  5850                           	opt stack 23
  5851                           
  5852                           ;usb_device.c: 3033: USB1msTickCount++;
  5853                           
  5854                           ; BSR set to: 15
  5855                           ;incstack = 0
  5856  001B6C  0100               	movlb	0	; () banked
  5857  001B6E  2B66               	incf	_USB1msTickCount& (0+255),f,b	;volatile
  5858  001B70  0E00               	movlw	0
  5859  001B72  2367               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  5860  001B74  2368               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  5861  001B76  2369               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5865  001B78  5024               	movf	_USBBusIsSuspended,w,c	;volatile
  5866  001B7A  A4D8               	btfss	status,2,c
  5867  001B7C  0012               	return	
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;usb_device.c: 3035: {
  5871                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5872  001B7E  2B7D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5876  001B80  517D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  5877  001B82  B4D8               	btfsc	status,2,c
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;usb_device.c: 3039: {
  5881                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5882  001B84  697D               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  5883                           
  5884                           ; BSR set to: 0
  5885  001B86  0012               	return		;funcret
  5886  001B88                     __end_of_USBIncrement1msInternalTimers:
  5887                           	opt stack 0
  5888                           tblptru	equ	0xFF8
  5889                           tblptrh	equ	0xFF7
  5890                           tblptrl	equ	0xFF6
  5891                           tablat	equ	0xFF5
  5892                           prodh	equ	0xFF4
  5893                           prodl	equ	0xFF3
  5894                           intcon	equ	0xFF2
  5895                           postinc0	equ	0xFEE
  5896                           wreg	equ	0xFE8
  5897                           indf1	equ	0xFE7
  5898                           postdec1	equ	0xFE5
  5899                           fsr1h	equ	0xFE2
  5900                           fsr1l	equ	0xFE1
  5901                           indf2	equ	0xFDF
  5902                           postinc2	equ	0xFDE
  5903                           postdec2	equ	0xFDD
  5904                           plusw2	equ	0xFDB
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           
  5909 ;; *************** function _USBCtrlEPService *****************
  5910 ;; Defined at:
  5911 ;;		line 2372 in file "picLibs/usb_device.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 3F/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5925 ;;      Params:         0       0       0       0
  5926 ;;      Locals:         0       0       0       0
  5927 ;;      Temps:          1       0       0       0
  5928 ;;      Totals:         1       0       0       0
  5929 ;;Total ram usage:        1 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    7
  5932 ;; This function calls:
  5933 ;;		_USBCtrlTrfInHandler
  5934 ;;		_USBCtrlTrfOutHandler
  5935 ;;		_USBCtrlTrfSetupHandler
  5936 ;;		_memcpy
  5937 ;; This function is called by:
  5938 ;;		_USBDeviceTasks
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text32
  5943  0014A6                     __ptext32:
  5944                           	opt stack 0
  5945  0014A6                     _USBCtrlEPService:
  5946                           	opt stack 16
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;incstack = 0
  5953  0014A6  0E2D               	movlw	45
  5954  0014A8  6E21               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5958  0014AA  C028  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  5959  0014AE  0EFD               	movlw	253
  5960  0014B0  1646               	andwf	??_USBCtrlEPService,f,c
  5961  0014B2  E12A               	bnz	i2l4160
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;usb_device.c: 2383: {
  5965                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5966  0014B4  90D8               	bcf	status,0,c
  5967  0014B6  3028               	rrcf	_USTATcopy,w,c	;volatile
  5968  0014B8  0B3F               	andlw	63
  5969  0014BA  0D04               	mullw	4
  5970  0014BC  0E00               	movlw	0
  5971  0014BE  24F3               	addwf	prodl,w,c
  5972  0014C0  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  5973  0014C2  0E02               	movlw	2
  5974  0014C4  20F4               	addwfc	prodh,w,c
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5978  0014C6  EC31  F008         	call	PL112	;call to abstracted procedure
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5982  0014CA  0E04               	movlw	4
  5983  0014CC  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
  5984  0014CE  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5988  0014D0  ECA1  F00C         	call	PL38	;call to abstracted procedure
  5989  0014D4  30DF               	rrcf	indf2,w,c
  5990  0014D6  32E8               	rrcf	wreg,f,c
  5991  0014D8  0B0F               	andlw	15
  5992  0014DA  0A0D               	xorlw	13
  5993  0014DC  E002 EF7B  F00D    	bnz	_USBCtrlTrfOutHandler
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;usb_device.c: 2400: {
  5997                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  5998  0014E2  0E30               	movlw	48
  5999  0014E4  6E2A               	movwf	memcpy@d1,c
  6000  0014E6  0E02               	movlw	2
  6001  0014E8  6E2B               	movwf	memcpy@d1+1,c
  6002  0014EA  EE20 F002          	lfsr	2,2
  6003  0014EE  EC11  F00A         	call	PL80	;call to abstracted procedure
  6004  0014F2  CFDE F02C          	movff	postinc2,memcpy@s1
  6005  0014F6  CFDD F02D          	movff	postdec2,memcpy@s1+1
  6006  0014FA  6A2F               	clrf	memcpy@n+1,c
  6007  0014FC  0E08               	movlw	8
  6008  0014FE  6E2E               	movwf	memcpy@n,c
  6009  001500  EC36  F00C         	call	_memcpy	;wreg free
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  6013  001504  EF10  F00C         	goto	_USBCtrlTrfSetupHandler	;wreg free
  6014  001508                     i2l4160:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  6018  001508  5028               	movf	_USTATcopy,w,c	;volatile
  6019  00150A  0BFD               	andlw	253
  6020  00150C  0A04               	xorlw	4
  6021  00150E  B4D8               	btfsc	status,2,c
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;usb_device.c: 2417: {
  6025                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  6026  001510  EC1A  F009         	call	_USBCtrlTrfInHandler	;wreg free
  6027  001514  0012               	return		;funcret
  6028  001516                     __end_of_USBCtrlEPService:
  6029                           	opt stack 0
  6030                           tblptru	equ	0xFF8
  6031                           tblptrh	equ	0xFF7
  6032                           tblptrl	equ	0xFF6
  6033                           tablat	equ	0xFF5
  6034                           prodh	equ	0xFF4
  6035                           prodl	equ	0xFF3
  6036                           intcon	equ	0xFF2
  6037                           postinc0	equ	0xFEE
  6038                           wreg	equ	0xFE8
  6039                           indf1	equ	0xFE7
  6040                           postdec1	equ	0xFE5
  6041                           fsr1h	equ	0xFE2
  6042                           fsr1l	equ	0xFE1
  6043                           indf2	equ	0xFDF
  6044                           postinc2	equ	0xFDE
  6045                           postdec2	equ	0xFDD
  6046                           plusw2	equ	0xFDB
  6047                           fsr2h	equ	0xFDA
  6048                           fsr2l	equ	0xFD9
  6049                           status	equ	0xFD8
  6050                           
  6051 ;; *************** function _memcpy *****************
  6052 ;; Defined at:
  6053 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  d1              2    0[COMRAM] PTR void 
  6056 ;;		 -> SetupPkt(8), 
  6057 ;;  s1              2    2[COMRAM] PTR const void 
  6058 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  6059 ;;  n               2    4[COMRAM] unsigned int 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6062 ;;		 -> CtrlTrfData(8), RAM(767), SetupPkt(8), 
  6063 ;;  d               2    6[COMRAM] PTR unsigned char 
  6064 ;;		 -> SetupPkt(8), 
  6065 ;;  tmp             1   10[COMRAM] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  2    0[COMRAM] PTR void 
  6068 ;; Registers used:
  6069 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 3F/0
  6072 ;;		On exit  : 3F/0
  6073 ;;		Unchanged: 3F/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6075 ;;      Params:         6       0       0       0
  6076 ;;      Locals:         5       0       0       0
  6077 ;;      Temps:          0       0       0       0
  6078 ;;      Totals:        11       0       0       0
  6079 ;;Total ram usage:       11 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_USBCtrlEPService
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text33
  6089  00186C                     __ptext33:
  6090                           	opt stack 0
  6091  00186C                     _memcpy:
  6092                           	opt stack 22
  6093                           
  6094                           ; BSR set to: 0
  6095                           
  6096                           ;incstack = 0
  6097  00186C  C02C  F032         	movff	memcpy@s1,memcpy@s
  6098  001870  C02D  F033         	movff	memcpy@s1+1,memcpy@s+1
  6099  001874  C02A  F030         	movff	memcpy@d1,memcpy@d
  6100  001878  C02B  F031         	movff	memcpy@d1+1,memcpy@d+1
  6101  00187C  D010               	goto	i2l3706
  6102  00187E                     i2l3698:
  6103                           
  6104                           ; BSR set to: 0
  6105  00187E  C032  FFD9         	movff	memcpy@s,fsr2l
  6106  001882  C033  FFDA         	movff	memcpy@s+1,fsr2h
  6107  001886  50DF               	movf	indf2,w,c
  6108  001888  6E34               	movwf	memcpy@tmp,c
  6109                           
  6110                           ; BSR set to: 0
  6111  00188A  4A32               	infsnz	memcpy@s,f,c
  6112  00188C  2A33               	incf	memcpy@s+1,f,c
  6113                           
  6114                           ; BSR set to: 0
  6115  00188E  C030  FFD9         	movff	memcpy@d,fsr2l
  6116  001892  C031  FFDA         	movff	memcpy@d+1,fsr2h
  6117  001896  C034  FFDF         	movff	memcpy@tmp,indf2
  6118                           
  6119                           ; BSR set to: 0
  6120  00189A  4A30               	infsnz	memcpy@d,f,c
  6121  00189C  2A31               	incf	memcpy@d+1,f,c
  6122  00189E                     i2l3706:
  6123                           
  6124                           ; BSR set to: 0
  6125  00189E  062E               	decf	memcpy@n,f,c
  6126  0018A0  A0D8               	btfss	status,0,c
  6127  0018A2  062F               	decf	memcpy@n+1,f,c
  6128  0018A4  282E               	incf	memcpy@n,w,c
  6129  0018A6  E1EB               	bnz	i2l3698
  6130  0018A8  282F               	incf	memcpy@n+1,w,c
  6131  0018AA  E1E9               	bnz	i2l3698
  6132                           
  6133                           ; BSR set to: 0
  6134  0018AC  0012               	return		;funcret
  6135  0018AE                     __end_of_memcpy:
  6136                           	opt stack 0
  6137                           tblptru	equ	0xFF8
  6138                           tblptrh	equ	0xFF7
  6139                           tblptrl	equ	0xFF6
  6140                           tablat	equ	0xFF5
  6141                           prodh	equ	0xFF4
  6142                           prodl	equ	0xFF3
  6143                           intcon	equ	0xFF2
  6144                           postinc0	equ	0xFEE
  6145                           wreg	equ	0xFE8
  6146                           indf1	equ	0xFE7
  6147                           postdec1	equ	0xFE5
  6148                           fsr1h	equ	0xFE2
  6149                           fsr1l	equ	0xFE1
  6150                           indf2	equ	0xFDF
  6151                           postinc2	equ	0xFDE
  6152                           postdec2	equ	0xFDD
  6153                           plusw2	equ	0xFDB
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function _USBCtrlTrfSetupHandler *****************
  6159 ;; Defined at:
  6160 ;;		line 2465 in file "picLibs/usb_device.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 3F/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6174 ;;      Params:         0       0       0       0
  6175 ;;      Locals:         0       0       0       0
  6176 ;;      Temps:          0       0       0       0
  6177 ;;      Totals:         0       0       0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    6
  6181 ;; This function calls:
  6182 ;;		_USBCheckStdRequest
  6183 ;;		_USBCtrlEPServiceComplete
  6184 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6185 ;; This function is called by:
  6186 ;;		_USBCtrlEPService
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text34
  6191  001820                     __ptext34:
  6192                           	opt stack 0
  6193  001820                     _USBCtrlTrfSetupHandler:
  6194                           	opt stack 16
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;usb_device.c: 2470: shortPacketStatus = 0;
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;incstack = 0
  6201  001820  6A27               	clrf	_shortPacketStatus,c	;volatile
  6202                           
  6203                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  6204  001822  6A20               	clrf	_USBDeferStatusStagePacket,c	;volatile
  6205                           
  6206                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  6207  001824  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6208                           
  6209                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  6210  001826  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6211                           
  6212                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  6213  001828  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  6214                           
  6215                           ;usb_device.c: 2475: controlTransferState = 0;
  6216  00182A  6A26               	clrf	_controlTransferState,c	;volatile
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6220  00182C  EC50  F009         	call	PL14	;call to abstracted procedure
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6224  001830  D817               	call	PL110	;call to abstracted procedure
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6228  001832  EC50  F009         	call	PL14	;call to abstracted procedure
  6229                           
  6230                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6231  001836  D814               	call	PL110	;call to abstracted procedure
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  6235  001838  ECCA  F006         	call	PL16	;call to abstracted procedure
  6236  00183C  0E7F               	movlw	127
  6237  00183E  16DF               	andwf	indf2,f,c
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  6241  001840  6A0C               	clrf	_inPipes+3,c	;volatile
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  6245  001842  6A0D               	clrf	_inPipes+4,c	;volatile
  6246  001844  6A0E               	clrf	_inPipes+5,c	;volatile
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  6250  001846  6A04               	clrf	_outPipes+3,c	;volatile
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  6254  001848  6A05               	clrf	_outPipes+4,c	;volatile
  6255  00184A  6A06               	clrf	_outPipes+5,c	;volatile
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;usb_device.c: 2500: USBCheckStdRequest();
  6259  00184C  ECD2  F008         	call	_USBCheckStdRequest	;wreg free
  6260                           
  6261                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  6262  001850  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6263  001852  0E03               	movlw	3
  6264  001854  EC65  F00D         	call	PL46	;call to abstracted procedure
  6265  001858  ECFA  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6266                           
  6267                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  6268  00185C  EF86  F008         	goto	_USBCtrlEPServiceComplete	;wreg free
  6269  001860                     __end_of_USBCtrlTrfSetupHandler:
  6270                           	opt stack 0
  6271  001860                     PL110:
  6272                           	opt stack 16
  6273  001860  0E7F               	movlw	127
  6274  001862  16DF               	andwf	indf2,f,c
  6275  001864  0E04               	movlw	4
  6276  001866  1A0F               	xorwf	_pBDTEntryIn,f,c
  6277  001868  5010               	movf	_pBDTEntryIn+1,w,c
  6278  00186A  0012               	return	
  6279  00186C                     __end_ofPL110:
  6280                           	opt stack 0
  6281                           tblptru	equ	0xFF8
  6282                           tblptrh	equ	0xFF7
  6283                           tblptrl	equ	0xFF6
  6284                           tablat	equ	0xFF5
  6285                           prodh	equ	0xFF4
  6286                           prodl	equ	0xFF3
  6287                           intcon	equ	0xFF2
  6288                           postinc0	equ	0xFEE
  6289                           wreg	equ	0xFE8
  6290                           indf1	equ	0xFE7
  6291                           postdec1	equ	0xFE5
  6292                           fsr1h	equ	0xFE2
  6293                           fsr1l	equ	0xFE1
  6294                           indf2	equ	0xFDF
  6295                           postinc2	equ	0xFDE
  6296                           postdec2	equ	0xFDD
  6297                           plusw2	equ	0xFDB
  6298                           fsr2h	equ	0xFDA
  6299                           fsr2l	equ	0xFD9
  6300                           status	equ	0xFD8
  6301                           
  6302 ;; *************** function _USBCtrlEPServiceComplete *****************
  6303 ;; Defined at:
  6304 ;;		line 1616 in file "picLibs/usb_device.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6318 ;;      Params:         0       0       0       0
  6319 ;;      Locals:         0       0       0       0
  6320 ;;      Temps:          0       0       0       0
  6321 ;;      Totals:         0       0       0       0
  6322 ;;Total ram usage:        0 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; Hardware stack levels required when called:    2
  6325 ;; This function calls:
  6326 ;;		_USBCtrlEPAllowDataStage
  6327 ;;		_USBCtrlEPAllowStatusStage
  6328 ;; This function is called by:
  6329 ;;		_USBCtrlTrfSetupHandler
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text35
  6334  00110C                     __ptext35:
  6335                           	opt stack 0
  6336  00110C                     _USBCtrlEPServiceComplete:
  6337                           	opt stack 19
  6338                           
  6339                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6340                           
  6341                           ;incstack = 0
  6342  00110C  9864               	bcf	3940,4,c	;volatile
  6343                           
  6344                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6345  00110E  BE0C               	btfsc	_inPipes+3,7,c	;volatile
  6346  001110  D015               	goto	i2l409
  6347                           
  6348                           ;usb_device.c: 1629: {
  6349                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6350  001112  AE04               	btfss	_outPipes+3,7,c	;volatile
  6351  001114  D00A               	goto	i2l3514
  6352                           
  6353                           ;usb_device.c: 1631: {
  6354                           ;usb_device.c: 1632: controlTransferState = 2;
  6355  001116  0E02               	movlw	2
  6356  001118  6E26               	movwf	_controlTransferState,c	;volatile
  6357                           
  6358                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6359  00111A  0100               	movlb	0	; () banked
  6360  00111C  517E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  6361  00111E  E102               	bnz	i2l3510
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;usb_device.c: 1644: {
  6365                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6366  001120  EC91  F00B         	call	_USBCtrlEPAllowDataStage	;wreg free
  6367  001124                     i2l3510:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;usb_device.c: 1646: }
  6371                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6372  001124  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6376  001126  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6377                           
  6378                           ;usb_device.c: 1652: }
  6379  001128  0012               	return	
  6380  00112A                     i2l3514:
  6381                           
  6382                           ;usb_device.c: 1653: else
  6383                           ;usb_device.c: 1654: {
  6384                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6385                           
  6386                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6387                           
  6388                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6389  00112A  D825               	call	PL2	;call to abstracted procedure
  6390  00112C  0E0C               	movlw	12
  6391                           
  6392                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6393  00112E  ECC2  F006         	call	PL10	;call to abstracted procedure
  6394                           
  6395                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6396  001132  EC50  F009         	call	PL14	;call to abstracted procedure
  6397  001136  0E04               	movlw	4
  6398                           
  6399                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6400  001138  EF48  F009         	goto	PL8	;call to abstracted procedure
  6401  00113C                     i2l409:
  6402                           
  6403                           ;usb_device.c: 1667: else
  6404                           ;usb_device.c: 1668: {
  6405                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6406  00113C  0102               	movlb	2	; () banked
  6407  00113E  AF30               	btfss	48,7,b	;volatile
  6408  001140  D00D               	goto	i2l3534
  6409                           
  6410                           ; BSR set to: 2
  6411                           ;usb_device.c: 1670: {
  6412                           ;usb_device.c: 1671: controlTransferState = 1;
  6413  001142  0E01               	movlw	1
  6414  001144  6E26               	movwf	_controlTransferState,c	;volatile
  6415                           
  6416                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6417  001146  501D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  6418  001148  E102               	bnz	i2l3526
  6419                           
  6420                           ; BSR set to: 2
  6421                           ;usb_device.c: 1686: {
  6422                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6423  00114A  EC91  F00B         	call	_USBCtrlEPAllowDataStage	;wreg free
  6424  00114E                     i2l3526:
  6425                           
  6426                           ;usb_device.c: 1688: }
  6427                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6428  00114E  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6429                           
  6430                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6431  001150  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6432                           
  6433                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6434  001152  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6435  001154  A4D8               	btfss	status,2,c
  6436  001156  0012               	return	
  6437                           
  6438                           ;usb_device.c: 1713: {
  6439                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6440  001158  EFDF  F009         	goto	_USBCtrlEPAllowStatusStage	;wreg free
  6441  00115C                     i2l3534:
  6442                           
  6443                           ; BSR set to: 2
  6444                           ;usb_device.c: 1717: else
  6445                           ;usb_device.c: 1718: {
  6446                           ;usb_device.c: 1729: controlTransferState = 2;
  6447  00115C  0E02               	movlw	2
  6448  00115E  6E26               	movwf	_controlTransferState,c	;volatile
  6449                           
  6450                           ; BSR set to: 2
  6451                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6452                           
  6453                           ; BSR set to: 2
  6454                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  6455                           
  6456                           ; BSR set to: 2
  6457                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6458  001160  D80A               	call	PL2	;call to abstracted procedure
  6459  001162  0E04               	movlw	4
  6460                           
  6461                           ; BSR set to: 2
  6462                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6463  001164  ECC2  F006         	call	PL10	;call to abstracted procedure
  6464                           
  6465                           ; BSR set to: 2
  6466                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6467  001168  6A1E               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
  6468                           
  6469                           ; BSR set to: 2
  6470                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6471  00116A  6A1F               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
  6472                           
  6473                           ; BSR set to: 2
  6474                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6475  00116C  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
  6476  00116E  E102 EFDF  F009    	bz	_USBCtrlEPAllowStatusStage
  6477  001174  0012               	return	
  6478  001176                     __end_of_USBCtrlEPServiceComplete:
  6479                           	opt stack 0
  6480  001176                     PL2:
  6481                           	opt stack 19
  6482  001176  EE20 F001          	lfsr	2,1
  6483  00117A  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6484  00117C  26D9               	addwf	fsr2l,f,c
  6485  00117E  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6486  001180  22DA               	addwfc	fsr2h,f,c
  6487  001182  0E08               	movlw	8
  6488  001184  6EDF               	movwf	indf2,c
  6489  001186  EE20 F002          	lfsr	2,2
  6490  00118A  5015               	movf	_pBDTEntryEP0OutNext,w,c
  6491  00118C  26D9               	addwf	fsr2l,f,c
  6492  00118E  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
  6493  001190  22DA               	addwfc	fsr2h,f,c
  6494  001192  0E30               	movlw	48
  6495  001194  6EDE               	movwf	postinc2,c
  6496  001196  0E02               	movlw	2
  6497  001198  6EDD               	movwf	postdec2,c
  6498  00119A  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  6499  00119E  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  6500  0011A2  0C02               	retlw	2
  6501  0011A4                     __end_ofPL2:
  6502                           	opt stack 0
  6503                           tblptru	equ	0xFF8
  6504                           tblptrh	equ	0xFF7
  6505                           tblptrl	equ	0xFF6
  6506                           tablat	equ	0xFF5
  6507                           prodh	equ	0xFF4
  6508                           prodl	equ	0xFF3
  6509                           intcon	equ	0xFF2
  6510                           postinc0	equ	0xFEE
  6511                           wreg	equ	0xFE8
  6512                           indf1	equ	0xFE7
  6513                           postdec1	equ	0xFE5
  6514                           fsr1h	equ	0xFE2
  6515                           fsr1l	equ	0xFE1
  6516                           indf2	equ	0xFDF
  6517                           postinc2	equ	0xFDE
  6518                           postdec2	equ	0xFDD
  6519                           plusw2	equ	0xFDB
  6520                           fsr2h	equ	0xFDA
  6521                           fsr2l	equ	0xFD9
  6522                           status	equ	0xFD8
  6523                           
  6524 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6525 ;; Defined at:
  6526 ;;		line 1488 in file "picLibs/usb_device.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6535 ;; Tracked objects:
  6536 ;;		On entry : 3D/0
  6537 ;;		On exit  : 3F/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6540 ;;      Params:         0       0       0       0
  6541 ;;      Locals:         0       0       0       0
  6542 ;;      Temps:          0       0       0       0
  6543 ;;      Totals:         0       0       0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    1
  6547 ;; This function calls:
  6548 ;;		_USBCtrlTrfTxService
  6549 ;; This function is called by:
  6550 ;;		_USBCtrlEPServiceComplete
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text36
  6555  001722                     __ptext36:
  6556                           	opt stack 0
  6557  001722                     _USBCtrlEPAllowDataStage:
  6558                           	opt stack 19
  6559                           
  6560                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6561                           
  6562                           ;incstack = 0
  6563  001722  6A1D               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6564                           
  6565                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6566  001724  0100               	movlb	0	; () banked
  6567  001726  6B7E               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6571  001728  0E02               	movlw	2
  6572  00172A  1826               	xorwf	_controlTransferState,w,c	;volatile
  6573  00172C  E112               	bnz	i2l3312
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;usb_device.c: 1494: {
  6577                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6578  00172E  EE20 F001          	lfsr	2,1
  6579  001732  ECB8  F006         	call	PL4	;call to abstracted procedure
  6580                           
  6581                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  6582  001736  ECBD  F006         	call	PL6	;call to abstracted procedure
  6583  00173A  ECB8  F006         	call	PL4	;call to abstracted procedure
  6584  00173E  0E38               	movlw	56
  6585  001740  6EDE               	movwf	postinc2,c
  6586  001742  0E02               	movlw	2
  6587  001744  6EDD               	movwf	postdec2,c
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6591  001746  ECCA  F006         	call	PL16	;call to abstracted procedure
  6592  00174A  0E48               	movlw	72
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6596  00174C  ECC2  F006         	call	PL10	;call to abstracted procedure
  6597                           
  6598                           ;usb_device.c: 1500: }
  6599  001750  0C00               	retlw	0
  6600  001752                     i2l3312:
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;usb_device.c: 1501: else
  6604                           ;usb_device.c: 1502: {
  6605                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6606  001752  500D               	movf	_inPipes+4,w,c	;volatile
  6607  001754  0102               	movlb	2	; () banked
  6608  001756  5D36               	subwf	54,w,b	;volatile
  6609  001758  500E               	movf	_inPipes+5,w,c	;volatile
  6610  00175A  5937               	subwfb	55,w,b	;volatile
  6611  00175C  E204               	bc	i2l3316
  6612                           
  6613                           ; BSR set to: 2
  6614                           ;usb_device.c: 1506: {
  6615                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6616  00175E  C236 F00D          	movff	566,_inPipes+4	;volatile
  6617  001762  C237 F00E          	movff	567,_inPipes+5	;volatile
  6618  001766                     i2l3316:
  6619                           
  6620                           ; BSR set to: 2
  6621                           ;usb_device.c: 1508: }
  6622                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6623  001766  EC91  F007         	call	_USBCtrlTrfTxService	;wreg free
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  6627  00176A  EC5B  F009         	call	PL50	;call to abstracted procedure
  6628  00176E  EC55  F009         	call	PL44	;call to abstracted procedure
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6632  001772  EC50  F009         	call	PL14	;call to abstracted procedure
  6633  001776  0E48               	movlw	72
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6637                           
  6638                           ; BSR set to: 0
  6639  001778  EF48  F009         	goto	PL8	;call to abstracted procedure
  6640  00177C                     __end_of_USBCtrlEPAllowDataStage:
  6641                           	opt stack 0
  6642                           tblptru	equ	0xFF8
  6643                           tblptrh	equ	0xFF7
  6644                           tblptrl	equ	0xFF6
  6645                           tablat	equ	0xFF5
  6646                           prodh	equ	0xFF4
  6647                           prodl	equ	0xFF3
  6648                           intcon	equ	0xFF2
  6649                           postinc0	equ	0xFEE
  6650                           wreg	equ	0xFE8
  6651                           indf1	equ	0xFE7
  6652                           postdec1	equ	0xFE5
  6653                           fsr1h	equ	0xFE2
  6654                           fsr1l	equ	0xFE1
  6655                           indf2	equ	0xFDF
  6656                           postinc2	equ	0xFDE
  6657                           postdec2	equ	0xFDD
  6658                           plusw2	equ	0xFDB
  6659                           fsr2h	equ	0xFDA
  6660                           fsr2l	equ	0xFD9
  6661                           status	equ	0xFD8
  6662                           
  6663 ;; *************** function _USBCheckStdRequest *****************
  6664 ;; Defined at:
  6665 ;;		line 2686 in file "picLibs/usb_device.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;		None
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;		None
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      void 
  6672 ;; Registers used:
  6673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 3F/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6679 ;;      Params:         0       0       0       0
  6680 ;;      Locals:         0       0       0       0
  6681 ;;      Temps:          1       0       0       0
  6682 ;;      Totals:         1       0       0       0
  6683 ;;Total ram usage:        1 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    5
  6686 ;; This function calls:
  6687 ;;		_USBStdFeatureReqHandler
  6688 ;;		_USBStdGetDscHandler
  6689 ;;		_USBStdGetStatusHandler
  6690 ;;		_USBStdSetCfgHandler
  6691 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6692 ;; This function is called by:
  6693 ;;		_USBCtrlTrfSetupHandler
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text37
  6698  0011A4                     __ptext37:
  6699                           	opt stack 0
  6700  0011A4                     _USBCheckStdRequest:
  6701                           	opt stack 16
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;incstack = 0
  6708  0011A4  0102               	movlb	2	; () banked
  6709  0011A6  3930               	swapf	48,w,b	;volatile
  6710  0011A8  32E8               	rrcf	wreg,f,c
  6711  0011AA  0B03               	andlw	3
  6712  0011AC  E01D               	bz	i2l3632
  6713  0011AE  0012               	return	
  6714  0011B0                     i2l534:
  6715                           
  6716                           ; BSR set to: 2
  6717                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6718  0011B0  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6719                           
  6720                           ; BSR set to: 2
  6721                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6722  0011B2  0E08               	movlw	8
  6723  0011B4  0100               	movlb	0	; () banked
  6724  0011B6  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6725                           
  6726                           ;usb_device.c: 2696: break;
  6727  0011B8  0C08               	retlw	8
  6728  0011BA                     i2l3606:
  6729                           
  6730                           ; BSR set to: 2
  6731                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6732  0011BA  0E29               	movlw	low _USBActiveConfiguration
  6733  0011BC  6E09               	movwf	_inPipes,c	;volatile
  6734                           
  6735                           ; BSR set to: 2
  6736                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6737                           
  6738                           ; BSR set to: 2
  6739                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6740                           
  6741                           ; BSR set to: 2
  6742                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6743                           
  6744                           ;usb_device.c: 2708: break;
  6745  0011BE  D034               	goto	PL92	;call to abstracted procedure
  6746  0011C0                     i2l3618:
  6747                           
  6748                           ; BSR set to: 2
  6749                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6750  0011C0  5134               	movf	52,w,b	;volatile
  6751  0011C2  0FD1               	addlw	low _USBAlternateInterface
  6752  0011C4  6E45               	movwf	??_USBCheckStdRequest& (0+255),c
  6753  0011C6  C045  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  6754                           
  6755                           ; BSR set to: 2
  6756                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6757                           
  6758                           ; BSR set to: 2
  6759                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6760                           
  6761                           ; BSR set to: 2
  6762                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6763                           
  6764                           ;usb_device.c: 2721: break;
  6765  0011CA  D02E               	goto	PL92	;call to abstracted procedure
  6766  0011CC                     i2l543:
  6767                           
  6768                           ; BSR set to: 2
  6769                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6770  0011CC  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6771                           
  6772                           ; BSR set to: 2
  6773                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6774  0011CE  5134               	movf	52,w,b	;volatile
  6775  0011D0  0FD1               	addlw	low _USBAlternateInterface
  6776  0011D2  6ED9               	movwf	fsr2l,c
  6777  0011D4  6ADA               	clrf	fsr2h,c
  6778  0011D6  C232 FFDF          	movff	562,indf2	;volatile
  6779                           
  6780                           ;usb_device.c: 2725: break;
  6781  0011DA  0012               	return	
  6782  0011DC                     i2l3628:
  6783                           
  6784                           ; BSR set to: 2
  6785                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6786  0011DC  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6787  0011DE  0E02               	movlw	2
  6788  0011E0  EC65  F00D         	call	PL46	;call to abstracted procedure
  6789  0011E4  EFFA  F00A         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6790  0011E8                     i2l3632:
  6791                           
  6792                           ; BSR set to: 2
  6793  0011E8  5131               	movf	49,w,b	;volatile
  6794                           
  6795                           ; Switch size 1, requested type "space"
  6796                           ; Number of cases is 11, Range of values is 0 to 12
  6797                           ; switch strategies available:
  6798                           ; Name         Instructions Cycles
  6799                           ; simple_byte           34    18 (average)
  6800                           ;	Chosen strategy is simple_byte
  6801  0011EA  E102 EF1A  F00A    	bz	_USBStdGetStatusHandler
  6802  0011F0  0A01               	xorlw	1	; case 1
  6803  0011F2  E102 EFEA  F001    	bz	_USBStdFeatureReqHandler
  6804  0011F8  0A02               	xorlw	2	; case 3
  6805  0011FA  E102 EFEA  F001    	bz	_USBStdFeatureReqHandler
  6806  001200  0A06               	xorlw	6	; case 5
  6807  001202  E0D6               	bz	i2l534
  6808  001204  0A03               	xorlw	3	; case 6
  6809  001206  E102 EFB0  F005    	bz	_USBStdGetDscHandler
  6810  00120C  0A01               	xorlw	1	; case 7
  6811  00120E  E0E6               	bz	i2l3628
  6812  001210  0A0F               	xorlw	15	; case 8
  6813  001212  E0D3               	bz	i2l3606
  6814  001214  0A01               	xorlw	1	; case 9
  6815  001216  E102 EFE5  F007    	bz	_USBStdSetCfgHandler
  6816  00121C  0A03               	xorlw	3	; case 10
  6817  00121E  E0D0               	bz	i2l3618
  6818  001220  0A01               	xorlw	1	; case 11
  6819  001222  E0D4               	bz	i2l543
  6820  001224  0A07               	xorlw	7	; case 12
  6821  001226  0012               	return	
  6822  001228                     __end_of_USBCheckStdRequest:
  6823                           	opt stack 0
  6824  001228                     PL92:
  6825                           	opt stack 16
  6826  001228  6A0A               	clrf	_inPipes+1,c	;volatile
  6827  00122A  800C               	bsf	_inPipes+3,0,c	;volatile
  6828  00122C  0E01               	movlw	1
  6829  00122E  6E0D               	movwf	_inPipes+4,c	;volatile
  6830  001230  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6831  001232  0C01               	retlw	1
  6832  001234                     __end_ofPL92:
  6833                           	opt stack 0
  6834                           tblptru	equ	0xFF8
  6835                           tblptrh	equ	0xFF7
  6836                           tblptrl	equ	0xFF6
  6837                           tablat	equ	0xFF5
  6838                           prodh	equ	0xFF4
  6839                           prodl	equ	0xFF3
  6840                           intcon	equ	0xFF2
  6841                           postinc0	equ	0xFEE
  6842                           wreg	equ	0xFE8
  6843                           indf1	equ	0xFE7
  6844                           postdec1	equ	0xFE5
  6845                           fsr1h	equ	0xFE2
  6846                           fsr1l	equ	0xFE1
  6847                           indf2	equ	0xFDF
  6848                           postinc2	equ	0xFDE
  6849                           postdec2	equ	0xFDD
  6850                           plusw2	equ	0xFDB
  6851                           fsr2h	equ	0xFDA
  6852                           fsr2l	equ	0xFD9
  6853                           status	equ	0xFD8
  6854                           
  6855 ;; *************** function _USBStdSetCfgHandler *****************
  6856 ;; Defined at:
  6857 ;;		line 1968 in file "picLibs/usb_device.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;		None
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  i               1   20[COMRAM] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 3D/2
  6868 ;;		On exit  : 3F/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6871 ;;      Params:         0       0       0       0
  6872 ;;      Locals:         1       0       0       0
  6873 ;;      Temps:          0       0       0       0
  6874 ;;      Totals:         1       0       0       0
  6875 ;;Total ram usage:        1 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:    4
  6878 ;; This function calls:
  6879 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6880 ;;		i2_memset
  6881 ;; This function is called by:
  6882 ;;		_USBCheckStdRequest
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text38
  6887  000FCA                     __ptext38:
  6888                           	opt stack 0
  6889  000FCA                     _USBStdSetCfgHandler:
  6890                           	opt stack 16
  6891                           
  6892                           ;usb_device.c: 1970: uint8_t i;
  6893                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6894                           
  6895                           ;incstack = 0
  6896  000FCA  8E0C               	bsf	_inPipes+3,7,c	;volatile
  6897                           
  6898                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  6899  000FCC  D840               	call	PL58	;call to abstracted procedure
  6900  000FCE  EC45  F00D         	call	i2_memset	;wreg free
  6901                           
  6902                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6903  000FD2  6A2A               	clrf	i2memset@p1,c
  6904  000FD4  0E02               	movlw	2
  6905  000FD6  6E2B               	movwf	i2memset@p1+1,c
  6906  000FD8  6A2D               	clrf	i2memset@c+1,c
  6907  000FDA  6A2C               	clrf	i2memset@c,c
  6908  000FDC  6A2F               	clrf	i2memset@n+1,c
  6909  000FDE  0E30               	movlw	48
  6910  000FE0  6E2E               	movwf	i2memset@n,c
  6911  000FE2  EC45  F00D         	call	i2_memset	;wreg free
  6912                           
  6913                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6914  000FE6  8C64               	bsf	3940,6,c	;volatile
  6915                           
  6916                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6917  000FE8  6A3E               	clrf	USBStdSetCfgHandler@i,c
  6918  000FEA                     i2l3336:
  6919                           
  6920                           ;usb_device.c: 1988: {
  6921                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6922  000FEA  503E               	movf	USBStdSetCfgHandler@i,w,c
  6923  000FEC  EC3C  F005         	call	PL100	;call to abstracted procedure
  6924                           
  6925                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6926  000FF0  503E               	movf	USBStdSetCfgHandler@i,w,c
  6927  000FF2  EC41  F005         	call	PL108	;call to abstracted procedure
  6928  000FF6  2A3E               	incf	USBStdSetCfgHandler@i,f,c
  6929  000FF8  0E02               	movlw	2
  6930  000FFA  643E               	cpfsgt	USBStdSetCfgHandler@i,c
  6931  000FFC  D7F6               	goto	i2l3336
  6932                           
  6933                           ;usb_device.c: 1991: }
  6934                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6935  000FFE  0ED1               	movlw	low _USBAlternateInterface
  6936  001000  6E2A               	movwf	i2memset@p1,c
  6937  001002  6A2B               	clrf	i2memset@p1+1,c
  6938  001004  6A2D               	clrf	i2memset@c+1,c
  6939  001006  6A2C               	clrf	i2memset@c,c
  6940  001008  6A2F               	clrf	i2memset@n+1,c
  6941  00100A  0E02               	movlw	2
  6942  00100C  6E2E               	movwf	i2memset@n,c
  6943  00100E  EC45  F00D         	call	i2_memset	;wreg free
  6944                           
  6945                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6946  001012  9C64               	bcf	3940,6,c	;volatile
  6947                           
  6948                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6949  001014  0E08               	movlw	8
  6950  001016  6E0F               	movwf	_pBDTEntryIn,c
  6951  001018  0E02               	movlw	2
  6952  00101A  6E10               	movwf	_pBDTEntryIn+1,c
  6953                           
  6954                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6955  00101C  0E00               	movlw	0
  6956  00101E  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
  6957  001020  0E02               	movlw	2
  6958                           
  6959                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6960  001022  D81F               	call	PL112	;call to abstracted procedure
  6961                           
  6962                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6963  001024  C232 F029          	movff	562,_USBActiveConfiguration	;volatile
  6964                           
  6965                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6966  001028  5029               	movf	_USBActiveConfiguration,w,c	;volatile
  6967  00102A  E104               	bnz	i2l3358
  6968                           
  6969                           ;usb_device.c: 2010: {
  6970                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6971  00102C  0E10               	movlw	16
  6972  00102E  0100               	movlb	0	; () banked
  6973  001030  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6974                           
  6975                           ;usb_device.c: 2013: }
  6976  001032  0C10               	retlw	16
  6977  001034                     i2l3358:
  6978                           
  6979                           ;usb_device.c: 2014: else
  6980                           ;usb_device.c: 2015: {
  6981                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6982  001034  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  6983  001036  0E01               	movlw	1
  6984  001038  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  6985  00103A  0E29               	movlw	low _USBActiveConfiguration
  6986  00103C  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  6987  00103E  EC57  F004         	call	PL98	;call to abstracted procedure
  6988  001042  ECFA  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6989                           
  6990                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6991  001046  0E20               	movlw	32
  6992  001048  0100               	movlb	0	; () banked
  6993  00104A  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
  6994                           
  6995                           ; BSR set to: 0
  6996  00104C  0C20               	retlw	32	;funcret
  6997  00104E                     __end_of_USBStdSetCfgHandler:
  6998                           	opt stack 0
  6999  00104E                     PL58:
  7000                           	opt stack 22
  7001  00104E  0E54               	movlw	84
  7002  001050  6E2A               	movwf	i2memset@p1,c
  7003  001052  0E0F               	movlw	15
  7004  001054  6E2B               	movwf	i2memset@p1+1,c
  7005  001056  6A2D               	clrf	i2memset@c+1,c
  7006  001058  6A2C               	clrf	i2memset@c,c
  7007  00105A  6A2F               	clrf	i2memset@n+1,c
  7008  00105C  0E02               	movlw	2
  7009  00105E  6E2E               	movwf	i2memset@n,c
  7010  001060  0C02               	retlw	2
  7011  001062                     __end_ofPL58:
  7012                           	opt stack 0
  7013  001062                     PL112:
  7014                           	opt stack 16
  7015  001062  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
  7016  001064  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  7017  001068  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  7018  00106C  0012               	return	
  7019  00106E                     __end_ofPL112:
  7020                           	opt stack 0
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           prodh	equ	0xFF4
  7026                           prodl	equ	0xFF3
  7027                           intcon	equ	0xFF2
  7028                           postinc0	equ	0xFEE
  7029                           wreg	equ	0xFE8
  7030                           indf1	equ	0xFE7
  7031                           postdec1	equ	0xFE5
  7032                           fsr1h	equ	0xFE2
  7033                           fsr1l	equ	0xFE1
  7034                           indf2	equ	0xFDF
  7035                           postinc2	equ	0xFDE
  7036                           postdec2	equ	0xFDD
  7037                           plusw2	equ	0xFDB
  7038                           fsr2h	equ	0xFDA
  7039                           fsr2l	equ	0xFD9
  7040                           status	equ	0xFD8
  7041                           
  7042 ;; *************** function i2_memset *****************
  7043 ;; Defined at:
  7044 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  p1              2    0[COMRAM] PTR void 
  7047 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7048 ;;  c               2    2[COMRAM] int 
  7049 ;;  n               2    4[COMRAM] unsigned int 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  memset          2    6[COMRAM] PTR unsigned char 
  7052 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  2    0[COMRAM] PTR void 
  7055 ;; Registers used:
  7056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/F
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7062 ;;      Params:         6       0       0       0
  7063 ;;      Locals:         2       0       0       0
  7064 ;;      Temps:          0       0       0       0
  7065 ;;      Totals:         8       0       0       0
  7066 ;;Total ram usage:        8 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_USBStdSetCfgHandler
  7072 ;;		i2_USBDeviceInit
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text39
  7077  001A8A                     __ptext39:
  7078                           	opt stack 0
  7079  001A8A                     i2_memset:
  7080                           	opt stack 22
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;incstack = 0
  7084  001A8A  C02A  F030         	movff	i2memset@p1,i2memset@p
  7085  001A8E  C02B  F031         	movff	i2memset@p1+1,i2memset@p+1
  7086  001A92  D008               	goto	i2l3268
  7087  001A94                     i2l3264:
  7088  001A94  C030  FFD9         	movff	i2memset@p,fsr2l
  7089  001A98  C031  FFDA         	movff	i2memset@p+1,fsr2h
  7090  001A9C  C02C  FFDF         	movff	i2memset@c,indf2
  7091  001AA0  4A30               	infsnz	i2memset@p,f,c
  7092  001AA2  2A31               	incf	i2memset@p+1,f,c
  7093  001AA4                     i2l3268:
  7094  001AA4  062E               	decf	i2memset@n,f,c
  7095  001AA6  A0D8               	btfss	status,0,c
  7096  001AA8  062F               	decf	i2memset@n+1,f,c
  7097  001AAA  282E               	incf	i2memset@n,w,c
  7098  001AAC  E1F3               	bnz	i2l3264
  7099  001AAE  282F               	incf	i2memset@n+1,w,c
  7100  001AB0  E1F1               	bnz	i2l3264
  7101  001AB2  0012               	return		;funcret
  7102  001AB4                     __end_ofi2_memset:
  7103                           	opt stack 0
  7104                           tblptru	equ	0xFF8
  7105                           tblptrh	equ	0xFF7
  7106                           tblptrl	equ	0xFF6
  7107                           tablat	equ	0xFF5
  7108                           prodh	equ	0xFF4
  7109                           prodl	equ	0xFF3
  7110                           intcon	equ	0xFF2
  7111                           postinc0	equ	0xFEE
  7112                           wreg	equ	0xFE8
  7113                           indf1	equ	0xFE7
  7114                           postdec1	equ	0xFE5
  7115                           fsr1h	equ	0xFE2
  7116                           fsr1l	equ	0xFE1
  7117                           indf2	equ	0xFDF
  7118                           postinc2	equ	0xFDE
  7119                           postdec2	equ	0xFDD
  7120                           plusw2	equ	0xFDB
  7121                           fsr2h	equ	0xFDA
  7122                           fsr2l	equ	0xFD9
  7123                           status	equ	0xFD8
  7124                           
  7125 ;; *************** function _USBStdGetStatusHandler *****************
  7126 ;; Defined at:
  7127 ;;		line 2129 in file "picLibs/usb_device.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  p               2    0[COMRAM] PTR struct __BDT
  7132 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7137 ;; Tracked objects:
  7138 ;;		On entry : 3D/2
  7139 ;;		On exit  : 3F/2
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7142 ;;      Params:         0       0       0       0
  7143 ;;      Locals:         2       0       0       0
  7144 ;;      Temps:          0       0       0       0
  7145 ;;      Totals:         2       0       0       0
  7146 ;;Total ram usage:        2 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_USBCheckStdRequest
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	text40
  7156  001434                     __ptext40:
  7157                           	opt stack 0
  7158  001434                     _USBStdGetStatusHandler:
  7159                           	opt stack 20
  7160                           
  7161                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7162                           
  7163                           ;incstack = 0
  7164  001434  0102               	movlb	2	; () banked
  7165  001436  6B38               	clrf	56,b	;volatile
  7166                           
  7167                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7168  001438  6B39               	clrf	57,b	;volatile
  7169                           
  7170                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7171  00143A  D020               	goto	i2l3408
  7172  00143C                     i2l472:
  7173                           
  7174                           ; BSR set to: 2
  7175                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7176  00143C  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7177                           
  7178                           ; BSR set to: 2
  7179                           ;usb_device.c: 2145: }
  7180                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7181                           
  7182                           ;usb_device.c: 2142: if(0 == 1)
  7183  00143E  0425               	decf	_RemoteWakeup,w,c	;volatile
  7184  001440  E124               	bnz	i2l475
  7185                           
  7186                           ; BSR set to: 2
  7187                           ;usb_device.c: 2148: {
  7188                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7189  001442  8338               	bsf	56,1,b	;volatile
  7190  001444  D022               	goto	i2l475
  7191  001446                     i2l476:
  7192                           
  7193                           ; BSR set to: 2
  7194                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7195  001446  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7196                           
  7197                           ;usb_device.c: 2154: break;
  7198  001448  D020               	goto	i2l475
  7199  00144A                     i2l477:
  7200                           
  7201                           ; BSR set to: 2
  7202                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7203  00144A  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7204                           
  7205                           ;usb_device.c: 2160: {
  7206                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7207                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7208  00144C  BF34               	btfsc	52,7,b	;volatile
  7209  00144E  D004               	goto	i2l3398
  7210                           
  7211                           ; BSR set to: 2
  7212                           ;usb_device.c: 2164: {
  7213                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7214  001450  ECB1  F002         	call	PL72	;call to abstracted procedure
  7215  001454  0F60               	addlw	low _pBDTEntryOut
  7216  001456  D003               	goto	L5
  7217  001458                     i2l3398:
  7218                           
  7219                           ; BSR set to: 2
  7220                           ;usb_device.c: 2167: else
  7221                           ;usb_device.c: 2168: {
  7222                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7223  001458  ECB1  F002         	call	PL72	;call to abstracted procedure
  7224  00145C  0F0F               	addlw	low _pBDTEntryIn
  7225  00145E                     L5:
  7226  00145E  6ED9               	movwf	fsr2l,c
  7227  001460  6ADA               	clrf	fsr2h,c
  7228  001462  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  7229  001466  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  7230                           
  7231                           ; BSR set to: 2
  7232                           ;usb_device.c: 2170: }
  7233                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7234  00146A  D818               	call	PL128	;call to abstracted procedure
  7235  00146C  AEDF               	btfss	indf2,7,c
  7236  00146E  D00D               	goto	i2l475
  7237                           
  7238                           ; BSR set to: 2
  7239  001470  D815               	call	PL128	;call to abstracted procedure
  7240  001472  A4DF               	btfss	indf2,2,c
  7241  001474  D00A               	goto	i2l475
  7242                           
  7243                           ; BSR set to: 2
  7244                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7245  001476  0E01               	movlw	1
  7246  001478  6F38               	movwf	56,b	;volatile
  7247  00147A  D007               	goto	i2l475
  7248  00147C                     i2l3408:
  7249                           
  7250                           ; BSR set to: 2
  7251  00147C  5130               	movf	48,w,b	;volatile
  7252  00147E  0B1F               	andlw	31
  7253                           
  7254                           ; Switch size 1, requested type "space"
  7255                           ; Number of cases is 3, Range of values is 0 to 2
  7256                           ; switch strategies available:
  7257                           ; Name         Instructions Cycles
  7258                           ; simple_byte           10     6 (average)
  7259                           ;	Chosen strategy is simple_byte
  7260  001480  E0DD               	bz	i2l472
  7261  001482  0A01               	xorlw	1	; case 1
  7262  001484  E0E0               	bz	i2l476
  7263  001486  0A03               	xorlw	3	; case 2
  7264  001488  E0E0               	bz	i2l477
  7265  00148A                     i2l475:
  7266                           
  7267                           ; BSR set to: 2
  7268                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7269  00148A  AE0C               	btfss	_inPipes+3,7,c	;volatile
  7270  00148C  0012               	return	
  7271                           
  7272                           ; BSR set to: 2
  7273                           ;usb_device.c: 2179: {
  7274                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7275  00148E  0E38               	movlw	56
  7276  001490  6E09               	movwf	_inPipes,c	;volatile
  7277  001492  0E02               	movlw	2
  7278  001494  6E0A               	movwf	_inPipes+1,c	;volatile
  7279                           
  7280                           ; BSR set to: 2
  7281                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7282  001496  800C               	bsf	_inPipes+3,0,c	;volatile
  7283                           
  7284                           ; BSR set to: 2
  7285                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7286  001498  6E0D               	movwf	_inPipes+4,c	;volatile
  7287                           
  7288                           ; BSR set to: 2
  7289  00149A  0C02               	retlw	2	;funcret
  7290  00149C                     __end_of_USBStdGetStatusHandler:
  7291                           	opt stack 0
  7292  00149C                     PL128:
  7293                           	opt stack 20
  7294  00149C  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  7295  0014A0  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  7296  0014A4  0012               	return	
  7297  0014A6                     __end_ofPL128:
  7298                           	opt stack 0
  7299                           tblptru	equ	0xFF8
  7300                           tblptrh	equ	0xFF7
  7301                           tblptrl	equ	0xFF6
  7302                           tablat	equ	0xFF5
  7303                           prodh	equ	0xFF4
  7304                           prodl	equ	0xFF3
  7305                           intcon	equ	0xFF2
  7306                           postinc0	equ	0xFEE
  7307                           wreg	equ	0xFE8
  7308                           indf1	equ	0xFE7
  7309                           postdec1	equ	0xFE5
  7310                           fsr1h	equ	0xFE2
  7311                           fsr1l	equ	0xFE1
  7312                           indf2	equ	0xFDF
  7313                           postinc2	equ	0xFDE
  7314                           postdec2	equ	0xFDD
  7315                           plusw2	equ	0xFDB
  7316                           fsr2h	equ	0xFDA
  7317                           fsr2l	equ	0xFD9
  7318                           status	equ	0xFD8
  7319                           
  7320 ;; *************** function _USBStdGetDscHandler *****************
  7321 ;; Defined at:
  7322 ;;		line 2043 in file "picLibs/usb_device.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;		None
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;		None
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      void 
  7329 ;; Registers used:
  7330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7331 ;; Tracked objects:
  7332 ;;		On entry : 3D/2
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7336 ;;      Params:         0       0       0       0
  7337 ;;      Locals:         0       0       0       0
  7338 ;;      Temps:          2       0       0       0
  7339 ;;      Totals:         2       0       0       0
  7340 ;;Total ram usage:        2 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_USBCheckStdRequest
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text41
  7350  000B60                     __ptext41:
  7351                           	opt stack 0
  7352  000B60                     _USBStdGetDscHandler:
  7353                           	opt stack 20
  7354                           
  7355                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7356                           
  7357                           ; BSR set to: 2
  7358                           ;incstack = 0
  7359  000B60  0E80               	movlw	128
  7360  000B62  0102               	movlb	2	; () banked
  7361  000B64  1930               	xorwf	48,w,b	;volatile
  7362  000B66  A4D8               	btfss	status,2,c
  7363  000B68  0012               	return	
  7364                           
  7365                           ; BSR set to: 2
  7366                           ;usb_device.c: 2046: {
  7367                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7368  000B6A  0EC0               	movlw	192
  7369  000B6C  6E0C               	movwf	_inPipes+3,c	;volatile
  7370                           
  7371                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7372  000B6E  D03D               	goto	i2l3386
  7373  000B70                     i2l3366:
  7374                           
  7375                           ; BSR set to: 2
  7376                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7377  000B70  0EB0               	movlw	low _device_dsc
  7378  000B72  6E09               	movwf	_inPipes,c	;volatile
  7379  000B74  5009               	movf	_inPipes,w,c	;volatile
  7380  000B76  A4D8               	btfss	status,2,c
  7381  000B78  0E03               	movlw	high __smallconst
  7382  000B7A  6E0A               	movwf	_inPipes+1,c	;volatile
  7383                           
  7384                           ; BSR set to: 2
  7385                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7386  000B7C  6A0E               	clrf	_inPipes+5,c	;volatile
  7387  000B7E  0E12               	movlw	18
  7388  000B80  6E0D               	movwf	_inPipes+4,c	;volatile
  7389                           
  7390                           ;usb_device.c: 2058: break;
  7391  000B82  0C12               	retlw	18
  7392  000B84                     i2l3370:
  7393                           
  7394                           ; BSR set to: 2
  7395                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7396  000B84  5132               	movf	50,w,b	;volatile
  7397  000B86  E116               	bnz	i2l462
  7398                           
  7399                           ; BSR set to: 2
  7400                           ;usb_device.c: 2064: {
  7401                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7402  000B88  5132               	movf	50,w,b	;volatile
  7403  000B8A  0F04               	addlw	low _USB_CD_Ptr
  7404  000B8C  D848               	call	PL56	;call to abstracted procedure
  7405                           
  7406                           ; BSR set to: 2
  7407                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7408  000B8E  0E02               	movlw	2
  7409  000B90  D83A               	call	PL40	;call to abstracted procedure
  7410  000B92  64F7               	cpfsgt	tblptrh,c
  7411  000B94  D003               	bra	i2u217_47
  7412  000B96  0008               	tblrd		*
  7413  000B98  50F5               	movf	tablat,w,c
  7414  000B9A  D001               	bra	i2u217_40
  7415  000B9C                     i2u217_47:
  7416  000B9C  D82E               	call	PL20	;call to abstracted procedure
  7417  000B9E                     i2u217_40:
  7418  000B9E  6E0D               	movwf	_inPipes+4,c	;volatile
  7419                           
  7420                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7421  000BA0  0E03               	movlw	3
  7422  000BA2  D831               	call	PL40	;call to abstracted procedure
  7423  000BA4  64F7               	cpfsgt	tblptrh,c
  7424  000BA6  D003               	bra	i2u218_47
  7425  000BA8  0008               	tblrd		*
  7426  000BAA  50F5               	movf	tablat,w,c
  7427  000BAC  D001               	bra	i2u218_40
  7428  000BAE                     i2u218_47:
  7429  000BAE  D825               	call	PL20	;call to abstracted procedure
  7430  000BB0                     i2u218_40:
  7431  000BB0  6E0E               	movwf	_inPipes+5,c	;volatile
  7432                           
  7433                           ;usb_device.c: 2076: }
  7434  000BB2  0012               	return	
  7435  000BB4                     i2l462:
  7436                           
  7437                           ; BSR set to: 2
  7438                           ;usb_device.c: 2077: else
  7439                           ;usb_device.c: 2078: {
  7440                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7441  000BB4  6A0C               	clrf	_inPipes+3,c	;volatile
  7442  000BB6  0012               	return	
  7443  000BB8                     i2l3378:
  7444                           
  7445                           ; BSR set to: 2
  7446                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7447  000BB8  0E03               	movlw	3
  7448  000BBA  6132               	cpfslt	50,b	;volatile
  7449  000BBC  D012               	goto	i2l465
  7450                           
  7451                           ; BSR set to: 2
  7452                           ;usb_device.c: 2087: {
  7453                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7454  000BBE  5132               	movf	50,w,b	;volatile
  7455  000BC0  0F01               	addlw	low _USB_SD_Ptr
  7456  000BC2  D82D               	call	PL56	;call to abstracted procedure
  7457                           
  7458                           ; BSR set to: 2
  7459                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7460  000BC4  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
  7461  000BC8  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
  7462  000BCC  6AF8               	clrf	tblptru,c
  7463  000BCE  0E02               	movlw	(high __ramtop+-1)
  7464  000BD0  64F7               	cpfsgt	tblptrh,c
  7465  000BD2  D003               	bra	i2u220_47
  7466  000BD4  0008               	tblrd		*
  7467  000BD6  50F5               	movf	tablat,w,c
  7468  000BD8  D001               	bra	i2u220_40
  7469  000BDA                     i2u220_47:
  7470  000BDA  D80F               	call	PL20	;call to abstracted procedure
  7471  000BDC                     i2u220_40:
  7472  000BDC  6E0D               	movwf	_inPipes+4,c	;volatile
  7473  000BDE  6A0E               	clrf	_inPipes+5,c	;volatile
  7474                           
  7475                           ;usb_device.c: 2092: }
  7476  000BE0  0012               	return	
  7477  000BE2                     i2l465:
  7478                           
  7479                           ; BSR set to: 2
  7480                           ;usb_device.c: 2102: else
  7481                           ;usb_device.c: 2103: {
  7482                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7483  000BE2  6A0C               	clrf	_inPipes+3,c	;volatile
  7484  000BE4  0012               	return	
  7485  000BE6                     i2l467:
  7486                           
  7487                           ; BSR set to: 2
  7488                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7489  000BE6  6A0C               	clrf	_inPipes+3,c	;volatile
  7490                           
  7491                           ;usb_device.c: 2109: break;
  7492  000BE8  0012               	return	
  7493  000BEA                     i2l3386:
  7494                           
  7495                           ; BSR set to: 2
  7496  000BEA  5133               	movf	51,w,b	;volatile
  7497                           
  7498                           ; Switch size 1, requested type "space"
  7499                           ; Number of cases is 3, Range of values is 1 to 3
  7500                           ; switch strategies available:
  7501                           ; Name         Instructions Cycles
  7502                           ; simple_byte           10     6 (average)
  7503                           ;	Chosen strategy is simple_byte
  7504  000BEC  0A01               	xorlw	1	; case 1
  7505  000BEE  E0C0               	bz	i2l3366
  7506  000BF0  0A03               	xorlw	3	; case 2
  7507  000BF2  E0C8               	bz	i2l3370
  7508  000BF4  0A01               	xorlw	1	; case 3
  7509  000BF6  E0E0               	bz	i2l3378
  7510  000BF8  D7F6               	goto	i2l467
  7511  000BFA                     __end_of_USBStdGetDscHandler:
  7512                           	opt stack 0
  7513  000BFA                     PL20:
  7514                           	opt stack 19
  7515  000BFA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7516  000BFE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7517  000C02  50E7               	movf	indf1,w,c
  7518  000C04  0012               	return	
  7519  000C06                     __end_ofPL20:
  7520                           	opt stack 0
  7521  000C06                     PL40:
  7522                           	opt stack 20
  7523  000C06  2409               	addwf	_inPipes,w,c	;volatile
  7524  000C08  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7525  000C0A  0E00               	movlw	0
  7526  000C0C  200A               	addwfc	_inPipes+1,w,c	;volatile
  7527  000C0E  6E2B               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  7528  000C10  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7529  000C14  C02B  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  7530  000C18  6AF8               	clrf	tblptru,c
  7531  000C1A  0E02               	movlw	(high __ramtop+-1)
  7532  000C1C  0012               	return	
  7533  000C1E                     __end_ofPL40:
  7534                           	opt stack 0
  7535  000C1E                     PL56:
  7536                           	opt stack 20
  7537  000C1E  6E2A               	movwf	??_USBStdGetDscHandler& (0+255),c
  7538  000C20  C02A  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  7539  000C24                     	if	1	;There is more than 1 active tblptr byte
  7540  000C24  0E03               	movlw	high __smallconst
  7541  000C26  6EF7               	movwf	tblptrh,c
  7542  000C28                     	endif
  7543  000C28                     	if	0	;tblptru may be non-zero
  7544  000C28                     	endif
  7545  000C28                     	if	0	;tblptru may be non-zero
  7546  000C28                     	endif
  7547  000C28  0009               	tblrd		*+
  7548  000C2A  CFF5 F009          	movff	tablat,_inPipes	;volatile
  7549  000C2E  6E0A               	movwf	_inPipes+1,c	;volatile
  7550  000C30  0012               	return	
  7551  000C32                     __end_ofPL56:
  7552                           	opt stack 0
  7553                           tblptru	equ	0xFF8
  7554                           tblptrh	equ	0xFF7
  7555                           tblptrl	equ	0xFF6
  7556                           tablat	equ	0xFF5
  7557                           prodh	equ	0xFF4
  7558                           prodl	equ	0xFF3
  7559                           intcon	equ	0xFF2
  7560                           postinc0	equ	0xFEE
  7561                           wreg	equ	0xFE8
  7562                           indf1	equ	0xFE7
  7563                           postdec1	equ	0xFE5
  7564                           fsr1h	equ	0xFE2
  7565                           fsr1l	equ	0xFE1
  7566                           indf2	equ	0xFDF
  7567                           postinc2	equ	0xFDE
  7568                           postdec2	equ	0xFDD
  7569                           plusw2	equ	0xFDB
  7570                           fsr2h	equ	0xFDA
  7571                           fsr2l	equ	0xFD9
  7572                           status	equ	0xFD8
  7573                           
  7574 ;; *************** function _USBStdFeatureReqHandler *****************
  7575 ;; Defined at:
  7576 ;;		line 2754 in file "picLibs/usb_device.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;		None
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  p               2   25[COMRAM] PTR struct __BDT
  7581 ;;		 -> RAM(767), NULL(0), BDT(48), 
  7582 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
  7583 ;;		 -> UEP0(1), 
  7584 ;;  current_ep_d    1   24[COMRAM] struct .
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7589 ;; Tracked objects:
  7590 ;;		On entry : 3D/2
  7591 ;;		On exit  : 3D/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7594 ;;      Params:         0       0       0       0
  7595 ;;      Locals:         5       0       0       0
  7596 ;;      Temps:          2       0       0       0
  7597 ;;      Totals:         7       0       0       0
  7598 ;;Total ram usage:        7 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    4
  7601 ;; This function calls:
  7602 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7603 ;; This function is called by:
  7604 ;;		_USBCheckStdRequest
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text42
  7609  0003D4                     __ptext42:
  7610                           	opt stack 0
  7611  0003D4                     _USBStdFeatureReqHandler:
  7612                           	opt stack 16
  7613                           
  7614                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7615                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7616                           ;usb_device.c: 2761: unsigned char* pUEP;
  7617                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7618                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7619                           
  7620                           ;incstack = 0
  7621  0003D4  0102               	movlb	2	; () banked
  7622  0003D6  0532               	decf	50,w,b	;volatile
  7623  0003D8  E10B               	bnz	i2l3426
  7624                           
  7625                           ; BSR set to: 2
  7626  0003DA  5130               	movf	48,w,b	;volatile
  7627  0003DC  0B1F               	andlw	31
  7628  0003DE  E108               	bnz	i2l3426
  7629                           
  7630                           ; BSR set to: 2
  7631                           ;usb_device.c: 2801: {
  7632                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7633  0003E0  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7634                           
  7635                           ; BSR set to: 2
  7636                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7637  0003E2  0E03               	movlw	3
  7638  0003E4  1931               	xorwf	49,w,b	;volatile
  7639  0003E6  E103               	bnz	i2l550
  7640                           
  7641                           ; BSR set to: 2
  7642                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7643  0003E8  0E01               	movlw	1
  7644  0003EA  6E25               	movwf	_RemoteWakeup,c	;volatile
  7645  0003EC  D001               	goto	i2l3426
  7646  0003EE                     i2l550:
  7647                           
  7648                           ; BSR set to: 2
  7649                           ;usb_device.c: 2805: else
  7650                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7651  0003EE  6A25               	clrf	_RemoteWakeup,c	;volatile
  7652  0003F0                     i2l3426:
  7653                           
  7654                           ; BSR set to: 2
  7655                           ;usb_device.c: 2807: }
  7656                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7657                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7658                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7659                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7660  0003F0  5132               	movf	50,w,b	;volatile
  7661  0003F2  A4D8               	btfss	status,2,c
  7662  0003F4  0012               	return	
  7663                           
  7664                           ; BSR set to: 2
  7665  0003F6  5130               	movf	48,w,b	;volatile
  7666  0003F8  0B1F               	andlw	31
  7667  0003FA  0A02               	xorlw	2
  7668  0003FC  A4D8               	btfss	status,2,c
  7669  0003FE  0012               	return	
  7670                           
  7671                           ; BSR set to: 2
  7672  000400  5134               	movf	52,w,b	;volatile
  7673  000402  0B0F               	andlw	15
  7674  000404  B4D8               	btfsc	status,2,c
  7675  000406  0012               	return	
  7676                           
  7677                           ; BSR set to: 2
  7678  000408  5134               	movf	52,w,b	;volatile
  7679  00040A  0B0F               	andlw	15
  7680  00040C  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7681  00040E  0E03               	movlw	3
  7682  000410  603E               	cpfslt	??_USBStdFeatureReqHandler,c
  7683  000412  0C03               	retlw	3
  7684                           
  7685                           ; BSR set to: 2
  7686  000414  0E20               	movlw	32
  7687  000416  0100               	movlb	0	; () banked
  7688  000418  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
  7689  00041A  A4D8               	btfss	status,2,c
  7690  00041C  0012               	return	
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;usb_device.c: 2814: {
  7694                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7695  00041E  8E0C               	bsf	_inPipes+3,7,c	;volatile
  7696                           
  7697                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7698  000420  0102               	movlb	2	; () banked
  7699  000422  BF34               	btfsc	52,7,b	;volatile
  7700  000424  D007               	goto	i2l3442
  7701                           
  7702                           ; BSR set to: 2
  7703                           ;usb_device.c: 2821: {
  7704                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7705  000426  5134               	movf	52,w,b	;volatile
  7706  000428  0B0F               	andlw	15
  7707  00042A  EC60  F006         	call	PL34	;call to abstracted procedure
  7708                           
  7709                           ; BSR set to: 2
  7710                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7711  00042E  D88B               	call	PL64	;call to abstracted procedure
  7712  000430  0F70               	addlw	low _ep_data_out
  7713  000432  D006               	goto	L6
  7714  000434                     i2l3442:
  7715                           
  7716                           ; BSR set to: 2
  7717                           ;usb_device.c: 2825: else
  7718                           ;usb_device.c: 2826: {
  7719                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7720  000434  5134               	movf	52,w,b	;volatile
  7721  000436  0B0F               	andlw	15
  7722  000438  EC5A  F006         	call	PL30	;call to abstracted procedure
  7723                           
  7724                           ; BSR set to: 2
  7725                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7726  00043C  D884               	call	PL64	;call to abstracted procedure
  7727  00043E  0F73               	addlw	low _ep_data_in
  7728  000440                     L6:
  7729  000440  6ED9               	movwf	fsr2l,c
  7730  000442  6ADA               	clrf	fsr2h,c
  7731  000444  50DF               	movf	indf2,w,c
  7732  000446  6E42               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  7733                           
  7734                           ; BSR set to: 2
  7735                           ;usb_device.c: 2829: }
  7736                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7737  000448  B042               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  7738  00044A  D003               	goto	i2l3450
  7739                           
  7740                           ; BSR set to: 2
  7741                           ;usb_device.c: 2836: {
  7742                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7743  00044C  0EFB               	movlw	251
  7744  00044E  1643               	andwf	USBStdFeatureReqHandler@p,f,c
  7745  000450  D002               	goto	L7
  7746  000452                     i2l3450:
  7747                           
  7748                           ; BSR set to: 2
  7749                           ;usb_device.c: 2839: else
  7750                           ;usb_device.c: 2840: {
  7751                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7752  000452  0E04               	movlw	4
  7753  000454  1243               	iorwf	USBStdFeatureReqHandler@p,f,c
  7754  000456                     L7:
  7755  000456  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7756                           
  7757                           ; BSR set to: 2
  7758                           ;usb_device.c: 2842: }
  7759                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7760  000458  BF34               	btfsc	52,7,b	;volatile
  7761  00045A  D003               	goto	i2l3456
  7762                           
  7763                           ; BSR set to: 2
  7764                           ;usb_device.c: 2848: {
  7765                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7766  00045C  D882               	call	PL72	;call to abstracted procedure
  7767  00045E  0F60               	addlw	low _pBDTEntryOut
  7768  000460  D002               	goto	L8
  7769  000462                     i2l3456:
  7770                           
  7771                           ; BSR set to: 2
  7772                           ;usb_device.c: 2851: else
  7773                           ;usb_device.c: 2852: {
  7774                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7775  000462  D87F               	call	PL72	;call to abstracted procedure
  7776  000464  0F0F               	addlw	low _pBDTEntryIn
  7777  000466                     L8:
  7778  000466  6ED9               	movwf	fsr2l,c
  7779  000468  6ADA               	clrf	fsr2h,c
  7780  00046A  C043  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  7781  00046E  C044  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  7782                           
  7783                           ; BSR set to: 2
  7784                           ;usb_device.c: 2854: }
  7785                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7786  000472  0E03               	movlw	3
  7787  000474  1931               	xorwf	49,w,b	;volatile
  7788  000476  E114               	bnz	i2l3468
  7789                           
  7790                           ; BSR set to: 2
  7791                           ;usb_device.c: 2858: {
  7792                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7793  000478  D856               	call	PL24	;call to abstracted procedure
  7794  00047A  AEDF               	btfss	indf2,7,c
  7795  00047C  D00B               	goto	i2l560
  7796                           
  7797                           ; BSR set to: 2
  7798                           ;usb_device.c: 2860: {
  7799                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7800  00047E  BF34               	btfsc	52,7,b	;volatile
  7801  000480  D003               	goto	i2l3466
  7802                           
  7803                           ; BSR set to: 2
  7804                           ;usb_device.c: 2864: {
  7805                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7806  000482  D86A               	call	PL70	;call to abstracted procedure
  7807  000484  0F70               	addlw	low _ep_data_out
  7808  000486  D002               	goto	L9
  7809  000488                     i2l3466:
  7810                           
  7811                           ; BSR set to: 2
  7812                           ;usb_device.c: 2867: else
  7813                           ;usb_device.c: 2868: {
  7814                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7815  000488  D867               	call	PL70	;call to abstracted procedure
  7816  00048A  0F73               	addlw	low _ep_data_in
  7817  00048C                     L9:
  7818  00048C  6ED9               	movwf	fsr2l,c
  7819  00048E  6ADA               	clrf	fsr2h,c
  7820  000490  0100               	movlb	0	; () banked
  7821  000492  82DF               	bsf	indf2,1,c
  7822  000494                     i2l560:
  7823                           
  7824                           ;usb_device.c: 2870: }
  7825                           ;usb_device.c: 2871: }
  7826                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7827  000494  D848               	call	PL24	;call to abstracted procedure
  7828  000496  0E00               	movlw	0
  7829  000498  84DB               	bsf	plusw2,2,c
  7830                           
  7831                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7832  00049A  D845               	call	PL24	;call to abstracted procedure
  7833  00049C  8EDB               	bsf	plusw2,7,c
  7834                           
  7835                           ;usb_device.c: 2876: }
  7836  00049E  0C00               	retlw	0
  7837  0004A0                     i2l3468:
  7838                           
  7839                           ; BSR set to: 2
  7840                           ;usb_device.c: 2877: else
  7841                           ;usb_device.c: 2878: {
  7842                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7843  0004A0  0E04               	movlw	4
  7844  0004A2  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7845  0004A4  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7846                           
  7847                           ; BSR set to: 2
  7848                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7849  0004A6  D83F               	call	PL24	;call to abstracted procedure
  7850  0004A8  AEDF               	btfss	indf2,7,c
  7851  0004AA  D00A               	goto	i2l3478
  7852                           
  7853                           ; BSR set to: 2
  7854                           ;usb_device.c: 2885: {
  7855                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7856  0004AC  D83C               	call	PL24	;call to abstracted procedure
  7857  0004AE  0E7F               	movlw	127
  7858  0004B0  16DF               	andwf	indf2,f,c
  7859                           
  7860                           ; BSR set to: 2
  7861                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7862  0004B2  D839               	call	PL24	;call to abstracted procedure
  7863  0004B4  0E00               	movlw	0
  7864  0004B6  8CDB               	bsf	plusw2,6,c
  7865                           
  7866                           ; BSR set to: 2
  7867                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7868  0004B8  D83B               	call	PL52	;call to abstracted procedure
  7869  0004BA  ECFA  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7870                           
  7871                           ;usb_device.c: 2891: }
  7872  0004BE  D003               	goto	i2l3480
  7873  0004C0                     i2l3478:
  7874                           
  7875                           ; BSR set to: 2
  7876                           ;usb_device.c: 2892: else
  7877                           ;usb_device.c: 2893: {
  7878                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7879  0004C0  D832               	call	PL24	;call to abstracted procedure
  7880  0004C2  0E00               	movlw	0
  7881  0004C4  8CDB               	bsf	plusw2,6,c
  7882  0004C6                     i2l3480:
  7883                           
  7884                           ;usb_device.c: 2896: }
  7885                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7886  0004C6  0E04               	movlw	4
  7887  0004C8  1A43               	xorwf	USBStdFeatureReqHandler@p,f,c
  7888  0004CA  5044               	movf	USBStdFeatureReqHandler@p+1,w,c
  7889                           
  7890                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7891  0004CC  B242               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  7892  0004CE  D003               	goto	i2l568
  7893  0004D0  D82A               	call	PL24	;call to abstracted procedure
  7894  0004D2  AEDF               	btfss	indf2,7,c
  7895  0004D4  D013               	goto	i2l3494
  7896  0004D6                     i2l568:
  7897                           
  7898                           ;usb_device.c: 2907: {
  7899                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7900  0004D6  0102               	movlb	2	; () banked
  7901  0004D8  BF34               	btfsc	52,7,b	;volatile
  7902  0004DA  D003               	goto	i2l3488
  7903                           
  7904                           ; BSR set to: 2
  7905                           ;usb_device.c: 2909: {
  7906                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7907  0004DC  D83D               	call	PL70	;call to abstracted procedure
  7908  0004DE  0F70               	addlw	low _ep_data_out
  7909  0004E0  D002               	goto	L10
  7910  0004E2                     i2l3488:
  7911                           
  7912                           ; BSR set to: 2
  7913                           ;usb_device.c: 2912: else
  7914                           ;usb_device.c: 2913: {
  7915                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7916  0004E2  D83A               	call	PL70	;call to abstracted procedure
  7917  0004E4  0F73               	addlw	low _ep_data_in
  7918  0004E6                     L10:
  7919  0004E6  6ED9               	movwf	fsr2l,c
  7920  0004E8  6ADA               	clrf	fsr2h,c
  7921  0004EA  0100               	movlb	0	; () banked
  7922  0004EC  92DF               	bcf	indf2,1,c
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;usb_device.c: 2915: }
  7926                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7927  0004EE  D81B               	call	PL24	;call to abstracted procedure
  7928  0004F0  0E3B               	movlw	59
  7929  0004F2  16DF               	andwf	indf2,f,c
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7933  0004F4  D81D               	call	PL52	;call to abstracted procedure
  7934  0004F6  ECFA  F00A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7935                           
  7936                           ;usb_device.c: 2921: }
  7937  0004FA  D003               	goto	i2l3496
  7938  0004FC                     i2l3494:
  7939                           
  7940                           ;usb_device.c: 2922: else
  7941                           ;usb_device.c: 2923: {
  7942                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7943  0004FC  D814               	call	PL24	;call to abstracted procedure
  7944  0004FE  0E3B               	movlw	59
  7945  000500  16DF               	andwf	indf2,f,c
  7946  000502                     i2l3496:
  7947                           
  7948                           ;usb_device.c: 2926: }
  7949                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7950  000502  0102               	movlb	2	; () banked
  7951  000504  5134               	movf	52,w,b	;volatile
  7952  000506  0B0F               	andlw	15
  7953  000508  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7954  00050A  6A3F               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  7955  00050C  0E53               	movlw	83
  7956  00050E  243E               	addwf	??_USBStdFeatureReqHandler,w,c
  7957  000510  6E40               	movwf	USBStdFeatureReqHandler@pUEP,c
  7958  000512  0E0F               	movlw	15
  7959  000514  203F               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  7960  000516  6E41               	movwf	USBStdFeatureReqHandler@pUEP+1,c
  7961                           
  7962                           ; BSR set to: 2
  7963                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7964  000518  C040  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7965  00051C  C041  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7966  000520  0EFE               	movlw	254
  7967  000522  16DF               	andwf	indf2,f,c
  7968  000524  0CFE               	retlw	254	;funcret
  7969  000526                     __end_of_USBStdFeatureReqHandler:
  7970                           	opt stack 0
  7971  000526                     PL24:
  7972                           	opt stack 16
  7973  000526  C043  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7974  00052A  C044  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7975  00052E  0012               	return	
  7976  000530                     __end_ofPL24:
  7977                           	opt stack 0
  7978  000530                     PL52:
  7979                           	opt stack 16
  7980  000530  6A37               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  7981  000532  0E05               	movlw	5
  7982  000534  6E36               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  7983  000536  C043  F038         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7984  00053A  C044  F039         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7985  00053E  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  7986  000540  0E02               	movlw	2
  7987  000542  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  7988  000544  0C02               	retlw	2
  7989  000546                     __end_ofPL52:
  7990                           	opt stack 0
  7991  000546                     PL64:
  7992                           	opt stack 16
  7993  000546  CFDE F043          	movff	postinc2,USBStdFeatureReqHandler@p
  7994  00054A  CFDD F044          	movff	postdec2,USBStdFeatureReqHandler@p+1
  7995  00054E  5134               	movf	52,w,b	;volatile
  7996  000550  0B0F               	andlw	15
  7997  000552  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  7998  000554  503E               	movf	??_USBStdFeatureReqHandler,w,c
  7999  000556  0012               	return	
  8000  000558                     __end_ofPL64:
  8001                           	opt stack 0
  8002  000558                     PL70:
  8003                           	opt stack 16
  8004  000558  5134               	movf	52,w,b	;volatile
  8005  00055A  0B0F               	andlw	15
  8006  00055C  6E3E               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8007  00055E  503E               	movf	??_USBStdFeatureReqHandler,w,c
  8008  000560  0012               	return	
  8009  000562                     __end_ofPL70:
  8010                           	opt stack 0
  8011  000562                     PL72:
  8012                           	opt stack 20
  8013  000562  5134               	movf	52,w,b	;volatile
  8014  000564  0B0F               	andlw	15
  8015  000566  0D02               	mullw	2
  8016  000568  50F3               	movf	prodl,w,c
  8017  00056A  0012               	return	
  8018  00056C                     __end_ofPL72:
  8019                           	opt stack 0
  8020                           tblptru	equ	0xFF8
  8021                           tblptrh	equ	0xFF7
  8022                           tblptrl	equ	0xFF6
  8023                           tablat	equ	0xFF5
  8024                           prodh	equ	0xFF4
  8025                           prodl	equ	0xFF3
  8026                           intcon	equ	0xFF2
  8027                           postinc0	equ	0xFEE
  8028                           wreg	equ	0xFE8
  8029                           indf1	equ	0xFE7
  8030                           postdec1	equ	0xFE5
  8031                           fsr1h	equ	0xFE2
  8032                           fsr1l	equ	0xFE1
  8033                           indf2	equ	0xFDF
  8034                           postinc2	equ	0xFDE
  8035                           postdec2	equ	0xFDD
  8036                           plusw2	equ	0xFDB
  8037                           fsr2h	equ	0xFDA
  8038                           fsr2l	equ	0xFD9
  8039                           status	equ	0xFD8
  8040                           
  8041 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  8042 ;; Defined at:
  8043 ;;		line 51 in file "picLibs/usb_events.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  event           2   12[COMRAM] enum E3370
  8046 ;;  pdata           2   14[COMRAM] PTR void 
  8047 ;;		 -> RAM(767), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  8048 ;;		 -> BDT(48), 
  8049 ;;  size            2   16[COMRAM] unsigned int 
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;		None
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1    wreg      unsigned char 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8061 ;;      Params:         6       0       0       0
  8062 ;;      Locals:         0       0       0       0
  8063 ;;      Temps:          2       0       0       0
  8064 ;;      Totals:         8       0       0       0
  8065 ;;Total ram usage:        8 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:    3
  8068 ;; This function calls:
  8069 ;;		_APP_DeviceCDCBasicDemoInitialize
  8070 ;;		_APP_LEDUpdateUSBStatus
  8071 ;;		_CDCInitEP
  8072 ;;		_USBCheckCDCRequest
  8073 ;;		i2_SYSTEM_Initialize
  8074 ;; This function is called by:
  8075 ;;		_USBDeviceTasks
  8076 ;;		_USBStdSetCfgHandler
  8077 ;;		_USBSuspend
  8078 ;;		_USBWakeFromSuspend
  8079 ;;		_USBCtrlTrfSetupHandler
  8080 ;;		_USBCheckStdRequest
  8081 ;;		_USBStdFeatureReqHandler
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text43
  8086  0015F4                     __ptext43:
  8087                           	opt stack 0
  8088  0015F4                     _USER_USB_CALLBACK_EVENT_HANDLER:
  8089                           	opt stack 20
  8090                           
  8091                           ;usb_events.c: 53: switch( (int) event )
  8092                           
  8093                           ;incstack = 0
  8094  0015F4  D00E               	goto	i2l3208
  8095  0015F6                     i2l3196:
  8096                           
  8097                           ;usb_events.c: 66: APP_LEDUpdateUSBStatus();
  8098  0015F6  EC8B  F00A         	call	_APP_LEDUpdateUSBStatus	;wreg free
  8099                           
  8100                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  8101  0015FA  0E01               	movlw	1
  8102  0015FC  EF8B  F00D         	goto	i2_SYSTEM_Initialize
  8103  001600                     i2l3198:
  8104                           
  8105                           ;usb_events.c: 79: APP_LEDUpdateUSBStatus();
  8106  001600  EC8B  F00A         	call	_APP_LEDUpdateUSBStatus	;wreg free
  8107                           
  8108                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  8109  001604  0E02               	movlw	2
  8110  001606  EF8B  F00D         	goto	i2_SYSTEM_Initialize
  8111  00160A                     i2l3200:
  8112                           
  8113                           ;usb_events.c: 91: CDCInitEP();
  8114  00160A  ECE7  F00B         	call	_CDCInitEP	;wreg free
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;usb_events.c: 92: APP_DeviceCDCBasicDemoInitialize();
  8118  00160E  EFD1  F00D         	goto	_APP_DeviceCDCBasicDemoInitialize	;wreg free
  8119  001612                     i2l3208:
  8120  001612  C036  F03C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  8121  001616  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  8122                           
  8123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8124                           ; Switch size 1, requested type "space"
  8125                           ; Number of cases is 2, Range of values is 0 to 127
  8126                           ; switch strategies available:
  8127                           ; Name         Instructions Cycles
  8128                           ; simple_byte            7     4 (average)
  8129                           ;	Chosen strategy is simple_byte
  8130  00161A  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
  8131  00161C  E004               	bz	i2l5124
  8132  00161E  0A7F               	xorlw	127	; case 127
  8133  001620  A4D8               	btfss	status,2,c
  8134  001622  0012               	return	
  8135  001624  D01A               	goto	i2l5126
  8136  001626                     i2l5124:
  8137                           
  8138                           ; Switch size 1, requested type "space"
  8139                           ; Number of cases is 8, Range of values is 1 to 117
  8140                           ; switch strategies available:
  8141                           ; Name         Instructions Cycles
  8142                           ; simple_byte           25    13 (average)
  8143                           ;	Chosen strategy is simple_byte
  8144  001626  503C               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  8145  001628  0A01               	xorlw	1	; case 1
  8146  00162A  E0EF               	bz	i2l3200
  8147  00162C  0A03               	xorlw	3	; case 2
  8148  00162E  B4D8               	btfsc	status,2,c
  8149  001630  0012               	return	
  8150  001632  0A01               	xorlw	1	; case 3
  8151  001634  E102 EF61  F009    	bz	_USBCheckCDCRequest
  8152  00163A  0A06               	xorlw	6	; case 5
  8153  00163C  B4D8               	btfsc	status,2,c
  8154  00163E  0012               	return	
  8155  001640  0A77               	xorlw	119	; case 114
  8156  001642  B4D8               	btfsc	status,2,c
  8157  001644  0012               	return	
  8158  001646  0A01               	xorlw	1	; case 115
  8159  001648  E102 EF8B  F00A    	bz	_APP_LEDUpdateUSBStatus
  8160  00164E  0A07               	xorlw	7	; case 116
  8161  001650  E0D7               	bz	i2l3198
  8162  001652  0A01               	xorlw	1	; case 117
  8163  001654  A4D8               	btfss	status,2,c
  8164  001656  0012               	return	
  8165  001658  D7CE               	goto	i2l3196
  8166  00165A                     i2l5126:
  8167                           
  8168                           ; Switch size 1, requested type "space"
  8169                           ; Number of cases is 1, Range of values is 255 to 255
  8170                           ; switch strategies available:
  8171                           ; Name         Instructions Cycles
  8172                           ; simple_byte            4     3 (average)
  8173                           ;	Chosen strategy is simple_byte
  8174  00165A  1C3C               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
  8175  00165C  0012               	return	
  8176  00165E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  8177                           	opt stack 0
  8178                           tblptru	equ	0xFF8
  8179                           tblptrh	equ	0xFF7
  8180                           tblptrl	equ	0xFF6
  8181                           tablat	equ	0xFF5
  8182                           prodh	equ	0xFF4
  8183                           prodl	equ	0xFF3
  8184                           intcon	equ	0xFF2
  8185                           postinc0	equ	0xFEE
  8186                           wreg	equ	0xFE8
  8187                           indf1	equ	0xFE7
  8188                           postdec1	equ	0xFE5
  8189                           fsr1h	equ	0xFE2
  8190                           fsr1l	equ	0xFE1
  8191                           indf2	equ	0xFDF
  8192                           postinc2	equ	0xFDE
  8193                           postdec2	equ	0xFDD
  8194                           plusw2	equ	0xFDB
  8195                           fsr2h	equ	0xFDA
  8196                           fsr2l	equ	0xFD9
  8197                           status	equ	0xFD8
  8198                           
  8199 ;; *************** function i2_SYSTEM_Initialize *****************
  8200 ;; Defined at:
  8201 ;;		line 66 in file "picLibs/system.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  state           1    wreg     enum E3329
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  state           1    1[COMRAM] enum E3329
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0, cstack
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8215 ;;      Params:         0       0       0       0
  8216 ;;      Locals:         1       0       0       0
  8217 ;;      Temps:          0       0       0       0
  8218 ;;      Totals:         1       0       0       0
  8219 ;;Total ram usage:        1 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    1
  8222 ;; This function calls:
  8223 ;;		i2_BUTTON_Enable
  8224 ;;		i2_LED_Enable
  8225 ;; This function is called by:
  8226 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230                           	psect	text44
  8231  001B16                     __ptext44:
  8232                           	opt stack 0
  8233  001B16                     i2_SYSTEM_Initialize:
  8234                           	opt stack 21
  8235                           
  8236                           ;incstack = 0
  8237                           ;i2SYSTEM_Initialize@state stored from wreg
  8238  001B16  6E2B               	movwf	i2SYSTEM_Initialize@state,c
  8239                           
  8240                           ;system.c: 68: switch(state)
  8241  001B18  D006               	goto	i2l3190
  8242  001B1A                     i2l3186:
  8243                           
  8244                           ;system.c: 71: LED_Enable(LED_D1);
  8245  001B1A  0E01               	movlw	1
  8246  001B1C  ECEE  F00C         	call	i2_LED_Enable
  8247                           
  8248                           ;system.c: 72: BUTTON_Enable(BUTTON_S1);
  8249  001B20  0E01               	movlw	1
  8250  001B22  EFEE  F00D         	goto	i2_BUTTON_Enable
  8251  001B26                     i2l3190:
  8252  001B26  502B               	movf	i2SYSTEM_Initialize@state,w,c
  8253                           
  8254                           ; Switch size 1, requested type "space"
  8255                           ; Number of cases is 3, Range of values is 0 to 2
  8256                           ; switch strategies available:
  8257                           ; Name         Instructions Cycles
  8258                           ; simple_byte           10     6 (average)
  8259                           ;	Chosen strategy is simple_byte
  8260  001B28  E0F8               	bz	i2l3186
  8261  001B2A  D000               	goto	PL116	;call to abstracted procedure
  8262  001B2C                     __end_ofi2_SYSTEM_Initialize:
  8263                           	opt stack 0
  8264  001B2C                     PL116:
  8265                           	opt stack 19
  8266  001B2C  0A01               	xorlw	1	; case 1
  8267  001B2E  A4D8               	btfss	status,2,c
  8268  001B30  0A03               	xorlw	3	; case 2
  8269  001B32  0012               	return	
  8270  001B34                     __end_ofPL116:
  8271                           	opt stack 0
  8272                           tblptru	equ	0xFF8
  8273                           tblptrh	equ	0xFF7
  8274                           tblptrl	equ	0xFF6
  8275                           tablat	equ	0xFF5
  8276                           prodh	equ	0xFF4
  8277                           prodl	equ	0xFF3
  8278                           intcon	equ	0xFF2
  8279                           postinc0	equ	0xFEE
  8280                           wreg	equ	0xFE8
  8281                           indf1	equ	0xFE7
  8282                           postdec1	equ	0xFE5
  8283                           fsr1h	equ	0xFE2
  8284                           fsr1l	equ	0xFE1
  8285                           indf2	equ	0xFDF
  8286                           postinc2	equ	0xFDE
  8287                           postdec2	equ	0xFDD
  8288                           plusw2	equ	0xFDB
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function i2_LED_Enable *****************
  8294 ;; Defined at:
  8295 ;;		line 220 in file "picLibs/leds.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  led             1    wreg     enum E2
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;  led             1    0[COMRAM] enum E2
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      void 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2, status,0
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8309 ;;      Params:         0       0       0       0
  8310 ;;      Locals:         1       0       0       0
  8311 ;;      Temps:          0       0       0       0
  8312 ;;      Totals:         1       0       0       0
  8313 ;;Total ram usage:        1 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		i2_SYSTEM_Initialize
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           	psect	text45
  8323  0019DC                     __ptext45:
  8324                           	opt stack 0
  8325  0019DC                     i2_LED_Enable:
  8326                           	opt stack 21
  8327                           
  8328                           ;incstack = 0
  8329                           ;i2LED_Enable@led stored from wreg
  8330  0019DC  6E2A               	movwf	i2LED_Enable@led,c
  8331                           
  8332                           ;leds.c: 222: switch(led)
  8333  0019DE  D008               	goto	i2l3046
  8334  0019E0                     i2l145:
  8335                           
  8336                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  8337  0019E0  9094               	bcf	3988,0,c	;volatile
  8338                           
  8339                           ;leds.c: 226: break;
  8340  0019E2  0012               	return	
  8341  0019E4                     i2l147:
  8342                           
  8343                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  8344  0019E4  9294               	bcf	3988,1,c	;volatile
  8345                           
  8346                           ;leds.c: 230: break;
  8347  0019E6  0012               	return	
  8348  0019E8                     i2l148:
  8349                           
  8350                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  8351  0019E8  9494               	bcf	3988,2,c	;volatile
  8352                           
  8353                           ;leds.c: 234: break;
  8354  0019EA  0012               	return	
  8355  0019EC                     i2l149:
  8356                           
  8357                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  8358  0019EC  9694               	bcf	3988,3,c	;volatile
  8359                           
  8360                           ;leds.c: 238: break;
  8361  0019EE  0012               	return	
  8362  0019F0                     i2l3046:
  8363  0019F0  502A               	movf	i2LED_Enable@led,w,c
  8364                           
  8365                           ; Switch size 1, requested type "space"
  8366                           ; Number of cases is 5, Range of values is 0 to 4
  8367                           ; switch strategies available:
  8368                           ; Name         Instructions Cycles
  8369                           ; simple_byte           16     9 (average)
  8370                           ;	Chosen strategy is simple_byte
  8371  0019F2  B4D8               	btfsc	status,2,c
  8372  0019F4  0012               	return	
  8373  0019F6  0A01               	xorlw	1	; case 1
  8374  0019F8  E0F3               	bz	i2l145
  8375  0019FA  0A03               	xorlw	3	; case 2
  8376  0019FC  E0F3               	bz	i2l147
  8377  0019FE  0A01               	xorlw	1	; case 3
  8378  001A00  E0F3               	bz	i2l148
  8379  001A02  0A07               	xorlw	7	; case 4
  8380  001A04  E0F3               	bz	i2l149
  8381  001A06  0012               	return		;funcret
  8382  001A08                     __end_ofi2_LED_Enable:
  8383                           	opt stack 0
  8384                           tblptru	equ	0xFF8
  8385                           tblptrh	equ	0xFF7
  8386                           tblptrl	equ	0xFF6
  8387                           tablat	equ	0xFF5
  8388                           prodh	equ	0xFF4
  8389                           prodl	equ	0xFF3
  8390                           intcon	equ	0xFF2
  8391                           postinc0	equ	0xFEE
  8392                           wreg	equ	0xFE8
  8393                           indf1	equ	0xFE7
  8394                           postdec1	equ	0xFE5
  8395                           fsr1h	equ	0xFE2
  8396                           fsr1l	equ	0xFE1
  8397                           indf2	equ	0xFDF
  8398                           postinc2	equ	0xFDE
  8399                           postdec2	equ	0xFDD
  8400                           plusw2	equ	0xFDB
  8401                           fsr2h	equ	0xFDA
  8402                           fsr2l	equ	0xFD9
  8403                           status	equ	0xFD8
  8404                           
  8405 ;; *************** function i2_BUTTON_Enable *****************
  8406 ;; Defined at:
  8407 ;;		line 85 in file "picLibs/buttons.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  button          1    wreg     enum E3304
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;  button          1    0[COMRAM] enum E3304
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  1    wreg      void 
  8414 ;; Registers used:
  8415 ;;		wreg, status,2, status,0
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8421 ;;      Params:         0       0       0       0
  8422 ;;      Locals:         1       0       0       0
  8423 ;;      Temps:          0       0       0       0
  8424 ;;      Totals:         1       0       0       0
  8425 ;;Total ram usage:        1 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		i2_SYSTEM_Initialize
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           	psect	text46
  8435  001BDC                     __ptext46:
  8436                           	opt stack 0
  8437  001BDC                     i2_BUTTON_Enable:
  8438                           	opt stack 21
  8439                           
  8440                           ;incstack = 0
  8441                           ;i2BUTTON_Enable@button stored from wreg
  8442  001BDC  6E2A               	movwf	i2BUTTON_Enable@button,c
  8443                           
  8444                           ;buttons.c: 87: switch(button)
  8445  001BDE  502A               	movf	i2BUTTON_Enable@button,w,c
  8446                           
  8447                           ; Switch size 1, requested type "space"
  8448                           ; Number of cases is 2, Range of values is 0 to 1
  8449                           ; switch strategies available:
  8450                           ; Name         Instructions Cycles
  8451                           ; simple_byte            7     4 (average)
  8452                           ;	Chosen strategy is simple_byte
  8453  001BE0  D000               	goto	PL132	;call to abstracted procedure
  8454  001BE2                     __end_ofi2_BUTTON_Enable:
  8455                           	opt stack 0
  8456  001BE2                     PL132:
  8457                           	opt stack 19
  8458  001BE2  A4D8               	btfss	status,2,c
  8459  001BE4  0A01               	xorlw	1	; case 1
  8460  001BE6  0012               	return	
  8461  001BE8                     __end_ofPL132:
  8462                           	opt stack 0
  8463                           tblptru	equ	0xFF8
  8464                           tblptrh	equ	0xFF7
  8465                           tblptrl	equ	0xFF6
  8466                           tablat	equ	0xFF5
  8467                           prodh	equ	0xFF4
  8468                           prodl	equ	0xFF3
  8469                           intcon	equ	0xFF2
  8470                           postinc0	equ	0xFEE
  8471                           wreg	equ	0xFE8
  8472                           indf1	equ	0xFE7
  8473                           postdec1	equ	0xFE5
  8474                           fsr1h	equ	0xFE2
  8475                           fsr1l	equ	0xFE1
  8476                           indf2	equ	0xFDF
  8477                           postinc2	equ	0xFDE
  8478                           postdec2	equ	0xFDD
  8479                           plusw2	equ	0xFDB
  8480                           fsr2h	equ	0xFDA
  8481                           fsr2l	equ	0xFD9
  8482                           status	equ	0xFD8
  8483                           
  8484 ;; *************** function _USBCheckCDCRequest *****************
  8485 ;; Defined at:
  8486 ;;		line 147 in file "picLibs/usb_device_cdc.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2, status,0
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 3F/2
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8500 ;;      Params:         0       0       0       0
  8501 ;;      Locals:         0       0       0       0
  8502 ;;      Temps:          0       0       0       0
  8503 ;;      Totals:         0       0       0       0
  8504 ;;Total ram usage:        0 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text47
  8514  0012C2                     __ptext47:
  8515                           	opt stack 0
  8516  0012C2                     _USBCheckCDCRequest:
  8517                           	opt stack 22
  8518                           
  8519                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8520                           
  8521                           ;incstack = 0
  8522  0012C2  0102               	movlb	2	; () banked
  8523  0012C4  5130               	movf	48,w,b	;volatile
  8524  0012C6  0B1F               	andlw	31
  8525  0012C8  06E8               	decf	wreg,f,c
  8526  0012CA  E001               	bz	i2l3124
  8527  0012CC  0012               	return	
  8528  0012CE                     i2l3124:
  8529                           
  8530                           ; BSR set to: 2
  8531                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  8532  0012CE  3930               	swapf	48,w,b	;volatile
  8533  0012D0  32E8               	rrcf	wreg,f,c
  8534  0012D2  0B03               	andlw	3
  8535  0012D4  06E8               	decf	wreg,f,c
  8536  0012D6  E001               	bz	i2l3128
  8537  0012D8  0012               	return	
  8538  0012DA                     i2l3128:
  8539                           
  8540                           ; BSR set to: 2
  8541                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  8542                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  8543  0012DA  5134               	movf	52,w,b	;volatile
  8544  0012DC  E027               	bz	i2l3164
  8545                           
  8546                           ; BSR set to: 2
  8547  0012DE  0534               	decf	52,w,b	;volatile
  8548  0012E0  E025               	bz	i2l3164
  8549  0012E2  0012               	return	
  8550  0012E4                     i2l3134:
  8551                           
  8552                           ; BSR set to: 2
  8553                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8554  0012E4  0EC2               	movlw	low _dummy_encapsulated_cmd_response
  8555  0012E6  6E09               	movwf	_inPipes,c	;volatile
  8556  0012E8  6A0A               	clrf	_inPipes+1,c	;volatile
  8557                           
  8558                           ; BSR set to: 2
  8559                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  8560  0012EA  6A0E               	clrf	_inPipes+5,c	;volatile
  8561  0012EC  0E08               	movlw	8
  8562  0012EE  6E0D               	movwf	_inPipes+4,c	;volatile
  8563                           
  8564                           ; BSR set to: 2
  8565                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8566  0012F0  800C               	bsf	_inPipes+3,0,c	;volatile
  8567                           
  8568                           ; BSR set to: 2
  8569                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  8570  0012F2  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8571                           
  8572                           ;usb_device_cdc.c: 175: break;
  8573  0012F4  0C08               	retlw	8
  8574  0012F6                     i2l3142:
  8575                           
  8576                           ; BSR set to: 2
  8577                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8578  0012F6  0EC2               	movlw	low _dummy_encapsulated_cmd_response
  8579  0012F8  6E09               	movwf	_inPipes,c	;volatile
  8580  0012FA  6A0A               	clrf	_inPipes+1,c	;volatile
  8581                           
  8582                           ; BSR set to: 2
  8583                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  8584  0012FC  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8585                           
  8586                           ;usb_device_cdc.c: 180: break;
  8587  0012FE  0012               	return	
  8588  001300                     i2l635:
  8589                           
  8590                           ; BSR set to: 2
  8591                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  8592  001300  C236 F005          	movff	566,_outPipes+4	;volatile
  8593  001304  C237 F006          	movff	567,_outPipes+5	;volatile
  8594                           
  8595                           ; BSR set to: 2
  8596                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8597  001308  0ECA               	movlw	low _line_coding
  8598  00130A  6E01               	movwf	_outPipes,c	;volatile
  8599                           
  8600                           ; BSR set to: 2
  8601                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  8602  00130C  6A07               	clrf	_outPipes+6,c	;volatile
  8603  00130E  6A08               	clrf	_outPipes+7,c	;volatile
  8604                           
  8605                           ; BSR set to: 2
  8606                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  8607  001310  8E04               	bsf	_outPipes+3,7,c	;volatile
  8608                           
  8609                           ;usb_device_cdc.c: 189: break;
  8610  001312  0012               	return	
  8611  001314                     i2l3152:
  8612                           
  8613                           ; BSR set to: 2
  8614                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8615  001314  0ECA               	movlw	low _line_coding
  8616  001316  6E09               	movwf	_inPipes,c	;volatile
  8617  001318  6A0A               	clrf	_inPipes+1,c	;volatile
  8618                           
  8619                           ; BSR set to: 2
  8620  00131A  6A0E               	clrf	_inPipes+5,c	;volatile
  8621  00131C  0E07               	movlw	7
  8622  00131E  6E0D               	movwf	_inPipes+4,c	;volatile
  8623                           
  8624                           ; BSR set to: 2
  8625  001320  0EC1               	movlw	193
  8626  001322  6E0C               	movwf	_inPipes+3,c	;volatile
  8627                           
  8628                           ;usb_device_cdc.c: 196: break;
  8629  001324  0CC1               	retlw	193
  8630  001326                     i2l3158:
  8631                           
  8632                           ; BSR set to: 2
  8633                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8634  001326  5132               	movf	50,w,b	;volatile
  8635                           
  8636                           ; BSR set to: 2
  8637                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8638  001328  8E0C               	bsf	_inPipes+3,7,c	;volatile
  8639                           
  8640                           ;usb_device_cdc.c: 232: break;
  8641  00132A  0012               	return	
  8642  00132C                     i2l3164:
  8643                           
  8644                           ; BSR set to: 2
  8645  00132C  5131               	movf	49,w,b	;volatile
  8646                           
  8647                           ; Switch size 1, requested type "space"
  8648                           ; Number of cases is 5, Range of values is 0 to 34
  8649                           ; switch strategies available:
  8650                           ; Name         Instructions Cycles
  8651                           ; simple_byte           16     9 (average)
  8652                           ;	Chosen strategy is simple_byte
  8653  00132E  E0DA               	bz	i2l3134
  8654  001330  0A01               	xorlw	1	; case 1
  8655  001332  E0E1               	bz	i2l3142
  8656  001334  0A21               	xorlw	33	; case 32
  8657  001336  E0E4               	bz	i2l635
  8658  001338  0A01               	xorlw	1	; case 33
  8659  00133A  E0EC               	bz	i2l3152
  8660  00133C  0A03               	xorlw	3	; case 34
  8661  00133E  E0F3               	bz	i2l3158
  8662                           
  8663                           ; BSR set to: 2
  8664  001340  0012               	return		;funcret
  8665  001342                     __end_of_USBCheckCDCRequest:
  8666                           	opt stack 0
  8667                           tblptru	equ	0xFF8
  8668                           tblptrh	equ	0xFF7
  8669                           tblptrl	equ	0xFF6
  8670                           tablat	equ	0xFF5
  8671                           prodh	equ	0xFF4
  8672                           prodl	equ	0xFF3
  8673                           intcon	equ	0xFF2
  8674                           postinc0	equ	0xFEE
  8675                           wreg	equ	0xFE8
  8676                           indf1	equ	0xFE7
  8677                           postdec1	equ	0xFE5
  8678                           fsr1h	equ	0xFE2
  8679                           fsr1l	equ	0xFE1
  8680                           indf2	equ	0xFDF
  8681                           postinc2	equ	0xFDE
  8682                           postdec2	equ	0xFDD
  8683                           plusw2	equ	0xFDB
  8684                           fsr2h	equ	0xFDA
  8685                           fsr2l	equ	0xFD9
  8686                           status	equ	0xFD8
  8687                           
  8688 ;; *************** function _CDCInitEP *****************
  8689 ;; Defined at:
  8690 ;;		line 294 in file "picLibs/usb_device_cdc.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;		None
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;		None
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  1    wreg      void 
  8697 ;; Registers used:
  8698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 3F/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8704 ;;      Params:         0       0       0       0
  8705 ;;      Locals:         0       0       0       0
  8706 ;;      Temps:          0       0       0       0
  8707 ;;      Totals:         0       0       0       0
  8708 ;;Total ram usage:        0 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; Hardware stack levels required when called:    2
  8711 ;; This function calls:
  8712 ;;		_USBEnableEndpoint
  8713 ;;		i2_USBTransferOnePacket
  8714 ;; This function is called by:
  8715 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text48
  8720  0017CE                     __ptext48:
  8721                           	opt stack 0
  8722  0017CE                     _CDCInitEP:
  8723                           	opt stack 20
  8724                           
  8725                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8726                           
  8727                           ; BSR set to: 2
  8728                           ;incstack = 0
  8729  0017CE  0100               	movlb	0	; () banked
  8730  0017D0  6BCA               	clrf	_line_coding& (0+255),b
  8731  0017D2  0E4B               	movlw	75
  8732  0017D4  6FCB               	movwf	(_line_coding+1)& (0+255),b
  8733  0017D6  6BCC               	clrf	(_line_coding+2)& (0+255),b
  8734  0017D8  6BCD               	clrf	(_line_coding+3)& (0+255),b
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8738  0017DA  6BCE               	clrf	(_line_coding+4)& (0+255),b
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8742  0017DC  6BCF               	clrf	(_line_coding+5)& (0+255),b
  8743                           
  8744                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8745  0017DE  0E08               	movlw	8
  8746  0017E0  6FD0               	movwf	(_line_coding+6)& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8750  0017E2  6A1C               	clrf	_cdc_rx_len,c
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8754  0017E4  0E1A               	movlw	26
  8755  0017E6  6E32               	movwf	USBEnableEndpoint@options,c
  8756  0017E8  0E01               	movlw	1
  8757  0017EA  EC57  F00C         	call	_USBEnableEndpoint
  8758                           
  8759                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8760  0017EE  0E1E               	movlw	30
  8761  0017F0  6E32               	movwf	USBEnableEndpoint@options,c
  8762  0017F2  0E02               	movlw	2
  8763  0017F4  EC57  F00C         	call	_USBEnableEndpoint
  8764                           
  8765                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8766  0017F8  0E00               	movlw	0
  8767  0017FA  6E2A               	movwf	i2USBTransferOnePacket@dir,c
  8768  0017FC  0E80               	movlw	128
  8769  0017FE  6E2B               	movwf	i2USBTransferOnePacket@data,c
  8770  001800  0E02               	movlw	2
  8771  001802  6E2C               	movwf	i2USBTransferOnePacket@data+1,c
  8772  001804  0E40               	movlw	64
  8773  001806  6E2D               	movwf	i2USBTransferOnePacket@len,c
  8774  001808  0E02               	movlw	2
  8775  00180A  EC35  F007         	call	i2_USBTransferOnePacket
  8776  00180E  C02A  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
  8777  001812  C02B  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8778                           
  8779                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8780  001816  0100               	movlb	0	; () banked
  8781  001818  6B76               	clrf	_CDCDataInHandle& (0+255),b
  8782  00181A  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8786  00181C  6B80               	clrf	_cdc_trf_state& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789  00181E  0012               	return		;funcret
  8790  001820                     __end_of_CDCInitEP:
  8791                           	opt stack 0
  8792                           tblptru	equ	0xFF8
  8793                           tblptrh	equ	0xFF7
  8794                           tblptrl	equ	0xFF6
  8795                           tablat	equ	0xFF5
  8796                           prodh	equ	0xFF4
  8797                           prodl	equ	0xFF3
  8798                           intcon	equ	0xFF2
  8799                           postinc0	equ	0xFEE
  8800                           wreg	equ	0xFE8
  8801                           indf1	equ	0xFE7
  8802                           postdec1	equ	0xFE5
  8803                           fsr1h	equ	0xFE2
  8804                           fsr1l	equ	0xFE1
  8805                           indf2	equ	0xFDF
  8806                           postinc2	equ	0xFDE
  8807                           postdec2	equ	0xFDD
  8808                           plusw2	equ	0xFDB
  8809                           fsr2h	equ	0xFDA
  8810                           fsr2l	equ	0xFD9
  8811                           status	equ	0xFD8
  8812                           
  8813 ;; *************** function i2_USBTransferOnePacket *****************
  8814 ;; Defined at:
  8815 ;;		line 995 in file "picLibs/usb_device.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  ep              1    wreg     unsigned char 
  8818 ;;  dir             1    0[COMRAM] unsigned char 
  8819 ;;  data            2    1[COMRAM] PTR unsigned char 
  8820 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8821 ;;  len             1    3[COMRAM] unsigned char 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  ep              1    6[COMRAM] unsigned char 
  8824 ;;  USBTransferO    2    7[COMRAM] PTR volatile struct __BD
  8825 ;;		 -> RAM(767), NULL(0), BDT(48), 
  8826 ;; Return value:  Size  Location     Type
  8827 ;;                  2    0[COMRAM] PTR void 
  8828 ;; Registers used:
  8829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8830 ;; Tracked objects:
  8831 ;;		On entry : 0/0
  8832 ;;		On exit  : 0/0
  8833 ;;		Unchanged: 0/0
  8834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8835 ;;      Params:         4       0       0       0
  8836 ;;      Locals:         3       0       0       0
  8837 ;;      Temps:          2       0       0       0
  8838 ;;      Totals:         9       0       0       0
  8839 ;;Total ram usage:        9 bytes
  8840 ;; Hardware stack levels used:    1
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_CDCInitEP
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text49
  8849  000E6A                     __ptext49:
  8850                           	opt stack 0
  8851  000E6A                     i2_USBTransferOnePacket:
  8852                           	opt stack 21
  8853                           
  8854                           ; BSR set to: 0
  8855                           ;incstack = 0
  8856                           ;i2USBTransferOnePacket@ep stored from wreg
  8857  000E6A  6E30               	movwf	i2USBTransferOnePacket@ep,c
  8858                           
  8859                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8860                           ;usb_device.c: 1000: if(dir != 0)
  8861  000E6C  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8862  000E6E  E003               	bz	i2l3052
  8863                           
  8864                           ;usb_device.c: 1001: {
  8865                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8866  000E70  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8867  000E72  D845               	call	PL94	;call to abstracted procedure
  8868  000E74  D002               	goto	L11
  8869  000E76                     i2l3052:
  8870                           
  8871                           ;usb_device.c: 1005: else
  8872                           ;usb_device.c: 1006: {
  8873                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8874  000E76  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8875  000E78  D84B               	call	PL104	;call to abstracted procedure
  8876  000E7A                     L11:
  8877  000E7A  6ED9               	movwf	fsr2l,c
  8878  000E7C  6ADA               	clrf	fsr2h,c
  8879  000E7E  CFDE F031          	movff	postinc2,i2USBTransferOnePacket@handle
  8880  000E82  CFDD F032          	movff	postdec2,i2USBTransferOnePacket@handle+1
  8881                           
  8882                           ;usb_device.c: 1009: }
  8883                           ;usb_device.c: 1013: if(handle == 0)
  8884  000E86  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8885  000E88  1032               	iorwf	i2USBTransferOnePacket@handle+1,w,c
  8886  000E8A  E103               	bnz	i2l3058
  8887                           
  8888                           ;usb_device.c: 1014: {
  8889                           ;usb_device.c: 1015: return 0;
  8890  000E8C  6A2A               	clrf	?i2_USBTransferOnePacket,c
  8891  000E8E  6A2B               	clrf	?i2_USBTransferOnePacket+1,c
  8892  000E90  0012               	return	
  8893  000E92                     i2l3058:
  8894                           
  8895                           ;usb_device.c: 1016: }
  8896                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8897  000E92  EE20 F002          	lfsr	2,2
  8898  000E96  D840               	call	PL114	;call to abstracted procedure
  8899  000E98  C02B  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
  8900  000E9C  C02C  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
  8901                           
  8902                           ;usb_device.c: 1030: handle->CNT = len;
  8903  000EA0  EE20 F001          	lfsr	2,1
  8904  000EA4  D839               	call	PL114	;call to abstracted procedure
  8905  000EA6  C02D  FFDF         	movff	i2USBTransferOnePacket@len,indf2
  8906                           
  8907                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8908  000EAA  D82D               	call	PL96	;call to abstracted procedure
  8909  000EAC  0E40               	movlw	64
  8910  000EAE  16DF               	andwf	indf2,f,c
  8911                           
  8912                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8913  000EB0  D82A               	call	PL96	;call to abstracted procedure
  8914  000EB2  0E00               	movlw	0
  8915  000EB4  86DB               	bsf	plusw2,3,c
  8916                           
  8917                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8918  000EB6  D827               	call	PL96	;call to abstracted procedure
  8919  000EB8  8EDB               	bsf	plusw2,7,c
  8920                           
  8921                           ;usb_device.c: 1036: if(dir != 0)
  8922  000EBA  502A               	movf	i2USBTransferOnePacket@dir,w,c
  8923  000EBC  E006               	bz	i2l3070
  8924                           
  8925                           ;usb_device.c: 1037: {
  8926                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8927  000EBE  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8928  000EC0  EC5A  F006         	call	PL30	;call to abstracted procedure
  8929  000EC4  D812               	call	PL60	;call to abstracted procedure
  8930  000EC6  0F0F               	addlw	low _pBDTEntryIn
  8931  000EC8  D005               	goto	L12
  8932  000ECA                     i2l3070:
  8933                           
  8934                           ;usb_device.c: 1041: else
  8935                           ;usb_device.c: 1042: {
  8936                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8937  000ECA  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8938  000ECC  EC60  F006         	call	PL34	;call to abstracted procedure
  8939  000ED0  D80C               	call	PL60	;call to abstracted procedure
  8940  000ED2  0F60               	addlw	low _pBDTEntryOut
  8941  000ED4                     L12:
  8942  000ED4  6ED9               	movwf	fsr2l,c
  8943  000ED6  6ADA               	clrf	fsr2h,c
  8944  000ED8  C02E  FFDE         	movff	??i2_USBTransferOnePacket,postinc2
  8945  000EDC  C02F  FFDD         	movff	??i2_USBTransferOnePacket+1,postdec2
  8946                           
  8947                           ;usb_device.c: 1045: }
  8948                           ;usb_device.c: 1046: return (void*)handle;
  8949  000EE0  C031  F02A         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
  8950  000EE4  C032  F02B         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
  8951  000EE8  0012               	return		;funcret
  8952  000EEA                     __end_ofi2_USBTransferOnePacket:
  8953                           	opt stack 0
  8954  000EEA                     PL60:
  8955                           	opt stack 21
  8956  000EEA  CFDE F02E          	movff	postinc2,??i2_USBTransferOnePacket
  8957  000EEE  CFDD F02F          	movff	postdec2,??i2_USBTransferOnePacket+1
  8958  000EF2  0E04               	movlw	4
  8959  000EF4  1A2E               	xorwf	??i2_USBTransferOnePacket,f,c
  8960  000EF6  5030               	movf	i2USBTransferOnePacket@ep,w,c
  8961  000EF8  0D02               	mullw	2
  8962  000EFA  50F3               	movf	prodl,w,c
  8963  000EFC  0012               	return	
  8964  000EFE                     __end_ofPL60:
  8965                           	opt stack 0
  8966  000EFE                     PL94:
  8967                           	opt stack 18
  8968  000EFE  0D02               	mullw	2
  8969  000F00  50F3               	movf	prodl,w,c
  8970  000F02  0F0F               	addlw	low _pBDTEntryIn
  8971  000F04  0012               	return	
  8972  000F06                     __end_ofPL94:
  8973                           	opt stack 0
  8974  000F06                     PL96:
  8975                           	opt stack 21
  8976  000F06  C031  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
  8977  000F0A  C032  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
  8978  000F0E  0012               	return	
  8979  000F10                     __end_ofPL96:
  8980                           	opt stack 0
  8981  000F10                     PL104:
  8982                           	opt stack 18
  8983  000F10  0D02               	mullw	2
  8984  000F12  50F3               	movf	prodl,w,c
  8985  000F14  0F60               	addlw	low _pBDTEntryOut
  8986  000F16  0012               	return	
  8987  000F18                     __end_ofPL104:
  8988                           	opt stack 0
  8989  000F18                     PL114:
  8990                           	opt stack 21
  8991  000F18  5031               	movf	i2USBTransferOnePacket@handle,w,c
  8992  000F1A  26D9               	addwf	fsr2l,f,c
  8993  000F1C  5032               	movf	i2USBTransferOnePacket@handle+1,w,c
  8994  000F1E  22DA               	addwfc	fsr2h,f,c
  8995  000F20  0012               	return	
  8996  000F22                     __end_ofPL114:
  8997                           	opt stack 0
  8998                           tblptru	equ	0xFF8
  8999                           tblptrh	equ	0xFF7
  9000                           tblptrl	equ	0xFF6
  9001                           tablat	equ	0xFF5
  9002                           prodh	equ	0xFF4
  9003                           prodl	equ	0xFF3
  9004                           intcon	equ	0xFF2
  9005                           postinc0	equ	0xFEE
  9006                           wreg	equ	0xFE8
  9007                           indf1	equ	0xFE7
  9008                           postdec1	equ	0xFE5
  9009                           fsr1h	equ	0xFE2
  9010                           fsr1l	equ	0xFE1
  9011                           indf2	equ	0xFDF
  9012                           postinc2	equ	0xFDE
  9013                           postdec2	equ	0xFDD
  9014                           plusw2	equ	0xFDB
  9015                           fsr2h	equ	0xFDA
  9016                           fsr2l	equ	0xFD9
  9017                           status	equ	0xFD8
  9018                           
  9019 ;; *************** function _USBEnableEndpoint *****************
  9020 ;; Defined at:
  9021 ;;		line 878 in file "picLibs/usb_device.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  ep              1    wreg     unsigned char 
  9024 ;;  options         1    8[COMRAM] unsigned char 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  ep              1   11[COMRAM] unsigned char 
  9027 ;;  p               2    9[COMRAM] PTR unsigned char 
  9028 ;;		 -> UEP0(1), 
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1    wreg      void 
  9031 ;; Registers used:
  9032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9038 ;;      Params:         1       0       0       0
  9039 ;;      Locals:         3       0       0       0
  9040 ;;      Temps:          0       0       0       0
  9041 ;;      Totals:         4       0       0       0
  9042 ;;Total ram usage:        4 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; Hardware stack levels required when called:    1
  9045 ;; This function calls:
  9046 ;;		_USBConfigureEndpoint
  9047 ;; This function is called by:
  9048 ;;		_CDCInitEP
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           	psect	text50
  9053  0018AE                     __ptext50:
  9054                           	opt stack 0
  9055  0018AE                     _USBEnableEndpoint:
  9056                           	opt stack 20
  9057                           
  9058                           ;incstack = 0
  9059                           ;USBEnableEndpoint@ep stored from wreg
  9060  0018AE  6E35               	movwf	USBEnableEndpoint@ep,c
  9061                           
  9062                           ;usb_device.c: 880: unsigned char* p;
  9063                           ;usb_device.c: 884: if(options & 0x04)
  9064  0018B0  A432               	btfss	USBEnableEndpoint@options,2,c
  9065  0018B2  D004               	goto	i2l3028
  9066                           
  9067                           ;usb_device.c: 885: {
  9068                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  9069  0018B4  6A2A               	clrf	USBConfigureEndpoint@direction,c
  9070  0018B6  5035               	movf	USBEnableEndpoint@ep,w,c
  9071  0018B8  ECA1  F009         	call	_USBConfigureEndpoint
  9072  0018BC                     i2l3028:
  9073                           
  9074                           ;usb_device.c: 887: }
  9075                           ;usb_device.c: 888: if(options & 0x02)
  9076  0018BC  A232               	btfss	USBEnableEndpoint@options,1,c
  9077  0018BE  D005               	goto	i2l3032
  9078                           
  9079                           ;usb_device.c: 889: {
  9080                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  9081  0018C0  0E01               	movlw	1
  9082  0018C2  6E2A               	movwf	USBConfigureEndpoint@direction,c
  9083  0018C4  5035               	movf	USBEnableEndpoint@ep,w,c
  9084  0018C6  ECA1  F009         	call	_USBConfigureEndpoint
  9085  0018CA                     i2l3032:
  9086                           
  9087                           ;usb_device.c: 891: }
  9088                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  9089  0018CA  0E53               	movlw	83
  9090  0018CC  2435               	addwf	USBEnableEndpoint@ep,w,c
  9091  0018CE  6E33               	movwf	USBEnableEndpoint@p,c
  9092  0018D0  6A34               	clrf	USBEnableEndpoint@p+1,c
  9093  0018D2  0E0F               	movlw	15
  9094  0018D4  2234               	addwfc	USBEnableEndpoint@p+1,f,c
  9095                           
  9096                           ;usb_device.c: 901: *p = options;
  9097  0018D6  C033  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  9098  0018DA  C034  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  9099  0018DE  C032  FFDF         	movff	USBEnableEndpoint@options,indf2
  9100  0018E2  0C0F               	retlw	15	;funcret
  9101  0018E4                     __end_of_USBEnableEndpoint:
  9102                           	opt stack 0
  9103                           tblptru	equ	0xFF8
  9104                           tblptrh	equ	0xFF7
  9105                           tblptrl	equ	0xFF6
  9106                           tablat	equ	0xFF5
  9107                           prodh	equ	0xFF4
  9108                           prodl	equ	0xFF3
  9109                           intcon	equ	0xFF2
  9110                           postinc0	equ	0xFEE
  9111                           wreg	equ	0xFE8
  9112                           indf1	equ	0xFE7
  9113                           postdec1	equ	0xFE5
  9114                           fsr1h	equ	0xFE2
  9115                           fsr1l	equ	0xFE1
  9116                           indf2	equ	0xFDF
  9117                           postinc2	equ	0xFDE
  9118                           postdec2	equ	0xFDD
  9119                           plusw2	equ	0xFDB
  9120                           fsr2h	equ	0xFDA
  9121                           fsr2l	equ	0xFD9
  9122                           status	equ	0xFD8
  9123                           
  9124 ;; *************** function _USBConfigureEndpoint *****************
  9125 ;; Defined at:
  9126 ;;		line 1543 in file "picLibs/usb_device.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  EPNum           1    wreg     unsigned char 
  9129 ;;  direction       1    0[COMRAM] unsigned char 
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  EPNum           1    5[COMRAM] unsigned char 
  9132 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
  9133 ;;		 -> BDT(48), 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      void 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9143 ;;      Params:         1       0       0       0
  9144 ;;      Locals:         3       0       0       0
  9145 ;;      Temps:          4       0       0       0
  9146 ;;      Totals:         8       0       0       0
  9147 ;;Total ram usage:        8 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_USBEnableEndpoint
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text51
  9157  001342                     __ptext51:
  9158                           	opt stack 0
  9159  001342                     _USBConfigureEndpoint:
  9160                           	opt stack 20
  9161                           
  9162                           ;incstack = 0
  9163                           ;USBConfigureEndpoint@EPNum stored from wreg
  9164  001342  6E2F               	movwf	USBConfigureEndpoint@EPNum,c
  9165                           
  9166                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  9167                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  9168  001344  6A30               	clrf	USBConfigureEndpoint@handle,c
  9169  001346  0E02               	movlw	2
  9170  001348  6E31               	movwf	USBConfigureEndpoint@handle+1,c
  9171                           
  9172                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  9173  00134A  502A               	movf	USBConfigureEndpoint@direction,w,c
  9174  00134C  6E2B               	movwf	??_USBConfigureEndpoint& (0+255),c
  9175  00134E  6A2C               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
  9176  001350  90D8               	bcf	status,0,c
  9177  001352  362B               	rlcf	??_USBConfigureEndpoint,f,c
  9178  001354  362C               	rlcf	??_USBConfigureEndpoint+1,f,c
  9179  001356  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9180  001358  6E2D               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
  9181  00135A  6A2E               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
  9182  00135C  D824               	call	PL86	;call to abstracted procedure
  9183  00135E  502B               	movf	??_USBConfigureEndpoint,w,c
  9184  001360  262D               	addwf	??_USBConfigureEndpoint+2,f,c
  9185  001362  502C               	movf	??_USBConfigureEndpoint+1,w,c
  9186  001364  222E               	addwfc	??_USBConfigureEndpoint+3,f,c
  9187  001366  D81F               	call	PL86	;call to abstracted procedure
  9188  001368  502D               	movf	??_USBConfigureEndpoint+2,w,c
  9189  00136A  2630               	addwf	USBConfigureEndpoint@handle,f,c
  9190  00136C  502E               	movf	??_USBConfigureEndpoint+3,w,c
  9191  00136E  2231               	addwfc	USBConfigureEndpoint@handle+1,f,c
  9192                           
  9193                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  9194  001370  D821               	call	PL118	;call to abstracted procedure
  9195  001372  9EDF               	bcf	indf2,7,c
  9196                           
  9197                           ;usb_device.c: 1557: if(direction == 0)
  9198  001374  502A               	movf	USBConfigureEndpoint@direction,w,c
  9199  001376  E104               	bnz	i2l3006
  9200                           
  9201                           ;usb_device.c: 1558: {
  9202                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  9203  001378  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9204  00137A  EC88  F007         	call	PL104	;call to abstracted procedure
  9205  00137E  D003               	goto	L13
  9206  001380                     i2l3006:
  9207                           
  9208                           ;usb_device.c: 1561: else
  9209                           ;usb_device.c: 1562: {
  9210                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  9211  001380  502F               	movf	USBConfigureEndpoint@EPNum,w,c
  9212  001382  EC7F  F007         	call	PL94	;call to abstracted procedure
  9213  001386                     L13:
  9214  001386  6ED9               	movwf	fsr2l,c
  9215  001388  6ADA               	clrf	fsr2h,c
  9216  00138A  C030  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  9217  00138E  C031  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  9218                           
  9219                           ;usb_device.c: 1564: }
  9220                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  9221  001392  D810               	call	PL118	;call to abstracted procedure
  9222  001394  9CDF               	bcf	indf2,6,c
  9223                           
  9224                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  9225  001396  EE20 F004          	lfsr	2,4
  9226  00139A  5030               	movf	USBConfigureEndpoint@handle,w,c
  9227  00139C  26D9               	addwf	fsr2l,f,c
  9228  00139E  5031               	movf	USBConfigureEndpoint@handle+1,w,c
  9229  0013A0  22DA               	addwfc	fsr2h,f,c
  9230  0013A2  8CDF               	bsf	indf2,6,c
  9231  0013A4  0012               	return		;funcret
  9232  0013A6                     __end_of_USBConfigureEndpoint:
  9233                           	opt stack 0
  9234  0013A6                     PL86:
  9235                           	opt stack 20
  9236  0013A6  90D8               	bcf	status,0,c
  9237  0013A8  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  9238  0013AA  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  9239  0013AC  90D8               	bcf	status,0,c
  9240  0013AE  362D               	rlcf	??_USBConfigureEndpoint+2,f,c
  9241  0013B0  362E               	rlcf	??_USBConfigureEndpoint+3,f,c
  9242  0013B2  0012               	return	
  9243  0013B4                     __end_ofPL86:
  9244                           	opt stack 0
  9245  0013B4                     PL118:
  9246                           	opt stack 20
  9247  0013B4  C030  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  9248  0013B8  C031  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  9249  0013BC  0012               	return	
  9250  0013BE                     __end_ofPL118:
  9251                           	opt stack 0
  9252                           tblptru	equ	0xFF8
  9253                           tblptrh	equ	0xFF7
  9254                           tblptrl	equ	0xFF6
  9255                           tablat	equ	0xFF5
  9256                           prodh	equ	0xFF4
  9257                           prodl	equ	0xFF3
  9258                           intcon	equ	0xFF2
  9259                           postinc0	equ	0xFEE
  9260                           wreg	equ	0xFE8
  9261                           indf1	equ	0xFE7
  9262                           postdec1	equ	0xFE5
  9263                           fsr1h	equ	0xFE2
  9264                           fsr1l	equ	0xFE1
  9265                           indf2	equ	0xFDF
  9266                           postinc2	equ	0xFDE
  9267                           postdec2	equ	0xFDD
  9268                           plusw2	equ	0xFDB
  9269                           fsr2h	equ	0xFDA
  9270                           fsr2l	equ	0xFD9
  9271                           status	equ	0xFD8
  9272                           
  9273 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  9274 ;; Defined at:
  9275 ;;		line 50 in file "picLibs/app_led_usb_status.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;		None
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      void 
  9282 ;; Registers used:
  9283 ;;		wreg, status,2, status,0, cstack
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9289 ;;      Params:         0       0       0       0
  9290 ;;      Locals:         0       0       0       0
  9291 ;;      Temps:          0       0       0       0
  9292 ;;      Totals:         0       0       0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:    1
  9296 ;; This function calls:
  9297 ;;		_LED_Off
  9298 ;;		_LED_On
  9299 ;; This function is called by:
  9300 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text52
  9305  001516                     __ptext52:
  9306                           	opt stack 0
  9307  001516                     _APP_LEDUpdateUSBStatus:
  9308                           	opt stack 21
  9309                           
  9310                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;
  9311                           ;app_led_usb_status.c: 54: if(UCONbits.SUSPND == 1)
  9312                           
  9313                           ;incstack = 0
  9314  001516  A264               	btfss	3940,1,c	;volatile
  9315  001518  D02E               	goto	i2l3116
  9316                           
  9317                           ;app_led_usb_status.c: 55: {
  9318                           ;app_led_usb_status.c: 56: LED_Off(LED_D1);
  9319  00151A  0E01               	movlw	1
  9320  00151C  EF1A  F00D         	goto	_LED_Off
  9321  001520                     i2l3090:
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  9325  001520  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9326  001522  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9327  001524  E104               	bnz	i2l3094
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;app_led_usb_status.c: 66: {
  9331                           ;app_led_usb_status.c: 67: LED_On(LED_D1);
  9332  001526  0E01               	movlw	1
  9333  001528  EC04  F00D         	call	_LED_On
  9334                           
  9335                           ;app_led_usb_status.c: 68: }
  9336  00152C  D029               	goto	i2l3118
  9337  00152E                     i2l3094:
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  9341  00152E  0E4B               	movlw	75
  9342  001530  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9343  001532  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9344  001534  E104               	bnz	i2l3098
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;app_led_usb_status.c: 70: {
  9348                           ;app_led_usb_status.c: 71: LED_Off(LED_D1);
  9349  001536  0E01               	movlw	1
  9350  001538  EC1A  F00D         	call	_LED_Off
  9351                           
  9352                           ;app_led_usb_status.c: 72: }
  9353  00153C  D021               	goto	i2l3118
  9354  00153E                     i2l3098:
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  9358  00153E  501A               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9359  001540  E103               	bnz	i2u190_40
  9360  001542  0E97               	movlw	151
  9361  001544  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9362  001546  E31C               	bnc	i2l3118
  9363  001548                     i2u190_40:
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;app_led_usb_status.c: 74: {
  9367                           ;app_led_usb_status.c: 75: ledCount = 0;
  9368  001548  6A19               	clrf	APP_LEDUpdateUSBStatus@ledCount,c
  9369  00154A  6A1A               	clrf	APP_LEDUpdateUSBStatus@ledCount+1,c
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;app_led_usb_status.c: 76: }
  9373                           ;app_led_usb_status.c: 77: break;
  9374  00154C  D019               	goto	i2l3118
  9375  00154E                     i2l3102:
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  9379  00154E  0419               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9380  001550  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9381  001552  E104               	bnz	i2l3106
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;app_led_usb_status.c: 83: {
  9385                           ;app_led_usb_status.c: 84: LED_On(LED_D1);
  9386  001554  0E01               	movlw	1
  9387  001556  EC04  F00D         	call	_LED_On
  9388                           
  9389                           ;app_led_usb_status.c: 85: }
  9390  00155A  D012               	goto	i2l3118
  9391  00155C                     i2l3106:
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  9395  00155C  0E32               	movlw	50
  9396  00155E  1819               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9397  001560  101A               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9398  001562  E104               	bnz	i2l3110
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;app_led_usb_status.c: 87: {
  9402                           ;app_led_usb_status.c: 88: LED_Off(LED_D1);
  9403  001564  0E01               	movlw	1
  9404  001566  EC1A  F00D         	call	_LED_Off
  9405                           
  9406                           ;app_led_usb_status.c: 89: }
  9407  00156A  D00A               	goto	i2l3118
  9408  00156C                     i2l3110:
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  9412  00156C  0EB7               	movlw	183
  9413  00156E  5C19               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
  9414  001570  0E03               	movlw	3
  9415  001572  581A               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
  9416  001574  D7E8               	goto	L14
  9417  001576                     i2l3116:
  9418  001576  0100               	movlb	0	; () banked
  9419  001578  5181               	movf	_USBDeviceState& (0+255),w,b	;volatile
  9420                           
  9421                           ; Switch size 1, requested type "space"
  9422                           ; Number of cases is 1, Range of values is 32 to 32
  9423                           ; switch strategies available:
  9424                           ; Name         Instructions Cycles
  9425                           ; simple_byte            4     3 (average)
  9426                           ;	Chosen strategy is simple_byte
  9427  00157A  0A20               	xorlw	32	; case 32
  9428  00157C  E0D1               	bz	i2l3090
  9429  00157E  D7E7               	goto	i2l3102
  9430  001580                     i2l3118:
  9431                           
  9432                           ;app_led_usb_status.c: 98: ledCount++;
  9433  001580  4A19               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
  9434  001582  2A1A               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
  9435  001584  0012               	return		;funcret
  9436  001586                     __end_of_APP_LEDUpdateUSBStatus:
  9437                           	opt stack 0
  9438                           tblptru	equ	0xFF8
  9439                           tblptrh	equ	0xFF7
  9440                           tblptrl	equ	0xFF6
  9441                           tablat	equ	0xFF5
  9442                           prodh	equ	0xFF4
  9443                           prodl	equ	0xFF3
  9444                           intcon	equ	0xFF2
  9445                           postinc0	equ	0xFEE
  9446                           wreg	equ	0xFE8
  9447                           indf1	equ	0xFE7
  9448                           postdec1	equ	0xFE5
  9449                           fsr1h	equ	0xFE2
  9450                           fsr1l	equ	0xFE1
  9451                           indf2	equ	0xFDF
  9452                           postinc2	equ	0xFDE
  9453                           postdec2	equ	0xFDD
  9454                           plusw2	equ	0xFDB
  9455                           fsr2h	equ	0xFDA
  9456                           fsr2l	equ	0xFD9
  9457                           status	equ	0xFD8
  9458                           
  9459 ;; *************** function _LED_On *****************
  9460 ;; Defined at:
  9461 ;;		line 59 in file "picLibs/leds.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  led             1    wreg     enum E2
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;  led             1    0[COMRAM] enum E2
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      void 
  9468 ;; Registers used:
  9469 ;;		wreg, status,2, status,0
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9475 ;;      Params:         0       0       0       0
  9476 ;;      Locals:         1       0       0       0
  9477 ;;      Temps:          0       0       0       0
  9478 ;;      Totals:         1       0       0       0
  9479 ;;Total ram usage:        1 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		_APP_LEDUpdateUSBStatus
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text53
  9489  001A08                     __ptext53:
  9490                           	opt stack 0
  9491  001A08                     _LED_On:
  9492                           	opt stack 21
  9493                           
  9494                           ;incstack = 0
  9495                           ;LED_On@led stored from wreg
  9496  001A08  6E2A               	movwf	LED_On@led,c
  9497                           
  9498                           ;leds.c: 61: switch(led)
  9499  001A0A  D008               	goto	i2l3022
  9500  001A0C                     i2l105:
  9501                           
  9502                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9503  001A0C  808B               	bsf	3979,0,c	;volatile
  9504                           
  9505                           ;leds.c: 65: break;
  9506  001A0E  0012               	return	
  9507  001A10                     i2l107:
  9508                           
  9509                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9510  001A10  828B               	bsf	3979,1,c	;volatile
  9511                           
  9512                           ;leds.c: 69: break;
  9513  001A12  0012               	return	
  9514  001A14                     i2l108:
  9515                           
  9516                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9517  001A14  848B               	bsf	3979,2,c	;volatile
  9518                           
  9519                           ;leds.c: 73: break;
  9520  001A16  0012               	return	
  9521  001A18                     i2l109:
  9522                           
  9523                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9524  001A18  868B               	bsf	3979,3,c	;volatile
  9525                           
  9526                           ;leds.c: 77: break;
  9527  001A1A  0012               	return	
  9528  001A1C                     i2l3022:
  9529  001A1C  502A               	movf	LED_On@led,w,c
  9530                           
  9531                           ; Switch size 1, requested type "space"
  9532                           ; Number of cases is 5, Range of values is 0 to 4
  9533                           ; switch strategies available:
  9534                           ; Name         Instructions Cycles
  9535                           ; simple_byte           16     9 (average)
  9536                           ;	Chosen strategy is simple_byte
  9537  001A1E  B4D8               	btfsc	status,2,c
  9538  001A20  0012               	return	
  9539  001A22  0A01               	xorlw	1	; case 1
  9540  001A24  E0F3               	bz	i2l105
  9541  001A26  0A03               	xorlw	3	; case 2
  9542  001A28  E0F3               	bz	i2l107
  9543  001A2A  0A01               	xorlw	1	; case 3
  9544  001A2C  E0F3               	bz	i2l108
  9545  001A2E  0A07               	xorlw	7	; case 4
  9546  001A30  E0F3               	bz	i2l109
  9547  001A32  0012               	return		;funcret
  9548  001A34                     __end_of_LED_On:
  9549                           	opt stack 0
  9550                           tblptru	equ	0xFF8
  9551                           tblptrh	equ	0xFF7
  9552                           tblptrl	equ	0xFF6
  9553                           tablat	equ	0xFF5
  9554                           prodh	equ	0xFF4
  9555                           prodl	equ	0xFF3
  9556                           intcon	equ	0xFF2
  9557                           postinc0	equ	0xFEE
  9558                           wreg	equ	0xFE8
  9559                           indf1	equ	0xFE7
  9560                           postdec1	equ	0xFE5
  9561                           fsr1h	equ	0xFE2
  9562                           fsr1l	equ	0xFE1
  9563                           indf2	equ	0xFDF
  9564                           postinc2	equ	0xFDE
  9565                           postdec2	equ	0xFDD
  9566                           plusw2	equ	0xFDB
  9567                           fsr2h	equ	0xFDA
  9568                           fsr2l	equ	0xFD9
  9569                           status	equ	0xFD8
  9570                           
  9571 ;; *************** function _LED_Off *****************
  9572 ;; Defined at:
  9573 ;;		line 100 in file "picLibs/leds.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  led             1    wreg     enum E2
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  led             1    0[COMRAM] enum E2
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  1    wreg      void 
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, status,0
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9587 ;;      Params:         0       0       0       0
  9588 ;;      Locals:         1       0       0       0
  9589 ;;      Temps:          0       0       0       0
  9590 ;;      Totals:         1       0       0       0
  9591 ;;Total ram usage:        1 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; This function calls:
  9594 ;;		Nothing
  9595 ;; This function is called by:
  9596 ;;		_APP_LEDUpdateUSBStatus
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           	psect	text54
  9601  001A34                     __ptext54:
  9602                           	opt stack 0
  9603  001A34                     _LED_Off:
  9604                           	opt stack 21
  9605                           
  9606                           ;incstack = 0
  9607                           ;LED_Off@led stored from wreg
  9608  001A34  6E2A               	movwf	LED_Off@led,c
  9609                           
  9610                           ;leds.c: 102: switch(led)
  9611  001A36  D008               	goto	i2l3016
  9612  001A38                     i2l115:
  9613                           
  9614                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9615  001A38  908B               	bcf	3979,0,c	;volatile
  9616                           
  9617                           ;leds.c: 106: break;
  9618  001A3A  0012               	return	
  9619  001A3C                     i2l117:
  9620                           
  9621                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9622  001A3C  928B               	bcf	3979,1,c	;volatile
  9623                           
  9624                           ;leds.c: 110: break;
  9625  001A3E  0012               	return	
  9626  001A40                     i2l118:
  9627                           
  9628                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9629  001A40  948B               	bcf	3979,2,c	;volatile
  9630                           
  9631                           ;leds.c: 114: break;
  9632  001A42  0012               	return	
  9633  001A44                     i2l119:
  9634                           
  9635                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9636  001A44  968B               	bcf	3979,3,c	;volatile
  9637                           
  9638                           ;leds.c: 118: break;
  9639  001A46  0012               	return	
  9640  001A48                     i2l3016:
  9641  001A48  502A               	movf	LED_Off@led,w,c
  9642                           
  9643                           ; Switch size 1, requested type "space"
  9644                           ; Number of cases is 5, Range of values is 0 to 4
  9645                           ; switch strategies available:
  9646                           ; Name         Instructions Cycles
  9647                           ; simple_byte           16     9 (average)
  9648                           ;	Chosen strategy is simple_byte
  9649  001A4A  B4D8               	btfsc	status,2,c
  9650  001A4C  0012               	return	
  9651  001A4E  0A01               	xorlw	1	; case 1
  9652  001A50  E0F3               	bz	i2l115
  9653  001A52  0A03               	xorlw	3	; case 2
  9654  001A54  E0F3               	bz	i2l117
  9655  001A56  0A01               	xorlw	1	; case 3
  9656  001A58  E0F3               	bz	i2l118
  9657  001A5A  0A07               	xorlw	7	; case 4
  9658  001A5C  E0F3               	bz	i2l119
  9659  001A5E  0012               	return		;funcret
  9660  001A60                     __end_of_LED_Off:
  9661                           	opt stack 0
  9662                           tblptru	equ	0xFF8
  9663                           tblptrh	equ	0xFF7
  9664                           tblptrl	equ	0xFF6
  9665                           tablat	equ	0xFF5
  9666                           prodh	equ	0xFF4
  9667                           prodl	equ	0xFF3
  9668                           intcon	equ	0xFF2
  9669                           postinc0	equ	0xFEE
  9670                           wreg	equ	0xFE8
  9671                           indf1	equ	0xFE7
  9672                           postdec1	equ	0xFE5
  9673                           fsr1h	equ	0xFE2
  9674                           fsr1l	equ	0xFE1
  9675                           indf2	equ	0xFDF
  9676                           postinc2	equ	0xFDE
  9677                           postdec2	equ	0xFDD
  9678                           plusw2	equ	0xFDB
  9679                           fsr2h	equ	0xFDA
  9680                           fsr2l	equ	0xFD9
  9681                           status	equ	0xFD8
  9682                           
  9683 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  9684 ;; Defined at:
  9685 ;;		line 53 in file "picLibs/app_device_cdc_basic.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;		None
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;		None
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  1    wreg      void 
  9692 ;; Registers used:
  9693 ;;		wreg, status,2
  9694 ;; Tracked objects:
  9695 ;;		On entry : 3F/0
  9696 ;;		On exit  : 3F/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9699 ;;      Params:         0       0       0       0
  9700 ;;      Locals:         0       0       0       0
  9701 ;;      Temps:          0       0       0       0
  9702 ;;      Totals:         0       0       0       0
  9703 ;;Total ram usage:        0 bytes
  9704 ;; Hardware stack levels used:    1
  9705 ;; This function calls:
  9706 ;;		Nothing
  9707 ;; This function is called by:
  9708 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           	psect	text55
  9713  001BA2                     __ptext55:
  9714                           	opt stack 0
  9715  001BA2                     _APP_DeviceCDCBasicDemoInitialize:
  9716                           	opt stack 22
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;app_device_cdc_basic.c: 55: line_coding.bCharFormat = 0;
  9720                           
  9721                           ;incstack = 0
  9722  001BA2  6BCE               	clrf	(_line_coding+4)& (0+255),b
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;app_device_cdc_basic.c: 56: line_coding.bDataBits = 8;
  9726  001BA4  0E08               	movlw	8
  9727  001BA6  6FD0               	movwf	(_line_coding+6)& (0+255),b
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;app_device_cdc_basic.c: 57: line_coding.bParityType = 0;
  9731  001BA8  6BCF               	clrf	(_line_coding+5)& (0+255),b
  9732                           
  9733                           ;app_device_cdc_basic.c: 58: line_coding.dwDTERate = 9600;
  9734  001BAA  0E80               	movlw	128
  9735  001BAC  6FCA               	movwf	_line_coding& (0+255),b
  9736  001BAE  0E25               	movlw	37
  9737  001BB0  6FCB               	movwf	(_line_coding+1)& (0+255),b
  9738  001BB2  0E00               	movlw	0
  9739  001BB4  6BCC               	clrf	(_line_coding+2)& (0+255),b
  9740  001BB6  6BCD               	clrf	(_line_coding+3)& (0+255),b
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;app_device_cdc_basic.c: 60: buttonPressed = 0;
  9744  001BB8  6B7F               	clrf	_buttonPressed& (0+255),b
  9745                           
  9746                           ; BSR set to: 0
  9747  001BBA  0012               	return		;funcret
  9748  001BBC                     __end_of_APP_DeviceCDCBasicDemoInitialize:
  9749                           	opt stack 0
  9750                           tblptru	equ	0xFF8
  9751                           tblptrh	equ	0xFF7
  9752                           tblptrl	equ	0xFF6
  9753                           tablat	equ	0xFF5
  9754                           prodh	equ	0xFF4
  9755                           prodl	equ	0xFF3
  9756                           intcon	equ	0xFF2
  9757                           postinc0	equ	0xFEE
  9758                           wreg	equ	0xFE8
  9759                           indf1	equ	0xFE7
  9760                           postdec1	equ	0xFE5
  9761                           fsr1h	equ	0xFE2
  9762                           fsr1l	equ	0xFE1
  9763                           indf2	equ	0xFDF
  9764                           postinc2	equ	0xFDE
  9765                           postdec2	equ	0xFDD
  9766                           plusw2	equ	0xFDB
  9767                           fsr2h	equ	0xFDA
  9768                           fsr2l	equ	0xFD9
  9769                           status	equ	0xFD8
  9770                           
  9771 ;; *************** function _USBCtrlTrfOutHandler *****************
  9772 ;; Defined at:
  9773 ;;		line 2538 in file "picLibs/usb_device.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;		None
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      void 
  9780 ;; Registers used:
  9781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 3F/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9787 ;;      Params:         0       0       0       0
  9788 ;;      Locals:         0       0       0       0
  9789 ;;      Temps:          0       0       0       0
  9790 ;;      Totals:         0       0       0       0
  9791 ;;Total ram usage:        0 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    2
  9794 ;; This function calls:
  9795 ;;		_USBCtrlTrfRxService
  9796 ;; This function is called by:
  9797 ;;		_USBCtrlEPService
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           	psect	text56
  9802  001AF6                     __ptext56:
  9803                           	opt stack 0
  9804  001AF6                     _USBCtrlTrfOutHandler:
  9805                           	opt stack 20
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;incstack = 0
  9812  001AF6  0E02               	movlw	2
  9813  001AF8  1826               	xorwf	_controlTransferState,w,c	;volatile
  9814  001AFA  E102               	bnz	i2l510
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;usb_device.c: 2541: {
  9818                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9819  001AFC  EF7A  F006         	goto	_USBCtrlTrfRxService	;wreg free
  9820  001B00                     i2l510:
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;usb_device.c: 2544: else
  9824                           ;usb_device.c: 2545: {
  9825                           ;usb_device.c: 2548: controlTransferState = 0;
  9826  001B00  6A26               	clrf	_controlTransferState,c	;volatile
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9830  001B02  5022               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
  9831  001B04  E106               	bnz	i2l512
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;usb_device.c: 2556: {
  9835                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9836                           
  9837                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9841  001B06  ECBB  F008         	call	PL2	;call to abstracted procedure
  9842  001B0A  0E0C               	movlw	12
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9846  001B0C  ECC2  F006         	call	PL10	;call to abstracted procedure
  9847                           
  9848                           ;usb_device.c: 2561: }
  9849  001B10  0C00               	retlw	0
  9850  001B12                     i2l512:
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;usb_device.c: 2562: else
  9854                           ;usb_device.c: 2563: {
  9855                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9856  001B12  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  9857  001B14  0012               	return		;funcret
  9858  001B16                     __end_of_USBCtrlTrfOutHandler:
  9859                           	opt stack 0
  9860                           tblptru	equ	0xFF8
  9861                           tblptrh	equ	0xFF7
  9862                           tblptrl	equ	0xFF6
  9863                           tablat	equ	0xFF5
  9864                           prodh	equ	0xFF4
  9865                           prodl	equ	0xFF3
  9866                           intcon	equ	0xFF2
  9867                           postinc0	equ	0xFEE
  9868                           wreg	equ	0xFE8
  9869                           indf1	equ	0xFE7
  9870                           postdec1	equ	0xFE5
  9871                           fsr1h	equ	0xFE2
  9872                           fsr1l	equ	0xFE1
  9873                           indf2	equ	0xFDF
  9874                           postinc2	equ	0xFDE
  9875                           postdec2	equ	0xFDD
  9876                           plusw2	equ	0xFDB
  9877                           fsr2h	equ	0xFDA
  9878                           fsr2l	equ	0xFD9
  9879                           status	equ	0xFD8
  9880                           
  9881 ;; *************** function _USBCtrlTrfRxService *****************
  9882 ;; Defined at:
  9883 ;;		line 1852 in file "picLibs/usb_device.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;		None
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  byteToRead      1    1[COMRAM] unsigned char 
  9888 ;;  i               1    0[COMRAM] unsigned char 
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 3F/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9898 ;;      Params:         0       0       0       0
  9899 ;;      Locals:         2       0       0       0
  9900 ;;      Temps:          0       0       0       0
  9901 ;;      Totals:         2       0       0       0
  9902 ;;Total ram usage:        2 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:    1
  9905 ;; This function calls:
  9906 ;;		_USBCtrlEPAllowStatusStage
  9907 ;; This function is called by:
  9908 ;;		_USBCtrlTrfOutHandler
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text57
  9913  000CF4                     __ptext57:
  9914                           	opt stack 0
  9915  000CF4                     _USBCtrlTrfRxService:
  9916                           	opt stack 20
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;usb_device.c: 1854: uint8_t byteToRead;
  9920                           ;usb_device.c: 1855: uint8_t i;
  9921                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9922                           
  9923                           ;incstack = 0
  9924  000CF4  EE20 F001          	lfsr	2,1
  9925  000CF8  EC11  F00A         	call	PL80	;call to abstracted procedure
  9926  000CFC  50DF               	movf	indf2,w,c
  9927  000CFE  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9931  000D00  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9932  000D02  5C05               	subwf	_outPipes+4,w,c	;volatile
  9933  000D04  0E00               	movlw	0
  9934  000D06  5806               	subwfb	_outPipes+5,w,c	;volatile
  9935  000D08  E202               	bc	i2l3558
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;usb_device.c: 1866: {
  9939                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9940  000D0A  C005  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  9941  000D0E                     i2l3558:
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;usb_device.c: 1868: }
  9945                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9946  000D0E  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9947  000D10  5E05               	subwf	_outPipes+4,f,c	;volatile
  9948  000D12  0E00               	movlw	0
  9949  000D14  5A06               	subwfb	_outPipes+5,f,c	;volatile
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9953  000D16  6A2A               	clrf	USBCtrlTrfRxService@i,c
  9954  000D18  D007               	goto	i2l3568
  9955  000D1A                     i2l3562:
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;usb_device.c: 1875: {
  9959                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9960  000D1A  0E38               	movlw	56
  9961  000D1C  242A               	addwf	USBCtrlTrfRxService@i,w,c
  9962  000D1E  D844               	call	PL124	;call to abstracted procedure
  9963  000D20  5001               	movf	_outPipes,w,c	;volatile
  9964  000D22  D83D               	call	PL122	;call to abstracted procedure
  9965                           
  9966                           ; BSR set to: 0
  9967  000D24  2A01               	incf	_outPipes,f,c	;volatile
  9968                           
  9969                           ; BSR set to: 0
  9970  000D26  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  9971  000D28                     i2l3568:
  9972                           
  9973                           ; BSR set to: 0
  9974  000D28  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  9975  000D2A  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  9976  000D2C  E3F6               	bnc	i2l3562
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;usb_device.c: 1877: }
  9980                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9981  000D2E  5005               	movf	_outPipes+4,w,c	;volatile
  9982  000D30  1006               	iorwf	_outPipes+5,w,c	;volatile
  9983  000D32  E014               	bz	i2l3584
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;usb_device.c: 1882: {
  9987                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9988  000D34  EE20 F001          	lfsr	2,1
  9989  000D38  D81B               	call	PL4	;call to abstracted procedure
  9990                           
  9991                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9992  000D3A  D81F               	call	PL6	;call to abstracted procedure
  9993  000D3C  D819               	call	PL4	;call to abstracted procedure
  9994  000D3E  0E38               	movlw	56
  9995  000D40  EC16  F00A         	call	PL82	;call to abstracted procedure
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9999  000D44  ECA1  F00C         	call	PL38	;call to abstracted procedure
 10000  000D48  BCDF               	btfsc	indf2,6,c
 10001  000D4A  D004               	goto	i2l3580
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;usb_device.c: 1886: {
 10005                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10006  000D4C  D823               	call	PL16	;call to abstracted procedure
 10007  000D4E  0E48               	movlw	72
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10011  000D50  D819               	call	PL10	;call to abstracted procedure
 10012                           
 10013                           ;usb_device.c: 1889: }
 10014  000D52  0C00               	retlw	0
 10015  000D54                     i2l3580:
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;usb_device.c: 1890: else
 10019                           ;usb_device.c: 1891: {
 10020                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 10021  000D54  D81F               	call	PL16	;call to abstracted procedure
 10022  000D56  0E08               	movlw	8
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10026  000D58  D815               	call	PL10	;call to abstracted procedure
 10027  000D5A  0C00               	retlw	0
 10028  000D5C                     i2l3584:
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;usb_device.c: 1896: else
 10032                           ;usb_device.c: 1897: {
 10033                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 10034                           
 10035                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10039  000D5C  ECBB  F008         	call	PL2	;call to abstracted procedure
 10040  000D60  0E04               	movlw	4
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10044  000D62  D810               	call	PL10	;call to abstracted procedure
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;usb_device.c: 1926: }
 10048                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;usb_device.c: 1915: {
 10052                           ;usb_device.c: 1921: outPipes[0].pFunc();
 10053  000D64  9E04               	bcf	_outPipes+3,7,c	;volatile
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 10057  000D66  5020               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 10058  000D68  B4D8               	btfsc	status,2,c
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;usb_device.c: 1942: {
 10062                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 10063  000D6A  ECDF  F009         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10064  000D6E  0012               	return		;funcret
 10065  000D70                     __end_of_USBCtrlTrfRxService:
 10066                           	opt stack 0
 10067  000D70                     PL4:
 10068                           	opt stack 19
 10069  000D70  5015               	movf	_pBDTEntryEP0OutNext,w,c
 10070  000D72  26D9               	addwf	fsr2l,f,c
 10071  000D74  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 10072  000D76  22DA               	addwfc	fsr2h,f,c
 10073  000D78  0012               	return	
 10074  000D7A                     __end_ofPL4:
 10075                           	opt stack 0
 10076  000D7A                     PL6:
 10077                           	opt stack 19
 10078  000D7A  0E08               	movlw	8
 10079  000D7C  6EDF               	movwf	indf2,c
 10080  000D7E  EE20 F002          	lfsr	2,2
 10081  000D82  0C08               	retlw	8
 10082  000D84                     __end_ofPL6:
 10083                           	opt stack 0
 10084  000D84                     PL10:
 10085                           	opt stack 19
 10086  000D84  6EDF               	movwf	indf2,c
 10087  000D86  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10088  000D8A  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10089  000D8E  0E00               	movlw	0
 10090  000D90  8EDB               	bsf	plusw2,7,c
 10091  000D92  0C00               	retlw	0
 10092  000D94                     __end_ofPL10:
 10093                           	opt stack 0
 10094  000D94                     PL16:
 10095                           	opt stack 16
 10096  000D94  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10097  000D98  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10098  000D9C  0012               	return	
 10099  000D9E                     __end_ofPL16:
 10100                           	opt stack 0
 10101  000D9E                     PL122:
 10102                           	opt stack 18
 10103  000D9E  6EE1               	movwf	fsr1l,c
 10104  000DA0  6AE2               	clrf	fsr1h,c
 10105  000DA2  CFDF FFE7          	movff	indf2,indf1
 10106  000DA6  0012               	return	
 10107  000DA8                     __end_ofPL122:
 10108                           	opt stack 0
 10109  000DA8                     PL124:
 10110                           	opt stack 18
 10111  000DA8  6ED9               	movwf	fsr2l,c
 10112  000DAA  6ADA               	clrf	fsr2h,c
 10113  000DAC  0E02               	movlw	2
 10114  000DAE  22DA               	addwfc	fsr2h,f,c
 10115  000DB0  0C02               	retlw	2
 10116  000DB2                     __end_ofPL124:
 10117                           	opt stack 0
 10118                           tblptru	equ	0xFF8
 10119                           tblptrh	equ	0xFF7
 10120                           tblptrl	equ	0xFF6
 10121                           tablat	equ	0xFF5
 10122                           prodh	equ	0xFF4
 10123                           prodl	equ	0xFF3
 10124                           intcon	equ	0xFF2
 10125                           postinc0	equ	0xFEE
 10126                           wreg	equ	0xFE8
 10127                           indf1	equ	0xFE7
 10128                           postdec1	equ	0xFE5
 10129                           fsr1h	equ	0xFE2
 10130                           fsr1l	equ	0xFE1
 10131                           indf2	equ	0xFDF
 10132                           postinc2	equ	0xFDE
 10133                           postdec2	equ	0xFDD
 10134                           plusw2	equ	0xFDB
 10135                           fsr2h	equ	0xFDA
 10136                           fsr2l	equ	0xFD9
 10137                           status	equ	0xFD8
 10138                           
 10139 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 10140 ;; Defined at:
 10141 ;;		line 1416 in file "picLibs/usb_device.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;		None
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;		None
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  1    wreg      void 
 10148 ;; Registers used:
 10149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10155 ;;      Params:         0       0       0       0
 10156 ;;      Locals:         0       0       0       0
 10157 ;;      Temps:          0       0       0       0
 10158 ;;      Totals:         0       0       0       0
 10159 ;;Total ram usage:        0 bytes
 10160 ;; Hardware stack levels used:    1
 10161 ;; This function calls:
 10162 ;;		Nothing
 10163 ;; This function is called by:
 10164 ;;		_USBDeviceTasks
 10165 ;;		_USBCtrlEPServiceComplete
 10166 ;;		_USBCtrlTrfRxService
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text58
 10171  0013BE                     __ptext58:
 10172                           	opt stack 0
 10173  0013BE                     _USBCtrlEPAllowStatusStage:
 10174                           	opt stack 20
 10175                           
 10176                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 10177                           
 10178                           ;incstack = 0
 10179  0013BE  501F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 10180  0013C0  A4D8               	btfss	status,2,c
 10181  0013C2  0012               	return	
 10182                           
 10183                           ;usb_device.c: 1424: {
 10184                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 10185  0013C4  0E01               	movlw	1
 10186  0013C6  6E1F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 10187                           
 10188                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 10189  0013C8  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 10190  0013CA  A4D8               	btfss	status,2,c
 10191  0013CC  0012               	return	
 10192                           
 10193                           ;usb_device.c: 1427: {
 10194                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 10195  0013CE  0E01               	movlw	1
 10196  0013D0  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 10197                           
 10198                           ;usb_device.c: 1432: if(controlTransferState == 2)
 10199  0013D2  0E02               	movlw	2
 10200  0013D4  1826               	xorwf	_controlTransferState,w,c	;volatile
 10201  0013D6  E10A               	bnz	i2l3284
 10202                           
 10203                           ;usb_device.c: 1433: {
 10204                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 10205  0013D8  EE20 F001          	lfsr	2,1
 10206  0013DC  ECD8  F007         	call	PL74	;call to abstracted procedure
 10207  0013E0  6ADF               	clrf	indf2,c
 10208                           
 10209                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10210  0013E2  EC50  F009         	call	PL14	;call to abstracted procedure
 10211  0013E6  0E48               	movlw	72
 10212                           
 10213                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10214                           
 10215                           ;usb_device.c: 1437: }
 10216  0013E8  EF48  F009         	goto	PL8	;call to abstracted procedure
 10217  0013EC                     i2l3284:
 10218                           
 10219                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 10220  0013EC  0426               	decf	_controlTransferState,w,c	;volatile
 10221  0013EE  A4D8               	btfss	status,2,c
 10222  0013F0  0012               	return	
 10223                           
 10224                           ;usb_device.c: 1439: {
 10225                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 10226  0013F2  6A22               	clrf	_BothEP0OutUOWNsSet,c	;volatile
 10227                           
 10228                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 10229  0013F4  EE20 F001          	lfsr	2,1
 10230  0013F8  D814               	call	PL80	;call to abstracted procedure
 10231                           
 10232                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 10233  0013FA  ECBD  F006         	call	PL6	;call to abstracted procedure
 10234  0013FE  D811               	call	PL80	;call to abstracted procedure
 10235  001400  0E30               	movlw	48
 10236  001402  D814               	call	PL82	;call to abstracted procedure
 10237                           
 10238                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10239  001404  ECA1  F00C         	call	PL38	;call to abstracted procedure
 10240  001408  0E04               	movlw	4
 10241  00140A  6EDF               	movwf	indf2,c
 10242                           
 10243                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10244  00140C  ECA1  F00C         	call	PL38	;call to abstracted procedure
 10245  001410  0E00               	movlw	0
 10246  001412  8EDB               	bsf	plusw2,7,c
 10247                           
 10248                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 10249  001414  0E01               	movlw	1
 10250  001416  6E22               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 10251                           
 10252                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 10253                           
 10254                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10255                           
 10256                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10257  001418  ECBB  F008         	call	PL2	;call to abstracted procedure
 10258  00141C  0E80               	movlw	128
 10259  00141E  6EDF               	movwf	indf2,c
 10260  001420  0C80               	retlw	128
 10261  001422                     __end_of_USBCtrlEPAllowStatusStage:
 10262                           	opt stack 0
 10263  001422                     PL80:
 10264                           	opt stack 16
 10265  001422  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 10266  001424  26D9               	addwf	fsr2l,f,c
 10267  001426  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10268  001428  22DA               	addwfc	fsr2h,f,c
 10269  00142A  0012               	return	
 10270  00142C                     __end_ofPL80:
 10271                           	opt stack 0
 10272  00142C                     PL82:
 10273                           	opt stack 20
 10274  00142C  6EDE               	movwf	postinc2,c
 10275  00142E  0E02               	movlw	2
 10276  001430  6EDD               	movwf	postdec2,c
 10277  001432  0C02               	retlw	2
 10278  001434                     __end_ofPL82:
 10279                           	opt stack 0
 10280                           tblptru	equ	0xFF8
 10281                           tblptrh	equ	0xFF7
 10282                           tblptrl	equ	0xFF6
 10283                           tablat	equ	0xFF5
 10284                           prodh	equ	0xFF4
 10285                           prodl	equ	0xFF3
 10286                           intcon	equ	0xFF2
 10287                           postinc0	equ	0xFEE
 10288                           wreg	equ	0xFE8
 10289                           indf1	equ	0xFE7
 10290                           postdec1	equ	0xFE5
 10291                           fsr1h	equ	0xFE2
 10292                           fsr1l	equ	0xFE1
 10293                           indf2	equ	0xFDF
 10294                           postinc2	equ	0xFDE
 10295                           postdec2	equ	0xFDD
 10296                           plusw2	equ	0xFDB
 10297                           fsr2h	equ	0xFDA
 10298                           fsr2l	equ	0xFD9
 10299                           status	equ	0xFD8
 10300                           
 10301 ;; *************** function _USBCtrlTrfInHandler *****************
 10302 ;; Defined at:
 10303 ;;		line 2592 in file "picLibs/usb_device.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;		None
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  lastDTS         1    1[COMRAM] unsigned char 
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  1    wreg      void 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 3F/0
 10314 ;;		On exit  : 3F/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10317 ;;      Params:         0       0       0       0
 10318 ;;      Locals:         1       0       0       0
 10319 ;;      Temps:          0       0       0       0
 10320 ;;      Totals:         1       0       0       0
 10321 ;;Total ram usage:        1 bytes
 10322 ;; Hardware stack levels used:    1
 10323 ;; Hardware stack levels required when called:    1
 10324 ;; This function calls:
 10325 ;;		_USBCtrlTrfTxService
 10326 ;; This function is called by:
 10327 ;;		_USBCtrlEPService
 10328 ;; This function uses a non-reentrant model
 10329 ;;
 10330                           
 10331                           	psect	text59
 10332  001234                     __ptext59:
 10333                           	opt stack 0
 10334  001234                     _USBCtrlTrfInHandler:
 10335                           	opt stack 0
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;usb_device.c: 2594: uint8_t lastDTS;
 10339                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 10340                           
 10341                           ;incstack = 0
 10342  001234  D835               	call	PL14	;call to abstracted procedure
 10343  001236  0E00               	movlw	0
 10344  001238  BCDF               	btfsc	indf2,6,c
 10345  00123A  0E01               	movlw	1
 10346  00123C  6E2B               	movwf	USBCtrlTrfInHandler@lastDTS,c
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10350  00123E  0E04               	movlw	4
 10351  001240  1A0F               	xorwf	_pBDTEntryIn,f,c
 10352  001242  5010               	movf	_pBDTEntryIn+1,w,c
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 10356  001244  0E08               	movlw	8
 10357  001246  1981               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 10358  001248  E10B               	bnz	i2l3758
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;usb_device.c: 2605: {
 10362                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 10363  00124A  0102               	movlb	2	; () banked
 10364  00124C  5132               	movf	50,w,b	;volatile
 10365  00124E  0B7F               	andlw	127
 10366  001250  010F               	movlb	15	; () banked
 10367  001252  6F5C               	movwf	92,b	;volatile
 10368                           
 10369                           ; BSR set to: 15
 10370                           ;usb_device.c: 2607: if(UADDR != 0u)
 10371  001254  515C               	movf	92,w,b
 10372                           
 10373                           ; BSR set to: 15
 10374                           ;usb_device.c: 2608: {
 10375                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 10376  001256  0E10               	movlw	16
 10377  001258  B4D8               	btfsc	status,2,c
 10378                           
 10379                           ; BSR set to: 15
 10380                           ;usb_device.c: 2611: else
 10381                           ;usb_device.c: 2612: {
 10382                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 10383  00125A  0E04               	movlw	4
 10384                           
 10385                           ;usb_device.c: 2610: }
 10386  00125C  0100               	movlb	0	; () banked
 10387  00125E  6F81               	movwf	_USBDeviceState& (0+255),b	;volatile
 10388  001260                     i2l3758:
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;usb_device.c: 2614: }
 10392                           ;usb_device.c: 2615: }
 10393                           ;usb_device.c: 2618: if(controlTransferState == 1)
 10394  001260  0426               	decf	_controlTransferState,w,c	;volatile
 10395  001262  E112               	bnz	i2l520
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;usb_device.c: 2619: {
 10399                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 10400  001264  D828               	call	PL50	;call to abstracted procedure
 10401  001266  D821               	call	PL44	;call to abstracted procedure
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10405  001268  EC91  F007         	call	_USBCtrlTrfTxService	;wreg free
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10409  00126C  0E02               	movlw	2
 10410  00126E  1827               	xorwf	_shortPacketStatus,w,c	;volatile
 10411  001270  E103               	bnz	i2l3770
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;usb_device.c: 2628: {
 10415                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10416  001272  D816               	call	PL14	;call to abstracted procedure
 10417  001274  0E04               	movlw	4
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10421                           
 10422                           ;usb_device.c: 2633: }
 10423  001276  D00C               	goto	PL8	;call to abstracted procedure
 10424  001278                     i2l3770:
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;usb_device.c: 2634: else
 10428                           ;usb_device.c: 2635: {
 10429                           ;usb_device.c: 2636: if(lastDTS == 0)
 10430  001278  502B               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 10431  00127A  E103               	bnz	i2l3776
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;usb_device.c: 2637: {
 10435                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10436  00127C  D811               	call	PL14	;call to abstracted procedure
 10437  00127E  0E48               	movlw	72
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10441                           
 10442                           ;usb_device.c: 2640: }
 10443  001280  D007               	goto	PL8	;call to abstracted procedure
 10444  001282                     i2l3776:
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;usb_device.c: 2641: else
 10448                           ;usb_device.c: 2642: {
 10449                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10450  001282  D80E               	call	PL14	;call to abstracted procedure
 10451  001284  0E08               	movlw	8
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10455  001286  D004               	goto	PL8	;call to abstracted procedure
 10456  001288                     i2l520:
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;usb_device.c: 2648: else
 10460                           ;usb_device.c: 2649: {
 10461                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10462  001288  BE04               	btfsc	_outPipes+3,7,c	;volatile
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;usb_device.c: 2658: }
 10466                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;usb_device.c: 2656: {
 10470                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10471  00128A  9E04               	bcf	_outPipes+3,7,c	;volatile
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;usb_device.c: 2660: }
 10475                           ;usb_device.c: 2662: controlTransferState = 0;
 10476  00128C  6A26               	clrf	_controlTransferState,c	;volatile
 10477                           
 10478                           ; BSR set to: 0
 10479  00128E  0012               	return		;funcret
 10480  001290                     __end_of_USBCtrlTrfInHandler:
 10481                           	opt stack 0
 10482  001290                     PL8:
 10483                           	opt stack 19
 10484  001290  6EDF               	movwf	indf2,c
 10485  001292  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10486  001296  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10487  00129A  0E00               	movlw	0
 10488  00129C  8EDB               	bsf	plusw2,7,c
 10489  00129E  0C00               	retlw	0
 10490  0012A0                     __end_ofPL8:
 10491                           	opt stack 0
 10492  0012A0                     PL14:
 10493                           	opt stack 23
 10494  0012A0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 10495  0012A4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10496  0012A8  0012               	return	
 10497  0012AA                     __end_ofPL14:
 10498                           	opt stack 0
 10499  0012AA                     PL44:
 10500                           	opt stack 19
 10501  0012AA  22DA               	addwfc	fsr2h,f,c
 10502  0012AC  0E38               	movlw	56
 10503  0012AE  6EDE               	movwf	postinc2,c
 10504  0012B0  0E02               	movlw	2
 10505  0012B2  6EDD               	movwf	postdec2,c
 10506  0012B4  0C02               	retlw	2
 10507  0012B6                     __end_ofPL44:
 10508                           	opt stack 0
 10509  0012B6                     PL50:
 10510                           	opt stack 19
 10511  0012B6  EE20 F002          	lfsr	2,2
 10512  0012BA  500F               	movf	_pBDTEntryIn,w,c
 10513  0012BC  26D9               	addwf	fsr2l,f,c
 10514  0012BE  5010               	movf	_pBDTEntryIn+1,w,c
 10515  0012C0  0012               	return	
 10516  0012C2                     __end_ofPL50:
 10517                           	opt stack 0
 10518                           tblptru	equ	0xFF8
 10519                           tblptrh	equ	0xFF7
 10520                           tblptrl	equ	0xFF6
 10521                           tablat	equ	0xFF5
 10522                           prodh	equ	0xFF4
 10523                           prodl	equ	0xFF3
 10524                           intcon	equ	0xFF2
 10525                           postinc0	equ	0xFEE
 10526                           wreg	equ	0xFE8
 10527                           indf1	equ	0xFE7
 10528                           postdec1	equ	0xFE5
 10529                           fsr1h	equ	0xFE2
 10530                           fsr1l	equ	0xFE1
 10531                           indf2	equ	0xFDF
 10532                           postinc2	equ	0xFDE
 10533                           postdec2	equ	0xFDD
 10534                           plusw2	equ	0xFDB
 10535                           fsr2h	equ	0xFDA
 10536                           fsr2l	equ	0xFD9
 10537                           status	equ	0xFD8
 10538                           
 10539 ;; *************** function _USBCtrlTrfTxService *****************
 10540 ;; Defined at:
 10541 ;;		line 1771 in file "picLibs/usb_device.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;		None
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;  byteToSend      1    0[COMRAM] unsigned char 
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1    wreg      void 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10550 ;; Tracked objects:
 10551 ;;		On entry : 3D/2
 10552 ;;		On exit  : 3F/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10555 ;;      Params:         0       0       0       0
 10556 ;;      Locals:         1       0       0       0
 10557 ;;      Temps:          0       0       0       0
 10558 ;;      Totals:         1       0       0       0
 10559 ;;Total ram usage:        1 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; This function calls:
 10562 ;;		Nothing
 10563 ;; This function is called by:
 10564 ;;		_USBCtrlEPAllowDataStage
 10565 ;;		_USBCtrlTrfInHandler
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text60
 10570  000F22                     __ptext60:
 10571                           	opt stack 0
 10572  000F22                     _USBCtrlTrfTxService:
 10573                           	opt stack 19
 10574                           
 10575                           ;usb_device.c: 1773: uint8_t byteToSend;
 10576                           ;usb_device.c: 1777: byteToSend = 8;
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;incstack = 0
 10580  000F22  0E08               	movlw	8
 10581  000F24  6E2A               	movwf	USBCtrlTrfTxService@byteToSend,c
 10582                           
 10583                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10584  000F26  500E               	movf	_inPipes+5,w,c	;volatile
 10585  000F28  E10D               	bnz	i2l3232
 10586  000F2A  0E08               	movlw	8
 10587  000F2C  5C0D               	subwf	_inPipes+4,w,c	;volatile
 10588  000F2E  E20A               	bc	i2l3232
 10589                           
 10590                           ;usb_device.c: 1779: {
 10591                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10592  000F30  C00D  F02A         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10593                           
 10594                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10595  000F34  5027               	movf	_shortPacketStatus,w,c	;volatile
 10596  000F36  E102               	bnz	i2l3228
 10597                           
 10598                           ;usb_device.c: 1788: {
 10599                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10600  000F38  0E01               	movlw	1
 10601  000F3A  D003               	goto	L16
 10602  000F3C                     i2l3228:
 10603                           
 10604                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10605  000F3C  0427               	decf	_shortPacketStatus,w,c	;volatile
 10606  000F3E  E102               	bnz	i2l3232
 10607                           
 10608                           ;usb_device.c: 1792: {
 10609                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10610  000F40  0E02               	movlw	2
 10611  000F42                     L16:
 10612  000F42  6E27               	movwf	_shortPacketStatus,c	;volatile
 10613  000F44                     i2l3232:
 10614                           
 10615                           ;usb_device.c: 1794: }
 10616                           ;usb_device.c: 1795: }
 10617                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10618  000F44  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10619  000F46  5E0D               	subwf	_inPipes+4,f,c	;volatile
 10620  000F48  0E00               	movlw	0
 10621  000F4A  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 10622                           
 10623                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10624  000F4C  EE20 F001          	lfsr	2,1
 10625  000F50  D82F               	call	PL74	;call to abstracted procedure
 10626  000F52  C02A  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10627                           
 10628                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10629  000F56  0E38               	movlw	56
 10630  000F58  0100               	movlb	0	; () banked
 10631  000F5A  6F7A               	movwf	_pDst& (0+255),b
 10632  000F5C  0E02               	movlw	2
 10633  000F5E  6F7B               	movwf	(_pDst+1)& (0+255),b
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10637  000F60  B00C               	btfsc	_inPipes+3,0,c	;volatile
 10638  000F62  D01A               	goto	i2l3260
 10639  000F64  D00B               	goto	i2l3250
 10640  000F66                     i2l3242:
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;usb_device.c: 1812: {
 10644                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10645  000F66  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10646  000F6A  D819               	call	PL68	;call to abstracted procedure
 10647  000F6C  64F7               	cpfsgt	tblptrh,c
 10648  000F6E  D003               	bra	i2u202_47
 10649  000F70  0008               	tblrd		*
 10650  000F72  50F5               	movf	tablat,w,c
 10651  000F74  D002               	bra	i2u202_40
 10652  000F76                     i2u202_47:
 10653  000F76  ECFD  F005         	call	PL20	;call to abstracted procedure
 10654  000F7A                     i2u202_40:
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;usb_device.c: 1814: byteToSend--;
 10658  000F7A  D81F               	call	PL76	;call to abstracted procedure
 10659  000F7C                     i2l3250:
 10660                           
 10661                           ; BSR set to: 0
 10662  000F7C  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10663  000F7E  E1F3               	bnz	i2l3242
 10664  000F80  0012               	return	
 10665  000F82                     i2l3252:
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;usb_device.c: 1820: {
 10669                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10670  000F82  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 10671  000F86  D80B               	call	PL68	;call to abstracted procedure
 10672  000F88  64F7               	cpfsgt	tblptrh,c
 10673  000F8A  D003               	bra	i2u204_47
 10674  000F8C  0008               	tblrd		*
 10675  000F8E  50F5               	movf	tablat,w,c
 10676  000F90  D002               	bra	i2u204_40
 10677  000F92                     i2u204_47:
 10678  000F92  ECFD  F005         	call	PL20	;call to abstracted procedure
 10679  000F96                     i2u204_40:
 10680                           
 10681                           ; BSR set to: 0
 10682                           ;usb_device.c: 1822: byteToSend--;
 10683  000F96  D811               	call	PL76	;call to abstracted procedure
 10684  000F98                     i2l3260:
 10685                           
 10686                           ; BSR set to: 0
 10687  000F98  502A               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10688  000F9A  E1F3               	bnz	i2l3252
 10689                           
 10690                           ; BSR set to: 0
 10691  000F9C  0012               	return		;funcret
 10692  000F9E                     __end_of_USBCtrlTrfTxService:
 10693                           	opt stack 0
 10694  000F9E                     PL68:
 10695                           	opt stack 19
 10696  000F9E  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10697  000FA2  6AF8               	clrf	tblptru,c
 10698  000FA4  C07A  FFD9         	movff	_pDst,fsr2l
 10699  000FA8  C07B  FFDA         	movff	_pDst+1,fsr2h
 10700  000FAC  0E02               	movlw	(high __ramtop+-1)
 10701  000FAE  0012               	return	
 10702  000FB0                     __end_ofPL68:
 10703                           	opt stack 0
 10704  000FB0                     PL74:
 10705                           	opt stack 20
 10706  000FB0  500F               	movf	_pBDTEntryIn,w,c
 10707  000FB2  26D9               	addwf	fsr2l,f,c
 10708  000FB4  5010               	movf	_pBDTEntryIn+1,w,c
 10709  000FB6  22DA               	addwfc	fsr2h,f,c
 10710  000FB8  0012               	return	
 10711  000FBA                     __end_ofPL74:
 10712                           	opt stack 0
 10713  000FBA                     PL76:
 10714                           	opt stack 19
 10715  000FBA  6EDF               	movwf	indf2,c
 10716  000FBC  4A09               	infsnz	_inPipes,f,c	;volatile
 10717  000FBE  2A0A               	incf	_inPipes+1,f,c	;volatile
 10718  000FC0  0100               	movlb	0	; () banked
 10719  000FC2  4B7A               	infsnz	_pDst& (0+255),f,b
 10720  000FC4  2B7B               	incf	(_pDst+1)& (0+255),f,b
 10721  000FC6  062A               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10722  000FC8  0012               	return	
 10723  000FCA                     __end_ofPL76:
 10724                           	opt stack 0
 10725                           tblptru	equ	0xFF8
 10726                           tblptrh	equ	0xFF7
 10727                           tblptrl	equ	0xFF6
 10728                           tablat	equ	0xFF5
 10729                           prodh	equ	0xFF4
 10730                           prodl	equ	0xFF3
 10731                           intcon	equ	0xFF2
 10732                           postinc0	equ	0xFEE
 10733                           wreg	equ	0xFE8
 10734                           indf1	equ	0xFE7
 10735                           postdec1	equ	0xFE5
 10736                           fsr1h	equ	0xFE2
 10737                           fsr1l	equ	0xFE1
 10738                           indf2	equ	0xFDF
 10739                           postinc2	equ	0xFDE
 10740                           postdec2	equ	0xFDD
 10741                           plusw2	equ	0xFDB
 10742                           fsr2h	equ	0xFDA
 10743                           fsr2l	equ	0xFD9
 10744                           status	equ	0xFD8
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           intcon	equ	0xFF2
 10752                           postinc0	equ	0xFEE
 10753                           wreg	equ	0xFE8
 10754                           indf1	equ	0xFE7
 10755                           postdec1	equ	0xFE5
 10756                           fsr1h	equ	0xFE2
 10757                           fsr1l	equ	0xFE1
 10758                           indf2	equ	0xFDF
 10759                           postinc2	equ	0xFDE
 10760                           postdec2	equ	0xFDD
 10761                           plusw2	equ	0xFDB
 10762                           fsr2h	equ	0xFDA
 10763                           fsr2l	equ	0xFD9
 10764                           status	equ	0xFD8
 10765                           
 10766                           	psect	rparam
 10767  0000                     tblptru	equ	0xFF8
 10768                           tblptrh	equ	0xFF7
 10769                           tblptrl	equ	0xFF6
 10770                           tablat	equ	0xFF5
 10771                           prodh	equ	0xFF4
 10772                           prodl	equ	0xFF3
 10773                           intcon	equ	0xFF2
 10774                           postinc0	equ	0xFEE
 10775                           wreg	equ	0xFE8
 10776                           indf1	equ	0xFE7
 10777                           postdec1	equ	0xFE5
 10778                           fsr1h	equ	0xFE2
 10779                           fsr1l	equ	0xFE1
 10780                           indf2	equ	0xFDF
 10781                           postinc2	equ	0xFDE
 10782                           postdec2	equ	0xFDD
 10783                           plusw2	equ	0xFDB
 10784                           fsr2h	equ	0xFDA
 10785                           fsr2l	equ	0xFD9
 10786                           status	equ	0xFD8
 10787                           
 10788                           	psect	temp
 10789  000052                     btemp:
 10790                           	opt stack 0
 10791  000052                     	ds	1
 10792  0000                     int$flags	set	btemp
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           intcon	equ	0xFF2
 10800                           postinc0	equ	0xFEE
 10801                           wreg	equ	0xFE8
 10802                           indf1	equ	0xFE7
 10803                           postdec1	equ	0xFE5
 10804                           fsr1h	equ	0xFE2
 10805                           fsr1l	equ	0xFE1
 10806                           indf2	equ	0xFDF
 10807                           postinc2	equ	0xFDE
 10808                           postdec2	equ	0xFDD
 10809                           plusw2	equ	0xFDB
 10810                           fsr2h	equ	0xFDA
 10811                           fsr2l	equ	0xFD9
 10812                           status	equ	0xFD8
 10813                           tblptru	equ	0xFF8
 10814                           tblptrh	equ	0xFF7
 10815                           tblptrl	equ	0xFF6
 10816                           tablat	equ	0xFF5
 10817                           prodh	equ	0xFF4
 10818                           prodl	equ	0xFF3
 10819                           intcon	equ	0xFF2
 10820                           postinc0	equ	0xFEE
 10821                           wreg	equ	0xFE8
 10822                           indf1	equ	0xFE7
 10823                           postdec1	equ	0xFE5
 10824                           fsr1h	equ	0xFE2
 10825                           fsr1l	equ	0xFE1
 10826                           indf2	equ	0xFDF
 10827                           postinc2	equ	0xFDE
 10828                           postdec2	equ	0xFDD
 10829                           plusw2	equ	0xFDB
 10830                           fsr2h	equ	0xFDA
 10831                           fsr2l	equ	0xFD9
 10832                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    197
    Data        18
    BSS         220
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      81
    BANK0           160     26     159
    BANK1           256     12      76
    BANK2            64      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 767
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[767]), SetupPkt(BIGRAMh[8]), 

    putrsUSBUSART@data	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[12]), buttonMessage(BANK0[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[12]), buttonMessage(BANK0[18]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK0[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2480_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2480_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2480_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2480_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMh[64]), cdc_data_rx(BIGRAMh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 767
		 -> RAM(DATA[767]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S798$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S788$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S788$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S764$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S764$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S764$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S764$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_APP_DeviceCDCBasicDemoTasks
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_writeEepromByte
    _writeEepromByte->_generateWritePulses
    _readEepromByte->_generateWritePulses
    _enterICSP->_enterLowVoltageICSP
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_APP_DeviceCDCBasicDemoTasks

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   25462
                                             10 BANK1      2     2      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK0      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                         14    14      0   24035
                                             22 BANK0      4     4      0
                                              0 BANK1     10    10      0
                   _BUTTON_IsPressed
                       _CDCTxService
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
                     _readEepromByte
                    _writeEepromByte
 ---------------------------------------------------------------------------------
 (2) _writeEepromByte                                     10     5      5    9429
                                             12 BANK0     10     5      5
                          _enterICSP
                           _exitICSP
                 _generateReadPulses
                _generateWritePulses
 ---------------------------------------------------------------------------------
 (2) _readEepromByte                                       6     2      4    9216
                                             12 BANK0      6     2      4
                          _enterICSP
                           _exitICSP
                 _generateReadPulses
                _generateWritePulses
 ---------------------------------------------------------------------------------
 (3) _generateWritePulses                                 12     6      6    8502
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) _generateReadPulses                                   9     7      2     505
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _exitICSP                                             0     0      0       0
                _exitHighVoltageICSP
                 _exitLowVoltageICSP
 ---------------------------------------------------------------------------------
 (4) _exitLowVoltageICSP                                   0     0      0       0
                       _setTrisToOut
 ---------------------------------------------------------------------------------
 (4) _exitHighVoltageICSP                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _enterICSP                                            0     0      0       0
               _enterHighVoltageICSP
                _enterLowVoltageICSP
 ---------------------------------------------------------------------------------
 (4) _enterLowVoltageICSP                                  1     1      0       0
                                              0 BANK0      1     1      0
                       _setTrisToOut
 ---------------------------------------------------------------------------------
 (5) _setTrisToOut                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _enterHighVoltageICSP                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        7     5      2     372
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         3     1      2    2232
                                              9 BANK0      3     1      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    2129
                                              9 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1928
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   10    10      0   30325
                                             30 COMRAM    10    10      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30325
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3989
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   17702
                                             28 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   17063
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  1     1      0   12982
                                             27 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4487
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             7     7      0    4460
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3989
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                          _CDCInitEP
                 _USBCheckCDCRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (9) i2_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (10) i2_LED_Enable                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_BUTTON_Enable                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                              9     5      4     454
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (10) _LED_On                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _LED_Off                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
     _readEepromByte
       _enterICSP
         _enterHighVoltageICSP
         _enterLowVoltageICSP
           _setTrisToOut
       _exitICSP
         _exitHighVoltageICSP
         _exitLowVoltageICSP
           _setTrisToOut
       _generateReadPulses
       _generateWritePulses
     _writeEepromByte
       _enterICSP
         _enterHighVoltageICSP
         _enterLowVoltageICSP
           _setTrisToOut
       _exitICSP
         _exitHighVoltageICSP
         _exitLowVoltageICSP
           _setTrisToOut
       _generateReadPulses
       _generateWritePulses
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            1FF      0       0      12        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      C      4C       6       29.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      51       1       86.2%
BIGRAMh             40      0       0      11        0.0%
BITBANK2            40      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C       7        0.0%
DATA                 0      0     13C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed May 31 18:09:35 2017

                        ??_exitLowVoltageICSP 00D3                                    _USB_SD_Ptr 0301  
                                          PL2 1176                                            PL4 0D70  
                                          PL6 0D7A                                            PL8 1290  
                                          l36 0576                                            l39 059C  
                                          l87 1B8C                                   ?_LED_Enable 002A  
                               _USBDeviceInit 165E                            __size_of_CDCInitEP 0052  
                                __CFG_CP0$OFF 000000                                  __CFG_CP1$OFF 000000  
                                         PL10 0D84                                           PL20 0BFA  
                                         PL12 09FA                                           PL30 0CB4  
                                         PL22 0A2C                                           PL14 12A0  
                                         PL40 0C06                                           PL32 07AC  
                                         PL24 0526                                           PL16 0D94  
                                         PL50 12B6                                           PL42 0A54  
                                         PL34 0CC0                                           PL26 0794  
                                         PL18 0786                                           PL60 0EEA  
                                         PL52 0530                                           PL44 12AA  
                                         PL36 1908                                           PL28 079E  
                                         PL70 0558                                           PL62 0E4A  
                                         PL54 0CCC                                           PL46 1ACA  
                                         PL38 1942                                   __CFG_LVP$ON 000000  
                                         PL80 1422                                           PL72 0562  
                                         PL64 0546                                           PL56 0C1E  
                                         PL48 0982                                           PL90 0A6C  
                                         PL82 142C                                           PL74 0FB0  
                                         PL66 0E52                                           PL58 104E  
                                         PL92 1228                                           PL84 15E6  
                                         PL76 0FBA                                           PL68 0F9E  
                                         PL94 0EFE                                           PL86 13A6  
                                         PL78 0998                                           PL96 0F06  
                                         PL88 0E5A                                           PL98 08AE  
        USER_USB_CALLBACK_EVENT_HANDLER@event 0036          USER_USB_CALLBACK_EVENT_HANDLER@pdata 0038  
                                         l145 1982                                           l147 1986  
                                         l148 198A                                           l149 198E  
                 __end_of_USBStdGetDscHandler 0BFA                                           l384 18FC  
                                         l385 18FA                                           l802 1074  
                                         l804 10A0                                           l805 10A2  
                                         l806 10BA                                           l674 16CE  
                                         l819 076A                                           _BDT 000200  
                                         l790 0ABE                                           l791 0AD8  
                                         l688 0910                                           l793 0B00  
                                         l794 0B02                                           l795 0B18  
                                         l787 0A94                                           l797 0B40  
                                         l789 0ABC                                           l798 0B42  
                                __CFG_CPB$OFF 000000                                  __CFG_CPD$OFF 000000  
                                         _UIE 000F60                                           _UIR 000F62  
                      _APP_LEDUpdateUSBStatus 1516                                    _USBSuspend 1AB4  
                                __CFG_BORV$30 000000                          USBStdSetCfgHandler@i 003E  
                                         prod 000FF3                                           wreg 000FE8  
                      writeEepromByte@Success 00E8                                _USBDeviceTasks 07B8  
                              _USBDeviceState 0081                                  __CFG_FOSC$XT 000000  
                               _BUTTON_Enable 1BE8                         ??_USBCtrlTrfRxService 002A  
                      writeEepromByte@address 00DF                      __size_ofi2_USBDeviceInit 0048  
                              ??_getsUSBUSART 00DE                                          PL100 0A78  
                                        PL110 1860                                          PL102 0692  
                                        PL120 0CEA                                          PL112 1062  
                                        PL104 0F10                                          PL130 0B58  
                                        PL122 0D9E                                          PL114 0F18  
                                        PL106 0CE0                                          PL132 1BE2  
                                        PL124 0DA8                                          PL116 1B2C  
                                        PL108 0A82                                          PL134 0E62  
                                        PL126 09A8                                          PL118 13B4  
                                        PL128 149C                      USBEnableEndpoint@options 0032  
                             __end_of_LED_Off 1A60                                          l5002 0A36  
                  USBConfigureEndpoint@handle 0030                                          l5026 1696  
                                        l5080 195E                                          l4720 159A  
                                        l4704 170A                                          l4730 15BE  
                                        l4580 0C60                                          l4900 0968  
                                        l4724 15A8                                          l4574 0C42  
                                        l4902 097E                                          l4726 15AC  
                                        l4734 15E2                                          l4592 0C96  
                                        l4664 10EC                                          l4682 1B92  
                                        l4834 1B68                                          l4914 1992  
                                        l4922 1A7A                                          l4852 08E2  
                                        l4844 08D2                                          l4940 059E  
                                        l4766 0726                                          l4918 1A6A  
                                        l4872 092A                                          l4880 093C  
                                        l4864 0914                                          l4848 08DA  
                                        l4696 16D8                                          l4960 065C  
                                        l4882 0942                                          l4890 0954  
                                        l4858 0902                                          l4778 0758  
                                        l4954 0606                                          l4962 066E  
                                        l4946 05BA                                          l4970 068E  
                                        l4892 0958                                          l4948 05CE  
                                        l4964 0672                                          l4974 1B3A  
                                        l4978 1B46                                          l4996 1682  
                       ??i2_SYSTEM_Initialize 002B                                          STR_1 03C6  
                                        u4010 093A                                          u4030 0952  
                                        u4017 0936                                          u4037 094E  
                                        u4217 196E                                          u4227 076E  
                         _generateWritePulses 0A8C                                          u4237 19C0  
                                        u3704 0B32                                          u3705 0B30  
                                        u3644 0AAE                                          u3645 0AAC  
                                        u3830 1706                                          u3734 1092  
                                        u3910 076A                                          u3735 108C  
                                        u3674 0AF2                                          u3675 0AF0  
                                        u3837 1702                                          u3774 10DA  
                                        u3775 10D4                         ??_USBCtrlTrfTxService 002A  
                                        _UCFG 000F61                                          _UEP0 000F53  
                                        _UEP1 000F54                                          _UEIE 000F5B  
                                        _UCON 000F64                                          _UEIR 000F5F  
                             _CDCDataInHandle 0076        USBStdFeatureReqHandler@current_ep_data 0042  
                                        _pDst 007A                                          _main 194C  
                    ??i2_USBTransferOnePacket 002E                                          fsr1h 000FE2  
                                        fsr2h 000FDA                                          indf1 000FE7  
                                        indf2 000FDF                                          fsr1l 000FE1  
                                        fsr2l 000FD9                               _USBDeviceAttach 18E4  
                                        btemp 0052                                          prodh 000FF4  
                                        prodl 000FF3                                          start 0062  
                    __size_ofi2_BUTTON_Enable 0006                                 __CFG_IESO$OFF 000000  
                  __end_of_USBCheckStdRequest 1228                        ??_USBCtrlTrfOutHandler 002C  
                                ___param_bank 000000                     ??_USBStdFeatureReqHandler 003E  
                      __size_of_putrsUSBUSART 005E                      ??_USBStdGetStatusHandler 002A  
                        ?_generateWritePulses 00D3                                ?_USBDeviceInit 002A  
                               __CFG_PLLEN$ON 000000                                   _writeBuffer 0100  
                                       ?_main 002A             __size_of_USBCtrlEPServiceComplete 006A  
                                       _ANSEL 000F7E                        __end_of_USBDeviceTasks 08AE  
                   ?_USBCtrlEPServiceComplete 002A                                         i2l105 1A0C  
                                       i2l115 1A38                                         i2l107 1A10  
                                       i2l108 1A14                                         i2l117 1A3C  
                                       i2l109 1A18                                         i2l118 1A40  
                                       i2l119 1A44                                         i2l145 19E0  
                                       i2l147 19E4                                         i2l148 19E8  
                                       i2l149 19EC                                         i2l510 1B00  
                                       i2l335 07E0                                         i2l520 1288  
                                       i2l512 1B12                                         i2l409 113C  
                                       i2l345 0854                                         i2l346 08AA  
                                       i2l347 085A                                         i2l550 03EE  
                                       i2l462 0BB4                                         i2l534 11B0  
                                       i2l543 11CC                                         i2l560 0494  
                                       i2l472 143C                                         i2l465 0BE2  
                                       i2l635 1300                                         i2l467 0BE6  
                                       i2l475 148A                                         i2l476 1446  
                                       i2l477 144A                                         i2l485 193E  
                                       i2l568 04D6                                         _UADDR 000F5C  
                              __CFG_BBSIZ$OFF 000000                                         _USTAT 000F63  
                  __end_of_generateReadPulses 110C                                 __CFG_WRT0$OFF 000000  
          __size_of_USBCtrlEPAllowStatusStage 0064                                 __CFG_WRT1$OFF 000000  
                              __CFG_EBTR0$OFF 000000                                __CFG_FCMEN$OFF 000000  
                              ?_BUTTON_Enable 002A                                __CFG_EBTR1$OFF 000000  
             __end_of_USBCtrlEPAllowDataStage 177C                                         _sd000 03C2  
                                       _sd001 037C                                         _sd002 0348  
                               __CFG_WRTB$OFF 000000                ?_USBIncrement1msInternalTimers 002A  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                              __CFG_EBTRB$OFF 000000                                    i2memset@p1 002A  
                   __size_of_BUTTON_IsPressed 001A                             ??_writeEepromByte 00E4  
                              __CFG_BOREN$OFF 000000                                         tablat 000FF5  
                         __size_of_LED_Enable 0030                                         plusw2 000FDB  
                           __end_of_CDCInitEP 1820                                         status 000FD8  
                                __end_ofPL100 0A82                                  __end_ofPL110 186C  
                                __end_ofPL102 069C                                  __end_ofPL120 0CF4  
                                __end_ofPL112 106E                                  __end_ofPL104 0F18  
                                __end_ofPL130 0B60                                  __end_ofPL122 0DA8  
                                __end_ofPL114 0F22                                  __end_ofPL106 0CEA  
                                __end_ofPL132 1BE8                                  __end_ofPL124 0DB2  
                                __end_ofPL116 1B34                                  __end_ofPL108 0A8C  
                                __end_ofPL134 0E6A                                  __end_ofPL126 09B2  
                                __end_ofPL118 13BE                                  __end_ofPL128 14A6  
                            __end_ofi2_memset 1AB4                               putUSBUSART@data 00D3  
                __size_of_USBStdSetCfgHandler 0084                                __CFG_MCLRE$OFF 000000  
                             __initialization 177C                                  __end_of_main 197C  
                       ??_generateWritePulses 00D9                           _exitHighVoltageICSP 1C04  
                   __size_of_USBCtrlEPService 0070                                        ??_main 014A  
                               __activetblptr 000002                               ?_USBDeviceTasks 002A  
                                 ?_USBSuspend 002A                                     ??_LED_Off 002A  
                                _cdc_mem_type 007C                                 _putrsUSBUSART 16C4  
                     __end_of_USBDeviceAttach 1908                              _CDCDataOutHandle 0078  
               generateWritePulses@payLoadLsb 00D7                 generateWritePulses@payLoadMsb 00D5  
                                      _ANSELH 000F7F                               getsUSBUSART@len 00DD  
                      SYSTEM_Initialize@state 00D4                         __size_of_CDCTxService 00CA  
                                      i2l3022 1A1C                                        i2l3110 156C  
                                      i2l3102 154E                                        i2l3006 1380  
                                      i2l3016 1A48                                        i2l3032 18CA  
                                      i2l3200 160A                                        i2l3106 155C  
                                      i2l3116 1576                                        i2l3028 18BC  
                                      i2l3052 0E76                                        i2l3124 12CE  
                                      i2l3118 1580                                        i2l3070 0ECA  
                                      i2l3142 12F6                                        i2l3134 12E4  
                                      i2l3046 19F0                                        i2l3232 0F44  
                                      i2l3152 1314                                        i2l3128 12DA  
                                      i2l3208 1612                                        i2l3312 1752  
                                      i2l4104 1AEA                                        _LED_On 1A08  
                                      i2l3242 0F66                                        i2l3250 0F7C  
                                      i2l3090 1520                                        i2l3058 0E92  
                                      i2l4106 1AEC                                        i2l4210 09D2  
                                      i2l3252 0F82                                        i2l3260 0F98  
                                      i2l3228 0F3C                                        i2l3164 132C  
                                      i2l3316 1766                                        i2l4140 193C  
                                      i2l3094 152E                                        i2l3158 1326  
                                      i2l3190 1B26                                        i2l3510 1124  
                              __CFG_WDTEN$OFF 000000                                        i2l3408 147C  
                                      i2l3264 1A94                                        i2l3336 0FEA  
                                      i2l4160 1508                                        i2l4304 07D8  
                                      i2l3098 153E                                        i2l3186 1B1A  
                                      i2l3450 0452                                        i2l3442 0434  
                                      i2l3426 03F0                                        i2l3370 0B84  
                                      i2l3514 112A                                        i2l4330 0812  
                                      i2l3284 13EC                                        i2l5124 1626  
                                      i2l3196 15F6                                        i2l3268 1AA4  
                                      i2l4180 09C2                                        i2l4324 07FC  
                                      i2l5126 165A                                        i2l3198 1600  
                                      i2l3366 0B70                                        i2l3358 1034  
                                      i2l3606 11BA                                        i2l3526 114E  
                                      i2l3534 115C                                        i2l4342 0826  
                                      i2l4318 07F2                                        i2l3480 04C6  
                                      i2l3456 0462                                        i2l3632 11E8  
                                      i2l3562 0D1A                                        i2l3466 0488  
                                      i2l3378 0BB8                                        i2l3386 0BEA  
                                      i2l3618 11C0                                        i2l3706 189E  
                                      i2l4338 081E                                        i2l3580 0D54  
                                      i2l3468 04A0                                        i2l3628 11DC  
                                      i2l4356 0848                                        i2l4348 0830  
                                      i2l3558 0D0E                                        i2l3494 04FC  
                                      i2l3478 04C0                                        i2l3398 1458  
                                      i2l4382 088E                                        i2l3584 0D5C  
                                      i2l3568 0D28                                        i2l3496 0502  
                                      i2l3488 04E2                                        i2l4384 08A2  
                                      i2l4376 0878                                        i2l4296 07CC  
                                      i2l3770 1278                                        i2l3758 1260  
                                      i2l3776 1282                                        i2l3698 187E  
                        ?_exitHighVoltageICSP 002A                                 CDCTxService@i 00DC  
                 __end_of_enterLowVoltageICSP 19DC                      i2USBTransferOnePacket@ep 0030  
                           ??i2_USBDeviceInit 0032               __size_ofi2_USBTransferOnePacket 0080  
                           _shortPacketStatus 0027                                __CFG_XINST$OFF 000000  
                             USBDeviceTasks@i 0047                   USBStdFeatureReqHandler@pUEP 0040  
                    USBTransferOnePacket@data 00D4                    USBCtrlTrfInHandler@lastDTS 002B  
                             ??_USBDeviceInit 00DB                                  ?_putUSBUSART 00D3  
                              __CFG_STVREN$ON 000000                          __end_of_getsUSBUSART 15E6  
                            __end_of_exitICSP 1C00                             ??i2_BUTTON_Enable 002A  
                           _USBEnableEndpoint 18AE               __size_of_USBStdGetStatusHandler 0068  
                                      _memcpy 186C                                 ?i2_LED_Enable 002A  
                                      _memset 1A60                                        clear_0 17A2  
                                      clear_1 17AE                                        clear_2 17BA  
                          ?_USBEnableEndpoint 0032                 __size_of_USBTransferOnePacket 0082  
                             ??_BUTTON_Enable 00D3                                  _CDCTxService 08B8  
                                __mediumconst 0000                                        tblptrh 000FF7  
                                      tblptrl 000FF6                                        tblptru 000FF8  
                              ?_putrsUSBUSART 00D3      APP_DeviceCDCBasicDemoTasks@eepromAddress 0140  
                         ??_USBEnableEndpoint 0033                                   _CtrlTrfData 000238  
                             __CFG_HFOFST$OFF 000000                  ?_APP_DeviceCDCBasicDemoTasks 002A  
                       ??_exitHighVoltageICSP 00D3                          _controlTransferState 0026  
                           _SYSTEM_Initialize 1B34                                    __accesstop 0060  
                     __end_of__initialization 17C0                            ?_SYSTEM_Initialize 002A  
                               ___rparam_used 000001                      __size_of_USBStallHandler 002A  
                         __size_of_USBSuspend 0016                       __size_of_readEepromByte 0098  
                              __pcstackCOMRAM 002A                     __end_of_USBEnableEndpoint 18E4  
                               __end_of_sd000 03C6                                 __end_of_sd001 03B0  
                               __end_of_sd002 037C                                  __pidataBANK0 1BBC  
                         ??_SYSTEM_Initialize 00D4                                     LED_On@led 002A  
            __size_of_USBCtrlEPAllowDataStage 005A                                ??i2_LED_Enable 002A  
                                ??_LED_Enable 00D3                 __size_of_USBConfigureEndpoint 0064  
                 __end_of_USBCtrlTrfInHandler 1290                       ?_APP_LEDUpdateUSBStatus 002A  
                                  __end_ofPL2 11A4                                    __end_ofPL4 0D7A  
                                  __end_ofPL6 0D84                                    __end_ofPL8 12A0  
                      i2_USBTransferOnePacket 0E6A                               __CFG_PCLKEN$OFF 000000  
                                   ?i2_memset 002A                                    _cdc_rx_len 001C  
                                  _cdc_tx_len 001B                                 _buttonMessage 00ED  
                    ??_USBCtrlTrfSetupHandler 0046                       _USBTicksSinceSuspendEnd 007D  
                            ?_USBDeviceAttach 002A                     __end_of_SYSTEM_Initialize 1B50  
                            _BUTTON_IsPressed 1B88                        _USBStdGetStatusHandler 1434  
                          __size_of_enterICSP 0004                                 _buttonPressed 007F  
                                  __pbssBANK0 0060                                    __pbssBANK1 0100  
                                     ?_LED_On 002A                 __size_of_enterHighVoltageICSP 0002  
               ??_APP_DeviceCDCBasicDemoTasks 00E9      __end_of_APP_DeviceCDCBasicDemoInitialize 1BBC  
   __size_of_APP_DeviceCDCBasicDemoInitialize 001A            ??_APP_DeviceCDCBasicDemoInitialize 002A  
           ?_APP_DeviceCDCBasicDemoInitialize 002A              _APP_DeviceCDCBasicDemoInitialize 1BA2  
                          __end_of_LED_Enable 19AC                   __size_of_USBWakeFromSuspend 0020  
                                 _pBDTEntryIn 000F              __end_of_USBCtrlEPServiceComplete 1176  
                 __size_of_USBCheckCDCRequest 0080                          USBCtrlTrfRxService@i 002A  
                 __size_of_exitLowVoltageICSP 000E                                 LED_Enable@led 00D3  
              __end_of_APP_LEDUpdateUSBStatus 1586                                       ?_memcpy 002A  
                APP_DeviceCDCBasicDemoTasks@i 0149                                       ?_memset 00D3  
                                  _device_dsc 03B0                              _USBCtrlEPService 14A6  
                                  _ep_data_in 0073                               _writeEepromByte 069C  
                 __end_of_USBCtrlTrfRxService 0D70                            _USBCheckStdRequest 11A4  
                           _configDescriptor1 0305                         generateReadPulses@OUT 00D8  
                             ??_putrsUSBUSART 00D5                                       _LED_Off 1A34  
                 __end_ofi2_SYSTEM_Initialize 1B2C                                    ??i2_memset 0030  
                 __end_of_USBCtrlTrfTxService 0F9E                           _USBStdSetCfgHandler 0FCA  
                               ?_setTrisToOut 002A                               __CFG_USBDIV$OFF 000000  
                         ?_USBCheckStdRequest 002A                  __size_of_USBStdGetDscHandler 009A  
                                     _UIEbits 000F60                                       _UIRbits 000F62  
                   generateReadPulses@command 00D3                                     ?_exitICSP 002A  
                             __size_of_LED_On 002C                                 _cdc_trf_state 0080  
              APP_LEDUpdateUSBStatus@ledCount 0019                            _generateReadPulses 106E  
                                     _pCDCDst 006A                                       _pCDCSrc 006D  
                             __CFG_PWRTEN$OFF 000000                         __size_of_getsUSBUSART 0060  
                                     __Hparam 0000               ??_USBIncrement1msInternalTimers 002A  
                        ?_USBStdSetCfgHandler 002A                                     _CDCInitEP 17CE  
                                     __Lparam 0000                    __size_of_USBEnableEndpoint 0036  
                                  _readBuffer 0082                           ?_generateReadPulses 00D3  
                        ??_USBCheckStdRequest 0045                 __size_of_USBCtrlTrfOutHandler 0020  
                            ??_USBDeviceTasks 0047                             ??_USBStallHandler 002A  
                           __end_of_enterICSP 1C04                                  __psmallconst 0300  
        __size_of_APP_DeviceCDCBasicDemoTasks 0126                          __size_of_putUSBUSART 001C  
                                     __pcinit 177C                            getsUSBUSART@buffer 00DC  
                             __size_of_memcpy 0042                               __size_of_memset 002A  
                   __end_of_configDescriptor1 0348                                       __ramtop 0300  
                                     __ptext0 194C                                       __ptext1 165E  
                                     __ptext2 1A60                                       __ptext3 18E4  
                                     __ptext4 1B34                                       __ptext5 197C  
                                     __ptext6 1BE8                                       __ptext7 056C  
                                     __ptext8 069C                                       __ptext9 0DB2  
                                     _inPipes 0009                   _USBDeferOUTDataStagePackets 007E  
                                ??_USBSuspend 003E                                ??_setTrisToOut 00D3  
                             i2_USBDeviceInit 09B2                              i2USBDeviceInit@i 0032  
                        ??_generateReadPulses 00D5                            __end_of_USB_CD_Ptr 0305  
                  __size_of_SYSTEM_Initialize 001C               __size_of_USBCtrlTrfSetupHandler 0040  
                        end_of_initialization 17C0                                  _getsUSBUSART 1586  
                        __end_ofi2_LED_Enable 1A08                            __end_of_USB_SD_Ptr 0304  
                                  ??_exitICSP 00D3                                       memcpy@d 0030  
                                     memcpy@n 002E                                       memcpy@s 0032  
                         _pBDTEntryEP0OutNext 0015                                       memset@c 00D5  
                                     memset@n 00D7                                       memset@p 00D9  
                               __Lmediumconst 0000                               _USB1msTickCount 0066  
             _dummy_encapsulated_cmd_response 00C2                               i2_BUTTON_Enable 1BDC  
                    ?_USBStdFeatureReqHandler 002A                   __end_of_generateWritePulses 0B58  
                       ??_USBStdSetCfgHandler 003E                                    ?_CDCInitEP 002A  
                              _readEepromByte 0DB2                            __end_of_USBSuspend 1ACA  
                     _USBCtrlEPAllowDataStage 1722                            readEepromByte@Data 00E3  
                                     postdec1 000FE5                                       postdec2 000FDD  
                     __end_of_writeEepromByte 0786                                       postinc0 000FEE  
                                     postinc2 000FDE                      _USBCtrlEPServiceComplete 110C  
                  _USBStatusStageEnabledFlag1 001F                    _USBStatusStageEnabledFlag2 001E  
                          USBEnableEndpoint@p 0033                                     _PORTAbits 000F80  
                                   _PORTCbits 000F82                                     _TRISBbits 000F93  
                                   _TRISCbits 000F94                            _BothEP0OutUOWNsSet 0022  
                   USBConfigureEndpoint@EPNum 002F                    ?_USBCtrlEPAllowStatusStage 002A  
         USER_USB_CALLBACK_EVENT_HANDLER@size 003A       APP_DeviceCDCBasicDemoTasks@numBytesRead 0148  
                                   _USTATcopy 0028                  __end_of_USBTransferOnePacket 0CB4  
                              __end_of_LED_On 1A34                        __end_of_readEepromByte 0E4A  
                           putUSBUSART@length 00D5                  __size_of_enterLowVoltageICSP 0030  
                      _USBCtrlTrfSetupHandler 1820                      __end_of_BUTTON_IsPressed 1BA2  
                     ?i2_USBTransferOnePacket 002A                         __end_of_USBDeviceInit 16C4  
       __end_of_USBIncrement1msInternalTimers 1B88        __size_of_USBIncrement1msInternalTimers 001C  
               _USBIncrement1msInternalTimers 1B6C                                    LED_Off@led 002A  
                     __end_ofi2_USBDeviceInit 09FA                                     i2memset@c 002C  
                                   i2memset@n 002E                                     i2memset@p 0030  
                              __end_of_memcpy 18AE                            putrsUSBUSART@pData 00D7  
                              __end_of_memset 1A8A                             _USBBusIsSuspended 0024  
                                 __end_ofPL10 0D94                                   __end_ofPL20 0C06  
                                 __end_ofPL12 0A2C                                   __end_ofPL30 0CC0  
                                 __end_ofPL22 0A54                                   __end_ofPL14 12AA  
                                 __end_ofPL40 0C1E                                   __end_ofPL32 07B8  
                                 __end_ofPL24 0530                                   __end_ofPL16 0D9E  
                                 __end_ofPL50 12C2                                   __end_ofPL42 0A6C  
                                 __end_ofPL34 0CCC                                   __end_ofPL26 079E  
                                 __end_ofPL18 0794                                   __end_ofPL60 0EFE  
                                 __end_ofPL52 0546                                   __end_ofPL44 12B6  
                                 __end_ofPL36 1918                                   __end_ofPL28 07AC  
                                 __end_ofPL70 0562                                   __end_ofPL62 0E52  
                                 __end_ofPL54 0CE0                                   __end_ofPL46 1AD6  
                                 __end_ofPL38 194C                                   __end_ofPL80 142C  
                                 __end_ofPL72 056C                                   __end_ofPL64 0558  
                                 __end_ofPL56 0C32                                   __end_ofPL48 0998  
                                 __end_ofPL90 0A78                                   __end_ofPL82 1434  
                                 __end_ofPL74 0FBA                                   __end_ofPL66 0E5A  
                                 __end_ofPL58 1062                                   __end_ofPL92 1234  
                                 __end_ofPL84 15F4                                   __end_ofPL76 0FCA  
                                 __end_ofPL68 0FB0                                   __end_ofPL94 0F06  
                                 __end_ofPL86 13B4                                   __end_ofPL78 09A8  
                                 __end_ofPL96 0F10                                   __end_ofPL88 0E62  
                                 __end_ofPL98 08B8                           start_initialization 177C  
                 __end_of_exitHighVoltageICSP 1C06                       ?_USBStdGetStatusHandler 002A  
                    i2SYSTEM_Initialize@state 002B                         __end_of_BUTTON_Enable 1BF2  
               USBCtrlTrfRxService@byteToRead 002B                       __end_ofi2_BUTTON_Enable 1BE2  
                                 _cdc_data_rx 000280                                   _cdc_data_tx 000240  
                           __size_ofi2_memset 002A                  __end_of_USBConfigureEndpoint 13A6  
             __end_of_USBStdFeatureReqHandler 0526                              writeEepromByte@i 00E4  
                                    ??_LED_On 002A             __end_of_USBCtrlEPAllowStatusStage 1422  
                    __end_of_USBCtrlEPService 1516                               ?_readEepromByte 00DF  
                   ??_USBCtrlEPAllowDataStage 002B                                   ??_CDCInitEP 0036  
                              USBDeviceInit@i 00DB                     generateWritePulses@i_3288 00DD  
                   generateWritePulses@i_3289 00DE                        _pBDTEntryEP0OutCurrent 0017  
                        __end_of_setTrisToOut 1BFC                       USBTransferOnePacket@dir 00D3  
                     USBTransferOnePacket@len 00D6                __end_ofi2_USBTransferOnePacket 0EEA  
                            ?_writeEepromByte 00DF                           _USBStdGetDscHandler 0B60  
                                 __pdataBANK0 00ED                  __end_of_enterHighVoltageICSP 1C08  
                                    ??_memcpy 0030                                      ??_memset 00D9  
                      BUTTON_IsPressed@button 00D3                        _USBActiveConfiguration 0029  
              __end_of_USBStdGetStatusHandler 149C                           writeEepromByte@Data 00E6  
                                    ?_LED_Off 002A                                   __pbssCOMRAM 0001  
                         writeEepromByte@data 00E3                                 __pcstackBANK0 00D3  
                               __pcstackBANK1 0140                  __size_of_USBCtrlTrfInHandler 005C  
                       __size_ofi2_LED_Enable 002C                          ?_USBStdGetDscHandler 002A  
                  __end_of_USBWakeFromSuspend 1AF6                               _USBStallHandler 1918  
                                _pBDTEntryOut 0060                    __end_of_USBCheckCDCRequest 1342  
                           __size_of_exitICSP 0004                      __size_of_USBDeviceAttach 0024  
                  __end_of_exitLowVoltageICSP 1BDC                         i2BUTTON_Enable@button 002A  
                                   __pintcode 0008                                  i2_LED_Enable 19DC  
                            ?i2_USBDeviceInit 002A                          _USBTransferOnePacket 0C32  
                                   _enterICSP 1C00                                   __smallconst 0300  
                       __end_of_putrsUSBUSART 1722                  __end_of_USBCtrlTrfOutHandler 1B16  
                       ??_USBStdGetDscHandler 002A                                   _ep_data_out 0070  
                            ?i2_BUTTON_Enable 002A           __end_of_APP_DeviceCDCBasicDemoTasks 0692  
                 _APP_DeviceCDCBasicDemoTasks 056C                  __size_of_USBCtrlTrfRxService 007C  
               USBConfigureEndpoint@direction 002A                  __size_ofi2_SYSTEM_Initialize 0016  
                __size_of_USBCtrlTrfTxService 007C                                      _LATBbits 000F8A  
                                    _LATCbits 000F8B                    ??_USBCtrlEPServiceComplete 002B  
                                    _IPR2bits 000FA2                                      _PIE2bits 000FA0  
                                    i2u202_40 0F7A                                      i2u202_47 0F76  
                                    i2u204_40 0F96                                      i2u220_40 0BDC  
                                    i2u204_47 0F92                                      i2u220_47 0BDA  
                                    i2u217_40 0B9E                                      i2u217_47 0B9C  
                                    i2u218_40 0BB0                                      i2u218_47 0BAE  
                                    i2u190_40 1548                                      _PIR2bits 000FA1  
                                    _RCONbits 000FD0                                 ??_putUSBUSART 00D6  
                            __CFG_WDTPS$32768 000000                                      _UEP0bits 000F53  
                  _USBDeferINDataStagePackets 001D                   __size_of_USBCheckStdRequest 0084  
                                    _UCONbits 000F64                          _USBConfigureEndpoint 1342  
                        generateWritePulses@i 00DC              __size_of_USBStdFeatureReqHandler 0152  
                       ?_USBTransferOnePacket 00D3                                    ?_enterICSP 002A  
                             i2LED_Enable@led 002A                             _SYS_InterruptHigh 0008  
                               ?_CDCTxService 002A                                  _RemoteWakeup 0025  
                                    i2_memset 1A8A                              __size_of_LED_Off 002C  
                          ?_SYS_InterruptHigh 002A                       __end_of_USBStallHandler 1942  
                         _enterLowVoltageICSP 19AC                   __size_of_generateReadPulses 009E  
                                   copy_data0 1790                             putrsUSBUSART@data 00D3  
                 ??_USBCtrlEPAllowStatusStage 002A                   __end_of_USBStdSetCfgHandler 104E  
                        _enterHighVoltageICSP 1C06                           ??_SYS_InterruptHigh 0048  
                       __size_of_setTrisToOut 000A                            __end_of_device_dsc 03C2  
                       readEepromByte@address 00DF                      ??_APP_LEDUpdateUSBStatus 002B  
                     ?_USBCtrlTrfSetupHandler 002A                       USBStdGetStatusHandler@p 002A  
                                    __Hrparam 0000                                     memcpy@tmp 0034  
                                    __Lrparam 0000                        USBTransferOnePacket@ep 00D9  
                        ?_enterLowVoltageICSP 002A                                      _SetupPkt 000230  
                       ?_USBConfigureEndpoint 002A                             ??_USBDeviceAttach 00D3  
                           ?_BUTTON_IsPressed 002A                  __size_of_generateWritePulses 00CC  
                  generateWritePulses@command 00D3                     __end_of_SYS_InterruptHigh 0062  
                          ??_BUTTON_IsPressed 00D3                           __end_of_putUSBUSART 1B6C  
                                 _line_coding 00CA                                ??_CDCTxService 00DC  
                     __size_of_USBDeviceTasks 00F6                                  _setTrisToOut 1BF2  
                                    __ptext10 0A8C                                      __ptext11 106E  
                                    __ptext20 1B50                                      __ptext12 1BFC  
                                    __ptext21 1586                                      __ptext13 1BCE  
                                    __ptext30 1918                                      __ptext22 08B8  
                                    __ptext14 1C04                                      __ptext31 1B6C  
                                    __ptext23 0C32                                      __ptext15 1C00  
                                    __ptext40 1434                                      __ptext32 14A6  
                                    __ptext24 1B88                                      __ptext16 19AC  
                                    __ptext41 0B60                                      __ptext33 186C  
                                    __ptext17 1BF2                                      __ptext50 18AE  
                                    __ptext42 03D4                                      __ptext34 1820  
                                    __ptext26 07B8                                      __ptext18 1C06  
                                    __ptext51 1342                                      __ptext43 15F4  
                                    __ptext35 110C                                      __ptext27 09B2  
                                    __ptext19 16C4                                      __ptext60 0F22  
                                    __ptext52 1516                                      __ptext44 1B16  
                                    __ptext36 1722                                      __ptext28 1AD6  
                                    __ptext53 1A08                                      __ptext45 19DC  
                                    __ptext37 11A4                                      __ptext29 1AB4  
                                    __ptext54 1A34                                      __ptext46 1BDC  
                                    __ptext38 0FCA                                      __ptext55 1BA2  
                                    __ptext47 12C2                                      __ptext39 1A8A  
                                    __ptext56 1AF6                                      __ptext48 17CE  
                                    __ptext57 0CF4                                      __ptext49 0E6A  
                                    __ptext58 13BE                                      __ptext59 1234  
                         generateReadPulses@i 00DA                              ??_readEepromByte 00E3  
                       ?_enterHighVoltageICSP 002A                                      _exitICSP 1BFC  
              __end_of_USBCtrlTrfSetupHandler 1860                                 __size_of_main 0030  
                           ?_USBCtrlEPService 002A                            ??_USBCtrlEPService 0046  
                         _USBCtrlTrfInHandler 1234                         ??_enterLowVoltageICSP 00D3  
                         BUTTON_Enable@button 00D3                                      _outPipes 0001  
                        _USBCtrlTrfOutHandler 1AF6                                      int$flags 0052  
                   _USBCtrlEPAllowStatusStage 13BE                                    _LED_Enable 197C  
                    generateReadPulses@i_3316 00DB                        ??_USBTransferOnePacket 00D7  
                            putrsUSBUSART@len 00D9                                   ??_enterICSP 00D4  
                   _USBDeferStatusStagePacket 0020                      CDCTxService@byte_to_send 00DD  
                                  _INTCONbits 000FF2                          ?_USBCtrlTrfInHandler 002A  
                                    memcpy@d1 002A                                      memcpy@s1 002C  
               USBCtrlTrfTxService@byteToSend 002A                                      memset@p1 00D3  
                            ?_USBStallHandler 002A                      USBStdFeatureReqHandler@p 0043  
                                    intlevel2 0000                        __size_of_USBDeviceInit 0066  
                __size_of_exitHighVoltageICSP 0002       __end_of_USER_USB_CALLBACK_EVENT_HANDLER 165E  
    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 006A             ??_USER_USB_CALLBACK_EVENT_HANDLER 003C  
            ?_USER_USB_CALLBACK_EVENT_HANDLER 0036               _USER_USB_CALLBACK_EVENT_HANDLER 15F4  
                i2USBTransferOnePacket@handle 0031  APP_DeviceCDCBasicDemoTasks@eepromAddress_297 0144  
             __size_of_APP_LEDUpdateUSBStatus 0070                    i2USBTransferOnePacket@data 002B  
                      ??_USBConfigureEndpoint 002B                         ?_USBCtrlTrfOutHandler 002A  
                      __size_of_BUTTON_Enable 000A                                   _putUSBUSART 1B50  
                        __CFG_CPUDIV$NOCLKDIV 000000                           _USBCtrlTrfRxService 0CF4  
                          _USBWakeFromSuspend 1AD6                       _USBStdFeatureReqHandler 03D4  
                         i2_SYSTEM_Initialize 1B16                            _USBCheckCDCRequest 12C2  
                         _USBCtrlTrfTxService 0F22                    __size_of_SYS_InterruptHigh 005A  
                          _exitLowVoltageICSP 1BCE                           ?_USBWakeFromSuspend 002A  
                    __size_of_writeEepromByte 00EA                         ??_USBCtrlTrfInHandler 002B  
                       _USBAlternateInterface 00D1                           ?_USBCheckCDCRequest 002A  
                   i2USBTransferOnePacket@dir 002A                     i2USBTransferOnePacket@len 002D  
                         USBEnableEndpoint@ep 0035                               _endpoint_number 0023  
                         ?_exitLowVoltageICSP 002A                          ?_USBCtrlTrfRxService 002A  
                      ??_enterHighVoltageICSP 00D3                                 ?_getsUSBUSART 00DC  
                        ?i2_SYSTEM_Initialize 002A                      ?_USBCtrlEPAllowDataStage 002A  
                        ?_USBCtrlTrfTxService 002A                  _USBStatusStageTimeoutCounter 0021  
                        ??_USBWakeFromSuspend 003E                    USBTransferOnePacket@handle 00DA  
                        __end_of_CDCTxService 0982                          ??_USBCheckCDCRequest 002A  
                                  _USB_CD_Ptr 0304  
